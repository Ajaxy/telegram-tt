{"version":3,"file":"2394.4ad3723acc675eb5913e.js","mappings":"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MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MAAQ,KAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,KAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MACxF,MAAQ,MAAQ,MAAQ,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","sources":["webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/lib/secret-sauce/utils.ts","webpack://telegram-t/./src/lib/secret-sauce/parseSdp.ts","webpack://telegram-t/./src/lib/secret-sauce/buildSdp.ts","webpack://telegram-t/./src/lib/secret-sauce/blacksilence.ts","webpack://telegram-t/./src/lib/secret-sauce/secretsauce.ts","webpack://telegram-t/./src/lib/secret-sauce/p2p.ts","webpack://telegram-t/./src/global/actions/api/calls.async.ts","webpack://telegram-t/./src/util/phoneCallEmojiConstants.ts","webpack://telegram-t/./src/global/actions/apiUpdaters/calls.async.ts","webpack://telegram-t/./src/components/calls/group/helpers/formatGroupCallVolume.ts","webpack://telegram-t/./src/components/calls/group/GroupCallParticipantMenu.tsx","webpack://telegram-t/./src/hooks/useRunThrottled.ts","webpack://telegram-t/./src/components/calls/group/OutlinedMicrophoneIcon.tsx","webpack://telegram-t/./src/components/calls/group/GroupCallParticipant.module.scss?2375","webpack://telegram-t/./src/components/calls/group/GroupCallParticipant.tsx","webpack://telegram-t/./src/components/calls/group/GroupCallParticipantList.tsx","webpack://telegram-t/./src/components/calls/group/GroupCallParticipantList.module.scss?6462","webpack://telegram-t/./src/components/calls/group/GroupCallParticipantVideo.module.scss?799e","webpack://telegram-t/./src/components/calls/group/GroupCallParticipantVideo.tsx","webpack://telegram-t/./src/util/vibrate.ts","webpack://telegram-t/./src/components/calls/group/MicrophoneButton.module.scss?3a9a","webpack://telegram-t/./src/components/calls/group/MicrophoneButton.tsx","webpack://telegram-t/./src/components/calls/group/GroupCall.module.scss?4417","webpack://telegram-t/./src/components/calls/group/GroupCall.tsx","webpack://telegram-t/./src/components/calls/group/hooks/useGroupCallVideoLayout.ts","webpack://telegram-t/./src/components/calls/ActiveCallHeader.tsx","webpack://telegram-t/./src/components/calls/phone/PhoneCallButton.module.scss?9dea","webpack://telegram-t/./src/components/calls/phone/PhoneCallButton.tsx","webpack://telegram-t/./src/components/calls/phone/PhoneCall.module.scss?a250","webpack://telegram-t/./src/components/calls/phone/PhoneCall.tsx","webpack://telegram-t/./src/components/calls/phone/RatePhoneCallModal.module.scss?64f6","webpack://telegram-t/./src/components/calls/phone/RatePhoneCallModal.tsx","webpack://telegram-t/./src/bundles/calls.ts","webpack://telegram-t/./src/hooks/window/useFullscreen.ts"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): Complete<StateProps> => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","import type { P2PPayloadType } from './p2pMessage';\nimport type { PayloadType } from './types';\n\n/// NOTE: telegram returns sign source, while webrtc uses unsign source internally\n/// unsign => sign\nexport function toTelegramSource(source: number) {\n  // eslint-disable-next-line no-bitwise\n  return source << 0;\n}\n\n/// NOTE: telegram returns sign source, while webrtc uses unsign source internally\n/// sign => unsign\nexport function fromTelegramSource(source: number) {\n  // eslint-disable-next-line no-bitwise\n  return source >>> 0;\n}\n\nexport function getAmplitude(array: Uint8Array, scale = 3) {\n  if (!array) return 0;\n\n  const { length } = array;\n  let total = 0;\n  for (let i = 0; i < length; i++) {\n    total += array[i] * array[i];\n  }\n  const rms = Math.sqrt(total / length) / 255;\n\n  return Math.min(1, rms * scale);\n}\n\nexport function p2pPayloadTypeToConference(p: P2PPayloadType): PayloadType {\n  return {\n    id: p.id,\n    name: p.name,\n    'rtcp-fbs': p.feedbackTypes,\n    clockrate: p.clockrate,\n    parameters: p.parameters,\n    channels: p.channels,\n  };\n}\n\nexport function isRelayAddress(candidate: string) {\n  const parts = candidate.split(' ');\n  return parts.some((part) => part === 'relay');\n}\n\nexport function removeRelatedAddress(candidate: string) {\n  const parts = candidate.split(' ');\n\n  const raddrIndex = parts.indexOf('raddr');\n  if (raddrIndex !== -1) {\n    parts.splice(raddrIndex, 2);\n  }\n\n  const rportIndex = parts.indexOf('rport');\n  if (rportIndex !== -1) {\n    parts.splice(rportIndex, 2);\n  }\n\n  return parts.join(' ');\n}\n\nexport const THRESHOLD = 0.1;\n\nexport const IS_SCREENSHARE_SUPPORTED = 'getDisplayMedia' in (navigator?.mediaDevices || {});\nexport const IS_ECHO_CANCELLATION_SUPPORTED = navigator?.mediaDevices?.getSupportedConstraints().echoCancellation;\n// @ts-ignore\nexport const IS_NOISE_SUPPRESSION_SUPPORTED = navigator?.mediaDevices?.getSupportedConstraints().noiseSuppression;\n","import { toTelegramSource } from './utils';\nimport type { JoinGroupCallPayload, SsrcGroup } from './types';\n\nexport default (sessionDescription: RTCSessionDescriptionInit, isP2p = false): JoinGroupCallPayload => {\n  if (!sessionDescription || !sessionDescription.sdp) {\n    throw Error('Failed parsing SDP: session description is null');\n  }\n\n  const sections = sessionDescription\n    .sdp\n    .split('\\r\\nm=')\n    .map((s, i) => (i === 0 ? s : `m=${s}`))\n    .reduce((acc: Record<string, string[]>, el) => {\n      const name = el.match(/^m=(.+?)\\s/)?.[1] || 'header';\n      acc[acc.hasOwnProperty(name) && name === 'video' ? 'screencast' : name] = el.split('\\r\\n').filter(Boolean);\n      return acc;\n    }, {});\n\n  const lookup = (prefix: string, sectionName?: string) => {\n    if (!sectionName) {\n      return Object.values(sections).map((section) => {\n        return section.find((line) => line.startsWith(prefix))?.substr(prefix.length);\n      }).filter(Boolean)[0];\n    } else {\n      return sections[sectionName]?.find((line) => line.startsWith(prefix))?.substr(prefix.length);\n    }\n  };\n\n  const parseExtmaps = (sectionName: string) => {\n    return sections[sectionName].filter((l) => l.startsWith('a=extmap')).map((l) => {\n      const [, id, uri] = l.match(/extmap:(\\d+)(?:\\/.+)?\\s(.+)/)!;\n      return { id: Number(id), uri };\n    });\n  };\n\n  const parsePayloadTypes = (sectionName: string) => {\n    const payloads = sections[sectionName].filter((l) => l.startsWith('a=rtpmap')).map((l) => {\n      const [, id, data] = l.match(/:(\\d+)\\s(.+)/) || [];\n      const [name, clockrate, channels] = data.split('/');\n      return {\n        id: Number(id), name, clockrate: Number(clockrate), ...(channels && { channels: Number(channels) }),\n      };\n    });\n\n    const fbParams = sections[sectionName].filter((l) => l.startsWith('a=rtcp-fb')).map((l) => {\n      const [, id, data] = l.match(/:(\\d+)\\s(.+)/) || [];\n      const [type, subtype] = data.split(' ');\n      return { id: Number(id), type, subtype: subtype || '' };\n    });\n\n    const parameters = sections[sectionName].filter((l) => l.startsWith('a=fmtp')).map((l) => {\n      const [, id, data] = l.match(/:(\\d+)\\s(.+)/) || [];\n      const d = data?.split(';').reduce((acc: Record<string, string>, q) => {\n        const [name, value] = q.split('=');\n        acc[name] = value;\n        return acc;\n      }, {});\n      if (!d || Object.values(d).some((z) => !z)) return undefined;\n      return { id: Number(id), data: d };\n    }).filter(Boolean);\n\n    return payloads.map((payload) => {\n      const p = parameters.filter((l) => l!.id === payload.id).map((q) => q!.data).reduce((acc, el) => {\n        return Object.assign(acc, el);\n      }, {});\n      const f = fbParams.filter((l) => l.id === payload.id).map((l) => {\n        return {\n          type: l.type,\n          subtype: l.subtype,\n        };\n      });\n\n      return {\n        ...payload,\n        ...(Object.keys(p).length > 0 && { parameters: p }),\n        ...(f.length > 0 && { feedbackTypes: f }),\n      };\n    });\n  };\n\n  const rawSource = lookup('a=ssrc:', 'audio');\n  const sourceAudio = rawSource && Number(rawSource.split(' ')[0]);\n\n  // TODO multiple source groups\n  const rawSourceVideo = lookup('a=ssrc-group:', 'video')?.split(' ') || undefined;\n  const rawSourceScreencast = lookup('a=ssrc-group:', 'screencast')?.split(' ') || undefined;\n\n  if (!rawSourceVideo) {\n    throw Error('Failed parsing SDP: no video ssrc');\n  }\n\n  const [hash, fingerprint] = lookup('a=fingerprint:')?.split(' ') || [];\n\n  const setup = lookup('a=setup:');\n  if (!hash || !fingerprint) {\n    throw Error('Failed parsing SDP: no fingerprint');\n  }\n\n  console.log(sections);\n\n  const ufrag = lookup('a=ice-ufrag:');\n  const pwd = lookup('a=ice-pwd:');\n\n  if (!ufrag || !pwd) {\n    throw Error('Failed parsing SDP: no ICE ufrag or pwd');\n  }\n\n  return {\n    fingerprints: [\n      {\n        fingerprint,\n        hash,\n        setup: isP2p ? setup! : 'active',\n      },\n    ],\n    pwd,\n    ufrag,\n    ...(sourceAudio && { ssrc: toTelegramSource(sourceAudio) }),\n    ...(rawSourceVideo && {\n      'ssrc-groups': [\n        {\n          semantics: rawSourceVideo[0],\n          sources: rawSourceVideo.slice(1, rawSourceVideo.length).map(Number).map(toTelegramSource),\n        },\n        (isP2p && rawSourceScreencast && {\n          semantics: rawSourceScreencast[0],\n          sources: rawSourceScreencast.slice(1, rawSourceScreencast.length).map(Number).map(toTelegramSource),\n        }),\n      ].filter(Boolean) as SsrcGroup[],\n    }),\n    ...(isP2p && {\n      audioExtmap: parseExtmaps('audio'),\n      videoExtmap: parseExtmaps('video'),\n      screencastExtmap: parseExtmaps('screencast'),\n      audioPayloadTypes: parsePayloadTypes('audio'),\n      videoPayloadTypes: parsePayloadTypes('video'),\n      screencastPayloadTypes: parsePayloadTypes('screencast'),\n    }),\n  };\n};\n","import type {\n  Candidate, GroupCallTransport, PayloadType, RTPExtension, SsrcGroup,\n} from './types';\nimport { fromTelegramSource } from './utils';\n\nexport type Conference = {\n  sessionId: number;\n  audioExtensions: RTPExtension[];\n  videoExtensions: RTPExtension[];\n  audioPayloadTypes: PayloadType[];\n  videoPayloadTypes: PayloadType[];\n  ssrcs: Ssrc[];\n  transport: GroupCallTransport;\n};\n\nexport type Ssrc = {\n  userId: string;\n  endpoint: string;\n  mid: string;\n  isMain: boolean;\n  isRemoved?: boolean;\n  isVideo: boolean;\n  isPresentation?: boolean;\n  sourceGroups: SsrcGroup[];\n};\n\nexport default (conference: Conference, isAnswer = false, isPresentation = false, isP2p = false) => {\n  const lines: string[] = [];\n\n  const add = (value: string) => {\n    lines.push(value);\n  };\n\n  const {\n    sessionId,\n    ssrcs,\n    audioExtensions,\n    videoExtensions,\n    audioPayloadTypes,\n    videoPayloadTypes,\n    transport: {\n      ufrag,\n      pwd,\n      fingerprints,\n      candidates,\n    },\n  } = conference;\n\n  // Header\n  add('v=0'); // version\n  add(`o=- ${sessionId} 2 IN IP4 0.0.0.0`); // sessionId, 2=sessionVersion\n  add('s=-'); // name of the session\n  add('t=0 0'); // time when session is valid\n  add('a=ice-options:trickle');\n  add('a=msid-semantic:WMS *');\n  add(`a=group:BUNDLE ${ssrcs.map((ssrc) => ssrc.mid).join(' ')}${isPresentation ? '' : ` ${isP2p ? '3' : '2'}`}`);\n  // ice-lite: is a minimal version of the ICE specification, intended only for servers running on a public IP address\n  if (!isP2p) add('a=ice-lite');\n\n  const addCandidate = (c: Candidate) => {\n    if (c.sdpString) {\n      add(`a=${c.sdpString}`);\n    } else {\n      let str = '';\n      str += 'a=candidate:';\n      str += `${c.foundation} ${c.component} ${c.protocol} ${c.priority} ${c.ip} ${c.port} typ ${c.type}`;\n      if ('rel-addr' in c) {\n        str += ` raddr ${c['rel-addr']} rport ${c['rel-port']}`;\n      }\n      str += ` generation ${c.generation}`;\n      add(str);\n    }\n  };\n\n  const addTransport = () => {\n    add(`a=ice-ufrag:${ufrag}`);\n    add(`a=ice-pwd:${pwd}`);\n    fingerprints.forEach((fingerprint) => {\n      add(`a=fingerprint:${fingerprint.hash} ${fingerprint.fingerprint}`);\n      add(`a=setup:${isP2p ? (fingerprint.setup) : 'passive'}`);\n    });\n\n    candidates.forEach(addCandidate);\n  };\n\n  const addPayloadType = (payloadType: PayloadType) => {\n    const {\n      channels, id, name, clockrate, parameters,\n    } = payloadType;\n\n    const channelsString = channels ? `/${channels}` : '';\n    add(`a=rtpmap:${id} ${name}/${clockrate}${channelsString}`);\n\n    if (parameters) {\n      const parametersString = Object.keys(parameters).map((key) => {\n        return `${key}=${parameters![key]};`;\n      }).join(' ');\n\n      add(`a=fmtp:${id} ${parametersString}`);\n    }\n\n    payloadType['rtcp-fbs']?.forEach((fbParam) => {\n      add(`a=rtcp-fb:${id} ${fbParam.type}${fbParam.subtype ? ` ${fbParam.subtype}` : ''}`);\n    });\n  };\n\n  const addSsrcEntry = (entry: Ssrc) => {\n    const payloadTypes = entry.isVideo ? videoPayloadTypes : audioPayloadTypes;\n\n    const type = entry.isVideo ? 'video' : 'audio';\n    add(`m=${type} ${entry.isMain ? 1 : 0} RTP/SAVPF ${payloadTypes.map((l) => l.id).join(' ')}`);\n    add('c=IN IP4 0.0.0.0');\n    add('b=AS:1300'); // 1300000 / 1000\n    add(`a=mid:${entry.mid}`);\n    add('a=rtcp-mux');\n    payloadTypes.forEach(addPayloadType);\n\n    add('a=rtcp:1 IN IP4 0.0.0.0');\n    if (entry.isVideo) {\n      add('a=rtcp-rsize');\n    }\n\n    (entry.isVideo ? videoExtensions : audioExtensions).forEach(({ id, uri }) => {\n      add(`a=extmap:${id} ${uri}`);\n    });\n\n    if (entry.isRemoved) {\n      add('a=inactive');\n      return;\n    }\n\n    addTransport();\n\n    if (isP2p) {\n      add('a=sendrecv');\n      add('a=bundle-only');\n    } else {\n      if (isAnswer) {\n        add('a=recvonly');\n        return;\n      }\n      if (entry.isMain) {\n        add('a=sendrecv');\n      } else {\n        add('a=sendonly');\n        add('a=bundle-only');\n      }\n    }\n\n    entry.sourceGroups.forEach((sourceGroup) => {\n      if (sourceGroup.semantics) {\n        add(`a=ssrc-group:${sourceGroup.semantics} ${sourceGroup.sources.map(fromTelegramSource).join(' ')}`);\n      }\n      sourceGroup.sources.forEach((ssrcTelegram) => {\n        const ssrc = fromTelegramSource(ssrcTelegram);\n        add(`a=ssrc:${ssrc} cname:${entry.endpoint}`);\n        add(`a=ssrc:${ssrc} msid:${entry.endpoint} ${entry.endpoint}`);\n        add(`a=ssrc:${ssrc} mslabel:${entry.endpoint}`);\n        add(`a=ssrc:${ssrc} label:${entry.endpoint}`);\n      });\n    });\n  };\n\n  if (!isP2p) {\n    ssrcs.filter((ssrc) => ssrc.mid === '0' || ssrc.mid === '1').map(addSsrcEntry);\n  } else {\n    ssrcs.filter(addSsrcEntry);\n  }\n\n  if (!isPresentation) {\n    add('m=application 1 UDP/DTLS/SCTP webrtc-datachannel');\n    add('c=IN IP4 0.0.0.0');\n    addTransport();\n    add('a=ice-options:trickle');\n    add(`a=mid:${isP2p ? '3' : (isPresentation ? '1' : '2')}`);\n    add('a=sctp-port:5000');\n    add('a=max-message-size:262144');\n  }\n\n  if (!isP2p) {\n    ssrcs.filter((ssrc) => ssrc.mid !== '0' && ssrc.mid !== '1').map(addSsrcEntry);\n  }\n\n  return `${lines.join('\\n')}\\n`;\n};\n","// https://blog.mozilla.org/webrtc/warm-up-with-replacetrack/\n\nexport const silence = (ctx: AudioContext) => {\n  const oscillator = ctx.createOscillator();\n  const dst = oscillator.connect(ctx.createMediaStreamDestination());\n  oscillator.start();\n  return new MediaStream([Object.assign((dst as any).stream.getAudioTracks()[0], { enabled: false })]);\n};\n\nexport const black = ({ width = 640, height = 480 } = {}) => {\n  const canvas = Object.assign(document.createElement('canvas'), { width, height });\n  const ctx = canvas.getContext('2d');\n  if (!ctx) throw Error('Cannot create canvas ctx');\n\n  ctx.fillRect(0, 0, width, height);\n  const stream = canvas.captureStream();\n  return new MediaStream([Object.assign(stream.getVideoTracks()[0], { enabled: false })]);\n};\n","import parseSdp from './parseSdp';\nimport { ColibriClass } from './colibriClass';\nimport type {\n  GroupCallConnectionData, GroupCallConnectionState, GroupCallParticipant, JoinGroupCallPayload,\n} from './types';\nimport buildSdp, { Conference, Ssrc } from './buildSdp';\nimport { black, silence } from './blacksilence';\nimport {\n  getAmplitude,\n  IS_ECHO_CANCELLATION_SUPPORTED,\n  IS_NOISE_SUPPRESSION_SUPPORTED,\n  THRESHOLD,\n} from './utils';\nimport Deferred from \"../../util/Deferred\";\nimport safePlay from \"../../util/safePlay\";\n\nexport type StreamType = 'audio' | 'video' | 'presentation';\nconst DEFAULT_MID = 3;\ntype GroupCallState = {\n  connection?: RTCPeerConnection;\n  screenshareConnection?: RTCPeerConnection;\n  dataChannel?: RTCDataChannel;\n  screenshareDataChannel?: RTCDataChannel;\n  participants?: GroupCallParticipant[];\n  conference?: Partial<Conference>;\n  screenshareConference?: Partial<Conference>;\n  streams?: Record<string, {\n    audio?: MediaStream;\n    video?: MediaStream;\n    presentation?: MediaStream;\n  }>;\n  participantFunctions?: Record<string, {\n    setVolume?: (volume: number) => void;\n    toggleMute?: (muted: boolean) => void;\n    getCurrentAmplitude?: () => number;\n  }>;\n  onUpdate?: (...args: any[]) => void;\n  myId?: string;\n  black?: MediaStream;\n  silence?: MediaStream;\n  updatingParticipantsQueue?: any[];\n  facingMode?: VideoFacingModeEnum;\n  isSpeakerDisabled?: boolean;\n  analyserInterval?: number;\n  speaking?: Record<string, number>;\n  audioElement?: HTMLAudioElement;\n  destination?: MediaStreamAudioDestinationNode;\n  audioContext?: AudioContext;\n  mediaStream?: MediaStream;\n  lastMid: number;\n  audioStream?: MediaStream;\n  audioSource?: MediaStreamAudioSourceNode;\n  audioAnalyser?: AnalyserNode;\n};\n\nlet state: GroupCallState | undefined;\n\nexport async function getDevices(streamType: StreamType, isInput = true) {\n  return (await navigator.mediaDevices.enumerateDevices())\n    .filter((l) => l.kind === `${streamType}${isInput ? 'input' : 'output'}`);\n}\n\nexport function toggleSpeaker() {\n  if (!state) {\n    return;\n  }\n\n  state.isSpeakerDisabled = !state.isSpeakerDisabled;\n  state?.onUpdate?.({\n    '@type': 'updateGroupCallConnectionState',\n    connectionState: 'connected',\n    isSpeakerDisabled: state.isSpeakerDisabled,\n  });\n  if (state.participantFunctions) {\n    Object.values(state.participantFunctions).forEach((l) => {\n      l.toggleMute?.(!!state?.isSpeakerDisabled);\n    });\n  }\n}\n\nfunction leavePresentation(isFromToggle?: boolean) {\n  if (!state) {\n    return;\n  }\n  state.screenshareDataChannel?.close();\n  state.screenshareConnection?.close();\n\n  if (!isFromToggle) {\n    state.onUpdate?.({\n      '@type': 'updateGroupCallLeavePresentation',\n    });\n  }\n}\n\nexport function toggleNoiseSuppression() {\n  if (!state || !state.myId || !state.streams) {\n    return;\n  }\n\n  const audioStream = state.streams[state.myId].audio;\n  if (!audioStream) {\n    return;\n  }\n\n  const track = audioStream.getTracks()[0];\n\n  if (!track) {\n    return;\n  }\n\n  // @ts-ignore\n  const { echoCancellation, noiseSuppression } = track.getConstraints();\n\n  track.applyConstraints({\n    echoCancellation: !echoCancellation,\n    // @ts-ignore\n    noiseSuppression: !noiseSuppression,\n  });\n}\n\nexport function getUserStreams(userId: string) {\n  return state?.streams?.[userId];\n}\n\nexport function setVolume(userId: string, volume: number) {\n  const participantFunctions = state?.participantFunctions?.[userId];\n  if (!participantFunctions) return;\n  participantFunctions.setVolume?.(volume);\n}\n\nexport function isStreamEnabled(streamType: StreamType, userId?: string) {\n  const id = userId || state?.myId;\n  const stream = id && getUserStreams(id)?.[streamType];\n  if (!stream) return false;\n\n  return stream.getTracks()[0]?.enabled;\n}\n\nfunction updateGroupCallStreams(userId: string) {\n  state?.onUpdate?.({\n    '@type': 'updateGroupCallStreams',\n    userId,\n    hasAudioStream: isStreamEnabled('audio', userId),\n    hasVideoStream: isStreamEnabled('video', userId),\n    hasPresentationStream: isStreamEnabled('presentation', userId),\n    amplitude: state.speaking?.[userId],\n  });\n}\n\nasync function getUserStream(streamType: StreamType, facing: VideoFacingModeEnum = 'user') {\n  if (streamType === 'audio' && state?.audioStream) {\n    return state.audioStream;\n  }\n\n  if (streamType === 'presentation') {\n    return (navigator.mediaDevices as any).getDisplayMedia({\n      audio: false,\n      video: true,\n    });\n  }\n\n  const media = await navigator.mediaDevices.getUserMedia({\n    audio: streamType === 'audio' ? {\n      // @ts-ignore\n      ...(IS_ECHO_CANCELLATION_SUPPORTED && {echoCancellation: true}),\n      ...(IS_NOISE_SUPPRESSION_SUPPORTED && {noiseSuppression: true}),\n    } : false,\n    video: streamType === 'video' ? {\n      facingMode: facing,\n    } : false,\n  });\n\n  if (state && streamType === 'audio') {\n    state.audioStream = media;\n  }\n\n  if (streamType === 'video') {\n    const vid = document.createElement('video');\n    vid.srcObject = media;\n\n    const deferred = new Deferred();\n    vid.oncanplay = () => deferred.resolve();\n    await deferred.promise;\n  }\n\n  return media;\n}\n\nexport async function switchCameraInput() {\n  if (!state?.myId || !state.connection || !state.streams || !state.facingMode) {\n    return;\n  }\n\n  const stream = getUserStreams(state.myId)?.video;\n\n  if (!stream) return;\n\n  const track = stream.getTracks()[0];\n\n  if (!track) {\n    return;\n  }\n\n  const sender = state.connection.getSenders().find((l) => track.id === l.track?.id);\n\n  if (!sender) {\n    return;\n  }\n\n  state.facingMode = state.facingMode === 'environment' ? 'user' : 'environment';\n  try {\n    const newStream = await getUserStream('video', state.facingMode);\n\n    await sender.replaceTrack(newStream.getTracks()[0]);\n    state.streams[state.myId].video = newStream;\n  } catch (e) {\n\n  }\n}\n\nexport async function toggleStream(streamType: StreamType, value: boolean | undefined = undefined) {\n  if (!state || !state.myId || !state.connection || !state.streams) {\n    return;\n  }\n\n  const stream = getUserStreams(state.myId)?.[streamType];\n  if (!stream) return;\n\n  const track = stream.getTracks()[0];\n\n  if (!track) {\n    return;\n  }\n\n  const sender = [\n    ...state.connection.getSenders(),\n    ...(state.screenshareConnection?.getSenders() || []),\n  ].find((l) => track.id === l.track?.id);\n\n  if (!sender) {\n    return;\n  }\n\n  value = value === undefined ? !track.enabled : value;\n\n  try {\n    if (value && !track.enabled) {\n      const newStream = await getUserStream(streamType);\n      await sender.replaceTrack(newStream.getTracks()[0]);\n      state.streams[state.myId][streamType] = newStream;\n      if (streamType === 'video') {\n        state.facingMode = 'user';\n      } else if (streamType === 'audio') {\n        const { audioContext } = state;\n        if (!audioContext) return;\n        const source = state.audioSource || audioContext.createMediaStreamSource(newStream);\n\n        const analyser = state.audioAnalyser || audioContext.createAnalyser();\n        analyser.minDecibels = -100;\n        analyser.maxDecibels = -30;\n        analyser.smoothingTimeConstant = 0.05;\n        analyser.fftSize = 1024;\n\n        source.connect(analyser);\n\n        state = {\n          ...state,\n          audioSource: source,\n          audioAnalyser: analyser,\n          participantFunctions: {\n            ...state.participantFunctions,\n            [state.myId]: {\n              ...state.participantFunctions?.[state.myId],\n              getCurrentAmplitude: () => {\n                const array = new Uint8Array(analyser.frequencyBinCount);\n                analyser.getByteFrequencyData(array);\n                return getAmplitude(array, 1.5);\n              },\n            },\n          },\n        };\n      }\n    } else if (!value && track.enabled) {\n      const newStream = streamType === 'audio' ? state.silence : state.black;\n      if (!newStream) return;\n\n      await sender.replaceTrack(newStream.getTracks()[0]);\n      state.streams[state.myId][streamType] = newStream;\n      if (streamType === 'video') {\n        state.facingMode = undefined;\n      }\n\n      if(streamType !== 'audio') {\n        // We only want to stop video streams\n        track.stop();\n      } else {\n        state.audioSource?.disconnect();\n        state.audioAnalyser?.disconnect();\n      }\n    }\n    updateGroupCallStreams(state.myId!);\n    if (streamType === 'presentation' && !value) leavePresentation(true);\n  } catch (e) {\n\n  }\n}\n\nfunction updateConnectionState(connectionState: GroupCallConnectionState) {\n  state?.onUpdate?.({\n    '@type': 'updateGroupCallConnectionState',\n    connectionState,\n  });\n}\n\nexport function leaveGroupCall() {\n  if (!state) {\n    return;\n  }\n\n  if (state.myId && state.streams?.[state.myId]) {\n    Object.values(state.streams[state.myId] || {}).forEach((stream) => {\n      stream?.getTracks().forEach((track) => {\n        track.stop();\n      });\n    });\n  }\n\n  state.audioStream?.getTracks().forEach((track) => {\n    track.stop();\n  });\n  leavePresentation(true);\n  state.dataChannel?.close();\n  state.connection?.close();\n  updateConnectionState('disconnected');\n\n  if (state.analyserInterval) {\n    clearInterval(state.analyserInterval);\n  }\n\n  state = undefined;\n}\n\nfunction analyzeAmplitudes() {\n  if (!state || !state.participantFunctions) return;\n\n  Object.keys(state.participantFunctions).forEach((id) => {\n    const { getCurrentAmplitude } = state!.participantFunctions![Number(id)];\n\n    if (getCurrentAmplitude) {\n      const amplitude = getCurrentAmplitude();\n      const prevAmplitude = state!.speaking![id] || 0;\n      state!.speaking![id] = amplitude;\n      if ((amplitude > THRESHOLD && prevAmplitude <= THRESHOLD)\n        || (amplitude <= THRESHOLD && prevAmplitude > THRESHOLD)) {\n        updateGroupCallStreams(id);\n      }\n    }\n  });\n}\n\nfunction createDataChannel(connection: RTCPeerConnection) {\n  const dataChannel = connection.createDataChannel('data', {\n    id: 0,\n  });\n\n  dataChannel.onopen = () => {\n    // console.log('Data channel open!');\n  };\n\n  dataChannel.onmessage = (e) => {\n    // console.log('onmessage');\n    const data = JSON.parse(e.data) as ColibriClass;\n    // console.log(data);\n    switch (data.colibriClass) {\n      case 'DominantSpeakerEndpointChangeEvent':\n        break;\n      case 'SenderVideoConstraints':\n\n        break;\n      case 'EndpointConnectivityStatusChangeEvent':\n\n        break;\n    }\n  };\n\n  dataChannel.onerror = (e) => {\n    console.log('%conerror', 'background: green; font-size: 5em');\n    console.error(e);\n  };\n\n  return dataChannel;\n}\n\nexport async function handleUpdateGroupCallParticipants(updatedParticipants: GroupCallParticipant[]) {\n  if (!state) {\n    return;\n  }\n\n  const {\n    participants, conference, connection, myId,\n  } = state;\n\n  if (!participants || !conference || !connection || !conference.ssrcs || !conference.transport || !myId) {\n    return;\n  }\n\n  // Joined from another client\n  if (updatedParticipants.find((participant) => {\n    return participant.isSelf\n      && participant.source\n      !== state?.conference?.ssrcs?.find((l) => l.isMain && !l.isVideo)?.sourceGroups[0].sources[0];\n  })) {\n    leaveGroupCall();\n    return;\n  }\n\n  const newEndpoints: string[] = [];\n  updatedParticipants.forEach((participant) => {\n    if (participant.isSelf) {\n      if (participant.isMuted && !participant.canSelfUnmute) {\n        // Muted by admin\n        toggleStream('audio', false);\n        toggleStream('video', false);\n        toggleStream('presentation', false);\n      }\n      return;\n    }\n\n    const { isLeft } = participant;\n    const isAudioLeft = participant.isMuted || participant.isMutedByMe;\n    const isVideoLeft = !participant.isVideoJoined || !participant.video || isLeft;\n    const isPresentationLeft = !participant.presentation || isLeft;\n\n    let hasVideo = false;\n    let hasAudio = false;\n    let hasPresentation = false;\n\n    conference.ssrcs!.filter((l) => l.userId === participant.id).forEach((ssrc) => {\n      if (!ssrc.isVideo) {\n        if (ssrc.sourceGroups[0].sources[0] === participant.source) {\n          hasAudio = true;\n        }\n        // console.log('has audio, removed=', isAudioLeft);\n        ssrc.isRemoved = isAudioLeft;\n      }\n\n      if (ssrc.isVideo) {\n        if (!ssrc.isPresentation) {\n          if (!!participant.video && ssrc.endpoint === participant.video.endpoint) {\n            hasVideo = true;\n          }\n          // console.log('has video = ', hasVideo, ' removed=', isVideoLeft);\n          ssrc.isRemoved = isVideoLeft;\n        }\n\n        if (ssrc.isPresentation) {\n          if (!!participant.presentation && ssrc.endpoint === participant.presentation.endpoint) {\n            hasPresentation = true;\n          }\n          // console.log('has presentation, removed=', isPresentationLeft);\n          ssrc.isRemoved = isPresentationLeft;\n        }\n      }\n    });\n\n    if (!isAudioLeft && !hasAudio) {\n      // console.log('add audio');\n      state!.lastMid = state!.lastMid + 1;\n      conference.ssrcs!.push({\n        userId: participant.id,\n        isMain: false,\n        endpoint: `audio${participant.source}`,\n        isVideo: false,\n        sourceGroups: [{\n          sources: [participant.source],\n        }],\n        mid: state!.lastMid.toString()\n      });\n    }\n\n    if (!isVideoLeft && !hasVideo && participant.video) {\n      // console.log('add video', participant.video);\n      state!.lastMid = state!.lastMid + 1;\n\n      newEndpoints.push(participant.video.endpoint);\n      conference.ssrcs!.push({\n        userId: participant.id,\n        isMain: false,\n        endpoint: participant.video.endpoint,\n        isVideo: true,\n        sourceGroups: participant.video.sourceGroups,\n        mid: state!.lastMid.toString()\n      });\n    }\n\n    if (!isPresentationLeft && !hasPresentation && participant.presentation) {\n      // console.log('add presentation');\n      state!.lastMid = state!.lastMid + 1;\n      conference.ssrcs!.push({\n        isPresentation: true,\n        userId: participant.id,\n        isMain: false,\n        endpoint: participant.presentation.endpoint,\n        isVideo: true,\n        sourceGroups: participant.presentation.sourceGroups,\n        mid: state!.lastMid.toString()\n      });\n    }\n  });\n\n  if (state.updatingParticipantsQueue) {\n    state.updatingParticipantsQueue.push(conference);\n    return;\n  } else {\n    state.updatingParticipantsQueue = [];\n  }\n\n  const sdp = buildSdp(conference as Conference);\n  await connection.setRemoteDescription({\n    type: 'offer',\n    sdp,\n  });\n\n  try {\n    const answer = await connection.createAnswer();\n    await connection.setLocalDescription(answer);\n\n    updateGroupCallStreams(myId);\n    if (state.updatingParticipantsQueue.length > 0) {\n      // eslint-disable-next-line no-restricted-syntax\n      for (const newConference of state.updatingParticipantsQueue) {\n        await connection.setRemoteDescription({\n          type: 'offer',\n          sdp: buildSdp(newConference as Conference),\n        });\n        const answerNew = await connection.createAnswer();\n        await connection.setLocalDescription(answerNew);\n        updateGroupCallStreams(myId);\n\n        // if (newEndpoints.length > 0) {\n        //   sendDataChannelMessage({\n        //     colibriClass: 'ReceiverVideoConstraints',\n        //     defaultConstraints: {\n        //       maxHeight: 0,\n        //     },\n        //     constraints: {\n        //       ...(newEndpoints.reduce((acc: Record<string, any>, el) => {\n        //         acc[el] = {\n        //           minHeight: 0,\n        //           maxHeight: 1080,\n        //         };\n        //         return acc;\n        //       }, {})),\n        //     },\n        //     onStageEndpoints: [],\n        //   });\n        // }\n      }\n    }\n    state.updatingParticipantsQueue = undefined;\n  } catch (e) {\n    console.error(e);\n  }\n}\n//\n// function sendDataChannelMessage(message: ColibriClass) {\n//   if (!state || !state.dataChannel || state.dataChannel.readyState !== 'open') {\n//     return;\n//   }\n//\n//   // console.log('SEND!', message);\n//   state.dataChannel.send(JSON.stringify(message));\n// }\n\nexport async function handleUpdateGroupCallConnection(data: GroupCallConnectionData, isPresentation: boolean) {\n  if (!state) {\n    return;\n  }\n\n  const conference = isPresentation ? state.screenshareConference : state.conference;\n  const connection = isPresentation ? state.screenshareConnection : state.connection;\n\n  if (!conference || !connection || !conference.ssrcs) {\n    return;\n  }\n\n  const sessionId = Date.now();\n  const newConference = {\n    ...conference,\n    transport: data.transport,\n    sessionId,\n    audioExtensions: data.audio?.['rtp-hdrexts'],\n    audioPayloadTypes: data.audio?.['payload-types'],\n    videoExtensions: data.video?.['rtp-hdrexts'],\n    videoPayloadTypes: data.video?.['payload-types'],\n  } as Conference;\n\n  state = {\n    ...state,\n    ...(!isPresentation ? { conference: newConference } : { screenshareConference: newConference }),\n  };\n\n  try {\n    await connection.setRemoteDescription({\n      type: 'answer',\n      sdp: buildSdp(newConference, true, isPresentation),\n    });\n\n    // state.resolveTest();\n    // state.test = true;\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nfunction handleTrack(e: RTCTrackEvent) {\n  if (!state || !state.audioElement || !state.audioContext || !state.mediaStream) {\n    return;\n  }\n  const ssrc = state.conference?.ssrcs?.find((l) => l.endpoint === e.track.id);\n  if (!ssrc || !ssrc.userId) {\n    return;\n  }\n\n  const { userId, isPresentation } = ssrc;\n  const participant = state.participants?.find((p) => p.id === userId);\n\n  const streamType = (e.track.kind === 'video' ? (isPresentation ? 'presentation' : 'video') : 'audio') as StreamType;\n\n  e.track.onended = () => {\n    delete state?.streams?.[userId][streamType];\n    updateGroupCallStreams(userId);\n  };\n\n  const stream = e.streams[0];\n\n  if (e.track.kind === 'audio') {\n    const { mediaStream } = state;\n    const audioContext = new (window.AudioContext)();\n    const source = audioContext.createMediaStreamSource(stream);\n\n    const gainNode = audioContext.createGain();\n    gainNode.gain.value = (participant?.volume || 10000) / 10000;\n\n    const muteNode = audioContext.createGain();\n    gainNode.gain.value = 1;\n\n    const analyser = audioContext.createAnalyser();\n    analyser.minDecibels = -100;\n    analyser.maxDecibels = -30;\n    analyser.smoothingTimeConstant = 0.05;\n    analyser.fftSize = 1024;\n\n    source.connect(analyser).connect(muteNode).connect(gainNode).connect(audioContext.destination);\n\n    mediaStream!.addTrack(source.mediaStream.getAudioTracks()[0]);\n\n    // https://stackoverflow.com/questions/41784137/webrtc-doesnt-work-with-audiocontext#comment117600018_41784241\n    const test = new Audio();\n    test.srcObject = stream;\n    // test.srcObject = source.mediaStream;\n    test.muted = true;\n    test.remove();\n\n    state = {\n      ...state,\n      participantFunctions: {\n        ...state.participantFunctions,\n        [userId]: {\n          ...state.participantFunctions?.[userId],\n          setVolume: (volume: number) => {\n            gainNode.gain.value = volume > 1 ? volume * 2 : volume;\n          },\n          toggleMute: (muted?: boolean) => {\n            muteNode.gain.value = muted ? 0 : 1;\n          },\n          getCurrentAmplitude: () => {\n            const array = new Uint8Array(analyser.frequencyBinCount);\n            analyser.getByteFrequencyData(array);\n            return getAmplitude(array, 1.5);\n          },\n        },\n      },\n    };\n  }\n\n  state = {\n    ...state,\n    streams: {\n      ...state.streams,\n      [userId]: {\n        ...state.streams?.[userId],\n        [streamType]: stream,\n      },\n    },\n  };\n\n  updateGroupCallStreams(userId);\n}\n\nfunction initializeConnection(\n  streams: MediaStream[],\n  resolve: (payload: JoinGroupCallPayload) => void,\n  isPresentation = false,\n) {\n  const connection = new RTCPeerConnection();\n\n  const dataChannel = isPresentation ? undefined : createDataChannel(connection);\n\n  streams.forEach((stream) => stream.getTracks().forEach((track) => {\n    connection.addTrack(track, stream);\n  }));\n\n  if (!isPresentation) {\n    connection.oniceconnectionstatechange = () => {\n      const connectionState = connection.iceConnectionState;\n      console.log('iceconnectionstatechange', connectionState);\n      if (connectionState === 'connected' || connectionState === 'completed') {\n        updateConnectionState('connected');\n      } else if (connectionState === 'checking' || connectionState === 'new') {\n        updateConnectionState('connecting');\n      } else if (connection.iceConnectionState === 'disconnected') {\n        updateConnectionState('reconnecting');\n      }\n    };\n  }\n  connection.onconnectionstatechange = () => {\n    console.log('connectionstatechange', connection.connectionState);\n  }\n  connection.ontrack = handleTrack;\n  connection.onnegotiationneeded = async () => {\n    if (!state) return;\n\n    console.log('onnegotiationneeded');\n\n    const { myId } = state;\n\n    if (!myId) {\n      return;\n    }\n    const offer = await connection.createOffer({\n      offerToReceiveVideo: true,\n      offerToReceiveAudio: !isPresentation,\n    });\n    console.log('offer created');\n\n    await connection.setLocalDescription(offer);\n    console.log('local desc set');\n\n    if (!offer.sdp) {\n      return;\n    }\n\n    const sdp = parseSdp(offer);\n    const audioSsrc: Ssrc | undefined = !isPresentation ? {\n      userId: '',\n      sourceGroups: [\n        {\n          sources: [sdp.ssrc || 0],\n        },\n      ],\n      isRemoved: isPresentation,\n      isMain: true,\n      isVideo: false,\n      isPresentation,\n      endpoint: isPresentation ? '1' : '0',\n      mid: isPresentation ? '1' : '0'\n    } : undefined;\n\n    const videoSsrc: Ssrc | undefined = sdp['ssrc-groups'] && {\n      isPresentation,\n      userId: '',\n      sourceGroups: sdp['ssrc-groups'],\n      isMain: true,\n      isVideo: true,\n      endpoint: isPresentation ? '0' : '1',\n      mid: isPresentation ? '0' : '1'\n    };\n\n    const conference = isPresentation ? state.screenshareConference : state.conference;\n\n    const ssrcs: Ssrc[] = [];\n    if (isPresentation) {\n      if (videoSsrc) ssrcs.push(videoSsrc);\n      if (audioSsrc) ssrcs.push(audioSsrc);\n    } else {\n      if (audioSsrc) ssrcs.push(audioSsrc);\n      if (videoSsrc) ssrcs.push(videoSsrc);\n    }\n\n    const audioStream = streams.find((l) => l.getTracks()[0].kind === 'audio');\n    const videoStream = streams.find((l) => l.getTracks()[0].kind === 'video');\n\n    state = {\n      ...state,\n      ...(!isPresentation ? {\n        conference: {\n          ...conference,\n          ssrcs,\n        },\n      } : {\n        screenshareConference: {\n          ...conference,\n          ssrcs,\n        },\n      }),\n      streams: {\n        ...state.streams,\n        [myId]: {\n          ...state.streams?.[myId],\n          ...(audioStream && { audio: audioStream }),\n          ...(!isPresentation && videoStream ? { video: videoStream } : { presentation: videoStream }),\n        },\n      },\n    };\n\n    updateGroupCallStreams(myId);\n\n    resolve(sdp);\n  };\n\n  return { connection, dataChannel };\n}\n\nexport async function startSharingScreen(): Promise<JoinGroupCallPayload | undefined> {\n  if (!state) {\n    return undefined;\n  }\n\n  try {\n    const stream: MediaStream | undefined = await getUserStream('presentation');\n\n    if (!stream) {\n      return undefined;\n    }\n\n    stream.getTracks()[0].onended = () => {\n      if (state && state.myId) {\n        delete state.streams?.[state.myId].presentation;\n        updateGroupCallStreams(state.myId);\n        leavePresentation();\n      }\n    };\n\n    return await new Promise((resolve) => {\n      const { connection, dataChannel } = initializeConnection([stream], resolve, true);\n      state = {\n        ...state!,\n        screenshareConnection: connection,\n        screenshareDataChannel: dataChannel,\n      };\n    });\n  } catch (e) {\n    return undefined;\n  }\n}\n\nexport function joinGroupCall(\n  myId: string,\n  audioContext: AudioContext,\n  audioElement: HTMLAudioElement,\n  onUpdate: (...args: any[]) => void,\n): Promise<JoinGroupCallPayload> {\n  if (state) {\n    throw Error('Already in call');\n  }\n\n  updateConnectionState('connecting');\n\n  const mediaStream = new MediaStream();\n  audioElement.srcObject = mediaStream;\n  safePlay(audioElement);\n\n  state = {\n    onUpdate,\n    participants: [],\n    myId,\n    speaking: {},\n    silence: silence(audioContext),\n    black: black({ width: 640, height: 480 }),\n    // @ts-ignore\n    analyserInterval: setInterval(analyzeAmplitudes, 1000),\n    audioElement,\n    // destination,\n    audioContext,\n    mediaStream,\n    lastMid: DEFAULT_MID,\n  };\n\n  // Prepare microphone\n  getUserStream('audio');\n\n  return new Promise((resolve) => {\n    state = {\n      ...state!,\n      ...initializeConnection([state!.silence!, state!.black!], resolve),\n    };\n  });\n}\n","import { black, silence } from './blacksilence';\nimport type { ApiPhoneCallConnection, P2pParsedSdp } from './types';\nimport parseSdp from './parseSdp';\nimport type { MediaContent, MediaStateMessage, P2pMessage } from './p2pMessage';\nimport {\n  fromTelegramSource,\n  IS_ECHO_CANCELLATION_SUPPORTED,\n  IS_NOISE_SUPPRESSION_SUPPORTED, \n  p2pPayloadTypeToConference,\n} from './utils';\nimport buildSdp, { Conference } from './buildSdp';\nimport { StreamType } from './secretsauce';\n\ntype P2pState = {\n  connection: RTCPeerConnection;\n  dataChannel: RTCDataChannel;\n  emitSignalingData: (data: P2pMessage) => void;\n  onUpdate: (...args: any[]) => void;\n  conference?: Partial<Conference>;\n  isOutgoing: boolean;\n  pendingCandidates: string[];\n  streams: {\n    video?: MediaStream;\n    audio?: MediaStream;\n    presentation?: MediaStream;\n    ownAudio?: MediaStream;\n    ownVideo?: MediaStream;\n    ownPresentation?: MediaStream;\n  };\n  silence: MediaStream;\n  blackVideo: MediaStream;\n  blackPresentation: MediaStream;\n  mediaState: Omit<MediaStateMessage, '@type'>;\n  audio: HTMLAudioElement;\n  gotInitialSetup?: boolean;\n  facingMode?: VideoFacingModeEnum;\n};\n\nlet state: P2pState | undefined;\n\nconst ICE_CANDIDATE_POOL_SIZE = 10;\n\nexport function getStreams() {\n  return state?.streams;\n}\n\nfunction updateStreams() {\n  state?.onUpdate({\n    ...state.mediaState,\n    '@type': 'updatePhoneCallMediaState',\n  });\n}\n\nfunction getUserStream(streamType: StreamType, facing: VideoFacingModeEnum = 'user') {\n  if (streamType === 'presentation') {\n    return (navigator.mediaDevices as any).getDisplayMedia({\n      audio: false,\n      video: true,\n    });\n  }\n\n  return navigator.mediaDevices.getUserMedia({\n    audio: streamType === 'audio' ? {\n      ...(IS_ECHO_CANCELLATION_SUPPORTED && { echoCancellation: true }),\n      ...(IS_NOISE_SUPPRESSION_SUPPORTED && { noiseSuppression: true }),\n    } : false,\n    video: streamType === 'video' ? {\n      facingMode: facing,\n    } : false,\n  });\n}\n\nexport async function switchCameraInputP2p() {\n  if (!state || !state.facingMode) {\n    return;\n  }\n\n  const stream = state.streams.ownVideo;\n\n  if (!stream) return;\n\n  const track = stream.getTracks()[0];\n\n  if (!track) {\n    return;\n  }\n\n  const sender = state.connection.getSenders().find((l) => track.id === l.track?.id);\n\n  if (!sender) {\n    return;\n  }\n\n  state.facingMode = state.facingMode === 'environment' ? 'user' : 'environment';\n  try {\n    const newStream = await getUserStream('video', state.facingMode);\n\n    await sender.replaceTrack(newStream.getTracks()[0]);\n    state.streams.ownVideo = newStream;\n    updateStreams();\n  } catch (e) {\n\n  }\n}\n\nexport async function toggleStreamP2p(streamType: StreamType, value: boolean | undefined = undefined) {\n  if (!state) return;\n  const stream = streamType === 'audio' ? state.streams.ownAudio\n    : (streamType === 'video' ? state.streams.ownVideo : state.streams.ownPresentation);\n\n  if (!stream) return;\n  const track = stream.getTracks()[0];\n\n  if (!track) {\n    return;\n  }\n\n  const sender = state.connection.getSenders().find((l) => track.id === l.track?.id);\n\n  if (!sender) {\n    return;\n  }\n\n  value = value === undefined ? !track.enabled : value;\n\n  try {\n    if (value && !track.enabled) {\n      const newStream = await getUserStream(streamType);\n      newStream.getTracks()[0].onended = () => {\n        toggleStreamP2p(streamType, false);\n      };\n      await sender.replaceTrack(newStream.getTracks()[0]);\n      if (streamType === 'audio') {\n        state.streams.ownAudio = newStream;\n      } else if (streamType === 'video') {\n        state.streams.ownVideo = newStream;\n        state.facingMode = 'user';\n      } else {\n        state.streams.ownPresentation = newStream;\n      }\n      if (streamType === 'video' || streamType === 'presentation') {\n        toggleStreamP2p(streamType === 'video' ? 'presentation' : 'video', false);\n      }\n      // if (streamType === 'video') {\n      //   state.facingMode = 'user';\n      // }\n    } else if (!value && track.enabled) {\n      track.stop();\n      const newStream = streamType === 'audio' ? state.silence\n        : (streamType === 'video' ? state.blackVideo : state.blackPresentation);\n      if (!newStream) return;\n\n      await sender.replaceTrack(newStream.getTracks()[0]);\n\n      if (streamType === 'audio') {\n        state.streams.ownAudio = newStream;\n      } else if (streamType === 'video') {\n        state.streams.ownVideo = newStream;\n      } else {\n        state.streams.ownPresentation = newStream;\n      }\n      // if (streamType === 'video') {\n      //   state.facingMode = undefined;\n      // }\n    }\n    updateStreams();\n    sendMediaState();\n  } catch (err) {\n    console.error(err)\n  }\n}\n\nexport async function joinPhoneCall(\n  connections: ApiPhoneCallConnection[],\n  emitSignalingData: (data: P2pMessage) => void,\n  isOutgoing: boolean,\n  shouldStartVideo: boolean,\n  isP2p: boolean,\n  onUpdate: (...args: any[]) => void,\n) {\n  const conn = new RTCPeerConnection({\n    iceServers: connections.map((connection) => (\n      {\n        urls: [\n          connection.isTurn && `turn:${connection.ip}:${connection.port}`,\n          connection.isStun && `stun:${connection.ip}:${connection.port}`,\n        ].filter(Boolean),\n        username: connection.username,\n        credentialType: 'password',\n        credential: connection.password,\n      }\n    )),\n    iceTransportPolicy: isP2p ? 'all' : 'relay',\n    bundlePolicy: 'max-bundle',\n    iceCandidatePoolSize: ICE_CANDIDATE_POOL_SIZE,\n  });\n\n  conn.onicecandidate = (e) => {\n    if (!e.candidate) {\n      return;\n    };\n    emitSignalingData({\n      '@type': 'Candidates',\n      candidates: [{\n        sdpString: e.candidate.candidate,\n      }],\n    });\n  };\n\n  conn.onconnectionstatechange = () => {\n    onUpdate({\n      '@type': 'updatePhoneCallConnectionState',\n      connectionState: conn.connectionState,\n    });\n  };\n\n  conn.ontrack = (e) => {\n    if (!state) return;\n\n    const stream = e.streams[0];\n    if (e.track.kind === 'audio') {\n      state.audio.srcObject = stream;\n      state.audio.play().catch();\n      state.streams.audio = stream;\n    } else if (e.transceiver.mid === '1') {\n      state.streams.video = stream;\n    } else {\n      state.streams.presentation = stream;\n    }\n\n    updateStreams();\n  };\n\n  conn.oniceconnectionstatechange = async (e) => {\n    switch(conn.iceConnectionState) {\n      case 'disconnected':\n      case 'failed':\n        if (isOutgoing) {\n          await createOffer(conn, {\n            offerToReceiveAudio: true,\n            offerToReceiveVideo: true,\n            iceRestart: true,\n          });\n        }\n      default:\n        break;\n    }\n  }\n\n  const slnc = silence(new AudioContext());\n  const video = black({ width: 640, height: 480 });\n  const screenshare = black({ width: 640, height: 480 });\n  conn.addTrack(slnc.getTracks()[0], slnc);\n  conn.addTrack(video.getTracks()[0], video);\n  conn.addTrack(screenshare.getTracks()[0], screenshare);\n\n  const dc = conn.createDataChannel('data', {\n    id: 0,\n    negotiated: true,\n  });\n\n  dc.onmessage = (e) => {\n    processSignalingMessage(JSON.parse(e.data));\n  };\n\n  const audio = new Audio();\n\n  state = {\n    audio,\n    connection: conn,\n    emitSignalingData,\n    isOutgoing,\n    pendingCandidates: [],\n    onUpdate,\n    streams: {\n      ownVideo: video,\n      ownAudio: slnc,\n      ownPresentation: screenshare,\n    },\n    mediaState: {\n      isBatteryLow: false,\n      screencastState: 'inactive',\n      videoState: 'inactive',\n      videoRotation: 0,\n      isMuted: true,\n    },\n    blackVideo: video,\n    blackPresentation: screenshare,\n    silence: slnc,\n    dataChannel: dc,\n  };\n\n  try {\n    toggleStreamP2p('audio', true);\n  } catch (err) {\n    console.error(err)\n  }\n\n  if (isOutgoing) {\n    await createOffer(conn, {\n      offerToReceiveAudio: true,\n      offerToReceiveVideo: true,\n    })\n  }\n}\n\nexport function stopPhoneCall() {\n  if (!state) return;\n\n  state.streams.ownVideo?.getTracks().forEach((track) => track.stop());\n  state.streams.ownPresentation?.getTracks().forEach((track) => track.stop());\n  state.streams.ownAudio?.getTracks().forEach((track) => track.stop());\n  state.dataChannel.close();\n  state.connection.close();\n  state = undefined;\n}\n\nfunction sendMediaState() {\n  if (!state) return;\n  const { emitSignalingData, streams } = state;\n\n  emitSignalingData({\n    '@type': 'MediaState',\n    videoRotation: 0,\n    isMuted: !streams.ownAudio?.getTracks()[0].enabled,\n    isBatteryLow: true,\n    videoState: streams.ownVideo?.getTracks()[0].enabled ? 'active' : 'inactive',\n    screencastState: streams.ownPresentation?.getTracks()[0].enabled ? 'active' : 'inactive',\n  });\n}\n\nfunction filterVP8(mediaContent: MediaContent) {\n  if (!state || state.isOutgoing) return mediaContent;\n\n  const { payloadTypes } = mediaContent!;\n  const idx = payloadTypes.findIndex((payloadType) => payloadType.name === 'VP8');\n  const vp8PayloadType = payloadTypes[idx];\n  const rtxIdx = payloadTypes.findIndex((payloadType) => Number(payloadType.parameters?.apt) === vp8PayloadType.id);\n  mediaContent.payloadTypes = [payloadTypes[idx], payloadTypes[rtxIdx]];\n\n  return mediaContent;\n}\n\nfunction sendInitialSetup(sdp: P2pParsedSdp) {\n  if (!state) return;\n  const { emitSignalingData } = state;\n\n  if (!sdp.ssrc || !sdp['ssrc-groups'] || !sdp['ssrc-groups'][0] || !sdp['ssrc-groups'][1]) return;\n\n  emitSignalingData({\n    '@type': 'InitialSetup',\n    fingerprints: sdp.fingerprints,\n    ufrag: sdp.ufrag,\n    pwd: sdp.pwd,\n    audio: {\n      ssrc: fromTelegramSource(sdp.ssrc).toString(),\n      ssrcGroups: [],\n      payloadTypes: sdp.audioPayloadTypes,\n      rtpExtensions: sdp.audioExtmap,\n    },\n    video: filterVP8({\n      ssrc: fromTelegramSource(sdp['ssrc-groups'][0].sources[0]).toString(),\n      ssrcGroups: [{\n        semantics: sdp['ssrc-groups'][0].semantics,\n        ssrcs: sdp['ssrc-groups'][0].sources.map(fromTelegramSource),\n      }],\n      payloadTypes: sdp.videoPayloadTypes,\n      rtpExtensions: sdp.videoExtmap,\n    }),\n    screencast: filterVP8({\n      ssrc: fromTelegramSource(sdp['ssrc-groups'][1].sources[0]).toString(),\n      ssrcGroups: [{\n        semantics: sdp['ssrc-groups'][1].semantics,\n        ssrcs: sdp['ssrc-groups'][1].sources.map(fromTelegramSource),\n      }],\n      payloadTypes: sdp.screencastPayloadTypes,\n      rtpExtensions: sdp.screencastExtmap,\n    }),\n  });\n}\n\nexport async function processSignalingMessage(message: P2pMessage) {\n  if (!state || !state.connection) return;\n\n  switch (message['@type']) {\n    case 'MediaState': {\n      state.mediaState = message;\n      updateStreams();\n      sendMediaState();\n      break;\n    }\n    case 'Candidates': {\n      const { pendingCandidates, gotInitialSetup } = state;\n      message.candidates.forEach((candidate) => {\n        pendingCandidates.push(candidate.sdpString);\n      });\n      if (gotInitialSetup) {\n        await commitPendingIceCandidates();\n      }\n      break;\n    }\n    case 'InitialSetup': {\n      const {\n        connection, isOutgoing,\n      } = state;\n      if (!connection) return;\n\n      const newConference = {\n        transport: {\n          candidates: [],\n          ufrag: message.ufrag,\n          pwd: message.pwd,\n          fingerprints: message.fingerprints,\n          'rtcp-mux': false,\n          xmlns: '',\n        },\n        sessionId: Date.now(),\n        ssrcs: [\n          message.audio && {\n            isVideo: false,\n            isMain: false,\n            userId: '123',\n            endpoint: '0',\n            mid: '0',\n            sourceGroups: [{\n              sources: [message.audio.ssrc],\n            }],\n          },\n          message.video && {\n            isVideo: true,\n            isPresentation: false,\n            isMain: false,\n            userId: '123',\n            endpoint: '1',\n            mid: '1',\n            sourceGroups: message.video.ssrcGroups.map((l) => ({\n              semantics: l.semantics,\n              sources: l.ssrcs,\n            })),\n          },\n          message.screencast && {\n            isVideo: true,\n            isPresentation: true,\n            isMain: false,\n            userId: '123',\n            endpoint: '2',\n            mid: '2',\n            sourceGroups: message.screencast.ssrcGroups.map((l) => ({\n              semantics: l.semantics,\n              sources: l.ssrcs,\n            })),\n          },\n        ],\n        audioPayloadTypes: message.audio!.payloadTypes?.map(p2pPayloadTypeToConference) || [],\n        audioExtensions: message.audio!.rtpExtensions,\n        videoPayloadTypes: filterVP8(message.video!).payloadTypes?.map(p2pPayloadTypeToConference) || [],\n        videoExtensions: message.video!.rtpExtensions,\n      } as Conference;\n\n      await connection.setRemoteDescription({\n        sdp: buildSdp(newConference, isOutgoing, undefined, true),\n        type: isOutgoing ? 'answer' : 'offer',\n      });\n\n      state.conference = newConference;\n\n      if (!isOutgoing) {\n        const answer = await connection.createAnswer();\n        await connection.setLocalDescription(answer);\n        sendInitialSetup(parseSdp(connection.localDescription!, true) as P2pParsedSdp);\n      }\n      state.gotInitialSetup = true;\n      await commitPendingIceCandidates();\n      break;\n    }\n  }\n}\n\nasync function commitPendingIceCandidates() {\n  if (!state) {\n    return;\n  }\n  const { pendingCandidates, connection } = state;\n  if (!pendingCandidates.length) {\n    return;\n  }\n  await Promise.all(pendingCandidates.map((c) => tryAddCandidate(connection, c)));\n  state.pendingCandidates = [];\n}\n\nasync function tryAddCandidate(connection: RTCPeerConnection, candidate: string) {\n  try {\n    await connection.addIceCandidate({\n      candidate,\n      sdpMLineIndex: 0,\n    })\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nasync function createOffer(conn: RTCPeerConnection, params: RTCOfferOptions) {\n  const offer = await conn.createOffer(params);\n  await conn.setLocalDescription(offer);\n  sendInitialSetup(parseSdp(conn.localDescription!, true) as P2pParsedSdp);\n}\n","import type { ActionReturnType } from '../../types';\n\nimport { GROUP_CALL_VOLUME_MULTIPLIER } from '../../../config';\nimport {\n  isStreamEnabled,\n  joinGroupCall,\n  leaveGroupCall,\n  setVolume, startSharingScreen,\n  stopPhoneCall,\n  toggleStream,\n} from '../../../lib/secret-sauce';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { callApi } from '../../../api/gramjs';\nimport { addActionHandler, getGlobal, setGlobal } from '../../index';\nimport {\n  removeGroupCall,\n  updateActiveGroupCall,\n} from '../../reducers/calls';\nimport { updateTabState } from '../../reducers/tabs';\nimport { selectChat, selectTabState, selectUser } from '../../selectors';\nimport {\n  selectActiveGroupCall, selectPhoneCallUser,\n} from '../../selectors/calls';\nimport { getGroupCallAudioContext, getGroupCallAudioElement, removeGroupCallAudioElement } from '../ui/calls';\nimport { loadFullChat } from './chats';\n\nconst HANG_UP_UI_DELAY = 500;\n\naddActionHandler('leaveGroupCall', async (global, actions, payload): Promise<void> => {\n  const {\n    isFromLibrary, shouldDiscard, shouldRemove, rejoin,\n    isPageUnload, tabId = getCurrentTabId(),\n  } = payload || {};\n\n  const groupCall = selectActiveGroupCall(global);\n  if (!groupCall) {\n    return;\n  }\n\n  global = updateActiveGroupCall(global, { connectionState: 'disconnected' }, groupCall.participantsCount - 1);\n  global = {\n    ...global,\n    groupCalls: {\n      ...global.groupCalls,\n      activeGroupCallId: undefined,\n    },\n  };\n  setGlobal(global);\n\n  await callApi('leaveGroupCall', {\n    call: groupCall, isPageUnload,\n  });\n  await callApi('abortRequestGroup', 'call');\n\n  if (shouldDiscard) {\n    await callApi('discardGroupCall', {\n      call: groupCall,\n    });\n  }\n\n  global = getGlobal();\n  if (shouldRemove) {\n    global = removeGroupCall(global, groupCall.id);\n  }\n\n  removeGroupCallAudioElement();\n\n  setGlobal(global);\n\n  actions.toggleGroupCallPanel({ force: undefined, tabId });\n\n  if (!isFromLibrary) {\n    leaveGroupCall();\n  }\n\n  actions.afterHangUp();\n\n  if (rejoin) {\n    actions.requestMasterAndJoinGroupCall({\n      ...rejoin,\n      tabId,\n    });\n  }\n});\n\naddActionHandler('toggleGroupCallVideo', async (global): Promise<void> => {\n  const groupCall = selectActiveGroupCall(global);\n  const user = selectUser(global, global.currentUserId!);\n  if (!user || !groupCall) {\n    return;\n  }\n\n  await toggleStream('video');\n\n  await callApi('editGroupCallParticipant', {\n    call: groupCall,\n    videoStopped: !isStreamEnabled('video'),\n    participant: user,\n  });\n});\n\naddActionHandler('requestToSpeak', (global, actions, payload): ActionReturnType => {\n  const { value } = payload || { value: true };\n  const groupCall = selectActiveGroupCall(global);\n  const user = selectUser(global, global.currentUserId!);\n  if (!user || !groupCall) {\n    return;\n  }\n\n  void callApi('editGroupCallParticipant', {\n    call: groupCall,\n    raiseHand: value,\n    participant: user,\n  });\n});\n\naddActionHandler('setGroupCallParticipantVolume', (global, actions, payload): ActionReturnType => {\n  const { participantId, volume } = payload;\n\n  const groupCall = selectActiveGroupCall(global);\n  const user = selectUser(global, participantId);\n  if (!user || !groupCall) {\n    return;\n  }\n\n  setVolume(participantId, Math.floor(volume / GROUP_CALL_VOLUME_MULTIPLIER) / 100);\n\n  void callApi('editGroupCallParticipant', {\n    call: groupCall,\n    volume: Number(volume),\n    participant: user,\n  });\n});\n\naddActionHandler('toggleGroupCallMute', async (global, actions, payload): Promise<void> => {\n  const { participantId, value } = payload || {};\n  const groupCall = selectActiveGroupCall(global);\n  const user = selectUser(global, participantId || global.currentUserId!);\n  if (!user || !groupCall) {\n    return;\n  }\n\n  const muted = value === undefined ? isStreamEnabled('audio', user.id) : value;\n\n  if (!participantId) {\n    await toggleStream('audio');\n  } else {\n    setVolume(participantId, muted ? 0 : 1);\n  }\n\n  await callApi('editGroupCallParticipant', {\n    call: groupCall,\n    muted,\n    participant: user,\n  });\n});\n\naddActionHandler('toggleGroupCallPresentation', async (global, actions, payload): Promise<void> => {\n  const groupCall = selectActiveGroupCall(global);\n  const user = selectUser(global, global.currentUserId!);\n  if (!user || !groupCall) {\n    return;\n  }\n\n  const value = payload?.value !== undefined ? payload?.value : !isStreamEnabled('presentation');\n  if (value) {\n    const params = await startSharingScreen();\n    if (!params) {\n      return;\n    }\n\n    await callApi('joinGroupCallPresentation', {\n      call: groupCall,\n      params,\n    });\n  } else {\n    await toggleStream('presentation', false);\n    await callApi('leaveGroupCallPresentation', {\n      call: groupCall,\n    });\n  }\n\n  await callApi('editGroupCallParticipant', {\n    call: groupCall,\n    presentationPaused: !isStreamEnabled('presentation'),\n    participant: user,\n  });\n});\n\naddActionHandler('connectToActiveGroupCall', async (global, actions, payload): Promise<void> => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const groupCall = selectActiveGroupCall(global);\n  if (!groupCall) return;\n\n  if (groupCall.connectionState === 'discarded') {\n    actions.showNotification({ message: 'This voice chat is not active', tabId });\n    return;\n  }\n\n  const audioElement = getGroupCallAudioElement();\n  const audioContext = getGroupCallAudioContext();\n\n  if (!audioElement || !audioContext) {\n    return;\n  }\n\n  const {\n    currentUserId,\n  } = global;\n\n  if (!currentUserId) return;\n\n  const params = await joinGroupCall(currentUserId, audioContext, audioElement, actions.apiUpdate);\n\n  const result = await callApi('joinGroupCall', {\n    call: groupCall,\n    params,\n    inviteHash: groupCall.inviteHash,\n  });\n\n  global = getGlobal();\n\n  if (!result) {\n    actions.showNotification({\n      // TODO[lang] Localize error message\n      message: 'Failed to join voice chat',\n      tabId,\n    });\n    actions.leaveGroupCall({ tabId });\n    return;\n  }\n\n  actions.loadMoreGroupCallParticipants();\n\n  if (groupCall.chatId) {\n    global = getGlobal();\n    const chat = selectChat(global, groupCall.chatId);\n    if (!chat) return;\n    await loadFullChat(global, actions, chat);\n  }\n});\n\naddActionHandler('connectToActivePhoneCall', async (global, actions): Promise<void> => {\n  const { phoneCall } = global;\n\n  if (!phoneCall) return;\n\n  const user = selectPhoneCallUser(global);\n\n  if (!user) return;\n\n  const dhConfig = await callApi('getDhConfig');\n\n  if (!dhConfig) return;\n\n  await callApi('createPhoneCallState', [true]);\n\n  const gAHash = await callApi('requestPhoneCall', [dhConfig]);\n\n  const result = await callApi('requestCall', { user, gAHash, isVideo: phoneCall.isVideo });\n\n  if (!result) {\n    if ('hangUp' in actions) actions.hangUp({ tabId: getCurrentTabId() });\n  }\n});\n\naddActionHandler('acceptCall', async (global): Promise<void> => {\n  const { phoneCall } = global;\n\n  if (!phoneCall) return;\n\n  const dhConfig = await callApi('getDhConfig');\n  if (!dhConfig) return;\n\n  await callApi('createPhoneCallState', [false]);\n\n  const gB = await callApi('acceptPhoneCall', [dhConfig]);\n  await callApi('acceptCall', { call: phoneCall, gB });\n});\n\naddActionHandler('sendSignalingData', (global, actions, payload): ActionReturnType => {\n  const { phoneCall } = global;\n  if (!phoneCall) {\n    return;\n  }\n\n  const data = JSON.stringify(payload);\n\n  (async () => {\n    const encodedData = await callApi('encodePhoneCallData', [data]);\n\n    if (!encodedData) return;\n\n    callApi('sendSignalingData', { data: encodedData, call: phoneCall });\n  })();\n});\n\naddActionHandler('closeCallRatingModal', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    ratingPhoneCall: undefined,\n  }, tabId);\n});\n\naddActionHandler('setCallRating', (global, actions, payload): ActionReturnType => {\n  const { rating, comment, tabId = getCurrentTabId() } = payload;\n\n  const { ratingPhoneCall } = selectTabState(global, tabId);\n  if (!ratingPhoneCall) {\n    return undefined;\n  }\n\n  callApi('setCallRating', { call: ratingPhoneCall, rating, comment });\n\n  return updateTabState(global, {\n    ratingPhoneCall: undefined,\n  }, tabId);\n});\n\naddActionHandler('hangUp', (global, actions, payload): ActionReturnType => {\n  const { isPageUnload, tabId = getCurrentTabId() } = payload || {};\n  const { phoneCall } = global;\n\n  if (!phoneCall) return undefined;\n\n  if (phoneCall.state === 'discarded') {\n    callApi('destroyPhoneCallState');\n    stopPhoneCall();\n\n    global = {\n      ...global,\n      phoneCall: undefined,\n    };\n    setGlobal(global);\n    actions.toggleGroupCallPanel({ force: undefined, tabId });\n\n    actions.afterHangUp();\n\n    return undefined;\n  }\n\n  callApi('destroyPhoneCallState');\n  stopPhoneCall();\n  callApi('discardCall', { call: phoneCall, isPageUnload });\n\n  if (phoneCall.state === 'requesting') {\n    global = {\n      ...global,\n      phoneCall: undefined,\n    };\n    setGlobal(global);\n    actions.toggleGroupCallPanel({ force: undefined, tabId });\n\n    actions.afterHangUp();\n\n    return undefined;\n  }\n\n  setTimeout(() => {\n    global = getGlobal();\n    global = {\n      ...global,\n      phoneCall: undefined,\n    };\n    setGlobal(global);\n\n    actions.toggleGroupCallPanel({ force: undefined, tabId });\n    actions.afterHangUp();\n  }, HANG_UP_UI_DELAY);\n\n  return undefined;\n});\n","export const EMOJI_DATA = new Uint16Array([\n  0xd83d, 0xde09, 0xd83d, 0xde0d, 0xd83d, 0xde1b, 0xd83d, 0xde2d, 0xd83d, 0xde31, 0xd83d, 0xde21,\n  0xd83d, 0xde0e, 0xd83d, 0xde34, 0xd83d, 0xde35, 0xd83d, 0xde08, 0xd83d, 0xde2c, 0xd83d, 0xde07,\n  0xd83d, 0xde0f, 0xd83d, 0xdc6e, 0xd83d, 0xdc77, 0xd83d, 0xdc82, 0xd83d, 0xdc76, 0xd83d, 0xdc68,\n  0xd83d, 0xdc69, 0xd83d, 0xdc74, 0xd83d, 0xdc75, 0xd83d, 0xde3b, 0xd83d, 0xde3d, 0xd83d, 0xde40,\n  0xd83d, 0xdc7a, 0xd83d, 0xde48, 0xd83d, 0xde49, 0xd83d, 0xde4a, 0xd83d, 0xdc80, 0xd83d, 0xdc7d,\n  0xd83d, 0xdca9, 0xd83d, 0xdd25, 0xd83d, 0xdca5, 0xd83d, 0xdca4, 0xd83d, 0xdc42, 0xd83d, 0xdc40,\n  0xd83d, 0xdc43, 0xd83d, 0xdc45, 0xd83d, 0xdc44, 0xd83d, 0xdc4d, 0xd83d, 0xdc4e, 0xd83d, 0xdc4c,\n  0xd83d, 0xdc4a, 0x270c, 0x270b, 0xd83d, 0xdc50, 0xd83d, 0xdc46, 0xd83d, 0xdc47, 0xd83d, 0xdc49,\n  0xd83d, 0xdc48, 0xd83d, 0xde4f, 0xd83d, 0xdc4f, 0xd83d, 0xdcaa, 0xd83d, 0xdeb6, 0xd83c, 0xdfc3,\n  0xd83d, 0xdc83, 0xd83d, 0xdc6b, 0xd83d, 0xdc6a, 0xd83d, 0xdc6c, 0xd83d, 0xdc6d, 0xd83d, 0xdc85,\n  0xd83c, 0xdfa9, 0xd83d, 0xdc51, 0xd83d, 0xdc52, 0xd83d, 0xdc5f, 0xd83d, 0xdc5e, 0xd83d, 0xdc60,\n  0xd83d, 0xdc55, 0xd83d, 0xdc57, 0xd83d, 0xdc56, 0xd83d, 0xdc59, 0xd83d, 0xdc5c, 0xd83d, 0xdc53,\n  0xd83c, 0xdf80, 0xd83d, 0xdc84, 0xd83d, 0xdc9b, 0xd83d, 0xdc99, 0xd83d, 0xdc9c, 0xd83d, 0xdc9a,\n  0xd83d, 0xdc8d, 0xd83d, 0xdc8e, 0xd83d, 0xdc36, 0xd83d, 0xdc3a, 0xd83d, 0xdc31, 0xd83d, 0xdc2d,\n  0xd83d, 0xdc39, 0xd83d, 0xdc30, 0xd83d, 0xdc38, 0xd83d, 0xdc2f, 0xd83d, 0xdc28, 0xd83d, 0xdc3b,\n  0xd83d, 0xdc37, 0xd83d, 0xdc2e, 0xd83d, 0xdc17, 0xd83d, 0xdc34, 0xd83d, 0xdc11, 0xd83d, 0xdc18,\n  0xd83d, 0xdc3c, 0xd83d, 0xdc27, 0xd83d, 0xdc25, 0xd83d, 0xdc14, 0xd83d, 0xdc0d, 0xd83d, 0xdc22,\n  0xd83d, 0xdc1b, 0xd83d, 0xdc1d, 0xd83d, 0xdc1c, 0xd83d, 0xdc1e, 0xd83d, 0xdc0c, 0xd83d, 0xdc19,\n  0xd83d, 0xdc1a, 0xd83d, 0xdc1f, 0xd83d, 0xdc2c, 0xd83d, 0xdc0b, 0xd83d, 0xdc10, 0xd83d, 0xdc0a,\n  0xd83d, 0xdc2b, 0xd83c, 0xdf40, 0xd83c, 0xdf39, 0xd83c, 0xdf3b, 0xd83c, 0xdf41, 0xd83c, 0xdf3e,\n  0xd83c, 0xdf44, 0xd83c, 0xdf35, 0xd83c, 0xdf34, 0xd83c, 0xdf33, 0xd83c, 0xdf1e, 0xd83c, 0xdf1a,\n  0xd83c, 0xdf19, 0xd83c, 0xdf0e, 0xd83c, 0xdf0b, 0x26a1, 0x2614, 0x2744, 0x26c4, 0xd83c, 0xdf00,\n  0xd83c, 0xdf08, 0xd83c, 0xdf0a, 0xd83c, 0xdf93, 0xd83c, 0xdf86, 0xd83c, 0xdf83, 0xd83d, 0xdc7b,\n  0xd83c, 0xdf85, 0xd83c, 0xdf84, 0xd83c, 0xdf81, 0xd83c, 0xdf88, 0xd83d, 0xdd2e, 0xd83c, 0xdfa5,\n  0xd83d, 0xdcf7, 0xd83d, 0xdcbf, 0xd83d, 0xdcbb, 0x260e, 0xd83d, 0xdce1, 0xd83d, 0xdcfa, 0xd83d,\n  0xdcfb, 0xd83d, 0xdd09, 0xd83d, 0xdd14, 0x23f3, 0x23f0, 0x231a, 0xd83d, 0xdd12, 0xd83d, 0xdd11,\n  0xd83d, 0xdd0e, 0xd83d, 0xdca1, 0xd83d, 0xdd26, 0xd83d, 0xdd0c, 0xd83d, 0xdd0b, 0xd83d, 0xdebf,\n  0xd83d, 0xdebd, 0xd83d, 0xdd27, 0xd83d, 0xdd28, 0xd83d, 0xdeaa, 0xd83d, 0xdeac, 0xd83d, 0xdca3,\n  0xd83d, 0xdd2b, 0xd83d, 0xdd2a, 0xd83d, 0xdc8a, 0xd83d, 0xdc89, 0xd83d, 0xdcb0, 0xd83d, 0xdcb5,\n  0xd83d, 0xdcb3, 0x2709, 0xd83d, 0xdceb, 0xd83d, 0xdce6, 0xd83d, 0xdcc5, 0xd83d, 0xdcc1, 0x2702,\n  0xd83d, 0xdccc, 0xd83d, 0xdcce, 0x2712, 0x270f, 0xd83d, 0xdcd0, 0xd83d, 0xdcda, 0xd83d, 0xdd2c,\n  0xd83d, 0xdd2d, 0xd83c, 0xdfa8, 0xd83c, 0xdfac, 0xd83c, 0xdfa4, 0xd83c, 0xdfa7, 0xd83c, 0xdfb5,\n  0xd83c, 0xdfb9, 0xd83c, 0xdfbb, 0xd83c, 0xdfba, 0xd83c, 0xdfb8, 0xd83d, 0xdc7e, 0xd83c, 0xdfae,\n  0xd83c, 0xdccf, 0xd83c, 0xdfb2, 0xd83c, 0xdfaf, 0xd83c, 0xdfc8, 0xd83c, 0xdfc0, 0x26bd, 0x26be,\n  0xd83c, 0xdfbe, 0xd83c, 0xdfb1, 0xd83c, 0xdfc9, 0xd83c, 0xdfb3, 0xd83c, 0xdfc1, 0xd83c, 0xdfc7,\n  0xd83c, 0xdfc6, 0xd83c, 0xdfca, 0xd83c, 0xdfc4, 0x2615, 0xd83c, 0xdf7c, 0xd83c, 0xdf7a, 0xd83c,\n  0xdf77, 0xd83c, 0xdf74, 0xd83c, 0xdf55, 0xd83c, 0xdf54, 0xd83c, 0xdf5f, 0xd83c, 0xdf57, 0xd83c,\n  0xdf71, 0xd83c, 0xdf5a, 0xd83c, 0xdf5c, 0xd83c, 0xdf61, 0xd83c, 0xdf73, 0xd83c, 0xdf5e, 0xd83c,\n  0xdf69, 0xd83c, 0xdf66, 0xd83c, 0xdf82, 0xd83c, 0xdf70, 0xd83c, 0xdf6a, 0xd83c, 0xdf6b, 0xd83c,\n  0xdf6d, 0xd83c, 0xdf6f, 0xd83c, 0xdf4e, 0xd83c, 0xdf4f, 0xd83c, 0xdf4a, 0xd83c, 0xdf4b, 0xd83c,\n  0xdf52, 0xd83c, 0xdf47, 0xd83c, 0xdf49, 0xd83c, 0xdf53, 0xd83c, 0xdf51, 0xd83c, 0xdf4c, 0xd83c,\n  0xdf50, 0xd83c, 0xdf4d, 0xd83c, 0xdf46, 0xd83c, 0xdf45, 0xd83c, 0xdf3d, 0xd83c, 0xdfe1, 0xd83c,\n  0xdfe5, 0xd83c, 0xdfe6, 0x26ea, 0xd83c, 0xdff0, 0x26fa, 0xd83c, 0xdfed, 0xd83d, 0xddfb, 0xd83d,\n  0xddfd, 0xd83c, 0xdfa0, 0xd83c, 0xdfa1, 0x26f2, 0xd83c, 0xdfa2, 0xd83d, 0xdea2, 0xd83d, 0xdea4,\n  0x2693, 0xd83d, 0xde80, 0x2708, 0xd83d, 0xde81, 0xd83d, 0xde82, 0xd83d, 0xde8b, 0xd83d, 0xde8e,\n  0xd83d, 0xde8c, 0xd83d, 0xde99, 0xd83d, 0xde97, 0xd83d, 0xde95, 0xd83d, 0xde9b, 0xd83d, 0xdea8,\n  0xd83d, 0xde94, 0xd83d, 0xde92, 0xd83d, 0xde91, 0xd83d, 0xdeb2, 0xd83d, 0xdea0, 0xd83d, 0xde9c,\n  0xd83d, 0xdea6, 0x26a0, 0xd83d, 0xdea7, 0x26fd, 0xd83c, 0xdfb0, 0xd83d, 0xddff, 0xd83c, 0xdfaa,\n  0xd83c, 0xdfad, 0xd83c, 0xddef, 0xd83c, 0xddf5, 0xd83c, 0xddf0, 0xd83c, 0xddf7, 0xd83c, 0xdde9,\n  0xd83c, 0xddea, 0xd83c, 0xdde8, 0xd83c, 0xddf3, 0xd83c, 0xddfa, 0xd83c, 0xddf8, 0xd83c, 0xddeb,\n  0xd83c, 0xddf7, 0xd83c, 0xddea, 0xd83c, 0xddf8, 0xd83c, 0xddee, 0xd83c, 0xddf9, 0xd83c, 0xddf7,\n  0xd83c, 0xddfa, 0xd83c, 0xddec, 0xd83c, 0xdde7, 0x0031, 0x20e3, 0x0032, 0x20e3, 0x0033, 0x20e3,\n  0x0034, 0x20e3, 0x0035, 0x20e3, 0x0036, 0x20e3, 0x0037, 0x20e3, 0x0038, 0x20e3, 0x0039, 0x20e3,\n  0x0030, 0x20e3, 0xd83d, 0xdd1f, 0x2757, 0x2753, 0x2665, 0x2666, 0xd83d, 0xdcaf, 0xd83d, 0xdd17,\n  0xd83d, 0xdd31, 0xd83d, 0xdd34, 0xd83d, 0xdd35, 0xd83d, 0xdd36, 0xd83d, 0xdd37,\n]);\n\nexport const EMOJI_OFFSETS = [\n  0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22,\n  24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46,\n  48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70,\n  72, 74, 76, 78, 80, 82, 84, 86, 87, 88, 90, 92,\n  94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116,\n  118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140,\n  142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164,\n  166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188,\n  190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212,\n  214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236,\n  238, 240, 242, 244, 246, 248, 250, 252, 254, 256, 258, 259,\n  260, 261, 262, 264, 266, 268, 270, 272, 274, 276, 278, 280,\n  282, 284, 286, 288, 290, 292, 294, 295, 297, 299, 301, 303,\n  305, 306, 307, 308, 310, 312, 314, 316, 318, 320, 322, 324,\n  326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348,\n  350, 351, 353, 355, 357, 359, 360, 362, 364, 365, 366, 368,\n  370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392,\n  394, 396, 398, 400, 402, 404, 406, 407, 408, 410, 412, 414,\n  416, 418, 420, 422, 424, 426, 427, 429, 431, 433, 435, 437,\n  439, 441, 443, 445, 447, 449, 451, 453, 455, 457, 459, 461,\n  463, 465, 467, 469, 471, 473, 475, 477, 479, 481, 483, 485,\n  487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 508,\n  510, 511, 513, 515, 517, 519, 521, 522, 524, 526, 528, 529,\n  531, 532, 534, 536, 538, 540, 542, 544, 546, 548, 550, 552,\n  554, 556, 558, 560, 562, 564, 566, 567, 569, 570, 572, 574,\n  576, 578, 582, 586, 590, 594, 598, 602, 606, 610, 614, 618,\n  620, 622, 624, 626, 628, 630, 632, 634, 636, 638, 640, 641,\n  642, 643, 644, 646, 648, 650, 652, 654, 656, 658,\n];\n","import type { ApiPhoneCall } from '../../../api/types';\nimport type { ApiCallProtocol } from '../../../lib/secret-sauce';\nimport type { ActionReturnType } from '../../types';\n\nimport {\n  handleUpdateGroupCallConnection,\n  handleUpdateGroupCallParticipants,\n  joinPhoneCall, processSignalingMessage,\n} from '../../../lib/secret-sauce';\nimport { ARE_CALLS_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { omit } from '../../../util/iteratees';\nimport * as langProvider from '../../../util/oldLangProvider';\nimport { EMOJI_DATA, EMOJI_OFFSETS } from '../../../util/phoneCallEmojiConstants';\nimport { callApi } from '../../../api/gramjs';\nimport { addActionHandler, getGlobal, setGlobal } from '../../index';\nimport { updateGroupCall, updateGroupCallParticipant } from '../../reducers/calls';\nimport { updateTabState } from '../../reducers/tabs';\nimport { selectActiveGroupCall, selectGroupCallParticipant, selectPhoneCallUser } from '../../selectors/calls';\n\naddActionHandler('apiUpdate', (global, actions, update): ActionReturnType => {\n  const { activeGroupCallId } = global.groupCalls;\n\n  switch (update['@type']) {\n    case 'updateGroupCallLeavePresentation': {\n      actions.toggleGroupCallPresentation({ value: false });\n      break;\n    }\n    case 'updateGroupCallStreams': {\n      if (!update.userId || !activeGroupCallId) break;\n      if (!selectGroupCallParticipant(global, activeGroupCallId, update.userId)) break;\n\n      return updateGroupCallParticipant(global, activeGroupCallId, update.userId, omit(update, ['@type', 'userId']));\n    }\n    case 'updateGroupCallConnectionState': {\n      if (!activeGroupCallId) break;\n\n      if (update.connectionState === 'disconnected') {\n        if ('leaveGroupCall' in actions) actions.leaveGroupCall({ isFromLibrary: true, tabId: getCurrentTabId() });\n        break;\n      }\n\n      return updateGroupCall(global, activeGroupCallId, {\n        connectionState: update.connectionState,\n        isSpeakerDisabled: update.isSpeakerDisabled,\n      });\n    }\n    case 'updateGroupCallParticipants': {\n      const { groupCallId, participants } = update;\n      if (activeGroupCallId === groupCallId) {\n        void handleUpdateGroupCallParticipants(participants);\n      }\n      break;\n    }\n    case 'updateGroupCallConnection': {\n      if (update.data.stream) {\n        actions.showNotification({ message: 'Big live streams are not yet supported', tabId: getCurrentTabId() });\n        if ('leaveGroupCall' in actions) actions.leaveGroupCall({ tabId: getCurrentTabId() });\n        break;\n      }\n      void handleUpdateGroupCallConnection(update.data, update.presentation);\n\n      const groupCall = selectActiveGroupCall(global);\n      if (groupCall?.participants && Object.keys(groupCall.participants).length > 0) {\n        void handleUpdateGroupCallParticipants(Object.values(groupCall.participants));\n      }\n      break;\n    }\n    case 'updatePhoneCallMediaState':\n      return {\n        ...global,\n        phoneCall: {\n          ...global.phoneCall,\n          ...omit(update, ['@type']),\n        } as ApiPhoneCall,\n      };\n    case 'updatePhoneCall': {\n      if (!ARE_CALLS_SUPPORTED) return undefined;\n      const { phoneCall, currentUserId } = global;\n\n      const call: ApiPhoneCall = {\n        ...phoneCall,\n        ...update.call,\n      };\n\n      const isOutgoing = phoneCall?.adminId === currentUserId;\n\n      global = {\n        ...global,\n        phoneCall: call,\n      };\n      setGlobal(global);\n      global = getGlobal();\n\n      if (phoneCall && phoneCall.id && call.id !== phoneCall.id) {\n        if (call.state !== 'discarded') {\n          callApi('discardCall', {\n            call,\n            isBusy: true,\n          });\n        }\n        return undefined;\n      }\n\n      const {\n        accessHash, state, connections, gB,\n      } = call;\n\n      if (state === 'active' || state === 'accepted') {\n        if (!verifyPhoneCallProtocol(call.protocol)) {\n          const user = selectPhoneCallUser(global);\n          if ('hangUp' in actions) actions.hangUp({ tabId: getCurrentTabId() });\n          actions.showNotification({\n            message: langProvider.oldTranslate('VoipPeerIncompatible', user?.firstName),\n            tabId: getCurrentTabId(),\n          });\n          return undefined;\n        }\n      }\n\n      if (state === 'discarded') {\n        // Discarded from other device\n        if (!phoneCall) return undefined;\n\n        return updateTabState(global, {\n          ...(call.needRating && { ratingPhoneCall: call }),\n          isCallPanelVisible: undefined,\n        }, getCurrentTabId());\n      } else if (state === 'accepted' && accessHash && gB) {\n        (async () => {\n          const { gA, keyFingerprint, emojis } = await callApi('confirmPhoneCall', [gB, EMOJI_DATA, EMOJI_OFFSETS]);\n\n          global = getGlobal();\n          const newCall = {\n            ...global.phoneCall,\n            emojis,\n          } as ApiPhoneCall;\n\n          global = {\n            ...global,\n            phoneCall: newCall,\n          };\n          setGlobal(global);\n\n          callApi('confirmCall', {\n            call, gA, keyFingerprint,\n          });\n        })();\n      } else if (state === 'active' && connections && phoneCall?.state !== 'active') {\n        if (!isOutgoing) {\n          callApi('receivedCall', { call });\n          (async () => {\n            const { emojis } = await callApi('confirmPhoneCall', [call.gAOrB!, EMOJI_DATA, EMOJI_OFFSETS]);\n\n            global = getGlobal();\n            const newCall = {\n              ...global.phoneCall,\n              emojis,\n            } as ApiPhoneCall;\n\n            global = {\n              ...global,\n              phoneCall: newCall,\n            };\n            setGlobal(global);\n          })();\n        }\n        void joinPhoneCall(\n          connections,\n          actions.sendSignalingData,\n          isOutgoing,\n          Boolean(call?.isVideo),\n          Boolean(call.isP2pAllowed),\n          actions.apiUpdate,\n        );\n      }\n\n      return global;\n    }\n    case 'updatePhoneCallConnectionState': {\n      const { connectionState } = update;\n\n      if (!global.phoneCall) return global;\n\n      if (connectionState === 'closed' || connectionState === 'disconnected' || connectionState === 'failed') {\n        if ('hangUp' in actions) actions.hangUp({ tabId: getCurrentTabId() });\n        return undefined;\n      }\n\n      return {\n        ...global,\n        phoneCall: {\n          ...global.phoneCall,\n          isConnected: connectionState === 'connected',\n        },\n      };\n    }\n    case 'updatePhoneCallSignalingData': {\n      const { phoneCall } = global;\n\n      if (!phoneCall) {\n        break;\n      }\n\n      callApi('decodePhoneCallData', [update.data])?.then(processSignalingMessage);\n      break;\n    }\n  }\n\n  return undefined;\n});\n\nfunction verifyPhoneCallProtocol(protocol?: ApiCallProtocol) {\n  return protocol?.libraryVersions.some((version) => {\n    return version === '4.0.0' || version === '4.0.1';\n  });\n}\n","import type { GroupCallParticipant } from '../../../../lib/secret-sauce';\n\nimport { GROUP_CALL_DEFAULT_VOLUME, GROUP_CALL_VOLUME_MULTIPLIER } from '../../../../config';\n\nexport default function formatGroupCallVolume(participant: GroupCallParticipant) {\n  return Math.floor((participant.volume || GROUP_CALL_DEFAULT_VOLUME) / GROUP_CALL_VOLUME_MULTIPLIER).toString();\n}\n","import type { ElementRef, FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useEffect, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { GroupCallParticipant } from '../../../lib/secret-sauce';\nimport type { MenuPositionOptions } from '../../ui/Menu';\n\nimport { GROUP_CALL_DEFAULT_VOLUME, GROUP_CALL_VOLUME_MULTIPLIER } from '../../../config';\nimport { selectIsAdminInActiveGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useRunThrottled from '../../../hooks/useRunThrottled';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport DeleteMemberModal from '../../right/DeleteMemberModal';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\n\nimport './GroupCallParticipantMenu.scss';\n\nconst SPEAKER_ICON_DISABLED_SEGMENT: [number, number] = [0, 17];\nconst SPEAKER_ICON_ENABLED_SEGMENT: [number, number] = [17, 34];\n\ntype OwnProps =\n  {\n    participant?: GroupCallParticipant;\n    onCloseAnimationEnd: VoidFunction;\n    onClose: VoidFunction;\n    isDropdownOpen: boolean;\n    menuRef?: ElementRef<HTMLDivElement>;\n  }\n  & MenuPositionOptions;\n\ntype StateProps = {\n  isAdmin: boolean;\n};\n\nconst VOLUME_ZERO = 0;\nconst VOLUME_LOW = 50;\nconst VOLUME_MEDIUM = 100;\nconst VOLUME_NORMAL = 150;\n\nconst VOLUME_CHANGE_THROTTLE = 500;\n\nconst SPEAKER_ICON_SIZE = 24;\n\nconst GroupCallParticipantMenu: FC<OwnProps & StateProps> = ({\n  participant,\n  onCloseAnimationEnd,\n  onClose,\n  isDropdownOpen,\n  isAdmin,\n  menuRef,\n  ...menuPositionOptions\n}) => {\n  const {\n    toggleGroupCallMute,\n    setGroupCallParticipantVolume,\n    toggleGroupCallPanel,\n    openChat,\n    requestToSpeak,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isDeleteUserModalOpen, openDeleteUserModal, closeDeleteUserModal] = useFlag();\n\n  const id = participant?.id;\n  const {\n    isMutedByMe, isMuted, isSelf, canSelfUnmute,\n  } = participant || {};\n  const isRaiseHand = Boolean(participant?.raiseHandRating);\n  const shouldRaiseHand = !canSelfUnmute && isMuted;\n\n  const [localVolume, setLocalVolume] = useState(\n    isMutedByMe ? VOLUME_ZERO : ((participant?.volume || GROUP_CALL_DEFAULT_VOLUME) / GROUP_CALL_VOLUME_MULTIPLIER),\n  );\n\n  const [shouldPlay, setShouldPlay] = useState(false);\n\n  const isLocalVolumeZero = localVolume === VOLUME_ZERO;\n  const speakerIconPlaySegment = isLocalVolumeZero ? SPEAKER_ICON_DISABLED_SEGMENT : SPEAKER_ICON_ENABLED_SEGMENT;\n\n  useEffect(() => {\n    if (isDropdownOpen) return;\n    setShouldPlay(false);\n  }, [isDropdownOpen]);\n\n  const handleSetLocalVolume = useLastCallback((volume: number) => {\n    setLocalVolume(volume);\n    const isNewLocalVolumeZero = volume === VOLUME_ZERO;\n    setShouldPlay(isNewLocalVolumeZero !== isLocalVolumeZero);\n  });\n\n  useEffect(() => {\n    setLocalVolume(isMutedByMe\n      ? VOLUME_ZERO\n      : ((participant?.volume || GROUP_CALL_DEFAULT_VOLUME) / GROUP_CALL_VOLUME_MULTIPLIER));\n    // We only want to initialize local volume when switching participants and ignore following updates from server\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [id]);\n\n  const runThrottled = useRunThrottled(VOLUME_CHANGE_THROTTLE);\n\n  const handleRemove = useLastCallback((e: React.SyntheticEvent<any>) => {\n    e.stopPropagation();\n    openDeleteUserModal();\n    onClose();\n  });\n\n  const handleCancelRequestToSpeak = useLastCallback((e: React.SyntheticEvent<any>) => {\n    e.stopPropagation();\n    requestToSpeak({\n      value: false,\n    });\n    onClose();\n  });\n\n  const handleMute = useLastCallback((e: React.SyntheticEvent<any>) => {\n    e.stopPropagation();\n    onClose();\n\n    if (!isAdmin) {\n      handleSetLocalVolume(isMutedByMe ? GROUP_CALL_DEFAULT_VOLUME / GROUP_CALL_VOLUME_MULTIPLIER : VOLUME_ZERO);\n    } else if (shouldRaiseHand) {\n      handleSetLocalVolume((participant?.volume ?? GROUP_CALL_DEFAULT_VOLUME) / GROUP_CALL_VOLUME_MULTIPLIER);\n    }\n\n    toggleGroupCallMute({\n      participantId: id!,\n      value: isAdmin ? !shouldRaiseHand : !isMutedByMe,\n    });\n  });\n\n  const handleOpenProfile = useLastCallback((e: React.SyntheticEvent<any>) => {\n    e.stopPropagation();\n    toggleGroupCallPanel();\n    openChat({\n      id,\n    });\n    onClose();\n  });\n\n  const handleChangeVolume = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = Number(e.target.value);\n    handleSetLocalVolume(value);\n\n    runThrottled(() => {\n      if (value === VOLUME_ZERO) {\n        toggleGroupCallMute({\n          participantId: id!,\n          value: true,\n        });\n      } else {\n        setGroupCallParticipantVolume({\n          participantId: id!,\n          volume: Math.floor(value * GROUP_CALL_VOLUME_MULTIPLIER),\n        });\n      }\n    });\n  };\n\n  return (\n    <div>\n      <Menu\n        isOpen={isDropdownOpen}\n        ref={menuRef}\n        withPortal\n        onClose={onClose}\n        onCloseAnimationEnd={onCloseAnimationEnd}\n        className=\"participant-menu with-menu-transitions\"\n\n        {...menuPositionOptions}\n      >\n        {!isSelf && !shouldRaiseHand && (\n          <div className=\"group\">\n            <div className={buildClassName(\n              'volume-control',\n              localVolume < VOLUME_LOW && 'low',\n              localVolume >= VOLUME_LOW && localVolume < VOLUME_MEDIUM && 'medium',\n              localVolume >= VOLUME_MEDIUM && localVolume < VOLUME_NORMAL && 'normal',\n              localVolume >= VOLUME_NORMAL && 'high',\n            )}\n            >\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"200\"\n                value={localVolume}\n                onChange={handleChangeVolume}\n              />\n              <div className=\"info\">\n                <AnimatedIcon\n                  tgsUrl={LOCAL_TGS_URLS.Speaker}\n                  play={shouldPlay ? speakerIconPlaySegment.toString() : false}\n                  playSegment={speakerIconPlaySegment}\n                  size={SPEAKER_ICON_SIZE}\n                />\n                <span>\n                  {localVolume}\n                  %\n                </span>\n              </div>\n            </div>\n          </div>\n        )}\n        <div className=\"group\">\n          {(isRaiseHand && isSelf) && (\n            <MenuItem\n              icon=\"stop-raising-hand\"\n              onClick={handleCancelRequestToSpeak}\n            >\n              {lang('VoipGroupCancelRaiseHand')}\n            </MenuItem>\n          )}\n          {!isSelf && <MenuItem icon=\"user\" onClick={handleOpenProfile}>{lang('VoipGroupOpenProfile')}</MenuItem>}\n          {!isSelf && (\n            // TODO cross mic\n            <MenuItem\n              icon={isMuted ? (isAdmin && shouldRaiseHand ? 'allow-speak' : 'microphone-alt') : 'microphone-alt'}\n              onClick={handleMute}\n            >\n              {isAdmin\n                ? lang(shouldRaiseHand ? 'VoipGroupAllowToSpeak' : 'VoipMute')\n                : lang(isMutedByMe ? 'VoipGroupUnmuteForMe' : 'VoipGroupMuteForMe')}\n            </MenuItem>\n          )}\n          {!isSelf && isAdmin && (\n            // TODO replace with hand\n            <MenuItem icon=\"delete-user\" destructive onClick={handleRemove}>\n              {lang('VoipGroupUserRemove')}\n            </MenuItem>\n          )}\n        </div>\n      </Menu>\n\n      {!isSelf && isAdmin && (\n        <DeleteMemberModal\n          isOpen={isDeleteUserModalOpen}\n          userId={id}\n          onClose={closeDeleteUserModal}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    return {\n      isAdmin: selectIsAdminInActiveGroupCall(global),\n    };\n  },\n)(GroupCallParticipantMenu));\n","import useThrottledCallback from './useThrottledCallback';\n\nexport default function useRunThrottled(ms: number, noFirst?: boolean, deps: any = []) {\n  return useThrottledCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { GroupCallParticipant } from '../../../lib/secret-sauce';\n\nimport { THRESHOLD } from '../../../lib/secret-sauce';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\n\ntype OwnProps = {\n  participant: GroupCallParticipant;\n  noColor?: boolean;\n  className?: string;\n};\n\nconst OutlinedMicrophoneIcon: FC<OwnProps> = ({\n  participant,\n  noColor,\n  className,\n}) => {\n  const { isMuted, isMutedByMe } = participant;\n  const isSpeaking = (participant.amplitude || 0) > THRESHOLD;\n  const isRaiseHand = Boolean(participant.raiseHandRating);\n  const prevIsRaiseHand = usePreviousDeprecated(isRaiseHand);\n  const canSelfUnmute = Boolean(participant?.canSelfUnmute);\n  const shouldRaiseHand = !canSelfUnmute && isMuted;\n  const prevIsMuted = usePreviousDeprecated(isMuted);\n\n  const playSegment: [number, number] = useMemo(() => {\n    if (isMuted && !prevIsMuted) {\n      return [43, 64];\n    }\n\n    if (!isMuted && prevIsMuted) {\n      return [22, 42];\n    }\n\n    if (isRaiseHand && !prevIsRaiseHand) {\n      return [65, 84];\n    }\n\n    if (!shouldRaiseHand && prevIsRaiseHand) {\n      return [0, 21];\n    }\n\n    // TODO cancel request to speak should play in reverse\n    // if (!isRaiseHand && prevIsRaiseHand) {\n    //   return [84, 65];\n    // }\n\n    return isMuted ? [22, 23] : [43, 44];\n    // eslint-disable-next-line\n  }, [isMuted, shouldRaiseHand, isRaiseHand]);\n\n  const microphoneColor: string = useMemo(() => {\n    if (noColor) {\n      return '#ffffff';\n    }\n\n    if (isRaiseHand) {\n      return '#4da6e0';\n    }\n\n    if (shouldRaiseHand || isMutedByMe) {\n      return '#ff706f';\n    }\n\n    if (isSpeaking) {\n      return '#57bc6c';\n    }\n\n    return '#aaaaaa';\n  }, [noColor, isRaiseHand, shouldRaiseHand, isMutedByMe, isSpeaking]);\n\n  return (\n    <AnimatedIcon\n      tgsUrl={LOCAL_TGS_URLS.VoiceOutlined}\n      play={playSegment.toString()}\n      playSegment={playSegment}\n      size={28}\n      color={microphoneColor}\n      className={className}\n      forceAlways\n      nonInteractive\n    />\n  );\n};\n\nexport default memo(OutlinedMicrophoneIcon);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wk7JwPx3\",\"subtitle\":\"ShcCNemD\",\"subtitleText\":\"UZLgp2cx\",\"icon\":\"vRc6jhKf\",\"subtitleBlue\":\"yA7bxEWw\",\"subtitleRed\":\"DnuZwImI\",\"subtitleGreen\":\"BkgYQGFq\",\"avatar\":\"ouHUJ9ff\"};","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { GroupCallParticipant as TypeGroupCallParticipant } from '../../../lib/secret-sauce';\n\nimport { GROUP_CALL_DEFAULT_VOLUME } from '../../../config';\nimport { THRESHOLD } from '../../../lib/secret-sauce';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\nimport formatGroupCallVolume from './helpers/formatGroupCallVolume';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport ListItem from '../../ui/ListItem';\nimport GroupCallParticipantMenu from './GroupCallParticipantMenu';\nimport OutlinedMicrophoneIcon from './OutlinedMicrophoneIcon';\n\nimport styles from './GroupCallParticipant.module.scss';\n\ntype OwnProps = {\n  participant: TypeGroupCallParticipant;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n};\n\nconst GroupCallParticipant: FC<OwnProps & StateProps> = ({\n  participant,\n  peer,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const menuRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  const {\n    isSelf, isMutedByMe, isMuted, hasVideoStream, hasPresentationStream,\n  } = participant;\n  const isSpeaking = (participant.amplitude || 0) > THRESHOLD;\n  const isRaiseHand = Boolean(participant.raiseHandRating);\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleContextMenu,\n    handleBeforeContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isSelf);\n\n  const getTriggerElement = useCallback(() => ref.current, []);\n\n  const getRootElement = useCallback(\n    () => ref.current!.closest('.custom-scroll, .no-scrollbar'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => menuRef.current!,\n    [],\n  );\n\n  const getLayout = useCallback(\n    () => ({ withPortal: true }),\n    [],\n  );\n\n  const hasCustomVolume = Boolean(\n    !isMuted && isSpeaking && participant.volume && participant.volume !== GROUP_CALL_DEFAULT_VOLUME,\n  );\n\n  const [aboutText, aboutColor] = useMemo(() => {\n    if (isMutedByMe) {\n      return [lang('VoipGroupMutedForMe'), styles.subtitleRed];\n    }\n\n    if (isRaiseHand) {\n      return [lang('WantsToSpeak'), styles.subtitleBlue];\n    }\n\n    if (hasCustomVolume) {\n      return [\n        lang('SpeakingWithVolume', formatGroupCallVolume(participant))\n          .replace('%%', '%'),\n        styles.subtitleGreen,\n      ];\n    }\n\n    if (!isMuted && isSpeaking) {\n      return [\n        lang('Speaking'),\n        styles.subtitleGreen,\n      ];\n    }\n\n    if (isSelf) {\n      return [lang('ThisIsYou'), styles.subtitleBlue];\n    }\n\n    return participant.about ? [participant.about, ''] : [lang('Listening'), styles.subtitleBlue];\n  }, [isMutedByMe, isRaiseHand, hasCustomVolume, isMuted, isSpeaking, isSelf, participant, lang]);\n\n  if (!peer) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      leftElement={<Avatar peer={peer} className={styles.avatar} />}\n      rightElement={<OutlinedMicrophoneIcon participant={participant} className={styles.icon} />}\n      className={styles.root}\n      onClick={handleContextMenu}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      multiline\n      ripple\n      ref={ref}\n    >\n      <FullNameTitle peer={peer} withEmojiStatus className={styles.title} />\n      <span className={buildClassName(styles.subtitle, 'subtitle', aboutColor)}>\n        {hasPresentationStream && <Icon name=\"share-screen\" />}\n        {hasVideoStream && <Icon name=\"video\" />}\n        {hasCustomVolume && <Icon name=\"speaker\" />}\n        <span className={styles.subtitleText}>{renderText(aboutText)}</span>\n      </span>\n      <GroupCallParticipantMenu\n        participant={participant}\n        isDropdownOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        getLayout={getLayout}\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        menuRef={menuRef}\n      />\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { participant }): Complete<StateProps> => {\n    return {\n      peer: selectUser(global, participant.id) || selectChat(global, participant.id),\n    };\n  },\n)(GroupCallParticipant));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { GroupCallParticipant as TypeGroupCallParticipant } from '../../../lib/secret-sauce';\n\nimport { selectActiveGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { compareFields } from '../../../util/iteratees';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport GroupCallParticipant from './GroupCallParticipant';\n\nimport styles from './GroupCallParticipantList.module.scss';\n\ntype OwnProps = {\n  panelOffset: number;\n  isLandscape: boolean;\n};\n\ntype StateProps = {\n  participantsCount: number;\n  participants?: Record<string, TypeGroupCallParticipant>;\n};\n\nconst GroupCallParticipantList: FC<OwnProps & StateProps> = ({\n  panelOffset,\n  participants,\n  participantsCount,\n  isLandscape,\n}) => {\n  const {\n    loadMoreGroupCallParticipants,\n  } = getActions();\n\n  const orderedParticipantIds = useMemo(() => {\n    return Object.values(participants || {}).sort(compareParticipants).map((participant) => participant.id);\n  }, [participants]);\n\n  const handleLoadMoreGroupCallParticipants = useLastCallback(() => {\n    loadMoreGroupCallParticipants();\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMoreGroupCallParticipants,\n    orderedParticipantIds,\n    orderedParticipantIds.length >= participantsCount,\n  );\n\n  return (\n    <InfiniteScroll\n      items={viewportIds}\n      onLoadMore={getMore}\n      style={`transform: translateY(${panelOffset}px);`}\n      className={buildClassName(styles.root, !isLandscape && styles.portrait)}\n    >\n      {participants && viewportIds?.map(\n        (participantId) => (\n          participants[participantId] && (\n            <GroupCallParticipant\n              key={participantId}\n              teactOrderKey={orderedParticipantIds.indexOf(participantId)}\n              participant={participants[participantId]}\n            />\n          )\n        ),\n      )}\n    </InfiniteScroll>\n  );\n};\n\nfunction compareParticipants(a: TypeGroupCallParticipant, b: TypeGroupCallParticipant) {\n  return compareFields(!a.isMuted, !b.isMuted)\n    || compareFields(a.presentation, b.presentation)\n    || compareFields(a.video, b.video)\n    || compareFields(a.raiseHandRating, b.raiseHandRating);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    const { participantsCount, participants } = selectActiveGroupCall(global) || {};\n\n    return {\n      participants,\n      participantsCount: participantsCount || 0,\n    };\n  },\n)(GroupCallParticipantList));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"npTa6CmI\",\"portrait\":\"v7oB2HTv\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"DKuzmnN7\",\"hidden\":\"T_wodAHA\",\"noAnimate\":\"yPCkJzpi\",\"root\":\"eBq1NoLo\",\"speaking\":\"h4NcT6OS\",\"loader\":\"XedVWQii\",\"video\":\"eUXuK9Oz\",\"videoFallback\":\"eTpvBU_b eUXuK9Oz\",\"thumbnailWrapper\":\"R5ULTrF9\",\"thumbnail\":\"cjUWuViy\",\"flipped\":\"O2bTiH2E\",\"pinButton\":\"lPdblo0y\",\"bottomPanel\":\"T1deCDSn\",\"info\":\"LzFFayK3\",\"pinned\":\"B4WZhF9P\",\"name\":\"RBwMAuKp\",\"status\":\"z1ZZTsjC\",\"icon\":\"j1aDzn1H\"};","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport type { GroupCallParticipant as TypeGroupCallParticipant } from '../../../lib/secret-sauce';\nimport type { VideoLayout, VideoParticipant } from './hooks/useGroupCallVideoLayout';\n\nimport { GROUP_CALL_DEFAULT_VOLUME } from '../../../config';\nimport fastBlur from '../../../lib/fastBlur';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getUserStreams, THRESHOLD } from '../../../lib/secret-sauce';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport { animate } from '../../../util/animation';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { fastRaf } from '../../../util/schedulers';\nimport formatGroupCallVolume from './helpers/formatGroupCallVolume';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport GroupCallParticipantMenu from './GroupCallParticipantMenu';\nimport OutlinedMicrophoneIcon from './OutlinedMicrophoneIcon';\n\nimport styles from './GroupCallParticipantVideo.module.scss';\n\nconst BLUR_RADIUS = 2;\nconst BLUR_ITERATIONS = 2;\nconst VIDEO_FALLBACK_UPDATE_INTERVAL = 1000;\n\ntype OwnProps = {\n  layout: VideoLayout;\n  setPinned: (participant?: VideoParticipant) => void;\n  pinnedVideo: VideoParticipant | undefined;\n  canPin: boolean;\n  participant: TypeGroupCallParticipant;\n  className?: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n};\n\nconst GroupCallParticipantVideo: FC<OwnProps & StateProps> = ({\n  layout,\n  pinnedVideo,\n  setPinned,\n  canPin,\n  className,\n  participant,\n  user,\n  chat,\n}) => {\n  const lang = useOldLang();\n\n  const thumbnailRef = useRef<HTMLCanvasElement>();\n  const videoRef = useRef<HTMLVideoElement>();\n  const videoFallbackRef = useRef<HTMLCanvasElement>();\n\n  const {\n    x, y, width, height, noAnimate, isRemoved,\n    type,\n  } = layout;\n  const {\n    isSelf, isMutedByMe, isMuted,\n  } = participant;\n  const isPinned = pinnedVideo?.id === participant.id && pinnedVideo?.type === type;\n  const isSpeaking = (participant.amplitude || 0) > THRESHOLD;\n  const isRaiseHand = Boolean(participant.raiseHandRating);\n  const shouldFlipVideo = type === 'video' && participant.isSelf;\n\n  const status = useMemo(() => {\n    if (isSelf) {\n      return lang('ThisIsYou');\n    }\n\n    if (isMutedByMe) {\n      return lang('VoipGroupMutedForMe');\n    }\n\n    if (isRaiseHand) {\n      return lang('WantsToSpeak');\n    }\n\n    if (isMuted || !isSpeaking) {\n      return lang('Listening');\n    }\n\n    if (participant.volume && participant.volume !== GROUP_CALL_DEFAULT_VOLUME) {\n      return lang('SpeakingWithVolume', formatGroupCallVolume(participant))\n        .replace('%%', '%');\n    }\n\n    return lang('Speaking');\n  }, [isSelf, isMutedByMe, isRaiseHand, isMuted, isSpeaking, participant, lang]);\n\n  const prevLayoutRef = useRef<VideoLayout>();\n  if (!isRemoved) {\n    prevLayoutRef.current = layout;\n  }\n  const {\n    x: prevX, y: prevY, width: prevWidth, height: prevHeight,\n  } = prevLayoutRef.current || {};\n\n  const [currentX, currentY, currentWidth, currentHeight] = isRemoved\n    ? [prevX, prevY, prevWidth, prevHeight] : [x, y, width, height];\n\n  const [isHidden, setIsHidden] = useState(!noAnimate);\n\n  const streams = getUserStreams(user?.id || chat!.id);\n  const actualStream = type === 'video' ? streams?.video : streams?.presentation;\n  const streamRef = useRef(actualStream);\n  if (actualStream?.active && actualStream?.getVideoTracks()[0].enabled) {\n    streamRef.current = actualStream;\n  }\n  const stream = streamRef.current;\n\n  const handleInactive = useLastCallback(() => {\n    const video = videoRef.current;\n    if (!video) return;\n    // eslint-disable-next-line no-null/no-null\n    video.srcObject = null;\n  });\n\n  useEffect(() => {\n    stream?.addEventListener('inactive', handleInactive);\n    return () => {\n      stream?.removeEventListener('inactive', handleInactive);\n    };\n  }, [handleInactive, stream]);\n\n  useEffect(() => {\n    setIsHidden(false);\n  }, []);\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  const handleCanPlay = useLastCallback(() => {\n    setIsLoading(false);\n  });\n\n  // When video stream is removed, the video element starts showing empty black screen.\n  // To avoid that, we hide the video element and show the fallback frame instead, which is constantly updated\n  // every VIDEO_FALLBACK_UPDATE_INTERVAL milliseconds.\n  useInterval(() => {\n    if (!stream?.active) return;\n    const video = videoRef.current!;\n    const canvas = videoFallbackRef.current!;\n\n    requestMutation(() => {\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      canvas.getContext('2d')!.drawImage(video, 0, 0, canvas.width, canvas.height);\n    });\n  }, VIDEO_FALLBACK_UPDATE_INTERVAL);\n\n  useEffect(() => {\n    const video = videoRef.current;\n    const thumbnail = thumbnailRef.current;\n    if (!video || !thumbnail || !stream) return undefined;\n\n    const ctx = thumbnail.getContext('2d', { alpha: false });\n    if (!ctx) return undefined;\n\n    let isDrawing = true;\n    requestMutation(() => {\n      if (!isDrawing) return;\n      thumbnail.width = 16;\n      thumbnail.height = 16;\n      ctx.filter = 'blur(2px)';\n\n      const draw = () => {\n        if (!isDrawing) return false;\n        if (!stream.active) {\n          return false;\n        }\n        ctx.drawImage(video, 0, 0, video.videoWidth, video.videoHeight, 0, 0, thumbnail.width, thumbnail.height);\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, thumbnail.width, thumbnail.height, BLUR_RADIUS, BLUR_ITERATIONS);\n        }\n        return true;\n      };\n\n      animate(draw, fastRaf);\n    });\n\n    return () => {\n      isDrawing = false;\n    };\n  }, [stream]);\n\n  const ref = useRef<HTMLDivElement>();\n  const menuRef = useRef<HTMLDivElement>();\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isSelf);\n\n  const getTriggerElement = useCallback(() => ref.current, []);\n\n  const getRootElement = useCallback(\n    () => ref.current!.closest('.custom-scroll, .no-scrollbar'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => menuRef.current!,\n    [],\n  );\n\n  const getLayout = useCallback(\n    () => ({ withPortal: true }),\n    [],\n  );\n\n  const handleClickPin = useCallback(() => {\n    setPinned(!isPinned ? {\n      id: user?.id || chat!.id,\n      type,\n    } : undefined);\n  }, [chat, isPinned, setPinned, type, user?.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.wrapper,\n        (isHidden || isRemoved) && styles.hidden,\n        noAnimate && styles.noAnimate,\n        className,\n        isPinned && styles.pinned,\n      )}\n      style={`--x: ${currentX}px; --y: ${currentY}px; --width: ${currentWidth}px; --height: ${currentHeight}px;`}\n      ref={ref}\n      onContextMenu={handleContextMenu}\n      onDoubleClick={canPin ? handleClickPin : undefined}\n    >\n      <div\n        className={buildClassName(\n          styles.root,\n          isSpeaking && styles.speaking,\n        )}\n      >\n        {isLoading && (\n          <Skeleton className={buildClassName(styles.video, styles.loader)} />\n        )}\n        {stream && (\n          <video\n            className={buildClassName(styles.video, shouldFlipVideo && styles.flipped)}\n            muted\n            autoPlay\n            playsInline\n            srcObject={stream}\n            ref={videoRef}\n            onCanPlay={handleCanPlay}\n          />\n        )}\n        <canvas\n          className={buildClassName(styles.videoFallback, shouldFlipVideo && styles.flipped)}\n          ref={videoFallbackRef}\n        />\n        <div className={styles.thumbnailWrapper}>\n          <canvas\n            className={buildClassName(styles.thumbnail, shouldFlipVideo && styles.flipped)}\n            ref={thumbnailRef}\n          />\n        </div>\n        {canPin && (\n          <Button\n            round\n            size=\"smaller\"\n            ripple\n            color=\"translucent\"\n            className={styles.pinButton}\n            ariaLabel={lang(isPinned ? 'lng_group_call_context_unpin_camera' : 'lng_group_call_context_pin_camera')}\n            onClick={handleClickPin}\n          >\n            <Icon name={isPinned ? 'unpin' : 'pin'} />\n          </Button>\n        )}\n        <div className={styles.bottomPanel}>\n          <div className={styles.info}>\n            <FullNameTitle peer={user || chat!} className={styles.name} />\n            <div className={styles.status}>{status}</div>\n          </div>\n          <OutlinedMicrophoneIcon participant={participant} className={styles.icon} noColor />\n        </div>\n      </div>\n\n      <GroupCallParticipantMenu\n        participant={participant}\n        isDropdownOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        getLayout={getLayout}\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        menuRef={menuRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { participant }): Complete<StateProps> => {\n    return {\n      user: participant.isUser ? selectUser(global, participant.id) : undefined,\n      chat: !participant.isUser ? selectChat(global, participant.id) : undefined,\n    };\n  },\n)(GroupCallParticipantVideo));\n","export const vibrateShort = () => {\n  navigator.vibrate?.(50);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lKdhQ5pw\",\"spinner\":\"tyQNJC6B\",\"spinnerVisible\":\"LowChABq\",\"mutedByAdmin\":\"Ynow5UuE\",\"canUnmute\":\"bjKqp3SI\",\"icon\":\"Ea1XnQaX\"};","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { GroupCallConnectionState } from '../../../lib/secret-sauce';\n\nimport { selectActiveGroupCall, selectGroupCallParticipant } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { vibrateShort } from '../../../util/vibrate';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Button from '../../ui/Button';\nimport Spinner from '../../ui/Spinner';\n\nimport styles from './MicrophoneButton.module.scss';\n\nconst CONNECTION_STATE_DEFAULT = 'discarded';\n\ntype OwnProps = {\n  className?: string;\n};\n\ntype StateProps = {\n  connectionState?: GroupCallConnectionState;\n  hasRequestedToSpeak: boolean;\n  isMuted?: boolean;\n  canSelfUnmute?: boolean;\n  noAudioStream: boolean;\n};\n\nconst REQUEST_TO_SPEAK_THROTTLE = 3000;\nconst HOLD_TO_SPEAK_TIME = 200;\nconst ICON_SIZE = 36;\n\nconst MicrophoneButton: FC<OwnProps & StateProps> = ({\n  className,\n  noAudioStream,\n  canSelfUnmute,\n  isMuted,\n  connectionState,\n}) => {\n  const {\n    toggleGroupCallMute,\n    requestToSpeak,\n    playGroupCallSound,\n  } = getActions();\n\n  const lang = useOldLang();\n  const muteMouseDownState = useRef('up');\n\n  const [isRequestingToSpeak, setIsRequestingToSpeak] = useState(false);\n  const isConnecting = connectionState !== 'connected';\n  const shouldRaiseHand = !canSelfUnmute && isMuted;\n  const prevShouldRaiseHand = usePreviousDeprecated(shouldRaiseHand);\n\n  useEffect(() => {\n    if (prevShouldRaiseHand && !shouldRaiseHand) {\n      playGroupCallSound({ sound: 'allowTalk' });\n    }\n  }, [playGroupCallSound, prevShouldRaiseHand, shouldRaiseHand]);\n\n  // Voice mini\n  // unmuted -> muted [69, 99]\n  // muted -> unmuted [36, 69]\n  // raise -> muted [0, 36]\n  // muted -> raise [99, 136]\n  // unmuted -> raise [136, 172]\n  // TODO should probably move to other component\n  const playSegment: [number, number] = useMemo(() => {\n    if (isRequestingToSpeak) {\n      const r = Math.floor(Math.random() * 100);\n      return (r < 32 ? [0, 120]\n        : (r < 64 ? [120, 240]\n          : (r < 97 ? [240, 420]\n            : [420, 540]\n          )\n        )\n      );\n    }\n    if (!prevShouldRaiseHand && shouldRaiseHand) {\n      return noAudioStream ? [99, 135] : [136, 172];\n    }\n    if (prevShouldRaiseHand && !shouldRaiseHand) {\n      return [0, 36];\n    }\n    if (!shouldRaiseHand) {\n      return noAudioStream ? [69, 99] : [36, 69];\n    }\n    return [0, 0];\n  }, [prevShouldRaiseHand, isRequestingToSpeak, noAudioStream, shouldRaiseHand]);\n\n  const animatedIconName = isRequestingToSpeak ? 'HandFilled' : 'VoiceMini';\n\n  const toggleMute = useCallback(() => {\n    vibrateShort();\n    toggleGroupCallMute();\n  }, [toggleGroupCallMute]);\n\n  const handleMouseDownMute = useCallback(() => {\n    if (shouldRaiseHand) {\n      if (isRequestingToSpeak) return;\n      vibrateShort();\n      requestToSpeak();\n      setIsRequestingToSpeak(true);\n      setTimeout(() => {\n        setIsRequestingToSpeak(false);\n      }, REQUEST_TO_SPEAK_THROTTLE);\n      return;\n    }\n    muteMouseDownState.current = 'down';\n    if (noAudioStream) {\n      setTimeout(() => {\n        if (muteMouseDownState.current === 'down') {\n          muteMouseDownState.current = 'hold';\n          toggleMute();\n        }\n      }, HOLD_TO_SPEAK_TIME);\n    }\n  }, [isRequestingToSpeak, noAudioStream, requestToSpeak, shouldRaiseHand, toggleMute]);\n\n  const handleMouseUpMute = useCallback(() => {\n    if (shouldRaiseHand) {\n      return;\n    }\n    toggleMute();\n    muteMouseDownState.current = 'up';\n  }, [shouldRaiseHand, toggleMute]);\n\n  return (\n    <Button\n      round\n      size=\"default\"\n      className={buildClassName(\n        styles.root,\n        !isConnecting && noAudioStream && styles.canUnmute,\n        !isConnecting && shouldRaiseHand && styles.mutedByAdmin,\n        className,\n      )}\n      onMouseDown={handleMouseDownMute}\n      onMouseUp={handleMouseUpMute}\n      ariaLabel={lang(isMuted ? 'VoipUnmute' : 'VoipMute')}\n      disabled={isConnecting}\n    >\n      <AnimatedIcon\n        tgsUrl={LOCAL_TGS_URLS[animatedIconName]}\n        size={ICON_SIZE}\n        play={playSegment.toString()}\n        playSegment={playSegment}\n        className={styles.icon}\n        forceAlways\n      />\n      <Spinner className={buildClassName(styles.spinner, isConnecting && styles.spinnerVisible)} color=\"white\" />\n    </Button>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): Complete<StateProps> => {\n    const groupCall = selectActiveGroupCall(global);\n\n    const { connectionState } = groupCall || {};\n    const meParticipant = groupCall && selectGroupCallParticipant(global, groupCall.id, global.currentUserId!);\n\n    const {\n      raiseHandRating, hasAudioStream, canSelfUnmute, isMuted,\n    } = meParticipant || {};\n\n    return {\n      connectionState: connectionState || CONNECTION_STATE_DEFAULT,\n      hasRequestedToSpeak: Boolean(raiseHandRating),\n      noAudioStream: !hasAudioStream,\n      canSelfUnmute,\n      isMuted,\n    };\n  },\n)(MicrophoneButton));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OsO5GKfn\",\"panelWrapper\":\"cUVoePr_\",\"panel\":\"Thuz79M3\",\"panelScrollTrigger\":\"zoK6Y6IS\",\"panelHeader\":\"DMBtCL9Z\",\"scrolled\":\"GdEH1Agb\",\"fullscreen\":\"JJx0QI2w\",\"landscape\":\"wamCuzMB\",\"headerButton\":\"gmyieSid\",\"firstButton\":\"hVnn6KBp\",\"lastButton\":\"iy78A5rG\",\"panelHeaderText\":\"TwEEA77i\",\"title\":\"pNZ9skLf\",\"bigger\":\"NumT3v5i\",\"subtitle\":\"gmfUKabx\",\"participants\":\"iTeC_RxH\",\"participantVideos\":\"PZmKIdTl\",\"addParticipantButton\":\"clmu2oBt\",\"videos\":\"ATwoMlAV\",\"mainVideoContainer\":\"hqFon3dV\",\"videosHeader\":\"KPHc659W\",\"appFullscreen\":\"cl2sfoBF\",\"videosHeaderLastButton\":\"_t50HVNJ\",\"videosContent\":\"oEEQZilE\",\"actions\":\"uGzi9s97\",\"actionButton\":\"foXbVcnN\",\"destructive\":\"YIR9Z9CZ\",\"canRequestToSpeak\":\"ZoiZQu_O\",\"muted\":\"wpvv1V6m\",\"portrait\":\"R6HQcMwx\",\"noVideoParticipants\":\"aepCFyJQ\",\"noSidebar\":\"XjgP21E6\"};","import '../../../global/actions/calls';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  GroupCallConnectionState, GroupCallParticipant as TypeGroupCallParticipant,\n} from '../../../lib/secret-sauce';\nimport type { VideoParticipant } from './hooks/useGroupCallVideoLayout';\n\nimport { IS_SCREENSHARE_SUPPORTED } from '../../../lib/secret-sauce';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport {\n  selectCanInviteToActiveGroupCall,\n  selectGroupCall,\n  selectGroupCallParticipant,\n  selectIsAdminInActiveGroupCall,\n} from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIntersectionObserver, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport { useFullscreenStatus } from '../../../hooks/window/useFullscreen';\nimport useGroupCallVideoLayout from './hooks/useGroupCallVideoLayout';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport Modal from '../../ui/Modal';\nimport GroupCallParticipantList from './GroupCallParticipantList';\nimport GroupCallParticipantVideo from './GroupCallParticipantVideo';\nimport MicrophoneButton from './MicrophoneButton';\n\nimport styles from './GroupCall.module.scss';\n\nconst INTERSECTION_THROTTLE = 200;\n\nexport type OwnProps = {\n  groupCallId: string;\n};\n\ntype StateProps = {\n  isCallPanelVisible: boolean;\n  connectionState: GroupCallConnectionState;\n  title?: string;\n  meParticipant?: TypeGroupCallParticipant;\n  participantsCount?: number;\n  isAdmin: boolean;\n  participants: Record<string, TypeGroupCallParticipant>;\n  canInvite: boolean;\n};\n\nconst GroupCall: FC<OwnProps & StateProps> = ({\n  groupCallId,\n  isCallPanelVisible,\n  connectionState,\n  participantsCount,\n  title,\n  meParticipant,\n  isAdmin,\n  participants,\n  canInvite,\n}) => {\n  const {\n    toggleGroupCallVideo,\n    toggleGroupCallPresentation,\n    leaveGroupCall,\n    toggleGroupCallPanel,\n    connectToActiveGroupCall,\n    playGroupCallSound,\n    createGroupCallInviteLink,\n  } = getActions();\n\n  const lang = useOldLang();\n  const containerRef = useRef<HTMLDivElement>();\n\n  const primaryVideoContainerRef = useRef<HTMLDivElement>();\n  const secondaryVideoContainerRef = useRef<HTMLDivElement>();\n\n  const panelScrollTriggerRef = useRef<HTMLDivElement>();\n  const panelRef = useRef<HTMLDivElement>();\n\n  const [isLeaving, setIsLeaving] = useState(false);\n  const isOpen = !isCallPanelVisible && !isLeaving;\n\n  const { observe } = useIntersectionObserver({\n    rootRef: panelRef,\n    throttleMs: INTERSECTION_THROTTLE,\n    isDisabled: !isOpen,\n  });\n\n  const hasScrolled = !useIsIntersecting(panelScrollTriggerRef, isOpen ? observe : undefined);\n\n  const { isMobile, isLandscape } = useAppLayout();\n\n  const [isFullscreen, openFullscreen, closeFullscreen] = useFlag();\n  const [isSidebarOpen, openSidebar, closeSidebar] = useFlag(true);\n  const isLandscapeLayout = Boolean(isFullscreen && isLandscape);\n  const isAppFullscreen = useFullscreenStatus();\n\n  const firstPresentation = useMemo(() => {\n    return Object.values(participants).find(({ presentation }) => presentation);\n  }, [participants]);\n  const videoParticipants = useMemo(() => Object.values(participants)\n    .filter(({ video, presentation }) => video || presentation)\n    .flatMap(({ id, video, presentation }) => compact([\n      video ? {\n        id,\n        type: 'video' as const,\n      } : undefined,\n      presentation ? {\n        id,\n        type: 'screen' as const,\n      } : undefined,\n    ])),\n  [participants]);\n  const hasVideoParticipants = videoParticipants.length > 0;\n\n  const groupCallTitle = title || lang('VoipGroupVoiceChat');\n  const membersString = lang('Participants', participantsCount, 'i');\n\n  const [isConfirmLeaveModalOpen, openConfirmLeaveModal, closeConfirmLeaveModal] = useFlag();\n  const [isEndGroupCallModal, setIsEndGroupCallModal] = useState(false);\n  const [shouldEndGroupCall, setShouldEndGroupCall] = useState(false);\n\n  const hasVideo = meParticipant?.hasVideoStream;\n  const hasPresentation = meParticipant?.hasPresentationStream;\n  const hasAudioStream = meParticipant?.hasAudioStream;\n  const isConnecting = connectionState !== 'connected';\n  const canSelfUnmute = meParticipant?.canSelfUnmute;\n  const canRequestToSpeak = !canSelfUnmute && !hasAudioStream;\n\n  useEffect(() => {\n    if (connectionState === 'connected') {\n      playGroupCallSound({ sound: 'join' });\n    } else if (connectionState === 'reconnecting') {\n      playGroupCallSound({ sound: 'connecting' });\n    }\n  }, [connectionState]);\n\n  const handleCloseConfirmLeaveModal = useLastCallback(() => {\n    closeConfirmLeaveModal();\n    setIsEndGroupCallModal(false);\n  });\n\n  const handleToggleFullscreen = useLastCallback(() => {\n    if (!containerRef.current || isMobile) return;\n\n    if (isFullscreen) {\n      closeFullscreen();\n    } else {\n      openFullscreen();\n    }\n  });\n\n  const handleToggleSidebar = useLastCallback(() => {\n    if (isSidebarOpen) {\n      closeSidebar();\n    } else {\n      openSidebar();\n    }\n  });\n\n  const handleToggleGroupCallPanel = useLastCallback(() => {\n    toggleGroupCallPanel();\n  });\n\n  const handleInviteMember = useLastCallback(() => {\n    createGroupCallInviteLink();\n  });\n\n  const handleClickVideo = useLastCallback(() => {\n    toggleGroupCallVideo();\n  });\n\n  useEffect(() => {\n    connectToActiveGroupCall();\n  }, [connectToActiveGroupCall, groupCallId]);\n\n  const handleLeaveGroupCall = useLastCallback(() => {\n    if (isAdmin && !isConfirmLeaveModalOpen) {\n      openConfirmLeaveModal();\n      return;\n    }\n    playGroupCallSound({ sound: 'leave' });\n    setIsLeaving(true);\n    closeConfirmLeaveModal();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (!isLeaving) return;\n\n    leaveGroupCall({\n      shouldDiscard: shouldEndGroupCall,\n    });\n  });\n\n  const handleToggleGroupCallPresentation = useLastCallback(() => {\n    toggleGroupCallPresentation();\n  });\n\n  const canPinVideo = videoParticipants.length > 1 && !isMobile;\n  const isLandscapeWithVideos = isLandscapeLayout && hasVideoParticipants;\n  const [pinnedVideo, setPinnedVideo] = useState<VideoParticipant | undefined>(undefined);\n  const {\n    videoLayout,\n    panelOffset,\n  } = useGroupCallVideoLayout({\n    primaryContainerRef: primaryVideoContainerRef,\n    secondaryContainerRef: secondaryVideoContainerRef,\n    videoParticipants,\n    isLandscapeLayout,\n    pinnedVideo,\n  });\n\n  const handleSetPinnedVideo = useLastCallback((video: VideoParticipant | undefined) => {\n    setPinnedVideo(video);\n    if (video && !isFullscreen) {\n      openFullscreen();\n    }\n  });\n\n  const handleOpenFirstPresentation = useLastCallback(() => {\n    if (!firstPresentation) return;\n\n    setPinnedVideo({\n      id: firstPresentation.id,\n      type: 'screen',\n    });\n  });\n\n  useEffect(handleOpenFirstPresentation, [handleOpenFirstPresentation, Boolean(firstPresentation)]);\n\n  useEffect(() => {\n    if (!pinnedVideo) return;\n    if (!videoParticipants.some((l) => l.type === pinnedVideo.type && l.id === pinnedVideo.id)) {\n      setPinnedVideo(undefined);\n    }\n  }, [pinnedVideo, videoLayout, videoParticipants]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={toggleGroupCallPanel}\n      className={buildClassName(\n        styles.root,\n        (isFullscreen || isMobile) && styles.fullscreen,\n        isAppFullscreen && styles.appFullscreen,\n        isLandscapeLayout && styles.landscape,\n        !hasVideoParticipants && styles.noVideoParticipants,\n        !isLandscapeLayout && styles.portrait,\n        !isSidebarOpen && isLandscapeWithVideos && styles.noSidebar,\n      )}\n      dialogRef={containerRef}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {isLandscapeWithVideos && (\n        <div className={styles.videos}>\n          <div className={styles.videosHeader}>\n            {!isMobile && (\n              <Button\n                round\n                size=\"smaller\"\n                color=\"translucent\"\n                onClick={handleToggleFullscreen}\n                className={buildClassName(styles.headerButton, styles.firstButton)}\n                ariaLabel={lang(isFullscreen ? 'AccExitFullscreen' : 'AccSwitchToFullscreen')}\n              >\n                <Icon name={isFullscreen ? 'smallscreen' : 'fullscreen'} />\n              </Button>\n            )}\n\n            <h3 className={buildClassName(styles.title, styles.bigger)}>\n              {title || lang('VoipGroupVoiceChat')}\n            </h3>\n\n            {isLandscapeWithVideos && !isSidebarOpen && (\n              <Button\n                round\n                size=\"smaller\"\n                color=\"translucent\"\n                className={buildClassName(styles.headerButton, styles.videosHeaderLastButton)}\n                onClick={handleToggleSidebar}\n                ariaLabel={lang('AccDescrExpandPanel')}\n              >\n                <Icon name=\"sidebar\" />\n              </Button>\n            )}\n          </div>\n\n          <div\n            className={styles.videosContent}\n            ref={primaryVideoContainerRef}\n          />\n        </div>\n      )}\n\n      <div className={styles.panelWrapper} ref={panelRef}>\n        <div className={buildClassName(styles.panel, 'custom-scroll')}>\n          <div className={styles.panelScrollTrigger} ref={panelScrollTriggerRef} />\n\n          <div className={buildClassName(styles.panelHeader, hasScrolled && styles.scrolled)}>\n            {!isLandscapeWithVideos && !isMobile && (\n              <Button\n                round\n                size=\"smaller\"\n                color=\"translucent\"\n                ripple={!isMobile}\n                className={buildClassName(\n                  styles.firstButton,\n                  styles.headerButton,\n                )}\n                onClick={handleToggleFullscreen}\n                ariaLabel={lang('AccSwitchToFullscreen')}\n              >\n                <Icon name=\"fullscreen\" />\n              </Button>\n            )}\n\n            {isMobile && (\n              <Button\n                round\n                size=\"smaller\"\n                color=\"translucent\"\n                onClick={handleToggleGroupCallPanel}\n                className={buildClassName(styles.headerButton, styles.firstButton)}\n                ariaLabel={lang('Close')}\n              >\n                <Icon name=\"close\" />\n              </Button>\n            )}\n\n            {isLandscapeWithVideos && (\n              <Button\n                round\n                size=\"smaller\"\n                ripple={!isMobile}\n                className={buildClassName(\n                  styles.firstButton,\n                  styles.headerButton,\n                )}\n                color=\"translucent\"\n                onClick={handleToggleSidebar}\n                ariaLabel={lang('AccDescrCollapsePanel')}\n              >\n                <Icon name=\"sidebar\" />\n              </Button>\n            )}\n\n            <div className={styles.panelHeaderText}>\n              <h3 className={buildClassName(styles.title, isLandscapeWithVideos && styles.bigger)}>\n                {isLandscapeWithVideos ? membersString : groupCallTitle}\n              </h3>\n              {!isLandscapeWithVideos && (\n                <span className={styles.subtitle}>\n                  {membersString}\n                </span>\n              )}\n            </div>\n\n            {!isLandscapeWithVideos && canInvite && (\n              <Button\n                round\n                size=\"smaller\"\n                ripple={!isMobile}\n                className={buildClassName(\n                  styles.lastButton,\n                  styles.headerButton,\n                )}\n                color=\"translucent\"\n                onClick={handleInviteMember}\n                ariaLabel={lang('VoipGroupInviteMember')}\n              >\n                <Icon name=\"add-user\" />\n              </Button>\n            )}\n          </div>\n\n          <div className={styles.participants}>\n            <div\n              className={styles.participantVideos}\n              ref={secondaryVideoContainerRef}\n              style={`height: ${panelOffset}px;`}\n            >\n              {videoLayout.map((layout) => {\n                const participant = participants[layout.participantId];\n                if (!layout.isRemounted || !participant) {\n                  return (\n                    <div\n                      teactOrderKey={layout.orderKey}\n                      key={`${layout.participantId}_${layout.type}`}\n                    />\n                  );\n                }\n\n                return (\n                  <GroupCallParticipantVideo\n                    teactOrderKey={layout.orderKey}\n                    key={`${layout.participantId}_${layout.type}`}\n                    layout={layout}\n                    canPin={canPinVideo}\n                    setPinned={handleSetPinnedVideo}\n                    pinnedVideo={pinnedVideo}\n                    participant={participant}\n                  />\n                );\n              })}\n            </div>\n            <GroupCallParticipantList\n              panelOffset={panelOffset}\n              isLandscape={isLandscapeWithVideos}\n            />\n          </div>\n        </div>\n\n        <FloatingActionButton\n          key=\"add-participant\"\n          isShown={isLandscapeWithVideos && canInvite}\n          onClick={handleInviteMember}\n          className={styles.addParticipantButton}\n          ariaLabel={lang('VoipGroupInviteMember')}\n        >\n          <Icon name=\"add-user-filled\" />\n        </FloatingActionButton>\n      </div>\n\n      <div className={styles.mainVideoContainer}>\n        {videoLayout.map((layout) => {\n          const participant = participants[layout.participantId];\n          if (layout.isRemounted || !participant) {\n            return (\n              <div\n                teactOrderKey={layout.orderKey}\n                key={`${layout.participantId}_${layout.type}`}\n              />\n            );\n          }\n          return (\n            <GroupCallParticipantVideo\n              teactOrderKey={layout.orderKey}\n              key={`${layout.participantId}_${layout.type}`}\n              layout={layout}\n              canPin={canPinVideo}\n              setPinned={handleSetPinnedVideo}\n              pinnedVideo={pinnedVideo}\n              participant={participant}\n              className={styles.video}\n            />\n          );\n        })}\n      </div>\n\n      <div className={styles.actions}>\n        <Button\n          round\n          size=\"default\"\n          ripple\n          className={buildClassName(\n            styles.actionButton,\n            !hasAudioStream && styles.muted,\n            canRequestToSpeak && styles.canRequestToSpeak,\n          )}\n          onClick={handleClickVideo}\n          ariaLabel={lang(hasVideo ? 'VoipStopVideo' : 'VoipStartVideo')}\n          disabled={isConnecting}\n        >\n          <Icon name={!hasVideo ? 'video-stop' : 'video'} />\n        </Button>\n\n        <Button\n          round\n          size=\"default\"\n          ripple\n          className={buildClassName(\n            styles.actionButton,\n            !hasAudioStream && styles.muted,\n            canRequestToSpeak && styles.canRequestToSpeak,\n          )}\n          onClick={handleToggleGroupCallPresentation}\n          ariaLabel={lang(hasPresentation ? 'lng_group_call_screen_share_stop' : 'lng_group_call_tooltip_screen')}\n          disabled={isConnecting || !IS_SCREENSHARE_SUPPORTED}\n        >\n          <Icon name={!hasPresentation ? 'share-screen-stop' : 'share-screen'} />\n        </Button>\n\n        <MicrophoneButton className={styles.actionButton} />\n\n        <Button\n          round\n          size=\"default\"\n          ripple\n          className={buildClassName(\n            styles.actionButton,\n            !hasAudioStream && styles.muted,\n            canRequestToSpeak && styles.canRequestToSpeak,\n          )}\n          ariaLabel={lang('lng_group_call_settings')}\n          disabled\n        >\n          <Icon name=\"settings-filled\" />\n        </Button>\n\n        <Button\n          round\n          size=\"default\"\n          ripple\n          className={buildClassName(\n            styles.actionButton,\n            styles.destructive,\n          )}\n          onClick={handleLeaveGroupCall}\n          ariaLabel={lang('lng_group_call_leave')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      </div>\n\n      <Modal\n        isOpen={isConfirmLeaveModalOpen}\n        onClose={handleCloseConfirmLeaveModal}\n        className=\"error\"\n        title={lang(isEndGroupCallModal ? 'VoipGroupEndAlertTitle' : 'VoipGroupLeaveAlertTitle')}\n      >\n        <p>{lang(isEndGroupCallModal ? 'VoipGroupEndAlertText' : 'VoipGroupLeaveAlertText')}</p>\n        {!isEndGroupCallModal && (\n          <Checkbox\n            className=\"dialog-checkbox\"\n            label={lang('VoipGroupEndChat')}\n            checked={shouldEndGroupCall}\n            onCheck={setShouldEndGroupCall}\n          />\n        )}\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" onClick={handleLeaveGroupCall}>\n            {lang(isEndGroupCallModal ? 'VoipGroupEnd' : 'VoipGroupLeave')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseConfirmLeaveModal}>\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </Modal>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { groupCallId }): Complete<StateProps> => {\n    const {\n      connectionState, title, participants, participantsCount, chatId,\n    } = selectGroupCall(global, groupCallId) || {};\n\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n\n    return {\n      connectionState,\n      title: title || chat?.title,\n      participantsCount,\n      meParticipant: selectGroupCallParticipant(global, groupCallId, global.currentUserId!),\n      isCallPanelVisible: Boolean(selectTabState(global).isCallPanelVisible),\n      isAdmin: selectIsAdminInActiveGroupCall(global),\n      participants,\n      canInvite: selectCanInviteToActiveGroupCall(global),\n    };\n  },\n)(GroupCall));\n","import type {\n  ElementRef } from '../../../../lib/teact/teact';\nimport {\n  useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\n\nconst PADDING_HORIZONTAL = 10;\nconst PADDING_VERTICAL = 8;\nconst PREFERRED_PANEL_VIDEO_HEIGHT = 240;\n\nexport type VideoLayout = {\n  participantId: string;\n  type: 'video' | 'screen';\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  shouldRemount?: boolean;\n  isRemounted?: boolean;\n  noAnimate?: boolean;\n  isRemoved?: boolean;\n  orderKey: number;\n};\n\nexport type VideoParticipant = {\n  id: string;\n  type: 'video' | 'screen';\n};\n\nexport default function useGroupCallVideoLayout({\n  primaryContainerRef,\n  secondaryContainerRef,\n  videoParticipants,\n  isLandscapeLayout,\n  pinnedVideo,\n}: {\n  primaryContainerRef: ElementRef<HTMLDivElement>;\n  secondaryContainerRef: ElementRef<HTMLDivElement>;\n  videoParticipants: VideoParticipant[];\n  isLandscapeLayout: boolean;\n  pinnedVideo: VideoParticipant | undefined;\n}) {\n  const [videoLayout, setVideoLayout] = useState<VideoLayout[]>([]);\n  const [panelOffset, setPanelOffset] = useState(0);\n  const videosCount = videoParticipants.length;\n  const prevVideosCount = usePreviousDeprecated(videosCount);\n  const prevVideoParticipants = usePreviousDeprecated(videoParticipants);\n  const removedVideoParticipants = useMemo(() => {\n    return prevVideoParticipants?.filter(\n      ({ id, type }) => !videoParticipants.some((p) => p.id === id && p.type === type),\n    );\n  }, [prevVideoParticipants, videoParticipants]);\n\n  const recalculateLayout = useLastCallback(() => {\n    const primaryContainer = primaryContainerRef.current;\n    const secondaryContainer = secondaryContainerRef.current;\n    if (!secondaryContainer) return;\n\n    const removed = prevVideosCount !== undefined && prevVideosCount > videosCount\n      ? prevVideosCount - videosCount : 0;\n\n    const {\n      x: secondaryInitialX,\n      y: secondaryInitialY,\n      width: secondaryContainerWidth,\n    } = secondaryContainer.getBoundingClientRect();\n\n    const layout: VideoLayout[] = [];\n    if (pinnedVideo !== undefined || !primaryContainer || !isLandscapeLayout) {\n      const isRemounted = true;\n      let skip = false;\n      let pinnedSkipIndex = 0;\n      let pinnedPush: VideoLayout | undefined;\n      let participants = videoParticipants;\n      if (pinnedVideo && primaryContainer && isLandscapeLayout) {\n        pinnedSkipIndex = participants\n          .findIndex(({ id, type }) => id === pinnedVideo.id && type === pinnedVideo.type);\n        if (pinnedSkipIndex !== -1) {\n          const {\n            x: initialX,\n            y: initialY,\n            width: containerWidth,\n            height: containerHeight,\n          } = primaryContainer.getBoundingClientRect();\n\n          const { id: participantId, type } = pinnedVideo;\n\n          pinnedPush = {\n            x: initialX,\n            y: initialY,\n            width: containerWidth,\n            height: containerHeight,\n            participantId,\n            type,\n            orderKey: pinnedSkipIndex,\n          };\n          skip = true;\n          participants = participants\n            .filter(({ id, type: videoType }) => id !== participantId || videoType !== pinnedVideo.type);\n        }\n      }\n\n      const secondaryVideosCounts = skip ? videosCount - 1 : videosCount;\n\n      const isFirstBig = secondaryVideosCounts % 2 === 1;\n      const columns = 2;\n      const rows = Math.ceil(secondaryVideosCounts / columns);\n      const smallWidth = (secondaryContainerWidth - (columns - 1) * PADDING_HORIZONTAL) / columns;\n      const heightTotal = Math.max(0, isFirstBig\n        ? (PREFERRED_PANEL_VIDEO_HEIGHT + (rows - 1) * smallWidth + (rows - 1) * PADDING_VERTICAL)\n        : rows * smallWidth + (rows - 1) * PADDING_VERTICAL);\n\n      for (let i = 0; i < secondaryVideosCounts; i++) {\n        const isBig = isFirstBig && i === 0;\n        const width = isBig ? secondaryContainerWidth : smallWidth;\n        const height = isBig ? PREFERRED_PANEL_VIDEO_HEIGHT : smallWidth;\n\n        const realIndex = isFirstBig && i !== 0 ? i + 1 : i;\n\n        const x = (isRemounted ? 0 : secondaryInitialX) + (realIndex % columns) * (width + PADDING_HORIZONTAL);\n        const y = (isRemounted ? 0 : secondaryInitialY) + (isFirstBig && i !== 0 ? (\n          PREFERRED_PANEL_VIDEO_HEIGHT + PADDING_VERTICAL\n          + (Math.floor(realIndex / columns) - 1) * (height + PADDING_VERTICAL)\n        ) : (\n          Math.floor(realIndex / columns) * (height + PADDING_VERTICAL)\n        ));\n        layout.push({\n          x,\n          y,\n          width,\n          height,\n          shouldRemount: !isRemounted,\n          isRemounted,\n          noAnimate: true,\n          participantId: participants[i].id,\n          type: participants[i].type,\n          orderKey: i >= pinnedSkipIndex ? i + 1 : i,\n        });\n      }\n\n      if (pinnedPush) {\n        layout.splice(pinnedSkipIndex, 0, pinnedPush);\n      }\n\n      if (removedVideoParticipants) {\n        for (let i = 0; i < removed; i++) {\n          layout.push({\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n            isRemounted,\n            isRemoved: true,\n            participantId: removedVideoParticipants[i].id,\n            type: removedVideoParticipants[i].type,\n            orderKey: i + videosCount,\n          });\n        }\n      }\n\n      setPanelOffset(heightTotal);\n      setVideoLayout(layout);\n      return;\n    }\n\n    const {\n      x: initialX,\n      y: initialY,\n      width: containerWidth,\n      height: containerHeight,\n    } = primaryContainer.getBoundingClientRect();\n\n    const columns = calculateColumnsCount(videosCount);\n    const rows = Math.ceil(videosCount / columns);\n    const totalGridSize = rows * columns;\n    const shouldFillLastRow = totalGridSize > videosCount;\n    const width = (containerWidth - (columns - 1) * PADDING_HORIZONTAL) / columns;\n    const height = (containerHeight - (rows - 1) * PADDING_VERTICAL) / rows;\n\n    const lastRowWidth = width * (videosCount % columns);\n    for (let i = 0; i < videosCount; i++) {\n      const row = Math.floor(i / columns);\n      const shouldCenter = shouldFillLastRow && row === rows - 1;\n      const x = initialX + (i % columns) * (width + PADDING_HORIZONTAL)\n        + (shouldCenter ? (containerWidth - lastRowWidth) / 2 : 0);\n      const y = initialY + Math.floor(i / columns) * (height + PADDING_VERTICAL);\n      layout.push({\n        x,\n        y,\n        width,\n        height,\n        participantId: videoParticipants[i].id,\n        type: videoParticipants[i].type,\n        orderKey: i,\n      });\n    }\n\n    if (removedVideoParticipants) {\n      for (let i = 0; i < removed; i++) {\n        layout.push({\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0,\n          isRemoved: true,\n          participantId: removedVideoParticipants[i].id,\n          type: removedVideoParticipants[i].type,\n          orderKey: i + videosCount,\n        });\n      }\n    }\n\n    setPanelOffset(0);\n    setVideoLayout(layout);\n  });\n\n  useEffect(recalculateLayout, [\n    recalculateLayout, videoParticipants, isLandscapeLayout, pinnedVideo,\n  ]);\n\n  useResizeObserver(primaryContainerRef, recalculateLayout, !primaryContainerRef.current);\n  useResizeObserver(secondaryContainerRef, recalculateLayout, !secondaryContainerRef.current);\n\n  return {\n    videoLayout, panelOffset,\n  };\n}\n\nfunction calculateColumnsCount(videosCount: number) {\n  if (videosCount >= 25) {\n    return 5;\n  } else if (videosCount >= 13) {\n    return 4;\n  } else if (videosCount >= 7) {\n    return 3;\n  } else if (videosCount >= 3) {\n    return 2;\n  } else {\n    return 1;\n  }\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiGroupCall, ApiUser } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { selectActiveGroupCall, selectPhoneCallUser } from '../../global/selectors/calls';\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './ActiveCallHeader.scss';\n\ntype StateProps = {\n  isCallPanelVisible?: boolean;\n  groupCall?: ApiGroupCall;\n  phoneCallUser?: ApiUser;\n};\n\nconst ActiveCallHeader: FC<StateProps> = ({\n  groupCall,\n  phoneCallUser,\n  isCallPanelVisible,\n}) => {\n  const { toggleGroupCallPanel } = getActions();\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    document.body.classList.toggle('has-call-header', Boolean(isCallPanelVisible));\n    window.tauri?.markTitleBarOverlay(!isCallPanelVisible);\n\n    return () => {\n      document.body.classList.toggle('has-call-header', false);\n      window.tauri?.markTitleBarOverlay(true);\n    };\n  }, [isCallPanelVisible]);\n\n  function handleToggleGroupCallPanel() {\n    toggleGroupCallPanel();\n  }\n\n  if (!groupCall && !phoneCallUser) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'ActiveCallHeader',\n        isCallPanelVisible && 'open',\n      )}\n      onClick={handleToggleGroupCallPanel}\n    >\n      <span className=\"title\">{phoneCallUser?.firstName || groupCall?.title || lang('VoipGroupVoiceChat')}</span>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): Complete<StateProps> => {\n    const tabState = selectTabState(global);\n    return {\n      groupCall: tabState.isMasterTab ? selectActiveGroupCall(global) : undefined,\n      isCallPanelVisible: tabState.isCallPanelVisible,\n      phoneCallUser: tabState.isMasterTab ? selectPhoneCallUser(global) : undefined,\n    };\n  },\n)(ActiveCallHeader));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lBO3RZUM\",\"button\":\"ch2sqAKW\",\"active\":\"OQxlsRp7\",\"button-text\":\"aHguvLcL\",\"buttonText\":\"aHguvLcL\"};","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './PhoneCallButton.module.scss';\n\ntype OwnProps = {\n  onClick: VoidFunction;\n  label: string;\n  icon?: IconName;\n  iconClassName?: string;\n  customIcon?: React.ReactNode;\n  className?: string;\n  isDisabled?: boolean;\n  isActive?: boolean;\n};\n\nconst PhoneCallButton: FC<OwnProps> = ({\n  onClick,\n  label,\n  customIcon,\n  icon,\n  iconClassName,\n  className,\n  isDisabled,\n  isActive,\n}) => {\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        className={buildClassName(className, styles.button, isActive && styles.active)}\n        onClick={onClick}\n        disabled={isDisabled}\n      >\n        {customIcon || <Icon name={icon!} className={iconClassName} />}\n      </Button>\n      <div className={styles.buttonText}>{label}</div>\n    </div>\n  );\n};\n\nexport default memo(PhoneCallButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GNYRVAUg\",\"blurred\":\"RBmbMiou\",\"single-column\":\"O7cZE08z\",\"singleColumn\":\"O7cZE08z\",\"header\":\"GI6dY5aJ\",\"close-button\":\"ULiJZuaP\",\"closeButton\":\"ULiJZuaP\",\"emojis-backdrop\":\"RFBKZpjx\",\"emojisBackdrop\":\"RFBKZpjx\",\"open\":\"zi1NlOXX\",\"emojis\":\"DFco1VIN\",\"emoji-tooltip\":\"MRIShZ3V\",\"emojiTooltip\":\"MRIShZ3V\",\"user-info\":\"eaUe2A0c\",\"userInfo\":\"eaUe2A0c\",\"buttons\":\"qIeflO02\",\"leave\":\"hclywYYk\",\"accept\":\"ln_ZBUHy\",\"accept-icon\":\"cVRd3twS\",\"acceptIcon\":\"cVRd3twS\",\"main-video\":\"bGlBFSJq\",\"mainVideo\":\"bGlBFSJq\",\"second-video\":\"TOFu1n5x\",\"secondVideo\":\"TOFu1n5x\",\"visible\":\"LOnSFN9w\",\"fullscreen\":\"Omg5T1o6\"};","import '../../../global/actions/calls';\n\nimport type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoneCall, ApiUser } from '../../../api/types';\n\nimport {\n  getStreams, IS_SCREENSHARE_SUPPORTED, switchCameraInputP2p, toggleStreamP2p,\n} from '../../../lib/secret-sauce';\nimport { selectTabState } from '../../../global/selectors';\nimport { selectPhoneCallUser } from '../../../global/selectors/calls';\nimport {\n  IS_ANDROID,\n  IS_IOS,\n  IS_REQUEST_FULLSCREEN_SUPPORTED,\n} from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../common/AnimatedIcon';\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport PhoneCallButton from './PhoneCallButton';\n\nimport styles from './PhoneCall.module.scss';\n\ntype StateProps = {\n  user?: ApiUser;\n  phoneCall?: ApiPhoneCall;\n  isOutgoing: boolean;\n  isCallPanelVisible?: boolean;\n};\n\nconst PhoneCall: FC<StateProps> = ({\n  user,\n  isOutgoing,\n  phoneCall,\n  isCallPanelVisible,\n}) => {\n  const lang = useOldLang();\n  const {\n    hangUp, requestMasterAndAcceptCall, playGroupCallSound, toggleGroupCallPanel, connectToActivePhoneCall,\n  } = getActions();\n  const containerRef = useRef<HTMLDivElement>();\n\n  const [isFullscreen, openFullscreen, closeFullscreen] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const toggleFullscreen = useCallback(() => {\n    if (isFullscreen) {\n      closeFullscreen();\n    } else {\n      openFullscreen();\n    }\n  }, [closeFullscreen, isFullscreen, openFullscreen]);\n\n  const handleToggleFullscreen = useCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isFullscreen) {\n      document.exitFullscreen().then(closeFullscreen);\n    } else {\n      containerRef.current.requestFullscreen().then(openFullscreen);\n    }\n  }, [closeFullscreen, isFullscreen, openFullscreen]);\n\n  useEffect(() => {\n    if (!IS_REQUEST_FULLSCREEN_SUPPORTED) return undefined;\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    container.addEventListener('fullscreenchange', toggleFullscreen);\n\n    return () => {\n      container.removeEventListener('fullscreenchange', toggleFullscreen);\n    };\n  }, [toggleFullscreen]);\n\n  const handleClose = useCallback(() => {\n    toggleGroupCallPanel();\n    if (isFullscreen) {\n      closeFullscreen();\n    }\n  }, [closeFullscreen, isFullscreen, toggleGroupCallPanel]);\n\n  const isDiscarded = phoneCall?.state === 'discarded';\n  const isBusy = phoneCall?.reason === 'busy';\n\n  const isIncomingRequested = phoneCall?.state === 'requested' && !isOutgoing;\n  const isOutgoingRequested = (phoneCall?.state === 'requested' || phoneCall?.state === 'waiting') && isOutgoing;\n  const isActive = phoneCall?.state === 'active';\n  const isConnected = phoneCall?.isConnected;\n\n  const [isHangingUp, startHangingUp, stopHangingUp] = useFlag();\n  const handleHangUp = useCallback(() => {\n    startHangingUp();\n    hangUp();\n  }, [hangUp, startHangingUp]);\n\n  useEffect(() => {\n    if (isHangingUp) {\n      playGroupCallSound({ sound: 'end' });\n    } else if (isIncomingRequested) {\n      playGroupCallSound({ sound: 'incoming' });\n    } else if (isBusy) {\n      playGroupCallSound({ sound: 'busy' });\n    } else if (isDiscarded) {\n      playGroupCallSound({ sound: 'end' });\n    } else if (isOutgoingRequested) {\n      playGroupCallSound({ sound: 'ringing' });\n    } else if (isConnected) {\n      playGroupCallSound({ sound: 'connect' });\n    }\n  }, [isBusy, isDiscarded, isIncomingRequested, isOutgoingRequested, isConnected, playGroupCallSound, isHangingUp]);\n\n  useEffect(() => {\n    if (phoneCall?.id) {\n      stopHangingUp();\n    } else {\n      connectToActivePhoneCall();\n    }\n  }, [connectToActivePhoneCall, phoneCall?.id, stopHangingUp]);\n\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, isConnected ? 1000 : undefined);\n\n  const callStatus = useMemo(() => {\n    const state = phoneCall?.state;\n    if (isHangingUp) {\n      return lang('lng_call_status_hanging');\n    }\n    if (isBusy) return 'busy';\n    if (state === 'requesting') {\n      return lang('lng_call_status_requesting');\n    } else if (state === 'requested') {\n      return isOutgoing ? lang('lng_call_status_ringing') : lang('lng_call_status_incoming');\n    } else if (state === 'waiting') {\n      return lang('lng_call_status_waiting');\n    } else if (state === 'active' && isConnected) {\n      return undefined;\n    } else {\n      return lang('lng_call_status_exchanging');\n    }\n  }, [isBusy, isConnected, isHangingUp, isOutgoing, lang, phoneCall?.state]);\n\n  const hasVideo = phoneCall?.videoState === 'active';\n  const hasPresentation = phoneCall?.screencastState === 'active';\n\n  const streams = getStreams();\n  const hasOwnAudio = streams?.ownAudio?.getTracks()[0].enabled;\n  const hasOwnPresentation = streams?.ownPresentation?.getTracks()[0].enabled;\n  const hasOwnVideo = streams?.ownVideo?.getTracks()[0].enabled;\n\n  const [isHidingPresentation, startHidingPresentation, stopHidingPresentation] = useFlag();\n  const [isHidingVideo, startHidingVideo, stopHidingVideo] = useFlag();\n\n  const handleTogglePresentation = useCallback(() => {\n    if (hasOwnPresentation) {\n      startHidingPresentation();\n    }\n    if (hasOwnVideo) {\n      startHidingVideo();\n    }\n    setTimeout(async () => {\n      await toggleStreamP2p('presentation');\n      stopHidingPresentation();\n      stopHidingVideo();\n    }, 250);\n  }, [\n    hasOwnPresentation, hasOwnVideo, startHidingPresentation, startHidingVideo, stopHidingPresentation, stopHidingVideo,\n  ]);\n\n  const handleToggleVideo = useCallback(() => {\n    if (hasOwnVideo) {\n      startHidingVideo();\n    }\n    if (hasOwnPresentation) {\n      startHidingPresentation();\n    }\n    setTimeout(async () => {\n      await toggleStreamP2p('video');\n      stopHidingPresentation();\n      stopHidingVideo();\n    }, 250);\n  }, [\n    hasOwnPresentation, hasOwnVideo, startHidingPresentation, startHidingVideo, stopHidingPresentation, stopHidingVideo,\n  ]);\n\n  const handleToggleAudio = useCallback(() => {\n    void toggleStreamP2p('audio');\n  }, []);\n\n  const [isEmojiOpen, openEmoji, closeEmoji] = useFlag();\n\n  const [isFlipping, startFlipping, stopFlipping] = useFlag();\n\n  const handleFlipCamera = useCallback(() => {\n    startFlipping();\n    switchCameraInputP2p();\n    setTimeout(stopFlipping, 250);\n  }, [startFlipping, stopFlipping]);\n\n  const timeElapsed = phoneCall?.startDate && (Number(new Date()) / 1000 - phoneCall.startDate);\n\n  useEffect(() => {\n    if (phoneCall?.state === 'discarded') {\n      setTimeout(hangUp, 250);\n    }\n  }, [hangUp, phoneCall?.reason, phoneCall?.state]);\n\n  return (\n    <Modal\n      isOpen={phoneCall && phoneCall?.state !== 'discarded' && !isCallPanelVisible}\n      onClose={handleClose}\n      className={buildClassName(\n        styles.root,\n        isMobile && styles.singleColumn,\n      )}\n      dialogRef={containerRef}\n    >\n      <Avatar\n        peer={user}\n        size=\"jumbo\"\n        className={hasVideo || hasPresentation ? styles.blurred : ''}\n      />\n      {phoneCall?.screencastState === 'active' && streams?.presentation\n        && <video className={styles.mainVideo} muted autoPlay playsInline srcObject={streams.presentation} />}\n      {phoneCall?.videoState === 'active' && streams?.video\n        && <video className={styles.mainVideo} muted autoPlay playsInline srcObject={streams.video} />}\n      <video\n        className={buildClassName(\n          styles.secondVideo,\n          !isHidingPresentation && hasOwnPresentation && styles.visible,\n          isFullscreen && styles.fullscreen,\n        )}\n        muted\n        autoPlay\n        playsInline\n        srcObject={streams?.ownPresentation}\n      />\n      <video\n        className={buildClassName(\n          styles.secondVideo,\n          !isHidingVideo && hasOwnVideo && styles.visible,\n          isFullscreen && styles.fullscreen,\n        )}\n        muted\n        autoPlay\n        playsInline\n        srcObject={streams?.ownVideo}\n      />\n      <div className={styles.header}>\n        {IS_REQUEST_FULLSCREEN_SUPPORTED && (\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={handleToggleFullscreen}\n            ariaLabel={lang(isFullscreen ? 'AccExitFullscreen' : 'AccSwitchToFullscreen')}\n          >\n            <Icon name={isFullscreen ? 'smallscreen' : 'fullscreen'} />\n          </Button>\n        )}\n\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          className={styles.closeButton}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      </div>\n      <div\n        className={buildClassName(styles.emojisBackdrop, isEmojiOpen && styles.open)}\n        onClick={!isEmojiOpen ? openEmoji : closeEmoji}\n      >\n        <div className={buildClassName(styles.emojis, isEmojiOpen && styles.open)}>\n          {phoneCall?.isConnected && phoneCall?.emojis && renderText(phoneCall.emojis, ['emoji'])}\n        </div>\n        <div className={buildClassName(styles.emojiTooltip, isEmojiOpen && styles.open)}>\n          {lang('CallEmojiKeyTooltip', user?.firstName).replace('%%', '%')}\n        </div>\n      </div>\n      <div className={styles.userInfo}>\n        <h1>{user?.firstName}</h1>\n        <span className={styles.status}>{callStatus || formatMediaDuration(timeElapsed || 0)}</span>\n      </div>\n      <div className={styles.buttons}>\n        <PhoneCallButton\n          onClick={handleToggleAudio}\n          icon=\"microphone\"\n          isDisabled={!isActive}\n          isActive={hasOwnAudio}\n          label={lang(hasOwnAudio ? 'lng_call_mute_audio' : 'lng_call_unmute_audio')}\n        />\n        <PhoneCallButton\n          onClick={handleToggleVideo}\n          icon=\"video\"\n          isDisabled={!isActive}\n          isActive={hasOwnVideo}\n          label={lang(hasOwnVideo ? 'lng_call_stop_video' : 'lng_call_start_video')}\n        />\n        {hasOwnVideo && (IS_ANDROID || IS_IOS) && (\n          <PhoneCallButton\n            onClick={handleFlipCamera}\n            customIcon={(\n              <AnimatedIcon\n                tgsUrl={LOCAL_TGS_URLS.CameraFlip}\n                playSegment={!isFlipping ? [0, 1] : [0, 10]}\n                size={32}\n              />\n            )}\n            isDisabled={!isActive}\n            label={lang('VoipFlip')}\n          />\n        )}\n        {IS_SCREENSHARE_SUPPORTED && (\n          <PhoneCallButton\n            onClick={handleTogglePresentation}\n            icon=\"share-screen\"\n            isDisabled={!isActive}\n            isActive={hasOwnPresentation}\n            label={lang('lng_call_screencast')}\n          />\n        )}\n        {isIncomingRequested && (\n          <PhoneCallButton\n            onClick={requestMasterAndAcceptCall}\n            icon=\"phone-discard\"\n            isDisabled={isDiscarded}\n            label={lang('lng_call_accept')}\n            className={styles.accept}\n            iconClassName={styles.acceptIcon}\n          />\n        )}\n        <PhoneCallButton\n          onClick={handleHangUp}\n          icon=\"phone-discard\"\n          isDisabled={isDiscarded}\n          label={lang(isIncomingRequested ? 'lng_call_decline' : 'lng_call_end_call')}\n          className={styles.leave}\n        />\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): Complete<StateProps> => {\n    const { phoneCall, currentUserId } = global;\n    const { isCallPanelVisible, isMasterTab } = selectTabState(global);\n    const user = selectPhoneCallUser(global);\n\n    return {\n      isCallPanelVisible: Boolean(isCallPanelVisible),\n      user,\n      isOutgoing: phoneCall?.adminId === currentUserId,\n      phoneCall: isMasterTab ? phoneCall : undefined,\n    };\n  },\n)(PhoneCall));\n","// extracted by mini-css-extract-plugin\nexport default {\"stars\":\"P7EfDKJN\",\"star\":\"t8LJLFSN\",\"isFilled\":\"_XX6q8YW\",\"comment\":\"EvL0WaKD\",\"visible\":\"v5hn1XvT\"};","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useCallback, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './RatePhoneCallModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\nconst RatePhoneCallModal: FC<OwnProps> = ({\n  isOpen,\n}) => {\n  const { closeCallRatingModal, setCallRating } = getActions();\n\n  const inputRef = useRef<HTMLInputElement>();\n\n  const lang = useOldLang();\n  const [rating, setRating] = useState<number | undefined>();\n\n  const handleSend = useCallback(() => {\n    if (!rating) {\n      closeCallRatingModal();\n      return;\n    }\n    setCallRating({\n      rating: rating + 1,\n      comment: inputRef.current?.value || '',\n    });\n  }, [closeCallRatingModal, rating, setCallRating]);\n\n  function handleClickStar(index: number) {\n    return () => setRating(rating === index ? undefined : index);\n  }\n\n  const handleCancelClick = useCallback(() => {\n    closeCallRatingModal();\n  }, [closeCallRatingModal]);\n\n  return (\n    <Modal title={lang('lng_call_rate_label')} className=\"narrow\" onClose={closeCallRatingModal} isOpen={isOpen}>\n      <div className={styles.stars}>\n        {new Array(5).fill(undefined).map((_, i) => {\n          const isFilled = rating !== undefined && rating >= i;\n          return (\n            <Icon\n              name={isFilled ? 'favorite-filled' : 'favorite'}\n              className={buildClassName(\n                isFilled && styles.isFilled,\n                styles.star,\n              )}\n              onClick={handleClickStar(i)}\n            />\n          );\n        })}\n      </div>\n      <InputText\n        ref={inputRef}\n        placeholder={lang('lng_call_rate_comment')}\n        className={buildClassName(styles.comment, rating !== 4 && rating !== undefined && styles.visible)}\n      />\n\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleSend}>\n          {lang('Send')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={handleCancelClick}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(RatePhoneCallModal);\n","import { initializeSoundsForSafari } from '../global/actions/ui/calls';\nimport { IS_IOS, IS_SAFARI } from '../util/browser/windowEnvironment';\n\nexport { default as GroupCall } from '../components/calls/group/GroupCall';\nexport { default as ActiveCallHeader } from '../components/calls/ActiveCallHeader';\nexport { default as PhoneCall } from '../components/calls/phone/PhoneCall';\nexport { default as RatePhoneCallModal } from '../components/calls/phone/RatePhoneCallModal';\n\nif (IS_SAFARI || IS_IOS) {\n  document.addEventListener('click', initializeSoundsForSafari, { once: true });\n}\n","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { IS_TAURI } from '../../util/browser/globalEnvironment';\nimport { IS_IOS } from '../../util/browser/windowEnvironment';\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen<T extends HTMLElement>(elRef: ElementRef<T>, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    let removeTauriListener: VoidFunction | undefined;\n    const setupTauriListener = async () => {\n      const tauriWindow = await window.tauri?.getCurrentWindow();\n      removeTauriListener = await tauriWindow.onResized(() => {\n        tauriWindow.isFullscreen().then(setIsFullscreen);\n      });\n    };\n\n    if (IS_TAURI) {\n      window.tauri?.getCurrentWindow().then((tauriWindow) => {\n        tauriWindow.isFullscreen().then(setIsFullscreen);\n      });\n      setupTauriListener();\n    }\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeTauriListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: HTMLElement) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n"],"names":["memo","withGlobal","global","_ref2","userId","chat","selectCurrentChat","user","selectUser","contactName","getUserFirstOrLastName","undefined","_ref","isOpen","onClose","deleteChatMember","getActions","lang","useOldLang","handleDeleteChatMember","useCallback","chatId","id","_jsx","ConfirmDialog","title","textParts","renderText","confirmLabel","confirmHandler","confirmIsDestructive","selectChatGroupCall","fullInfo","selectChatFullInfo","groupCallId","selectGroupCall","groupCalls","byId","selectGroupCallParticipant","participantId","participants","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectChat","isChatBasicGroup","isCreator","Boolean","adminRights","manageCall","activeGroupCallId","selectPhoneCallUser","phoneCall","currentUserId","adminId","selectCanInviteToActiveGroupCall","groupCall","getMainUsername","inviteLink","toTelegramSource","source","fromTelegramSource","getAmplitude","array","scale","arguments","length","total","i","rms","Math","sqrt","min","p2pPayloadTypeToConference","p","name","feedbackTypes","clockrate","parameters","channels","THRESHOLD","IS_SCREENSHARE_SUPPORTED","navigator","mediaDevices","IS_ECHO_CANCELLATION_SUPPORTED","getSupportedConstraints","echoCancellation","IS_NOISE_SUPPRESSION_SUPPORTED","noiseSuppression","sessionDescription","isP2p","sdp","Error","sections","split","map","s","reduce","acc","el","match","hasOwnProperty","filter","lookup","prefix","sectionName","find","line","startsWith","substr","Object","values","section","parseExtmaps","l","uri","Number","parsePayloadTypes","payloads","data","fbParams","type","subtype","d","q","value","some","z","payload","assign","f","keys","rawSource","sourceAudio","rawSourceVideo","rawSourceScreencast","hash","fingerprint","setup","console","log","ufrag","pwd","fingerprints","ssrc","semantics","sources","slice","audioExtmap","videoExtmap","screencastExtmap","audioPayloadTypes","videoPayloadTypes","screencastPayloadTypes","conference","isAnswer","isPresentation","lines","add","push","sessionId","ssrcs","audioExtensions","videoExtensions","transport","candidates","mid","join","addCandidate","c","sdpString","str","foundation","component","protocol","priority","ip","port","generation","addTransport","forEach","addPayloadType","payloadType","parametersString","key","fbParam","addSsrcEntry","entry","payloadTypes","isVideo","isMain","isRemoved","sourceGroups","sourceGroup","ssrcTelegram","endpoint","silence","ctx","oscillator","createOscillator","dst","connect","createMediaStreamDestination","start","MediaStream","stream","getAudioTracks","enabled","black","width","height","canvas","document","createElement","getContext","fillRect","captureStream","getVideoTracks","state","leavePresentation","isFromToggle","screenshareDataChannel","close","screenshareConnection","onUpdate","getUserStreams","streams","setVolume","volume","participantFunctions","isStreamEnabled","streamType","myId","getTracks","updateGroupCallStreams","hasAudioStream","hasVideoStream","hasPresentationStream","amplitude","speaking","async","getUserStream","facing","audioStream","getDisplayMedia","audio","video","media","getUserMedia","facingMode","vid","srcObject","deferred","Deferred","oncanplay","resolve","promise","toggleStream","connection","track","sender","getSenders","newStream","replaceTrack","audioContext","audioSource","createMediaStreamSource","analyser","audioAnalyser","createAnalyser","minDecibels","maxDecibels","smoothingTimeConstant","fftSize","getCurrentAmplitude","Uint8Array","frequencyBinCount","getByteFrequencyData","stop","disconnect","e","updateConnectionState","connectionState","leaveGroupCall","dataChannel","analyserInterval","clearInterval","analyzeAmplitudes","prevAmplitude","handleUpdateGroupCallParticipants","updatedParticipants","participant","isSelf","newEndpoints","isMuted","canSelfUnmute","isLeft","isAudioLeft","isMutedByMe","isVideoLeft","isVideoJoined","isPresentationLeft","presentation","hasVideo","hasAudio","hasPresentation","lastMid","toString","updatingParticipantsQueue","buildSdp","setRemoteDescription","answer","createAnswer","setLocalDescription","newConference","answerNew","error","handleTrack","audioElement","mediaStream","kind","onended","window","AudioContext","gainNode","createGain","gain","muteNode","destination","addTrack","test","Audio","muted","remove","toggleMute","initializeConnection","RTCPeerConnection","createDataChannel","onopen","onmessage","JSON","parse","colibriClass","onerror","oniceconnectionstatechange","iceConnectionState","onconnectionstatechange","ontrack","onnegotiationneeded","offer","createOffer","offerToReceiveVideo","offerToReceiveAudio","parseSdp","audioSsrc","videoSsrc","screenshareConference","videoStream","updateStreams","mediaState","toggleStreamP2p","ownAudio","ownVideo","ownPresentation","blackVideo","blackPresentation","sendMediaState","err","stopPhoneCall","emitSignalingData","videoRotation","isBatteryLow","videoState","screencastState","filterVP8","mediaContent","isOutgoing","idx","findIndex","vp8PayloadType","rtxIdx","apt","sendInitialSetup","ssrcGroups","rtpExtensions","screencast","processSignalingMessage","message","pendingCandidates","gotInitialSetup","candidate","commitPendingIceCandidates","xmlns","Date","now","localDescription","Promise","all","addIceCandidate","sdpMLineIndex","tryAddCandidate","conn","params","addActionHandler","actions","isFromLibrary","shouldDiscard","shouldRemove","rejoin","isPageUnload","tabId","getCurrentTabId","updateActiveGroupCall","participantsCount","setGlobal","callApi","call","getGlobal","removeGroupCall","removeGroupCallAudioElement","toggleGroupCallPanel","force","afterHangUp","requestMasterAndJoinGroupCall","videoStopped","raiseHand","floor","GROUP_CALL_VOLUME_MULTIPLIER","startSharingScreen","presentationPaused","showNotification","getGroupCallAudioElement","getGroupCallAudioContext","safePlay","setInterval","joinGroupCall","apiUpdate","result","inviteHash","loadMoreGroupCallParticipants","loadFullChat","dhConfig","gAHash","hangUp","gB","stringify","encodedData","updateTabState","ratingPhoneCall","rating","comment","selectTabState","setTimeout","EMOJI_DATA","Uint16Array","EMOJI_OFFSETS","update","toggleGroupCallPresentation","updateGroupCallParticipant","omit","updateGroupCall","isSpeakerDisabled","handleUpdateGroupCallConnection","ARE_CALLS_SUPPORTED","isBusy","accessHash","connections","libraryVersions","version","langProvider","firstName","needRating","isCallPanelVisible","gA","keyFingerprint","emojis","newCall","gAOrB","shouldStartVideo","iceServers","urls","isTurn","isStun","username","credentialType","credential","password","iceTransportPolicy","bundlePolicy","iceCandidatePoolSize","onicecandidate","play","catch","transceiver","iceRestart","slnc","screenshare","dc","negotiated","joinPhoneCall","sendSignalingData","isP2pAllowed","isConnected","then","formatGroupCallVolume","GROUP_CALL_DEFAULT_VOLUME","SPEAKER_ICON_DISABLED_SEGMENT","SPEAKER_ICON_ENABLED_SEGMENT","isAdmin","onCloseAnimationEnd","isDropdownOpen","menuRef","menuPositionOptions","toggleGroupCallMute","setGroupCallParticipantVolume","openChat","requestToSpeak","isDeleteUserModalOpen","openDeleteUserModal","closeDeleteUserModal","useFlag","isRaiseHand","raiseHandRating","shouldRaiseHand","localVolume","setLocalVolume","useState","shouldPlay","setShouldPlay","isLocalVolumeZero","speakerIconPlaySegment","useEffect","handleSetLocalVolume","useLastCallback","runThrottled","ms","noFirst","deps","useThrottledCallback","cb","useRunThrottled","handleRemove","stopPropagation","handleCancelRequestToSpeak","handleMute","handleOpenProfile","_jsxs","children","Menu","ref","withPortal","className","buildClassName","max","onChange","target","AnimatedIcon","tgsUrl","LOCAL_TGS_URLS","Speaker","playSegment","size","MenuItem","icon","onClick","destructive","DeleteMemberModal","noColor","isSpeaking","prevIsRaiseHand","usePreviousDeprecated","prevIsMuted","useMemo","microphoneColor","VoiceOutlined","color","forceAlways","nonInteractive","peer","useRef","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleBeforeContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","current","getRootElement","closest","getMenuElement","getLayout","hasCustomVolume","aboutText","aboutColor","styles","subtitleRed","subtitleBlue","replace","subtitleGreen","about","ListItem","leftElement","Avatar","avatar","rightElement","OutlinedMicrophoneIcon","root","onMouseDown","onContextMenu","multiline","ripple","FullNameTitle","withEmojiStatus","subtitle","Icon","subtitleText","GroupCallParticipantMenu","anchor","compareParticipants","a","b","compareFields","panelOffset","isLandscape","orderedParticipantIds","sort","handleLoadMoreGroupCallParticipants","viewportIds","getMore","useInfiniteScroll","InfiniteScroll","items","onLoadMore","style","GroupCallParticipant","teactOrderKey","indexOf","isUser","layout","pinnedVideo","setPinned","canPin","thumbnailRef","videoRef","videoFallbackRef","x","y","noAnimate","isPinned","shouldFlipVideo","status","prevLayoutRef","prevX","prevY","prevWidth","prevHeight","currentX","currentY","currentWidth","currentHeight","isHidden","setIsHidden","actualStream","streamRef","active","handleInactive","addEventListener","removeEventListener","isLoading","setIsLoading","handleCanPlay","useInterval","requestMutation","videoWidth","videoHeight","drawImage","thumbnail","alpha","isDrawing","animate","draw","IS_CANVAS_FILTER_SUPPORTED","fastBlur","fastRaf","handleClickPin","onDoubleClick","Skeleton","autoPlay","playsInline","onCanPlay","Button","round","ariaLabel","vibrateShort","vibrate","meParticipant","hasRequestedToSpeak","noAudioStream","playGroupCallSound","muteMouseDownState","isRequestingToSpeak","setIsRequestingToSpeak","isConnecting","prevShouldRaiseHand","sound","r","random","animatedIconName","handleMouseDownMute","handleMouseUpMute","onMouseUp","disabled","Spinner","_ref5","canInvite","toggleGroupCallVideo","connectToActiveGroupCall","createGroupCallInviteLink","containerRef","primaryVideoContainerRef","secondaryVideoContainerRef","panelScrollTriggerRef","panelRef","isLeaving","setIsLeaving","observe","useIntersectionObserver","rootRef","throttleMs","isDisabled","hasScrolled","useIsIntersecting","isMobile","useAppLayout","isFullscreen","openFullscreen","closeFullscreen","isSidebarOpen","openSidebar","closeSidebar","isLandscapeLayout","isAppFullscreen","useFullscreenStatus","firstPresentation","videoParticipants","_ref3","flatMap","_ref4","compact","hasVideoParticipants","groupCallTitle","membersString","isConfirmLeaveModalOpen","openConfirmLeaveModal","closeConfirmLeaveModal","isEndGroupCallModal","setIsEndGroupCallModal","shouldEndGroupCall","setShouldEndGroupCall","canRequestToSpeak","handleCloseConfirmLeaveModal","handleToggleFullscreen","handleToggleSidebar","handleToggleGroupCallPanel","handleInviteMember","handleClickVideo","handleLeaveGroupCall","handleCloseAnimationEnd","handleToggleGroupCallPresentation","canPinVideo","isLandscapeWithVideos","setPinnedVideo","videoLayout","primaryContainerRef","secondaryContainerRef","setVideoLayout","setPanelOffset","videosCount","prevVideosCount","prevVideoParticipants","removedVideoParticipants","recalculateLayout","primaryContainer","secondaryContainer","removed","secondaryInitialX","secondaryInitialY","secondaryContainerWidth","getBoundingClientRect","isRemounted","pinnedPush","skip","pinnedSkipIndex","initialX","initialY","containerWidth","containerHeight","orderKey","videoType","secondaryVideosCounts","isFirstBig","columns","rows","ceil","smallWidth","heightTotal","isBig","realIndex","PREFERRED_PANEL_VIDEO_HEIGHT","shouldRemount","splice","calculateColumnsCount","shouldFillLastRow","lastRowWidth","row","useResizeObserver","useGroupCallVideoLayout","handleSetPinnedVideo","handleOpenFirstPresentation","Modal","fullscreen","appFullscreen","landscape","noVideoParticipants","portrait","noSidebar","dialogRef","videos","videosHeader","headerButton","firstButton","bigger","videosHeaderLastButton","videosContent","panelWrapper","panel","panelScrollTrigger","panelHeader","scrolled","panelHeaderText","lastButton","participantVideos","GroupCallParticipantVideo","GroupCallParticipantList","FloatingActionButton","isShown","addParticipantButton","mainVideoContainer","actionButton","MicrophoneButton","Checkbox","label","checked","onCheck","isText","tabState","isMasterTab","phoneCallUser","body","classList","toggle","tauri","markTitleBarOverlay","customIcon","iconClassName","isActive","requestMasterAndAcceptCall","connectToActivePhoneCall","toggleFullscreen","exitFullscreen","requestFullscreen","IS_REQUEST_FULLSCREEN_SUPPORTED","container","handleClose","isDiscarded","reason","isIncomingRequested","isOutgoingRequested","isHangingUp","startHangingUp","stopHangingUp","handleHangUp","forceUpdate","useForceUpdate","callStatus","hasOwnAudio","hasOwnPresentation","hasOwnVideo","isHidingPresentation","startHidingPresentation","stopHidingPresentation","isHidingVideo","startHidingVideo","stopHidingVideo","handleTogglePresentation","handleToggleVideo","handleToggleAudio","isEmojiOpen","openEmoji","closeEmoji","isFlipping","startFlipping","stopFlipping","handleFlipCamera","switchCameraInputP2p","timeElapsed","startDate","singleColumn","blurred","mainVideo","secondVideo","visible","header","closeButton","emojisBackdrop","open","emojiTooltip","userInfo","formatMediaDuration","buttons","PhoneCallButton","IS_ANDROID","IS_IOS","CameraFlip","accept","acceptIcon","leave","closeCallRatingModal","setCallRating","inputRef","setRating","handleSend","handleCancelClick","Array","fill","_","isFilled","index","InputText","placeholder","IS_SAFARI","initializeSoundsForSafari","once","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","setIsFullscreen","useLayoutEffect","element","listener","isEnabled","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","checkIfFullscreen","removeTauriListener","IS_TAURI","getCurrentWindow","tauriWindow","onResized","setupTauriListener","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp"],"sourceRoot":""}