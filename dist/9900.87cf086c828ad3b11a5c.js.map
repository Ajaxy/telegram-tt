{"version":3,"file":"9900.87cf086c828ad3b11a5c.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useBotCommandTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.async.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/Icon.tsx","webpack://telegram-t/./src/components/common/InviteLink.module.scss?000d","webpack://telegram-t/./src/components/common/InviteLink.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/hooks/useSelectorSignal.ts","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/ReactionSelector.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useDerivedState.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useSignal.ts","webpack://telegram-t/./src/hooks/useSignalEffect.ts","webpack://telegram-t/./src/hooks/useTimeout.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/parseMessageInput.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      <div className=\"avatars\">\n        {renderingFetchedParticipants?.map((peer) => (\n          <Avatar\n            key={peer.id}\n            peer={peer}\n          />\n        ))}\n      </div>\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Tx2CpCmpZZrHnCMUksg2\",\"character-container\":\"LTqDt1MFKRDBjNZxKii4\",\"characterContainer\":\"LTqDt1MFKRDBjNZxKii4\",\"character\":\"o1u1ctUWtWa2FWlC_BuT\",\"character-old\":\"tzggk5evL9EPqVAtvWEu\",\"characterOld\":\"tzggk5evL9EPqVAtvWEu\",\"character-disappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"characterDisappear\":\"cQVeR4w2ND9Xwfl0bNJc\",\"character-new\":\"q6poDASGW35qQiXsD99c\",\"characterNew\":\"q6poDASGW35qQiXsD99c\",\"character-appear\":\"lsHAt1tY7_VcodncBZKh\",\"characterAppear\":\"lsHAt1tY7_VcodncBZKh\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = selectCanAnimateInterface(getGlobal());\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oGmd77AsTbJeJk8CV6gl\",\"preview\":\"gp5OwinzPeHwkesmaEIR\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransition(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransition(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { LangFn } from '../../hooks/useLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay: (messageId: number, chatId: string) => void;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  onHideTranscription,\n  onPlay,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio } = getActions();\n\n  const { content: { audio, voice, video }, isMediaUnread } = message;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    isVoice ? 'voice' : 'audio',\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message),\n  );\n\n  const isOwn = isOwnMessage(message);\n  const waveformCanvasRef = useWaveformCanvas(\n    theme, voice, (isMediaUnread && !isOwn) ? 1 : playProgress, isOwn, !noAvatars, isMobile,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color={coverBlobUrl ? 'translucent-white' : 'primary'}\n        className={buttonClassNames.join(' ')}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n        onClick={handleButtonClick}\n        isRtl={lang.isRtl}\n        backgroundImage={coverBlobUrl}\n      >\n        <i className=\"icon icon-play\" />\n        <i className=\"icon icon-pause\" />\n      </Button>\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {origin === AudioOrigin.Inline && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p className={buildClassName('voice-duration', isMediaUnread && 'unread')} dir=\"auto\">\n        {playProgress === 0 ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    renderWaveform(canvas, spikes, playProgress, {\n      peak,\n      fillStyle: isOwn ? fillOwnColor : fillColor,\n      progressFillStyle: isOwn ? progressFillOwnColor : progressFillColor,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ahi3up0oMwlFJTE6hkxG\",\"size-micro\":\"DOhAE8mniLY2g2i7rkfz\",\"sizeMicro\":\"DOhAE8mniLY2g2i7rkfz\",\"size-mini\":\"gF82cRdQRxqmTN8fLb9i\",\"sizeMini\":\"gF82cRdQRxqmTN8fLb9i\",\"size-tiny\":\"ecJbjvbrCkoUdtVrdBYi\",\"sizeTiny\":\"ecJbjvbrCkoUdtVrdBYi\",\"size-small\":\"iaKZOfQnH3hROD8QK_fq\",\"sizeSmall\":\"iaKZOfQnH3hROD8QK_fq\",\"size-small-mobile\":\"YP90v9JGup97HOcD2duf\",\"sizeSmallMobile\":\"YP90v9JGup97HOcD2duf\",\"size-medium\":\"TmYXjEqVbt0gwaoWlRHv\",\"sizeMedium\":\"TmYXjEqVbt0gwaoWlRHv\",\"size-large\":\"YIuShtdEPpbCXrGgmeFv\",\"sizeLarge\":\"YIuShtdEPpbCXrGgmeFv\",\"size-jumbo\":\"D9X7fMnC8YtoUm_wjoSA\",\"sizeJumbo\":\"D9X7fMnC8YtoUm_wjoSA\",\"avatar\":\"PTpUqAuoZL9Uou6MqJXX\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n}) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUsername,\n} from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport {\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { debounce } from '../../util/schedulers';\nimport stopEvent from '../../util/stopEvent';\nimport renderText from './helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  forceShowSelf?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    chat?: ApiChat;\n    canInviteUsers?: boolean;\n    isMuted?: boolean;\n    phoneCodeList: ApiCountryCode[];\n    topicId?: number;\n    description?: string;\n    chatInviteLink?: string;\n    topicLink?: string;\n  };\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  user,\n  chat,\n  forceShowSelf,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n}) => {\n  const {\n    loadFullUser,\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    if (!userId) return;\n    loadFullUser({ userId });\n  }, [userId]);\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  if (!chat || chat.isRestricted || (isSelf && !forceShowSelf)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map(({ username: nick }, idx) => {\n                const textToCopy = isChat ? `${TME_LINK_PREFIX}${nick}` : `@${nick}`;\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={nick}\n                      href={`${TME_LINK_PREFIX}${nick}`}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        copy(textToCopy, lang(isChat ? 'Link' : 'Username'));\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {`@${nick}`}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    const username = isChat ? `t.me/${mainUsername.username}` : mainUsername.username;\n    const textToCopy = isChat ? `${TME_LINK_PREFIX}${mainUsername.username}` : `@${mainUsername.username}`;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => copy(textToCopy, lang(isChat ? 'Link' : 'Username'))}\n      >\n        <span className=\"title\" dir=\"auto\">{username}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && Boolean(formattedNumber.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title word-break allow-selection\" dir=\"auto\">\n            {renderText(description, ['br', 'links', 'emoji'])}\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!forceShowSelf && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? threadId : undefined;\n    const chatInviteLink = chat ? selectChatFullInfo(global, chat.id)?.inviteLink : undefined;\n    let description = user ? selectUserFullInfo(global, user.id)?.bio : undefined;\n    if (!description && chat) {\n      description = selectChatFullInfo(global, chat.id)?.about;\n    }\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n    };\n  },\n)(ChatExtra));\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !attach.voice ? true : undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverUrl = cover ? `data:${cover.format};base64,${cover.data.toString('base64')}` : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseMessageInput';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n}) {\n  const { openLimitReachedModal, showAllowedMessageTypesNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'image' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'image' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n        setShouldSuggestCompression(undefined);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    handleSetAttachments([\n      ...attachments,\n      ...await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      ))),\n    ]);\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    handleSetAttachments(await Promise.all(files.map((file) => buildAttachment(file.name, file))));\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n\nfunction getAttachmentType(attachment: ApiAttachment) {\n  if (attachment.shouldSendAsFile) return 'file';\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'image';\n  }\n\n  if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'video';\n  }\n\n  if (SUPPORTED_AUDIO_CONTENT_TYPES.has(attachment.mimeType)) {\n    return 'audio';\n  }\n\n  return 'file';\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useBotCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || !commands) {\n      setFilteredBotCommands(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean(filteredBotCommands?.length && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n  };\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseMessageInput from '../../../../util/parseMessageInput';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseMessageInput(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      const shouldSetAttachments = files?.length && !editedMessage && !isWordDocument;\n\n      if (shouldSetAttachments) {\n        const newAttachments = await Promise.all(files!.map((file) => {\n          return buildAttachment(file.name, file);\n        }));\n        setAttachments((attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji, onCustomEmojiStripped,\n    setNextText,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE, EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport {\n  requestMeasure, requestNextMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseMessageInput from '../../../../util/parseMessageInput';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/useBeforeUnload';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: number;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: number } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      saveDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        draft: parseMessageInput(html),\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft));\n\n    const customEmojiIds = draft.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n\n    if (!IS_TOUCH_ENV) {\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    }\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType } from '../../../../global/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseMessageInput from '../../../../util/parseMessageInput';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/useBeforeUnload';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  openDeleteModal: () => void,\n  chatId: string,\n  threadId: number,\n  type: MessageListType,\n  draft?: ApiFormattedText,\n  editingDraft?: ApiFormattedText,\n  replyingToId?: number,\n): [VoidFunction, VoidFunction, boolean] => {\n  const { editMessage, setEditingDraft, toggleMessageWebPage } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseMessageInput(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseMessageInput(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseMessageInput(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteModal();\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseMessageInput(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/i;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_IMAGE_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      <ResponsiveHoverButton\n        id=\"attach-menu-button\"\n        className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n        round\n        color=\"translucent\"\n        onActivate={handleToggleAttachMenu}\n        ariaLabel=\"Add an attachment\"\n        ariaControls=\"attach-menu-controls\"\n        hasPopup\n      >\n        <i className=\"icon icon-attach\" />\n      </ResponsiveHoverButton>\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {(canSendDocuments || canSendAudios)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {canAttachMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandTooltip = useModuleLoader(Bundles.Extra, 'BotCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandTooltip ? <BotCommandTooltip {...props} /> : undefined;\n};\n\nexport default BotCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row) => (\n          <div className=\"row\">\n            {row.map((button) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ messageId: message.id, button })}\n              >\n                {button.text}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <i className={buildClassName('bot-menu-icon', 'icon', 'icon-webapp', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{text}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectReplyingToId,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport EmbeddedMessage from '../../common/EmbeddedMessage';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyingToId?: number;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n};\n\nconst FORWARD_RENDERING_DELAY = 300;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyingToId,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  onClear,\n}) => {\n  const {\n    setReplyingToId,\n    setEditingId,\n    focusMessage,\n    changeForwardRecipient,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n  const isShown = Boolean(\n    ((replyingToId || editingId) && message)\n    || (sender && forwardedMessagesCount),\n  );\n  const canAnimate = useAsyncRendering(\n    [forwardedMessagesCount],\n    forwardedMessagesCount ? FORWARD_RENDERING_DELAY : undefined,\n  );\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransition(canAnimate && isShown, undefined, !shouldAnimate, undefined, !shouldAnimate);\n\n  const clearEmbedded = useLastCallback(() => {\n    if (replyingToId && !shouldForceShowEditing) {\n      setReplyingToId({ messageId: undefined });\n    } else if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const handleMessageClick = useLastCallback((): void => {\n    if (isForwarding) return;\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n  });\n\n  const handleChangeRecipientClick = useLastCallback(() => {\n    changeForwardRecipient();\n  });\n\n  const {\n    isContextMenuOpen, contextMenuPosition, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  useEffect(() => {\n    if (!shouldRender) handleContextMenuClose();\n  }, [handleContextMenuClose, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n\n  const leftIcon = useMemo(() => {\n    if (replyingToId && !shouldForceShowEditing) {\n      return 'icon-reply';\n    }\n    if (editingId) {\n      return 'icon-edit';\n    }\n    if (isForwarding) {\n      return 'icon-forward';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, replyingToId, shouldForceShowEditing]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? lang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu} onClick={handleContextMenu}>\n      <div className=\"ComposerEmbeddedMessage_inner\">\n        <div className=\"embedded-left-icon\">\n          <i className={buildClassName('icon', leftIcon)} />\n        </div>\n        <EmbeddedMessage\n          className=\"inside-input\"\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={editingId ? lang('EditMessage') : noAuthors ? lang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          hasContextMenu={isForwarding && !isContextMenuDisabled}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {isForwarding && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            transformOriginX={transformOriginX}\n            transformOriginY={transformOriginY}\n            positionX={positionX}\n            positionY={positionY}\n            style={menuStyle}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            <MenuItem\n              icon={!noAuthors ? 'message-succeeded' : undefined}\n              customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: false,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n            </MenuItem>\n            <MenuItem\n              icon={noAuthors ? 'message-succeeded' : undefined}\n              customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: true,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n            </MenuItem>\n            {forwardsHaveCaptions && (\n              <>\n                <MenuSeparator />\n                <MenuItem\n                  icon={!noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: false,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                </MenuItem>\n                <MenuItem\n                  icon={noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: true,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                </MenuItem>\n              </>\n            )}\n            <MenuSeparator />\n            <MenuItem icon=\"replace\" onClick={handleChangeRecipientClick}>\n              {lang('ChangeRecipient')}\n            </MenuItem>\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { shouldForceShowEditing }): StateProps => {\n    const { chatId, threadId, type: messageListType } = selectCurrentMessageList(global) || {};\n    if (!chatId || !threadId || !messageListType) {\n      return {};\n    }\n\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n    } = selectTabState(global);\n\n    const replyingToId = selectReplyingToId(global, chatId, threadId);\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global);\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    let message: ApiMessage | undefined;\n    if (replyingToId && !shouldForceShowEditing) {\n      message = selectChatMessage(global, chatId, replyingToId);\n    } else if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    }\n\n    let sender: ApiPeer | undefined;\n    if (replyingToId && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && !forwardInfo?.hiddenUserName) {\n        sender = selectSender(global, message);\n      }\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    }\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    return {\n      replyingToId,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseMessageInput from '../../../util/parseMessageInput';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: number;\n  getHtml: Signal<string>;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n  } = getActions();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseMessageInput(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransition(isShown);\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\">\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage message={messageStub} inPreview theme={theme} />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './DeleteMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst DeleteMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DeleteMessageModal = useModuleLoader(Bundles.Extra, 'DeleteMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DeleteMessageModal ? <DeleteMessageModal {...props} /> : undefined;\n};\n\nexport default DeleteMessageModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiChatMember,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiUser,\n  ApiVideo,\n} from '../../api/types';\nimport type {\n  ApiDraft, GlobalState, MessageList,\n  MessageListType, TabState,\n} from '../../global/types';\nimport type { IAnchorPosition, InlineBotSettings, ISettings } from '../../types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  REPLIES_USER_ID,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getAllowedAttachmentOptions,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectPeerStory,\n  selectReplyingToId,\n  selectRequestedDraftFiles,\n  selectRequestedDraftText,\n  selectScheduledIds,\n  selectTabState,\n  selectTheme,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { processMessageInputForCustomEmoji } from '../../util/customEmojiManager';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dateFormat';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseMessageInput from '../../util/parseMessageInput';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { escapeHtml } from '../middle/composer/helpers/cleanHtml';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useInterval from '../../hooks/useInterval';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useSignal from '../../hooks/useSignal';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useTimeout from '../../hooks/useTimeout';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useBotCommandTooltip from '../middle/composer/hooks/useBotCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotCommandTooltip from '../middle/composer/BotCommandTooltip.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport ReactionSelector from '../middle/message/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport DeleteMessageModal from './DeleteMessageModal.async';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: number;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  onDropHide?: NoneToVoidFunction;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    draft?: ApiDraft;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    replyingToId?: number;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    shouldSchedule?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    groupChatMembers?: ApiChatMember[];\n    currentUserId?: string;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    chatBotCommands?: ApiBotCommand[];\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraftText?: string;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  shouldSchedule,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  groupChatMembers,\n  topInlineBotIds,\n  currentUserId,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  chatBotCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  replyingToId,\n  requestedDraftText,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openChat,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n  } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePrevious(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const isSentStoryReactionHeart = sentStoryReaction && 'emoticon' in sentStoryReaction\n    ? sentStoryReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    if (chatId && chat && !sendAsPeerIds && isReady && isChatSuperGroup(chat)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, isChatWithBot, isInStoryViewer),\n    [chat, isChatWithBot, isInStoryViewer],\n  );\n\n  const isComposerBlocked = !canSendPlainText && !editingMessage;\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const {\n    isOpen: isBotCommandTooltipOpen,\n    close: closeBotCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n  } = useBotCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length)),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer,\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    openDeleteModal,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n    replyingToId,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (shouldSchedule) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, shouldSchedule,\n  ]);\n  const canShowCustomSendMenu = !shouldSchedule;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuPosition: storyReactionPickerPosition,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerPosition) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerPosition,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerPosition]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseMessageInput(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    sendMessage({\n      messageList: currentMessageList,\n      text,\n      entities,\n      scheduledAt,\n      isSilent,\n      shouldUpdateStickerSetOrder,\n      attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      shouldGroupMessages: sendGrouped,\n    });\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, localOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform } },\n        )];\n      }\n    }\n\n    const { text, entities } = parseMessageInput(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, localOnly: true });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    callAttachBot({\n      chatId, url: botMenuButton.url, threadId,\n    });\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraftText) {\n      setHtml(escapeHtml(requestedDraftText));\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraftText, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (shouldSchedule || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, localOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, localOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (shouldSchedule) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (shouldSchedule) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openChat({\n      id: chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isDeleteModalOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isBotCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransition(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList!);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const prevEditedMessage = usePrevious(editingMessage, true);\n  const renderedEditedMessage = editingMessage || prevEditedMessage;\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in reaction) {\n      text = reaction.emoticon;\n    } else {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseMessageInput(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({ sendCompressed, sendGrouped }, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilentAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    sendSilent({ sendCompressed, sendGrouped });\n  });\n\n  const onSend = mainButtonState === MainButtonState.Edit\n    ? handleEditComplete\n    : mainButtonState === MainButtonState.Schedule ? handleSendScheduled\n      : handleSend;\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n        />\n      )}\n      {shouldRenderReactionSelector && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={shouldSchedule}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachments}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      {renderedEditedMessage && (\n        <DeleteMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={messageListType === 'scheduled'}\n          onClose={closeDeleteModal}\n          message={renderedEditedMessage}\n        />\n      )}\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <BotCommandTooltip\n        isOpen={isBotCommandTooltipOpen}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        getHtml={getHtml}\n        onClick={handleBotCommandSelect}\n        onClose={closeBotCommandTooltip}\n      />\n      <div className={buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks')}>\n        <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n          <defs>\n            <filter\n              x=\"-50%\"\n              y=\"-14.7%\"\n              width=\"200%\"\n              height=\"141.2%\"\n              filterUnits=\"objectBoundingBox\"\n              id=\"composerAppendix\"\n            >\n              <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n              <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n              <feColorMatrix\n                values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                in=\"shadowBlurOuter1\"\n              />\n            </filter>\n          </defs>\n          <g fill=\"none\" fill-rule=\"evenodd\">\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n          </g>\n        </svg>\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n            />\n          </>\n        )}\n        <div className=\"message-input-wrapper\">\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {(!isComposerBlocked || canSendGifs || canSendStickers) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang('Message'))\n                  : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <i className=\"icon icon-schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          <AttachMenu\n            chatId={chatId}\n            threadId={threadId}\n            isButtonVisible={!activeVoiceRecording && !editingMessage}\n            canAttachMedia={canAttachMedia}\n            canAttachPolls={canAttachPolls}\n            canSendPhotos={canSendPhotos}\n            canSendVideos={canSendVideos}\n            canSendDocuments={canSendDocuments}\n            canSendAudios={canSendAudios}\n            onFileSelect={handleFileSelect}\n            onPollCreate={openPollModal}\n            isScheduled={shouldSchedule}\n            attachBots={isInMessageList ? attachBots : undefined}\n            peerType={attachMenuPeerType}\n            shouldCollectDebugLogs={shouldCollectDebugLogs}\n            theme={theme}\n            onMenuOpen={onAttachMenuOpen}\n            onMenuClose={onAttachMenuClose}\n          />\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={'documentId' in sentStoryReaction ? sentStoryReaction.documentId : sentStoryReaction.emoticon}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <i\n              className={buildClassName(\n                'icon',\n                'icon-heart',\n                isSentStoryReactionHeart && 'story-reaction-heart',\n              )}\n              aria-hidden\n            />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <i className=\"icon icon-send\" />\n        <i className=\"icon icon-microphone-alt\" />\n        {onForward && <i className=\"icon icon-forward\" />}\n        {isInMessageList && <i className=\"icon icon-schedule\" />}\n        {isInMessageList && <i className=\"icon icon-check\" />}\n      </Button>\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList}\n          canScheduleUntilOnline={canScheduleUntilOnline}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!shouldSchedule ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const chatBotFullInfo = isChatWithBot ? selectUserFullInfo(global, chatBot.id) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const scheduledIds = selectScheduledIds(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraftText = selectRequestedDraftText(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !selectUserFullInfo(global, user.id)?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const replyingToId = selectReplyingToId(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n\n    return {\n      availableReactions: type === 'story' ? global.availableReactions : undefined,\n      topReactions: type === 'story' ? global.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      replyingToId,\n      draft: selectDraft(global, chatId, threadId),\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && Boolean(scheduledIds?.length)\n      ),\n      shouldSchedule: messageListType === 'scheduled',\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      groupChatMembers: chatFullInfo?.members,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      chatBotCommands: chatFullInfo?.botCommands,\n      botCommands: chatBotFullInfo ? (chatBotFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: chatBotFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraftText,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n    };\n  },\n)(Composer));\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [deleteHistory, chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    onClose,\n    deleteHistory,\n    deleteChatUser,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={isPrivateChat ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../config';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const document = message.content.document!;\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, shouldDownload && !isLoaded);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleDownload = useLastCallback(() => {\n    downloadMessageMedia({ message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport type {\n  ApiMessage, ApiPeer,\n} from '../../api/types';\nimport type { ChatTranslatedMessages } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getPeerColorKey,\n  getSenderTitle,\n  isActionMessage,\n  isMessageTranslatable,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getPictogramDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { useFastClick } from '../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useThumbnail from '../../hooks/useThumbnail';\nimport useMessageTranslation from '../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../middle/ActionMessage';\nimport Icon from './Icon';\nimport MediaSpoiler from './MediaSpoiler';\nimport MessageSummary from './MessageSummary';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  hasContextMenu?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  sender,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  noUserColors,\n  hasContextMenu,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const mediaBlobUrl = useMedia(message && getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = useThumbnail(message);\n  const isRoundVideo = Boolean(message && getMessageRoundVideo(message));\n  const isSpoiler = Boolean(message && getMessageIsSpoiler(message));\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender) : message?.forwardInfo?.hiddenUserName;\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender?.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        sender && !noUserColors && `color-${getPeerColorKey(sender)}`,\n      )}\n      onClick={message && handleClick}\n      onMouseDown={message && handleMouseDown}\n    >\n      {mediaThumbnail && renderPictogram(mediaThumbnail, mediaBlobUrl, isRoundVideo, isProtected, isSpoiler)}\n      <div className=\"message-text\">\n        <p dir=\"auto\">\n          {!message ? (\n            customText || NBSP\n          ) : isActionMessage(message) ? (\n            <ActionMessage\n              message={message}\n              isEmbedded\n              observeIntersectionForLoading={observeIntersectionForLoading}\n              observeIntersectionForPlaying={observeIntersectionForPlaying}\n            />\n          ) : (\n            <MessageSummary\n              lang={lang}\n              message={message}\n              noEmoji={Boolean(mediaThumbnail)}\n              translatedText={translatedText}\n              observeIntersectionForLoading={observeIntersectionForLoading}\n              observeIntersectionForPlaying={observeIntersectionForPlaying}\n            />\n          )}\n        </p>\n        <div className=\"message-title\" dir=\"auto\">\n          {renderText(senderTitle || title || NBSP)}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n      {hasContextMenu && <Icon name=\"more\" className=\"embedded-more\" />}\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      <MediaSpoiler thumbDataUri={srcUrl} isVisible={Boolean(isSpoiler)} width={width} height={height} />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedMessage;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLang from '../../hooks/useLang';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus,\n} from '../../api/types';\nimport type { LangFn } from '../../hooks/useLang';\nimport { MediaViewerOrigin, type StoryViewerOrigin } from '../../types';\n\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  className?: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  onClick?: VoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  onClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: chat.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {messagesCount ? lang('messages', messagesCount, 'i') : renderText(chat.title)}\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <Avatar\n          key={chat.id}\n          size={avatarSize}\n          peer={chat}\n          withStory={withStory}\n          storyViewerOrigin={storyViewerOrigin}\n          storyViewerMode=\"single-peer\"\n          onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n        />\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : <FullNameTitle peer={chat} />}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n    };\n  },\n)(GroupChatInfo));\n","import React from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  name: IconName;\n  className?: string;\n  style?: string;\n};\n\nconst Icon = ({\n  name,\n  className,\n  style,\n}: OwnProps) => {\n  return (\n    <i\n      className={buildClassName(`icon icon-${name}`, className)}\n      style={style}\n      aria-hidden\n    />\n  );\n};\n\nexport default Icon;\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"B0vKZtyx_PUcanptgC5I\",\"input\":\"ODZGlpe7i3BMlnIuPGUg\",\"moreMenu\":\"hDpRcaj2QNUxsuLouJu_\",\"title\":\"dB1NL4LBBWlUHShfCUpw\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './InviteLink.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  inviteLink: string;\n  isDisabled?: boolean;\n  className?: string;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  inviteLink,\n  isDisabled,\n  className,\n  onRevoke,\n}) => {\n  const lang = useLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const copyLink = useLastCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  });\n\n  const handleCopyPrimaryClicked = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink(inviteLink);\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: inviteLink });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={inviteLink}\n          readOnly\n          onClick={handleCopyPrimaryClicked}\n        />\n        <DropdownMenu\n          className={styles.moreMenu}\n          trigger={PrimaryLinkMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyPrimaryClicked} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n          {onRevoke && (\n            <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n          )}\n        </DropdownMenu>\n      </div>\n      <Button\n        size=\"smaller\"\n        disabled={isDisabled}\n        onClick={handleShare}\n      >\n        {lang('FolderLinkScreen.LinkActionShare')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\n\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus }) => {\n  const lang = useLang();\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(lang, message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MbgQHglBDZLEAHDebnxc\",\"mask-animation\":\"zFmCa6knHOC8UhmcYHq8\",\"maskAnimation\":\"zFmCa6knHOC8UhmcYHq8\",\"circle-cut\":\"oeh0t6JqYOZTcblRUc6a\",\"circleCut\":\"oeh0t6JqYOZTcblRUc6a\",\"dots\":\"leAfUrALDfdpl4i8VEmv\",\"canvas\":\"oQmroREXWSylQXgjAdIB\",\"opacity-breath\":\"FKjJw0kaOB4ibkNp2I6S\",\"opacityBreath\":\"FKjJw0kaOB4ibkNp2I6S\",\"-7s\":\"UYRulRheGjTql4xAbURj\",\"7S\":\"UYRulRheGjTql4xAbURj\",\"-14s\":\"luaiQWxNoz8gYcb2XqSG\",\"14S\":\"luaiQWxNoz8gYcb2XqSG\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas ref={canvasRef} className={styles.canvas} width={width} height={height} />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <i className=\"icon icon-message-failed\" />\n          </div>\n        ) : <i className={`icon icon-message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useTimeout from '../../hooks/useTimeout';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Checkbox from '../ui/Checkbox';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  isRoundCheckbox?: boolean;\n  lockedIds?: string[];\n  forceShowSelf?: boolean;\n  onSelectedIdsChange?: (ids: string[]) => void;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  isRoundCheckbox,\n  lockedIds,\n  forceShowSelf,\n  onSelectedIdsChange,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return;\n    setTimeout(() => {\n      requestMutation(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, [isSearchable]);\n\n  const [lockedSelectedIds, unlockedSelectedIds] = useMemo(() => {\n    if (!lockedIds?.length) return [MEMO_EMPTY_ARRAY, selectedIds];\n    const unlockedIds = selectedIds.filter((id) => !lockedIds.includes(id));\n    return [lockedIds, unlockedIds];\n  }, [selectedIds, lockedIds]);\n\n  const lockedIdsSet = useMemo(() => new Set(lockedIds), [lockedIds]);\n\n  const sortedItemIds = useMemo(() => {\n    return itemIds.sort((a, b) => {\n      const aIsLocked = lockedIdsSet.has(a);\n      const bIsLocked = lockedIdsSet.has(b);\n      if (aIsLocked && !bIsLocked) {\n        return -1;\n      }\n      if (!aIsLocked && bIsLocked) {\n        return 1;\n      }\n      return 0;\n    });\n  }, [itemIds, lockedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedIdsSet.has(id)) {\n      onDisabledClick?.(id);\n      return;\n    }\n\n    const newSelectedIds = selectedIds.slice();\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange?.(newSelectedIds);\n    onFilterChange?.('');\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, sortedItemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className=\"Picker\">\n      {isSearchable && (\n        <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + lockedSelectedIds.length < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className=\"picker-list custom-scroll\"\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => {\n            const renderCheckbox = () => {\n              return (\n                <Checkbox\n                  label=\"\"\n                  disabled={lockedIdsSet.has(id)}\n                  checked={selectedIds.includes(id)}\n                  round={isRoundCheckbox}\n                />\n              );\n            };\n            return (\n              <ListItem\n                key={id}\n                className={buildClassName('chat-item-clickable picker-list-item', isRoundCheckbox && 'chat-item')}\n                disabled={lockedIdsSet.has(id)}\n                allowDisabledClick={Boolean(onDisabledClick)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleItemClick(id)}\n                ripple\n              >\n                {!isRoundCheckbox ? renderCheckbox() : undefined}\n                {isUserId(id) ? (\n                  <PrivateChatInfo forceShowSelf={forceShowSelf} userId={id} />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n                {isRoundCheckbox ? renderCheckbox() : undefined}\n              </ListItem>\n            );\n          })}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getChatTitle, getUserFirstOrLastName } from '../../global/helpers';\nimport { selectChat, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  peerId?: string;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  forceShowSelf?: boolean;\n  clickArg?: any;\n  className?: string;\n  onClick: (arg: any) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  className,\n  isSavedMessages,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (user || chat) {\n    iconElement = (\n      <Avatar\n        peer={user || chat}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    const name = !chat || (user && !isSavedMessages)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, isSavedMessages);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    chat?.isForum && 'forum-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const chat = selectChat(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      chat,\n      user,\n      isSavedMessages,\n    };\n  },\n)(PickerSelectedItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qhFxTh5sx1oGuGccrzTb\",\"withBadge\":\"fltQkzCy9DRS9QWsAAH5\",\"badgeContainer\":\"ZGxYvTYQkAjpjvgBHMdH\",\"slide-in\":\"Ybb5P4BAFmSaffktaa81\",\"slideIn\":\"Ybb5P4BAFmSaffktaa81\",\"floating-badge-wrapper\":\"pAGwoR5ceC4Y2MoDqG1g\",\"floatingBadgeWrapper\":\"pAGwoR5ceC4Y2MoDqG1g\",\"rotate-in\":\"zyC6DJuexMszfxuDeBMR\",\"rotateIn\":\"zyC6DJuexMszfxuDeBMR\",\"floating-badge\":\"N8o73q2OT6d_kUTyUcg5\",\"floatingBadge\":\"N8o73q2OT6d_kUTyUcg5\",\"floating-badge-triangle\":\"m6YwWsobe1cb3cqf0Xei\",\"floatingBadgeTriangle\":\"m6YwWsobe1cb3cqf0Xei\",\"floating-badge-icon\":\"_qQItdFB5DScaFdSJR2a\",\"floatingBadgeIcon\":\"_qQItdFB5DScaFdSJR2a\",\"floating-badge-value\":\"h46zskGqCT1b3onjQB26\",\"floatingBadgeValue\":\"h46zskGqCT1b3onjQB26\",\"left\":\"OP8qshGP9fzy9bbMvWn2\",\"right\":\"EjQP1rE5iExOnGWJyYIe\",\"progress\":\"ASLJoYhAmOvHasjzMKYg\",\"fullProgress\":\"tmwWY_SiGqqKrC8oUUDW\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useLang from '../../hooks/useLang';\n\nimport Icon from './Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  className?: string;\n};\n\nconst PROGRESS_LOCK = 0.1;\n\nconst LimitPreview: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  className,\n}) => {\n  const lang = useLang();\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  const tailPosition = progress && (progress < PROGRESS_LOCK ? 0 : progress > 1 - PROGRESS_LOCK ? 1 : 0.5);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(LimitPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { getMainUsername, getUserStatus, isUserOnline } from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noRtl,\n  user,\n  userStatus,\n  isSavedMessages,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, withFullInfo, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: user.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <i className={`icon icon-${statusIcon} status-icon`} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus) && 'online')}>\n        {mainUsername && <span className=\"handle\">{mainUsername}</span>}\n        <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={user!}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        onEmojiStatusClick={onEmojiStatusClick}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        peer={user}\n        isSavedMessages={isSavedMessages}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPeerColorKey,\n  getUserFullName,\n  getVideoAvatarMediaHash,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const userOrChat = user || chat;\n  const canHaveMedia = userOrChat && !isSavedMessages && !isDeleted && !isRepliesChat;\n  const { isVideo } = photo || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(userOrChat, 'normal');\n  const avatarBlobUrl = useMedia(avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && `photo${photo.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoAvatarMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  let content: TeactNode | undefined;\n\n  if (isSavedMessages) {\n    content = <i className=\"icon icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon icon-avatar-deleted-account\" />;\n  } else if (isRepliesChat) {\n    content = <i className=\"icon icon-reply-filled\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={avatarBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    `color-bg-${getPeerColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"M4GWpBd7i7ViA2xNTvH4\",\"info\":\"uHKuP7J67YWxko9FiDo9\",\"status\":\"DwTvYuXwYiyH8P8HGyEw\",\"fallbackPhoto\":\"a_azkhZzdtjRO5pWnNno\",\"fallbackPhotoContents\":\"NVXGZpj7iFHkn7HaGsey\",\"fallbackPhotoVisible\":\"zPvRR0bFn0HFuXDjj1wU\",\"fallbackPhotoAvatar\":\"IG9hcS9__jiZjU59BA1U\",\"photoWrapper\":\"YvztuUsksHhhNiXGWWbN\",\"photoDashes\":\"UXIlP1uQpXVG_DNB26iC\",\"photoDash\":\"Ay_dhoiSuGWjH2hVOy7i\",\"photoDash_current\":\"xWzV6TAYO756R70Pzfmb\",\"photoDashCurrent\":\"xWzV6TAYO756R70Pzfmb\",\"navigation\":\"rcKy8wQruH_z84yRjAry\",\"navigation_prev\":\"IrGNErqISNgGY687XP5I\",\"navigationPrev\":\"IrGNErqISNgGY687XP5I\",\"navigation_next\":\"mERrfFjC7wKBhpVCjGgg\",\"navigationNext\":\"mERrfFjC7wKBhpVCjGgg\",\"topicContainer\":\"Dlmqly7y8H7bCtaGNFIO\",\"topicTitle\":\"eMDgnAzVXSNlBUAgdBPK\",\"topicIcon\":\"Bv321I_wzF0fdNw63dxB\",\"topicIconTitle\":\"MwfYq2acbtWIp8pGf9kI\",\"topicMessagesCounter\":\"YrvPEuAvDVR3BLU68aIN\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPhoto, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isChatChannel, isUserId, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    isSavedMessages?: boolean;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    userPersonalPhoto?: ApiPhoto;\n    userProfilePhoto?: ApiPhoto;\n    userFallbackPhoto?: ApiPhoto;\n    chatProfilePhoto?: ApiPhoto;\n  }\n  & Pick<GlobalState, 'connectionState'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  isSavedMessages,\n  connectionState,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  userPersonalPhoto,\n  userProfilePhoto,\n  userFallbackPhoto,\n  chatProfilePhoto,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const mediaIdRef = useStateRef(mediaId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = isSavedMessages || photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = isSavedMessages || photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Reset the current avatar photo to the one selected in Media Viewer if photos have changed\n  useEffect(() => {\n    setHasSlideAnimation(false);\n    setCurrentPhotoIndex(mediaIdRef.current || 0);\n  }, [mediaIdRef, photos]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!userId) return;\n\n    openPremiumModal({ fromUserId: userId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (isSavedMessages || !photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = !isSavedMessages && photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    const profilePhoto = photo || userPersonalPhoto || userProfilePhoto || chatProfilePhoto || userFallbackPhoto;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={profilePhoto}\n        isSavedMessages={isSavedMessages}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    if (user) {\n      return (\n        <div className={buildClassName(styles.status, 'status', isUserOnline(user, userStatus) && 'online')}>\n          <span className=\"user-status\" dir=\"auto\">{getUserStatus(lang, user, userStatus)}</span>\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userPersonalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userPersonalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userFallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userFallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userFallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            isSavedMessages={isSavedMessages}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {!isSavedMessages && renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { connectionState } = global;\n    const user = selectUser(global, userId);\n    const isPrivate = isUserId(userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, userId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, userId) : undefined;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      userPersonalPhoto: userFullInfo?.personalPhoto,\n      userProfilePhoto: userFullInfo?.profilePhoto,\n      userFallbackPhoto: userFullInfo?.fallbackPhoto,\n      chatProfilePhoto: chatFullInfo?.profilePhoto,\n      isSavedMessages,\n      mediaId,\n      avatarOwnerId,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  const shouldApplySizeFix = 'emoticon' in reaction && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && 'emoticon' in reaction && reaction.emoticon === '❤';\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media' | 'story';\n  peerId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  storyId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  peerId,\n  photo,\n  messageIds,\n  storyId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    reportStory,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId: peerId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId: peerId, photo, reason: selectedReason, description,\n        });\n        break;\n      case 'story':\n        reportStory({\n          peerId: peerId!, storyId: storyId!, reason: selectedReason, description,\n        });\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !peerId)\n    || (subject === 'media' && (!peerId || !photo))\n    || (subject === 'story' && (!storyId || !peerId))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className={buildClassName('narrow', subject === 'story' && 'component-theme-dark')}\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost,\n  } = boostInfo;\n\n  const currentLevel = level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n  };\n}\n","import type { ApiMessage } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageKey,\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  getMessageText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CBuciapCXTFHGIT8QJjp\",\"particle\":\"zSAQoiw2P8dHog4GGC6Y\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerPreviewHash(reaction.documentId);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"UoQ7Ahl_08BYJER7dkXg\",\"animated-icon\":\"m6I0yrKxFYZrVajqEjYY\",\"animatedIcon\":\"m6I0yrKxFYZrVajqEjYY\",\"effect\":\"DUYRztiKh76RsdbcJpu8\",\"animating\":\"_sWZKdctR4GWBAZk5LvT\",\"withEffectOnly\":\"bcQvAAQmccIErVUj7YDo\"};","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport ReactionStaticEmoji from '../ReactionStaticEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = 'documentId' in reaction;\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && `sticker${centerIconId}`;\n  const mediaHashEffect = effectId && `sticker${effectId}`;\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon, !centerIconId);\n  const mediaDataEffect = useMedia(mediaHashEffect, !effectId);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransition(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransition(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransition(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          forceAlways\n          observeIntersectionForPlaying={observeIntersection}\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          forceAlways\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { availableReactions, genericEmojiEffects } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean(unreadCount || hasUnreadMark);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, pinnedElement,\n    ].filter(Boolean);\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QNEU55wdWY0UBHKcohz_\",\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"button\":\"RF4n_8QOkb5FMXcpbmBW\",\"title\":\"XFFMu4VlEHKxRihwcGTm\",\"unread-count\":\"jYYtPy1W31sqUc_gw9RW\",\"unreadCount\":\"jYYtPy1W31sqUc_gw9RW\",\"info\":\"fvlwjR3heR1XQKFT_jiv\",\"name\":\"Njj0lF4z1QQ96mlTyHt_\",\"icon\":\"EKj05B3RNFnEMtMNttAq\",\"avatarWrapper\":\"qx5qdiOt16oub2O9sYeg\",\"avatar\":\"n8grGxKGGUr4oa8NVGFW\",\"chatsPreview\":\"m7P0WNHzg_kxle3rxniA\",\"unread\":\"mee_ERQMDxZsfb47JEBb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","import { addCallback } from '../lib/teact/teactn';\nimport { getGlobal } from '../global';\n\nimport type { GlobalState } from '../global/types';\nimport type { Signal, SignalSetter } from '../util/signals';\n\nimport { createSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\n/*\n  This hook is a more performant variation of the standard React `useSelector` hook. It allows to:\n  a) Avoid multiple subscriptions to global updates by leveraging a single selector reference.\n  b) Return a signal instead of forcing a component update right away.\n */\n\ntype Selector<T extends any> = (global: GlobalState) => T;\n\ninterface State<T extends any> {\n  clientsCount: number;\n  getter: Signal<T>;\n  setter: SignalSetter;\n}\n\nconst bySelector = new Map<Selector<any>, State<any>>();\n\naddCallback((global: GlobalState) => {\n  for (const [selector, { setter }] of bySelector) {\n    setter(selector(global));\n  }\n});\n\nfunction useSelectorSignal<T extends any>(selector: Selector<T>): Signal<T> {\n  let state = bySelector.get(selector);\n\n  if (!state) {\n    const [getter, setter] = createSignal(selector(getGlobal()));\n    state = { clientsCount: 0, getter, setter };\n    bySelector.set(selector, state);\n  }\n\n  useEffectOnce(() => {\n    state!.clientsCount++;\n\n    return () => {\n      state!.clientsCount--;\n\n      if (!state!.clientsCount) {\n        bySelector.delete(selector);\n      }\n    };\n  });\n\n  return state.getter;\n}\n\nexport default useSelectorSignal;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wYxzEPxIxq51N_1Jvb22\",\"indicator\":\"GjqQzJt4PhbEBMchbPMg\",\"indicatorInner\":\"mem3FdA38CqQltSSxUwi\",\"selected\":\"J83lhIRMV9uenQVCQJpB\",\"active\":\"AtRfJ5hbKIb7giL05RZz\",\"bar-animation-transform-2\":\"fvooOFoNHT8RmLcjbCMZ\",\"barAnimationTransform2\":\"fvooOFoNHT8RmLcjbCMZ\",\"bar-animation-transform-1\":\"V89uAJI0AldAPq3h8iKW\",\"barAnimationTransform1\":\"V89uAJI0AldAPq3h8iKW\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSelectorSignal from '../../../hooks/useSelectorSignal';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ReportModal from '../../common/ReportModal';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop: number;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiFormattedText;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    focusLastMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { lastMessage, isForum } = chat || {};\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n      } else {\n        openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n      }\n\n      return;\n    }\n\n    openChat({ id: chatId, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransition(isOnline);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}` : undefined}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div className={buildClassName('avatar-online', isAvatarOnlineShown && 'avatar-online-shown')} />\n          <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={getIsForumPanelClosed} />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {chat.lastMessage && (\n            <LastMessageMeta\n              message={chat.lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge chat={chat} isPinned={isPinned} isMuted={isMuted} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          peerId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const { senderId, replyToMessageId, isOutgoing } = chat.lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = chat.lastMessage ? getMessageAction(chat.lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && currentThreadId === MAIN_THREAD_ID;\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = chat.lastMessage && selectTopicFromMessage(global, chat.lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && chat.lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, chat.lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n)(Chat));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"SQg81XcAI_8yUrDTZsuO\",\"sticker\":\"wJbYOMkKbFvBF3ETHcTe\",\"title\":\"aAjnCIjqnZ5azP_wg1ax\",\"description\":\"xkUox6hbodMU0tsgwbai\",\"is-ios\":\"v_F4YMWOjnwul_FmJtqz\",\"isIos\":\"v_F4YMWOjnwul_FmJtqz\",\"is-macos\":\"I0of4RZnJHb9jdBEQSiA\",\"isMacos\":\"I0of4RZnJHb9jdBEQSiA\",\"button-text\":\"avAW55GP937eCr8UmpfS\",\"buttonText\":\"avAW55GP937eCr8UmpfS\",\"centered\":\"LIiIYVtbGfUXltL06Xbb\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"HJvl22k3BH70ntnjhIP0\",\"root\":\"auVVCT950ajs6Uf4jI_w\",\"title\":\"RrIwnolHiQkojIfDEmg3\",\"info\":\"W7svz8CjmnPmDhwiz6cJ\",\"buttons\":\"lV9Uc02uJwQff0VQsKTj\",\"button\":\"D0dko7sVnw0KDtqjY0bH\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [archiveSettings, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds, shouldDisplayArchive]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open')}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch}\n            onSettingsScreenSelect={onSettingsScreenSelect}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZyX_vkPmR8lkPavXpJ8t\",\"button-text\":\"eyTT7Nz45S4tsccfs60O\",\"buttonText\":\"eyTT7Nz45S4tsccfs60O\",\"sticker\":\"qtGErqZ1CIiAYG3E4UcJ\",\"title\":\"xpDHtODGvlK2Esrg3kFa\",\"description\":\"xqeZm45hTFw3abdn8dYe\",\"is-ios\":\"G5wtv6cwHgiIpRWtvIvu\",\"isIos\":\"G5wtv6cwHgiIpRWtvIvu\",\"is-macos\":\"H92rL6BfAuzokrWOXdQr\",\"isMacos\":\"H92rL6BfAuzokrWOXdQr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YmRS2ZiwKMtqCF87Nsw8\",\"closed-icon\":\"K6QDMKEV2GXbuOQWOS73\",\"closedIcon\":\"K6QDMKEV2GXbuOQWOS73\",\"topic-icon\":\"TB99wQ9nHBumZ6E9ByUz\",\"topicIcon\":\"TB99wQ9nHBumZ6E9ByUz\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiFormattedText, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiFormattedText;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const { openChat, deleteTopic, focusLastMessage } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openChat({ id: chatId, threadId: topic.id, shouldReplaceHistory: true });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId)!;\n    const { senderId, replyToMessageId, isOutgoing } = lastMessage || {};\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLang from '../../../../hooks/useLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n    hash: chat ? createLocationHash(chat.id, 'thread', MAIN_THREAD_ID) : undefined,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? currentThreadId : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GUOX6Q0XzHRhNZvBwjQ9\",\"rtl\":\"_1XehUpS3aX91hWXDmcu\",\"no-animation\":\"mPOFnJvncopcVbbyZrzs\",\"noAnimation\":\"mPOFnJvncopcVbbyZrzs\",\"group-call\":\"OH0LaRqoNDIvvHsCtEte\",\"groupCall\":\"OH0LaRqoNDIvvHsCtEte\",\"notch\":\"UhjDQykjZBYhiVclJl16\",\"scrolled\":\"h_YBka1L8eRICjrO5dF5\",\"scroll-top-handler\":\"cO3iiLSh70tyWuNCUFtX\",\"scrollTopHandler\":\"cO3iiLSh70tyWuNCUFtX\",\"info\":\"mzucaTAH77gNB1V006lS\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gljGvMdlFlsKhrMPQ_xa\",\"title-row\":\"GrFgsvT5YSYldl56Hnzu\",\"titleRow\":\"GrFgsvT5YSYldl56Hnzu\",\"loading\":\"bYI9fzK27IbEWGTzvRGf\",\"other-column\":\"RhuR5wto63HGEeY1NdXg\",\"otherColumn\":\"RhuR5wto63HGEeY1NdXg\",\"main-column\":\"VUe4FFBCwClvaU9aiXG1\",\"mainColumn\":\"VUe4FFBCwClvaU9aiXG1\",\"unread\":\"yHnVWii5hDMte2XGiGio\",\"last-message\":\"OyHxp9apV7oixvvxGFDx\",\"lastMessage\":\"OyHxp9apV7oixvvxGFDx\",\"after-wrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"afterWrapper\":\"H4WbKWl7lQI8hw8ryOgF\",\"after\":\"DGAWy9KRwAZqof7Bt1nx\",\"title\":\"WeBppBs2KkOXzHRzQ2_W\",\"otherColumnIcon\":\"mrAD_CKmksSYVhfxgz_w\",\"other-column-title\":\"Ub9bpPYaMAw0qMouq5_O\",\"otherColumnTitle\":\"Ub9bpPYaMAw0qMouq5_O\",\"other-columns\":\"FJt1oTIn6WgfvH9iKMg3\",\"otherColumns\":\"FJt1oTIn6WgfvH9iKMg3\",\"ellipsis\":\"RL7lx7aP0Fg2LakRlxHp\",\"reverse-corner\":\"RJ0NXk_lx9qewdoGgJsT\",\"reverseCorner\":\"RJ0NXk_lx9qewdoGgJsT\",\"overwritten-width\":\"e4cE7B51DN3MrEY9WuKx\",\"overwrittenWidth\":\"e4cE7B51DN3MrEY9WuKx\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useLang from '../../hooks/useLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openChat } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openChat({\n      id: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { Thread } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n} from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useLang from '../../../../hooks/useLang';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: Thread['draft'];\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  useEnsureMessage(chatId, isAction ? lastMessage.replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (draft?.text.length && (!chat?.isForum || isTopic)) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text,\n            entities: draft.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {Boolean(lastMessage.replyToStoryId) && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { ApiMediaFormat, MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getMessageMediaHash } from '../../global/helpers';\nimport * as mediaLoader from '../../util/mediaLoader';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const suggestedPhotoUrl = useMedia(getMessageMediaHash(message, 'full'));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const photo = message.content.action!.photo!;\n    const blobUrl = await mediaLoader.fetch(`videoAvatar${photo.id}?size=u`, ApiMediaFormat.BlobUrl);\n    const blob = await fetch(blobUrl).then((r) => r.blob());\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetch(suggestedPhotoUrl).then((r) => r.blob()));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        mediaId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection } from '../../types';\nimport type { PinnedIntersectionChangedCallback } from './hooks/usePinnedMessage';\n\nimport { getMessageHtmlId, isChatChannel } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectIsMessageFocused,\n  selectTabState,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: number;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onPinnedIntersectionChange?: PinnedIntersectionChangedCallback;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onPinnedIntersectionChange,\n}) => {\n  const { openPremiumModal, requestConfetti } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(message.chatId, message.replyToMessageId, targetMessage);\n  useFocusMessage(ref, message.chatId, isFocused, focusDirection, noFocusHighlight, isJustAdded);\n\n  useEffect(() => {\n    if (!message.isPinned) return undefined;\n\n    return () => {\n      onPinnedIntersectionChange?.({ viewportPinnedIdsToRemove: [message.id], isUnmount: true });\n    };\n  }, [onPinnedIntersectionChange, message.isPinned, message.id]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isGift = Boolean(message.content.action?.text.startsWith('ActionGift'));\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti();\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransition(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      lang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, lang, message, observeIntersectionForLoading, observeIntersectionForPlaying,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuPosition !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    return (\n      <span className=\"action-message-gift\" tabIndex={0} role=\"button\" onClick={handlePremiumGiftClick}>\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang('ActionGiftPremiumTitle')}</strong>\n        <span>{lang('ActionGiftPremiumSubtitle', lang('Months', message.content.action?.months, 'i'))}</span>\n\n        <span className=\"action-message-button\">{lang('ActionGiftPremiumView')}</span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isGift || isSuggestedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    !isGift && !isSuggestedAvatar && 'in-one-row',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && <span className=\"action-message-content\">{renderContent()}</span>}\n      {isGift && renderGift()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar\n          message={message}\n          renderContent={renderContent}\n        />\n      )}\n      {contextMenuPosition && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuPosition}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, replyToMessageId, content,\n    } = message;\n\n    const userId = senderId;\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = replyToMessageId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const chat = selectChat(global, chatId);\n    const isChat = chat && (isChatChannel(chat) || userId === chatId);\n    const senderUser = !isChat && userId ? selectUser(global, userId) : undefined;\n    const senderChat = isChat ? chat : undefined;\n    const premiumGiftSticker = global.premiumGifts?.stickers?.[0];\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      topic,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IAnchorPosition } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: number;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewBoosts,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId, threadId: MAIN_THREAD_ID });\n  });\n\n  function handleRequestCall() {\n    requestMasterAndRequestCall({ userId: chatId });\n  }\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isChatSuperGroup(chat)) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot;\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isMainThread && !canSubscribe;\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewBoosts = isMainThread && isChannel && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewBoosts,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vL8HfVVnjTeFmp1ECFj8\",\"compact\":\"N3E1geoPu1vesCKf545F\",\"image\":\"Fb4aIyDYEwOlaqY8oZkV\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: number;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useBackgroundMode from '../../../../hooks/useBackgroundMode';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { IAnchorPosition, ISettings } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectIsInSelectMode, selectReplyingToId } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport parseEmojiOnlyString from '../../../util/parseEmojiOnlyString';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: number;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  replyingToId?: number;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyingToId,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyingToId, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS)}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={onFocus}\n            onBlur={onBlur}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyingToId: chatId && threadId ? selectReplyingToId(global, chatId, threadId) : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: number;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u1iXUR7f9a1fJ3oKj6UR\",\"preview\":\"PdT0BgaOGO3KQ6uAMywg\",\"linkPreview\":\"VjvrVyctay2XnrWkF6Pm\",\"media\":\"bCVEWkiPlJ2vOFKdsOZn\",\"nonInteractive\":\"sM8Yb5GJn63Lqe7WGyxs\",\"expired\":\"GU6ftk8mOSKG68G3clJz\",\"expiredIcon\":\"C6JcJFH05QLPlgncYbFX\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransition(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessagePhoto,\n  getMessageWebPagePhoto,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Photo: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const photo = (getMessagePhoto(message) || getMessageWebPagePhoto(message))!;\n  const localBlobUrl = photo.blobUrl;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(getMessageMediaHash(message, size), !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n\n  const [isSpoilerShown, , hideSpoiler] = useFlag(photo.isSpoiler);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'), !isDownloading, getMessageMediaFormat(message, 'download'),\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n  );\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled, 'slow');\n  const {\n    shouldRender: shouldRenderDownloadButton,\n    transitionClassNames: downloadButtonClassNames,\n  } = useShowTransition(!fullMediaData && !isLoadAllowed);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const isOwn = isOwnMessage(message);\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      getCustomAppendixBg(fullMediaData, isOwn, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions(message, asForwarded, noAvatars, isMobile);\n\n  const className = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    width === height && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      <img\n        src={fullMediaData}\n        className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        draggable={!isProtected}\n      />\n      {withThumb && (\n        <canvas ref={thumbRef} className={buildClassName('thumbnail', thumbClassNames)} />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton\n        && <i className={buildClassName('icon', 'icon-download', downloadButtonClassNames)} />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\n\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useMedia from '../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\n\nimport './ReactionSelectorReaction.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelectorReaction');\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={cn('&', chosen && 'chosen')}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={cn('static-icon')}\n          src={staticIconData}\n          alt=\"\"\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiReaction, ApiReactionCount,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport {\n  canSendReaction, getReactionUniqueKey, isSameReaction, sortReactions,\n} from '../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  maxUniqueReactions?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  onShowMore: (position: IAnchorPosition) => void;\n  className?: string;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 6;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  enabledReactions,\n  currentReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  onToggleReaction,\n  onShowMore,\n  className,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const availableReactions = useMemo(() => {\n    const reactions = allAvailableReactions?.map((availableReaction) => {\n      if (availableReaction.isInactive) return undefined;\n      if (!isPrivate && (!enabledReactions || !canSendReaction(availableReaction.reaction, enabledReactions))) {\n        return undefined;\n      }\n      if (maxUniqueReactions && currentReactions && currentReactions.length >= maxUniqueReactions\n        && !currentReactions.some(({ reaction }) => isSameReaction(reaction, availableReaction.reaction))) {\n        return undefined;\n      }\n      return availableReaction;\n    }).filter(Boolean) || [];\n\n    return sortReactions(reactions, topReactions);\n  }, [allAvailableReactions, currentReactions, enabledReactions, isPrivate, maxUniqueReactions, topReactions]);\n\n  const reactionsToRender = useMemo(() => {\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction(r.reaction, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&', lang.isRtl && 'isRtl'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {reactionsToRender.map((reaction, i) => (\n            <ReactionSelectorReaction\n              key={getReactionUniqueKey(reaction.reaction)}\n              isReady={isReady}\n              onToggleReaction={onToggleReaction}\n              reaction={reaction}\n              noAppearAnimation={!canPlayAnimatedEmojis}\n              chosen={userReactionIndexes.has(i)}\n            />\n          ))}\n          {withMoreButton && (\n            <Button\n              color=\"translucent\"\n              className={cn('show-more')}\n              onClick={handleShowMoreClick}\n            >\n              <i className=\"icon icon-down\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersectionForLoading: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Video: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const video = (getMessageVideo(message) || getMessageWebPageVideo(message))!;\n  const localBlobUrl = video.blobUrl;\n\n  const [isSpoilerShown, , hideSpoiler] = useFlag(video.isSpoiler);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = getMessageMediaHash(message, 'inline');\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash, !shouldLoad, getMessageMediaFormat(message, 'inline'),\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const previewMediaHash = getMessageMediaHash(message, 'preview');\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const previewClassNames = useMediaTransition((hasThumb || previewBlobUrl) && !isPlayerReady);\n\n  const noThumb = !hasThumb || previewBlobUrl || isPlayerReady;\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n  );\n\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring && !isUnsupported, undefined, wasLoadDisabled);\n  const {\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner));\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) ? videoRef.current?.duration : video.duration) || 0;\n\n  const isOwn = isOwnMessage(message);\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const {\n    width, height,\n  } = dimensions || calculateVideoDimensions(video, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (isDownloading) {\n      getActions().cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const className = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', previewClassNames, withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i className={buildClassName('icon', 'icon-large-play', playButtonClassNames)} />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames)}>\n          <ProgressSpinner progress={transferProgress} onClick={handleClick} />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  onMediaClick?: () => void;\n  onCancelMediaTransfer?: () => void;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  onMediaClick,\n  onCancelMediaTransfer,\n}) => {\n  const { openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    type,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = false;\n  if (isArticle && webPage?.photo && !webPage.video) {\n    const { width, height } = calculateMediaDimensions(message, undefined, undefined, isMobile);\n    isSquarePhoto = width === height;\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent-bordered\"\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir=\"auto\"\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {photo && !video && (\n          <Photo\n            message={message}\n            observeIntersection={observeIntersection}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {isArticle && (\n          <div className=\"WebPage-text\">\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {!inPreview && video && (\n          <Video\n            message={message}\n            observeIntersectionForLoading={observeIntersection!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </div>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'lng_view_button_story';\n    case 'telegram_channel_boost':\n      return 'lng_view_button_boost';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n  return getAppendixColorFromImage(src, isOwn);\n}\n\nasync function getAppendixColorFromImage(src: string, isOwn: boolean) {\n  const img = new Image();\n  img.src = src;\n  img.crossOrigin = 'anonymous';\n\n  if (!img.width) {\n    await new Promise((resolve) => {\n      img.onload = resolve;\n    });\n  }\n\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n\n  canvas.width = img.width;\n  canvas.height = img.height;\n\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n\n  const x = isOwn ? img.width - 1 : 0;\n  const y = img.height - 1;\n\n  const pixel = Array.from(ctx.getImageData(x, y, 1, 1).data);\n  return `rgba(${pixel.join(',')})`;\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport {\n  getMessagePhoto,\n  getMessageText,\n  getMessageVideo,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../../global/helpers';\nimport { calculateInlineImageDimensions, calculateVideoDimensions, REM } from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions(\n  message: ApiMessage, asForwarded?: boolean, noAvatars?: boolean, isMobile?: boolean,\n) {\n  const isOwn = isOwnMessage(message);\n  const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n  const video = getMessageVideo(message);\n\n  const isWebPagePhoto = Boolean(getMessageWebPagePhoto(message));\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const { width, height } = photo\n    ? calculateInlineImageDimensions(photo, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : calculateVideoDimensions(video!, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const messageText = getMessageText(message);\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport { getMessageMediaThumbDataUri } from '../../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\n\nexport default function useBlurredMediaThumbRef(\n  message: ApiMessage,\n  isDisabled?: boolean | string,\n  forcedUri?: string,\n) {\n  const { isMobile } = useAppLayout();\n\n  const dataUri = forcedUri || getMessageMediaThumbDataUri(message);\n\n  return useCanvasBlur(\n    dataUri,\n    Boolean(isDisabled),\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { FocusDirection } from '../../../../types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = 750;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage(\n  elementRef: { current: HTMLDivElement | null },\n  chatId: string,\n  isFocused?: boolean,\n  focusDirection?: FocusDirection,\n  noFocusHighlight?: boolean,\n  isResizingContainer?: boolean,\n  isJustAdded?: boolean,\n) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n\n      const exec = () => animateScroll(\n        messagesContainer,\n        elementRef.current!,\n        isToBottom ? 'end' : 'centerOrTop',\n        FOCUS_MARGIN,\n        focusDirection !== undefined ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined,\n        focusDirection,\n        undefined,\n        isResizingContainer,\n        true,\n      );\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer,\n  ]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../global/types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiMessageStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\n\nimport './StatisticsOverview.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'views', title: 'Stats.Message.Views', isPlain: true },\n    {\n      name: 'forwards', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n  [\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  statistics: ApiChannelStatistics | ApiGroupStatistics | ApiMessageStatistics | ApiBoostStatistics;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  className,\n}) => {\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName('StatisticsOverview__value', isChangeNegative && 'negative')}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n\n  const schema = type === 'boost' ? BOOST_OVERVIEW : type === 'message' ? MESSAGE_OVERVIEW : type === 'group'\n    ? GROUP_OVERVIEW : CHANNEL_OVERVIEW;\n\n  return (\n    <div className={buildClassName('StatisticsOverview', className)}>\n      <div className=\"StatisticsOverview__header\">\n        {title && (\n          <div className=\"StatisticsOverview__title\">\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className=\"StatisticsOverview__caption\">\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className=\"StatisticsOverview__table\">\n        {schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className=\"StatisticsOverview__table-cell\">\n                    <b className=\"StatisticsOverview__table-value\">\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className=\"StatisticsOverview__table-heading\">{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className=\"StatisticsOverview__table-cell\">\n                    {cell.withAbsoluteValue && (\n                      <span className=\"StatisticsOverview__table-value\">\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={`StatisticsOverview__table-${cell.withAbsoluteValue ? 'secondary-' : ''}value`}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className=\"StatisticsOverview__table-heading\">{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className=\"StatisticsOverview__table-cell\">\n                  <b className=\"StatisticsOverview__table-value\">\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className=\"StatisticsOverview__table-heading\">{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n    </div>\n  );\n};\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getSenderTitle(lang, peer)}\n      </div>\n      {contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isArchived,\n  withAnimation,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { shouldRender, transitionClassNames } = useShowTransition(isVisible, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    if (!withAnimation) return;\n    if (isVisible) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={buildClassName(styles.root, transitionClassNames)}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active } } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { pause } from '../../../util/schedulers';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    const preloadHashes = async (mediaHashes: { hash: string; format: ApiMediaFormat }[]) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format }) => {\n        mediaLoader.fetch(hash, format).then((result) => {\n          if (format === ApiMediaFormat.Progressive) {\n            preloadProgressive(result);\n          }\n        });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n\n  return ids.slice(currentIndex - aroundAmount, currentIndex + aroundAmount);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: { hash: string; format: ApiMediaFormat }[] = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: story.content.video ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    // Alt video with different codec\n    if (story.content.altVideo) {\n      mediaHashes.push({ hash: getStoryMediaHash(story, 'full', true)!, format: ApiMediaFormat.Progressive });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n\n  setTimeout(() => {\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"oWM0Zdb5uhUcOVtc99aS\",\"mediaArea\":\"qF5NAjzN826sfFvUwCi1\",\"preview\":\"dDrvIyufIoAgicpd5jBf\",\"shiny\":\"mHQ5t7g14fbpeDSyTLcd\",\"wave\":\"PlA2GEm5aGvfxsFwsAwE\",\"suggestedReaction\":\"K8z7QedYZHumSrLQCrZq\",\"dark\":\"cKzIdSabAL8MJ9G60u77\",\"background\":\"QxSGHD_yTaeyLhKS2qqz\",\"flipped\":\"CiCfsJ1VaeHZ624tudjv\",\"reaction\":\"Oi4FupikW1BQIPXxj9a7\",\"withCount\":\"dCSRvNsQTjKPeBul8iIX\",\"reactionCount\":\"WAKY7bjrmisH3k1XFQMZ\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, reactions } = story;\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.suggestedReaction, isDark && styles.dark, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.background, isFlipped && styles.flipped)}\n      />\n      <ReactionAnimatedEmoji\n        className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n        reaction={reaction}\n        containerId={containerId}\n        size={customEmojiSize}\n        effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n        shouldPause={isPreview}\n        shouldLoop={!isPreview}\n      />\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\n\nconst MediaAreaOverlay = ({\n  story, isActive, className,\n}: OwnProps) => {\n  const { openMapModal } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isActive) return;\n    const element = ref.current;\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    if (mediaArea.type === 'geoPoint' || mediaArea.type === 'venue') {\n      openMapModal({ geoPoint: mediaArea.geo });\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isActive && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea) {\n  const {\n    x, y, width, height, rotation,\n  } = mediaArea.coordinates;\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLang from '../useLang';\nimport useLastCallback from '../useLastCallback';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat);\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect, useRef, useState } from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n\n          registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime(time);\n    if (duration) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { onBeforeUnload } from '../util/schedulers';\nimport useLastCallback from './useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id });\n      },\n    };\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }),\n      }\n      : { title: lang('PinToTop'), icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId: folderId! }) };\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const actionDelete = {\n      title: isUserId(chat.id)\n        ? lang('Delete')\n        : lang(getCanDeleteChat(chat)\n          ? 'DeleteChat'\n          : (isChatChannel(chat) ? 'LeaveChannel' : 'Group.LeaveGroup')),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { Signal } from '../util/signals';\n\nimport useSignal from './useSignal';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useForceUpdate from './useForceUpdate';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedState<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): T;\nfunction useDerivedState<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): T;\nfunction useDerivedState<T>(signal: Signal<T>): T;\n\nfunction useDerivedState<T>(resolverOrSignal: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrSignal as Resolver<T> : () => ((resolverOrSignal as Signal<T>)());\n  dependencies ??= [resolverOrSignal];\n\n  const valueRef = useRef<T>();\n  const forceUpdate = useForceUpdate();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver(isSync = false) {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)((newValue) => {\n        if (valueRef.current !== newValue) {\n          valueRef.current = newValue;\n          forceUpdate();\n        }\n      });\n    } else {\n      const newValue = (currentResolver as SyncResolver<T>)();\n      if (valueRef.current !== newValue) {\n        valueRef.current = newValue;\n\n        if (!isSync) {\n          forceUpdate();\n        }\n      }\n    }\n  }\n\n  useSyncEffect(() => {\n    runCurrentResolver(true);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return valueRef.current as T;\n}\n\nexport default useDerivedState;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useSignal from './useSignal';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, forceUpdate, isStreaming, delay, handleProgress, isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLang from './useLang';\nimport useLastCallback from './useLastCallback';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: number) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport default function useSignal<T>(initial?: T) {\n  const signalRef = useRef<ReturnType<typeof createSignal<T>>>();\n  signalRef.current ??= createSignal<T>(initial);\n  return signalRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport { cleanupEffect, isSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\nexport function useSignalEffect(effect: NoneToVoidFunction, dependencies: readonly any[]) {\n  // The is extracted from `useEffectOnce` to run before all effects\n  const isFirstRun = useRef(true);\n  if (isFirstRun.current) {\n    isFirstRun.current = false;\n\n    dependencies?.forEach((dependency) => {\n      if (isSignal(dependency)) {\n        dependency.subscribe(effect);\n      }\n    });\n  }\n\n  useEffectOnce(() => {\n    return () => {\n      cleanupEffect(effect);\n    };\n  });\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nfunction useTimeout(callback: () => void, delay?: number, dependencies: readonly any[] = []) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [delay, savedCallback, ...dependencies]);\n}\n\nexport default useTimeout;\n","import generateUniqueId from './generateUniqueId';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    isAnimating = true;\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n    const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from '../global/helpers';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { getMessageKey, parseMessageKey } from '../global/helpers';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId {\n  return `${getMessageKey(message)}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { requestMeasure } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    requestMeasure(() => element.focus());\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import twemojiRegex from '../lib/twemojiRegex';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const lines = text.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseMessageInput(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"J2OUAM1NNJzVPwPvfhkE\",\"fadeIn\":\"M0CnDOPqsqgp07DpRE7u\",\"closing\":\"U1ngPxxXOIuHX2rXUTdq\",\"peer\":\"N26JMlalq5jDriKQ7nFD\",\"name\":\"M4TMTYSSXa3H49Go9t9g\",\"name_hasUnreadStory\":\"kUi0jmHQpokhzBJI5FJA\",\"nameHasUnreadStory\":\"kUi0jmHQpokhzBJI5FJA\",\"hidden\":\"c5X6suR_qxO1W64dH2j3\",\"contextMenu\":\"nAc8FkZyj9PHGgGm0BO7\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"M4TMTYSSXa3H49Go9t9g\",\"root\":\"laLpjZnhOwW8cdBN3mEv\",\"avatar\":\"ewhbkm9F8nGqLpj_toQg\",\"avatarHidden\":\"aPEbisewADPmseTVcQxO\",\"ghost\":\"bVo8M4JDvB9c6gUvnHTE\",\"ghostAnimateName\":\"DuJzmNpO8VBweCzETZQJ\",\"ghostRevealName\":\"ghy_xXQVvFUwJrNg9uhA\",\"ghostLast\":\"_mqUJoir6gIYUJWb0zFw\"};"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","_ref","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","_ref2","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransition","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","createElement","buildClassName","onClick","peer","Avatar","key","Button","round","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","selectCanAnimateInterface","textElement","current","prevText","elements","i","length","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","thumbClassNames","useMediaTransition","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","setTimeout","size","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","onHideTranscription","onPlay","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","content","audio","voice","video","isMediaUnread","isVoice","isSeeking","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","isOwn","isOwnMessage","waveformCanvasRef","arguments","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","AudioOrigin","Inline","Search","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","join","ariaLabel","backgroundImage","ProgressSpinner","transparent","noCross","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","viewBox","rx","ry","stroke","renderVoice","peers","root","avatar","runDebounced","debounce","cb","_ref4","chatOrUserId","countryList","phoneCodes","phoneCodeList","user","isUserId","selectUser","isForum","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","threadId","selectCurrentMessageList","topicId","chatInviteLink","selectChatFullInfo","inviteLink","description","selectUserFullInfo","bio","about","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","forceShowSelf","loadFullUser","showNotification","updateChatMutedState","updateTopicMutedState","loadPeerStories","userId","usernames","phoneNumber","isSelf","chatUsernames","peerId","areNotificationsEnabled","setAreNotificationsEnabled","useEffectWithPrevDeps","prevPeerId","isTopicInfo","MAIN_THREAD_ID","activeUsernames","u","activeChatUsernames","link","getChatLink","handleNotificationChange","newAreNotificationsEnabled","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","renderUsernames","usernameList","isChat","mainUsername","otherUsernames","usernameLinks","split","s","username","nick","textToCopy","TME_LINK_PREFIX","href","stopEvent","ListItem","icon","multiline","narrow","isStatic","Switcher","label","checked","inactive","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","body","appendChild","MAX_ASPECT_RATIO","FILE_EXT_REGEX","async","buildAttachment","filename","blob","options","blobUrl","URL","createObjectURL","type","mimeType","quick","shouldSendAsFile","SUPPORTED_IMAGE_CONTENT_TYPES","img","preloadImage","validateAspectRatio","shouldShrink","isGif","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","replace","SUPPORTED_VIDEO_CONTENT_TYPES","videoWidth","videoHeight","preloadVideo","err","createPosterForVideo","SUPPORTED_AUDIO_CONTENT_TYPES","coverUrl","url","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","toString","parseAudioMetadata","uniqueId","Date","now","random","prepareAttachmentsToSend","attachments","shouldSendCompressed","attach","shouldSendAsSpoiler","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","getAttachmentType","attachment","RE_COMMAND","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","addEventListener","handlePaste","removeEventListener","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","includes","pastedText","getData","substring","pastedFormattedText","parseMessageInput","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","innerHTML","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","name","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","reuseWorker","BLOB_PARAMS","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","Blob","onerror","delayStop","pause","AttachmentModal","useModuleLoader","Bundles","Extra","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","handleDocumentSelect","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","Menu","isOpen","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","disabled","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","BotCommandTooltip","selectChatMessage","clickBotInlineButton","isKeyboardSingleUse","keyboardButtons","noCompact","row","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","replyingToId","selectReplyingToId","editingId","selectEditingScheduledId","selectEditingId","isForwarding","forwardedMessages","sender","selectEditingMessage","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","selectForwardedSender","hiddenUserName","selectSender","selectPeer","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","onClear","setReplyingToId","setEditingId","focusMessage","changeForwardRecipient","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","isShown","canAnimate","useAsyncRendering","clearEmbedded","captureEscKeyListener","handleMessageClick","noForumTopicPanel","handleClearClick","handleChangeRecipientClick","isContextMenuOpen","contextMenuPosition","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","getMenuElement","querySelector","transformOriginX","transformOriginY","menuStyle","useMenuPosition","leftIcon","customText","strippedMessage","strippedText","onContextMenu","EmbeddedMessage","hasContextMenu","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","selectTheme","webPagePreview","getHtml","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","formattedTextWithLinkRef","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","getLink","useDerivedSignal","useSyncEffect","useDerivedState","renderingWebPage","handleClearWebpagePreview","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","DeleteMessageModal","MainButtonState","_ref5","storyId","chatBot","REPLIES_USER_ID","selectBot","isChatWithBot","isChatWithUser","chatBotFullInfo","chatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","scheduledIds","selectScheduledIds","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUserId","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraftText","selectRequestedDraftText","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","availableReactions","topReactions","isOnActiveTab","isBlurred","editingMessage","draft","selectDraft","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","shouldSchedule","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","groupChatMembers","members","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","chatBotCommands","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","attachmentSettings","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","stealthMode","stories","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openChat","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePrevious","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","isSentStoryReactionHeart","emoticon","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","limit","shouldForce","isSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","isBotCommandTooltipOpen","close","closeBotCommandTooltip","filteredBotCommands","botTooltipCommands","setFilteredBotCommands","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","useBotCommandTooltip","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","isEditing","updateDraft","prevState","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","EDITABLE_INPUT_CSS_SELECTOR","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","useDraft","resetComposer","handleEditComplete","handleEditCancel","useEditing","editMessage","setEditingDraft","setShouldForceShowEditing","prevEditedMessage","prevReplyingToId","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","action","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerPosition","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","shouldGroupMessages","localOnly","handleSendAttachments","handleSend","currentAttachments","record","handleClickBotMenu","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","escapeHtml","handleCustomEmojiSelect","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","shouldPreserveInput","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","renderedEditedMessage","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","customEmojiMessage","isReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","onSend","withBotCommands","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","onShowMore","isForMessage","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","isQuiz","shouldBeAnonymous","isSchedule","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","ComposerEmbeddedMessage","WebPagePreview","BotMenuButton","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","AttachMenu","BotKeyboardMenu","CustomEmojiTooltip","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","withEffectOnly","allowDisabledClick","noFastClick","CustomSendMenu","canSchedule","onSendSchedule","onSendWhenOnline","isPrivateChat","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","leaveChannel","deleteHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isMessageDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","onCheck","forwardSender","isProtected","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","observeIntersectionForPlaying","mediaBlobUrl","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","getMessageIsSpoiler","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","getPeerColorKey","getPictogramDimensions","srcUrl","MediaSpoiler","isVisible","renderPictogram","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","Icon","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","typingStatus","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","DotAnimation","TypingStatus","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","onRevoke","openChatWithDraft","copyLink","handleCopyPrimaryClicked","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","outgoingStatus","MessageOutgoingStatus","getMessageVideo","hasSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","withAnimation","rect","currentTarget","clientY","shiftX","shiftY","Keys","Transition","activeKey","DEFAULT_TEXT","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","isRoundCheckbox","lockedIds","onSelectedIdsChange","onFilterChange","onDisabledClick","onLoadMore","shouldMinimize","lockedSelectedIds","unlockedSelectedIds","unlockedIds","lockedIdsSet","sortedItemIds","sort","a","b","aIsLocked","bIsLocked","handleItemClick","newSelectedIds","splice","handleFilterChange","viewportIds","getMore","useInfiniteScroll","PickerSelectedItem","isMinimized","clickArg","canClose","InputText","InfiniteScroll","renderCheckbox","PrivateChatInfo","GroupChatInfo","Loading","iconElement","titleText","leftText","rightText","floatingBadgeText","floatingBadgeIcon","hasFloatingBadge","isProgressFull","tailPosition","userStatus","selectUserStatus","statusIcon","emojiStatusSize","noEmojiStatus","adminMember","onEmojiStatusClick","customTitle","isOwner","withEmojiStatus","isUserOnline","getUserStatus","RippleEffect","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","userOrChat","canHaveMedia","isVideo","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","connectionState","mediaViewer","currentTopicId","userFullInfo","userPersonalPhoto","personalPhoto","userProfilePhoto","profilePhoto","userFallbackPhoto","fallbackPhoto","chatProfilePhoto","openPremiumModal","photos","prevMediaId","prevAvatarOwnerId","mediaIdRef","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","_","renderPhotoTabs","renderPhoto","canCopyTitle","ProfilePhoto","withIconHeart","isCustom","availableReaction","available","isSameReaction","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","blankUrl","subject","reportMessages","reportPeer","reportProfilePhoto","reportStory","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","selected","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","typingUser","typingUserName","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","currentLevel","hasNextLevel","levelProgress","remainingBoosts","renderMessageText","highlight","emojiSize","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","renderTextWithEntities","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","isLottie","particleSize","onEnded","stickerHash","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","generateRandomDropPath","path","withSharedAnimation","ICON_SIZE","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","activeReactions","withEffects","selectPerformanceSettingsValue","genericEffects","effectSize","shouldPause","shouldLoop","stopActiveReaction","r","centerIconId","centerIcon","customEmoji","useCustomEmoji","assignedEffectId","aroundAnimation","assignedId","effectId","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayEffect","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","ReactionStaticEmoji","noPlay","forceAlways","AnimatedSticker","animatedIcon","roundToNearestEven","play","noLoop","effect","CustomEmojiEffect","ChatFolderModal","MuteChatModal","isPinned","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","renderContent","archiveSettings","onDragEnter","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","contextActions","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","handleDragEnter","minimized","buttonClassName","withPortalForMenu","info","Badge","avatarWrapper","chatsPreview","bySelector","Map","addCallback","selector","setter","senderId","replyToMessageId","isOutgoing","lastMessage","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectTopicFromMessage","selectThreadParam","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","folderId","orderDiff","animationType","offsetTop","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","renderSubtitle","useChatListEntry","getIsForumPanelClosed","state","getter","createSignal","clientsCount","set","useEffectOnce","delete","useSelectorSignal","selectIsForumPanelClosed","forceOnHeavyAnimation","handleDelete","handleMute","handleChatFolderChange","useChatContextActions","listedTopicIds","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","withStoryGap","StoryViewerOrigin","ChatList","ChatBadge","ChatCallStatus","LastMessageMeta","DeleteChatModal","ReportModal","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","fluid","pill","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","useResizeObserver","entry","borderBoxSize","blockSize","contentRect","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","hash","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","containerRef","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","resolvedFolderId","ALL_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","code","digit","isArchiveInList","shift","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","container","scrollHeight","offsetHeight","deltaY","passive","useTopOverscroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onDragLeave","UnconfirmedSession","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","Chat","teactOrderKey","getOrderKey","renderChats","EmptyFolder","canManageTopics","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastMessageId","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","deleteTopic","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","ChatAnimationTypes","useChatAnimationType","orderDiffs","numberOfUp","diff","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","useEnsureMessage","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","withTranslucentThumbs","renderActionMessageText","senderName","getMessageSenderName","replyToStoryId","messageSummary","inChatList","renderSummary","opacity","ANIMATION_END_DELAY","ChatForumLastMessage","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","forceUpdate","useForceUpdate","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","isChatGroup","uploadProfilePhoto","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","suggestedPhotoUrl","showAvatarNotification","screen","Main","handleSetSuggestedAvatar","handleCloseCropModal","handleSetVideo","fetch","then","videoTs","videoSizes","videoStartTs","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","textParts","targetMessageId","targetMessage","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","senderChat","premiumGiftSticker","premiumGifts","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","onPinnedIntersectionChange","requestConfetti","useFocusMessage","viewportPinnedIdsToRemove","isUnmount","noAppearanceAnimation","markShown","isGift","isSuggestedAvatar","shouldShowConfettiRef","targetUsers","isContextMenuShown","preventMessageInputBlur","handlePremiumGiftClick","toUserId","monthsAmount","months","nonInteractive","ActionMessageSuggestedAvatar","ContextMenuContainer","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewBoosts","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuPosition","setMenuPosition","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","isTouchScreen","getDocumentMediaHash","Text","iconSvg","mediaDataWithReplacedColors","doc","strokeWidth","outerHTML","isInSideMenu","toggleAttachBot","icons","openMenu","closeMenu","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","AttachBotIcon","shortName","withPortal","CustomSend","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","onDragOver","handleDragOver","clearTimeout","DropTarget","AbsoluteVideo","constructor","videoUrl","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","customColor","useDynamicColorListener","colorFilter","useColorFilter","playersById","clearPlayers","player","synchronizeElements","playerIdsToClear","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","stickerSetInfo","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","addCustomEmojiInputRenderCallback","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","clone","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","isHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","TextFormatter","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onSearchOpen","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","restoreSelection","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","getSelectedElement","updateInputStyles","scrollLeft","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","handleBoldText","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","ensureProtocol","encodeURI","k","m","p","getKeyFromEvent","linkUrlConfirmClassName","inputMode","dataTransferItems","traverseFileTreePromise","isFile","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","MAX_NESTING_PARENTS","parentNode","iterations","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","count","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","endsWith","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isPreview","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","getMessagePhoto","getMessageWebPagePhoto","withBlurredBackground","useBlurredMediaThumbRef","wasLoadDisabled","shouldRenderDownloadButton","downloadButtonClassNames","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","MIN_MEDIA_HEIGHT","dimensionsStyle","REACTION_SIZE","cn","createClassNameBuilder","noAppearAnimation","chosen","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","enabledReactions","currentReactions","maxUniqueReactions","reactions","isInactive","canSendReaction","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","ReactionSelectorReaction","getReactionUniqueKey","canAutoPlay","getMessageWebPageVideo","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","isPlayerReady","markPlayerReady","hasThumb","previewMediaHash","isPreviewPreloaded","canLoadPreview","isInline","isUnsupported","useUnsupportedMedia","playButtonClassNames","setPlayProgress","handleTimeUpdate","isFinite","isWebPageVideo","calculateVideoDimensions","onTimeUpdate","onCancelMediaTransfer","openTelegramLink","handleMediaClick","handleQuickButtonClick","useEnsureStory","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","BaseStory","Photo","Video","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","Image","crossOrigin","onload","drawImage","getImageData","getAppendixColorFromImage","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isWebPagePhoto","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","forcedUri","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","FOCUS_MARGIN","isResizingContainer","isRelocatedRef","isRelocated","messagesContainer","isToBottom","animateScroll","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","BOOST_OVERVIEW","withAbsoluteValue","statistics","period","schema","formatFullDate","minDate","maxDate","cell","field","formatInteger","part","percentage","change","isChangeNegative","renderOverviewItemValue","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","archived","isClosing","hidden","closing","useHorizontalScroll","StoryRibbonButton","isRibbonShown","isArchivedRibbonShown","canShow","PREVIEW_AVATAR_COUNT","reverse","preloadPeerIds","animateClosing","animateOpening","withStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","index","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","ghost","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","preloadedStories","canPreload","aroundStoryId","byPeerId","mediaHashes","Progressive","head","preload","autoplay","preloadProgressive","preloadHashes","peerStories","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","altVideo","getPreloadMediaHashes","mediaArea","customEmojiSize","setCustomEmojiSize","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","STORY_ASPECT_RATIO","prepareStyle","rotation","coordinates","openMapModal","useWindowSize","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","clientWidth","mediaAreas","geoPoint","geo","handleMediaAreaClick","MediaAreaSuggestedReaction","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","resolver","deps","msOrSchedulerFn","noFirst","setValue","useThrottledSignal","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","trackType","handlers","onInit","shouldPlay","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","lastCallback","onBeforeUnload","RADIUS","ITERATIONS","withRaf","preferredWidth","preferredHeight","isStarted","processBlur","alpha","fastBlur","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","toggleChatPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","getCanDeleteChat","isInFolder","resolverOrDependency","isAsync","resolverRef","runCurrentResolver","currentResolver","useSignalEffect","resolverOrSignal","valueRef","isSync","replyOriginForId","loadMessage","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","shouldPreventDefault","deltaX","IGNORE_TAGS","createCallbackManager","hotkeys","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaHash","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getTime","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","initial","signalRef","isFirstRun","dependency","subscribe","cleanupEffect","savedCallback","ConnectorClass","channel","_len","_key","postMessage","request","messageData","requestStates","requestStatesByCallback","generateUniqueId","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","createConnector","worker","connector","handleMessage","DEFAULT_DURATION","stopById","animateHorizontalScroll","containerWidth","scrollId","remainingPath","isStopped","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","Static","elementTop","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","onHeavyAnimationStop","animateSingle","isAnimatingScroll","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","stopCurrentAudio","track","Audio","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","hex2rgb","param","parseInt","rgb2hex","p0","p1","p2","rgb2hsb","v","hsb2rgb","f","q","getAverageColor","defaultRGB","rgb","image","naturalHeight","naturalWidth","getColorLuma","rgbColor","getPatternColor","hue","saturation","cycleRestrict","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","click","force","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","collapse","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","averageColor","fillColor","res","ctx2D","fillRect","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","globalCompositeOperation","isElementInViewport","windowHeight","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","zoom","lat","long","providerUrl","getMetersPerPixel","cos","PI","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","warn","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","RE_EMOJI_ONLY","lines","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","lastIndex","Bold","Italic","INS","Underline","S","Strike","STRIKE","Code","PRE","Pre","BLOCKQUOTE","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange"],"sourceRoot":""}