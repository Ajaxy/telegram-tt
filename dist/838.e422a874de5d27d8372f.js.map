{"version":3,"file":"838.e422a874de5d27d8372f.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/global/selectors/limits.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useInterval.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/emoji/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/progressieveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const media = (voice || video || audio)!;\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    voice,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal) && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"size-micro\":\"bnYA0Wm9\",\"sizeMicro\":\"bnYA0Wm9\",\"size-mini\":\"ZGpPX4Wb\",\"sizeMini\":\"ZGpPX4Wb\",\"size-tiny\":\"ufyZRVf5\",\"sizeTiny\":\"ufyZRVf5\",\"size-small\":\"UA2exR6e\",\"sizeSmall\":\"UA2exR6e\",\"size-small-mobile\":\"PTbjjZjF\",\"sizeSmallMobile\":\"PTbjjZjF\",\"size-medium\":\"jncPG8PA\",\"sizeMedium\":\"jncPG8PA\",\"size-large\":\"pd70AQAO\",\"sizeLarge\":\"pd70AQAO\",\"size-huge\":\"ceLzD19m\",\"sizeHuge\":\"ceLzD19m\",\"size-jumbo\":\"KpwfP5mr\",\"sizeJumbo\":\"KpwfP5mr\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { ApiDraft, MessageListType } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({ isSchedule: type === 'scheduled', message: editedMessage });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  hasReplaceableMedia?: boolean;\n  editingMessage?: ApiMessage;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  hasReplaceableMedia,\n  editingMessage,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useOldLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && hasReplaceableMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !hasReplaceableMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ chatId: message.chatId, messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <i className={buildClassName('bot-menu-icon', 'icon', 'icon-webapp', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType } from '../../../global/types';\nimport type { ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (sender && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { GlobalState, WebPageMediaSize } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n  attachmentSettings,\n  isEditing,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isShown);\n\n  const hasMediaSizeOptions = webPagePreview?.hasLargeMedia;\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector('.web-page-preview-context-menu .bubble'),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"web-page-preview-context-menu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('PreviewSender.MoveTextUp')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang(('PreviewSender.MoveTextDown'))}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ChatInput.EditLink.LargerMedia')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang(('ChatInput.EditLink.SmallerMedia'))}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ChatInput.EditLink.RemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)} ref={ref}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\" onClick={handlePreviewClick}>\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage\n          message={messageStub}\n          inPreview\n          theme={theme}\n          onContainerClick={handlePreviewClick}\n          isEditing={isEditing}\n        />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  ApiDraft, GlobalState, MessageList, MessageListType, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition, InlineBotSettings, ISettings, ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  hasReplaceableMedia,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNoWebPage,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectScheduledIds,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  onForward,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && hasReplaceableMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    if (chatId && chat && !sendAsPeerIds && isReady && (isChatSuperGroup(chat) || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot, isInStoryViewer),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    const effectId = effect?.id;\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n      if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        isInvertedMedia,\n        effectId,\n        webPageMediaSize: attachmentSettings.webPageMediaSize,\n        webPageUrl: hasWebPagePreview ? webPagePreview!.url : undefined,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n    clearDraft({\n      chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n    });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ sendCompressed, sendGrouped, isInvertedMedia }, scheduledAt, currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      sendSilent({ sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => { saveEffectInDraft({ chatId, threadId, effectId: undefined }); });\n\n  const handleStopEffect = useLastCallback(() => { hideEffectInComposer({ }); });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : isInStoryViewer ? lang('StoryRepliesLocked') : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <i className=\"icon icon-schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              hasReplaceableMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={lang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <i\n              className={buildClassName(\n                'icon',\n                'icon-heart',\n                isSentStoryReactionHeart && 'story-reaction-heart',\n              )}\n              aria-hidden\n            />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <i className=\"icon icon-send\" />\n        <i className=\"icon icon-microphone-alt\" />\n        {onForward && <i className=\"icon icon-forward\" />}\n        {isInMessageList && <i className=\"icon icon-schedule\" />}\n        {isInMessageList && <i className=\"icon icon-check\" />}\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const chatBotFullInfo = isChatWithBot ? selectUserFullInfo(global, chatBot.id) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const scheduledIds = selectScheduledIds(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !selectUserFullInfo(global, user.id)?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n\n    const isContactRequirePremium = selectUserFullInfo(global, chatId)?.isContactRequirePremium;\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n    && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && Boolean(scheduledIds?.length)\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: chatBotFullInfo ? (chatBotFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: chatBotFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview: selectTabState(global).webPagePreview,\n      isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useOldLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"DnvLcTfv\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPeerPhotos, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectPeerPhotos,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    emojiStatusSticker?: ApiSticker;\n    profilePhotos?: ApiPeerPhotos;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  emojiStatusSticker,\n  profilePhotos,\n  peerId,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && profilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && profilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={profilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      emojiStatusSticker,\n      profilePhotos,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ChatTranslatedMessages } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getSenderTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const mediaHash = containedMedia && getMessageMediaHash(containedMedia, 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n  const isRoundVideo = Boolean(message && getMessageRoundVideo(message));\n  const isSpoiler = Boolean(message && getMessageIsSpoiler(message));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useOldLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getSenderTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        noLineBreaks: isInComposer,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content, {});\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <>\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(mediaThumbnail, mediaBlobUrl, isRoundVideo, isProtected, isSpoiler)}\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      <MediaSpoiler thumbDataUri={srcUrl} isVisible={Boolean(isSpoiler)} width={width} height={height} />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pTWe_CYU\"};","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { preloadImage } from '../../../util/files';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport { useThrottleForHeavyAnimation } from '../../../hooks/useHeavyAnimation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 22, block: 38, opacity: 0.35, scale: 0.75,\n  },\n  {\n    inline: 32, block: 12, opacity: 0.3, scale: 1,\n  },\n  {\n    inline: 60, block: 22, opacity: 0.25, scale: 0.75,\n  },\n  {\n    inline: 75, block: 44, opacity: 0.25, scale: 1,\n  },\n  {\n    inline: 75, block: 2, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 95, block: 18, opacity: 0.2, scale: 1,\n  },\n  {\n    inline: 115, block: 38, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 125, block: 12, opacity: 0.1, scale: 0.75,\n  },\n];\n\nconst EMOJI_SIZE = REM;\nconst LOTTIE_TINT_OPACITY = 'ff';\nconst NON_LOTTIE_TINT_OPACITY = 'bb';\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const dpr = useDevicePixelRatio();\n\n  const lang = useOldLang();\n\n  const { customEmoji } = useCustomEmoji(emojiDocumentId);\n  const previewMediaHash = customEmoji ? getStickerMediaHash(customEmoji, 'preview') : undefined;\n  const previewUrl = useMedia(previewMediaHash);\n\n  const customColor = useDynamicColorListener(containerRef);\n\n  const preloadAfterHeavyAnimation = useThrottleForHeavyAnimation(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  useEffect(() => {\n    preloadAfterHeavyAnimation();\n  }, [preloadAfterHeavyAnimation]);\n\n  const updateCanvas = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage || !customColor) return;\n\n    const context = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n\n    context.clearRect(0, 0, width, height);\n\n    ICON_POSITIONS.forEach(({\n      inline, block, opacity, scale,\n    }) => {\n      const x = (lang.isRtl ? inline : width / dpr - inline) * dpr;\n      const y = block * dpr;\n\n      const emojiSize = EMOJI_SIZE * dpr;\n\n      context.save();\n      context.globalAlpha = opacity;\n      context.translate(x, y);\n      context.scale(scale, scale);\n      context.drawImage(emojiImage, -emojiSize / 2, -emojiSize / 2, emojiSize, emojiSize);\n      context.restore();\n    });\n\n    const tintColor = `${customColor}${customEmoji!.isLottie ? LOTTIE_TINT_OPACITY : NON_LOTTIE_TINT_OPACITY}`;\n\n    context.save();\n    context.fillStyle = tintColor;\n    context.globalCompositeOperation = 'source-atop';\n    context.fillRect(0, 0, width, height);\n    context.restore();\n  });\n\n  const updateCanvasAfterHeavyAnimation = useThrottleForHeavyAnimation(updateCanvas, [updateCanvas]);\n\n  useEffect(() => {\n    updateCanvasAfterHeavyAnimation();\n  }, [emojiImage, lang.isRtl, customColor, updateCanvasAfterHeavyAnimation]);\n\n  const updateCanvasSize = useThrottleForHeavyAnimation((parentWidth: number, parentHeight: number) => {\n    requestMutation(() => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      canvas.width = parentWidth * dpr;\n      canvas.height = parentHeight * dpr;\n\n      canvas.style.width = `${parentWidth}px`;\n      canvas.style.height = `${parentHeight}px`;\n\n      updateCanvas();\n    });\n  }, [dpr]);\n\n  const handleResize = useThrottleForHeavyAnimation((entry: ResizeObserverEntry) => {\n    const { width, height } = entry.contentRect;\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const { width, height } = container.getBoundingClientRect();\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={containerRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import { getGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiSponsoredMessage } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageStatefulContent,\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage | ApiSponsoredMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: OldLangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const global = getGlobal();\n  const statefulContent = getMessageStatefulContent(global, message);\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, statefulContent, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, statefulContent, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(lang(valueKey, [formattedDate, age], undefined, age))}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"sectionInfo\":\"IrqRJFxm\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUserFullInfo, ApiUsername,\n} from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { debounce } from '../../../util/schedulers';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    if (!chat) {\n      return;\n    }\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  if (!chat || chat.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      { hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            size=\"smaller\"\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" narrow ripple onClick={handleNotificationChange}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n    };\n  },\n)(ChatExtra));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId, true);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { getStickerHashById, isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\nimport ReactionStaticEmoji from './ReactionStaticEmoji';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = reaction.type === 'custom';\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && getStickerHashById(centerIconId);\n  const mediaHashEffect = effectId && getStickerHashById(effectId);\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon);\n  const mediaDataEffect = useMedia(mediaHashEffect);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransitionDeprecated(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          noVideoOnMobile\n          loopLimit={loopLimit}\n          observeIntersectionForPlaying={observeIntersection}\n          forceAlways\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n          forceAlways\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            onEnded={handleEnded}\n            forceAlways\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaHash = staticIconId ? `document${staticIconId}` : undefined;\n  const mediaData = useMedia(mediaHash);\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  const shouldApplySizeFix = reaction.type === 'emoji' && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && reaction.type === 'emoji' && reaction.emoticon === '❤';\n\n  if (reaction.type === 'custom') {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  groupStatetefulContent,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatetefulContent({ story: lastMessageStory }),\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              topics={topics}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { senderId, isOutgoing, forwardInfo } = lastMessage || {};\n    const actualSenderId = isSavedDialog ? forwardInfo?.fromId : senderId;\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = actualSenderId ? selectPeer(global, actualSenderId) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = topics\n      && Object.values(topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (topics && !hasUnmutedUnreadTopics);\n  }, [topics, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction, groupStatetefulContent } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatetefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { senderId, isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../global/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"group-call\":\"wUpRjGJ2\",\"groupCall\":\"wUpRjGJ2\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus, ApiUser,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getExpiredMessageDescription,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n  isExpiredMessage,\n} from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const oldLang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? getMessageMediaThumbDataUri(mediaContent) : undefined;\n  const mediaBlobUrl = useMedia(mediaHasPreview ? getMessageMediaHash(mediaContent, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{oldLang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isExpiredMessage(lastMessage)) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          {getExpiredMessageDescription(oldLang, lastMessage)}\n        </p>\n      );\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            oldLang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(oldLang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, oldLang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport generateUniqueId from '../../../util/generateUniqueId';\nimport { SVG_NAMESPACE } from '../../../util/svgController';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const svg = document.createElementNS(SVG_NAMESPACE, 'svg');\n  svg.setAttribute('class', styles.ghost);\n  svg.setAttribute('width', `${width}px`);\n  svg.setAttribute('height', `${height}px`);\n  svg.setAttribute('style', `left: ${x}px; top: ${y}px;`);\n  svg.setAttribute('viewBox', `0 0 ${width} ${height}`);\n\n  const defs = document.createElementNS(SVG_NAMESPACE, 'defs');\n  svg.appendChild(defs);\n\n  const filter = createFilter(Math.min(width, height), seed);\n  filter.setAttribute('id', filterId);\n  defs.appendChild(filter);\n\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n  g.setAttribute('filter', `url(#${filterId})`);\n  svg.appendChild(g);\n\n  const foreignObject = document.createElementNS(SVG_NAMESPACE, 'foreignObject');\n  foreignObject.setAttribute('class', styles.elementContainer);\n  foreignObject.setAttribute('width', `${width}px`);\n  foreignObject.setAttribute('height', `${height}px`);\n  g.appendChild(foreignObject);\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(smallestSide: number, baseSeed: number = 42) {\n  const filter = document.createElementNS(SVG_NAMESPACE, 'filter');\n  filter.setAttribute('x', '-150%');\n  filter.setAttribute('y', '-150%');\n  filter.setAttribute('width', '400%');\n  filter.setAttribute('height', '400%');\n  filter.setAttribute('color-interpolation-filters', 'sRGB');\n\n  const feTurbulence = document.createElementNS(SVG_NAMESPACE, 'feTurbulence');\n  feTurbulence.setAttribute('type', 'fractalNoise');\n  feTurbulence.setAttribute('baseFrequency', '0.5');\n  feTurbulence.setAttribute('numOctaves', '1');\n  feTurbulence.setAttribute('result', 'dustNoise');\n  feTurbulence.setAttribute('seed', baseSeed.toString());\n  filter.appendChild(feTurbulence);\n\n  const feComponentTransfer = document.createElementNS(SVG_NAMESPACE, 'feComponentTransfer');\n  feComponentTransfer.setAttribute('in', 'dustNoise');\n  feComponentTransfer.setAttribute('result', 'dustNoiseMask');\n  filter.appendChild(feComponentTransfer);\n\n  const feFuncA = document.createElementNS(SVG_NAMESPACE, 'feFuncA');\n  feFuncA.setAttribute('type', 'linear');\n  feFuncA.setAttribute('slope', '5');\n  feFuncA.setAttribute('intercept', '0');\n  feComponentTransfer.appendChild(feFuncA);\n\n  const feFuncAAnimate = document.createElementNS(SVG_NAMESPACE, 'animate');\n  feFuncAAnimate.setAttribute('attributeName', 'slope');\n  feFuncAAnimate.setAttribute('values', '5; 2; 1; 0');\n  feFuncAAnimate.setAttribute('dur', `${DURATION}ms`);\n  feFuncAAnimate.setAttribute('fill', 'freeze');\n  feFuncA.appendChild(feFuncAAnimate);\n\n  const feComposite = document.createElementNS(SVG_NAMESPACE, 'feComposite');\n  feComposite.setAttribute('in', 'SourceGraphic');\n  feComposite.setAttribute('in2', 'dustNoiseMask');\n  feComposite.setAttribute('operator', 'in');\n  feComposite.setAttribute('result', 'dustySource');\n  filter.appendChild(feComposite);\n\n  const feTurbulence2 = document.createElementNS(SVG_NAMESPACE, 'feTurbulence');\n  feTurbulence2.setAttribute('type', 'fractalNoise');\n  feTurbulence2.setAttribute('baseFrequency', '0.015');\n  feTurbulence2.setAttribute('numOctaves', '1');\n  feTurbulence2.setAttribute('result', 'displacementNoice1');\n  feTurbulence2.setAttribute('seed', (baseSeed + 1).toString());\n  filter.appendChild(feTurbulence2);\n\n  const feTurbulence3 = document.createElementNS(SVG_NAMESPACE, 'feTurbulence');\n  feTurbulence3.setAttribute('type', 'fractalNoise');\n  feTurbulence3.setAttribute('baseFrequency', '1');\n  feTurbulence3.setAttribute('numOctaves', '2');\n  feTurbulence3.setAttribute('result', 'displacementNoice2');\n  feTurbulence3.setAttribute('seed', (baseSeed + 2).toString());\n  filter.appendChild(feTurbulence3);\n\n  const feMerge = document.createElementNS(SVG_NAMESPACE, 'feMerge');\n  feMerge.setAttribute('result', 'combinedNoise');\n  filter.appendChild(feMerge);\n\n  const feMergeNode1 = document.createElementNS(SVG_NAMESPACE, 'feMergeNode');\n  feMergeNode1.setAttribute('in', 'displacementNoice1');\n  feMerge.appendChild(feMergeNode1);\n\n  const feMergeNode2 = document.createElementNS(SVG_NAMESPACE, 'feMergeNode');\n  feMergeNode2.setAttribute('in', 'displacementNoice2');\n  feMerge.appendChild(feMergeNode2);\n\n  const feDisplacementMap = document.createElementNS(SVG_NAMESPACE, 'feDisplacementMap');\n  feDisplacementMap.setAttribute('in', 'dustySource');\n  feDisplacementMap.setAttribute('in2', 'combinedNoise');\n  feDisplacementMap.setAttribute('scale', '0');\n\n  feDisplacementMap.setAttribute('xChannelSelector', 'R');\n  feDisplacementMap.setAttribute('yChannelSelector', 'G');\n  filter.appendChild(feDisplacementMap);\n\n  const feDisplacementMapAnimate = document.createElementNS(SVG_NAMESPACE, 'animate');\n  feDisplacementMapAnimate.setAttribute('attributeName', 'scale');\n  feDisplacementMapAnimate.setAttribute('values', `0; ${smallestSide * 3}`);\n  feDisplacementMapAnimate.setAttribute('dur', `${DURATION}ms`);\n  feDisplacementMapAnimate.setAttribute('fill', 'freeze');\n  feDisplacementMap.appendChild(feDisplacementMapAnimate);\n\n  return filter;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  getIsHeavyAnimating,\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {lang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import React, { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const anchorRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || photo.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, photo]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {fullMediaData && (\n        <img\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <i ref={downloadButtonRef} className=\"icon icon-download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect, useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getMessageMediaThumbDataUri,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const video = message.content.video!;\n\n  const { cancelMediaDownload, openOneTimeMediaModal } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback(() => {\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <i className=\"icon icon-download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div className=\"message-media-duration\">\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  clickArg,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const { cancelMediaDownload } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || video.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, video]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const previewRef = useMediaTransition<HTMLImageElement>((hasThumb || previewBlobUrl) && !isPlayerReady);\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i ref={playButtonRef} className=\"icon icon-large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n  isEditing?: boolean;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  onMediaClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n  isEditing,\n}) => {\n  const { openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, !hasCustomColor);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n    mediaSize,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    const { width, height } = calculateMediaDimensions({\n      media: webPage.photo,\n      isOwn: message.isOutgoing,\n      isInWebPage: true,\n      asForwarded,\n      noAvatars,\n      isMobile,\n    });\n    isSquarePhoto = (width === height || mediaSize === 'small') && mediaSize !== 'large';\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    !isEditing && inPreview && 'interactive',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {photo && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {isArticle && (\n          <div className=\"WebPage-text\">\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {!inPreview && video && (\n          <Video\n            video={video}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={handleMediaClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{lang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </div>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'lng_view_button_story';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'lng_view_button_boost';\n    case 'telegram_stickerset':\n      return 'lng_view_button_stickerset';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n} : {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport cycleRestrict from '../util/cycleRestrict';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\n\nconst RADIUS = 7;\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n  radius = RADIUS,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    offscreenRef.current = canvas.transferControlToOffscreen();\n\n    requestMediaWorker({\n      name: 'offscreen-canvas:blurThumb',\n      args: [offscreenRef.current, thumbData, radius],\n      transferables: [offscreenRef.current],\n    }, workerIndex);\n  }, [thumbData, isDisabled, radius, workerIndex]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean) : CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../global/types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { type RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n} : {\n  anchorRef: RefObject<HTMLDivElement>;\n  overlayRef: RefObject<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji, ApiReactionPaid } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiReactionPaid;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const handleClick = useLastCallback(() => {\n    if (reaction.type === 'paid') {\n      onSendPaidReaction?.();\n      return;\n    }\n\n    onToggleReaction(reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onShowPaidReactionModal?.();\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onShowPaidReactionModal, handleContextMenuHide, isContextMenuOpen]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && reaction.type !== 'paid' && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      ref={ref}\n      style={style}\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {reaction.type === 'paid' ? (\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.StarReaction}\n          size={REACTION_SIZE}\n          noLoop={false}\n        />\n      ) : (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          size={REACTION_SIZE}\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiReaction,\n  ApiReactionCount,\n  ApiReactionCustomEmoji,\n  ApiReactionPaid,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype RenderableReactions = (ApiAvailableReaction | ApiReactionCustomEmoji | ApiReactionPaid)[];\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  isWithPaidReaction?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  isWithPaidReaction,\n  onClose,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions: RenderableReactions = reactions?.map((reaction) => {\n      const isCustomReaction = reaction.type === 'custom';\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n         && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    const sortedReactions = sortReactions(filteredReactions, topReactions);\n    if (isWithPaidReaction) {\n      sortedReactions.unshift({ type: 'paid' });\n    }\n    return sortedReactions;\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions, isWithPaidReaction,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  onSendPaidReaction={onSendPaidReaction}\n                  onShowPaidReactionModal={onShowPaidReactionModal}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <i className=\"icon icon-down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu, undefined, undefined, undefined, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true, shouldAvoidNegativePosition: true }));\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuAnchor && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n  ApiChannelStatistics |\n  ApiGroupStatistics |\n  ApiPostStatistics |\n  ApiBoostStatistics |\n  ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const lang = useOldLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}<span className={styles.decimalPart}>.{decimalTonPart}</span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ ${integerUsdPart}<span className={styles.decimalUsdPart}>.{decimalUsdPart}</span>\n        </span>\n        <h3 className={styles.tableHeading}>{lang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n  const { balances, usdRate } = (statistics as ApiChannelMonetizationStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getSenderTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressieveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideos) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): StateProps => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element!.clientWidth!);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url': {\n            const isShiny = isActive && (mediaArea.type !== 'channelPost');\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","import type { ApiLimitType, GlobalState } from '../types';\n\nimport { DEFAULT_LIMITS } from '../../config';\nimport { selectIsCurrentUserPremium } from './users';\n\nexport function selectCurrentLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) {\n    return DEFAULT_LIMITS[limit][0];\n  }\n\n  const isPremium = selectIsCurrentUserPremium(global);\n  const { limits } = appConfig;\n\n  // When there are new limits when updating a layer, until we get a new configuration, we must use the default values\n  const value = limits[limit]?.[isPremium ? 1 : 0] ?? DEFAULT_LIMITS[limit][isPremium ? 1 : 0];\n  if (limit === 'dialogFilters') return value + 1; // Server does not count \"All\" as folder, but we need to\n  return value;\n}\n\nexport function selectPremiumLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) return DEFAULT_LIMITS[limit][1];\n\n  const { limits } = appConfig;\n\n  return limits[limit][1];\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useInterval(callback: NoneToVoidFunction, delay?: number, noFirst = false) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (delay === undefined) {\n      return undefined;\n    }\n\n    const id = setInterval(() => savedCallback(), delay);\n    if (!noFirst) savedCallback();\n\n    return () => clearInterval(id);\n  }, [delay, noFirst]);\n}\n\nexport default useInterval;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useOldLang from './useOldLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useOldLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import { useCallback, useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  }, [onStart, threshold]);\n\n  const cancel = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd, onClick]);\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { makeProgressiveLoader } from '../util/progressieveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { ElectronEvent } from '../../types/electron';\n\nimport { IS_IOS } from '../../util/windowEnvironment';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen(elRef: RefType, setIsPlayed: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS)) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const video = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      video!.controls = isEnabled;\n    };\n    const listenerEnter = () => { setIsFullscreen(true); };\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      setIsPlayed(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (video) {\n      video.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      video.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (video) {\n        video.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        video.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(video: HTMLVideoElement) {\n  if (video.requestFullscreen) {\n    video.requestFullscreen();\n  } else if (video.webkitRequestFullscreen) {\n    video.webkitRequestFullscreen();\n  } else if (video.webkitEnterFullscreen) {\n    video.webkitEnterFullscreen();\n  } else if (video.mozRequestFullScreen) {\n    video.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_AVAILABLE = 'update-available',\n  DEEPLINK = 'deeplink',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_TRAFFIC_LIGHT_POSITION = 'set-traffic-light-position',\n  SET_IS_AUTO_UPDATE_ENABLED = 'set-is-auto-update-enabled',\n  GET_IS_AUTO_UPDATE_ENABLED = 'get-is-auto-update-enabled',\n  SET_IS_TRAY_ICON_ENABLED = 'set-is-tray-icon-enabled',\n  GET_IS_TRAY_ICON_ENABLED = 'get-is-tray-icon-enabled',\n  RESTORE_LOCAL_STORAGE = 'restore-local-storage',\n}\n\nexport type TrafficLightPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setTrafficLightPosition: (position: TrafficLightPosition) => Promise<void>;\n  setIsAutoUpdateEnabled: (value: boolean) => Promise<void>;\n  getIsAutoUpdateEnabled: () => Promise<boolean>;\n  setIsTrayIconEnabled: (value: boolean) => Promise<void>;\n  getIsTrayIconEnabled: () => Promise<boolean>;\n  restoreLocalStorage: () => Promise<void>;\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import EMOJI_REGEX from '../../lib/twemojiRegex';\nimport fixNonStandardEmoji from './fixNonStandardEmoji';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 code points per one emoji.\n\nexport default function parseEmojiOnlyString(text: string): number | false {\n  const standardizedText = fixNonStandardEmoji(text);\n  const lines = standardizedText.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const totalCount = countIfEmojiOnly(textWithoutNewlines);\n  if (!totalCount || totalCount > DETECT_UP_TO) {\n    return false;\n  }\n\n  // Calculate max emoji count per column or line. Used in UI to determine the size of the emoji.\n  let max = lines.length;\n  for (const line of lines) {\n    const count = countIfEmojiOnly(line);\n    if (count === false) {\n      return false;\n    }\n    if (count > max) {\n      max = count;\n    }\n  }\n\n  return max;\n}\n\nfunction countIfEmojiOnly(line: string): false | number {\n  const iterator = line.matchAll(EMOJI_REGEX);\n  let count = 0;\n  let currentIndex = 0;\n\n  for (const match of iterator) {\n    if (match.index !== currentIndex) {\n      return false;\n    }\n\n    count++;\n    currentIndex = match.index + match[0].length;\n  }\n\n  if (currentIndex !== line.length) {\n    return false;\n  }\n\n  return count;\n}\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"paid\":\"N3lcrsh8\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\",\"paidCounter\":\"CW4UO1n3\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","_ref","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useOldLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","_ref2","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransitionDeprecated","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","style","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMediaDownload","downloadMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","media","isVoice","isSeeking","useRef","isRtl","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMediaHash","coverBlobUrl","useMedia","ApiMediaFormat","BlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","useLastCallback","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","arguments","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","i","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","current","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","originMessage","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","push","contentClassName","renderWithTitle","dir","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","ariaLabel","backgroundImage","nonInteractive","Icon","name","AnimatedIcon","tgsUrl","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","draggable","viewBox","rx","ry","stroke","renderVoice","DEFAULT_LIMIT","limit","badgeText","renderingBadgeText","styles","root","peer","Avatar","avatar","badge","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","add","body","appendChild","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","href","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","includes","pastedText","getData","substring","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","text","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","Set","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","setTimeout","pause","props","AttachmentModal","useModuleLoader","Bundles","Extra","threadId","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","hasReplaceableMedia","editingMessage","isAttachMenuOpen","openAttachMenu","closeAttachMenu","useFlag","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","isOpen","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","selectCurrentMessageList","selectChatMessage","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","renderKeyboardButtonText","noCompact","j","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","shouldAnimate","selectCanAnimateInterface","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","selectSender","selectForwardedSender","selectPeer","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","currentUserId","onClear","resetDraftReplyInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","oldLang","useLang","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShown","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","querySelector","renderingSender","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","attachmentSettings","selectTheme","webPagePreview","getHtml","isEditing","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","updateAttachmentSettings","formattedTextWithLinkRef","isInvertedMedia","isSmallerMedia","webPageMediaSize","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","entity","url","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","hasMediaSizeOptions","hasLargeMedia","renderingWebPage","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","onContainerClick","MainButtonState","_ref5","storyId","chatBot","isSystemBot","selectBot","isChatWithBot","isChatWithUser","isUserId","chatBotFullInfo","selectUserFullInfo","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","scheduledIds","selectScheduledIds","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","user","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","isContactRequirePremium","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePreviousDeprecated","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","useDraft","resetComposer","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","EDITABLE_INPUT_CSS_SELECTOR","shouldSetNoWebPage","has","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSend","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","webPageUrl","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","_ref4","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","sticker","shouldPreserveInput","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","emoticon","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","isQuiz","shouldBeAnonymous","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","ComposerEmbeddedMessage","WebPagePreview","BotMenuButton","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","AttachMenu","BotKeyboardMenu","CustomEmojiTooltip","key","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","allowDisabledClick","noFastClick","MessageEffect","shouldPlay","onStop","CustomSendMenu","canSchedule","onSendSchedule","onSendWhenOnline","onRemoveEffect","withEffects","hasCurrentEffect","isSavedDialog","isPrivateChat","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","getDocumentMediaHash","hasPreview","getDocumentHasPreview","thumbDataUri","getMediaThumbUri","localBlobUrl","previewBlobUrl","previewData","withMediaViewer","innerMediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","checked","label","onCheck","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","src","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","selectTopic","messagesCount","selectThreadMessagesCount","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadMoreProfilePhotos","isTopic","isMin","isRestricted","isPreload","handleAvatarViewerOpen","hasMedia","isAvatarView","mediaIndex","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","DotAnimation","TypingStatus","Transition","shouldRestoreHeight","activeKey","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","isProtected","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isVisible","isGif","Keys","DEFAULT_TEXT","description","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","forceShowSelf","isSynced","userStatus","selectUserStatus","isSelf","customPeer","noFake","noVerified","adminMember","iconElement","rightElement","loadFullUser","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getPhotoMediaHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","thumbnail","dataUri","blurredThumbCanvasRef","currentTime","specialIcon","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","emojiStatus","emojiStatusSticker","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaHash","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","totalPhotosLength","count","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","_","renderPhotoTabs","personalPhoto","fallbackPhoto","renderPhoto","canCopyTitle","isSystemBotChat","isReadDateRestrictedByMe","membersCount","renderStatus","ProfilePhoto","iconEmojiId","observeIntersectionForPlaying","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","NBSP","EmbeddedMessage","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","containedMedia","replyMedia","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","blobUrl","getPictogramDimensions","srcUrl","renderPictogram","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","noLineBreaks","emojiSize","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isChatGroup","isReplyToQuote","renderSender","freezeWhenClosed","ICON_POSITIONS","inline","block","opacity","EMOJI_SIZE","containerRef","emojiImage","setEmojiImage","dpr","useDevicePixelRatio","customEmoji","useCustomEmoji","previewMediaHash","getStickerMediaHash","previewUrl","customColor","useDynamicColorListener","preloadAfterHeavyAnimation","useThrottleForHeavyAnimation","preloadImage","then","updateCanvas","clearRect","save","translate","drawImage","restore","tintColor","isLottie","globalCompositeOperation","fillRect","updateCanvasAfterHeavyAnimation","updateCanvasSize","parentWidth","parentHeight","handleResize","entry","contentRect","useResizeObserver","container","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","renderMessageText","highlight","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","statefulContent","getMessageStatefulContent","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shift","shiftedRanges","startMinute","endMinute","sort","a","b","last","DAYS","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","forceUpdate","useForceUpdate","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","ListItem","iconClassName","multiline","isStatic","narrow","withColorTransition","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","birthday","isInSettings","openGiftModal","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","buildCollectionByKey","split","digit","effectSticker","randomEffect","random","hash","effectHash","column","valueKey","canGiftPremium","isPremium","handleOpenGiftModal","forUserId","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","index","StickerView","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","runDebounced","debounce","chatOrUserId","countryList","phoneCodes","phoneCodeList","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","userFullInfo","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","hasMainMiniApp","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","requestMainWebView","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","areNotificationsEnabled","setAreNotificationsEnabled","prevPeerId","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","newAreNotificationsEnabled","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","handleOpenApp","extractCurrentThemeParams","shouldMarkBotTrusted","appTermsInfo","terms","withNodes","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","UserBirthday","Switcher","inactive","BusinessHours","usernameList","otherUsernames","usernameLinks","s","particleSize","onEnded","stickerHash","getStickerHashById","previewMediaData","paths","generateRandomDropPath","buildStyle","path","withSharedAnimation","onAnimationEnd","ICON_SIZE","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","activeReactions","genericEffects","effectSize","shouldPause","stopActiveReaction","isCustom","availableReaction","r","centerIconId","centerIcon","assignedEffectId","aroundAnimation","assignedId","available","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","ReactionStaticEmoji","noPlay","noVideoOnMobile","AnimatedSticker","animatedIcon","roundToNearestEven","play","onLoad","CustomEmojiEffect","withIconHeart","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","blankUrl","ChatFolderModal","MuteChatModal","lastMessageId","selectChatLastMessageId","lastMessage","selectChatLastMessage","senderId","isOutgoing","actualSenderId","fromId","replyToMessageId","getMessageReplyInfo","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","topicsInfo","selectTopicsInfo","lastMessageStory","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","listedTopicIds","topics","topicsById","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","useEnsureMessage","renderSubtitle","useChatListEntry","statefulMediaContent","groupStatetefulContent","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","handleReport","contextActions","useChatContextActions","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","subscriptionUntil","StoryViewerOrigin","ChatList","StarIcon","ChatBadge","shouldShowOnlyMostImportant","forceHidden","ChatCallStatus","LastMessageMeta","DeleteChatModal","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","elements","renderContent","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","isMinimized","handler","actionExpand","actionHide","isHidden","compact","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","fluid","pill","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","isArchiveInList","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","rect","currentTarget","clientY","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","scrollHeight","deltaY","passive","useTopOverscroll","InfiniteScroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onLoadMore","onDragLeave","UnconfirmedSession","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","Loading","EmptyFolder","canManageTopics","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","selectTopics","canDelete","selectCanDeleteTopic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","beginHeavyAnimation","waitForTransitionEnd","transform","onTransitionEnd","GroupChatInfo","HeaderActions","canExpandActions","isForForum","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","shouldTryLoadingStory","useEnsureStory","mediaContent","mediaHasPreview","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","isExpiredMessage","getExpiredMessageDescription","renderActionMessageText","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","ANIMATION_END_DELAY","ChatForumLastMessage","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","scrollX","scrollY","innerWidth","innerHeight","seed","filterId","SNAP_EFFECT_ID","generateUniqueId","svg","createElementNS","SVG_NAMESPACE","ghost","defs","smallestSide","baseSeed","feTurbulence","feComponentTransfer","feFuncA","feFuncAAnimate","feComposite","feTurbulence2","feTurbulence3","feMerge","feMergeNode1","feMergeNode2","feDisplacementMap","feDisplacementMapAnimate","createFilter","g","foreignObject","elementContainer","computedStyle","getComputedStyle","clone","getPropertyValue","snapContainer","once","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","screen","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","isTouchScreen","Text","iconSvg","mediaDataWithReplacedColors","doc","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","AttachBotIcon","shortName","isDisclaimerNeeded","withPortal","CustomSend","isQuick","isGeneric","svgRef","isHovered","markHovered","unmarkHovered","relatedTarget","toTarget","baseVal","useEffectOnce","onDrop","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","containerSelector","onDragOver","handleDragOver","clearTimeout","DropTarget","AbsoluteVideo","constructor","videoUrl","options","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","colorFilter","useColorFilter","playersById","Map","clearPlayers","player","delete","synchronizeElements","playerIdsToClear","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","set","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","getIsHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","onKeyDown","isComposing","altKey","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","mimeType","quick","shouldSendAsFile","img","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","replaceWithTeact","STARS_ICON_PLACEHOLDER","MAX_NESTING_PARENTS","commonAncestorContainer","parentNode","iterations","parentElement","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","isMirrored","anchorRef","canLoad","startPlaying","stopPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","useOverlayPosition","overlayRef","isForMessageEffect","effectClassName","messageText","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","isInWebPage","clickArg","isPaidPreview","mediaType","withBlurredBackground","useBlurredMediaThumbRef","useMediaTransition","showSpoiler","wasLoadDisabled","spinnerRef","useShowTransition","noMountTransition","withShouldRender","downloadButtonRef","shouldRenderDownloadButton","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","componentClassName","MIN_MEDIA_HEIGHT","dimensionsStyle","withAnimation","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","PI","stopPrevious","playerRef","circleRef","getVideoMediaHash","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","strokeDashOffset","capturePlaying","togglePlaying","stopCurrentAudio","handleTimeUpdate","isPriority","onTimeUpdate","cx","cy","canAutoPlay","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","hasThumb","isPreviewPreloaded","canLoadPreview","previewRef","isInline","isUnsupported","useUnsupportedMedia","playButtonRef","setPlayProgress","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","handleClickOnSpinner","onAudioPlay","onCancelMediaTransfer","openTelegramLink","stickersRef","handleMediaClick","handleContainerClick","handleQuickButtonClick","hasCustomColor","isWithTextColor","documents","mediaSize","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","BaseStory","Photo","Video","Audio","Document","isEmoji","isRectangular","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","requestMediaWorker","MAX_WORKERS","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isPhoto","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","RADIUS","lastWorkerIndex","thumbData","workerIndex","cycleRestrict","offscreenRef","transferControlToOffscreen","transferables","useOffscreenCanvasBlur","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","OFFSET_X","anchorRect","elementRect","anchorCenterY","anchorBottomY","messagesContainer","REACTION_SIZE","chosen","noAppearAnimation","isLocked","onSendPaidReaction","onShowPaidReactionModal","StarReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","cn","createClassNameBuilder","defaultTagReactions","enabledReactions","currentReactions","reactionsLimit","isForEffects","isWithPaidReaction","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","sortedReactions","sortReactions","unshift","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","hintText","parts","isPrimary","ReactionSelectorReaction","ReactionSelectorCustomReaction","submitText","initialValue","setText","handleTextChange","handleSubmit","isSlim","InputText","teactExperimentControlled","tag","isChosen","chosenClassName","withCount","withContextMenu","onRemove","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","handleRemoveClick","handleRenameTag","newTitle","shouldAvoidNegativePosition","own","tagText","tail","tailFill","PromptDialog","selectCurrentChat","deleteChatMember","handleDeleteChatMember","textParts","useAsyncRendering","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","statistics","isToncoin","renderBalanceCell","balance","usdRate","integerTonPart","decimalTonPart","toFixed","integerUsdPart","decimalUsdPart","period","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","part","percentage","change","isChangeNegative","renderOverviewItemValue","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","archived","isClosing","hidden","closing","useHorizontalScroll","StoryRibbonButton","byPeerId","isRibbonShown","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","unloadVideo","preloadProgressive","preloadHashes","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideos","getPreloadMediaHashes","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","ownProps","restrictedEmoji","selectRestrictedEmoji","temperatureC","backgroundColor","convertToRGBA","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","setExtraStyles","withTranslucentThumb","navigator","formatTemperature","STORY_ASPECT_RATIO","prepareStyle","mediaWidth","rotation","coordinates","pixelRadius","pixelWidth","pixelHeight","isStoryPlaying","closeStoryViewer","openUrl","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","channelId","handleMediaAreaClick","MediaAreaSuggestedReaction","MediaAreaWeather","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","phoneCall","adminId","selectCanInviteToActiveGroupCall","appConfig","DEFAULT_LIMITS","limits","selectPremiumLimit","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","noFirst","savedCallback","setInterval","clearInterval","resolver","deps","msOrSchedulerFn","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","DEFAULT_THRESHOLD","threshold","isLongPressActive","isPressed","timerId","canProcessEvent","touches","cancel","useUnmountCleanup","onMouseUp","onTouchStart","onTouchEnd","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","noLoad","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","mediaSource","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","setIsPlayed","isFullscreen","setIsFullscreen","listener","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","fullscreenProp","checkIfFullscreen","removeElectronListener","electron","on","ElectronEvent","FULLSCREEN_CHANGE","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","ConnectorClass","channel","throttleWithTickEnd","payloads","pendingPayloads","pendingTransferables","postMessage","_len","_key","postMessageOnTickEnd","request","messageData","requestStates","requestStatesByCallback","restMessageData","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","postMessagesOnTickEnd","createConnector","worker","connector","handleMessage","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","click","DETECT_UP_TO","MAX_LENGTH","lines","fixNonStandardEmoji","textWithoutNewlines","countIfEmojiOnly","line","iterator","matchAll","EMOJI_REGEX","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","messageEl","firstChild","LUMA_THRESHOLD","image","ratio","outputType","Image","onload","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","averageColor","getAverageColor","fillColor","getColorLuma","res","ctx2D","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","isElementInViewport","windowHeight","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","Worker","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","B","Bold","STRONG","I","Italic","EM","INS","Underline","U","S","Strike","STRIKE","DEL","CODE","Code","PRE","Pre","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","callApi","fullSize","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange"],"sourceRoot":""}