{"version":3,"file":"3014.1f4680854581100bd73a.js","mappings":"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yBACxCC,gBAAiBl0C,GAAck0C,gBAC/Bp4B,mBACAG,qBACA60B,0BACAqD,eAAgBx9C,EAAUw9C,iBAtLZr1D,CAvmEwBs1D,EAC1CpsD,OACAipD,gBACAoD,gBACA5E,oBACA0B,yBACA1iC,UACA5E,WACAm2B,iBACA//C,SACA2tB,YACAinB,WACAt2B,sBACAoZ,mBACA6U,SACAvtC,QACAs8B,gBACAi0B,gBACAV,2BACA3H,wBACA4H,yBACAzB,iBACAjyC,kBACAg2C,aACA4B,iBACA3B,sBACAh0B,sBACA+1B,wBACAY,4BACAjO,gBACAwK,cACAC,oBACAvJ,0BACA0K,aACAC,iBACA1D,wBACAuD,0BACA4C,oBACA9C,uBACAM,oBACAE,uBACA3iD,mBACAC,iBACA++C,eACA+E,gBACAjB,wBACAxE,yBACAC,4BACAI,qBACAC,iBACAmE,gBACAE,cACAE,sBACAE,eACAnE,cACAD,YACAY,gBACAV,kBACAE,uBACAkE,iBACAjT,cACAoT,sBACAhI,sBACAniC,SACAqmC,YACApB,+BACA0G,4BACAC,mBACA3+C,WACArX,aACAuyD,sBACAC,gBACAuC,iBACAE,yBACA3T,0BACAuP,qBACAuE,eACAD,uBACAG,sBACAC,gBACArE,uBACA1E,kBACAH,aACAzsB,2BACAjF,qBACA+2B,UACAE,mBACAP,uBACAC,iBACAC,oBACAM,oBACAV,mBACAqE,qCACAtgB,gBACAkd,2BACAsD,mBACAp4B,mBACAG,qBACA60B,0BACAqD,kBACAM,cACAC,WACAC,UACAC,iBAEA,MAAM,YACJh2C,GAAW,WACXi2C,GAAU,WACVC,GAAU,cACVC,GAAa,eACbC,GAAc,kBACdC,GAAiB,mBACjBC,GAAkB,qBAClBC,GAAoB,WACpBC,GAAU,eACVC,GAAc,oBACdC,GAAmB,WACnBC,GAAU,uBACVC,GAAsB,cACtBC,GAAa,qBACbC,GAAoB,iBACpBxd,GAAgB,oCAChByd,GAAmC,wBACnCC,GAAuB,cACvBC,GAAa,oBACbC,GAAmB,kBACnBC,GAAiB,YACjBC,GAAW,yBACX1V,GAAwB,kBACxB2V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eACAw3G,oBACArxG,YAhPcruD,CA7+CJ24B,EACdxtB,UACAisB,+BACA/M,gCACAC,gCACAuK,QACApH,YACAhI,aACAmT,iBACAF,aACAI,YACAtS,kBACA6Q,cACAc,iBACAmU,YACAlU,iBACAC,0BACAC,yBACAs1F,kBACAwyC,mBACAlpI,gBACApN,SACA/D,mBACAG,UACAD,iBACAG,gBACAo1I,aACAG,eACAM,mBACAC,gBACAG,sBACAE,6BACAC,oBACAE,cACAD,kBACAE,eACAzoH,kBACAslC,kBACAukF,qBACAyC,qBACA7mF,eACA16C,mBACA49H,aACAE,kBACAK,gBACAC,sBACAJ,oBACAK,wBACAJ,uBACAh2G,gBACA3qC,kBACA+J,iBACAT,uBACA0sC,aACA8oG,WACAvc,YACA2e,aACAhuD,iBACAmuD,uBACAe,sBACA/uI,iBACA8lF,kBACAtqE,cACAw0H,mBACA9wI,YACAovI,mBACAjsG,sBACAguG,mBACAtc,2BACA9qH,mBACAinI,gBACA7tI,YACArI,iBACAI,oBACAE,oBACA61I,sBACA78C,yBACAgsC,qBACAl9H,qBACAtC,wBACA+rI,qBACA4C,gBACAD,gBACAryC,oBACA2yC,0BACA2B,4BACA9B,gCACAE,oCACA8B,uBACAhF,gBACApP,eACA70H,yBACA6rF,wBACAy7C,gBACA+B,QACAzB,sBACAC,kBACA/tG,UACAwb,QACAyyF,gBACAzlF,yBACA1xB,eACAw3G,oBACArhJ,oBACAowC,kBACAzxB,mBACAwiI,iBACAnxG,WACAl+B,gCAEA,MAAM,uBACJ8xH,GAAsB,qBACtB98F,GAAoB,4BACpB07G,GAA2B,oBAC3BC,GAAmB,+BACnBC,GAA8B,uBAC9BC,GAAsB,sBACtBrwI,GAAqB,iBACrBme,GAAgB,iBAChBpe,KACE5vB,EAAAA,EAAAA,MAEE2f,IAAM9S,EAAAA,EAAAA,MACNszJ,IAAkBtzJ,EAAAA,EAAAA,MAClBqxI,IAAmBrxI,EAAAA,EAAAA,MAEnBiU,IAAU5gB,EAAAA,EAAAA,KACVD,IAAO0P,EAAAA,EAAAA,MAENo9G,GAAuB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","sources":["webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/components/common/SensitiveContentConfirmModal.tsx","webpack://telegram-t/./src/components/common/SensitiveContentConfirmModal.module.scss?c6aa","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/middle/helpers/groupMessages.ts","webpack://telegram-t/./src/components/middle/ContactGreeting.tsx","webpack://telegram-t/./src/components/middle/ContactGreeting.module.scss?8a0f","webpack://telegram-t/./src/components/middle/MessageListAccountInfo.module.scss?912e","webpack://telegram-t/./src/components/middle/MessageListAccountInfo.tsx","webpack://telegram-t/./src/components/middle/hooks/useMessageObservers.ts","webpack://telegram-t/./src/components/middle/message/SenderGroupContainer.module.scss?0f2f","webpack://telegram-t/./src/components/middle/message/SenderGroupContainer.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessage.tsx","webpack://telegram-t/./src/components/middle/MessageListContent.tsx","webpack://telegram-t/./src/components/middle/hooks/useScrollHooks.ts","webpack://telegram-t/./src/components/middle/NoMessages.tsx","webpack://telegram-t/./src/components/middle/RequirementToContactMessage.module.scss?677e","webpack://telegram-t/./src/components/middle/RequirementToContactMessage.tsx","webpack://telegram-t/./src/components/middle/MessageList.tsx","webpack://telegram-t/./src/hooks/useNativeCopySelectedMessages.ts","webpack://telegram-t/./src/components/middle/hooks/useStickyDates.ts","webpack://telegram-t/./src/components/middle/hooks/useContainerHeight.ts","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/ChatTags.module.scss?bf8a","webpack://telegram-t/./src/components/left/main/ChatTags.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/usePaidMessageConfirmation.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useLoadLinkPreview.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ToDoListModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.module.scss?90e3","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/media/useMessageMediaHash.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/styles/_patternBackground.module.scss?c0b7","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/animations/useVtn.ts","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.tsx","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.module.scss?1d52","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/hooks/useHeaderPane.tsx","webpack://telegram-t/./src/components/middle/message/MessageAppendix.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/FrozenAccountNotification.tsx","webpack://telegram-t/./src/components/left/main/FrozenAccountNotification.module.scss?c59a","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/hooks/schedulers/useIntervalForceUpdate.ts","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/common/helpers/preloadDocumentMedia.ts","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/useScrollNotch.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/util/animations/waitTransitionEnd.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/right/statistics/helpers/isGraph.ts","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/util/dragNDropHandlers.ts","webpack://telegram-t/./src/hooks/useConnectionStatus.ts","webpack://telegram-t/./src/hooks/window/useBrowserOnline.ts","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/common/profile/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/profile/ProfilePinnedGifts.module.scss?70d3","webpack://telegram-t/./src/components/common/profile/ProfilePinnedGifts.tsx","webpack://telegram-t/./src/components/common/profile/ProfileInfo.module.scss?af06","webpack://telegram-t/./src/components/common/profile/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenuContainer.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/components/middle/message/helpers/getSingularPaidMedia.ts","webpack://telegram-t/./src/components/middle/message/helpers/calculateAlbumLayout.ts","webpack://telegram-t/./src/util/languageDetection.ts","webpack://telegram-t/./src/components/middle/message/hooks/useDetectChatLanguage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOuterHandlers.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStory.tsx","webpack://telegram-t/./src/components/common/TopicChip.tsx","webpack://telegram-t/./src/components/common/TopicChip.module.scss?5208","webpack://telegram-t/./src/components/middle/message/hocs/withSelectControl.tsx","webpack://telegram-t/./src/components/middle/message/Album.tsx","webpack://telegram-t/./src/components/common/hooks/useAnimatedEmoji.ts","webpack://telegram-t/./src/components/middle/message/AnimatedCustomEmoji.tsx","webpack://telegram-t/./src/components/middle/message/AnimatedEmoji.tsx","webpack://telegram-t/./src/components/middle/message/CommentButton.tsx","webpack://telegram-t/./src/components/middle/message/Contact.module.scss?fec1","webpack://telegram-t/./src/components/middle/message/Contact.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/FactCheck.module.scss?3842","webpack://telegram-t/./src/components/middle/message/FactCheck.tsx","webpack://telegram-t/./src/components/middle/message/Game.tsx","webpack://telegram-t/./src/components/middle/message/Giveaway.module.scss?9b0c","webpack://telegram-t/./src/components/middle/message/Giveaway.tsx","webpack://telegram-t/./src/components/middle/message/InlineButtons.tsx","webpack://telegram-t/./src/components/middle/message/Invoice.tsx","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.module.scss?19f6","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.tsx","webpack://telegram-t/./src/components/middle/message/Location.tsx","webpack://telegram-t/./src/components/middle/message/MessageMeta.tsx","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.module.scss?15a3","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.tsx","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.module.scss?e3d6","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.tsx","webpack://telegram-t/./src/components/middle/message/PollOption.tsx","webpack://telegram-t/./src/components/middle/message/Poll.tsx","webpack://telegram-t/./src/components/middle/message/Sticker.module.scss?30d0","webpack://telegram-t/./src/components/middle/message/Sticker.tsx","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/Story.tsx","webpack://telegram-t/./src/components/middle/message/StoryMention.tsx","webpack://telegram-t/./src/components/middle/message/TodoList.tsx","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.module.scss?8703","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/Message.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useInnerHandlers.ts","webpack://telegram-t/./src/hooks/useTextLanguage.ts","webpack://telegram-t/./src/components/middle/message/helpers/buildContentClassName.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/progressiveLoader.ts","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): Complete<StateProps> => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: ElementRef<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        const emoji = IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1];\n        if (emoji) {\n          loadCustomEmojiForEmoji({\n            emoji,\n          });\n        }\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\nexport type ApiUpdate = { type: string } & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: AnyToVoidFunction;\n  reject: AnyToVoidFunction;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise = new Promise<any>((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import { type ElementRef, useEffect, useRef, useSignal } from '@teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport stopEvent from '../../util/stopEvent';\nimport useLastCallback from '../useLastCallback';\n\ntype State = 'overscroll' | 'animating' | 'normal';\n\ntype ActiveScrollContext = {\n  lastDeltas: number[];\n  lastAverageDelta: number;\n  isStartedAtTop: boolean;\n  resetStartTopAt?: number;\n  timeout: number | undefined;\n};\n\nconst LAST_DELTA_COUNT = 7;\nconst ACTIVE_SCROLL_RESET_TIMEOUT = 100;\nconst NEW_INPUT_DELTA_THRESHOLD = 7;\nconst OVERSCROLL_CONTAINER_CLASS = 'no-overscroll';\nconst NO_TOUCH_CONTAINER_CLASS = 'no-touch';\nconst TRANSITION_DURATION = 350;\nconst DRAG_TRIGGER_DISTANCE = 75;\n\nconst initialActiveScrollContext: ActiveScrollContext = {\n  lastDeltas: new Array(LAST_DELTA_COUNT).fill(0),\n  lastAverageDelta: 0,\n  isStartedAtTop: false,\n  resetStartTopAt: undefined,\n  timeout: undefined,\n};\n\nexport default function useTopOverscroll({\n  containerRef,\n  isOverscrolled,\n  isDisabled,\n  onOverscroll,\n  onReset,\n}: {\n  containerRef: ElementRef<HTMLDivElement>;\n  isOverscrolled?: boolean;\n  onOverscroll?: AnyToVoidFunction;\n  onReset?: AnyToVoidFunction;\n  isDisabled?: boolean;\n},\n) {\n  const [getState, setState] = useSignal<State>('normal');\n  const activeScrollRef = useRef<ActiveScrollContext>({ ...initialActiveScrollContext });\n  const transitionTimeoutRef = useRef<number | undefined>();\n  const touchStartYRef = useRef<number | undefined>();\n\n  const triggerOverscroll = useLastCallback(() => {\n    clearTimeout(transitionTimeoutRef.current);\n    setState('overscroll');\n    onOverscroll?.();\n  });\n\n  const triggerReset = useLastCallback(() => {\n    setState('animating');\n    transitionTimeoutRef.current = window.setTimeout(() => {\n      setState('normal');\n    }, TRANSITION_DURATION);\n    onReset?.();\n  });\n\n  const scheduleResetActiveScroll = useLastCallback((timeout: number) => {\n    clearTimeout(activeScrollRef.current.timeout);\n    activeScrollRef.current.timeout = window.setTimeout(() => {\n      activeScrollRef.current = { ...initialActiveScrollContext };\n    }, timeout);\n  });\n\n  const handleWheel = useLastCallback((e: WheelEvent) => {\n    const container = containerRef.current;\n    if (!container || e.defaultPrevented) {\n      return;\n    }\n\n    const { deltaY } = e;\n    const { scrollTop } = container;\n    const state = getState();\n\n    const activeScroll = activeScrollRef.current;\n    const lastAverageDelta = activeScroll.lastAverageDelta;\n\n    const isStarting = activeScroll.lastDeltas.at(-1) === 0\n      || (activeScroll.resetStartTopAt && Date.now() >= activeScroll.resetStartTopAt);\n    if (scrollTop === 0 && isStarting) {\n      activeScroll.isStartedAtTop = true;\n      activeScroll.resetStartTopAt = undefined;\n    }\n\n    const lastDeltas = activeScrollRef.current.lastDeltas.slice(); // Copy\n    lastDeltas.push(deltaY);\n    if (lastDeltas.length > LAST_DELTA_COUNT) {\n      lastDeltas.shift();\n    }\n    activeScrollRef.current.lastDeltas = lastDeltas;\n    const currentAverageDelta = lastDeltas.reduce((a, b) => a + b, 0) / lastDeltas.length;\n    activeScrollRef.current.lastAverageDelta = currentAverageDelta;\n\n    const isNewInput = Math.abs(currentAverageDelta) - Math.abs(lastAverageDelta) > NEW_INPUT_DELTA_THRESHOLD;\n\n    scheduleResetActiveScroll(ACTIVE_SCROLL_RESET_TIMEOUT);\n\n    // If we're at the top and scrolling up\n    if (scrollTop === 0 && deltaY < 0 && state !== 'overscroll') {\n      if (!activeScroll.resetStartTopAt) {\n        // Schedule delta reset, so we would respond to new input with `isStartedAtTop` flag set\n        activeScroll.resetStartTopAt = Date.now() + ACTIVE_SCROLL_RESET_TIMEOUT;\n      }\n\n      // Only trigger overscroll on new input, ignore momentum events\n      if (isNewInput && activeScroll.isStartedAtTop) {\n        triggerOverscroll();\n      }\n      return;\n    }\n\n    // Ignore scroll events during collapse animation\n    if (state === 'animating' && deltaY > 0) {\n      stopEvent(e);\n      return;\n    }\n\n    // If we're overscrolled, any down wheel event should reset\n    if (state === 'overscroll' && deltaY > 0) {\n      triggerReset();\n      stopEvent(e);\n      return;\n    }\n  });\n\n  const handleTouchStart = useLastCallback((e: TouchEvent) => {\n    const container = containerRef.current;\n    if (!container || e.touches.length !== 1) return;\n\n    const { scrollTop } = container;\n    const state = getState();\n\n    // Register touch start position when at top or in overscroll state\n    if (scrollTop === 0 || state === 'overscroll') {\n      touchStartYRef.current = e.touches[0].clientY;\n    }\n  });\n\n  const handleTouchMove = useLastCallback((e: TouchEvent) => {\n    const container = containerRef.current;\n    const startY = touchStartYRef.current;\n    if (!container || startY === undefined || e.touches.length !== 1) return;\n\n    const { scrollTop } = container;\n    const state = getState();\n    const currentY = e.touches[0].clientY;\n    const deltaY = currentY - startY;\n\n    if (state === 'animating') {\n      return;\n    }\n\n    // If we're at the top and dragging down by more than trigger distance\n    if (scrollTop === 0 && deltaY > DRAG_TRIGGER_DISTANCE && state !== 'overscroll') {\n      triggerOverscroll();\n      touchStartYRef.current = undefined; // Reset to prevent multiple triggers\n      return;\n    }\n\n    // If we're overscrolled and dragging up by more than trigger distance, reset\n    if (state === 'overscroll' && deltaY < -DRAG_TRIGGER_DISTANCE) {\n      triggerReset();\n      touchStartYRef.current = undefined; // Reset to prevent multiple triggers\n      return;\n    }\n  });\n\n  const handleTouchEnd = useLastCallback(() => {\n    touchStartYRef.current = undefined;\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (isDisabled || !container) return;\n    requestMutation(() => {\n      container.classList.add(OVERSCROLL_CONTAINER_CLASS);\n    });\n\n    return () => {\n      requestMutation(() => {\n        container.classList.remove(OVERSCROLL_CONTAINER_CLASS);\n      });\n    };\n  }, [containerRef, isDisabled]);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (isDisabled || !container) return;\n    requestMutation(() => {\n      container.classList.toggle(NO_TOUCH_CONTAINER_CLASS, getState() !== 'normal');\n    });\n\n    return () => {\n      requestMutation(() => {\n        container.classList.remove(NO_TOUCH_CONTAINER_CLASS);\n      });\n    };\n  }, [containerRef, isDisabled, getState]);\n\n  useEffect(() => {\n    setState(isOverscrolled ? 'overscroll' : 'normal');\n  }, [isOverscrolled, setState]);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (isDisabled || !container) {\n      return undefined;\n    }\n\n    container.addEventListener('wheel', handleWheel, { passive: getState() === 'normal' });\n    container.addEventListener('touchstart', handleTouchStart, { passive: true });\n    container.addEventListener('touchmove', handleTouchMove, { passive: true });\n    container.addEventListener('touchend', handleTouchEnd, { passive: true });\n    container.addEventListener('touchcancel', handleTouchEnd, { passive: true });\n\n    return () => {\n      container.removeEventListener('wheel', handleWheel);\n      container.removeEventListener('touchstart', handleTouchStart);\n      container.removeEventListener('touchmove', handleTouchMove);\n      container.removeEventListener('touchend', handleTouchEnd);\n      container.removeEventListener('touchcancel', handleTouchEnd);\n\n      const activeScroll = activeScrollRef.current;\n      if (activeScroll?.timeout) clearTimeout(activeScroll.timeout);\n    };\n  }, [containerRef, handleWheel, handleTouchStart, handleTouchMove, handleTouchEnd, getState, isDisabled]);\n}\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiPeer, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getMainUsername } from '../../../../global/helpers';\nimport { filterPeersByQuery, getPeerTitle } from '../../../../global/helpers/peers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: ElementRef<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const lang = useLang();\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterPeersByQuery({\n      ids: unique([\n        ...((getWithInlineBots() && topInlineBotIds) || []),\n        ...(memberIds || []),\n      ]),\n      query: filter,\n      type: 'user',\n    });\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((\n    peer: ApiPeer,\n    forceFocus = false,\n    insertAtEnd = false,\n  ) => {\n    if (!peer.hasUsername && !getPeerTitle(lang, peer)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(peer);\n    const userFirstOrLastName = getPeerTitle(lang, peer) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${peer.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = insertAtEnd ? fixedHtmlBeforeSelection.length\n      : fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import { useMemo, useRef } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst EMPTY_ORDER_DIFF = {};\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffByIdRef = useRef<Record<string | number, number>>(EMPTY_ORDER_DIFF);\n  const forceUpdate = useForceUpdate();\n\n  const onReorderAnimationEnd = useLastCallback(() => {\n    if (orderDiffByIdRef.current === EMPTY_ORDER_DIFF) return;\n\n    orderDiffByIdRef.current = EMPTY_ORDER_DIFF;\n    forceUpdate();\n  });\n\n  useSyncEffect(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      orderDiffByIdRef.current = EMPTY_ORDER_DIFF;\n      return;\n    }\n\n    const diff = mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n\n    const hasChanges = Object.values(diff).some((value) => value !== 0);\n    orderDiffByIdRef.current = hasChanges ? diff : EMPTY_ORDER_DIFF;\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffByIdRef.current);\n\n  return {\n    orderDiffById: orderDiffByIdRef.current,\n    getAnimationType,\n    onReorderAnimationEnd,\n  };\n}\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n}: {\n  anchorRef: ElementRef<HTMLDivElement>;\n  overlayRef: ElementRef<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport { VERIFY_AGE_MIN_DEFAULT } from '../../config';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './SensitiveContentConfirmModal.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  shouldAlwaysShow: boolean;\n  onAlwaysShowChanged: (value: boolean) => void;\n  confirmHandler: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  verifyAgeMin: number;\n};\n\nconst SensitiveContentConfirmModal = ({\n  isOpen,\n  onClose,\n  shouldAlwaysShow,\n  onAlwaysShowChanged,\n  confirmHandler,\n  verifyAgeMin,\n}: OwnProps & StateProps) => {\n  const lang = useLang();\n\n  return (\n    <ConfirmDialog\n      title={lang('TitleSensitiveModal', { years: verifyAgeMin })}\n      confirmLabel={lang('ButtonSensitiveView')}\n      isOpen={isOpen}\n      onClose={onClose}\n      confirmHandler={confirmHandler}\n    >\n      {lang('TextSensitiveModal')}\n      <Checkbox\n        className={styles.checkBox}\n        label={lang('ButtonSensitiveAlways', { years: verifyAgeMin })}\n        checked={shouldAlwaysShow}\n        onCheck={onAlwaysShowChanged}\n      />\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): Complete<StateProps> => {\n  const appConfig = global.appConfig;\n  const verifyAgeMin = appConfig.verifyAgeMin;\n\n  return {\n    verifyAgeMin: verifyAgeMin || VERIFY_AGE_MIN_DEFAULT,\n  };\n})(SensitiveContentConfirmModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"checkBox\":\"mYXi2mIC\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID, SVG_NAMESPACE } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport jsxToHtml from '../../../util/element/jsxToHtml';\nimport generateUniqueId from '../../../util/generateUniqueId';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const component = (\n    <svg\n      className={styles.ghost}\n      width={width}\n      height={height}\n      style={`left: ${x}px; top: ${y}px;`}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <defs>\n        {createFilter(filterId, Math.min(width, height), seed)}\n      </defs>\n      <g filter={`url(#${filterId})`}>\n        <foreignObject className={styles.elementContainer} width={width} height={height} />\n      </g>\n    </svg>\n  );\n\n  const svg = jsxToHtml(component)[0] as HTMLElement;\n  const foreignObject = svg.querySelector('foreignObject')!;\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(id: string, smallestSide: number, baseSeed: number = 42) {\n  return (\n    <filter\n      xmlns={SVG_NAMESPACE}\n      id={id}\n      x=\"-150%\"\n      y=\"-150%\"\n      width=\"400%\"\n      height=\"400%\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.5\" numOctaves=\"1\" result=\"dustNoise\" seed={baseSeed} />\n      <feComponentTransfer in=\"dustNoise\" result=\"dustNoiseMask\">\n        <feFuncA type=\"linear\" slope=\"5\" intercept=\"0\">\n          <animate attributeName=\"slope\" values=\"5; 2; 1; 0\" dur={`${DURATION}ms`} fill=\"freeze\" />\n        </feFuncA>\n      </feComponentTransfer>\n      <feComposite in=\"SourceGraphic\" in2=\"dustNoiseMask\" operator=\"in\" result=\"dustySource\" />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"0.015\"\n        numOctaves=\"1\"\n        result=\"displacementNoise1\"\n        seed={baseSeed + 1}\n      />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"1\"\n        numOctaves=\"2\"\n        result=\"displacementNoise2\"\n        seed={baseSeed + 2}\n      />\n      <feMerge result=\"combinedNoise\">\n        <feMergeNode in=\"displacementNoise1\" />\n        <feMergeNode in=\"displacementNoise2\" />\n      </feMerge>\n      <feDisplacementMap in=\"dustySource\" in2=\"combinedNoise\" scale=\"0\" xChannelSelector=\"R\" yChannelSelector=\"G\">\n        <animate attributeName=\"scale\" values={`0; ${smallestSide * 3}`} dur={`${DURATION}ms`} fill=\"freeze\" />\n      </feDisplacementMap>\n    </filter>\n  );\n}\n","import type { ApiMessage } from '../../../api/types';\nimport type { IAlbum } from '../../../types';\n\nimport { isActionMessage } from '../../../global/helpers';\nimport { getDayStartAt } from '../../../util/dates/dateFormat';\n\ntype SenderGroup = (ApiMessage | IAlbum)[];\n\nconst GROUP_INTERVAL_SECONDS = 600; // 10 minutes\n\nexport type MessageDateGroup = {\n  originalDate: number;\n  datetime: number;\n  senderGroups: SenderGroup[];\n};\n\nexport function isAlbum(messageOrAlbum: ApiMessage | IAlbum): messageOrAlbum is IAlbum {\n  return 'albumId' in messageOrAlbum;\n}\n\nexport function groupMessages(\n  messages: ApiMessage[], firstUnreadId?: number, topMessageId?: number, isChatWithSelf?: boolean, withUsers?: boolean,\n) {\n  const initDateGroup: MessageDateGroup = {\n    originalDate: messages[0].date,\n    datetime: getDayStartAt(messages[0].date * 1000),\n    senderGroups: [[]],\n  };\n  let currentAlbum: IAlbum | undefined;\n\n  const dateGroups: MessageDateGroup[] = [initDateGroup];\n\n  messages.forEach((message, index) => {\n    const currentDateGroup = dateGroups[dateGroups.length - 1];\n    const currentSenderGroup = currentDateGroup.senderGroups[currentDateGroup.senderGroups.length - 1];\n    if (message.isInAlbum) {\n      if (!currentAlbum) {\n        currentAlbum = {\n          albumId: message.groupedId!,\n          messages: [message],\n          mainMessage: message,\n          hasMultipleCaptions: false,\n        } satisfies IAlbum;\n      } else {\n        currentAlbum.messages.push(message);\n        if (message.hasComments) {\n          currentAlbum.commentsMessage = message;\n        }\n        if (message.content.text && !currentAlbum.hasMultipleCaptions) {\n          if (currentAlbum.captionMessage) {\n            currentAlbum.hasMultipleCaptions = true;\n            currentAlbum.captionMessage = undefined;\n          } else {\n            currentAlbum.captionMessage = message;\n          }\n        }\n      }\n    } else if ((message.content.paidMedia?.extendedMedia.length || 0) > 1) {\n      currentSenderGroup.push({\n        albumId: `paid-${message.id}`,\n        messages: [message],\n        mainMessage: message,\n        hasMultipleCaptions: false,\n        isPaidMedia: true,\n      } satisfies IAlbum);\n    } else {\n      currentSenderGroup.push(message);\n    }\n\n    const nextMessage = messages[index + 1];\n\n    if (\n      currentAlbum\n      && (!nextMessage || !nextMessage.groupedId || nextMessage.groupedId !== currentAlbum.albumId)\n    ) {\n      currentSenderGroup.push(currentAlbum);\n      currentAlbum = undefined;\n    }\n\n    const lastMessageInSenderGroup = currentSenderGroup[currentSenderGroup.length - 1];\n    if (nextMessage && !currentAlbum) {\n      const nextMessageDayStartsAt = getDayStartAt(nextMessage.date * 1000);\n      if (currentDateGroup.datetime !== nextMessageDayStartsAt) {\n        const newDateGroup: MessageDateGroup = {\n          originalDate: nextMessage.date,\n          datetime: nextMessageDayStartsAt,\n          senderGroups: [[]],\n        };\n        dateGroups.push(newDateGroup);\n      } else if (\n        nextMessage.id === firstUnreadId\n        || message.senderId !== nextMessage.senderId\n        || (!withUsers && message.paidMessageStars)\n        || (nextMessage.suggestedPostInfo)\n        || message.isOutgoing !== nextMessage.isOutgoing\n        || message.postAuthorTitle !== nextMessage.postAuthorTitle\n        || (isActionMessage(message) && message.content.action?.type !== 'phoneCall')\n        || (isActionMessage(nextMessage) && nextMessage.content.action?.type !== 'phoneCall')\n        || message.inlineButtons\n        || nextMessage.inlineButtons\n        || (nextMessage.date - message.date) > GROUP_INTERVAL_SECONDS\n        || (topMessageId\n          && (message.id === topMessageId\n            || (lastMessageInSenderGroup\n              && 'mainMessage' in lastMessageInSenderGroup\n              && lastMessageInSenderGroup.mainMessage?.id === topMessageId))\n            && nextMessage.id !== topMessageId)\n          || (isChatWithSelf && message.forwardInfo?.fromId !== nextMessage.forwardInfo?.fromId)\n      ) {\n        currentDateGroup.senderGroups.push([]);\n      }\n    }\n  });\n\n  return dateGroups;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiBusinessIntro, ApiSticker, ApiUpdateConnectionStateType, ApiUser,\n} from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatLastMessage,\n  selectCurrentMessageList,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerView from '../common/StickerView';\n\nimport styles from './ContactGreeting.module.scss';\n\ntype OwnProps = {\n  userId: string;\n};\n\ntype StateProps = {\n  defaultStickers?: ApiSticker[];\n  lastUnreadMessageId?: number;\n  connectionState?: ApiUpdateConnectionStateType;\n  currentMessageList?: MessageList;\n  businessIntro?: ApiBusinessIntro;\n  user?: ApiUser;\n};\n\nconst ContactGreeting: FC<OwnProps & StateProps> = ({\n  defaultStickers,\n  connectionState,\n  lastUnreadMessageId,\n  currentMessageList,\n  businessIntro,\n  user,\n}) => {\n  const {\n    loadGreetingStickers,\n    sendMessage,\n    markMessageListRead,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const containerRef = useRef<HTMLDivElement>();\n\n  const sticker = useMemo(() => {\n    if (businessIntro?.sticker) return businessIntro.sticker;\n    if (!defaultStickers?.length) return undefined;\n\n    const randomIndex = Math.floor(Math.random() * defaultStickers.length);\n    return defaultStickers[randomIndex];\n  }, [businessIntro?.sticker, defaultStickers]);\n\n  useEffect(() => {\n    if (defaultStickers?.length || connectionState !== 'connectionStateReady') {\n      return;\n    }\n\n    loadGreetingStickers();\n  }, [connectionState, loadGreetingStickers, defaultStickers]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && lastUnreadMessageId) {\n      markMessageListRead({ maxId: lastUnreadMessageId });\n    }\n  }, [connectionState, markMessageListRead, lastUnreadMessageId]);\n\n  const handleStickerSelect = useLastCallback(() => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    sendMessage({\n      sticker: {\n        ...sticker!,\n        isPreloadedGlobally: true,\n      },\n      messageList: currentMessageList,\n    });\n  });\n\n  const title = businessIntro?.title || lang('Conversation.EmptyPlaceholder');\n  const description = businessIntro?.description || lang('Conversation.GreetingText');\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.wrapper}>\n        <p className={styles.title} dir=\"auto\">{title}</p>\n        <p className={styles.description} dir=\"auto\">{description}</p>\n\n        <div ref={containerRef} className={styles.sticker} onClick={handleStickerSelect}>\n          {sticker && (\n            <StickerView\n              containerRef={containerRef}\n              sticker={sticker}\n              size={160}\n              shouldLoop\n            />\n          )}\n        </div>\n      </div>\n      {businessIntro && (\n        <div className={styles.explainer}>\n          {lang('Chat.EmptyStateIntroFooter', getUserFullName(user))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): Complete<StateProps> => {\n    const { stickers } = global.stickers.greeting;\n    const chat = selectChat(global, userId);\n    if (!chat) {\n      return {} as Complete<StateProps>;\n    }\n\n    const user = selectUser(global, userId);\n    const fullInfo = selectUserFullInfo(global, userId);\n\n    const lastMessage = selectChatLastMessage(global, chat.id);\n\n    return {\n      defaultStickers: stickers,\n      lastUnreadMessageId: lastMessage && lastMessage.id !== chat.lastReadInboxMessageId\n        ? lastMessage.id\n        : undefined,\n      connectionState: global.connectionState,\n      currentMessageList: selectCurrentMessageList(global),\n      businessIntro: fullInfo?.businessIntro,\n      user,\n    };\n  },\n)(ContactGreeting));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"osdROIcA\",\"wrapper\":\"c3NtU3JZ\",\"explainer\":\"WIbO6rja\",\"title\":\"n2KO1cAv\",\"description\":\"MVSedxKc\",\"sticker\":\"qsfxNv7L\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tFPZHCMt\",\"chatInfo\":\"ubFGDy3d\",\"chatBackground\":\"niS9Gfcl\",\"botBackground\":\"kXKBpNnb\",\"bot-info-description\":\"kpMdEhns\",\"botInfoDescription\":\"kpMdEhns\",\"bot-info-title\":\"H__cBlx8\",\"botInfoTitle\":\"H__cBlx8\",\"media\":\"mtKNWJmZ\",\"chatInfoTitle\":\"RyB2zw9K\",\"chatInfoSubtitle\":\"n9OcHdnh\",\"chatDescription\":\"TYJGFKqJ\",\"country\":\"WuX68A65\",\"chatNotVerified\":\"sCB3zhO3\",\"verifiedTitle\":\"dlaTjW_s\",\"link\":\"yIJ4jRxH\",\"linkInfo\":\"_MPDNfhr\",\"icon\":\"KYcoeDmo\",\"textColor\":\"BH_g_jqY\"};","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo,\n  useEffect,\n  useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiBotInfo, ApiChat, ApiCountryCode, ApiUserCommonChats, ApiUserFullInfo,\n} from '../../api/types';\n\nimport {\n  getBotCoverMediaHash,\n  getChatTitle,\n  getPhotoFullDimensions,\n  getVideoDimensions,\n  getVideoMediaHash,\n  isChatWithVerificationCodesBot,\n} from '../../global/helpers';\nimport {\n  selectBot, selectChat, selectPeer, selectUserCommonChats, selectUserFullInfo,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport { formatPastDatetime, formatRegistrationMonth } from '../../util/dates/dateFormat';\nimport { isoToEmoji } from '../../util/emoji/emoji';\nimport { getCountryCodeByIso } from '../../util/phoneNumber';\nimport stopEvent from '../../util/stopEvent';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport MiniTable, { type TableEntry } from '../common/MiniTable';\nimport Link from '../ui/Link';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Skeleton from '../ui/placeholder/Skeleton';\n\nimport styles from './MessageListAccountInfo.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasMessages?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botInfo?: ApiBotInfo;\n  isLoadingFullUser?: boolean;\n  phoneCodeList?: ApiCountryCode[];\n  commonChats?: ApiUserCommonChats;\n  userFullInfo?: ApiUserFullInfo;\n};\n\nconst MessageListAccountInfo: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  botInfo,\n  isLoadingFullUser,\n  phoneCodeList,\n  commonChats,\n  userFullInfo,\n  hasMessages,\n}) => {\n  const { loadCommonChats, openChatWithInfo } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    phoneCountry,\n    registrationMonth,\n    nameChangeDate,\n    photoChangeDate,\n  } = userFullInfo?.settings || {};\n\n  useEffect(() => {\n    loadCommonChats({ userId: chatId });\n  }, [chatId]);\n\n  const country = useMemo(() => {\n    if (!phoneCodeList || !phoneCountry) return undefined;\n    return getCountryCodeByIso(phoneCodeList, phoneCountry);\n  }, [phoneCodeList, phoneCountry]);\n\n  const botInfoPhotoUrl = useMedia(botInfo?.photo ? getBotCoverMediaHash(botInfo.photo) : undefined);\n  const botInfoGifUrl = useMedia(botInfo?.gif ? getVideoMediaHash(botInfo.gif, 'full') : undefined);\n  const botInfoDimensions = botInfo?.photo ? getPhotoFullDimensions(botInfo.photo) : botInfo?.gif\n    ? getVideoDimensions(botInfo.gif) : undefined;\n  const isBotInfoEmpty = botInfo && !botInfo.description && !botInfo.gif && !botInfo.photo;\n  const isChatInfoEmpty = !country || !registrationMonth;\n\n  const isVerifyCodes = isChatWithVerificationCodesBot(chatId);\n\n  const { width, height } = botInfoDimensions || {};\n\n  const handleClick = useLastCallback((e: React.SyntheticEvent<any>) => {\n    stopEvent(e);\n    openChatWithInfo({\n      id: chatId, shouldReplaceHistory: true, profileTab: 'commonChats', forceScrollProfileTab: true,\n    });\n  });\n\n  const securityNameInfo = nameChangeDate && chat ? (\n    <div className=\"local-action-message\" key=\"security-name-message\">\n      <span>\n        {lang('UserUpdatedName', {\n          user: chat.title,\n          time: formatPastDatetime(lang, nameChangeDate),\n        }, { withNodes: true, withMarkdown: true })}\n      </span>\n    </div>\n  ) : undefined;\n\n  const securityPhotoInfo = photoChangeDate && chat ? (\n    <div className=\"local-action-message\" key=\"security-photo-message\">\n      <span>\n        {lang('UserUpdatedPhoto', {\n          user: chat.title,\n          time: formatPastDatetime(lang, photoChangeDate),\n        }, { withNodes: true, withMarkdown: true })}\n      </span>\n    </div>\n  ) : undefined;\n\n  const tableData = useMemo((): TableEntry[] => {\n    const entries: TableEntry[] = [];\n    if (country) {\n      entries.push([\n        oldLang('PrivacyPhone'),\n        <span className={styles.chatDescription}>\n          <span className={styles.country}>\n            {renderText(isoToEmoji(country?.iso2))}\n          </span>\n          {country?.defaultName}\n        </span>,\n      ]);\n    }\n    if (registrationMonth) {\n      entries.push([\n        lang('ContactInfoRegistration'),\n        formatRegistrationMonth(lang.code, registrationMonth),\n      ]);\n    }\n    if (userFullInfo?.commonChatsCount) {\n      const global = getGlobal();\n      const peers = commonChats?.ids.slice(0, 3).map((id) => selectPeer(global, id)!).filter(Boolean);\n      entries.push([\n        lang('ChatNonContactUserGroups'),\n        <Link className={styles.link} onClick={handleClick}>\n          <span className={styles.linkInfo}>\n            {lang('ChatGroups', {\n              count: userFullInfo.commonChatsCount,\n            }, {\n              pluralValue: userFullInfo.commonChatsCount,\n            })}\n          </span>\n          {Boolean(peers?.length) && <AvatarList size=\"micro\" peers={peers} />}\n          <Icon name=\"next\" className={styles.icon} />\n        </Link>,\n      ]);\n    }\n    return entries;\n  }, [lang, oldLang, country, registrationMonth, commonChats, userFullInfo]);\n\n  return (\n    <div className={buildClassName(styles.root, 'empty')}>\n      {isLoadingFullUser && isChatInfoEmpty && <span>{oldLang('Loading')}</span>}\n      {(isBotInfoEmpty && isChatInfoEmpty) && !isLoadingFullUser && !hasMessages && (\n        <span>{oldLang('NoMessages')}</span>\n      )}\n      {botInfo && (\n        <div\n          className={buildClassName(styles.chatInfo, styles.botBackground)}\n          style={buildStyle(\n            width ? `width: ${width}px` : undefined,\n          )}\n        >\n          {botInfoPhotoUrl && (\n            <img\n              className={styles.media}\n              src={botInfoPhotoUrl}\n              width={width}\n              height={height}\n              alt=\"Bot info\"\n            />\n          )}\n          {botInfoGifUrl && (\n            <OptimizedVideo\n              canPlay\n              className={styles.media}\n              src={botInfoGifUrl}\n              loop\n              disablePictureInPicture\n              muted\n              playsInline\n              style={buildStyle(Boolean(width) && `width: ${width}px`, Boolean(height) && `height: ${height}px`)}\n            />\n          )}\n          {botInfoDimensions && !botInfoPhotoUrl && !botInfoGifUrl && (\n            <Skeleton\n              className={styles.media}\n              width={width}\n              height={height}\n              forceAspectRatio\n            />\n          )}\n          {isVerifyCodes && (\n            <div className={styles.botInfoDescription}>\n              {oldLang('VerifyChatInfo')}\n            </div>\n          )}\n          {!isVerifyCodes && botInfo.description && (\n            <div className={styles.botInfoDescription}>\n              <p className={styles.botInfoTitle}>{oldLang('BotInfoTitle')}</p>\n              {renderText(botInfo.description, ['br', 'emoji', 'links'])}\n            </div>\n          )}\n        </div>\n      )}\n      {!isChatInfoEmpty && chat && (\n        <div\n          className={buildClassName(styles.chatInfo, styles.chatBackground)}\n        >\n          <h3 className={styles.chatInfoTitle}>{renderText(getChatTitle(lang, chat))}</h3>\n          <p className={buildClassName(styles.chatInfoSubtitle, styles.textColor)}>\n            {lang('ChatNonContactUserSubtitle')}\n          </p>\n          <MiniTable keyClassName={styles.textColor} data={tableData} />\n          {!chat?.isVerified && (\n            <div className={buildClassName(styles.chatNotVerified, styles.textColor)}>\n              <Icon name=\"info-filled\" />\n              <p className={styles.verifiedTitle}>{lang('ContactInfoNotVerified')}</p>\n            </div>\n          )}\n        </div>\n      )}\n      {securityNameInfo}\n      {securityPhotoInfo}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }) => {\n    const {\n      countryList: { phoneCodes: phoneCodeList },\n    } = global;\n    const chat = selectChat(global, chatId);\n    const userFullInfo = selectUserFullInfo(global, chatId);\n    const commonChats = selectUserCommonChats(global, chatId);\n    const chatBot = selectBot(global, chatId);\n\n    let isLoadingFullUser = false;\n    let botInfo;\n    if (chatBot) {\n      if (userFullInfo) {\n        botInfo = userFullInfo.botInfo;\n      } else {\n        isLoadingFullUser = true;\n      }\n    }\n\n    return {\n      chat,\n      userFullInfo,\n      botInfo,\n      isLoadingFullUser,\n      phoneCodeList,\n      commonChats,\n    };\n  },\n)(MessageListAccountInfo));\n","import type { ElementRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { MessageListType } from '../../../types';\nimport type { OnIntersectPinnedMessage } from './usePinnedMessage';\n\nimport { IS_ANDROID } from '../../../util/browser/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useBackgroundMode, { isBackgroundModeActive } from '../../../hooks/window/useBackgroundMode';\n\nconst INTERSECTION_THROTTLE_FOR_READING = 150;\nconst INTERSECTION_THROTTLE_FOR_MEDIA = IS_ANDROID ? 1000 : 350;\n\nexport default function useMessageObservers(\n  type: MessageListType,\n  containerRef: ElementRef<HTMLDivElement>,\n  memoFirstUnreadIdRef: { current: number | undefined },\n  onIntersectPinnedMessage: OnIntersectPinnedMessage | undefined,\n  chatId: string,\n  isQuickPreview?: boolean,\n) {\n  const {\n    markMessageListRead, markMentionsRead, animateUnreadReaction,\n    scheduleForViewsIncrement,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const INTERSECTION_MARGIN_FOR_LOADING = isMobile ? 300 : 500;\n\n  const {\n    observe: observeIntersectionForReading, freeze: freezeForReading, unfreeze: unfreezeForReading,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE_FOR_READING,\n  }, (entries) => {\n    if (type !== 'thread' || isBackgroundModeActive()) {\n      return;\n    }\n\n    let maxId = 0;\n    const mentionIds: number[] = [];\n    const reactionIds: number[] = [];\n    const viewportPinnedIdsToAdd: number[] = [];\n    const viewportPinnedIdsToRemove: number[] = [];\n    const scheduledToUpdateViews: number[] = [];\n\n    entries.forEach((entry) => {\n      const { isIntersecting, target } = entry;\n\n      const { dataset } = target as HTMLDivElement;\n      const messageId = Number(dataset.lastMessageId || dataset.messageId);\n      const shouldUpdateViews = dataset.shouldUpdateViews === 'true';\n      const albumMainId = dataset.albumMainId ? Number(dataset.albumMainId) : undefined;\n\n      if (!isIntersecting) {\n        if (dataset.isPinned) {\n          viewportPinnedIdsToRemove.push(albumMainId || messageId);\n        }\n        return;\n      }\n\n      if (messageId > maxId) {\n        maxId = messageId;\n      }\n\n      if (dataset.hasUnreadMention) {\n        mentionIds.push(messageId);\n      }\n\n      if (dataset.hasUnreadReaction) {\n        reactionIds.push(messageId);\n      }\n\n      if (dataset.isPinned) {\n        viewportPinnedIdsToAdd.push(albumMainId || messageId);\n      }\n\n      if (shouldUpdateViews) {\n        scheduledToUpdateViews.push(albumMainId || messageId);\n      }\n    });\n\n    if (!isQuickPreview) {\n      if (memoFirstUnreadIdRef.current && maxId >= memoFirstUnreadIdRef.current) {\n        markMessageListRead({ maxId });\n      }\n\n      if (mentionIds.length) {\n        markMentionsRead({ chatId, messageIds: mentionIds });\n      }\n\n      if (scheduledToUpdateViews.length) {\n        scheduleForViewsIncrement({ chatId, ids: scheduledToUpdateViews });\n      }\n    }\n\n    if (reactionIds.length) {\n      animateUnreadReaction({ messageIds: reactionIds });\n    }\n\n    if (viewportPinnedIdsToAdd.length || viewportPinnedIdsToRemove.length) {\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToAdd, viewportPinnedIdsToRemove });\n    }\n  });\n\n  useBackgroundMode(freezeForReading, unfreezeForReading);\n\n  const {\n    observe: observeIntersectionForLoading,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE_FOR_MEDIA,\n    margin: INTERSECTION_MARGIN_FOR_LOADING,\n  });\n\n  const { observe: observeIntersectionForPlaying } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE_FOR_MEDIA,\n  });\n\n  return {\n    observeIntersectionForReading,\n    observeIntersectionForLoading,\n    observeIntersectionForPlaying,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Tk8btfOT\",\"avatarContainer\":\"UPrRM3Ks\",\"senderAvatar\":\"jdvqXfYh\",\"contextMenu\":\"FHxnbOg6\"};","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo,\n  useEffect,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage,\n  ApiPeer,\n} from '../../../api/types';\n\nimport {\n  EDITABLE_INPUT_CSS_SELECTOR,\n  MESSAGE_APPEARANCE_DELAY,\n} from '../../../config';\nimport {\n  getMainUsername,\n  isAnonymousForwardsChat,\n  isAnonymousOwnMessage,\n  isSystemBot,\n} from '../../../global/helpers';\nimport { isApiPeerUser } from '../../../global/helpers/peers';\nimport {\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectSender,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Avatar from '../../common/Avatar';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\n\nimport styles from './SenderGroupContainer.module.scss';\n\ntype OwnProps =\n  {\n    message: ApiMessage;\n    withAvatar?: boolean;\n    children: React.ReactNode;\n    id: string;\n    appearanceOrder: number;\n    canPost?: boolean;\n  };\n\ntype StateProps = {\n  sender?: ApiPeer;\n  canShowSender: boolean;\n  originSender?: ApiPeer;\n  isChatWithSelf?: boolean;\n  isRepliesChat?: boolean;\n  isAnonymousForwards?: boolean;\n};\n\nconst SenderGroupContainer: FC<OwnProps & StateProps> = ({\n  message,\n  withAvatar,\n  children,\n  id,\n  appearanceOrder,\n  sender,\n  canShowSender,\n  originSender,\n  isChatWithSelf,\n  isRepliesChat,\n  isAnonymousForwards,\n  canPost,\n}) => {\n  const { openChat, updateInsertingPeerIdMention } = getActions();\n\n  const { forwardInfo } = message;\n\n  const messageSender = canShowSender ? sender : undefined;\n  const lang = useLang();\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * MESSAGE_APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const shouldPreferOriginSender = forwardInfo\n    && (isChatWithSelf || isRepliesChat || isAnonymousForwards || !messageSender);\n  const avatarPeer = shouldPreferOriginSender ? originSender : messageSender;\n  const isAvatarPeerUser = avatarPeer && isApiPeerUser(avatarPeer);\n\n  const handleOpenChat = useLastCallback(() => {\n    if (!avatarPeer) {\n      return;\n    }\n\n    openChat({ id: avatarPeer.id });\n  });\n\n  const handleMention = useLastCallback(() => {\n    if (!avatarPeer) {\n      return;\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n    if (messageInput) {\n      updateInsertingPeerIdMention({ peerId: avatarPeer.id });\n    }\n  });\n\n  const handleAvatarClick = useLastCallback(() => {\n    handleOpenChat();\n  });\n\n  const {\n    ref: avatarRef,\n    shouldRender,\n  } = useShowTransition({\n    isOpen: withAvatar && isShown,\n    noMountTransition: isShown,\n    withShouldRender: true,\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleContextMenu, handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(avatarRef);\n\n  const getTriggerElement = useLastCallback(() => avatarRef.current);\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n  const getMenuElement = useLastCallback(\n    () => avatarRef?.current?.querySelector(`.${styles.contextMenu} .bubble`),\n  );\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const canMention = canPost && avatarPeer && (isAvatarPeerUser || Boolean(getMainUsername(avatarPeer)));\n  const shouldRenderContextMenu = Boolean(contextMenuAnchor) && (isAvatarPeerUser || canMention);\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getLayout={getLayout}\n        getMenuElement={getMenuElement}\n        className={styles.contextMenu}\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        withPortal\n        autoClose\n      >\n        <>\n          {isAvatarPeerUser && (\n            <MenuItem\n              icon=\"comments\"\n              onClick={handleOpenChat}\n            >\n              {lang('SendMessage')}\n            </MenuItem>\n          )}\n          {canMention && (\n            <MenuItem\n              icon=\"mention\"\n              onClick={handleMention}\n            >\n              {lang('ContextMenuItemMention')}\n            </MenuItem>\n          )}\n        </>\n      </Menu>\n    );\n  }\n\n  function renderAvatar() {\n    const hiddenName = (!avatarPeer && forwardInfo) ? forwardInfo.hiddenUserName : undefined;\n\n    return (\n      <Avatar\n        size=\"small\"\n        className={styles.senderAvatar}\n        peer={avatarPeer}\n        text={hiddenName}\n        onClick={avatarPeer ? handleAvatarClick : undefined}\n        onContextMenu={handleContextMenu}\n      />\n    );\n  }\n\n  const className = buildClassName(\n    'sender-group-container',\n    styles.root,\n  );\n\n  return (\n    <div id={id} className={className}>\n      {shouldRender && (\n        <div ref={avatarRef} className={styles.avatarContainer}>\n          {renderAvatar()}\n          {shouldRenderContextMenu && renderContextMenu()}\n        </div>\n      )}\n      {children}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): Complete<StateProps> => {\n    const {\n      message, withAvatar,\n    } = ownProps;\n    const { chatId } = message;\n\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isSystemBotChat = isSystemBot(chatId);\n    const isAnonymousForwards = isAnonymousForwardsChat(chatId);\n\n    const forceSenderName = !isChatWithSelf && isAnonymousOwnMessage(message);\n    const canShowSender = withAvatar || forceSenderName;\n    const sender = selectSender(global, message);\n    const originSender = selectForwardedSender(global, message);\n\n    return {\n      sender,\n      canShowSender,\n      originSender,\n      isChatWithSelf,\n      isRepliesChat: isSystemBotChat,\n      isAnonymousForwards,\n    };\n  },\n)(SenderGroupContainer));\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SponsoredContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SponsoredContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SponsoredContextMenuContainer = useModuleLoader(\n    Bundles.Extra, 'SponsoredContextMenuContainer', !isOpen,\n  );\n\n  return SponsoredContextMenuContainer ? <SponsoredContextMenuContainer {...props} /> : undefined;\n};\n\nexport default SponsoredContextMenuContainerAsync;\n","import type { ElementRef, FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport {\n  getIsDownloading,\n  getMessageContent,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads, selectCanAutoLoadMedia, selectCanAutoPlayMedia,\n  selectSponsoredMessage,\n  selectTheme,\n} from '../../../global/selectors';\nimport { selectMessageDownloadableMedia } from '../../../global/selectors/media';\nimport { IS_ANDROID } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\nimport { preventMessageInputBlur } from '../helpers/preventMessageInputBlur';\nimport { calculateMediaDimensions, getMinMediaWidth, getMinMediaWidthWithText } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport { type ObserveFn, useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport BadgeButton from '../../common/BadgeButton';\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\nimport MessageAppendix from './MessageAppendix';\nimport Photo from './Photo';\nimport SponsoredContextMenuContainer from './SponsoredContextMenuContainer.async';\nimport Video from './Video';\n\nimport './SponsoredMessage.scss';\n\ntype OwnProps = {\n  chatId: string;\n  containerRef: ElementRef<HTMLDivElement>;\n  observeIntersectionForLoading: ObserveFn;\n  observeIntersectionForPlaying: ObserveFn;\n};\n\ntype StateProps = {\n  message?: ApiSponsoredMessage;\n  theme: ThemeKey;\n  isDownloading?: boolean;\n  canAutoLoadMedia?: boolean;\n  canAutoPlayMedia?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\n\nconst SponsoredMessage: FC<OwnProps & StateProps> = ({\n  chatId,\n  message,\n  containerRef,\n  theme,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  isDownloading,\n  canAutoLoadMedia,\n  canAutoPlayMedia,\n}) => {\n  const {\n    viewSponsored,\n    openUrl,\n    hideSponsored,\n    clickSponsored,\n    openMediaViewer,\n    openAboutAdsModal,\n  } = getActions();\n\n  const lang = useOldLang();\n  const contentRef = useRef<HTMLDivElement>();\n  const ref = useRef<HTMLDivElement>();\n  const shouldObserve = Boolean(message);\n\n  const { isMobile } = useAppLayout();\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    threshold: 1,\n  });\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, undefined, true, IS_ANDROID);\n\n  useEffect(() => {\n    return shouldObserve ? observeIntersection(contentRef.current!, (target) => {\n      if (target.isIntersecting && message?.randomId) {\n        viewSponsored({ randomId: message.randomId });\n      }\n    }) : undefined;\n  }, [message?.randomId, shouldObserve, observeIntersection, viewSponsored]);\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleHideSponsoredMessage = useLastCallback(() => {\n    hideSponsored();\n  });\n\n  const content = message && getMessageContent(message);\n  const {\n    photo, video, text,\n  } = content || {};\n\n  const isGif = video?.isGif;\n  const hasMedia = Boolean(photo || video);\n\n  const handleClick = useLastCallback(() => {\n    if (!message) return;\n\n    clickSponsored({ randomId: message.randomId, isMedia: photo || isGif ? true : undefined });\n    openUrl({ url: message.url, shouldSkipModal: true });\n  });\n\n  const handleOpenMedia = useLastCallback(() => {\n    if (!message) return;\n    clickSponsored({ randomId: message.randomId, isMedia: true });\n    openMediaViewer({\n      origin: MediaViewerOrigin.SponsoredMessage,\n      chatId,\n      isSponsoredMessage: true,\n    });\n  });\n\n  const handleOpenAboutAdsModal = useLastCallback(() => {\n    if (!message) return;\n    openAboutAdsModal({\n      randomId: message.randomId,\n      canReport: message.canReport,\n      additionalInfo: message.additionalInfo,\n      sponsorInfo: message.sponsorInfo,\n    });\n  });\n\n  const extraPadding = 0;\n\n  const sizeCalculations = useMemo(() => {\n    let calculatedWidth;\n    let contentWidth: number | undefined;\n    const noMediaCorners = false;\n    let style = '';\n\n    if (photo || video) {\n      let width: number | undefined;\n      if (photo) {\n        width = calculateMediaDimensions({\n          media: photo,\n          isMobile,\n        }).width;\n      } else if (video) {\n        width = calculateMediaDimensions({\n          media: video,\n          isMobile,\n        }).width;\n      }\n\n      if (width) {\n        if (width < getMinMediaWidthWithText(isMobile)) {\n          contentWidth = width;\n        }\n        calculatedWidth = Math.max(getMinMediaWidth(text?.text, isMobile), width);\n      }\n    }\n\n    if (calculatedWidth) {\n      style = `width: ${calculatedWidth + extraPadding}px`;\n    }\n\n    return {\n      contentWidth, noMediaCorners, style,\n    };\n  }, [photo, video, isMobile, text?.text]);\n\n  const {\n    contentWidth, style,\n  } = sizeCalculations;\n\n  if (!message || !message.content) {\n    return undefined;\n  }\n\n  function renderContent() {\n    if (!message) return undefined;\n    return (\n      <>\n        <div className=\"message-title message-peer\" dir=\"auto\">{message.title}</div>\n        {Boolean(message.content?.text) && (\n          <div className=\"text-content with-meta\" dir=\"auto\" ref={contentRef}>\n            <span className=\"text-content-inner\" dir=\"auto\">\n              {renderTextWithEntities({\n                text: message.content.text.text,\n                entities: message.content.text.entities,\n              })}\n            </span>\n          </div>\n        )}\n\n        <Button\n          className=\"SponsoredMessage__button\"\n          size=\"tiny\"\n          color=\"translucent\"\n          isRectangular\n          onClick={handleClick}\n        >\n          {message.buttonText}\n        </Button>\n      </>\n    );\n  }\n\n  function renderMediaContent() {\n    if (!message) return undefined;\n\n    if (photo) {\n      return (\n        <Photo\n          photo={photo}\n          theme={theme}\n          canAutoLoad={canAutoLoadMedia}\n          isDownloading={isDownloading}\n          observeIntersection={observeIntersectionForLoading}\n          noAvatars\n          onClick={handleClick}\n          forcedWidth={contentWidth}\n        />\n      );\n    }\n    if (video) {\n      return (\n        <Video\n          video={video}\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n          noAvatars\n          canAutoLoad={canAutoLoadMedia}\n          canAutoPlay={canAutoPlayMedia}\n          isDownloading={isDownloading}\n          onClick={isGif ? handleClick : handleOpenMedia}\n          forcedWidth={contentWidth}\n        />\n      );\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div\n      ref={ref}\n      key=\"sponsored-message\"\n      className=\"SponsoredMessage Message open sponsored-media-preview\"\n    >\n      <div\n        className=\"message-content media has-shadow has-solid-background has-appendix\"\n        dir=\"auto\"\n        style={style}\n        onMouseDown={handleMouseDown}\n        onContextMenu={handleContextMenu}\n      >\n        <PeerColorWrapper peerColor={message.peerColor} className=\"content-inner\" dir=\"auto\">\n          {renderMediaContent()}\n          {message.photo && (\n            <Avatar\n              size=\"large\"\n              photo={message.photo}\n              className={buildClassName('channel-avatar', lang.isRtl && 'is-rtl')}\n            />\n          )}\n          <span className={buildClassName('message-title message-type', hasMedia && 'has-media')}>\n            {message.isRecommended ? lang('Message.RecommendedLabel') : lang('SponsoredMessage')}\n            <BadgeButton onClick={handleOpenAboutAdsModal} className=\"ad-about\">\n              {lang('SponsoredMessageAdWhatIsThis')}\n            </BadgeButton>\n          </span>\n          {renderContent()}\n        </PeerColorWrapper>\n        <MessageAppendix />\n        <div className=\"message-action-buttons\">\n          <Button\n            className=\"message-action-button\"\n            color=\"translucent-white\"\n            round\n            size=\"tiny\"\n            ariaLabel={lang('Close')}\n            onClick={handleHideSponsoredMessage}\n          >\n            <Icon name=\"close\" className=\"sponsored-action-icon\" />\n          </Button>\n          {message.canReport && (\n            <Button\n              className=\"message-action-button\"\n              color=\"translucent-white\"\n              round\n              size=\"tiny\"\n              ariaLabel={lang('More')}\n              onClick={handleContextMenu}\n              onContextMenu={handleContextMenu}\n            >\n              <Icon name=\"more\" className=\"sponsored-action-icon\" />\n            </Button>\n          )}\n        </div>\n      </div>\n      {contextMenuAnchor && (\n        <SponsoredContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          triggerRef={ref}\n          randomId={message.randomId}\n          canReport={message.canReport}\n          sponsorInfo={message.sponsorInfo}\n          additionalInfo={message.additionalInfo}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): Complete<StateProps> => {\n    const message = selectSponsoredMessage(global, chatId);\n\n    const activeDownloads = selectActiveDownloads(global);\n    const downloadableMedia = message ? selectMessageDownloadableMedia(global, message) : undefined;\n    const isDownloading = downloadableMedia && getIsDownloading(activeDownloads, downloadableMedia);\n\n    return {\n      message,\n      theme: selectTheme(global),\n      isDownloading,\n      canAutoLoadMedia: message ? selectCanAutoLoadMedia(global, message) : undefined,\n      canAutoPlayMedia: message ? selectCanAutoPlayMedia(global, message) : undefined,\n    };\n  },\n)(SponsoredMessage));\n","import type { ElementRef, FC } from '../../lib/teact/teact';\nimport { getIsHeavyAnimating, memo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { IAlbum, MessageListType, ThreadId } from '../../types';\nimport type { Signal } from '../../util/signals';\nimport type { MessageDateGroup } from './helpers/groupMessages';\nimport type { OnIntersectPinnedMessage } from './hooks/usePinnedMessage';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../../config';\nimport {\n  getMessageHtmlId,\n  getMessageOriginalId,\n  getSuggestedChangesActionText,\n  getSuggestedChangesInfo,\n  isActionMessage,\n  isOwnMessage,\n  isServiceNotificationMessage,\n} from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport { selectChatMessage, selectSender } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatHumanDate, formatScheduledDateTime } from '../../util/dates/dateFormat';\nimport { convertTonFromNanos } from '../../util/formatCurrency';\nimport { compact } from '../../util/iteratees';\nimport { formatStarsAsText, formatTonAsText } from '../../util/localization/format';\nimport { isAlbum } from './helpers/groupMessages';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\nimport { renderPeerLink } from './message/helpers/messageActions';\n\nimport useDerivedSignal from '../../hooks/useDerivedSignal';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useMessageObservers from './hooks/useMessageObservers';\nimport useScrollHooks from './hooks/useScrollHooks';\n\nimport MiniTable, { type TableEntry } from '../common/MiniTable';\nimport ActionMessage from './message/ActionMessage';\nimport Message from './message/Message';\nimport SenderGroupContainer from './message/SenderGroupContainer';\nimport SponsoredMessage from './message/SponsoredMessage';\nimport MessageListAccountInfo from './MessageListAccountInfo';\n\nimport actionMessageStyles from './message/ActionMessage.module.scss';\n\ninterface OwnProps {\n  canShowAds?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageIds: number[];\n  messageGroups: MessageDateGroup[];\n  getContainerHeight: Signal<number | undefined>;\n  isViewportNewest: boolean;\n  isUnread: boolean;\n  withUsers: boolean;\n  isChannelChat: boolean | undefined;\n  isChatMonoforum?: boolean;\n  isEmptyThread?: boolean;\n  isComments?: boolean;\n  noAvatars: boolean;\n  containerRef: ElementRef<HTMLDivElement>;\n  anchorIdRef: { current: string | undefined };\n  memoUnreadDividerBeforeIdRef: { current: number | undefined };\n  memoFirstUnreadIdRef: { current: number | undefined };\n  type: MessageListType;\n  isReady: boolean;\n  hasLinkedChat: boolean | undefined;\n  isSchedule: boolean;\n  shouldRenderAccountInfo?: boolean;\n  nameChangeDate?: number;\n  photoChangeDate?: number;\n  noAppearanceAnimation: boolean;\n  isSavedDialog?: boolean;\n  isQuickPreview?: boolean;\n  onScrollDownToggle?: BooleanToVoidFunction;\n  onNotchToggle?: AnyToVoidFunction;\n  onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n  canPost?: boolean;\n}\n\nconst UNREAD_DIVIDER_CLASS = 'unread-divider';\n\nconst MessageListContent: FC<OwnProps> = ({\n  canShowAds,\n  chatId,\n  threadId,\n  messageIds,\n  messageGroups,\n  getContainerHeight,\n  isViewportNewest,\n  isUnread,\n  isComments,\n  isEmptyThread,\n  withUsers,\n  isChannelChat,\n  isChatMonoforum,\n  noAvatars,\n  containerRef,\n  anchorIdRef,\n  memoUnreadDividerBeforeIdRef,\n  memoFirstUnreadIdRef,\n  type,\n  isReady,\n  hasLinkedChat,\n  isSchedule,\n  shouldRenderAccountInfo,\n  nameChangeDate,\n  photoChangeDate,\n  noAppearanceAnimation,\n  isSavedDialog,\n  isQuickPreview,\n  onScrollDownToggle,\n  onNotchToggle,\n  onIntersectPinnedMessage,\n  canPost,\n}) => {\n  const { openHistoryCalendar } = getActions();\n\n  const getIsHeavyAnimating2 = getIsHeavyAnimating;\n  const getIsReady = useDerivedSignal(() => isReady && !getIsHeavyAnimating2(), [isReady, getIsHeavyAnimating2]);\n\n  const areDatesClickable = !isSavedDialog && !isSchedule;\n\n  const {\n    observeIntersectionForReading,\n    observeIntersectionForLoading,\n    observeIntersectionForPlaying,\n  } = useMessageObservers(type, containerRef, memoFirstUnreadIdRef, onIntersectPinnedMessage, chatId, isQuickPreview);\n\n  const {\n    withHistoryTriggers,\n    backwardsTriggerRef,\n    forwardsTriggerRef,\n    fabTriggerRef,\n  } = useScrollHooks(\n    type,\n    containerRef,\n    messageIds,\n    getContainerHeight,\n    isViewportNewest,\n    isUnread,\n    onScrollDownToggle,\n    onNotchToggle,\n    isReady,\n  );\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const unreadDivider = (\n    <div className={buildClassName(UNREAD_DIVIDER_CLASS, 'local-action-message')} key=\"unread-messages\">\n      <span>{oldLang('UnreadMessages')}</span>\n    </div>\n  );\n  const renderPaidMessageAction = (message: ApiMessage, album?: IAlbum) => {\n    if (message.paidMessageStars) {\n      const messagesLength = album?.messages?.length || 1;\n      const amount = message.paidMessageStars * messagesLength;\n      return (\n        <div\n          className={buildClassName('local-action-message')}\n          key={`paid-messages-action-${message.id}`}\n        >\n          <span>\n            {\n              message.isOutgoing\n                ? lang('ActionPaidOneMessageOutgoing', {\n                  amount: formatStarsAsText(lang, amount),\n                })\n                : (() => {\n                  const sender = selectSender(getGlobal(), message);\n                  const userTitle = sender ? getPeerTitle(lang, sender) : '';\n                  return lang('ActionPaidOneMessageIncoming', {\n                    user: userTitle,\n                    amount: formatStarsAsText(lang, amount),\n                  });\n                })()\n            }\n          </span>\n        </div>\n      );\n    }\n    return undefined;\n  };\n\n  const renderSuggestedPostInfoAction = (message: ApiMessage) => {\n    if (message.suggestedPostInfo) {\n      const { price, scheduleDate } = message.suggestedPostInfo;\n      const sender = selectSender(getGlobal(), message);\n      const userTitle = sender ? getPeerTitle(lang, sender) : '';\n      const userLink = renderPeerLink(sender?.id, userTitle || lang('ActionFallbackUser'));\n\n      const originalMessage = message.replyInfo?.type === 'message' && message.replyInfo.replyToMsgId\n        ? selectChatMessage(getGlobal(), message.chatId, message.replyInfo.replyToMsgId)\n        : undefined;\n      const changesInfo = getSuggestedChangesInfo(message, originalMessage);\n\n      const titleText = changesInfo\n        ? getSuggestedChangesActionText(lang, message, originalMessage, message.isOutgoing, userLink)\n        : message.isOutgoing\n          ? lang('ActionSuggestedPostOutgoing', undefined, { withNodes: true, withMarkdown: true })\n          : lang('ActionSuggestedPostIncoming', { user: userLink }, { withNodes: true, withMarkdown: true });\n\n      const tableData: TableEntry[] = compact([\n        [lang('TitlePrice'), price ? (price.currency === 'TON'\n          ? formatTonAsText(lang, convertTonFromNanos(price.amount))\n          : formatStarsAsText(lang, price.amount)) : lang('SuggestMessageNoPrice')],\n        [lang('TitleTime'),\n          scheduleDate\n            ? formatScheduledDateTime(scheduleDate, lang, oldLang)\n            : lang('SuggestMessageAnytime'),\n        ],\n      ]);\n\n      return (\n        <div\n          className={buildClassName('local-action-message')}\n          key={`suggested-post-action-${message.id}`}\n        >\n          <span className={actionMessageStyles.suggestedPostContainer}>\n            <div\n              className={actionMessageStyles.suggestedPostTitle}\n            >\n              {titleText}\n            </div>\n            {Boolean(tableData.length) && (\n              <MiniTable\n                className={actionMessageStyles.suggestedPostInfo}\n                data={tableData}\n              />\n            )}\n          </span>\n        </div>\n      );\n    }\n    return undefined;\n  };\n\n  const messageCountToAnimate = noAppearanceAnimation ? 0 : messageGroups.reduce((acc, messageGroup) => {\n    return acc + messageGroup.senderGroups.flat().length;\n  }, 0);\n  let appearanceIndex = 0;\n\n  const prevMessageIds = usePreviousDeprecated(messageIds);\n  const isNewMessage = Boolean(\n    messageIds && prevMessageIds && messageIds[messageIds.length - 2] === prevMessageIds[prevMessageIds.length - 1],\n  );\n\n  function calculateSenderGroups(\n    dateGroup: MessageDateGroup, dateGroupIndex: number, dateGroupsArray: MessageDateGroup[],\n  ) {\n    return dateGroup.senderGroups.map((\n      senderGroup,\n      senderGroupIndex,\n      senderGroupsArray,\n    ) => {\n      if (\n        senderGroup.length === 1\n        && !isAlbum(senderGroup[0])\n        && isActionMessage(senderGroup[0])\n        && senderGroup[0].content.action?.type !== 'phoneCall'\n      ) {\n        const message = senderGroup[0];\n        const isLastInList = (\n          senderGroupIndex === senderGroupsArray.length - 1\n          && dateGroupIndex === dateGroupsArray.length - 1\n        );\n\n        return compact([\n          message.id === memoUnreadDividerBeforeIdRef.current && unreadDivider,\n          <ActionMessage\n            key={message.id}\n            message={message}\n            threadId={threadId}\n            observeIntersectionForBottom={observeIntersectionForReading}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            memoFirstUnreadIdRef={memoFirstUnreadIdRef}\n            appearanceOrder={messageCountToAnimate - ++appearanceIndex}\n            isJustAdded={isLastInList && isNewMessage}\n            isLastInList={isLastInList}\n            getIsMessageListReady={getIsReady}\n            onIntersectPinnedMessage={onIntersectPinnedMessage}\n          />,\n        ]);\n      }\n\n      let currentDocumentGroupId: string | undefined;\n\n      const senderGroupElements = senderGroup.map((\n        messageOrAlbum,\n        messageIndex,\n      ) => {\n        const message = isAlbum(messageOrAlbum) ? messageOrAlbum.mainMessage : messageOrAlbum;\n        const album = isAlbum(messageOrAlbum) ? messageOrAlbum : undefined;\n        const isOwn = isOwnMessage(message);\n        const isMessageAlbum = isAlbum(messageOrAlbum);\n        const nextMessage = senderGroup[messageIndex + 1];\n\n        if (message.previousLocalId && anchorIdRef.current === getMessageHtmlId(message.previousLocalId)) {\n          anchorIdRef.current = getMessageHtmlId(message.id);\n        }\n\n        const documentGroupId = !isMessageAlbum && message.groupedId ? message.groupedId : undefined;\n        const nextDocumentGroupId = nextMessage && !isAlbum(nextMessage) ? nextMessage.groupedId : undefined;\n        const isTopicTopMessage = message.id === threadId;\n\n        const position = {\n          isFirstInGroup: messageIndex === 0,\n          isLastInGroup: messageIndex === senderGroup.length - 1,\n          isFirstInDocumentGroup: Boolean(documentGroupId && documentGroupId !== currentDocumentGroupId),\n          isLastInDocumentGroup: Boolean(documentGroupId && documentGroupId !== nextDocumentGroupId),\n          isLastInList: (\n            messageIndex === senderGroup.length - 1\n            && senderGroupIndex === senderGroupsArray.length - 1\n            && dateGroupIndex === dateGroupsArray.length - 1\n          ),\n        };\n\n        currentDocumentGroupId = documentGroupId;\n\n        const originalId = getMessageOriginalId(message);\n        // Service notifications saved in cache in previous versions may share the same `previousLocalId`\n        const key = isServiceNotificationMessage(message) ? `${message.date}_${originalId}` : originalId;\n\n        const noComments = hasLinkedChat === false || !isChannelChat || Boolean(isChatMonoforum);\n\n        return compact([\n          message.id === memoUnreadDividerBeforeIdRef.current && unreadDivider,\n          message.paidMessageStars && !withUsers && renderPaidMessageAction(message, album),\n          message.suggestedPostInfo && renderSuggestedPostInfoAction(message),\n          <Message\n            key={key}\n            message={message}\n            observeIntersectionForBottom={observeIntersectionForReading}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            album={album}\n            noAvatars={noAvatars}\n            withAvatar={position.isLastInGroup && withUsers && !isOwn && (!isTopicTopMessage || !isComments)}\n            withSenderName={position.isFirstInGroup && withUsers && !isOwn}\n            threadId={threadId}\n            messageListType={type}\n            noComments={noComments}\n            noReplies={!noComments || threadId !== MAIN_THREAD_ID || type === 'scheduled'}\n            appearanceOrder={messageCountToAnimate - ++appearanceIndex}\n            isJustAdded={position.isLastInList && isNewMessage}\n            isFirstInGroup={position.isFirstInGroup}\n            isLastInGroup={position.isLastInGroup}\n            isFirstInDocumentGroup={position.isFirstInDocumentGroup}\n            isLastInDocumentGroup={position.isLastInDocumentGroup}\n            isLastInList={position.isLastInList}\n            memoFirstUnreadIdRef={memoFirstUnreadIdRef}\n            onIntersectPinnedMessage={onIntersectPinnedMessage}\n            getIsMessageListReady={getIsReady}\n          />,\n          message.id === threadId && (\n            // eslint-disable-next-line react-x/no-duplicate-key\n            <div className=\"local-action-message\" key=\"discussion-started\">\n              <span>\n                {oldLang(isEmptyThread\n                  ? (isComments ? 'NoComments' : 'NoReplies') : 'DiscussionStarted')}\n              </span>\n            </div>\n          ),\n        ]);\n      }).flat();\n\n      if (!withUsers) return senderGroupElements;\n\n      const lastMessageOrAlbum = senderGroup[senderGroup.length - 1];\n      const lastMessage = isAlbum(lastMessageOrAlbum) ? lastMessageOrAlbum.mainMessage : lastMessageOrAlbum;\n      const lastMessageId = getMessageOriginalId(lastMessage);\n      const lastAppearanceOrder = messageCountToAnimate - appearanceIndex;\n\n      const isTopicTopMessage = lastMessage.id === threadId;\n      const isOwn = isOwnMessage(lastMessage);\n\n      const firstMessageOrAlbum = senderGroup[0];\n      const firstMessage = isAlbum(firstMessageOrAlbum) ? firstMessageOrAlbum.mainMessage : firstMessageOrAlbum;\n      const firstMessageId = getMessageOriginalId(firstMessage);\n\n      const key = `${firstMessageId}-${lastMessageId}`;\n      const id = (firstMessageId === lastMessageId) ? `message-group-${firstMessageId}`\n        : `message-group-${firstMessageId}-${lastMessageId}`;\n\n      const withAvatar = withUsers && !isOwn && (!isTopicTopMessage || !isComments);\n      return (\n        <SenderGroupContainer\n          key={key}\n          id={id}\n          message={lastMessage}\n          withAvatar={withAvatar}\n          appearanceOrder={lastAppearanceOrder}\n          canPost={canPost}\n        >\n          {senderGroupElements}\n        </SenderGroupContainer>\n      );\n    });\n  }\n\n  const dateGroups = messageGroups.map((\n    dateGroup: MessageDateGroup,\n    dateGroupIndex: number,\n    dateGroupsArray: MessageDateGroup[],\n  ) => {\n    const senderGroups = calculateSenderGroups(dateGroup, dateGroupIndex, dateGroupsArray);\n\n    return (\n      <div\n        className={buildClassName('message-date-group', !(nameChangeDate || photoChangeDate)\n        && dateGroupIndex === 0 && 'first-message-date-group')}\n        key={dateGroup.datetime}\n        onMouseDown={preventMessageInputBlur}\n        teactFastList\n      >\n        <div\n          className={buildClassName('sticky-date', areDatesClickable && 'interactive')}\n          key=\"date-header\"\n          onMouseDown={preventMessageInputBlur}\n          onClick={areDatesClickable ? () => openHistoryCalendar({ selectedAt: dateGroup.datetime }) : undefined}\n        >\n          <span dir=\"auto\">\n            {isSchedule && dateGroup.originalDate === SCHEDULED_WHEN_ONLINE && (\n              oldLang('MessageScheduledUntilOnline')\n            )}\n            {isSchedule && dateGroup.originalDate !== SCHEDULED_WHEN_ONLINE && (\n              oldLang('MessageScheduledOn', formatHumanDate(oldLang, dateGroup.datetime, undefined, true))\n            )}\n            {!isSchedule && formatHumanDate(oldLang, dateGroup.datetime)}\n          </span>\n        </div>\n        {senderGroups.flat()}\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"messages-container\" teactFastList>\n      {withHistoryTriggers && <div ref={backwardsTriggerRef} key=\"backwards-trigger\" className=\"backwards-trigger\" />}\n      {shouldRenderAccountInfo\n        && <MessageListAccountInfo key={`account_info_${chatId}`} chatId={chatId} hasMessages />}\n      {dateGroups.flat()}\n      {withHistoryTriggers && (\n        <div\n          ref={forwardsTriggerRef}\n          key=\"forwards-trigger\"\n          className=\"forwards-trigger\"\n        />\n      )}\n      <div\n        ref={fabTriggerRef}\n        key=\"fab-trigger\"\n        className=\"fab-trigger\"\n      />\n      {canShowAds && isViewportNewest && (\n        <SponsoredMessage\n          key={chatId}\n          chatId={chatId}\n          containerRef={containerRef}\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MessageListContent);\n","import type { ElementRef } from '../../../lib/teact/teact';\nimport { useEffect, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { MessageListType } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { MESSAGE_LIST_SENSITIVE_AREA } from '../../../util/browser/windowEnvironment';\nimport { debounce } from '../../../util/schedulers';\n\nimport { useDebouncedSignal } from '../../../hooks/useAsyncResolvers';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport { useSignalEffect } from '../../../hooks/useSignalEffect';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nconst FAB_THRESHOLD = 50;\nconst NOTCH_THRESHOLD = 1; // Notch has zero height so we at least need a 1px margin to intersect\nconst CONTAINER_HEIGHT_DEBOUNCE = 200;\nconst TOOLS_FREEZE_TIMEOUT = 350; // Approximate message sending animation duration\n\nexport default function useScrollHooks(\n  type: MessageListType,\n  containerRef: ElementRef<HTMLDivElement>,\n  messageIds: number[],\n  getContainerHeight: Signal<number | undefined>,\n  isViewportNewest: boolean,\n  isUnread: boolean,\n  onScrollDownToggle: BooleanToVoidFunction | undefined,\n  onNotchToggle: AnyToVoidFunction | undefined,\n  isReady: boolean,\n) {\n  const { loadViewportMessages } = getActions();\n\n  const [loadMoreBackwards, loadMoreForwards] = useMemo(\n    () => (type === 'thread' ? [\n      debounce(() => loadViewportMessages({ direction: LoadMoreDirection.Backwards }), 1000, true, false),\n      debounce(() => loadViewportMessages({ direction: LoadMoreDirection.Forwards }), 1000, true, false),\n    ] : []),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [loadViewportMessages, messageIds],\n  );\n\n  const backwardsTriggerRef = useRef<HTMLDivElement>();\n  const forwardsTriggerRef = useRef<HTMLDivElement>();\n  const fabTriggerRef = useRef<HTMLDivElement>();\n\n  const toggleScrollTools = useLastCallback(() => {\n    if (!isReady) return;\n\n    if (!messageIds?.length) {\n      onScrollDownToggle?.(false);\n      onNotchToggle?.(false);\n\n      return;\n    }\n\n    if (!isViewportNewest) {\n      onScrollDownToggle?.(true);\n      onNotchToggle?.(true);\n\n      return;\n    }\n\n    const container = containerRef.current;\n    const fabTrigger = fabTriggerRef.current;\n    if (!container || !fabTrigger) return;\n\n    const { offsetHeight, scrollHeight, scrollTop } = container;\n    const fabOffsetTop = fabTrigger.offsetTop;\n    const scrollBottom = Math.round(fabOffsetTop - scrollTop - offsetHeight);\n    const isNearBottom = scrollBottom <= FAB_THRESHOLD;\n    const isAtBottom = scrollBottom <= NOTCH_THRESHOLD;\n\n    if (scrollHeight === 0) return;\n\n    onScrollDownToggle?.(isUnread ? !isAtBottom : !isNearBottom);\n    onNotchToggle?.(!isAtBottom);\n  });\n\n  const {\n    observe: observeIntersectionForHistory,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    margin: MESSAGE_LIST_SENSITIVE_AREA,\n  }, (entries) => {\n    if (!loadMoreForwards || !loadMoreBackwards) {\n      return;\n    }\n\n    entries.forEach(({ isIntersecting, target }) => {\n      if (!isIntersecting) return;\n\n      if (target.className === 'backwards-trigger') {\n        loadMoreBackwards();\n      }\n\n      if (target.className === 'forwards-trigger') {\n        loadMoreForwards();\n      }\n    });\n  });\n\n  const withHistoryTriggers = messageIds && messageIds.length > 1;\n\n  useOnIntersect(backwardsTriggerRef, withHistoryTriggers ? observeIntersectionForHistory : undefined);\n  useOnIntersect(forwardsTriggerRef, withHistoryTriggers ? observeIntersectionForHistory : undefined);\n\n  const {\n    observe: observeIntersectionForFab,\n    freeze: freezeForFab,\n    unfreeze: unfreezeForFab,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    margin: FAB_THRESHOLD * 2,\n    throttleScheduler: requestMeasure,\n  }, toggleScrollTools);\n\n  useOnIntersect(fabTriggerRef, observeIntersectionForFab);\n\n  const {\n    observe: observeIntersectionForNotch,\n    freeze: freezeForNotch,\n    unfreeze: unfreezeForNotch,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    margin: NOTCH_THRESHOLD,\n    throttleScheduler: requestMeasure,\n  }, toggleScrollTools);\n\n  useOnIntersect(fabTriggerRef, observeIntersectionForNotch);\n\n  useEffect(() => {\n    if (isReady) {\n      toggleScrollTools();\n    }\n  }, [isReady, toggleScrollTools]);\n\n  const freezeShortly = useLastCallback(() => {\n    freezeForFab();\n    freezeForNotch();\n\n    setTimeout(() => {\n      unfreezeForNotch();\n      unfreezeForFab();\n    }, TOOLS_FREEZE_TIMEOUT);\n  });\n\n  // Workaround for FAB and notch flickering with tall incoming message\n  useSyncEffect(freezeShortly, [freezeShortly, messageIds]);\n\n  // Workaround for notch flickering when opening Composer Embedded Message\n  const getContainerHeightDebounced = useDebouncedSignal(getContainerHeight, CONTAINER_HEIGHT_DEBOUNCE);\n  useSignalEffect(freezeShortly, [freezeShortly, getContainerHeightDebounced]);\n\n  return {\n    withHistoryTriggers,\n    backwardsTriggerRef,\n    forwardsTriggerRef,\n    fabTriggerRef,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { MessageListType } from '../../types';\n\nimport { REM } from '../common/helpers/mediaDimensions';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport TopicIcon from '../common/TopicIcon';\n\nimport './NoMessages.scss';\n\nconst ICON_SIZE = 3 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  isChatWithSelf?: boolean;\n  type: MessageListType;\n  isGroupChatJustCreated?: boolean;\n  topic?: ApiTopic;\n};\n\nconst NoMessages: FC<OwnProps> = ({\n  isChatWithSelf,\n  type,\n  isGroupChatJustCreated,\n  topic,\n}) => {\n  const lang = useOldLang();\n\n  if (type === 'scheduled') {\n    return renderScheduled(lang);\n  }\n\n  if (isChatWithSelf) {\n    return renderSavedMessages(lang);\n  }\n\n  if (isGroupChatJustCreated) {\n    return renderGroup(lang);\n  }\n\n  if (topic) {\n    return renderTopic(lang, topic);\n  }\n\n  return (\n    <div className=\"empty\"><span>{lang('NoMessages')}</span></div>\n  );\n};\n\nfunction renderTopic(lang: OldLangFn, topic: ApiTopic) {\n  return (\n    <div className=\"NoMessages\">\n      <div className=\"wrapper\">\n        <TopicIcon\n          topic={topic}\n          size={ICON_SIZE}\n          className=\"no-messages-icon topic-icon\"\n        />\n        <h3 className=\"title\">{lang('Chat.EmptyTopicPlaceholder.Title')}</h3>\n        <p className=\"description topic-description\">{renderText(lang('Chat.EmptyTopicPlaceholder.Text'), ['br'])}</p>\n      </div>\n    </div>\n  );\n}\n\nfunction renderScheduled(lang: OldLangFn) {\n  return (\n    <div className=\"empty\"><span>{lang('ScheduledMessages.EmptyPlaceholder')}</span></div>\n  );\n}\n\nfunction renderSavedMessages(lang: OldLangFn) {\n  return (\n    <div className=\"NoMessages\">\n      <div className=\"wrapper\">\n        <Icon name=\"cloud-download\" className=\"no-messages-icon\" />\n        <h3 className=\"title\">{lang('Conversation.CloudStorageInfo.Title')}</h3>\n        <ul className=\"description\">\n          <li>{lang('Conversation.ClousStorageInfo.Description1')}</li>\n          <li>{lang('Conversation.ClousStorageInfo.Description2')}</li>\n          <li>{lang('Conversation.ClousStorageInfo.Description3')}</li>\n          <li>{lang('Conversation.ClousStorageInfo.Description4')}</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nfunction renderGroup(lang: OldLangFn) {\n  return (\n    <div className=\"NoMessages\">\n      <div className=\"wrapper\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <h3 className=\"title\">{lang('EmptyGroupInfo.Title')}</h3>\n        <p className=\"description\">{lang('EmptyGroupInfo.Subtitle')}</p>\n        <ul className=\"list-checkmarks\">\n          <li>{lang('EmptyGroupInfo.Line1')}</li>\n          <li>{lang('EmptyGroupInfo.Line2')}</li>\n          <li>{lang('EmptyGroupInfo.Line3')}</li>\n          <li>{lang('EmptyGroupInfo.Line4')}</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(NoMessages);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"J2RfusJI\",\"button\":\"Nz8BOo0i\",\"disabled\":\"zHsizIwX\",\"inner\":\"C90W_KKX\",\"icons-container\":\"Qi7tZATP\",\"iconsContainer\":\"Qi7tZATP\",\"animated-unlock\":\"lfcZJyxp\",\"animatedUnlock\":\"lfcZJyxp\",\"comments-icon\":\"zd5EAc5e\",\"commentsIcon\":\"zd5EAc5e\",\"description\":\"E_YZ3IQs\",\"starIconContainer\":\"IL_EHscS\",\"starIcon\":\"C_e1ij6A\"};","import { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\n\nimport { getPeerTitle, isApiPeerUser } from '../../global/helpers/peers';\nimport { selectPeer, selectTheme, selectThemeValues } from '../../global/selectors';\nimport { formatStarsAsIcon } from '../../util/localization/format';\nimport { LOCAL_TGS_URLS } from '../common/helpers/animatedAssets';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../common/AnimatedIconWithPreview';\nimport Icon from '../common/icons/Icon';\nimport Sparkles from '../common/Sparkles';\nimport Button from '../ui/Button';\n\nimport styles from './RequirementToContactMessage.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  paidMessagesStars?: number;\n};\n\ntype StateProps = {\n  patternColor?: string;\n  peer?: ApiPeer;\n};\n\nfunction RequirementToContactMessage({\n  patternColor, peer, paidMessagesStars,\n}: OwnProps & StateProps) {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { openPremiumModal, openStarsBalanceModal } = getActions();\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  const handleGetMoreStars = useLastCallback(() => {\n    openStarsBalanceModal({});\n  });\n\n  if (!peer) return undefined;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.inner}>\n        <div className={styles.iconsContainer}>\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.Unlock}\n            size={54}\n            color={patternColor}\n            className={styles.animatedUnlock}\n          />\n          <Icon name=\"comments-sticker\" className={styles.commentsIcon} />\n        </div>\n        <span className={styles.description}>\n          {\n            paidMessagesStars\n              ? lang(isApiPeerUser(peer) ? 'MessagesPlaceholderPaidUser' : 'MessagesPlaceholderPaidChannel', {\n                peer: getPeerTitle(lang, peer),\n                amount: formatStarsAsIcon(lang,\n                  paidMessagesStars,\n                  {\n                    asFont: true,\n                    className: styles.starIcon,\n                    containerClassName: styles.starIconContainer,\n                  }),\n              }, {\n                withNodes: true,\n                withMarkdown: true,\n              })\n              : renderText(oldLang('MessageLockedPremium', getPeerTitle(lang, peer)), ['simple_markdown'])\n          }\n        </span>\n        <Button\n          color=\"translucent-black\"\n          size=\"default\"\n          pill\n          onClick={paidMessagesStars ? handleGetMoreStars : handleOpenPremiumModal}\n          className={styles.button}\n        >\n          {\n            paidMessagesStars\n              ? (\n                <>\n                  {lang('ButtonBuyStars')}\n                  <Sparkles preset=\"button\" />\n                </>\n              )\n              : oldLang('MessagePremiumUnlock')\n          }\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(\n  withGlobal<OwnProps>((global, { peerId: userId }): Complete<StateProps> => {\n    const theme = selectTheme(global);\n    const { patternColor } = selectThemeValues(global, theme) || {};\n    const peer = selectPeer(global, userId);\n\n    return {\n      patternColor,\n      peer,\n    };\n  })(RequirementToContactMessage),\n);\n","import type { FC } from '@teact';\nimport { beginHeavyAnimation, memo, useEffect, useMemo, useRef } from '@teact';\nimport { addExtraClass, removeExtraClass } from '@teact/teact-dom';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChatFullInfo, ApiMessage, ApiRestrictionReason, ApiTopic } from '../../api/types';\nimport type { OnIntersectPinnedMessage } from './hooks/usePinnedMessage';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { LoadMoreDirection, type MessageListType, type ThreadId } from '../../types';\n\nimport {\n  ANIMATION_END_DELAY,\n  ANONYMOUS_USER_ID,\n  MESSAGE_LIST_SLICE,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { forceMeasure, requestForcedReflow, requestMeasure } from '../../lib/fasterdom/fasterdom';\nimport {\n  getIsSavedDialog,\n  getMessageHtmlId,\n  isAnonymousForwardsChat,\n  isChatChannel,\n  isChatGroup,\n  isChatMonoforum,\n  isSystemBot,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectChatLastMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentMessageIds,\n  selectFirstUnreadId,\n  selectFocusedMessageId,\n  selectIsChatProtected,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsViewportNewest,\n  selectLastScrollOffset,\n  selectMonoforumChannel,\n  selectPerformanceSettingsValue,\n  selectScrollOffset,\n  selectTabState,\n  selectThreadInfo,\n  selectTopic,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectIsChatRestricted } from '../../global/selectors/chats';\nimport { selectActiveRestrictionReasons, selectCurrentMessageList } from '../../global/selectors/messages';\nimport animateScroll, { isAnimatingScroll, restartCurrentScrollAnimation } from '../../util/animateScroll';\nimport buildClassName from '../../util/buildClassName';\nimport { isUserId } from '../../util/entities/ids';\nimport { orderBy } from '../../util/iteratees';\nimport { isLocalMessageId } from '../../util/keys/messageKey';\nimport resetScroll from '../../util/resetScroll';\nimport { debounce, onTickEnd } from '../../util/schedulers';\nimport getOffsetToContainer from '../../util/visibility/getOffsetToContainer';\nimport { groupMessages } from './helpers/groupMessages';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../hooks/useLayoutEffectWithPrevDeps';\nimport useNativeCopySelectedMessages from '../../hooks/useNativeCopySelectedMessages';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport { isBackgroundModeActive } from '../../hooks/window/useBackgroundMode';\nimport useContainerHeight from './hooks/useContainerHeight';\nimport useStickyDates from './hooks/useStickyDates';\n\nimport Loading from '../ui/Loading';\nimport Transition from '../ui/Transition.tsx';\nimport ContactGreeting from './ContactGreeting';\nimport MessageListAccountInfo from './MessageListAccountInfo';\nimport MessageListContent from './MessageListContent';\nimport NoMessages from './NoMessages';\nimport RequirementToContactMessage from './RequirementToContactMessage';\n\nimport './MessageList.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  type: MessageListType;\n  isComments?: boolean;\n  canPost: boolean;\n  isReady: boolean;\n  withBottomShift?: boolean;\n  withDefaultBg: boolean;\n  isContactRequirePremium?: boolean;\n  paidMessagesStars?: number;\n  isQuickPreview?: boolean;\n  onScrollDownToggle?: BooleanToVoidFunction;\n  onNotchToggle?: AnyToVoidFunction;\n  onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n};\n\ntype StateProps = {\n  isChatLoaded?: boolean;\n  isChannelChat?: boolean;\n  isGroupChat?: boolean;\n  isChatMonoforum?: boolean;\n  isChatWithSelf?: boolean;\n  isSystemBotChat?: boolean;\n  isAnonymousForwards?: boolean;\n  isCreator?: boolean;\n  isChannelWithAvatars?: boolean;\n  isBot?: boolean;\n  isNonContact?: boolean;\n  nameChangeDate?: number;\n  photoChangeDate?: number;\n  isSynced?: boolean;\n  messageIds?: number[];\n  messagesById?: Record<number, ApiMessage>;\n  firstUnreadId?: number;\n  isViewportNewest?: boolean;\n  isRestricted?: boolean;\n  restrictionReasons?: ApiRestrictionReason[];\n  focusingId?: number;\n  isSelectModeActive?: boolean;\n  lastMessage?: ApiMessage;\n  hasLinkedChat?: boolean;\n  topic?: ApiTopic;\n  noMessageSendingAnimation?: boolean;\n  isServiceNotificationsChat?: boolean;\n  isEmptyThread?: boolean;\n  isForum?: boolean;\n  currentUserId: string;\n  isAccountFrozen?: boolean;\n  areAdsEnabled?: boolean;\n  channelJoinInfo?: ApiChatFullInfo['joinInfo'];\n  isChatProtected?: boolean;\n  hasCustomGreeting?: boolean;\n  isAppConfigLoaded?: boolean;\n  monoforumChannelId?: string;\n  canTranslate?: boolean;\n  translationLanguage?: string;\n  shouldAutoTranslate?: boolean;\n  isActive?: boolean;\n};\n\nenum Content {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  Loading,\n  Restricted,\n  StarsRequired,\n  PremiumRequired,\n  AccountInfo,\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  ContactGreeting,\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  NoMessages,\n  MessageList,\n}\n\nconst MESSAGE_REACTIONS_POLLING_INTERVAL = 20 * 1000;\nconst MESSAGE_COMMENTS_POLLING_INTERVAL = 20 * 1000;\nconst MESSAGE_FACT_CHECK_UPDATE_INTERVAL = 5 * 1000;\nconst MESSAGE_STORY_POLLING_INTERVAL = 5 * 60 * 1000;\nconst BOTTOM_THRESHOLD = 50;\nconst UNREAD_DIVIDER_TOP = 10;\nconst SCROLL_DEBOUNCE = 200;\nconst MESSAGE_ANIMATION_DURATION = 500;\nconst BOTTOM_FOCUS_MARGIN = 20;\nconst SELECT_MODE_ANIMATION_DURATION = 200;\nconst UNREAD_DIVIDER_CLASS = 'unread-divider';\n\nconst runDebouncedForScroll = debounce((cb) => cb(), SCROLL_DEBOUNCE, false);\n\nconst MessageList: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  type,\n  isChatLoaded,\n  isForum,\n  isChannelChat,\n  isGroupChat,\n  isChannelWithAvatars,\n  canPost,\n  isSynced,\n  isActive,\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  isChatMonoforum,\n  isReady,\n  isChatWithSelf,\n  isSystemBotChat,\n  isAnonymousForwards,\n  isCreator,\n  isBot,\n  isNonContact,\n  nameChangeDate,\n  photoChangeDate,\n  messageIds,\n  messagesById,\n  firstUnreadId,\n  isComments,\n  isViewportNewest,\n  isRestricted,\n  restrictionReasons,\n  isEmptyThread,\n  focusingId,\n  isSelectModeActive,\n  lastMessage,\n  hasLinkedChat,\n  withBottomShift,\n  withDefaultBg,\n  topic,\n  noMessageSendingAnimation,\n  isServiceNotificationsChat,\n  currentUserId,\n  isContactRequirePremium,\n  paidMessagesStars,\n  areAdsEnabled,\n  channelJoinInfo,\n  isChatProtected,\n  isAccountFrozen,\n  hasCustomGreeting,\n  monoforumChannelId,\n  isAppConfigLoaded,\n  canTranslate,\n  translationLanguage,\n  shouldAutoTranslate,\n  isQuickPreview,\n  onIntersectPinnedMessage,\n  onScrollDownToggle,\n  onNotchToggle,\n}) => {\n  const {\n    loadViewportMessages, setScrollOffset, loadSponsoredMessages, loadMessageReactions, copyMessagesByIds,\n    loadMessageViews, loadPeerStoriesByIds, loadFactChecks, requestChatTranslation,\n  } = getActions();\n\n  const containerRef = useRef<HTMLDivElement>();\n\n  // We update local cached `scrollOffsetRef` when opening chat.\n  // Then we update global version every second on scrolling.\n  const scrollOffsetRef = useRef<number>(\n    (type === 'thread' && selectScrollOffset(getGlobal(), chatId, threadId))\n    || selectLastScrollOffset(getGlobal(), chatId, threadId)\n    || 0,\n  );\n\n  const anchorIdRef = useRef<string>();\n  const anchorTopRef = useRef<number>();\n  const listItemElementsRef = useRef<HTMLDivElement[]>();\n  const memoFirstUnreadIdRef = useRef<number>();\n  const memoUnreadDividerBeforeIdRef = useRef<number | undefined>();\n  const memoFocusingIdRef = useRef<number>();\n  const isScrollTopJustUpdatedRef = useRef(false);\n  const shouldAnimateAppearanceRef = useRef(Boolean(lastMessage));\n\n  const isSavedDialog = getIsSavedDialog(chatId, threadId, currentUserId);\n  const hasOpenChatButton = isSavedDialog && threadId !== ANONYMOUS_USER_ID;\n\n  const areMessagesLoaded = Boolean(messageIds);\n\n  const isPrivate = isUserId(chatId);\n  const withUsers = Boolean((!isPrivate && !isChannelChat)\n    || isChatWithSelf || isSystemBotChat || isAnonymousForwards || isChannelWithAvatars);\n\n  useSyncEffect(() => {\n    // We only need it first time when message list appears\n    if (areMessagesLoaded) {\n      onTickEnd(() => {\n        shouldAnimateAppearanceRef.current = false;\n      });\n    }\n  }, [areMessagesLoaded]);\n\n  // Updated every time (to be used from intersection callback closure)\n  useSyncEffect(() => {\n    memoFirstUnreadIdRef.current = firstUnreadId;\n  }, [firstUnreadId]);\n\n  useEffect(() => {\n    const canHaveAds = isChannelChat || isBot;\n    if (areAdsEnabled && canHaveAds && isSynced && isReady && isAppConfigLoaded) {\n      loadSponsoredMessages({ peerId: chatId });\n    }\n  }, [chatId, isSynced, isReady, isChannelChat, isBot, areAdsEnabled, isAppConfigLoaded]);\n\n  // Updated only once when messages are loaded (as we want the unread divider to keep its position)\n  useSyncEffect(() => {\n    if (areMessagesLoaded) {\n      memoUnreadDividerBeforeIdRef.current = memoFirstUnreadIdRef.current;\n    }\n  }, [areMessagesLoaded]);\n\n  useSyncEffect(() => {\n    memoFocusingIdRef.current = focusingId;\n  }, [focusingId]);\n\n  // Enable auto translation for the chat if it's available\n  useEffect(() => {\n    if (!shouldAutoTranslate || !canTranslate) return;\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  }, [shouldAutoTranslate, canTranslate, translationLanguage, chatId]);\n\n  useNativeCopySelectedMessages(copyMessagesByIds);\n\n  const messageGroups = useMemo(() => {\n    if (!messageIds?.length || !messagesById) {\n      return undefined;\n    }\n\n    const listedMessages: ApiMessage[] = [];\n    messageIds.forEach((id, index, arr) => {\n      const prevMessage = listedMessages[listedMessages.length - 1];\n\n      const message = messagesById[id];\n      if (!message) {\n        return;\n      }\n\n      const { shouldAppendJoinMessage, shouldAppendJoinMessageAfterCurrent } = (() => {\n        if (!channelJoinInfo || type !== 'thread') return undefined;\n        if (prevMessage\n          && prevMessage.date < channelJoinInfo.joinedDate && channelJoinInfo.joinedDate <= message.date) {\n          return { shouldAppendJoinMessage: true, shouldAppendJoinMessageAfterCurrent: false };\n        }\n\n        if (index === arr.length - 1 && message.date < channelJoinInfo.joinedDate) {\n          return {\n            shouldAppendJoinMessage: true,\n            shouldAppendJoinMessageAfterCurrent: true,\n          };\n        }\n\n        return undefined;\n      })() || {};\n\n      if (shouldAppendJoinMessageAfterCurrent) {\n        listedMessages.push(message);\n      }\n\n      if (shouldAppendJoinMessage) {\n        const lastMessageId = shouldAppendJoinMessageAfterCurrent ? message.id : (prevMessage?.id || (message.id - 1));\n        listedMessages.push({\n          id: generateChannelJoinMessageId(lastMessageId),\n          chatId: message.chatId,\n          date: channelJoinInfo!.joinedDate,\n          isOutgoing: false,\n          content: {\n            action: {\n              mediaType: 'action',\n              type: 'channelJoined',\n              inviterId: channelJoinInfo?.inviterId,\n              isViaRequest: channelJoinInfo?.isViaRequest || undefined,\n            },\n          },\n        } satisfies ApiMessage);\n      }\n\n      if (!shouldAppendJoinMessageAfterCurrent) {\n        listedMessages.push(message);\n      }\n    });\n\n    // Service notifications have local IDs which may be not in sync with real message history\n    const orderRule: (keyof ApiMessage)[] = type === 'scheduled' || isServiceNotificationsChat\n      ? ['date', 'id']\n      : ['id'];\n\n    return listedMessages.length\n      ? groupMessages(\n        orderBy(listedMessages, orderRule),\n        memoUnreadDividerBeforeIdRef.current,\n        !isForum ? Number(threadId) : undefined,\n        isChatWithSelf,\n        withUsers,\n      )\n      : undefined;\n  }, [withUsers,\n    messageIds, messagesById, type,\n    isServiceNotificationsChat, isForum,\n    threadId, isChatWithSelf, channelJoinInfo]);\n\n  useInterval(() => {\n    if (!messageIds || !messagesById || type === 'scheduled' || isAccountFrozen || !isActive) return;\n    if (!isChannelChat && !isGroupChat) return;\n\n    const ids = messageIds.filter((id) => {\n      const message = messagesById[id];\n      return message && message.reactions && !message.content.action;\n    });\n\n    if (!ids.length) return;\n\n    loadMessageReactions({ chatId, ids });\n  }, MESSAGE_REACTIONS_POLLING_INTERVAL);\n\n  useInterval(() => {\n    if (!messageIds || !messagesById || type === 'scheduled' || !isActive) {\n      return;\n    }\n    const storyDataList = messageIds.map((id) => messagesById[id]?.content.storyData).filter(Boolean);\n\n    if (!storyDataList.length) return;\n\n    const storiesByPeerIds = storyDataList.reduce((acc, storyData) => {\n      const { peerId, id } = storyData;\n      if (!acc[peerId]) {\n        acc[peerId] = [];\n      }\n      acc[peerId].push(id);\n      return acc;\n    }, {} as Record<string, number[]>);\n\n    Object.entries(storiesByPeerIds).forEach(([peerId, storyIds]) => {\n      loadPeerStoriesByIds({ peerId, storyIds });\n    });\n  }, MESSAGE_STORY_POLLING_INTERVAL);\n\n  useInterval(() => {\n    if (!messageIds || !messagesById || threadId !== MAIN_THREAD_ID || type === 'scheduled' || !isActive) {\n      return;\n    }\n    const global = getGlobal();\n    const ids = messageIds.filter((id) => selectThreadInfo(global, chatId, id)?.isCommentsInfo\n      || messagesById[id]?.viewsCount !== undefined);\n\n    if (!ids.length) return;\n\n    loadMessageViews({ chatId, ids });\n  }, MESSAGE_COMMENTS_POLLING_INTERVAL, true);\n\n  useInterval(() => {\n    if (!messageIds || !messagesById || threadId !== MAIN_THREAD_ID || type === 'scheduled' || !isActive) {\n      return;\n    }\n    const ids = messageIds.filter((id) => messagesById[id]?.factCheck?.shouldFetch);\n\n    if (!ids.length) return;\n\n    loadFactChecks({ chatId, ids });\n  }, MESSAGE_FACT_CHECK_UPDATE_INTERVAL);\n\n  const loadMoreAround = useMemo(() => {\n    if (type !== 'thread') {\n      return undefined;\n    }\n\n    return debounce(\n      () => loadViewportMessages({ direction: LoadMoreDirection.Around, chatId, threadId }),\n      1000,\n      true,\n      false,\n    );\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [loadViewportMessages, messageIds]);\n\n  const { isScrolled, updateStickyDates } = useStickyDates();\n\n  const handleScroll = useLastCallback(() => {\n    if (isScrollTopJustUpdatedRef.current) {\n      isScrollTopJustUpdatedRef.current = false;\n      return;\n    }\n\n    const container = containerRef.current;\n    if (!container) {\n      return;\n    }\n\n    if (!memoFocusingIdRef.current) {\n      updateStickyDates(container);\n    }\n\n    runDebouncedForScroll(() => {\n      const global = getGlobal();\n\n      const isFocusing = Boolean(selectTabState(global).focusedMessage?.chatId);\n      if (!isFocusing) {\n        onIntersectPinnedMessage?.({ shouldCancelWaiting: true });\n      }\n\n      if (!container.parentElement) {\n        return;\n      }\n\n      scrollOffsetRef.current = container.scrollHeight - container.scrollTop;\n\n      if (type === 'thread' && !isQuickPreview) {\n        setScrollOffset({ chatId, threadId, scrollOffset: scrollOffsetRef.current });\n      }\n    });\n  });\n\n  const [getContainerHeight, prevContainerHeightRef] = useContainerHeight(containerRef, canPost && !isSelectModeActive);\n\n  // Initial message loading\n  useEffect(() => {\n    if (!loadMoreAround || !isChatLoaded || isRestricted || focusingId) {\n      return;\n    }\n\n    // Loading history while sending a message can return the same message and cause ambiguity\n    const isLastMessageLocal = messageIds && isLocalMessageId(messageIds[messageIds.length - 1]);\n    if (isLastMessageLocal) {\n      return;\n    }\n\n    const container = containerRef.current!;\n\n    if (!messageIds || messageIds.length === 1 || (\n      messageIds.length < MESSAGE_LIST_SLICE / 2\n      && (container.firstElementChild as HTMLDivElement).clientHeight <= container.offsetHeight\n    )) {\n      loadMoreAround();\n    }\n  }, [isChatLoaded, messageIds, loadMoreAround, focusingId, isRestricted]);\n\n  const rememberScrollPositionRef = useStateRef(() => {\n    if (!messageIds || !listItemElementsRef.current) {\n      return;\n    }\n\n    const preservedItemElements = listItemElementsRef.current\n      .filter((element) => messageIds.includes(Number(element.dataset.messageId)));\n\n    // We avoid the very first item as it may be a partly-loaded album\n    // and also because it may be removed when messages limit is reached\n    const anchor = preservedItemElements[1] || preservedItemElements[0];\n    if (!anchor) {\n      return;\n    }\n\n    anchorIdRef.current = anchor.id;\n    anchorTopRef.current = anchor.getBoundingClientRect().top;\n  });\n\n  useSyncEffect(\n    () => forceMeasure(() => rememberScrollPositionRef.current()),\n    // This will run before modifying content and should match deps for `useLayoutEffectWithPrevDeps` below\n    [messageIds, isViewportNewest, rememberScrollPositionRef],\n  );\n  useEffect(\n    () => rememberScrollPositionRef.current(),\n    // This is only needed to react on signal updates\n    [getContainerHeight, rememberScrollPositionRef],\n  );\n\n  // Handles updated message list, takes care of scroll repositioning\n  useLayoutEffectWithPrevDeps(([prevMessageIds, prevIsViewportNewest]) => {\n    if (process.env.APP_ENV === 'perf') {\n      // eslint-disable-next-line no-console\n      console.time('scrollTop');\n    }\n\n    const containerHeight = getContainerHeight();\n    const prevContainerHeight = prevContainerHeightRef.current;\n    prevContainerHeightRef.current = containerHeight;\n\n    // Skip initial resize observer callback\n    if (\n      messageIds === prevMessageIds\n      && isViewportNewest === prevIsViewportNewest\n      && containerHeight !== prevContainerHeight\n      && prevContainerHeight === undefined\n    ) {\n      return;\n    }\n\n    const container = containerRef.current!;\n    listItemElementsRef.current = Array.from(container.querySelectorAll<HTMLDivElement>('.message-list-item'));\n    const lastItemElement = listItemElementsRef.current[listItemElementsRef.current.length - 1];\n    const firstUnreadElement = memoFirstUnreadIdRef.current\n      ? container.querySelector<HTMLDivElement>(`#${getMessageHtmlId(memoFirstUnreadIdRef.current)}`)\n      : undefined;\n\n    const hasLastMessageChanged = (\n      messageIds && prevMessageIds && messageIds[messageIds.length - 1] !== prevMessageIds[prevMessageIds.length - 1]\n    );\n    const hasViewportShifted = (\n      messageIds?.[0] !== prevMessageIds?.[0] && messageIds?.length === (MESSAGE_LIST_SLICE / 2 + 1)\n    );\n    const wasMessageAdded = hasLastMessageChanged && !hasViewportShifted;\n\n    // Add extra height when few messages to allow scroll animation\n    if (\n      isViewportNewest\n      && wasMessageAdded\n      && (messageIds && messageIds.length < MESSAGE_LIST_SLICE / 2)\n      && !container.parentElement!.classList.contains('force-messages-scroll')\n      && forceMeasure(() => (\n        (container.firstElementChild as HTMLDivElement).clientHeight <= container.offsetHeight * 2\n      ))\n    ) {\n      addExtraClass(container.parentElement!, 'force-messages-scroll');\n      container.parentElement!.classList.add('force-messages-scroll');\n\n      setTimeout(() => {\n        if (container.parentElement) {\n          removeExtraClass(container.parentElement, 'force-messages-scroll');\n        }\n      }, MESSAGE_ANIMATION_DURATION);\n    }\n\n    requestForcedReflow(() => {\n      const { scrollTop, scrollHeight, offsetHeight } = container;\n      const scrollOffset = scrollOffsetRef.current;\n\n      let bottomOffset = scrollOffset - (prevContainerHeight || offsetHeight);\n      if (wasMessageAdded) {\n        // If two new messages come at once (e.g. when bot responds) then the first message will update `scrollOffset`\n        // right away (before animation) which creates inconsistency until the animation completes. To work around that,\n        // we calculate `isAtBottom` with a \"buffer\" of the latest message height (this is approximate).\n        const lastItemHeight = lastItemElement ? lastItemElement.offsetHeight : 0;\n        bottomOffset -= lastItemHeight;\n      }\n      const isAtBottom = isViewportNewest && prevIsViewportNewest && bottomOffset <= BOTTOM_THRESHOLD;\n      const isAlreadyFocusing = messageIds && memoFocusingIdRef.current === messageIds[messageIds.length - 1];\n\n      // Animate incoming message, but if app is in background mode, scroll to the first unread\n      if (wasMessageAdded && isAtBottom && !isAlreadyFocusing) {\n        // Break out of `forceLayout`\n        requestMeasure(() => {\n          const shouldScrollToBottom = !isBackgroundModeActive() || !firstUnreadElement;\n          animateScroll({\n            container,\n            element: shouldScrollToBottom ? lastItemElement : firstUnreadElement,\n            position: shouldScrollToBottom ? 'end' : 'start',\n            margin: BOTTOM_FOCUS_MARGIN,\n            forceDuration: noMessageSendingAnimation ? 0 : undefined,\n          });\n        });\n      }\n\n      const isResized = prevContainerHeight !== undefined && prevContainerHeight !== containerHeight;\n      if (isResized && isAnimatingScroll()) {\n        return undefined;\n      }\n\n      const anchor = anchorIdRef.current && container.querySelector(`#${anchorIdRef.current}`);\n      const unreadDivider = (\n        !anchor\n        && memoUnreadDividerBeforeIdRef.current\n        && container.querySelector<HTMLDivElement>(`.${UNREAD_DIVIDER_CLASS}`)\n      );\n\n      let newScrollTop!: number;\n      if (isAtBottom && isResized) {\n        newScrollTop = scrollHeight - offsetHeight;\n      } else if (anchor) {\n        const newAnchorTop = anchor.getBoundingClientRect().top;\n        newScrollTop = scrollTop + (newAnchorTop - (anchorTopRef.current || 0));\n      } else if (unreadDivider) {\n        newScrollTop = Math.min(\n          getOffsetToContainer(unreadDivider, container).top - UNREAD_DIVIDER_TOP,\n          scrollHeight - scrollOffset,\n        );\n      } else {\n        newScrollTop = scrollHeight - scrollOffset;\n      }\n\n      return () => {\n        resetScroll(container, Math.ceil(newScrollTop));\n        restartCurrentScrollAnimation();\n\n        scrollOffsetRef.current = Math.max(Math.ceil(scrollHeight - newScrollTop), offsetHeight);\n\n        if (!memoFocusingIdRef.current) {\n          isScrollTopJustUpdatedRef.current = true;\n\n          requestMeasure(() => {\n            isScrollTopJustUpdatedRef.current = false;\n          });\n        }\n\n        if (process.env.APP_ENV === 'perf') {\n          // eslint-disable-next-line no-console\n          console.timeEnd('scrollTop');\n        }\n      };\n    });\n    // This should match deps for `useSyncEffect` above\n  }, [messageIds, isViewportNewest, getContainerHeight, prevContainerHeightRef, noMessageSendingAnimation]);\n\n  useEffectWithPrevDeps(([prevIsSelectModeActive]) => {\n    if (prevIsSelectModeActive !== undefined) {\n      beginHeavyAnimation(SELECT_MODE_ANIMATION_DURATION + ANIMATION_END_DELAY);\n    }\n  }, [isSelectModeActive]);\n\n  const noAvatars = Boolean(!withUsers || (isChannelChat && !isChannelWithAvatars));\n  const shouldRenderGreeting = isUserId(chatId) && !isChatWithSelf && !isBot && !isAnonymousForwards\n    && type === 'thread'\n    && (\n      (\n        !messageGroups && !lastMessage && messageIds\n        // Used to avoid flickering when deleting a greeting that has just been sent\n        && (!listItemElementsRef.current || listItemElementsRef.current.length === 0)\n      )\n      || (messageIds?.length === 1 && messagesById?.[messageIds[0]]?.content.action?.type === 'contactSignUp')\n      || (lastMessage?.content?.action?.type === 'contactSignUp')\n    );\n\n  const isGroupChatJustCreated = isGroupChat && isCreator\n    && messageIds?.length === 1 && messagesById?.[messageIds[0]]?.content.action?.type === 'chatCreate';\n  const isEmptyTopic = messageIds?.length === 1\n    && messagesById?.[messageIds[0]]?.content.action?.type === 'topicCreate';\n\n  const className = buildClassName(\n    'MessageList custom-scroll',\n    noAvatars && 'no-avatars',\n    !canPost && 'no-composer',\n    type === 'pinned' && 'type-pinned',\n    withBottomShift && 'with-bottom-shift',\n    withDefaultBg && 'with-default-bg',\n    isSelectModeActive && 'select-mode-active',\n    isScrolled && 'scrolled',\n    !isReady && 'is-animating',\n    hasOpenChatButton && 'saved-dialog',\n    isChatProtected && 'hide-on-print',\n  );\n\n  const hasMessages = Boolean((messageIds && messageGroups) || lastMessage);\n\n  useEffect(() => {\n    if (hasMessages) return;\n\n    onScrollDownToggle?.(false);\n  }, [hasMessages, onScrollDownToggle]);\n\n  const activeKey = isRestricted ? (\n    Content.Restricted\n  ) : paidMessagesStars && !hasMessages && !hasCustomGreeting ? (\n    Content.StarsRequired\n  ) : isContactRequirePremium && !hasMessages ? (\n    Content.PremiumRequired\n  ) : (isBot || isNonContact) && !hasMessages ? (\n    Content.AccountInfo\n  ) : shouldRenderGreeting ? (\n    Content.ContactGreeting\n  ) : messageIds && (!messageGroups || isGroupChatJustCreated || isEmptyTopic) ? (\n    Content.NoMessages\n  ) : hasMessages ? (\n    Content.MessageList\n  ) : (\n    Content.Loading\n  );\n\n  function renderContent() {\n    return activeKey === Content.Restricted ? (\n      <div className=\"empty\">\n        <span>\n          {restrictionReasons?.[0]?.text || `This is a private ${isChannelChat ? 'channel' : 'chat'}`}\n        </span>\n      </div>\n    ) : activeKey === Content.StarsRequired ? (\n      <RequirementToContactMessage paidMessagesStars={paidMessagesStars} peerId={monoforumChannelId || chatId} />\n    ) : activeKey === Content.PremiumRequired ? (\n      <RequirementToContactMessage peerId={chatId} />\n    ) : activeKey === Content.AccountInfo ? (\n      <MessageListAccountInfo chatId={chatId} hasMessages={hasMessages} />\n    ) : activeKey === Content.ContactGreeting ? (\n      <ContactGreeting key={chatId} userId={chatId} />\n    ) : activeKey === Content.NoMessages ? (\n      <NoMessages\n        chatId={chatId}\n        topic={topic}\n        type={type}\n        isChatWithSelf={isChatWithSelf}\n        isGroupChatJustCreated={isGroupChatJustCreated}\n      />\n    ) : activeKey === Content.MessageList ? (\n      <MessageListContent\n        canShowAds={areAdsEnabled && isChannelChat}\n        chatId={chatId}\n        isComments={isComments}\n        isChannelChat={isChannelChat}\n        isChatMonoforum={isChatMonoforum}\n        isSavedDialog={isSavedDialog}\n        messageIds={messageIds || [lastMessage!.id]}\n        messageGroups={messageGroups || groupMessages([lastMessage!])}\n        getContainerHeight={getContainerHeight}\n        isViewportNewest={Boolean(isViewportNewest)}\n        isUnread={Boolean(firstUnreadId)}\n        isEmptyThread={isEmptyThread}\n        withUsers={withUsers}\n        noAvatars={noAvatars}\n        containerRef={containerRef}\n        anchorIdRef={anchorIdRef}\n        memoUnreadDividerBeforeIdRef={memoUnreadDividerBeforeIdRef}\n        memoFirstUnreadIdRef={memoFirstUnreadIdRef}\n        threadId={threadId}\n        type={type}\n        isReady={isReady}\n        hasLinkedChat={hasLinkedChat}\n        isSchedule={messageGroups ? type === 'scheduled' : false}\n        shouldRenderAccountInfo={isBot || isNonContact}\n        nameChangeDate={nameChangeDate}\n        photoChangeDate={photoChangeDate}\n        noAppearanceAnimation={!messageGroups || !shouldAnimateAppearanceRef.current}\n        isQuickPreview={isQuickPreview}\n        onScrollDownToggle={onScrollDownToggle}\n        onNotchToggle={onNotchToggle}\n        onIntersectPinnedMessage={onIntersectPinnedMessage}\n        canPost={canPost}\n      />\n    ) : (\n      <Loading color=\"white\" backgroundColor=\"dark\" />\n    );\n  }\n\n  return (\n    <Transition\n      ref={containerRef}\n      className={className}\n      name=\"fade\"\n      activeKey={activeKey}\n      shouldCleanup\n      onScroll={handleScroll}\n      onMouseDown={preventMessageInputBlur}\n    >\n      {renderContent()}\n    </Transition>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId, type }): Complete<StateProps> => {\n    const currentUserId = global.currentUserId!;\n    const chat = selectChat(global, chatId);\n    const userFullInfo = selectUserFullInfo(global, chatId);\n    if (!chat) {\n      return { currentUserId } as Complete<StateProps>;\n    }\n\n    const messageIds = selectCurrentMessageIds(global, chatId, threadId, type);\n    const messagesById = type === 'scheduled'\n      ? selectChatScheduledMessages(global, chatId)\n      : selectChatMessages(global, chatId);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, currentUserId);\n\n    if (\n      threadId !== MAIN_THREAD_ID && !isSavedDialog && !chat?.isForum\n      && !(messagesById && threadId && messagesById[Number(threadId)])\n    ) {\n      return { currentUserId } as Complete<StateProps>;\n    }\n\n    const isRestricted = selectIsChatRestricted(global, chatId);\n    const restrictionReasons = selectActiveRestrictionReasons(global, chat?.restrictionReasons);\n    const lastMessage = selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const focusingId = selectFocusedMessageId(global, chatId);\n\n    const withLastMessageWhenPreloading = (\n      threadId === MAIN_THREAD_ID\n      && !messageIds && !chat.unreadCount && !focusingId && lastMessage && !lastMessage.groupedId\n    );\n\n    const chatBot = selectBot(global, chatId);\n    const isNonContact = Boolean(userFullInfo?.settings?.canAddContact);\n    const nameChangeDate = userFullInfo?.settings?.nameChangeDate;\n    const photoChangeDate = userFullInfo?.settings?.photoChangeDate;\n\n    const topic = selectTopic(global, chatId, threadId);\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isEmptyThread = !selectThreadInfo(global, chatId, threadId)?.messagesCount;\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    const areAdsEnabled = !isCurrentUserPremium || selectUserFullInfo(global, currentUserId)?.areAdsEnabled;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const hasCustomGreeting = Boolean(userFullInfo?.businessIntro);\n    const isAppConfigLoaded = global.isAppConfigLoaded;\n\n    const monoforumChannelId = selectMonoforumChannel(global, chatId)?.id;\n    const canTranslate = selectCanTranslateChat(global, chatId) && !chatFullInfo?.isTranslationDisabled;\n    const shouldAutoTranslate = chat?.hasAutoTranslation;\n    const translationLanguage = selectTranslationLanguage(global);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isActive = currentMessageList && currentMessageList.chatId === chatId\n      && currentMessageList.threadId === threadId && currentMessageList.type === type;\n\n    return {\n      isActive,\n      areAdsEnabled,\n      isChatLoaded: true,\n      isRestricted,\n      restrictionReasons,\n      isChannelChat: isChatChannel(chat),\n      isChatMonoforum: isChatMonoforum(chat),\n      isGroupChat: isChatGroup(chat),\n      isChannelWithAvatars: chat.areProfilesShown,\n      isCreator: chat.isCreator,\n      isChatWithSelf: selectIsChatWithSelf(global, chatId),\n      isSystemBotChat: isSystemBot(chatId),\n      isAnonymousForwards: isAnonymousForwardsChat(chatId),\n      isBot: Boolean(chatBot),\n      isNonContact,\n      nameChangeDate,\n      photoChangeDate,\n      isSynced: global.isSynced,\n      messageIds,\n      messagesById,\n      firstUnreadId: selectFirstUnreadId(global, chatId, threadId),\n      isViewportNewest: type !== 'thread' || selectIsViewportNewest(global, chatId, threadId),\n      focusingId,\n      isSelectModeActive: selectIsInSelectMode(global),\n      hasLinkedChat: chatFullInfo ? Boolean(chatFullInfo.linkedChatId) : undefined,\n      channelJoinInfo: chatFullInfo?.joinInfo,\n      topic,\n      noMessageSendingAnimation: !selectPerformanceSettingsValue(global, 'messageSendingAnimations'),\n      isServiceNotificationsChat: chatId === SERVICE_NOTIFICATIONS_USER_ID,\n      isForum: chat.isForum,\n      isEmptyThread,\n      currentUserId,\n      isChatProtected: selectIsChatProtected(global, chatId),\n      lastMessage: withLastMessageWhenPreloading ? lastMessage : undefined,\n      isAccountFrozen,\n      hasCustomGreeting,\n      isAppConfigLoaded,\n      monoforumChannelId,\n      canTranslate,\n      translationLanguage,\n      shouldAutoTranslate,\n    };\n  },\n)(MessageList));\n\nfunction generateChannelJoinMessageId(lastMessageId: number) {\n  return lastMessageId + 10e-7; // Smaller than smallest possible id with `getNextLocalMessageId`\n}\n","import { useMemo } from '../lib/teact/teact';\n\nimport getMessageIdsForSelectedText from '../util/getMessageIdsForSelectedText';\nimport { useHotkeys } from './useHotkeys';\nimport useLastCallback from './useLastCallback';\n\nconst useNativeCopySelectedMessages = (copyMessagesByIds: ({ messageIds }: { messageIds?: number[] }) => void) => {\n  const handleCopy = useLastCallback((e: KeyboardEvent) => {\n    const messageIds = getMessageIdsForSelectedText();\n\n    if (messageIds && messageIds.length > 1) {\n      e.preventDefault();\n      copyMessagesByIds({ messageIds });\n    }\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+C': handleCopy,\n  }), []));\n};\n\nexport default useNativeCopySelectedMessages;\n","import { requestMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\n\nconst DEBOUNCE = 1000;\nconst STICKY_TOP = 10;\n\nexport default function useStickyDates() {\n  // For some reason we can not synchronously hide a sticky element (from `useLayoutEffect`) when chat opens\n  // so we will add `position: sticky` only after first scroll. There would be no animation on the first show though.\n  const [isScrolled, markIsScrolled] = useFlag(false);\n\n  const runDebounced = useRunDebounced(DEBOUNCE, true);\n\n  const updateStickyDates = useLastCallback((container: HTMLDivElement) => {\n    markIsScrolled();\n\n    if (!document.body.classList.contains('is-scrolling-messages')) {\n      requestMutation(() => {\n        document.body.classList.add('is-scrolling-messages');\n      });\n    }\n\n    runDebounced(() => {\n      const stuckDateEl = findStuckDate(container);\n\n      requestMutation(() => {\n        const currentStuck = document.querySelector('.stuck');\n        if (currentStuck) {\n          currentStuck.classList.remove('stuck');\n        }\n\n        if (stuckDateEl) {\n          stuckDateEl.classList.add('stuck');\n        }\n\n        document.body.classList.remove('is-scrolling-messages');\n      });\n    });\n  });\n\n  return {\n    isScrolled,\n    updateStickyDates,\n  };\n}\n\nfunction findStuckDate(container: HTMLElement) {\n  const allElements = container.querySelectorAll<HTMLDivElement>('.sticky-date');\n  const containerTop = container.scrollTop;\n\n  const computedStyle = getComputedStyle(container);\n  const headerActionsHeight = parseInt(computedStyle.getPropertyValue('--middle-header-panes-height'), 10);\n\n  return Array.from(allElements).find((el) => {\n    const { offsetTop, offsetHeight } = el;\n    const top = offsetTop - containerTop;\n    return -offsetHeight <= top && top <= headerActionsHeight + STICKY_TOP;\n  });\n}\n","import type { ElementRef } from '../../../lib/teact/teact';\nimport { useEffect, useRef, useSignal } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nexport default function useContainerHeight(containerRef: ElementRef<HTMLDivElement>, isComposerVisible: boolean) {\n  const [getContainerHeight, setContainerHeight] = useSignal<number | undefined>();\n\n  // Container resize observer (caused by Composer reply/webpage panels)\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    setContainerHeight(entry.contentRect.height);\n  });\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const currentNormalHeight = Number(containerRef.current!.dataset.normalHeight) || 0;\n    const containerHeight = getContainerHeight();\n\n    if (containerHeight && containerHeight > currentNormalHeight && isComposerVisible) {\n      containerRef.current!.dataset.normalHeight = String(containerHeight);\n    }\n  }, [isComposerVisible, containerRef, getContainerHeight]);\n\n  const prevContainerHeight = useRef<number>();\n\n  return [getContainerHeight, prevContainerHeight] as const;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  const hasAvatarMediaViewer = withMediaViewer && !isSavedMessages;\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  useIntervalForceUpdate(UPDATE_INTERVAL);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={hasAvatarMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): Complete<StateProps> => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"cgAMX02q\",\"tag\":\"oIgI9O0L\",\"tagColorMore\":\"hZDqIz3W\"};","import { memo } from '../../../lib/teact/teact';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { getApiPeerColorClass } from '../../common/helpers/peerColor';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport styles from './ChatTags.module.scss';\n\nconst MAX_VISIBLE_TAGS = 3;\n\ntype OwnProps = {\n  orderedFolderIds?: number[];\n  chatFoldersById?: Record<number, ApiChatFolder>;\n};\n\nconst ChatTags = ({\n  orderedFolderIds,\n  chatFoldersById,\n}: OwnProps) => {\n  if (!orderedFolderIds) {\n    return undefined;\n  }\n\n  const visibleFolderIds = orderedFolderIds.slice(0, MAX_VISIBLE_TAGS);\n  const remainingCount = orderedFolderIds.length - visibleFolderIds.length;\n\n  return (\n    <div className={styles.wrapper}>\n      {visibleFolderIds.map((folderId) => {\n        const folder = chatFoldersById?.[folderId];\n        return folder && (\n          <div\n            key={folder.id}\n            className={buildClassName(\n              'ChatTags',\n              styles.tag,\n              getApiPeerColorClass({ color: folder.color }),\n            )}\n          >\n            {renderTextWithEntities({\n              text: folder.title.text,\n              entities: folder.title.entities,\n              noCustomEmojiPlayback: folder.noTitleAnimations,\n              emojiSize: 12,\n            })}\n          </div>\n        );\n      })}\n      {remainingCount > 0 && (\n        <div className={`ChatTags ${styles.tag} ${styles.tagColorMore}`}>\n          +\n          {remainingCount}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(ChatTags);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiChatFolder,\n  ApiDraft,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { ALL_FOLDER_ID, UNMUTE_TIMESTAMP } from '../../../config';\nimport {\n  groupStatefulContent,\n  isUserOnline,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectMonoforumChannel,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectSender,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getChatFolderIds } from '../../../util/folderManager';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\nimport ChatTags from './ChatTags';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  withTags?: boolean;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n  onDragLeave?: NoneToVoidFunction;\n  onReorderAnimationEnd?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  monoforumChannel?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n  isAccountFrozen?: boolean;\n  chatFolderIds?: number[];\n  orderedFolderIds?: number[];\n  chatFoldersById?: Record<number, ApiChatFolder>;\n  areTagsEnabled?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  monoforumChannel,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n  onDragLeave,\n  isAccountFrozen,\n  chatFolderIds,\n  orderedFolderIds,\n  chatFoldersById,\n  areTagsEnabled,\n  withTags,\n  onReorderAnimationEnd,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n    openFrozenAccountModal,\n    updateChatMutedState,\n    openQuickPreview,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages, isMonoforum } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const tagFolderIds = useMemo(() => {\n    const chatFolderIdsSet = new Set(chatFolderIds);\n\n    return orderedFolderIds?.filter((id) => {\n      if (!chatFolderIdsSet.has(id)) return undefined;\n\n      const isActive = id === folderId;\n      const isAll = id === ALL_FOLDER_ID;\n\n      const folder = chatFoldersById?.[id];\n      const hasColor = folder?.color !== undefined && folder.color !== -1;\n\n      return !isActive && !isAll && hasColor;\n    });\n  }, [orderedFolderIds, folderId, chatFoldersById, chatFolderIds]);\n\n  const shouldRenderTags = areTagsEnabled && withTags && Boolean(tagFolderIds?.length);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    onReorderAnimationEnd,\n    topics,\n    noForumTitle: shouldRenderTags,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback((e: React.MouseEvent) => {\n    if (e.altKey && !isSavedDialog && !isForum && !isPreview) {\n      e.preventDefault();\n      openQuickPreview({ id: chatId });\n      return;\n    }\n\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleUnmute = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    updateChatMutedState({ chatId, mutedUntil: UNMUTE_TIMESTAMP });\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleUnmute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n    topics,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    areTagsEnabled && withTags && 'chat-item-with-tags',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      withPortalForMenu\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      onDragLeave={onDragLeave}\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={isMonoforum ? monoforumChannel : peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          asMessageBubble={isMonoforum}\n          withStory={!user?.isSelf && !isMonoforum}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n            isSelected={isSelected}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className={buildClassName('info', areTagsEnabled && withTags && 'has-tags')}>\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={isMonoforum ? monoforumChannel! : peer}\n            isMonoforum={isMonoforum}\n            monoforumBadgeClassName=\"monoforum-badge\"\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n            withStatusTextColor={isSelected}\n          />\n          {isMuted && !isSavedDialog && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              hasMiniApp={user?.hasMainMiniApp}\n              topics={topics}\n              isSelected={isSelected}\n            />\n          )}\n        </div>\n        {shouldRenderTags && (\n          <ChatTags\n            orderedFolderIds={tagFolderIds}\n            chatFoldersById={chatFoldersById}\n          />\n        )}\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): Complete<StateProps> => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      } as Complete<StateProps>;\n    }\n\n    const chatFolderIds = getChatFolderIds(chatId);\n    const { areTagsEnabled } = global.chatFolders;\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { isOutgoing, forwardInfo } = lastMessage || {};\n    const savedDialogSender = isSavedDialog && forwardInfo?.fromId ? selectPeer(global, forwardInfo.fromId) : undefined;\n    const messageSender = lastMessage ? selectSender(global, lastMessage) : undefined;\n    const lastMessageSender = savedDialogSender || messageSender;\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const userStatus = selectUserStatus(global, chatId);\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const monoforumChannel = selectMonoforumChannel(global, chatId);\n\n    return {\n      chat,\n      isMuted: getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id)),\n      lastMessageSender,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      lastMessageOutgoingStatus: isOutgoing && lastMessage ? selectOutgoingStatus(global, lastMessage) : undefined,\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n      isAccountFrozen,\n      monoforumChannel,\n      chatFolderIds,\n      orderedFolderIds: global.chatFolders.orderedIds,\n      chatFoldersById: global.chatFolders.byId,\n      areTagsEnabled: areTagsEnabled && isPremium,\n    };\n  },\n)(Chat));\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport { PAID_MESSAGES_PURPOSE } from '../../../../config';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePaidMessageConfirmation(\n  starsForAllMessages: number,\n  isStarsBalanceModeOpen: boolean,\n  starsBalance: number,\n) {\n  const {\n    shouldPaidMessageAutoApprove,\n  } = getGlobal().settings.byKey;\n\n  const [shouldAutoApprove,\n    setAutoApprove] = useState(Boolean(shouldPaidMessageAutoApprove));\n  const [isWaitingStarsTopup, setIsWaitingStarsTopup] = useState(false);\n  const confirmPaymentHandlerRef = useRef<NoneToVoidFunction | undefined>(undefined);\n\n  const closeConfirmDialog = useLastCallback(() => {\n    getActions().closePaymentMessageConfirmDialogOpen();\n  });\n\n  useEffect(() => {\n    if (isWaitingStarsTopup && !isStarsBalanceModeOpen) {\n      setIsWaitingStarsTopup(false);\n\n      if (starsBalance > starsForAllMessages) {\n        confirmPaymentHandlerRef?.current?.();\n      }\n    }\n  }, [isWaitingStarsTopup, isStarsBalanceModeOpen, starsBalance, starsForAllMessages]);\n\n  const handleStarsTopup = useLastCallback(() => {\n    getActions().openStarsBalanceModal({\n      topup: {\n        balanceNeeded: starsForAllMessages,\n        purpose: PAID_MESSAGES_PURPOSE,\n      },\n    });\n    setIsWaitingStarsTopup(true);\n  });\n\n  const dialogHandler = useLastCallback(() => {\n    if (starsForAllMessages > starsBalance) {\n      handleStarsTopup();\n    } else {\n      confirmPaymentHandlerRef?.current?.();\n    }\n    getActions().closePaymentMessageConfirmDialogOpen();\n    if (shouldAutoApprove) getActions().setPaidMessageAutoApprove();\n  });\n\n  const handleWithConfirmation = <T extends (...args: any[]) => void>(\n    handler: T,\n    ...args: Parameters<T>\n  ) => {\n    if (starsForAllMessages) {\n      confirmPaymentHandlerRef.current = () => handler(...args);\n      if (!shouldPaidMessageAutoApprove) {\n        getActions().openPaymentMessageConfirmDialogOpen();\n        return;\n      }\n\n      if (starsForAllMessages > starsBalance) {\n        handleStarsTopup();\n        return;\n      }\n    }\n\n    handler(...args);\n  };\n\n  return {\n    closeConfirmDialog,\n    handleWithConfirmation,\n    dialogHandler,\n    shouldAutoApprove,\n    setAutoApprove,\n  };\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { IS_IOS } from '../../../../util/browser/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../../hooks/useLang';\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst VALID_TARGET_IDS = new Set([EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID]);\nconst CLOSEST_CONTENT_EDITABLE_SELECTOR = 'div[contenteditable]';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const {\n    showNotification,\n    updateShouldSaveAttachmentsCompression,\n    applyDefaultAttachmentsCompression } = getActions();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = (e.target as HTMLElement)?.closest(CLOSEST_CONTENT_EDITABLE_SELECTOR);\n      if (!input || !VALID_TARGET_IDS.has(input.id)) {\n        return;\n      }\n\n      e.preventDefault();\n\n      // Some extensions can trigger paste into their panels without focus\n      if (document.activeElement !== input) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text');\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && newAttachments?.length > 1) {\n        showNotification({\n          message: lang('MediaReplaceInvalidError', undefined, { pluralValue: newAttachments.length }),\n        });\n        return;\n      }\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: 1 }) });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({\n            message: lang('MediaReplaceInvalidError', undefined, { pluralValue: newAttachments.length }),\n          });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        updateShouldSaveAttachmentsCompression({ shouldSave: true });\n        applyDefaultAttachmentsCompression();\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiMessage } from '../../../../api/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE, EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport {\n  requestMeasure, requestNextMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n}: {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n        shouldKeepSuggestedPost: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n    const shouldUpdateSuggestedPost = draft?.suggestedPostInfo && !prevDraft?.suggestedPostInfo;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched && !shouldUpdateSuggestedPost) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n    if (shouldUpdateSuggestedPost) {\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    }\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({\n        chatId,\n        messageIds: [editedMessage.id],\n        isSchedule: type === 'scheduled',\n      });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm || switchWebview) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect, useRef } from '@teact';\nimport { getActions } from '../../../../global';\n\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport {\n  type ApiFormattedText,\n  type ApiMessageEntityTextUrl,\n  ApiMessageEntityTypes,\n} from '../../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../../config';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nexport default function useLoadLinkPreview({\n  getHtml,\n  chatId,\n  threadId,\n}: {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n}) {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n  } = getActions();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1])\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: (volume: number) => void) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array<ArrayBuffer>[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: (volume: number) => void) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { MessageListType, ThemeKey, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n} from '../../../global/helpers';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canAttachToDoLists: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ThemeKey;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  paidMessagesStars?: number;\n  onFileSelect: (files: File[]) => void;\n  onPollCreate: NoneToVoidFunction;\n  onTodoListCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n};\n\nconst AttachMenu = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canAttachToDoLists,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  canEditMedia,\n  editingMessage,\n  messageListType,\n  paidMessagesStars,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  onTodoListCreate,\n}: OwnProps) => {\n  const {\n    updateAttachmentSettings,\n  } = getActions();\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    updateAttachmentSettings({ shouldCompress: true });\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    updateAttachmentSettings({ shouldCompress: false });\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId\n          && bot.attachMenuPeerTypes && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>\n            {lang(messageListType === 'scheduled' && paidMessagesStars\n              ? 'DescriptionScheduledPaidMediaNotAllowed'\n              : 'DescriptionRestrictedMedia')}\n          </MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {oldLang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {oldLang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {oldLang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{oldLang('Poll')}</MenuItem>\n        )}\n        {canAttachToDoLists && !editingMessage && (\n          <MenuItem icon=\"select\" onClick={onTodoListCreate}>{lang('TitleToDoList')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  threadId?: ThreadId;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, threadId, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n\n                onClick={() => clickBotInlineButton({\n                  chatId: message.chatId, messageId: message.id, threadId, button,\n                })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): Complete<StateProps> => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n\n    const message = chatId ? selectChatMessage(global, chatId, messageId) : undefined;\n    return {\n      message,\n    };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  const textRef = useRef<HTMLSpanElement>();\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('composer-action-button bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <Icon name=\"webapp\" className={buildClassName('bot-menu-icon', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiInputSuggestedPostInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport { selectIsMediaNsfw } from '../../../global/selectors/media';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { unique } from '../../../util/iteratees';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  suggestedPostInfo?: ApiInputSuggestedPostInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n  forwardMessageIds?: number[];\n  fromChatId?: string;\n  isMediaNsfw?: boolean;\n};\n\ntype OwnProps = {\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  onClear?: () => void;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  suggestedPostInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n  forwardMessageIds,\n  fromChatId,\n  isMediaNsfw,\n  onClear,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    resetDraftSuggestedPostInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n    openSuggestMessageModal,\n  } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n  const isShowingSuggestedPost = Boolean(suggestedPostInfo) && !shouldForceShowEditing;\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const selectSenderFromForwardedMessage = useLastCallback((forwardedMessage: ApiMessage) => {\n    const global = getGlobal();\n    sender = selectForwardedSender(global, forwardedMessage);\n    if (!sender) {\n      sender = selectSender(global, forwardedMessage);\n    }\n    return sender;\n  });\n\n  const forwardSenders = useMemo(() => {\n    if (!isForwarding) return undefined;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(getGlobal(), fromChatId!, id))\n      .filter(Boolean);\n    const senders = forwardedMessages?.map((m) => selectSenderFromForwardedMessage(m)).filter(Boolean);\n    return senders ? unique(senders) : undefined;\n  }, [isForwarding, forwardMessageIds, fromChatId]);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (forwardSenders && isForwarding) return true;\n    if (isShowingSuggestedPost) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (isShowingSuggestedPost) {\n      resetDraftSuggestedPostInfo();\n      resetDraftReplyInfo();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    if (suggestedPostInfo) {\n      openSuggestMessageModal({ chatId });\n      return;\n    }\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isShowingSuggestedPost) {\n      return 'cash-circle';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply, isShowingSuggestedPost]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          suggestedPostInfo={suggestedPostInfo}\n          isMediaNsfw={isMediaNsfw}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          composerForwardSenders={forwardSenders}\n          customText={customText}\n          noCaptions={noCaptions}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): Complete<StateProps> => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const suggestedPostInfo = draft?.suggestedPostInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    const selectSenderFromForwardedMessage = (forwardedMessage: ApiMessage) => {\n      sender = selectForwardedSender(global, forwardedMessage);\n      if (!sender) {\n        sender = selectSender(global, forwardedMessage);\n      }\n      return sender;\n    };\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      let forwardSenders = forwardedMessages?.map((m) => selectSenderFromForwardedMessage(m)).filter(Boolean);\n      forwardSenders = forwardSenders ? unique(forwardSenders) : undefined;\n      sender = forwardSenders?.length === 1 ? forwardSenders?.[0] : undefined;\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    const isMediaNsfw = message && selectIsMediaNsfw(global, message);\n\n    return {\n      replyInfo,\n      suggestedPostInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n      forwardMessageIds,\n      fromChatId,\n      isMediaNsfw,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ToDoListModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ToDoListModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const ToDoListModal = useModuleLoader(Bundles.Extra, 'ToDoListModal', !modal);\n\n  return ToDoListModal ? <ToDoListModal {...props} /> : undefined;\n};\n\nexport default ToDoListModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O3di3ULC\",\"no-page-transitions\":\"UDdgVrUQ\",\"noPageTransitions\":\"UDdgVrUQ\",\"select-mode-active\":\"Y5TInySi\",\"selectModeActive\":\"Y5TInySi\",\"middle-column-footer\":\"XlGyc4tC\",\"middleColumnFooter\":\"XlGyc4tC\",\"no-message-composer-animations\":\"eDMArdYq\",\"noMessageComposerAnimations\":\"eDMArdYq\",\"ComposerEmbeddedMessage\":\"z4RvByc2\",\"composerEmbeddedMessage\":\"z4RvByc2\",\"inner\":\"m3DBx9f5\",\"contextMenu\":\"zqTOc7LU\",\"clear\":\"yhxytYkd\",\"left-icon\":\"vFWsMwfP\",\"leftIcon\":\"vFWsMwfP\",\"preview\":\"otSxF62k\",\"previewText\":\"itmZe2qi\",\"previewImageContainer\":\"VvwZOug9\",\"previewImage\":\"b0A9Zfoa\",\"siteName\":\"ER149gdz\",\"siteDescription\":\"FSYSqC60\",\"interactive\":\"G5_7x_Hn\"};","import { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiWebPage,\n  ApiWebPageFull,\n  ApiWebPagePending,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThreadId, WebPageMediaSize } from '../../../types';\n\nimport {\n  getMediaHash,\n  getWebPageAudio,\n  getWebPageDocument,\n  getWebPagePhoto,\n  getWebPageVideo,\n} from '../../../global/helpers';\nimport { selectNoWebPage, selectTabState, selectWebPage } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useThumbnail from '../../../hooks/media/useThumbnail';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\n\nimport styles from './WebPagePreview.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPageFull | ApiWebPagePending;\n  noWebPage?: boolean;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst WebPagePreview = ({\n  chatId,\n  threadId,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  attachmentSettings,\n  isEditing,\n}: OwnProps & StateProps) => {\n  const {\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useLang();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && !noWebPage && !isDisabled);\n  }, [isDisabled, noWebPage, webPagePreview]);\n  const { shouldRender } = useShowTransition({ isOpen: isShown, ref, withShouldRender: true });\n\n  const hasMediaSizeOptions = webPagePreview?.webpageType === 'full' && webPagePreview.hasLargeMedia;\n\n  const prevWebPageRef = useRef<ApiWebPage | undefined>(webPagePreview);\n\n  if (webPagePreview && webPagePreview !== prevWebPageRef.current) {\n    prevWebPageRef.current = webPagePreview;\n  }\n\n  const renderingWebPage = webPagePreview || prevWebPageRef.current;\n\n  const isFullWebPage = renderingWebPage?.webpageType === 'full';\n\n  const thumbnailUrl = useThumbnail(isFullWebPage ? { content: renderingWebPage } : undefined);\n  const previewMedia = getWebPagePhoto(renderingWebPage) || getWebPageVideo(renderingWebPage)\n    || getWebPageAudio(renderingWebPage) || getWebPageDocument(renderingWebPage);\n  const previewMediaHash = previewMedia && getMediaHash(previewMedia, 'pictogram');\n  const previewMediaUrl = useMedia(previewMediaHash);\n\n  const { shouldRender: shouldRenderPreviewMedia, ref: previewMediaRef } = useShowTransition<HTMLImageElement>({\n    isOpen: Boolean(previewMediaUrl),\n    withShouldRender: true,\n    noCloseTransition: true,\n  });\n\n  const hasPreviewMedia = Boolean(previewMediaUrl || shouldRenderPreviewMedia);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide, handleBeforeContextMenu,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector(`.${styles.contextMenu} .bubble`),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className={styles.contextMenu}\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('ContextMoveTextUp')}\n              </MenuItem>\n            ) : (\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang('ContextMoveTextDown')}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ContextLinkLargerMedia')}\n              </MenuItem>\n            ) : (\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang('ContextLinkSmallerMedia')}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ContextLinkRemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        !isEditing && styles.interactive,\n      )}\n      ref={ref}\n    >\n      <div className={styles.inner}>\n        <div className={styles.leftIcon} onClick={handlePreviewClick}>\n          <Icon name=\"link\" />\n        </div>\n        {renderingWebPage && renderingWebPage.webpageType !== 'empty' && (\n          <PeerColorWrapper\n            noUserColors\n            className={styles.preview}\n            onContextMenu={handleContextMenu}\n            onMouseDown={handleBeforeContextMenu}\n            onClick={handlePreviewClick}\n          >\n            {hasPreviewMedia && (\n              <div className={styles.previewImageContainer}>\n                {thumbnailUrl && (\n                  <img src={thumbnailUrl} alt=\"\" className={styles.previewImage} />\n                )}\n                {shouldRenderPreviewMedia && (\n                  <img ref={previewMediaRef} src={previewMediaUrl} alt=\"\" className={styles.previewImage} />\n                )}\n              </div>\n            )}\n            <div className={styles.previewText}>\n              <span className={styles.siteName}>\n                {isFullWebPage\n                  ? (renderingWebPage.siteName || renderingWebPage.url)\n                  : lang('Loading')}\n              </span>\n              <span className={styles.siteDescription}>\n                {isFullWebPage\n                  ? (renderingWebPage.description || lang(getMediaTypeKey(renderingWebPage)))\n                  : renderingWebPage.url}\n              </span>\n            </div>\n          </PeerColorWrapper>\n        )}\n        <Button\n          className={styles.clear}\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('AccLinkRemovePreview')}\n          onClick={handleClearWebpagePreview}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nfunction getMediaTypeKey(webPage: ApiWebPageFull) {\n  if (webPage.photo) return 'AttachPhoto';\n  if (webPage.video) return 'AttachVideo';\n  if (webPage.audio) return 'AttachMusic';\n  if (webPage.document) return 'AttachDocument';\n  if (webPage.story) return 'AttachStory';\n  return 'LinkPreview';\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): Complete<StateProps> => {\n    const tabState = selectTabState(global);\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n\n    const webPagePreview = tabState.webPagePreviewId ? selectWebPage(global, tabState.webPagePreviewId) : undefined;\n\n    return {\n      webPagePreview: webPagePreview?.webpageType === 'empty' ? undefined : webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo, useRef, useSignal, useState } from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiDisallowedGifts,\n  ApiDraft,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewMediaTodo,\n  ApiNewPoll,\n  ApiPeer,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type { GlobalState, TabState } from '../../global/types';\nimport type {\n  IAnchorPosition,\n  InlineBotSettings,\n  MessageList,\n  MessageListType,\n  ThemeKey,\n  ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n  STARS_CURRENCY_CODE,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatPublic,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n} from '../../global/helpers';\nimport { getChatNotifySettings } from '../../global/helpers/notifications';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectCustomEmoji,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectNoWebPage,\n  selectPeer,\n  selectPeerPaidMessagesStars,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n  selectWebPage,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport { selectSharedSettings } from '../../global/selectors/sharedState';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport { isUserId } from '../../util/entities/ids';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { formatStarsAsIcon } from '../../util/localization/format';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport windowSize from '../../util/windowSize';\nimport { DEFAULT_MAX_MESSAGE_LENGTH } from '../../limits';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useLoadLinkPreview from '../middle/composer/hooks/useLoadLinkPreview';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport usePaidMessageConfirmation from '../middle/composer/hooks/usePaidMessageConfirmation';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport ToDoListModal from '../middle/composer/ToDoListModal.async';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport AnimatedCounter from './AnimatedCounter';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport PaymentMessageConfirmDialog from './PaymentMessageConfirmDialog';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: TeactNode | string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    shouldDisplayGiftsButton?: boolean;\n    isForwarding?: boolean;\n    isReplying?: boolean;\n    hasSuggestedPost?: boolean;\n    forwardedMessagesCount?: number;\n    pollModal: TabState['pollModal'];\n    todoListModal: TabState['todoListModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsPeer?: ApiPeer;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ThemeKey;\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    paidMessagesStars?: number;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n    maxMessageLength: number;\n    shouldPaidMessageAutoApprove?: boolean;\n    isSilentPosting?: boolean;\n    isPaymentMessageConfirmDialogOpen: boolean;\n    starsBalance: number;\n    isStarsBalanceModalOpen: boolean;\n    disallowedGifts?: ApiDisallowedGifts;\n    isAccountFrozen?: boolean;\n    isAppConfigLoaded?: boolean;\n    insertingPeerIdMention?: string;\n    pollMaxAnswers?: number;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  shouldDisplayGiftsButton,\n  isForwarding,\n  isReplying,\n  hasSuggestedPost,\n  forwardedMessagesCount,\n  pollModal,\n  todoListModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsPeer,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  paidMessagesStars,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n  maxMessageLength,\n  isSilentPosting,\n  isPaymentMessageConfirmDialogOpen,\n  starsBalance,\n  isStarsBalanceModalOpen,\n  disallowedGifts,\n  isAccountFrozen,\n  isAppConfigLoaded,\n  insertingPeerIdMention,\n  pollMaxAnswers,\n  onDropHide,\n  onFocus,\n  onBlur,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    openPollModal,\n    closePollModal,\n    openTodoListModal,\n    closeTodoListModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    openGiftModal,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n    updateChatSilentPosting,\n    updateInsertingPeerIdMention,\n    updateDraftSuggestedPostInfo,\n    updateShouldSaveAttachmentsCompression,\n    applyDefaultAttachmentsCompression,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const inputRef = useRef<HTMLDivElement>();\n  const counterRef = useRef<HTMLSpanElement>();\n\n  const storyReactionRef = useRef<HTMLButtonElement>();\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = Boolean(sendAsPeerIds?.length);\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const isMonoforum = chat?.isMonoforum;\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const canSchedule = !paidMessagesStars && !isMonoforum;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (isAppConfigLoaded && chatId && isReady && !isInStoryViewer && !isMonoforum) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer, isAppConfigLoaded, isMonoforum]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    const isChatWithSendAs = chat && isChatSuperGroup(chat)\n      && Boolean(isChatPublic(chat) || chat.isLinkedInDiscussion || chat.hasGeo);\n    if (!sendAsPeerIds && isReady && (isChatWithSendAs || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  useEffect(() => {\n    if (!attachments.length || !attachments) {\n      updateShouldSaveAttachmentsCompression({ shouldSave: false });\n    }\n  }, [attachments]);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks, canAttachToDoLists,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(\n      chat,\n      chatFullInfo,\n      isChatWithBot,\n      isChatWithSelf,\n      isInStoryViewer,\n      paidMessagesStars,\n      isInScheduledList,\n    ),\n    [chat, chatFullInfo, isChatWithBot, isChatWithSelf, isInStoryViewer, paidMessagesStars, isInScheduledList],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const messagesCount = useDerivedState(() => {\n    if (hasAttachments) return attachments.length;\n    const messagesInInput = (getHtml() || hasAttachments) ? 1 : 0;\n    if (!isForwarding || !forwardedMessagesCount) return messagesInInput || 1;\n    return forwardedMessagesCount + messagesInInput;\n  }, [getHtml, hasAttachments, attachments, isForwarding, forwardedMessagesCount]);\n  const starsForAllMessages = paidMessagesStars ? messagesCount * paidMessagesStars : 0;\n\n  const {\n    closeConfirmDialog: closeConfirmModalPayForMessage,\n    dialogHandler: paymentMessageConfirmDialogHandler,\n    shouldAutoApprove: shouldPaidMessageAutoApprove,\n    setAutoApprove: setShouldPaidMessageAutoApprove,\n    handleWithConfirmation: handleActionWithPaymentConfirmation,\n  } = usePaidMessageConfirmation(starsForAllMessages, isStarsBalanceModalOpen, starsBalance);\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((\n    newHtml: string, inInputId: string = editableInputId, shouldPrepend = false,\n  ) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount && !shouldPrepend) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    if (shouldPrepend) {\n      const newFirstWord = newHtml.split(' ')[0];\n      const shouldReplace = getHtml().startsWith(newFirstWord);\n\n      setHtml(shouldReplace ? newHtml : `${newHtml}${getHtml()}`);\n    } else {\n      setHtml(`${getHtml()}${newHtml}`);\n    }\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = (renderText(text, ['escape_html', 'emoji_html', 'br_html']) as string[])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId, shouldPrepend = false,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId, shouldPrepend);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n    shouldSendInHighQuality: attachmentSettings.shouldSendInHighQuality,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  useEffect(() => {\n    if (!insertingPeerIdMention) return;\n    const peer = selectPeer(getGlobal(), insertingPeerIdMention);\n    if (peer) {\n      insertMention(peer, true, true);\n    }\n    updateInsertingPeerIdMention({ peerId: undefined });\n  }, [insertingPeerIdMention, insertMention]);\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft) || (!hasSuggestedPost && isMonoforum),\n  });\n\n  useLoadLinkPreview({\n    chatId,\n    threadId,\n    getHtml,\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const areAllGiftsDisallowed = useMemo(() => {\n    if (!disallowedGifts) {\n      return undefined;\n    }\n    return Object.values(disallowedGifts).every(Boolean);\n  }, [disallowedGifts]);\n\n  const shouldShowGiftButton = Boolean(!isChatWithSelf && shouldDisplayGiftsButton && !areAllGiftsDisallowed);\n  const shouldShowSuggestedPostButton = isMonoforum && !editingMessage\n    && !isForwarding && !isReplying && !draft?.suggestedPostInfo;\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: oldLang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: oldLang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : maxMessageLength;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: oldLang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const canSendAttachments = (attachmentsToSend: ApiAttachment[]): boolean => {\n    if (!currentMessageList && !storyId) {\n      return false;\n    }\n\n    const { text } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return false;\n    }\n    if (!validateTextLength(text, true)) return false;\n    if (!checkSlowMode()) return false;\n\n    return true;\n  };\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n    isSilent = isSilent || isSilentPosting;\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, threadId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      if (editingMessage) {\n        sendAttachments({\n          attachments,\n          sendCompressed,\n          sendGrouped,\n          isInvertedMedia,\n        });\n        return;\n      }\n\n      handleActionWithPaymentConfirmation(sendAttachments, {\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      sendAttachments({\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isSilent,\n        scheduledAt,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendCore = useLastCallback(\n    (currentAttachments: ApiAttachment[], isSilent = false, scheduledAt?: number) => {\n      const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n      if (currentAttachments.length) {\n        if (canSendAttachments(currentAttachments)) {\n          sendAttachments({\n            attachments: currentAttachments,\n            scheduledAt,\n            isSilent,\n          });\n        }\n        return;\n      }\n\n      if (!text && !isForwarding) {\n        return;\n      }\n\n      if (!validateTextLength(text)) return;\n\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const effectId = effect?.id;\n\n      if (text || isForwarding) {\n        if (!checkSlowMode()) return;\n\n        const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n        if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n        sendMessage({\n          messageList: currentMessageList,\n          text,\n          entities,\n          scheduledAt,\n          isSilent,\n          shouldUpdateStickerSetOrder,\n          isInvertedMedia,\n          effectId,\n          webPageMediaSize: attachmentSettings.webPageMediaSize,\n          webPageUrl: hasWebPagePreview ? webPagePreview.url : undefined,\n          isForwarding,\n        });\n      }\n\n      lastMessageSendTimeSeconds.current = getServerTime();\n      clearDraft({\n        chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n      });\n\n      if (IS_IOS && messageInput && messageInput === document.activeElement) {\n        applyIosAutoCapitalizationFix(messageInput);\n      }\n\n      // Wait until message animation starts\n      requestMeasure(() => {\n        resetComposer();\n      });\n    },\n  );\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    handleSendCore(currentAttachments, isSilent, scheduledAt);\n  });\n\n  const handleSendWithConfirmation = useLastCallback((isSilent = false, scheduledAt?: number) => {\n    handleActionWithPaymentConfirmation(handleSend, isSilent, scheduledAt);\n  });\n\n  const handleTodoListCreate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('SubscribeToTelegramPremiumForCreateToDo'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'todo' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n      return;\n    }\n\n    openTodoListModal({ chatId });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        chatId,\n        threadId,\n        queryId,\n        scheduledAt,\n        isSilent: isSilent || isSilentPosting,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft, undefined, true);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      updateShouldSaveAttachmentsCompression({ shouldSave: true });\n      applyDefaultAttachmentsCompression();\n    } else {\n      updateShouldSaveAttachmentsCompression({ shouldSave: false });\n    }\n  }, [requestedDraftFiles, updateShouldSaveAttachmentsCompression, applyDefaultAttachmentsCompression]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(handleMessageSchedule, { gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(sendMessage, { messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n\n    clearDraft({ chatId, threadId, isLocalOnly: true });\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule, { sticker, isSilent }, scheduledAt, currentMessageList!,\n        );\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        {\n          messageList: currentMessageList,\n          sticker,\n          isSilent,\n          shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n        },\n      );\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          {\n            id: inlineResult.id,\n            queryId: inlineResult.queryId,\n            isSilent,\n          },\n          scheduledAt,\n          currentMessageList!,\n        );\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendInlineBotResult,\n        {\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          threadId,\n          chatId,\n          isSilent,\n        },\n      );\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, threadId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, threadId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { poll },\n          scheduledAt,\n          currentMessageList,\n        );\n      });\n      closePollModal();\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        { messageList: currentMessageList, poll, isSilent: isSilentPosting },\n      );\n      closePollModal();\n    }\n  });\n\n  const handleToDoListSend = useLastCallback((todo: ApiNewMediaTodo) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { todo },\n          scheduledAt,\n          currentMessageList,\n        );\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        { messageList: currentMessageList, todo, isSilent: isSilentPosting },\n      );\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: chatId });\n  });\n  const handleSuggestPostClick = useLastCallback(() => {\n    updateDraftSuggestedPostInfo({\n      price: { currency: STARS_CURRENCY_CODE, amount: 0, nanos: 0 },\n    });\n  });\n\n  const handleToggleSilentPosting = useLastCallback(() => {\n    const newValue = !isSilentPosting;\n    updateChatSilentPosting({ chatId, isEnabled: newValue });\n\n    showNotification({\n      localId: 'silentPosting',\n      icon: newValue ? 'mute' : 'unmute',\n      message: lang(`ComposerSilentPosting${newValue ? 'Enabled' : 'Disabled'}Tootlip`),\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const hasText = useDerivedState(() => Boolean(getHtml()), [getHtml]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage\n    && messageListType === 'thread';\n  const isBotMenuButtonOpen = withBotMenuButton && !hasText && !activeVoiceRecording;\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n    || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n\n  const placeholder = useMemo(() => {\n    if (activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER) {\n      return '';\n    }\n\n    if (!isComposerBlocked) {\n      if (botKeyboardPlaceholder) return botKeyboardPlaceholder;\n      if (inputPlaceholder) return inputPlaceholder;\n      if (paidMessagesStars) {\n        return lang('ComposerPlaceholderPaidMessage', {\n          amount: formatStarsAsIcon(lang, paidMessagesStars, { asFont: true, className: 'placeholder-star-icon' }),\n        }, {\n          withNodes: true,\n        });\n      }\n\n      if (isReplying && hasSuggestedPost) {\n        return lang('ComposerPlaceholderCaption');\n      }\n\n      if (chat?.adminRights?.anonymous) {\n        return lang('ComposerPlaceholderAnonymous');\n      }\n\n      if (chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID) {\n        return replyToTopic\n          ? lang('ComposerPlaceholderTopic', { topic: replyToTopic.title })\n          : lang('ComposerPlaceholderTopicGeneral');\n      }\n      if (isChannel) {\n        return lang(isSilentPosting ? 'ComposerPlaceholderBroadcastSilent' : 'ComposerPlaceholderBroadcast');\n      }\n      return lang('ComposerPlaceholder');\n    }\n\n    if (isInStoryViewer) return lang('ComposerStoryPlaceholderLocked');\n\n    return lang('ComposerPlaceholderNoText');\n  }, [\n    activeVoiceRecording, botKeyboardPlaceholder, chat, inputPlaceholder, isChannel, isComposerBlocked,\n    isInStoryViewer, isSilentPosting, lang, replyToTopic, isReplying, threadId, windowWidth, paidMessagesStars,\n    hasSuggestedPost,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        handleSendWithConfirmation();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: oldLang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId, messageListType });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = selectCustomEmoji(getGlobal(), reaction.documentId);\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    handleActionWithPaymentConfirmation(sendMessage, { text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(sendSilent);\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(\n      handleMessageSchedule, {}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id,\n    );\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { sendCompressed, sendGrouped, isInvertedMedia },\n          scheduledAt,\n          currentMessageList!,\n        );\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      handleActionWithPaymentConfirmation(sendSilent, { sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => {\n    saveEffectInDraft({ chatId, threadId, effectId: undefined });\n  });\n\n  const handleStopEffect = useLastCallback(() => {\n    hideEffectInComposer({});\n  });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSendWithConfirmation;\n    }\n  }, [mainButtonState, handleEditComplete, handleSendWithConfirmation]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  const shouldRenderPaidBadge = Boolean(paidMessagesStars && mainButtonState === MainButtonState.Send);\n  const prevShouldRenderPaidBadge = usePrevious(shouldRenderPaidBadge);\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={canSchedule && isInScheduledList}\n        canSchedule={canSchedule}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n        paidMessagesStars={paidMessagesStars}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        maxOptionsCount={pollMaxAnswers}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <ToDoListModal\n        modal={todoListModal}\n        onClear={closeTodoListModal}\n        onSend={handleToDoListSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path\n                d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\"\n                fill=\"#000\"\n                filter=\"url(#composerAppendix)\"\n              />\n              <path\n                d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\"\n                fill=\"#FFF\"\n                className=\"corner\"\n              />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              isDisabled={!canAttachEmbedLinks || hasAttachments || !hasText}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName(\n                    'bot-commands', 'composer-action-button',\n                  )}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && sendAsPeer && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={oldLang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    'composer-action-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsPeer}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium && !isAccountFrozen) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={placeholder}\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n            messageListType={messageListType}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              <Transition\n                className=\"composer-action-buttons-container\"\n                slideClassName=\"composer-action-buttons\"\n                activeKey={Number(hasText)}\n                direction=\"inverse\"\n                name=\"slideFadeAndroid\"\n              >\n                {!hasText && (\n                  <>\n                    {isChannel && (\n                      <Transition className=\"composer-action-button\" name=\"reveal\" activeKey={Number(isSilentPosting)}>\n                        <Button\n                          round\n                          faded\n                          className=\"composer-action-button\"\n                          color=\"translucent\"\n                          onClick={handleToggleSilentPosting}\n                          ariaLabel={lang(\n                            isSilentPosting ? 'AriaComposerSilentPostingDisable' : 'AriaComposerSilentPostingEnable',\n                          )}\n                        >\n                          <Icon name={isSilentPosting ? 'mute' : 'unmute'} />\n                        </Button>\n                      </Transition>\n                    )}\n                    {withScheduledButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button scheduled-button\"\n                        color=\"translucent\"\n                        onClick={handleAllScheduledClick}\n                        ariaLabel={lang('AriaComposerOpenScheduled')}\n                      >\n                        <Icon name=\"scheduled\" />\n                      </Button>\n                    )}\n                    {shouldShowGiftButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button\"\n                        color=\"translucent\"\n                        onClick={handleGiftClick}\n                      >\n                        <Icon name=\"gift\" />\n                      </Button>\n                    )}\n                    {shouldShowSuggestedPostButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button\"\n                        color=\"translucent\"\n                        onClick={handleSuggestPostClick}\n                      >\n                        <Icon name=\"cash-circle\" />\n                      </Button>\n                    )}\n                    {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                      <ResponsiveHoverButton\n                        className={buildClassName('composer-action-button', isBotKeyboardOpen && 'activated')}\n                        round\n                        color=\"translucent\"\n                        onActivate={openBotKeyboard}\n                        ariaLabel={lang('AriaComposerBotKeyboard')}\n                      >\n                        <Icon name=\"bot-command\" />\n                      </ResponsiveHoverButton>\n                    )}\n                  </>\n                )}\n              </Transition>\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canAttachToDoLists={canAttachToDoLists}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              onTodoListCreate={handleTodoListCreate}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n              messageListType={messageListType}\n              paidMessagesStars={paidMessagesStars}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              threadId={threadId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={oldLang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={oldLang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <Icon name=\"heart\" className={buildClassName(isSentStoryReactionHeart && 'story-reaction-heart')} />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={oldLang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <Icon name=\"send\" />\n        <Icon name=\"microphone-alt\" />\n        {onForward && <Icon name=\"forward\" />}\n        {isInMessageList && <Icon name=\"schedule\" />}\n        {isInMessageList && <Icon name=\"check\" />}\n        <Button\n          className={buildClassName(\n            'paidStarsBadge',\n            shouldRenderPaidBadge && 'visible',\n            prevShouldRenderPaidBadge && !shouldRenderPaidBadge && 'hiding',\n            !prevShouldRenderPaidBadge && !shouldRenderPaidBadge && 'hidden',\n          )}\n          nonInteractive\n          size=\"tiny\"\n          color=\"stars\"\n          pill\n          fluid\n        >\n          <div className=\"paidStarsBadgeText\">\n            <Icon name=\"star\" className={buildClassName('star-amount-icon', className)} />\n            <AnimatedCounter\n              ref={counterRef}\n              text={lang.number(starsForAllMessages)}\n            />\n          </div>\n        </Button>\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={canSchedule && isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n      <PaymentMessageConfirmDialog\n        isOpen={isPaymentMessageConfirmDialogOpen}\n        onClose={closeConfirmModalPayForMessage}\n        userName={chat ? getPeerTitle(lang, chat) : undefined}\n        messagePriceInStars={paidMessagesStars || 0}\n        messagesCount={messagesCount}\n        shouldAutoApprove={shouldPaidMessageAutoApprove}\n        setAutoApprove={setShouldPaidMessageAutoApprove}\n        confirmHandler={paymentMessageConfirmDialogHandler}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): Complete<StateProps> => {\n    const appConfig = global.appConfig;\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const userFullInfo = isChatWithUser ? selectUserFullInfo(global, chatId) : undefined;\n    const paidMessagesStars = selectPeerPaidMessagesStars(global, chatId);\n\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const {\n      shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder, shouldPaidMessageAutoApprove,\n    } = global.settings.byKey;\n    const { language, shouldCollectDebugLogs } = selectSharedSettings(global);\n    const {\n      forwardMessages: { messageIds: forwardMessageIds },\n    } = selectTabState(global);\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = defaultSendAsId;\n    const sendAsPeer = sendAsId ? selectPeer(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !userFullInfo?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const isSilentPosting = chat && getChatNotifySettings(\n      chat,\n      selectNotifyDefaults(global),\n      selectNotifyException(global, chatId),\n    )?.isSilentPosting;\n\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n      && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    const maxMessageLength = global.config?.maxMessageLength || DEFAULT_MAX_MESSAGE_LENGTH;\n    const isForwarding = chatId === tabState.forwardMessages.toChatId;\n    const isReplying = Boolean(draft?.replyInfo);\n    const hasSuggestedPost = Boolean(draft?.suggestedPostInfo);\n    const starsBalance = global.stars?.balance.amount || 0;\n    const isStarsBalanceModalOpen = Boolean(tabState.starsBalanceModal);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n    const isAppConfigLoaded = global.isAppConfigLoaded;\n    const insertingPeerIdMention = tabState.insertingPeerIdMention;\n\n    const webPagePreview = tabState.webPagePreviewId ? selectWebPage(global, tabState.webPagePreviewId) : undefined;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && (userFullInfo || chatFullInfo)?.hasScheduledMessages\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding,\n      isReplying,\n      hasSuggestedPost,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      pollModal: tabState.pollModal,\n      todoListModal: tabState.todoListModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: userFullInfo ? (userFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: userFullInfo?.botInfo?.menuButton,\n      sendAsPeer,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview,\n      isContactRequirePremium: userFullInfo?.isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n      maxMessageLength,\n      paidMessagesStars,\n      shouldPaidMessageAutoApprove,\n      isSilentPosting,\n      isPaymentMessageConfirmDialogOpen: tabState.isPaymentMessageConfirmDialogOpen,\n      starsBalance,\n      isStarsBalanceModalOpen,\n      shouldDisplayGiftsButton: userFullInfo?.shouldDisplayGiftsButton,\n      disallowedGifts: userFullInfo?.disallowedGifts,\n      isAccountFrozen,\n      isAppConfigLoaded,\n      insertingPeerIdMention,\n      pollMaxAnswers: appConfig.pollMaxAnswers,\n    };\n  },\n)(Composer));\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n  shouldSendInHighQuality,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n  shouldSendInHighQuality?: boolean;\n}) {\n  const lang = useLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file,\n          { shouldSendAsSpoiler: isSpoiler || undefined, shouldSendInHighQuality })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[]) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) =>\n        buildAttachment(file.name, file, { shouldSendInHighQuality })));\n      handleSetAttachments(newAttachments);\n    }\n  });\n\n  const handleUpdateAttachmentsQuality = useLastCallback(async () => {\n    const newAttachments = await Promise.all(attachments.map((attachment) =>\n      buildAttachment(attachment.filename, attachment.blob, { shouldSendInHighQuality })));\n    handleSetAttachments(newAttachments);\n  });\n\n  useEffect(() => {\n    handleUpdateAttachmentsQuality();\n  }, [shouldSendInHighQuality]);\n\n  return {\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  const recordButtonRef = useRef<HTMLButtonElement>();\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot } from '../../global/helpers';\nimport { selectIsChatRestricted, selectPeer, selectUserStatus } from '../../global/selectors';\nimport { isUserId } from '../../util/entities/ids';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        const isRestricted = selectIsChatRestricted(global, chat.id);\n        return isChatChannel(chat) && !isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { getServerTime } from '../../../util/serverTime';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  hasMiniApp?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n  isSelected?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n  hasMiniApp,\n  isSelected,\n}) => {\n  const { requestMainWebView } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => {\n    if (!isForum) {\n      return (topic || chat).unreadCount;\n    }\n\n    return topicsWithUnread?.length;\n  }, [chat, topic, topicsWithUnread, isForum]);\n\n  const shouldBeUnMuted = useMemo(() => {\n    if (!isForum) {\n      return !isMuted || topic?.notifySettings.mutedUntil === 0;\n    }\n\n    if (isMuted) {\n      return topicsWithUnread?.some((acc) => acc.notifySettings.mutedUntil === 0);\n    }\n\n    const isEveryUnreadMuted = topicsWithUnread?.every((acc) => (\n      acc.notifySettings.mutedUntil && acc.notifySettings.mutedUntil > getServerTime()\n    ));\n\n    return !isEveryUnreadMuted;\n  }, [isForum, isMuted, topicsWithUnread, topic?.notifySettings.mutedUntil]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened || hasMiniApp,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    !shouldBeUnMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chat.id,\n      peerId: chat.id,\n      theme,\n    });\n  });\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', !shouldBeUnMuted && 'muted')}>\n        <Icon name=\"heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <Icon name=\"mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', !shouldBeUnMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(lang, unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <Icon name=\"pinned-chat\" />\n      </div>\n    );\n\n    const miniAppButton = hasMiniApp && (\n      <Button\n        color={isSelected ? 'secondary' : 'primary'}\n        className=\"ChatBadge miniapp\"\n        pill\n        size=\"tiny\"\n        onClick={handleOpenApp}\n      >\n        {oldLang('BotOpen')}\n      </Button>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    // Show only if empty or have pinned icon\n    if (hasMiniApp && (elements.length === 0 || visiblePinnedElement)) return miniAppButton;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import type React from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport SensitiveContentConfirmModal from '../../common/SensitiveContentConfirmModal';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  lastPlaybackTimestamp?: number;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  isMediaNsfw?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\ntype StateProps = {\n  needsAgeVerification?: boolean;\n};\n\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  lastPlaybackTimestamp,\n  clickArg,\n  isMediaNsfw,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n  onCancelUpload,\n  needsAgeVerification,\n}: OwnProps<T> & StateProps) => {\n  const { cancelMediaDownload, updateContentSettings, openAgeVerificationModal } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const videoRef = useRef<HTMLVideoElement>();\n  const [isNsfwModalOpen, openNsfwModal, closeNsfwModal] = useFlag();\n  const [shouldAlwaysShowNsfw, setShouldAlwaysShowNsfw] = useState(false);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const shouldShowSpoiler = isPaidPreview || video.isSpoiler || isMediaNsfw;\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(shouldShowSpoiler);\n\n  useEffect(() => {\n    if (shouldShowSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [shouldShowSpoiler]);\n\n  const handleNsfwConfirm = useLastCallback(() => {\n    closeNsfwModal();\n    hideSpoiler();\n\n    if (shouldAlwaysShowNsfw) {\n      updateContentSettings({ isSensitiveEnabled: true });\n    }\n  });\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const shouldHidePreview = isPlayerReady && !isUnsupported;\n  const { ref: previewRef } = useMediaTransition<HTMLImageElement>({\n    hasMediaData: Boolean((hasThumb || previewBlobUrl) && !shouldHidePreview),\n  });\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition({ ref: thumbRef, hasMediaData: !noThumb });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n  const {\n    ref: transferProgressRef,\n    shouldRender: shouldRenderTransferProgress,\n  } = useShowTransition({\n    isOpen: isTransferring && (!isUnsupported || isDownloading),\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) && !isUnsupported\n    ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      if (isMediaNsfw) {\n        if (needsAgeVerification) {\n          openAgeVerificationModal();\n          return;\n        }\n        openNsfwModal();\n        return;\n      }\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          defaultMuted\n          muted\n          loop\n          playsInline\n          disablePictureInPicture\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <Icon ref={playButtonRef} name=\"large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        isNsfw={isMediaNsfw}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <Icon name=\"download\" />\n      )}\n      {shouldRenderTransferProgress ? (\n        <span ref={transferProgressRef} className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <Icon name=\"message-failed\" className=\"playback-failed\" />}\n        </div>\n      )}\n      {Boolean(lastPlaybackTimestamp) && (\n        <div\n          className=\"message-media-last-progress\"\n          style={`--_progress: ${Math.floor((lastPlaybackTimestamp / duration) * 100)}%`}\n        />\n      )}\n      <SensitiveContentConfirmModal\n        isOpen={isNsfwModalOpen}\n        onClose={closeNsfwModal}\n        shouldAlwaysShow={shouldAlwaysShowNsfw}\n        onAlwaysShowChanged={setShouldAlwaysShowNsfw}\n        confirmHandler={handleNsfwConfirm}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal((global): Complete<StateProps> => {\n  const appConfig = global.appConfig;\n  const needsAgeVerification = appConfig.needAgeVideoVerification;\n\n  return {\n    needsAgeVerification,\n  };\n})(Video));\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule> | undefined;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string'\n        ? renderText(emoji, ['emoji_html'])[0] as string\n        : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  const triggerRef = useRef<HTMLDivElement>();\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'composer-action-button mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <Icon name=\"smile\" />\n          <Icon name=\"keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('composer-action-button symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <Icon name=\"smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist' | 'setColor'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: { text: '' },\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n): FoldersState => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: { text: action.payload },\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : { text: getSuggestedFolderName(state.includeFilters) },\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'setColor':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          color: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks = new Set<NoneToVoidFunction>();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: String(zIndex),\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: String(zIndex),\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n\n            callbacks.delete(cb);\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: String(zIndex),\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: String(zIndex),\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar.classList.remove('animating');\n          });\n\n          callbacks.delete(cb);\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidthWithText(isMobile: boolean) {\n  return (isMobile ? 14 : 20) * REM;\n}\n\nexport function getMinMediaWidth(text: string = '', isMobile: boolean, hasCommentButton?: boolean) {\n  return text.length > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? getMinMediaWidthWithText(isMobile)\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n}: {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText, isMobile);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { MediaContainer, SizeTarget } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { getMessageMediaHash } from '../../global/helpers/messageMedia';\nimport useSelector from '../data/useSelector';\n\nfunction selectWebPagesById(global: GlobalState) {\n  return global.messages.webPageById;\n}\n\nexport default function useMessageMediaHash(message: MediaContainer | undefined, target: SizeTarget) {\n  const webPagesById = useSelector(selectWebPagesById);\n  if (!message) return undefined;\n\n  const webPageId = message.content.webPage?.id;\n  const webPage = webPageId ? webPagesById[webPageId] : undefined;\n\n  return getMessageMediaHash(message, { webPage }, target);\n}\n","import { IS_TOUCH_ENV } from './browser/windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/browser/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage,\n  getMessageTextWithFallback,\n} from '../../global/helpers';\nimport { selectWebPageFromMessage } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype StateProps = {\n  webPage?: ApiWebPage;\n};\n\nconst WebLink = ({\n  message, webPage, senderTitle, isProtected, observeIntersection, onMessageClick,\n}: OwnProps & StateProps) => {\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = webPage;\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageTextWithFallback(lang, message)?.text !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (linkData?.webpageType !== 'full') {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(oldLang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    message,\n  }): Complete<StateProps> => {\n    const webPage = selectWebPageFromMessage(global, message);\n\n    return {\n      webPage,\n    };\n  },\n)(WebLink));\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import { useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useLastCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  });\n\n  const end = useLastCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    cancel();\n  });\n\n  const cancel = useLastCallback(() => {\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  });\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  return {\n    onMouseDown: start,\n    onMouseUp: end,\n    onMouseLeave: end,\n    onTouchStart: start,\n    onTouchEnd: end,\n  };\n}\n\nexport default useLongPress;\n","// extracted by mini-css-extract-plugin\nexport default {\"background\":\"LzylDSXD\",\"customBgImage\":\"iBGWkDsW\",\"customBgColor\":\"HnpqkkHj\",\"withTransition\":\"V96TOnoY\",\"blurred\":\"K_W7XNrk\",\"withRightColumn\":\"EiMC9Ymb\"};","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","import {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): Complete<StateProps> => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import type { ThemeKey } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ThemeKey,\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import buildStyle from '../../util/buildStyle';\nimport useLastCallback from '../useLastCallback';\nimport useUniqueId from '../useUniqueId';\n\nconst VTN_PROPERTY_NAME = '--_vtn';\n\nCSS.registerProperty?.({\n  name: VTN_PROPERTY_NAME,\n  syntax: '*',\n  inherits: false,\n});\n\nexport function useVtn(uniqueId?: string) {\n  const fallbackId = useUniqueId();\n\n  // Pass `true` to use the same class name as the name parameter\n  const createVtnStyle = useLastCallback((name: string, vtClass?: string | boolean) => {\n    const vtClassString = vtClass === true ? name : (vtClass || undefined);\n    return buildStyle(\n      `${VTN_PROPERTY_NAME}: vtn-${name}-${uniqueId || fallbackId}`,\n      vtClassString && `view-transition-class: ${vtClassString}`,\n    );\n  });\n\n  return {\n    createVtnStyle,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const lang = useLang();\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <Icon name={isQuick ? 'photo' : 'document'} />\n        <div className=\"title\">{lang('FileDropZoneTitle')}</div>\n        {!isGeneric && (\n          <div className=\"description\">\n            {isQuick ? lang('FileDropZoneQuick') : lang('FileDropZoneNoCompression')}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  editingMessage?: ApiMessage | undefined;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[]) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea = ({\n  isOpen, withQuick, editingMessage, onHide, onFileSelect,\n}: OwnProps) => {\n  const lang = useLang();\n  const { showNotification, updateAttachmentSettings } = getActions();\n  const hideTimeoutRef = useRef<number>();\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    if (editingMessage) {\n      if (files.length > 1) {\n        showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        return;\n      }\n\n      if (files.length === 1) {\n        const newAttachment = await buildAttachment(files[0].name, files[0]);\n        const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n        if (!canReplace) {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n          return;\n        }\n      }\n    }\n\n    onHide();\n    updateAttachmentSettings({ shouldCompress: withQuick ? false : undefined });\n    onFileSelect(files);\n  });\n\n  const handleQuickFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      const files = Array.from(dt.files);\n      if (editingMessage) {\n        if (files.length > 1) {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n          return;\n        }\n        if (files.length === 1) {\n          const newAttachment = await buildAttachment(files[0].name, files[0]);\n          const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n          if (!canReplace) {\n            showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n            return;\n          }\n        }\n      }\n\n      onHide();\n      updateAttachmentSettings({ shouldCompress: true });\n      onFileSelect(files);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement).matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { LOCAL_TGS_PREVIEW_URLS, LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n  withSticker?: boolean;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description, withSticker }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName(\n      'NothingFound',\n      transitionClassNames,\n      description && 'with-description',\n      withSticker && 'with-sticker')}\n    >\n      {withSticker && (\n        <AnimatedIconWithPreview\n          className=\"sticker\"\n          size={120}\n          tgsUrl={LOCAL_TGS_URLS.DuckNothingFound}\n          previewUrl={LOCAL_TGS_PREVIEW_URLS.DuckNothingFound}\n          nonInteractive\n          noLoop={false}\n        />\n      )}\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  const transitionRef = useRef<HTMLDivElement>();\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const value = useMemo(() => {\n    if (age) {\n      return lang(\n        `ProfileBirthday${isToday ? 'Today' : ''}ValueYear`,\n        { date: formattedDate, age },\n        { pluralValue: age },\n      );\n    }\n\n    return lang(`ProfileBirthday${isToday ? 'Today' : ''}Value`, { date: formattedDate });\n  }, [age, formattedDate, isToday, lang]);\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(value)}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"botVerificationSection\":\"RWFu5ENh\",\"sectionInfo\":\"IrqRJFxm\",\"botVerificationIcon\":\"b32hsSPS\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import {\n  memo, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiBotVerification,\n  ApiChat,\n  ApiCountryCode,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUsername,\n} from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { type BotAppPermissions, ManagementScreens } from '../../../types';\n\nimport {\n  FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH, MUTE_INDEFINITE_TIMESTAMP, UNMUTE_TIMESTAMP,\n} from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatAdmin,\n  isChatChannel,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectBotAppPermissions,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatRestricted,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport CustomEmoji from '../CustomEmoji';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isOwnProfile?: boolean;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n  className?: string;\n  style?: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n  isBotCanManageEmojiStatus?: boolean;\n  botAppPermissions?: BotAppPermissions;\n  botVerification?: ApiBotVerification;\n  canViewSubscribers?: boolean;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst BOT_VERIFICATION_ICON_SIZE = 16;\n\nconst ChatExtra = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isOwnProfile,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n  isBotCanManageEmojiStatus,\n  botAppPermissions,\n  botVerification,\n  className,\n  style,\n  isInSettings,\n  canViewSubscribers,\n}: OwnProps & StateProps) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n    toggleUserEmojiStatusPermission,\n    toggleUserLocationPermission,\n    requestNextManagementScreen,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleToggleNotifications = useLastCallback(() => {\n    const mutedUntil = isMuted ? UNMUTE_TIMESTAMP : MUTE_INDEFINITE_TIMESTAMP;\n    if (isTopicInfo) {\n      updateTopicMutedState({\n        chatId: chatId!,\n        topicId: topicId!,\n        mutedUntil,\n      });\n    } else {\n      updateChatMutedState({ chatId: chatId!, mutedUntil });\n    }\n  });\n\n  const manageEmojiStatusChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserEmojiStatusPermission({ botId: user.id, isEnabled: !isBotCanManageEmojiStatus });\n  });\n\n  const handleLocationPermissionChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserLocationPermission({ botId: user.id, isAccessGranted: !botAppPermissions?.geolocation });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenSubscribers = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.ChannelSubscribers });\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  const isRestricted = chatId ? selectIsChatRestricted(getGlobal(), chatId) : false;\n  if (isRestricted || (isSelf && !isOwnProfile && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%'))\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatExtra', className)} style={style}>\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      {hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isOwnProfile && !isInSettings && (\n        <ListItem icon={isMuted ? 'mute' : 'unmute'} narrow ripple onClick={handleToggleNotifications}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={lang(userId ? 'AriaToggleUserNotifications' : 'AriaToggleChatNotifications')}\n            checked={!isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isOwnProfile && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n      {userFullInfo && 'isBotAccessEmojiGranted' in userFullInfo && (\n        <ListItem icon=\"user\" narrow ripple onClick={manageEmojiStatusChange}>\n          <span>{oldLang('BotProfilePermissionEmojiStatus')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionEmojiStatus')}\n            checked={isBotCanManageEmojiStatus}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botAppPermissions?.geolocation !== undefined && (\n        <ListItem icon=\"location\" narrow ripple onClick={handleLocationPermissionChange}>\n          <span>{oldLang('BotProfilePermissionLocation')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionLocation')}\n            checked={botAppPermissions?.geolocation}\n            inactive\n          />\n        </ListItem>\n      )}\n      {canViewSubscribers && (\n        <ListItem icon=\"group\" narrow multiline ripple onClick={handleOpenSubscribers}>\n          <div className=\"title\">{lang('ProfileItemSubscribers')}</div>\n          <span className=\"subtitle\">{lang.number(chat?.membersCount || 0)}</span>\n        </ListItem>\n      )}\n      {botVerification && (\n        <div className={styles.botVerificationSection}>\n          <CustomEmoji\n            className={styles.botVerificationIcon}\n            documentId={botVerification.iconId}\n            size={BOT_VERIFICATION_ICON_SIZE}\n          />\n          {botVerification.description}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): Complete<StateProps> => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const botAppPermissions = chatOrUserId ? selectBotAppPermissions(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const botVerification = userFullInfo?.botVerification || chatFullInfo?.botVerification;\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canViewSubscribers = chat && isChatChannel(chat) && isChatAdmin(chat);\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      botAppPermissions,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n      isBotCanManageEmojiStatus: userFullInfo?.isBotCanManageEmojiStatus,\n      botVerification,\n      canViewSubscribers,\n    };\n  },\n)(ChatExtra));\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          disabled={isDisabled}\n          onClick={handleShare}\n          className={styles.share}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\",\"share\":\"Sbagy_Tm\"};","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiTopic, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport { getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup } from '../global/helpers';\nimport { IS_TAURI } from '../util/browser/globalEnvironment';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/browser/windowEnvironment';\nimport { isUserId } from '../util/entities/ids';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  topics,\n  handleDelete,\n  handleMute,\n  handleUnmute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  topics?: Record<number, ApiTopic>;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleUnmute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChat');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('ChannelLeave');\n    }\n\n    return lang('GroupLeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      toggleChatArchived,\n      markChatMessagesRead,\n      markChatUnread,\n      openChatInNewTab,\n      openQuickPreview,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_TAURI ? lang('ChatListOpenInNewWindow') : lang('ChatListOpenInNewTab'),\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const actionQuickPreview = !isSavedDialog && !chat.isForum && {\n      title: lang('QuickPreview'),\n      icon: 'eye-outline',\n      handler: () => {\n        openQuickPreview({\n          id: chat.id,\n        });\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('ChatListUnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('ChatListPinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionQuickPreview, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatListContextAddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatsUnmute'),\n        icon: 'unmute',\n        handler: handleUnmute,\n      }\n      : {\n        title: `${lang('ChatsMute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([\n        actionOpenInNewTab, actionQuickPreview, actionPin, actionAddToFolder, actionMute,\n      ]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (\n      chat.unreadCount || chat.hasUnreadMark || Object.values(topics || {}).some(({ unreadCount }) => unreadCount)\n    )\n      ? {\n        title: lang('ChatListContextMaskAsRead'),\n        icon: 'readchats',\n        handler: () => markChatMessagesRead({ id: chat.id }),\n      } : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('ChatListContextMaskAsUnread'), icon: 'unread', handler: () => markChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeerReport'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionQuickPreview,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview, topics, handleUnmute,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","import type { FC, StateHookSetter } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport { formatStarsAsText } from '../../util/localization/format';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './PaymentMessageConfirmDialog.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  userName?: string;\n  messagePriceInStars: number;\n  messagesCount: number;\n  shouldAutoApprove: boolean;\n  setAutoApprove: StateHookSetter<boolean>;\n  confirmHandler: NoneToVoidFunction;\n};\n\nconst PaymentMessageConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  userName,\n  messagePriceInStars,\n  messagesCount,\n  shouldAutoApprove: shouldPaidMessageAutoApprove,\n  setAutoApprove: setShouldPaidMessageAutoApprove,\n  confirmHandler,\n}) => {\n  const lang = useLang();\n\n  const confirmPaymentMessage = lang('ConfirmationModalPaymentForMessage', {\n    user: userName,\n    amount: formatStarsAsText(lang, messagePriceInStars),\n    totalAmount: formatStarsAsText(lang, messagePriceInStars * messagesCount),\n    count: messagesCount,\n  }, {\n    withMarkdown: true,\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  const confirmLabel = lang('PayForMessage', { count: messagesCount }, {\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  return (\n    <ConfirmDialog\n      title={lang('TitleConfirmPayment')}\n      confirmLabel={confirmLabel}\n      isOpen={isOpen}\n      onClose={onClose}\n      confirmHandler={confirmHandler}\n    >\n      {confirmPaymentMessage}\n      <Checkbox\n        className={styles.checkBox}\n        label={lang('DoNotAskAgain')}\n        checked={shouldPaidMessageAutoApprove}\n        onCheck={setShouldPaidMessageAutoApprove}\n      />\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(PaymentMessageConfirmDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkBox\":\"eScpikxM\"};","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { IAnchorPosition, MessageListType, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatRestricted,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/browser/windowEnvironment';\nimport { isUserId } from '../../util/entities/ids';\nimport focusNoScroll from '../../util/focusNoScroll';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  channelMonoforumId?: string;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n  isAccountFrozen?: boolean;\n}\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  channelMonoforumId,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  isAccountFrozen,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n    openFrozenAccountModal,\n  } = getActions();\n  const menuButtonRef = useRef<HTMLButtonElement>();\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setFocusInSearchInput();\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  }, [language, lang]);\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <Icon name=\"language\" />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <Icon name=\"search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <Icon name=\"phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <Icon name=\"user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <Icon name=\"more\" />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          channelMonoforumId={channelMonoforumId}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): Complete<StateProps> => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    const isRestricted = selectIsChatRestricted(global, chatId);\n    if (!chat || isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      } as Complete<StateProps>;\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined && !chat.isMonoforum,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat))) && !chat.isMonoforum;\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread && !chat.isMonoforum\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel) && !chat.isMonoforum;\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const channelMonoforumId = isChatChannel(chat) ? chat.linkedMonoforumId : undefined;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n      isAccountFrozen,\n      channelMonoforumId,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  if (searchInput) {\n    focusNoScroll(searchInput);\n  }\n}\n","import type {\n  ElementRef } from '../../../lib/teact/teact';\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n}: {\n  ref?: ElementRef<RefType>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  const localRef = useRef<RefType>();\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n    onStateChange?.({\n      height: 0,\n      isOpen: false,\n    });\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","interface OwnProps {\n  isOwn?: boolean;\n}\n\nfunction MessageAppendix({ isOwn }: OwnProps) {\n  const path = isOwn\n    ? 'M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z'\n    : 'M3 17h6V0c-.193 2.84-.876 5.767-2.05 8.782-.904 2.325-2.446 4.485-4.625 6.48A1 1 0 003 17z';\n  return (\n    <svg width=\"9\" height=\"20\" className=\"svg-appendix\">\n      <defs>\n        <filter x=\"-50%\" y=\"-14.7%\" width=\"200%\" height=\"141.2%\" filterUnits=\"objectBoundingBox\" id=\"messageAppendix\">\n          <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n          <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n          <feColorMatrix\n            values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n            in=\"shadowBlurOuter1\"\n          />\n        </filter>\n      </defs>\n      <g fill=\"none\" fill-rule=\"evenodd\">\n        <path d={path} fill=\"#000\" filter=\"url(#messageAppendix)\" />\n        <path d={path} fill={isOwn ? '#EEFFDE' : 'FFF'} className=\"corner\" />\n      </g>\n    </svg>\n  );\n}\n\nexport default MessageAppendix;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\nconst ARCHIVE_CUSTOM_PEER: CustomPeer = {\n  isCustomPeer: true,\n  title: 'Archived Chats',\n  avatarIcon: 'archive-filled',\n  customPeerAvatarColor: '#9EAAB5',\n};\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('ContextArchiveCollapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('ContextArchiveExpand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('ContextArchiveToMenu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <Icon name=\"archive-filled\" className={styles.icon} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <Avatar peer={ARCHIVE_CUSTOM_PEER} />\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch,\n}) => {\n  const { openSettingsScreen } = getActions();\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    openSettingsScreen({ screen: SettingsScreens.FoldersEditFolderFromChatList });\n  }, [chatFolder, foldersDispatch]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          isRtl={lang.isRtl}\n        >\n          <Icon name=\"settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): Complete<StateProps> => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","import { memo } from '../../../lib/teact/teact';\n\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './FrozenAccountNotification.module.scss';\n\ntype OwnProps = {\n  onClick: () => void;\n};\n\nconst FrozenAccountNotification = ({ onClick }: OwnProps) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={styles.root}\n      onClick={onClick}\n    >\n      <div className={styles.title}>{lang('TitleFrozenAccount')}</div>\n      <div className={styles.subtitle}>{lang('SubtitleFrozenAccount')}</div>\n    </div>\n  );\n};\n\nexport default memo(FrozenAccountNotification);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"fOmerTkM\",\"title\":\"URLYINJA\",\"subtitle\":\"mCFsx7Tv\"};","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange }: OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '@teact';\nimport { memo, useEffect, useMemo, useRef, useState } from '@teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport { IS_APP, IS_MAC_OS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { onDragEnter, onDragLeave } from '../../../util/dragNDropHandlers.ts';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport FrozenAccountNotification from './FrozenAccountNotification';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  isAccountFrozen?: boolean;\n  isMainList?: boolean;\n  foldersDispatch?: FolderEditDispatch;\n  withTags?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  isAccountFrozen,\n  isMainList,\n  foldersDispatch,\n  withTags,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n    openFrozenAccountModal,\n    openLeftColumnContent,\n  } = getActions();\n  const containerRef = useRef<HTMLDivElement>();\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n  const shouldShowFrozenAccountNotification = isAccountFrozen && isAllFolder;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n  const frozenNotificationHeight = shouldShowFrozenAccountNotification ? 68 : 0;\n\n  const { orderDiffById, getAnimationType, onReorderAnimationEnd: onReorderAnimationEnd } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return !isAccountFrozen && isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions, isAccountFrozen]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          if (isMainList) openLeftColumnContent({ contentKey: LeftColumnContent.Archived });\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, openChat, openNextChat, orderedIds, shouldDisplayArchive, isMainList,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    openLeftColumnContent({ contentKey: LeftColumnContent.Archived });\n    closeForumPanel();\n  });\n\n  const handleFrozenAccountNotificationClick = useLastCallback(() => {\n    openFrozenAccountModal();\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    onDragEnter(() => {\n      handleArchivedClick();\n    });\n  });\n\n  const handleChatDragEnter = useLastCallback((chatId: string) => {\n    onDragEnter(() => {\n      openChat({ id: chatId, shouldReplaceHistory: true });\n    });\n  });\n\n  useTopOverscroll({\n    containerRef,\n    onOverscroll: handleShowStoryRibbon,\n    onReset: handleHideStoryRibbon,\n    isDisabled: isSaved,\n  });\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + frozenNotificationHeight\n        + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          onReorderAnimationEnd={onReorderAnimationEnd}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleChatDragEnter}\n          onDragLeave={onDragLeave}\n          withTags={withTags}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      maxHeight={chatsHeight + archiveHeight + frozenNotificationHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldShowFrozenAccountNotification && (\n        <FrozenAccountNotification\n          key=\"frozen\"\n          onClick={handleFrozenAccountNotificationClick}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectIsChatRestricted,\n  selectMonoforumChannel,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  withMonoforumStatus?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  threadInfo?: ApiThreadInfo;\n  topic?: ApiTopic;\n  onlineCount?: number;\n  areMessagesLoaded: boolean;\n  messagesCount?: number;\n  self?: ApiUser;\n  monoforumChannel?: ApiChat;\n};\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat: realChat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  withMonoforumStatus,\n  monoforumChannel,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const chat = !withMonoforumStatus && monoforumChannel ? monoforumChannel : realChat;\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin } = chat || {};\n  const isRestricted = selectIsChatRestricted(getGlobal(), chatId!);\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={oldLang('Updating')} />\n      );\n    }\n\n    if (withMonoforumStatus) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {lang('MonoforumStatus')}\n        </span>\n      );\n    }\n\n    if (realChat?.isMonoforum) {\n      return undefined;\n    }\n\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && oldLang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{oldLang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(oldLang, chat);\n    const onlineStatus = onlineCount ? `, ${oldLang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && oldLang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            asMessageBubble={Boolean(monoforumChannel)}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              isMonoforum={!withMonoforumStatus && Boolean(monoforumChannel)}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): Complete<StateProps> => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n    const monoforumChannel = selectMonoforumChannel(global, chatId);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n      monoforumChannel,\n    };\n  },\n)(GroupChatInfo));\n","import type React from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ThemeKey } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport SensitiveContentConfirmModal from '../../common/SensitiveContentConfirmModal';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ThemeKey;\n  className?: string;\n  clickArg?: T;\n  isMediaNsfw?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\ntype StateProps = {\n  needsAgeVerification?: boolean;\n};\n\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  isMediaNsfw,\n  observeIntersection,\n  onClick,\n  onCancelUpload,\n  needsAgeVerification,\n}: OwnProps<T> & StateProps) => {\n  const ref = useRef<HTMLDivElement>();\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const prevMediaData = usePrevious(mediaData);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const { ref: fullMediaRef, shouldRender: shouldRenderFullMedia } = useMediaTransition<HTMLImageElement>({\n    hasMediaData: Boolean(fullMediaData),\n    withShouldRender: true,\n  });\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition({ ref: thumbRef, hasMediaData: !noThumb });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const { updateContentSettings, openAgeVerificationModal } = getActions();\n  const [isNsfwModalOpen, openNsfwModal, closeNsfwModal] = useFlag();\n  const [shouldAlwaysShowNsfw, setShouldAlwaysShowNsfw] = useState(false);\n\n  const shouldShowSpoiler = isPaidPreview || photo.isSpoiler || isMediaNsfw;\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(shouldShowSpoiler);\n\n  useEffect(() => {\n    if (shouldShowSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [shouldShowSpoiler]);\n\n  const handleNsfwConfirm = useLastCallback(() => {\n    closeNsfwModal();\n    hideSpoiler();\n\n    if (shouldAlwaysShowNsfw) {\n      updateContentSettings({ isSensitiveEnabled: true });\n    }\n  });\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n  const {\n    ref: transferProgressRef,\n    shouldRender: shouldRenderTransferProgress,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      if (isMediaNsfw) {\n        if (needsAgeVerification) {\n          openAgeVerificationModal();\n          return;\n        }\n        openNsfwModal();\n        return;\n      }\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRenderFullMedia && (\n        <img\n          ref={fullMediaRef}\n          src={fullMediaData || prevMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <Icon ref={downloadButtonRef} name=\"download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n        isNsfw={isMediaNsfw}\n      />\n      {shouldRenderTransferProgress && (\n        <span ref={transferProgressRef} className=\"message-transfer-progress\">\n          {`${Math.round(transferProgress * 100)}%`}\n        </span>\n      )}\n      <SensitiveContentConfirmModal\n        isOpen={isNsfwModalOpen}\n        onClose={closeNsfwModal}\n        shouldAlwaysShow={shouldAlwaysShowNsfw}\n        onAlwaysShowChanged={setShouldAlwaysShowNsfw}\n        confirmHandler={handleNsfwConfirm}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal((global): Complete<StateProps> => {\n  const appConfig = global.appConfig;\n  const needsAgeVerification = appConfig.needAgeVideoVerification;\n\n  return {\n    needsAgeVerification,\n  };\n})(Photo));\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","import type { ElementRef, FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Icon from './icons/Icon';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: ElementRef<HTMLDivElement>;\n  id?: string;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  id,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  let elementRef = useRef<HTMLDivElement>();\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div id={id} ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <Icon\n            name={actionIcon || 'download'}\n            className={buildClassName('action-icon', shouldSpinnerRender && 'hidden')}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { IS_SAFARI } from './browser/windowEnvironment';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport { isUserId } from '../../util/entities/ids';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n    deleteChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useLastCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  });\n\n  const handleDeleteAndStop = useLastCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  });\n\n  const handleDeleteChat = useLastCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      if (chat.isCreator) {\n        deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n        deleteChat({ chatId: chat.id });\n      } else {\n        deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n        deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      }\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  });\n\n  const handleLeaveChat = useLastCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else if (isBasicGroup && chat.isCreator) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n    } else {\n      handleDeleteChat();\n    }\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): Complete<StateProps> => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ThemeKey;\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ThemeKey, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ThemeKey;\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import useForceUpdate from '../useForceUpdate';\nimport useInterval from './useInterval';\n\nexport default function useIntervalForceUpdate(interval?: number) {\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, interval, true);\n}\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_STANDARD_QUALITY_IMG_SIZE = 1280; // px\nconst MAX_HIGH_QUALITY_IMG_SIZE = 2560;\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n  const shouldSendInHighQuality = options?.shouldSendInHighQuality;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const maxQuickImgSize = shouldSendInHighQuality ? MAX_HIGH_QUALITY_IMG_SIZE : MAX_STANDARD_QUALITY_IMG_SIZE;\n    const shouldShrink = Math.max(width, height) > maxQuickImgSize;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? maxQuickImgSize / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          ...options,\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width, height, duration };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blob,\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","import { fetchBlob } from './files';\n\ntype AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { parseBlob, selectCover } = await import('music-metadata');\n  const blob = await fetchBlob(url);\n  const metadata = await parseBlob(blob);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data as Uint8Array<ArrayBuffer>], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  isChatGroup,\n} from '../../../../global/helpers';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { isUserId } from '../../../../util/entities/ids';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getPeerTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import { getGlobal, setGlobal } from '../../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../../api/types';\n\nimport {\n  getDocumentMediaHash, getMediaFormat, getMessageDocumentPhoto, getMessageDocumentVideo,\n} from '../../../global/helpers';\nimport { updateChatMessage } from '../../../global/reducers';\nimport { selectChatMessage } from '../../../global/selectors';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport { preloadImage, preloadVideo } from '../../../util/files';\nimport { fetch } from '../../../util/mediaLoader';\nimport LimitedMap from '../../../util/primitives/LimitedMap';\n\nconst preloadedHashes = new LimitedMap<string, void>(100);\n\nexport async function preloadDocumentMedia(mediaContainer: ApiMessage) {\n  const video = getMessageDocumentVideo(mediaContainer);\n  const photo = getMessageDocumentPhoto(mediaContainer);\n\n  const media = video || photo;\n\n  // Skip large photos that were not processed by the server\n  const shouldSkipPhoto = photo && photo.mediaSize && !photo.mediaSize.fromDocumentAttribute;\n  if (!media || media.previewBlobUrl || shouldSkipPhoto) {\n    return;\n  }\n\n  const hash = getDocumentMediaHash(media, 'full');\n  if (!hash || preloadedHashes.has(hash)) {\n    return;\n  }\n\n  preloadedHashes.set(hash, undefined);\n\n  const url = await fetch(hash, getMediaFormat(media, 'full'));\n  if (!url) {\n    return;\n  }\n\n  let dimensions: ApiDocument['mediaSize'] | undefined;\n\n  if (video && IS_PROGRESSIVE_SUPPORTED) {\n    const videoEl = await preloadVideo(url);\n    dimensions = { width: videoEl.videoWidth, height: videoEl.videoHeight, fromPreload: true };\n  }\n\n  if (photo) {\n    const img = await preloadImage(url);\n    dimensions = { width: img.naturalWidth, height: img.naturalHeight, fromPreload: true };\n  }\n\n  if (!dimensions || dimensions.width <= 0 || dimensions.height <= 0) {\n    return;\n  }\n\n  let global = getGlobal();\n  const message = selectChatMessage(global, mediaContainer.chatId, mediaContainer.id);\n  if (!message || !message.content.document) return;\n  global = updateChatMessage(global, mediaContainer.chatId, mediaContainer.id, {\n    content: {\n      ...message.content,\n      document: {\n        ...message.content.document,\n        mediaSize: dimensions,\n      },\n    },\n  });\n  setGlobal(global);\n}\n","import {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { isIpRevealingMedia } from '../../util/media/ipRevealingMedia';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\nimport { preloadDocumentMedia } from './helpers/preloadDocumentMedia';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutFiles?: boolean;\n  id?: string;\n  onCancelUpload?: NoneToVoidFunction;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n  onMediaClick?: (messageId: number) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n  onMediaClick?: NoneToVoidFunction;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutFiles,\n  isDownloading,\n  message,\n  id,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSharedSettingOption } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n  const [isFileIpDialogOpen, openFileIpDialog, closeFileIpDialog] = useFlag();\n  const [shouldNotWarnAboutFiles, setShouldNotWarnAboutFiles] = useState(false);\n\n  const { fileName, size, mimeType } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const shouldForceDownload = document.innerMediaType === 'photo' && document.mediaSize\n    && !document.mediaSize.fromDocumentAttribute && !document.mediaSize.fromPreload;\n\n  const withMediaViewer = onMediaClick && document.innerMediaType && !shouldForceDownload;\n\n  useEffect(() => {\n    const fileEl = ref.current;\n    if (!withMediaViewer || !fileEl || !message) return;\n\n    const onHover = () => {\n      preloadDocumentMedia(message);\n    };\n\n    fileEl.addEventListener('mouseenter', onHover);\n\n    return () => {\n      fileEl.removeEventListener('mouseenter', onHover);\n    };\n  }, [withMediaViewer, message]);\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      if (message) {\n        onMediaClick?.(message.id);\n      } else if (onMediaClick) {\n        (onMediaClick as NoneToVoidFunction)();\n      }\n      return;\n    }\n\n    if (isIpRevealingMedia({ mimeType, extension }) && shouldWarnAboutFiles) {\n      openFileIpDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleFileIpConfirm = useLastCallback(() => {\n    setSharedSettingOption({ shouldWarnAboutFiles: !shouldNotWarnAboutFiles });\n    closeFileIpDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        id={id}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={datetime}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isFileIpDialogOpen}\n        onClose={closeFileIpDialog}\n        confirmHandler={handleFileIpConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutFiles}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutFiles}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { isUserId } from '../../../util/entities/ids';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { getTextColor, int2cssRgba } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = int2cssRgba(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): Complete<StateProps> => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","import {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst NO_SHINY_TYPES = new Set<ApiMediaArea['type']>(['channelPost', 'uniqueGift']);\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, openUniqueGiftBySlug, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element.clientWidth);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n      case 'uniqueGift': {\n        openUniqueGiftBySlug({ slug: mediaArea.slug });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url':\n          case 'uniqueGift': {\n            const isShiny = isActive && !NO_SHINY_TYPES.has(mediaArea.type);\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import type { ElementRef } from '@teact';\nimport { useEffect, useLayoutEffect } from '@teact';\nimport { addExtraClass, removeExtraClass, toggleExtraClass } from '@teact/teact-dom.ts';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom.ts';\nimport { throttle } from '../util/schedulers.ts';\n\nconst THROTTLE_DELAY = 100;\n\nconst useScrollNotch = ({\n  containerRef,\n  selector,\n}: {\n  containerRef: ElementRef<HTMLDivElement>;\n  selector: string;\n}, deps: unknown[]) => {\n  useLayoutEffect(() => {\n    const elements = containerRef.current?.querySelectorAll<HTMLElement>(selector);\n    if (!elements?.length) return undefined;\n\n    const handleScroll = throttle((event: Event) => {\n      const target = event.target as HTMLElement;\n      const isScrolled = target.scrollTop > 0;\n\n      requestMutation(() => {\n        toggleExtraClass(target, 'scrolled', isScrolled);\n      });\n    }, THROTTLE_DELAY);\n\n    elements.forEach((el) => {\n      addExtraClass(el, 'with-notch');\n      el.addEventListener('scroll', handleScroll, { passive: true });\n    });\n\n    return () => {\n      elements.forEach((el) => {\n        el.removeEventListener('scroll', handleScroll);\n        removeExtraClass(el, 'with-notch');\n      });\n    };\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [containerRef, selector, ...deps]);\n\n  useEffect(() => {\n    const elements = containerRef.current?.querySelectorAll<HTMLElement>(selector);\n    if (!elements?.length) return undefined;\n\n    elements.forEach((el) => {\n      const isScrolled = el.scrollTop > 0;\n      requestMutation(() => {\n        toggleExtraClass(el, 'scrolled', isScrolled);\n      });\n    });\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [containerRef, selector, ...deps]);\n};\n\nexport default useScrollNotch;\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport cycleRestrict from '../util/cycleRestrict';\nimport { preloadImage } from '../util/files';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\nimport useLastCallback from './useLastCallback';\n\nconst RADIUS_RATIO = 0.1; // Use 10% of the smallest dimension as the blur radius\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  const blurThumb = useLastCallback(async (canvas: HTMLCanvasElement, uri: string) => {\n    const image = await preloadImage(uri);\n    if (!image) {\n      return;\n    }\n\n    requestMutation(() => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      offscreenRef.current = canvas.transferControlToOffscreen();\n\n      const radius = Math.ceil(Math.min(image.width, image.height) * RADIUS_RATIO);\n\n      requestMediaWorker({\n        name: 'offscreen-canvas:blurThumb',\n        args: [offscreenRef.current, uri, radius],\n        transferables: [offscreenRef.current],\n      }, workerIndex);\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    blurThumb(canvas, thumbData);\n  }, [blurThumb, isDisabled, thumbData]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useCallback, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): Complete<StateProps> => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import type { ElementRef } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n  ApiWebPage,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ThemeKey } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { selectWebPageFromMessage } from '../../global/selectors';\nimport { selectMessageMediaDuration } from '../../global/selectors/media';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ThemeKey;\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\ntype StateProps = {\n  mediaDuration?: number;\n  webPage?: ApiWebPage;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  webPage,\n  mediaDuration,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}: OwnProps & StateProps) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getWebPageAudio(webPage);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  const seekerRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    mediaDuration!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isPlaying) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && formatMediaDuration(duration * playProgress, duration)}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <Icon name={isDownloading ? 'close' : 'arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: ElementRef<HTMLDivElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio.size * progress)} / ` : undefined}\n          {getFileSizeString(audio.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: ElementRef<HTMLDivElement>,\n  waveformCanvasRef: ElementRef<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <Icon\n              name={(isTranscribed || isTranscriptionError) ? 'down' : 'transcribe'}\n              className={buildClassName(\n                'transcribe-icon',\n                (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n              )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media.duration) : formatMediaDuration(media.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ThemeKey,\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: ElementRef<HTMLDivElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    message,\n  }): Complete<StateProps> => {\n    const webPage = selectWebPageFromMessage(global, message);\n    const mediaDuration = selectMessageMediaDuration(global, message);\n\n    return {\n      webPage,\n      mediaDuration,\n    };\n  },\n)(Audio));\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import type { ElementRef } from '../lib/teact/teact';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { IS_SAFARI } from '../util/browser/windowEnvironment';\nimport { makeProgressiveLoader } from '../util/progressiveLoader';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: ElementRef<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/browser/windowEnvironment';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const mediaData = mediaHash\n    ? (isStreaming ? mediaLoader.getProgressiveUrl(mediaHash)\n      : mediaLoader.getFromMemory(mediaHash)) : undefined;\n\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { convertTonFromNanos } from '../../../util/formatCurrency';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nconst DEFAULT_VALUE = 0;\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n    ApiChannelStatistics |\n    ApiGroupStatistics |\n    ApiPostStatistics |\n    ApiBoostStatistics |\n    ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative\n          ? `-${formatIntegerCompact(lang, Math.abs(change))}`\n          : `+${formatIntegerCompact(lang, change)}`}\n        {percentage && (\n          <>\n            {' '}\n            (\n            {percentage}\n            %)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}\n          <span className={styles.decimalPart}>\n            .\n            {decimalTonPart}\n          </span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ $\n          {integerUsdPart}\n          <span className={styles.decimalUsdPart}>\n            .\n            {decimalUsdPart}\n          </span>\n        </span>\n        <h3 className={styles.tableHeading}>{oldLang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = statistics as ApiGroupStatistics;\n  const { balances, usdRate } = statistics as ApiChannelMonetizationStatistics;\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(oldLang, period.minDate * 1000)}\n            {' '}\n            —\n            {formatFullDate(oldLang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(\n                balances?.availableBalance ? convertTonFromNanos(balances.availableBalance.amount) : 0,\n                usdRate || 0,\n                'lng_channel_earn_available',\n              )}\n              {renderBalanceCell(\n                balances?.currentBalance ? convertTonFromNanos(balances.currentBalance.amount) : 0,\n                usdRate || 0,\n                'lng_channel_earn_reward',\n              )}\n              {renderBalanceCell(\n                balances?.overallRevenue ? convertTonFromNanos(balances.overallRevenue.amount) : 0,\n                usdRate || 0,\n                'lng_channel_earn_total',\n              )}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)?.[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈ ' : ''}${formatInteger(field ?? DEFAULT_VALUE)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                const part = field?.part ?? DEFAULT_VALUE;\n                const percentage = field?.percentage ?? DEFAULT_VALUE;\n\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈ ' : ''}${formatInteger(part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {percentage}\n                      %\n                    </span>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(lang, field?.current ?? DEFAULT_VALUE)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { fastRaf } from '../schedulers';\n\nexport type Scheduler = typeof requestAnimationFrame | typeof fastRaf;\n\nexport function waitCurrentTransitionsEnd(element: HTMLElement) {\n  return Promise.allSettled(\n    element.getAnimations({ subtree: true })\n      .filter((a) => a instanceof CSSTransition)\n      .map((a) => a.finished),\n  );\n}\n\nexport function waitStartingTransitionsEnd(element: HTMLElement, scheduler: Scheduler = fastRaf) {\n  return new Promise<void>((resolve) => {\n    scheduler(() => {\n      waitCurrentTransitionsEnd(element).then(() => resolve());\n    });\n  });\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n  noForumTitle?: boolean;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n  noForumTitle,\n}) => {\n  const { openThread } = getActions();\n\n  const lastMessageRef = useRef<HTMLDivElement>();\n  const mainColumnRef = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {\n        !noForumTitle && (\n          <>\n            {lastActiveTopic && (\n              <div className={styles.titleRow}>\n                <div\n                  className={buildClassName(\n                    styles.mainColumn,\n                    lastActiveTopic.unreadCount && styles.unread,\n                  )}\n                  ref={mainColumnRef}\n                  onClick={handleOpenTopicClick}\n                  onMouseDown={handleOpenTopicMouseDown}\n                >\n                  <TopicIcon\n                    topic={lastActiveTopic}\n                    observeIntersection={observeIntersection}\n                  />\n                  <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n                  {!overwrittenWidth && isReversedCorner && (\n                    <div className={styles.afterWrapper}>\n                      <div className={styles.after} />\n                    </div>\n                  )}\n                </div>\n\n                <div className={styles.otherColumns}>\n                  {otherTopics.map((topic) => (\n                    <div\n                      className={buildClassName(\n                        styles.otherColumn, topic.unreadCount && styles.unread,\n                      )}\n                      key={topic.id}\n                    >\n                      <TopicIcon\n                        topic={topic}\n                        className={styles.otherColumnIcon}\n                        observeIntersection={observeIntersection}\n                      />\n                      <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n                    </div>\n                  ))}\n                </div>\n\n                <div className={styles.ellipsis} />\n              </div>\n            )}\n            {!lastActiveTopic && (\n              <div className={buildClassName(styles.titleRow, styles.loading)}>\n                {lang('Loading')}\n              </div>\n            )}\n          </>\n        )\n      }\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && !noForumTitle && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import {\n  useCallback, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getMessageIsSpoiler,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n} from '../../../../global/helpers';\nimport { getMessageSenderName } from '../../../../global/helpers/peers';\nimport { waitStartingTransitionsEnd } from '../../../../util/animations/waitTransitionEnd';\nimport buildClassName from '../../../../util/buildClassName';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useMessageMediaHash from '../../../../hooks/media/useMessageMediaHash';\nimport useThumbnail from '../../../../hooks/media/useThumbnail';\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useLang from '../../../../hooks/useLang';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport Icon from '../../../common/icons/Icon';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  lastMessageTopic,\n  lastMessageSender,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n  noForumTitle,\n  onReorderAnimationEnd,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n  noForumTitle?: boolean;\n  onReorderAnimationEnd?: NoneToVoidFunction;\n}) {\n  const lang = useLang();\n  const ref = useRef<HTMLDivElement>();\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const thumbDataUri = useThumbnail(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? thumbDataUri : undefined;\n  const mediaHash = useMessageMediaHash(mediaContent, 'micro');\n  const mediaBlobUrl = useMedia(mediaHasPreview ? mediaHash : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n      && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('ChatDraftPrefix')}</span>\n          <span className=\"last-message-summary\" dir=\"auto\">\n            {renderTextWithEntities({\n              text: draft.text?.text || '',\n              entities: draft.text?.entities,\n              asPreview: true,\n              withTranslucentThumbs: true,\n            })}\n          </span>\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    const senderName = lastMessageSender\n      ? getMessageSenderName(lang, chatId, lastMessageSender)\n      : undefined;\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<Icon name=\"share-filled\" className=\"chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<Icon name=\"story-reply\" className=\"chat-prefix-icon\" />)}\n        <span className=\"last-message-summary\" dir=\"auto\">\n          {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </span>\n      </p>\n    );\n  }, [\n    chat, chatId, draft, isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic,\n    mediaBlobUrl, mediaThumbnail, observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n          noForumTitle={noForumTitle}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    let isCancelled = false;\n\n    const notifyAnimationEnd = () => {\n      if (isCancelled) return;\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n      onReorderAnimationEnd?.();\n    };\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n\n        waitStartingTransitionsEnd(element).then(notifyAnimationEnd);\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n\n        waitStartingTransitionsEnd(element).then(notifyAnimationEnd);\n      });\n    } else {\n      return;\n    }\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [withInterfaceAnimations, orderDiff, animationType, onReorderAnimationEnd]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import type { TypeStatisticsGraph } from '../../../../api/types';\n\nexport function isGraph(obj: unknown): obj is TypeStatisticsGraph {\n  // eslint-disable-next-line no-null/no-null\n  return typeof obj === 'object' && obj !== null && 'graphType' in obj;\n}\n","import type React from '../../lib/teact/teact';\nimport { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport buildClassName from '../../util/buildClassName';\nimport { isUserId } from '../../util/entities/ids';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  const ref = useRef<HTMLDivElement>();\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getPeerTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  const ref = useRef<HTMLDivElement>();\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): Complete<StateProps> => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import { debounce } from './schedulers.ts';\n\nconst DRAG_ENTER_DEBOUNCE = 50; // Workaround for `dragenter` firing before previous `dragleave`\nconst DRAG_ENTER_ACTION_DELAY = 500;\n\nlet willSkipNext = false;\nlet timeout: number | undefined;\n\nexport const onDragEnter = debounce((cb: NoneToVoidFunction, shouldSkipNext = false) => {\n  if (timeout) {\n    clearTimeout(timeout);\n    timeout = undefined;\n  }\n\n  if (willSkipNext) {\n    willSkipNext = false;\n    return;\n  }\n\n  timeout = window.setTimeout(() => {\n    if (shouldSkipNext) {\n      willSkipNext = true;\n    }\n\n    cb();\n  }, DRAG_ENTER_ACTION_DELAY);\n}, DRAG_ENTER_DEBOUNCE, false);\n\nexport function onDragLeave() {\n  if (timeout) {\n    clearTimeout(timeout);\n    timeout = undefined;\n  }\n}\n","import type { GlobalState } from '../global/types';\nimport type { OldLangFn } from './useOldLang';\n\nimport useBrowserOnline from './window/useBrowserOnline';\n\nexport enum ConnectionStatus {\n  waitingForNetwork,\n  syncing,\n  online,\n}\n\ntype ConnectionStatusPosition =\n  'overlay'\n  | 'minimized'\n  | 'middleHeader'\n  | 'none';\n\nexport default function useConnectionStatus(\n  lang: OldLangFn,\n  connectionState: GlobalState['connectionState'],\n  isSyncing: boolean | undefined,\n  hasMiddleHeader: boolean,\n  isMinimized?: boolean,\n  isDisabled?: boolean,\n) {\n  let status: ConnectionStatus;\n  const isBrowserOnline = useBrowserOnline();\n  if (!isBrowserOnline || connectionState === 'connectionStateConnecting') {\n    status = ConnectionStatus.waitingForNetwork;\n  } else if (isSyncing) {\n    status = ConnectionStatus.syncing;\n  } else {\n    status = ConnectionStatus.online;\n  }\n\n  let position: ConnectionStatusPosition;\n  if (status === ConnectionStatus.online || isDisabled) {\n    position = 'none';\n  } else if (hasMiddleHeader) {\n    position = 'middleHeader';\n  } else if (isMinimized) {\n    position = 'minimized';\n  } else {\n    position = 'overlay';\n  }\n\n  let text: string | undefined;\n  if (status === ConnectionStatus.waitingForNetwork) {\n    text = lang('WaitingForNetwork');\n  } else if (status === ConnectionStatus.syncing) {\n    text = lang('Updating');\n  }\n\n  if (position === 'middleHeader') {\n    text = text!.toLowerCase().replace(/\\.+$/, '');\n  }\n\n  return {\n    connectionStatus: status,\n    connectionStatusPosition: position,\n    connectionStatusText: text,\n  };\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\n\nexport default function useBrowserOnline() {\n  const [isOnline, setIsOnline] = useState(window.navigator.onLine);\n\n  useEffect(() => {\n    function handleChange() {\n      setIsOnline(window.navigator.onLine);\n    }\n\n    window.addEventListener('online', handleChange);\n    window.addEventListener('offline', handleChange);\n\n    return () => {\n      window.removeEventListener('offline', handleChange);\n      window.removeEventListener('online', handleChange);\n    };\n  }, []);\n\n  return isOnline;\n}\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import type {\n  ElementRef } from '../../../../lib/teact/teact';\nimport {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectCustomEmoji, selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport { hex2rgbaObj } from '../../../../util/colors.ts';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: ElementRef<HTMLDivElement>,\n  sharedCanvasRef: ElementRef<HTMLCanvasElement>,\n  sharedCanvasHqRef: ElementRef<HTMLCanvasElement>,\n  absoluteContainerRef: ElementRef<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, undefined, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = selectCustomEmoji(global, documentId);\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: ElementRef<HTMLCanvasElement>;\n  sharedCanvasHqRef: ElementRef<HTMLCanvasElement>;\n  absoluteContainerRef: ElementRef<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hex2rgbaObj(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent } from 'react';\nimport type { ElementRef, FC, TeactNode } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { SharedSettings } from '../../../global/types';\nimport type {\n  IAnchorPosition, MessageListType, ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_TAURI } from '../../../util/browser/globalEnvironment';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce, fastRaf } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: ElementRef<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: TeactNode | string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: SharedSettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n  messageListType,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  let inputRef = useRef<HTMLDivElement>();\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const selectionTimeoutRef = useRef<number>();\n  const cloneRef = useRef<HTMLDivElement>();\n  const scrollerCloneRef = useRef<HTMLDivElement>();\n  const sharedCanvasRef = useRef<HTMLCanvasElement>();\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>();\n  const absoluteContainerRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    // Defer to avoid animation/layout conflicts during DOM updates\n    fastRaf(() => {\n      requestForcedReflow(() => {\n        const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n        const currentHeight = Number(scroller.style.height.replace('px', ''));\n        const clone = scrollerCloneRef.current!;\n        const { scrollHeight } = clone;\n        const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n        if (newHeight === currentHeight) {\n          return undefined;\n        }\n\n        const isOverflown = scrollHeight > maxInputHeight;\n\n        function exec() {\n          const transitionDuration = Math.round(\n            TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n          );\n          scroller.style.height = `${newHeight}px`;\n          scroller.style.transitionDuration = `${transitionDuration}ms`;\n          scroller.classList.toggle('overflown', isOverflown);\n        }\n\n        if (willSend) {\n          // Delay to next frame to sync with sending animation\n          requestMutation(exec);\n          return undefined;\n        } else {\n          return exec;\n        }\n      });\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (!isActive && inputRef.current) {\n      inputRef.current.blur();\n    }\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    focusEditableElement(inputRef.current);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId, messageListType });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n  const placeholderAriaLabel = typeof placeholder === 'string' ? placeholder : undefined;\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={oldLang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            spellCheck={IS_TAURI ? false : undefined}\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholderAriaLabel}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <Icon name=\"lock-badge\" className=\"placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {oldLang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): Complete<StateProps> => {\n    const { messageSendKeyCombo } = selectSharedSettings(global);\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values<number>(orderDiffById);\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): Complete<StateProps> => {\n    if (!typingStatus.userId) {\n      return { typingUser: undefined };\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageVideo,\n  getVideoMediaHash,\n} from '../../global/helpers';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useMessageMediaHash from '../../hooks/media/useMessageMediaHash';\nimport useThumbnail from '../../hooks/media/useThumbnail';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  canAutoPlay?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  canAutoPlay,\n  observeIntersection,\n  onClick,\n}: OwnProps) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [isHovering, markMouseOver, markMouseOut] = useFlag();\n\n  const thumbDataUri = useThumbnail(message);\n  const mediaHash = useMessageMediaHash(message, 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n  const fullGiftHash = video?.isGif ? getVideoMediaHash(video, 'full') : undefined;\n  const fullGifBlobUrl = useMedia(fullGiftHash, !isIntersecting);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n      onMouseOver={!IS_TOUCH_ENV ? markMouseOver : undefined}\n      onMouseOut={!IS_TOUCH_ENV ? markMouseOut : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {fullGifBlobUrl ? (\n        <OptimizedVideo\n          canPlay={isIntersecting && !hasSpoiler && isHovering && Boolean(canAutoPlay)}\n          src={fullGifBlobUrl}\n          className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n          muted\n          loop\n          playsInline\n          draggable={false}\n          disablePictureInPicture\n          onContextMenu={isProtected ? stopEvent : undefined}\n        />\n      ) : (\n        <img\n          src={mediaBlobUrl}\n          className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n          decoding=\"async\"\n          onContextMenu={isProtected ? stopEvent : undefined}\n        />\n      )}\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/browser/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: ElementRef<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport useThumbnail from '../../../hooks/media/useThumbnail';\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const playerRef = useRef<HTMLVideoElement>();\n  const circleRef = useRef<SVGCircleElement>();\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n  const isMediaUnread = message.isMediaUnread;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const thumbDataUri = useThumbnail(message);\n  const hasThumb = Boolean(thumbDataUri);\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition({ hasMediaData: !noThumb, ref: thumbRef });\n\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isActivated) {\n      onReadMedia();\n    }\n  }, [isActivated, isMediaUnread, onReadMedia]);\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n    setCurrentTime(Math.floor(playerEl.currentTime));\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            defaultMuted\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <Icon name=\"download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div\n          className={buildClassName(\n            'message-media-duration', isMediaUnread && 'unread',\n          )}\n        >\n          {isActivated ? formatMediaDuration(currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n} from '../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getFirstLetters } from '../../../util/textFormat';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport Spinner from '../../ui/Spinner';\nimport Icon from '../icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  className?: string;\n  style?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  className,\n  style,\n  onClick,\n}) => {\n  const videoRef = useRef<HTMLVideoElement>();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              draggable={false}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n    className,\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined} style={style}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dspICZx5\",\"gift\":\"GtRefNqT\",\"fadeOut\":\"CviSFYWp\",\"fadeIn\":\"zARAyL86\"};","import { memo, useMemo, useRef } from '@teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSavedStarGift } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { clamp } from '../../../util/math';\nimport { getGiftAttributes } from '../helpers/gifts';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport { useVtn } from '../../../hooks/animations/useVtn';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport GiftEffectWrapper from '../gift/GiftEffectWrapper';\nimport StickerView from '../StickerView';\n\nimport styles from './ProfilePinnedGifts.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  className?: string;\n  gifts?: ApiSavedStarGift[];\n  isExpanded?: boolean;\n  withGlow?: boolean;\n};\n\nconst GIFT_STICKER_SIZE = 2 * REM;\nconst POSITIONS = [\n  { x: -0.2, y: -0.3 },\n  { x: 0.3, y: 0.1 },\n  { x: -0.4, y: -0.1 },\n  { x: 0.4, y: -0.1 },\n  { x: -0.25, y: 0.1 },\n  { x: 0.25, y: -0.25 },\n];\n\nconst CENTER = { x: 0.5, y: 0.5 };\n\nconst ProfilePinnedGifts = ({\n  peerId,\n  gifts,\n  isExpanded,\n  className,\n  withGlow,\n}: OwnProps) => {\n  const { createVtnStyle } = useVtn();\n\n  if (!gifts) return undefined;\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {gifts.slice(0, POSITIONS.length).map((gift, index) => {\n        const position = !isExpanded ? POSITIONS[index] : getExpandedPosition(POSITIONS[index]);\n        const style = buildStyle(\n          `top: ${(CENTER.y + position.y) * 100}%`,\n          `left: ${(CENTER.x + position.x) * 100}%`,\n        );\n        return (\n          <PinnedGift\n            peerId={peerId}\n            className={styles.gift}\n            key={gift.gift.id}\n            gift={gift}\n            style={buildStyle(style, createVtnStyle(`profilePinnedGift${index}`, 'profilePinnedGift'))}\n            withGlow={withGlow}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nfunction getExpandedPosition(position: { x: number; y: number }) {\n  return {\n    x: clamp(position.x * 1.5, -0.45, 0.45),\n    y: clamp(position.y * 1.5, -0.45, 0.45),\n  };\n}\n\nconst PinnedGift = ({\n  gift, style, className, withGlow, peerId,\n}: {\n  gift: ApiSavedStarGift;\n  style?: string;\n  className?: string;\n  withGlow?: boolean;\n  peerId: string;\n}) => {\n  const { openGiftInfoModal } = getActions();\n\n  const stickerRef = useRef<HTMLDivElement>();\n\n  const giftAttributes = useMemo(() => {\n    return getGiftAttributes(gift.gift);\n  }, [gift]);\n\n  const handleClick = useLastCallback(() => {\n    openGiftInfoModal({ peerId, gift });\n  });\n\n  if (!giftAttributes?.model || !giftAttributes.backdrop) return undefined;\n\n  return (\n    <GiftEffectWrapper\n      withSparkles\n      sparklesColor={giftAttributes.backdrop.textColor}\n      glowColor={withGlow ? giftAttributes.backdrop.edgeColor : undefined}\n      ref={stickerRef}\n      className={className}\n      style={style}\n      onClick={handleClick}\n    >\n      <StickerView\n        containerRef={stickerRef}\n        sticker={giftAttributes.model.sticker}\n        size={GIFT_STICKER_SIZE}\n        withTranslucentThumb\n        noPlay\n      />\n    </GiftEffectWrapper>\n  );\n};\n\nexport default memo(ProfilePinnedGifts);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Z_HM0Jqg\",\"plain\":\"YIhgPXW6\",\"minimized\":\"blI_IH7j\",\"userRatingNegativeWrapper\":\"vuUzgWI1\",\"userRatingWrapper\":\"P6tsZMON\",\"status\":\"XxRtPe_4\",\"getStatus\":\"wCXGPPTY\",\"userStatus\":\"F4JyLH2c\",\"fallbackPhoto\":\"eZ2DGNou\",\"fallbackPhotoContents\":\"ldzIKEUp\",\"fallbackPhotoVisible\":\"uNvH08Qp\",\"fallbackPhotoAvatar\":\"a9OwsvOP\",\"photoWrapper\":\"UZ7NDj8N\",\"photoDashes\":\"e7iOf_3T\",\"photoDash\":\"eD0Is6TL\",\"photoDash_current\":\"MSdiAM06\",\"photoDashCurrent\":\"MSdiAM06\",\"navigation\":\"Yr9FHqbF\",\"navigation_prev\":\"Z1ZX2xot\",\"navigationPrev\":\"Z1ZX2xot\",\"navigation_next\":\"X0stLWTl\",\"navigationNext\":\"X0stLWTl\",\"info\":\"ZFBuRDGK\",\"title\":\"atYgxkWV\",\"ratingIcon\":\"Yvu9iM5n\",\"ratingNegativeIcon\":\"JZBCjHv0\",\"ratingLevel\":\"eFsZljMG\",\"topicContainer\":\"dNcezQH8\",\"topicTitle\":\"hjk4U031\",\"topicIcon\":\"YwVcTLvK\",\"topicIconTitle\":\"_sQEevF7\",\"topicMessagesCounter\":\"GXxwbzqF\",\"radialPatternBackground\":\"BvunKb6r\",\"standaloneAvatar\":\"rLHO_VQT\",\"activeProfilePhoto\":\"yltXKQri\",\"pinnedGifts\":\"JX3wjADD\",\"profileExpandAvatar\":\"KtpaSfR5\",\"profileCollapseAvatar\":\"c1xe6OKs\"};","import { memo, useEffect, useMemo, useState } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiEmojiStatusType,\n  ApiPeerColorOption,\n  ApiPeerPhotos,\n  ApiPeerProfileColorSet,\n  ApiSavedGifts,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUserStatus,\n} from '../../../api/types/index';\nimport type { IconName } from '../../../types/icons/index';\nimport type { AnimationLevel, ThemeKey } from '../../../types/index';\nimport { MediaViewerOrigin } from '../../../types/index';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../../global/helpers/index';\nimport { getActions, withGlobal } from '../../../global/index';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectCustomEmoji,\n  selectPeer,\n  selectPeerHasProfileBackground,\n  selectPeerPhotos,\n  selectPeerProfileColor,\n  selectPeerSavedGifts,\n  selectTabState,\n  selectTheme,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../../global/selectors/index';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { resolveTransitionName } from '../../../util/resolveTransitionName';\nimport { REM } from '../helpers/mediaDimensions.ts';\nimport renderText from '../helpers/renderText.tsx';\n\nimport { useVtn } from '../../../hooks/animations/useVtn';\nimport useIntervalForceUpdate from '../../../hooks/schedulers/useIntervalForceUpdate';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\nimport usePhotosPreload from '../hooks/usePhotosPreload';\n\nimport Transition from '../../ui/Transition.tsx';\nimport Avatar from '../Avatar.tsx';\nimport FullNameTitle from '../FullNameTitle.tsx';\nimport Icon from '../icons/Icon.tsx';\nimport TopicIcon from '../TopicIcon.tsx';\nimport ProfilePhoto from './ProfilePhoto';\nimport ProfilePinnedGifts from './ProfilePinnedGifts.tsx';\nimport RadialPatternBackground from './RadialPatternBackground.tsx';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\nconst MAX_LEVEL_ICON = 90;\n\ntype OwnProps = {\n  isExpanded?: boolean;\n  peerId: string;\n  isForSettings?: boolean;\n  canPlayVideo: boolean;\n  isForMonoforum?: boolean;\n  onExpand?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userFullInfo?: ApiUserFullInfo;\n  userStatus?: ApiUserStatus;\n  chat?: ApiChat;\n  mediaIndex?: number;\n  avatarOwnerId?: string;\n  topic?: ApiTopic;\n  messagesCount?: number;\n  animationLevel: AnimationLevel;\n  emojiStatus?: ApiEmojiStatusType;\n  emojiStatusSticker?: ApiSticker;\n  emojiStatusSlug?: string;\n  profilePhotos?: ApiPeerPhotos;\n  profileColorOption?: ApiPeerColorOption<ApiPeerProfileColorSet>;\n  theme: ThemeKey;\n  isPlain?: boolean;\n  savedGifts?: ApiSavedGifts;\n};\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\nconst STATUS_UPDATE_INTERVAL = 1000 * 60; // 1 min\nconst PATTERN_Y_SHIFT = 8 * REM;\n\nconst ProfileInfo = ({\n  isExpanded,\n  isForSettings,\n  canPlayVideo,\n  user,\n  userFullInfo,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  animationLevel,\n  emojiStatus,\n  emojiStatusSticker,\n  emojiStatusSlug,\n  profilePhotos,\n  peerId,\n  isForMonoforum,\n  profileColorOption,\n  theme,\n  isPlain,\n  savedGifts,\n  onExpand,\n}: OwnProps & StateProps) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n    openUniqueGiftBySlug,\n    openProfileRatingModal,\n    loadPeerSavedGifts,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useIntervalForceUpdate(user ? STATUS_UPDATE_INTERVAL : undefined);\n\n  const { createVtnStyle } = useVtn();\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  const collectibleEmojiStatus = emojiStatus?.type === 'collectible' ? emojiStatus : undefined;\n\n  const peer = user || chat;\n  const { customEmoji: backgroundEmoji } = useCustomEmoji(\n    collectibleEmojiStatus?.patternDocumentId || peer?.profileColor?.backgroundEmojiId,\n  );\n\n  const profileColorSet = useMemo(() => {\n    if (collectibleEmojiStatus) {\n      return {\n        bgColors: [collectibleEmojiStatus.centerColor, collectibleEmojiStatus.edgeColor],\n        storyColors: [collectibleEmojiStatus.textColor, collectibleEmojiStatus.textColor],\n      };\n    }\n\n    const colors = profileColorOption\n      && (theme === 'dark' ? profileColorOption.darkColors : profileColorOption.colors);\n    if (!colors) return undefined;\n\n    // Why are they reversed on the server?\n    return {\n      bgColors: [...colors.bgColors].reverse(),\n      storyColors: [...colors.storyColors].reverse(),\n    };\n  }, [profileColorOption, theme, collectibleEmojiStatus]);\n\n  const pinnedGifts = useMemo(() => {\n    return savedGifts?.gifts.filter((gift) => {\n      if (gift.gift.type === 'starGiftUnique') {\n        return gift.isPinned && gift.gift.slug !== collectibleEmojiStatus?.slug;\n      }\n\n      return gift.isPinned;\n    });\n  }, [savedGifts, collectibleEmojiStatus?.slug]);\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  useEffect(() => {\n    loadPeerSavedGifts({ peerId });\n  }, [peerId]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  // Reset photo index when collapsing\n  useEffect(() => {\n    if (!isExpanded) {\n      setCurrentPhotoIndex(0);\n    }\n  }, [isExpanded]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: isForSettings ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (emojiStatusSlug) {\n      openUniqueGiftBySlug({ slug: emojiStatusSlug });\n      return;\n    }\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  const handleRatingClick = useLastCallback((level: number) => {\n    if (user) {\n      openProfileRatingModal({ userId: user.id, level });\n    }\n  });\n\n  const handleMinimizedAvatarClick = useLastCallback(() => {\n    if (isForSettings) {\n      handleProfilePhotoClick();\n      return;\n    }\n\n    onExpand?.();\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? oldLang('Chat.Title.Topic', messagesCount, 'i') : oldLang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes} style={createVtnStyle('photoDashes', true)}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        className={buildClassName(isActive && styles.activeProfilePhoto)}\n        style={isActive ? createVtnStyle('avatar', true) : undefined}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderUserRating() {\n    if (!userFullInfo?.starsRating) return undefined;\n\n    const level = userFullInfo.starsRating.level;\n    const isNegative = level < 0;\n\n    const onRatingClick = () => handleRatingClick(level);\n\n    if (isNegative) {\n      return (\n        <span role=\"button\" tabIndex={0} className={styles.userRatingNegativeWrapper} onClick={onRatingClick}>\n          <Icon\n            name=\"rating-icons-negative\"\n            className={styles.ratingNegativeIcon}\n          />\n          <span className={styles.ratingLevel}>!</span>\n        </span>\n      );\n    }\n\n    const safeLevel = Math.max(level, 1);\n    const iconLevel = Math.min(safeLevel, MAX_LEVEL_ICON);\n    const iconName = (iconLevel < 10\n      ? `rating-icons-level${iconLevel}`\n      : `rating-icons-level${Math.floor(iconLevel / 10) * 10}`) as IconName;\n\n    return (\n      <span role=\"button\" tabIndex={0} className={styles.userRatingWrapper} onClick={onRatingClick}>\n        <Icon\n          name={iconName}\n          className={styles.ratingIcon}\n        />\n        <span className={styles.ratingLevel}>{level}</span>\n      </span>\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (isForMonoforum) {\n      return (\n        <span\n          className={buildClassName(styles.status, 'status')}\n          dir=\"auto\"\n          style={createVtnStyle('status', true)}\n        >\n          {lang('MonoforumStatus')}\n        </span>\n      );\n    }\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n          style={createVtnStyle('status', true)}\n        >\n          {renderUserRating()}\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(oldLang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{oldLang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span\n        className={buildClassName(styles.status, 'status')}\n        dir=\"auto\"\n        style={createVtnStyle('status', true)}\n      >\n        {\n          isChatChannel(chat!)\n            ? oldLang('Subscribers', chat!.membersCount ?? 0, 'i')\n            : oldLang('Members', chat!.membersCount ?? 0, 'i')\n        }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        'ProfileInfo',\n        styles.root,\n        !isExpanded && styles.minimized,\n        isPlain && styles.plain,\n      )}\n      style={buildStyle(\n        profileColorSet && `--rating-outline-color: ${isExpanded ? 'transparent' : profileColorSet?.bgColors[0]}`,\n        profileColorSet && !isExpanded && `--rating-text-color: ${profileColorSet?.bgColors[0]}`,\n        createVtnStyle('profileInfo', true),\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {profileColorSet?.bgColors && (\n        <RadialPatternBackground\n          backgroundColors={profileColorSet.bgColors}\n          patternIcon={backgroundEmoji}\n          patternSize={16}\n          withLinearGradient={!collectibleEmojiStatus}\n          className={styles.radialPatternBackground}\n          yPosition={PATTERN_Y_SHIFT}\n        />\n      )}\n      {pinnedGifts && (\n        <ProfilePinnedGifts\n          peerId={peerId}\n          gifts={pinnedGifts}\n          isExpanded={isExpanded}\n          className={styles.pinnedGifts}\n          withGlow={!isPlain}\n        />\n      )}\n      {isExpanded && (\n        <div className={styles.photoWrapper} style={createVtnStyle('photoWrapper', true)}>\n          {renderPhotoTabs()}\n          {!isForSettings && profilePhotos?.personalPhoto && (\n            <div className={buildClassName(\n              styles.fallbackPhoto,\n              isFirst && styles.fallbackPhotoVisible,\n            )}\n            >\n              <div className={styles.fallbackPhotoContents}>\n                {oldLang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n              </div>\n            </div>\n          )}\n          {isForSettings && profilePhotos?.fallbackPhoto && (\n            <div className={buildClassName(\n              styles.fallbackPhoto,\n              (isFirst || isLast) && styles.fallbackPhotoVisible,\n            )}\n            >\n              <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n                {!isLast && (\n                  <Avatar\n                    photo={profilePhotos.fallbackPhoto}\n                    className={styles.fallbackPhotoAvatar}\n                    size=\"mini\"\n                  />\n                )}\n                {oldLang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n              </div>\n            </div>\n          )}\n          <Transition\n            activeKey={currentPhotoIndex}\n            name={resolveTransitionName('slide', animationLevel, !hasSlideAnimation, lang.isRtl)}\n          >\n            {renderPhoto}\n          </Transition>\n\n          {!isFirst && (\n            <button\n              type=\"button\"\n              dir={lang.isRtl ? 'rtl' : undefined}\n              className={buildClassName(styles.navigation, styles.navigation_prev)}\n              aria-label={oldLang('AccDescrPrevious')}\n              onClick={selectPreviousMedia}\n            />\n          )}\n          {!isLast && (\n            <button\n              type=\"button\"\n              dir={lang.isRtl ? 'rtl' : undefined}\n              className={buildClassName(styles.navigation, styles.navigation_next)}\n              aria-label={oldLang('Next')}\n              onClick={selectNextMedia}\n            />\n          )}\n        </div>\n      )}\n      {!isExpanded && (\n        <Avatar\n          withStory\n          storyColors={profileColorSet?.storyColors}\n          className={styles.standaloneAvatar}\n          key={peer?.id}\n          size=\"jumbo\"\n          peer={peer}\n          style={createVtnStyle('avatar', true)}\n          onClick={handleMinimizedAvatarClick}\n        />\n      )}\n\n      <div\n        className={styles.info}\n        dir={lang.isRtl ? 'rtl' : 'auto'}\n        style={createVtnStyle('info', true)}\n      >\n        {(user || chat) && (\n          <FullNameTitle\n            className={styles.title}\n            style={createVtnStyle('title', true)}\n            peer={(user || chat)!}\n            withEmojiStatus\n            withStatusTextColor\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): Complete<StateProps> => {\n    const peer = selectPeer(global, peerId);\n    const user = selectUser(global, peerId);\n    const userFullInfo = user ? selectUserFullInfo(global, peerId) : undefined;\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n    const { animationLevel } = selectSharedSettings(global);\n\n    const emojiStatus = peer?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? selectCustomEmoji(global, emojiStatus.documentId) : undefined;\n    const emojiStatusSlug = emojiStatus?.type === 'collectible' ? emojiStatus.slug : undefined;\n\n    const profileColor = peer && selectPeerProfileColor(global, peer);\n    const theme = selectTheme(global);\n\n    const hasBackground = selectPeerHasProfileBackground(global, peerId);\n    const savedGifts = selectPeerSavedGifts(global, peerId);\n\n    return {\n      user,\n      userFullInfo,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      animationLevel,\n      emojiStatusSticker,\n      emojiStatusSlug,\n      emojiStatus,\n      profilePhotos,\n      topic,\n      messagesCount: topic ? selectThreadMessagesCount(global, peerId, currentTopicId!) : undefined,\n      profileColorOption: profileColor,\n      theme,\n      isPlain: !hasBackground,\n      savedGifts,\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type {\n  ElementRef } from '../lib/teact/teact';\nimport {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  const controllerRef = useRef<ReturnType<typeof register>>();\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: ElementRef<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import type { ElementRef, FC } from '../../../lib/teact/teact';\nimport {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  sponsorInfo?: string;\n  canReport?: boolean;\n  triggerRef: ElementRef<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredContextMenu: FC<OwnProps> = ({\n  isOpen,\n  sponsorInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  const menuRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = sponsorInfo || !shouldSkipAbout || canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredContextMenu);\n","import type { ElementRef, FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredContextMenu from './SponsoredContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  randomId: string;\n  sponsorInfo?: string;\n  additionalInfo?: string;\n  canReport?: boolean;\n  anchor: IAnchorPosition;\n  triggerRef: ElementRef<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  randomId,\n  sponsorInfo,\n  additionalInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsored,\n    hideSponsored,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({\n      randomId,\n      additionalInfo,\n      canReport,\n      sponsorInfo,\n    });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsored();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [sponsorInfo, additionalInfo].filter(Boolean).join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsored({ randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        canReport={canReport}\n        sponsorInfo={sponsorInfo}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): Complete<StateProps> => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { UNMUTE_TIMESTAMP } from '../../../config';\nimport { groupStatefulContent } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectSender,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport Icon from '../../common/icons/Icon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  onReorderAnimationEnd?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  lastMessageSender?: ApiPeer;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  isChatMuted,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n  onReorderAnimationEnd,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n    updateTopicMutedState,\n    openQuickPreview,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed, notifySettings,\n  } = topic;\n  const isMuted = Boolean(notifySettings.mutedUntil || (notifySettings.mutedUntil === undefined && isChatMuted));\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleUnmute = useLastCallback(() => {\n    updateTopicMutedState({ chatId, topicId: topic.id, mutedUntil: UNMUTE_TIMESTAMP });\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    onReorderAnimationEnd,\n  });\n\n  const handleOpenTopic = useLastCallback((e: React.MouseEvent) => {\n    if (e.altKey) {\n      e.preventDefault();\n      openQuickPreview({ id: chatId, threadId: topic.id });\n      return;\n    }\n\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    isChatMuted,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n    handleUnmute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {Boolean(notifySettings.mutedUntil) && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <Icon name=\"lock-badge\" className={styles.closedIcon} />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { isOutgoing } = lastMessage || {};\n    const lastMessageSender = lastMessage && selectSender(global, lastMessage);\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    const isChatMuted = chat && getIsChatMuted(\n      chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id),\n    );\n\n    return {\n      chat,\n      lastMessage,\n      lastMessageSender,\n      typingStatus,\n      isChatMuted,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport { compact } from '../../../../util/iteratees';\n\nimport useLang from '../../../../hooks/useLang';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  isChatMuted,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n  handleUnmute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleUnmute?: NoneToVoidFunction;\n}) {\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, notifySettings, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      openChatInNewTab,\n      openQuickPreview,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionQuickPreview = {\n      title: lang('QuickPreview'),\n      icon: 'eye-outline',\n      handler: () => {\n        openQuickPreview({ id: chatId, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: oldLang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: oldLang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: oldLang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((isChatMuted && notifySettings.mutedUntil === undefined) || notifySettings.mutedUntil)\n      ? {\n        title: oldLang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: handleUnmute,\n      }\n      : {\n        title: `${oldLang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: oldLang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: oldLang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: oldLang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionQuickPreview,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, isChatMuted, wasOpened, lang, oldLang, canDelete, handleDelete, handleMute, handleUnmute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const containerRef = useRef<HTMLDivElement>();\n  const scrollTopHandlerRef = useRef<HTMLDivElement>();\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType, onReorderAnimationEnd } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: (e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      },\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n        onReorderAnimationEnd={onReorderAnimationEnd}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { IS_TAURI } from '../../util/browser/globalEnvironment';\nimport { IS_IOS } from '../../util/browser/windowEnvironment';\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen<T extends HTMLElement>(elRef: ElementRef<T>, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    let removeTauriListener: VoidFunction | undefined;\n    const setupTauriListener = async () => {\n      const tauriWindow = await window.tauri?.getCurrentWindow();\n      removeTauriListener = await tauriWindow.onResized(() => {\n        tauriWindow.isFullscreen().then(setIsFullscreen);\n      });\n    };\n\n    if (IS_TAURI) {\n      window.tauri?.getCurrentWindow().then((tauriWindow) => {\n        tauriWindow.isFullscreen().then(setIsFullscreen);\n      });\n      setupTauriListener();\n    }\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeTauriListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: HTMLElement) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","import type { ApiPaidMedia } from '../../../../api/types';\n\nexport default function getSingularPaidMedia(media?: ApiPaidMedia) {\n  if (!media || media.extendedMedia.length !== 1) {\n    return {\n      photo: undefined,\n      video: undefined,\n    };\n  }\n\n  const singularMedia = media.extendedMedia[0];\n  const isPreview = 'mediaType' in singularMedia;\n  const photo = isPreview ? (!singularMedia.duration ? singularMedia : undefined) : singularMedia.photo;\n  const video = isPreview ? (singularMedia.duration ? singularMedia : undefined) : singularMedia.video;\n\n  return { photo, video };\n}\n","// Based on\n// https://github.com/telegramdesktop/tdesktop/blob/dev/Telegram/SourceFiles/ui/grouped_layout.cpp\n// https://github.com/overtake/TelegramSwift/blob/master/Telegram-Mac/GroupedLayout.swift#L83\n\nimport type { ApiDimensions, ApiMessage } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { getMessageContent } from '../../../../global/helpers';\nimport { clamp } from '../../../../util/math';\nimport { getAvailableWidth } from '../../../common/helpers/mediaDimensions';\nimport { calculateMediaDimensions } from './mediaDimensions';\n\nexport const AlbumRectPart = {\n  None: 0,\n  Top: 1,\n  Right: 2,\n  Bottom: 4,\n  Left: 8,\n};\n\ntype IAttempt = {\n  lineCounts: number[];\n  heights: number[];\n};\nexport type IMediaDimensions = {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n};\ntype IMediaLayout = {\n  dimensions: IMediaDimensions;\n  sides: number;\n};\ntype ILayoutParams = {\n  ratios: number[];\n  proportions: string;\n  averageRatio: number;\n  maxWidth: number;\n  minWidth: number;\n  maxHeight: number;\n  spacing: number;\n};\nexport type IAlbumLayout = {\n  layout: IMediaLayout[];\n  containerStyle: ApiDimensions;\n};\n\nfunction getRatios(messages: ApiMessage[], isSingleMessage: boolean, isMobile: boolean) {\n  const isOutgoing = messages[0].isOutgoing;\n  const allMedia = (isSingleMessage\n    ? messages[0].content.paidMedia!.extendedMedia.map((media) => (\n      'mediaType' in media ? media : (media.photo || media.video)\n    ))\n    : messages.map((message) => (\n      getMessageContent(message).photo || getMessageContent(message).video\n    ))\n  ).filter(Boolean);\n  return allMedia.map(\n    (media) => {\n      const dimensions = calculateMediaDimensions({\n        media,\n        isOwn: isOutgoing,\n        isMobile,\n      }) as ApiDimensions;\n\n      return dimensions.width / dimensions.height;\n    },\n  );\n}\n\nfunction getProportions(ratios: number[]) {\n  return ratios.map((ratio) => (ratio > 1.2 ? 'w' : (ratio < 0.8 ? 'n' : 'q'))).join('');\n}\n\nfunction getAverageRatio(ratios: number[]) {\n  return ratios.reduce((result, ratio) => ratio + result, 1) / ratios.length;\n}\n\nfunction accumulate(list: number[], initValue: number) {\n  return list.reduce((accumulator, item) => accumulator + item, initValue);\n}\n\nfunction cropRatios(ratios: number[], averageRatio: number) {\n  return ratios.map((ratio) => {\n    return (averageRatio > 1.1 ? clamp(ratio, 1, 2.75) : clamp(ratio, 0.6667, 1));\n  });\n}\n\nfunction calculateContainerSize(layout: IMediaLayout[]) {\n  const styles: ApiDimensions = { width: 0, height: 0 };\n  layout.forEach(({\n    dimensions,\n    sides,\n  }) => {\n    if (sides & AlbumRectPart.Right) {\n      styles.width = dimensions.width + dimensions.x;\n    }\n    if (sides & AlbumRectPart.Bottom) {\n      styles.height = dimensions.height + dimensions.y;\n    }\n  });\n\n  return styles;\n}\n\nexport function calculateAlbumLayout(\n  isOwn: boolean,\n  noAvatars: boolean,\n  album: IAlbum,\n  isMobile: boolean,\n): IAlbumLayout {\n  const spacing = 2;\n  const ratios = getRatios(album.messages, Boolean(album.isPaidMedia), isMobile);\n  const proportions = getProportions(ratios);\n  const averageRatio = getAverageRatio(ratios);\n  const albumCount = ratios.length;\n  const forceCalc = ratios.some((ratio) => ratio > 2);\n  const maxWidth = getAvailableWidth(isOwn, false, noAvatars, isMobile);\n  const maxHeight = maxWidth;\n\n  let layout;\n\n  const params = {\n    ratios,\n    proportions,\n    averageRatio,\n    maxWidth,\n    minWidth: 100,\n    maxHeight,\n    spacing,\n  };\n\n  if (albumCount >= 5 || forceCalc) {\n    layout = layoutWithComplexLayouter(params);\n  } else if (albumCount === 2) {\n    layout = layoutTwo(params);\n  } else if (albumCount === 3) {\n    layout = layoutThree(params);\n  } else {\n    layout = layoutFour(params);\n  }\n\n  return {\n    layout,\n    containerStyle: calculateContainerSize(layout),\n  };\n}\n\nfunction layoutWithComplexLayouter({\n  ratios: originalRatios,\n  averageRatio,\n  maxWidth,\n  minWidth,\n  spacing,\n  maxHeight = (4 * maxWidth) / 3,\n}: ILayoutParams) {\n  const ratios = cropRatios(originalRatios, averageRatio);\n  const count = originalRatios.length;\n  const result = new Array(count);\n  const attempts: IAttempt[] = [];\n\n  const multiHeight = (offset: number, attemptCount: number) => {\n    const attemptRatios = ratios.slice(offset, offset + attemptCount);\n    const sum = accumulate(attemptRatios, 0);\n\n    return (maxWidth - (attemptCount - 1) * spacing) / sum;\n  };\n\n  const pushAttempt = (lineCounts: number[]) => {\n    const heights: number[] = [];\n    let offset = 0;\n    lineCounts.forEach((currentCount) => {\n      heights.push(multiHeight(offset, currentCount));\n      offset += currentCount;\n    });\n\n    attempts.push({\n      lineCounts,\n      heights,\n    });\n  };\n\n  for (let first = 1; first !== count; ++first) {\n    const second = count - first;\n    if (first <= 3 && second <= 3) {\n      pushAttempt([first, second]);\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      const third = count - first - second;\n      if (first <= 3 && second <= (averageRatio < 0.85 ? 4 : 3) && third <= 3) {\n        pushAttempt([first, second, third]);\n      }\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      for (let third = 1; third !== count - first - second; ++third) {\n        const fourth = count - first - second - third;\n        if (first <= 3 && second <= 3 && third <= 3 && fourth <= 4) {\n          pushAttempt([first, second, third, fourth]);\n        }\n      }\n    }\n  }\n\n  let optimalAttempt: IAttempt | undefined;\n  let optimalDiff = 0;\n  for (let i = 0; i < attempts.length; i++) {\n    const {\n      heights,\n      lineCounts,\n    } = attempts[i];\n    const lineCount = lineCounts.length;\n    const totalHeight = accumulate(heights, 0) + spacing * (lineCount - 1);\n    const minLineHeight = Math.min(...heights);\n    const bad1 = minLineHeight < minWidth ? 1.5 : 1;\n    const bad2 = (() => {\n      for (let line = 1; line !== lineCount; ++line) {\n        if (lineCounts[line - 1] > lineCounts[line]) {\n          return 1.5;\n        }\n      }\n\n      return 1;\n    })();\n    const diff = Math.abs(totalHeight - maxHeight) * bad1 * bad2;\n\n    if (!optimalAttempt || diff < optimalDiff) {\n      optimalAttempt = attempts[i];\n      optimalDiff = diff;\n    }\n  }\n\n  const optimalCounts = optimalAttempt!.lineCounts;\n  const optimalHeights = optimalAttempt!.heights;\n  const rowCount = optimalCounts.length;\n  let index = 0;\n  let y = 0;\n  for (let row = 0; row !== rowCount; ++row) {\n    const colCount = optimalCounts[row];\n    const lineHeight = optimalHeights[row];\n    const height = Math.round(lineHeight);\n    let x = 0;\n\n    for (let col = 0; col !== colCount; ++col) {\n      const sides = AlbumRectPart.None\n        | (row === 0 ? AlbumRectPart.Top : AlbumRectPart.None)\n        | (row === rowCount - 1 ? AlbumRectPart.Bottom : AlbumRectPart.None)\n        | (col === 0 ? AlbumRectPart.Left : AlbumRectPart.None)\n        | (col === colCount - 1 ? AlbumRectPart.Right : AlbumRectPart.None);\n      const ratio = ratios[index];\n      const width = col === colCount - 1 ? maxWidth - x : Math.round(ratio * lineHeight);\n      result[index] = {\n        dimensions: {\n          x,\n          y,\n          width,\n          height,\n        },\n        sides,\n      };\n      x += width + spacing;\n      ++index;\n    }\n    y += height + spacing;\n  }\n\n  return result;\n}\n\nfunction layoutTwo(params: ILayoutParams) {\n  const {\n    ratios,\n    proportions,\n    averageRatio,\n  } = params;\n  return proportions === 'ww' && averageRatio > 1.4 && ratios[1] - ratios[0] < 0.2\n    ? layoutTwoTopBottom(params)\n    : proportions === 'ww' || proportions === 'qq'\n      ? layoutTwoLeftRightEqual(params)\n      : layoutTwoLeftRight(params);\n}\n\nfunction layoutTwoTopBottom(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const height = Math.round(Math.min(maxWidth / ratios[0], Math.min(maxWidth / ratios[1], (maxHeight - spacing) / 2)));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: height + spacing,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutTwoLeftRightEqual(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const width = (maxWidth - spacing) / 2;\n  const height = Math.round(Math.min(width / ratios[0], Math.min(width / ratios[1], maxHeight)));\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: width + spacing,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutTwoLeftRight(params: ILayoutParams) {\n  const {\n    ratios,\n    minWidth,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const minimalWidth = Math.round(1.5 * minWidth);\n  const secondWidth = Math.min(\n    Math.round(\n      Math.max(\n        0.4 * (maxWidth - spacing),\n        (maxWidth - spacing) / ratios[0] / (1 / ratios[0] + 1 / ratios[1]),\n      ),\n    ),\n    maxWidth - spacing - minimalWidth,\n  );\n  const firstWidth = maxWidth - secondWidth - spacing;\n  const height = Math.min(maxHeight, Math.round(Math.min(firstWidth / ratios[0], secondWidth / ratios[1])));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: firstWidth + spacing,\n      y: 0,\n      width: secondWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutThree(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'n'\n    ? layoutThreeLeftAndOther(params)\n    : layoutThreeTopAndOther(params);\n}\n\nfunction layoutThreeLeftAndOther(params: ILayoutParams) {\n  const {\n    maxHeight,\n    spacing,\n    ratios,\n    maxWidth,\n    minWidth,\n  } = params;\n  const firstHeight = maxHeight;\n  const thirdHeight = Math.round(\n    Math.min(\n      (maxHeight - spacing) / 2,\n      (ratios[1] * (maxWidth - spacing)) / (ratios[2] + ratios[1]),\n    ),\n  );\n  const secondHeight = firstHeight - thirdHeight - spacing;\n  const rightWidth = Math.max(\n    minWidth,\n    Math.round(\n      Math.min(\n        (maxWidth - spacing) / 2,\n        Math.min(\n          thirdHeight * ratios[2],\n          secondHeight * ratios[1],\n        ),\n      ),\n    ),\n  );\n  const leftWidth = Math.min(Math.round(firstHeight * ratios[0]), maxWidth - spacing - rightWidth);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: leftWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: 0,\n      width: rightWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: secondHeight + spacing,\n      width: rightWidth,\n      height: thirdHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutThreeTopAndOther(params: ILayoutParams) {\n  const {\n    maxWidth,\n    ratios,\n    maxHeight,\n    spacing,\n  } = params;\n  const firstWidth = maxWidth;\n  const firstHeight = Math.round(Math.min(firstWidth / ratios[0], 0.66 * (maxHeight - spacing)));\n  const secondWidth = (maxWidth - spacing) / 2;\n  const secondHeight = Math.min(\n    maxHeight - firstHeight - spacing,\n    Math.round(Math.min(\n      secondWidth / ratios[1],\n      secondWidth / ratios[2],\n    )),\n  );\n  const thirdWidth = firstWidth - secondWidth - spacing;\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: firstHeight + spacing,\n      width: secondWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: secondWidth + spacing,\n      y: firstHeight + spacing,\n      width: thirdWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutFour(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'w'\n    ? layoutFourTopAndOther(params)\n    : layoutFourLeftAndOther(params);\n}\n\nfunction layoutFourTopAndOther({\n  maxWidth,\n  ratios,\n  spacing,\n  maxHeight,\n  minWidth,\n}: ILayoutParams) {\n  const w = maxWidth;\n  const h0 = Math.round(Math.min(w / ratios[0], 0.66 * (maxHeight - spacing)));\n  const h = Math.round((maxWidth - 2 * spacing) / (ratios[1] + ratios[2] + ratios[3]));\n  const w0 = Math.max(minWidth, Math.round(Math.min(0.4 * (maxWidth - 2 * spacing), h * ratios[1])));\n  const w2 = Math.round(Math.max(Math.max(minWidth, 0.33 * (maxWidth - 2 * spacing)), h * ratios[3]));\n  const w1 = w - w0 - w2 - 2 * spacing;\n  const h1 = Math.min(maxHeight - h0 - spacing, h);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w,\n      height: h0,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: h0 + spacing,\n      width: w0,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing + w1 + spacing,\n      y: h0 + spacing,\n      width: w2,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutFourLeftAndOther({\n  maxHeight,\n  ratios,\n  maxWidth,\n  spacing,\n  minWidth,\n}: ILayoutParams) {\n  const h = maxHeight;\n  const w0 = Math.round(Math.min(h * ratios[0], 0.6 * (maxWidth - spacing)));\n  const w = Math.round((maxHeight - 2 * spacing) / (1 / ratios[1] + 1 / ratios[2] + 1 / ratios[3]));\n  const h0 = Math.round(w / ratios[1]);\n  const h1 = Math.round(w / ratios[2]);\n  const h2 = h - h0 - h1 - 2 * spacing;\n  const w1 = Math.max(minWidth, Math.min(maxWidth - w0 - spacing, w));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w0,\n      height: h,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: 0,\n      width: w1,\n      height: h0,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + h1 + 2 * spacing,\n      width: w1,\n      height: h2,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n","import type { FastTextApi } from '../lib/fasttextweb/fasttext.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TRANSLATION_SUPPORTED } from './browser/windowEnvironment';\n\nimport Deferred from './Deferred';\nimport { createConnector } from './PostMessageConnector';\n\nconst WORKER_INIT_DELAY = 4000;\n\nconst DEFAULT_THRESHOLD = 0.2;\nconst DEFAULT_LABELS_COUNT = 5;\n\nlet worker: Connector<FastTextApi> | undefined;\nconst initializationDeferred = new Deferred();\n\nif (IS_TRANSLATION_SUPPORTED) {\n  setTimeout(initWorker, WORKER_INIT_DELAY);\n}\n\nfunction initWorker() {\n  if (!worker) {\n    worker = createConnector<FastTextApi>(\n      new Worker(new URL('../lib/fasttextweb/fasttext.worker.ts', import.meta.url)),\n    );\n    initializationDeferred.resolve();\n  }\n}\n\nexport async function detectLanguage(text: string, threshold = DEFAULT_THRESHOLD) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguage', args: [text, threshold] });\n  return result;\n}\n\nexport async function detectLanguageProbability(\n  text: string, labelsCount = DEFAULT_LABELS_COUNT, threshold = DEFAULT_THRESHOLD,\n) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguageProbability', args: [text, labelsCount, threshold] });\n  return result;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport LimitedMap from '../../../../util/primitives/LimitedMap';\nimport { throttle } from '../../../../util/schedulers';\n\n// https://github.com/DrKLO/Telegram/blob/dfd74f809e97d1ecad9672fc7388cb0223a95dfc/TMessagesProj/src/main/java/org/telegram/messenger/TranslateController.java#L35\nconst MIN_MESSAGES_CHECKED = 8;\nconst MIN_TRANSLATABLE_RATIO = 0.3;\nconst MIN_DETECTABLE_RATIO = 0.6;\n\nconst THROTTLE_DELAY = 1000;\nconst MESSAGES_LIMIT = 150;\n\ntype MessageMetadata = {\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage: string | undefined;\n};\n\nconst CHAT_STATS = new Map<string, LimitedMap<number, MessageMetadata>>();\n\nexport default function useDetectChatLanguage(\n  message: ApiMessage, detectedLanguage?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>,\n) {\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    const isTranslatable = Boolean(message.content.text?.text.length);\n    processMessageMetadata({\n      chatId: message.chatId,\n      id: message.id,\n      isTranslatable,\n      detectedLanguage,\n    });\n  }, [message, detectedLanguage, isDisabled, getIsReady]);\n}\n\nconst throttledMakeChatDecision = throttle(makeChatDecision, THROTTLE_DELAY);\n\nfunction processMessageMetadata({\n  chatId, id, isTranslatable, detectedLanguage,\n}: {\n  chatId: string;\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage?: string;\n}) {\n  const chatStats = CHAT_STATS.get(chatId) || new LimitedMap<number, MessageMetadata>(MESSAGES_LIMIT);\n\n  const previousMetadata = chatStats.get(id);\n  if (previousMetadata && previousMetadata.detectedLanguage === detectedLanguage\n    && previousMetadata.isTranslatable === isTranslatable\n  ) {\n    return;\n  }\n\n  chatStats.set(id, {\n    id,\n    isTranslatable,\n    detectedLanguage,\n  });\n\n  CHAT_STATS.set(chatId, chatStats);\n\n  throttledMakeChatDecision(chatId);\n}\n\nfunction makeChatDecision(chatId: string) {\n  const { updateChatDetectedLanguage } = getActions();\n  const chatStats = CHAT_STATS.get(chatId);\n  if (!chatStats) {\n    return;\n  }\n\n  const messagesChecked = chatStats.size;\n  if (messagesChecked < MIN_MESSAGES_CHECKED) {\n    return;\n  }\n\n  let translatableCount = 0;\n  let detectableCount = 0;\n  const languageOccurrences = new Map<string, number>();\n\n  for (const metadata of chatStats.values()) {\n    if (metadata.isTranslatable) {\n      translatableCount++;\n    }\n\n    if (metadata.detectedLanguage) {\n      detectableCount++;\n    }\n\n    const language = metadata.detectedLanguage;\n    if (language) {\n      const occurrences = languageOccurrences.get(language) || 0;\n      languageOccurrences.set(language, occurrences + 1);\n    }\n  }\n\n  const translatableRatio = translatableCount / messagesChecked;\n  const detectableRatio = detectableCount / translatableCount;\n\n  if (translatableRatio < MIN_TRANSLATABLE_RATIO || detectableRatio < MIN_DETECTABLE_RATIO) {\n    return;\n  }\n\n  const mostFrequentLanguage = Array.from(languageOccurrences.entries())\n    .sort(([, a], [, b]) => b - a)[0][0];\n\n  updateChatDetectedLanguage({\n    chatId,\n    detectedLanguage: mostFrequentLanguage,\n  });\n}\n","import type React from '../../../../lib/teact/teact';\nimport type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_ANDROID, IS_TOUCH_ENV } from '../../../../util/browser/windowEnvironment';\nimport { captureEvents, SwipeDirection } from '../../../../util/captureEvents';\nimport stopEvent from '../../../../util/stopEvent';\nimport windowSize from '../../../../util/windowSize';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { preventMessageInputBlur } from '../../helpers/preventMessageInputBlur';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\n\nconst ANDROID_KEYBOARD_HIDE_DELAY_MS = 350;\nconst SWIPE_ANIMATION_DURATION = 150;\nconst QUICK_REACTION_DOUBLE_TAP_DELAY = 200;\nconst QUICK_REACTION_AREA_WIDTH = 3 * REM;\nconst QUICK_REACTION_AREA_HEIGHT = Number(REM);\nconst GROUP_MESSAGE_HOVER_ATTRIBUTE = 'data-is-document-group-hover';\n\nexport default function useOuterHandlers(\n  selectMessage: (e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void,\n  containerRef: ElementRef<HTMLDivElement>,\n  messageId: number,\n  isInSelectMode: boolean,\n  canReply: boolean,\n  isProtected: boolean,\n  onContextMenu: (e: React.MouseEvent) => void,\n  handleBeforeContextMenu: (e: React.MouseEvent) => void,\n  chatId: string,\n  isContextMenuShown: boolean,\n  quickReactionRef: ElementRef<HTMLDivElement>,\n  shouldHandleMouseLeave: boolean,\n  getIsMessageListReady?: Signal<boolean>,\n) {\n  const { updateDraftReplyInfo, sendDefaultReaction } = getActions();\n\n  const [isQuickReactionVisible, markQuickReactionVisible, unmarkQuickReactionVisible] = useFlag();\n  const [isSwiped, markSwiped, unmarkSwiped] = useFlag();\n  const doubleTapTimeoutRef = useRef<NodeJS.Timeout>();\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  }\n\n  const handleMouseMove = useThrottledCallback((e: React.MouseEvent) => {\n    const quickReactionContainer = quickReactionRef.current;\n    if (!quickReactionContainer) return;\n\n    const { clientX, clientY } = e;\n    const {\n      x: quickReactionX, width: quickReactionWidth, y: quickReactionY, height: quickReactionHeight,\n    } = quickReactionContainer.getBoundingClientRect();\n    const x = quickReactionX + quickReactionWidth / 2;\n    const y = quickReactionY + quickReactionHeight / 2;\n\n    const isVisibleX = Math.abs(x - clientX) < QUICK_REACTION_AREA_WIDTH;\n    const isVisibleY = Math.abs(y - clientY) < QUICK_REACTION_AREA_HEIGHT;\n    if (isVisibleX && isVisibleY) {\n      markQuickReactionVisible();\n    } else {\n      unmarkQuickReactionVisible();\n    }\n  }, [quickReactionRef], requestMeasure);\n\n  function handleSendQuickReaction(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleTap(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      const target = e.target as HTMLDivElement;\n      if (!target.classList.contains('text-content') && !target.classList.contains('Message')) {\n        return;\n      }\n\n      if (windowSize.getIsKeyboardVisible()) {\n        setTimeout(() => {\n          onContextMenu(e);\n        }, ANDROID_KEYBOARD_HIDE_DELAY_MS);\n      } else {\n        onContextMenu(e);\n      }\n    }\n  }\n\n  function handleDoubleTap() {\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleClick(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (isInSelectMode) {\n      selectMessage(e);\n      return;\n    }\n\n    if (!IS_TOUCH_ENV) return;\n\n    if (doubleTapTimeoutRef.current) {\n      clearInterval(doubleTapTimeoutRef.current);\n      doubleTapTimeoutRef.current = undefined;\n      handleDoubleTap();\n      return;\n    }\n\n    doubleTapTimeoutRef.current = setTimeout(() => {\n      doubleTapTimeoutRef.current = undefined;\n      handleTap(e);\n    }, QUICK_REACTION_DOUBLE_TAP_DELAY);\n  }\n\n  function handleContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      if ((e.target as HTMLElement).matches('a[href]') || isContextMenuShown) {\n        return;\n      }\n\n      e.preventDefault();\n      selectMessage();\n    } else {\n      onContextMenu(e);\n    }\n  }\n\n  function handleContainerDoubleClick() {\n    if (IS_TOUCH_ENV || !canReply) return;\n\n    updateDraftReplyInfo({\n      replyToMsgId: messageId, replyToPeerId: undefined, quoteText: undefined, quoteOffset: undefined,\n    });\n  }\n\n  function stopPropagation(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n  }\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV || isInSelectMode || !canReply || isContextMenuShown || !getIsMessageListReady?.()) {\n      return undefined;\n    }\n\n    let startedAt: number | undefined;\n    return captureEvents(containerRef.current!, {\n      selectorToPreventScroll: '.MessageList',\n      excludedClosestSelector: '.no-word-wrap',\n      onSwipe: (e, direction) => {\n        if (direction === SwipeDirection.Left) {\n          if (!startedAt) {\n            startedAt = Date.now();\n          }\n\n          markSwiped();\n\n          return true;\n        }\n\n        return false;\n      },\n      onRelease: () => {\n        if (!startedAt || !canReply) {\n          return;\n        }\n\n        updateDraftReplyInfo({ replyToMsgId: messageId });\n\n        setTimeout(unmarkSwiped, Math.max(0, SWIPE_ANIMATION_DURATION - (Date.now() - startedAt)));\n        startedAt = undefined;\n      },\n    });\n  }, [\n    containerRef, isInSelectMode, messageId, markSwiped, unmarkSwiped, canReply, isContextMenuShown,\n    getIsMessageListReady,\n  ]);\n\n  function handleMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n    // Because `mousemove` event is throttled, we need to also throttle `mouseleave` event,\n    // so the order of events is preserved\n    requestMeasure(unmarkQuickReactionVisible);\n    if (shouldHandleMouseLeave) handleDocumentGroupMouseLeave(e);\n  }\n\n  return {\n    handleMouseDown: !isInSelectMode ? handleMouseDown : undefined,\n    handleClick,\n    handleContextMenu: !isInSelectMode ? handleContextMenu : (isProtected ? stopEvent : undefined),\n    handleDoubleClick: !isInSelectMode ? handleContainerDoubleClick : undefined,\n    handleContentDoubleClick: !IS_TOUCH_ENV ? stopPropagation : undefined,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  };\n}\n\nfunction handleDocumentGroupMouseEnter(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.setAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE, '');\n  }\n}\n\nfunction handleDocumentGroupMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.removeAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE);\n  }\n}\n\nfunction getLastElementInDocumentGroup(element: Element) {\n  let current: Element | null = element;\n\n  do {\n    current = current.nextElementSibling;\n  } while (current && !current.classList.contains('last-in-document-group'));\n\n  return current;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport {\n  getStoryMediaHash,\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  story?: ApiTypeStory;\n  sender?: ApiPeer;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\n\nconst EmbeddedStory: FC<OwnProps> = ({\n  story,\n  sender,\n  noUserColors,\n  isProtected,\n  observeIntersectionForLoading,\n  onClick,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const ref = useRef<HTMLDivElement>();\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isFullStory = story && 'content' in story;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const isVideoStory = isFullStory && Boolean(story.content.video);\n  const title = isFullStory ? 'Story' : (isExpiredStory ? 'ExpiredStory' : 'Loading');\n\n  const mediaBlobUrl = useMedia(isFullStory && getStoryMediaHash(story, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = isVideoStory ? story.content.video!.thumbnail?.dataUri : undefined;\n  const pictogramUrl = mediaBlobUrl || mediaThumbnail;\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : undefined;\n  const handleFastClick = useLastCallback(() => {\n    if (story && !isExpiredStory) {\n      onClick();\n    } else {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(handleFastClick);\n\n  return (\n    <PeerColorWrapper\n      ref={ref}\n      peerColor={sender?.color}\n      noUserColors={noUserColors}\n      shouldReset\n      className={buildClassName(\n        'EmbeddedMessage',\n        pictogramUrl && 'with-thumb',\n      )}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {pictogramUrl && renderPictogram(pictogramUrl, isProtected)}\n      <div className=\"message-text with-message-color\">\n        <p className=\"embedded-text-wrapper\">\n          {isExpiredStory && (\n            <Icon name=\"story-expired\" className=\"embedded-origin-icon\" />\n          )}\n          {isFullStory && (\n            <Icon name=\"story-reply\" className=\"embedded-origin-icon\" />\n          )}\n          {lang(title)}\n        </p>\n        <div className=\"message-title\">{renderText(senderTitle || NBSP)}</div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  srcUrl: string,\n  isProtected?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  return (\n    <div className=\"embedded-thumb\">\n      <img\n        src={srcUrl}\n        width={width}\n        height={height}\n        alt=\"\"\n        className=\"pictogram\"\n        draggable={false}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedStory;\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getTopicColorCssVariable } from '../../util/forumColors';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\n\nimport styles from './TopicChip.module.scss';\n\nimport blankSrc from '../../assets/blank.png';\n\ntype OwnProps = {\n  topic?: ApiTopic;\n  className?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst TOPIC_ICON_SIZE = 1.125 * REM;\n\nconst TopicChip: FC<OwnProps> = ({\n  topic,\n  className,\n  onClick,\n}) => {\n  const lang = useOldLang();\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={`--topic-button-accent-color: var(${getTopicColorCssVariable(topic?.iconColor)})`}\n      onClick={onClick}\n    >\n      {topic\n        ? <TopicIcon topic={topic} size={TOPIC_ICON_SIZE} />\n        : <img src={blankSrc} alt=\"\" draggable={false} />}\n      {topic?.title ? renderText(topic.title) : lang('Loading')}\n      {topic?.isClosed && <Icon name=\"lock\" />}\n      <Icon name=\"next\" />\n    </div>\n  );\n};\n\nexport default memo(TopicChip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"JldIqqof\"};","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { OwnProps as PhotoProps } from '../Photo';\nimport type { OwnProps as VideoProps } from '../Video';\n\nimport {\n  selectIsInSelectMode,\n  selectIsMessageSelected,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Icon from '../../../common/icons/Icon';\n\ntype OwnProps<T> =\n  (PhotoProps<T> | VideoProps<T>) & {\n    clickArg: number;\n    noSelectControls?: boolean;\n  };\n\ntype StateProps = {\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n};\n\nexport default function withSelectControl(WrappedComponent: FC) {\n  const ComponentWithSelectControl = <T,>(props: OwnProps<T> & StateProps) => {\n    const {\n      isInSelectMode,\n      isSelected,\n      dimensions,\n      clickArg,\n    } = props;\n    const { toggleMessageSelection } = getActions();\n\n    const handleMessageSelect = useLastCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n      e.stopPropagation();\n      toggleMessageSelection({ messageId: clickArg, withShift: e?.shiftKey });\n    });\n\n    const newProps = useMemo(() => {\n      const { dimensions: dims, onClick } = props;\n      return {\n        ...props,\n        isInSelectMode,\n        isSelected,\n        dimensions: {\n          ...dims,\n          x: 0,\n          y: 0,\n        },\n        onClick: isInSelectMode ? undefined : onClick,\n      };\n    }, [props, isInSelectMode, isSelected]);\n\n    return (\n      <div\n        className={buildClassName('album-item-select-wrapper', isSelected && 'is-selected')}\n        style={dimensions ? `left: ${dimensions.x}px; top: ${dimensions.y}px;` : ''}\n        onClick={isInSelectMode ? handleMessageSelect : undefined}\n      >\n        {isInSelectMode && (\n          <div className=\"message-select-control\">\n            {isSelected && (\n              <Icon name=\"select\" />\n            )}\n          </div>\n        )}\n        {}\n        <WrappedComponent {...newProps} />\n      </div>\n    );\n  };\n\n  return memo(withGlobal<OwnProps<unknown>>(\n    (global, ownProps) => {\n      const { clickArg, noSelectControls } = ownProps;\n      return {\n        isInSelectMode: !noSelectControls && selectIsInSelectMode(global),\n        isSelected: !noSelectControls && selectIsMessageSelected(global, clickArg),\n      };\n    },\n  )(ComponentWithSelectControl)) as typeof ComponentWithSelectControl;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IAlbum, ThemeKey } from '../../../types';\nimport type { IAlbumLayout } from './helpers/calculateAlbumLayout';\n\nimport {\n  getIsDownloading, getMessageContent, getMessageHtmlId, getMessagePhoto,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectTheme,\n} from '../../../global/selectors';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { AlbumRectPart } from './helpers/calculateAlbumLayout';\nimport withSelectControl from './hocs/withSelectControl';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './Album.scss';\n\nconst PhotoWithSelect = withSelectControl(Photo);\nconst VideoWithSelect = withSelectControl(Video);\n\ntype OwnProps = {\n  album: IAlbum;\n  observeIntersection: ObserveFn;\n  hasCustomAppendix?: boolean;\n  isOwn: boolean;\n  isProtected?: boolean;\n  albumLayout: IAlbumLayout;\n  onMediaClick: (messageId: number, index?: number) => void;\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n  uploadsByKey: GlobalState['fileUploads']['byMessageKey'];\n  activeDownloads: TabState['activeDownloads'];\n};\n\nconst Album: FC<OwnProps & StateProps> = ({\n  album,\n  observeIntersection,\n  hasCustomAppendix,\n  isOwn,\n  isProtected,\n  albumLayout,\n  onMediaClick,\n  uploadsByKey,\n  activeDownloads,\n  theme,\n}) => {\n  const { cancelUploadMedia } = getActions();\n\n  const { content: { paidMedia } } = album.mainMessage;\n\n  const mediaCount = album.isPaidMedia ? paidMedia!.extendedMedia.length : album.messages.length;\n\n  const handlePaidMediaClick = useLastCallback((index: number) => {\n    onMediaClick(album.mainMessage.id, index);\n  });\n\n  const handleAlbumMessageClick = useLastCallback((messageId: number) => {\n    onMediaClick(messageId);\n  });\n\n  const handleCancelUpload = useLastCallback((messageId: number) => {\n    cancelUploadMedia({ chatId: album.mainMessage.chatId, messageId });\n  });\n\n  const messages = useMemo(() => {\n    if (album.isPaidMedia) {\n      return album.mainMessage.content.paidMedia!.extendedMedia.map(() => album.mainMessage);\n    }\n\n    return album.messages;\n  }, [album]);\n\n  function renderAlbumMessage(message: ApiMessage, index: number) {\n    const renderingPaidMedia = album.isPaidMedia ? message.content.paidMedia?.extendedMedia[index] : undefined;\n    const paidPhotoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.photo;\n    const paidVideoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.video;\n    const photo = paidPhotoOrPreview || getMessagePhoto(message);\n    const video = paidVideoOrPreview || getMessageContent(message).video;\n\n    const fileUpload = uploadsByKey[getMessageKey(message)];\n    const uploadProgress = fileUpload?.progress;\n    const { dimensions, sides } = albumLayout.layout[index];\n\n    // Ignoring global updates is a known drawback here\n    const canAutoLoad = selectCanAutoLoadMedia(getGlobal(), message);\n    const canAutoPlay = selectCanAutoPlayMedia(getGlobal(), message);\n\n    if (photo) {\n      const shouldAffectAppendix = hasCustomAppendix && (\n\n        (isOwn ? index === mediaCount - 1 : Boolean(sides & AlbumRectPart.Left && sides & AlbumRectPart.Bottom))\n      );\n\n      return (\n        <PhotoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id, album.isPaidMedia ? index : undefined)}`}\n          photo={photo}\n          isOwn={isOwn}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          shouldAffectAppendix={shouldAffectAppendix}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={photo.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, photo)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    } else if (video) {\n      return (\n        <VideoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id)}`}\n          video={video}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          canAutoPlay={canAutoPlay}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={video.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, video)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    }\n\n    return undefined;\n  }\n\n  const { width: containerWidth, height: containerHeight } = albumLayout.containerStyle;\n\n  return (\n    <div\n      className=\"Album\"\n      style={`width: ${containerWidth}px; height: ${containerHeight}px;`}\n    >\n      {messages.map(renderAlbumMessage)}\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    const theme = selectTheme(global);\n    const activeDownloads = selectActiveDownloads(global);\n\n    return {\n      theme,\n      uploadsByKey: global.fileUploads.byMessageKey,\n      activeDownloads,\n    };\n  },\n)(Album);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport { IS_TAURI } from '../../../util/browser/globalEnvironment';\nimport buildStyle from '../../../util/buildStyle';\nimport safePlay from '../../../util/safePlay';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\n\nconst SIZE = 7 * REM;\nconst INTERACTION_BUNCH_TIME = 1000;\nconst MS_DIVIDER = 1000;\nconst TIME_DEFAULT = 0;\n\nexport default function useAnimatedEmoji(\n  chatId?: string,\n  messageId?: number,\n  soundId?: string,\n  activeEmojiInteractions?: ActiveEmojiInteraction[],\n  isOwn?: boolean,\n  emoji?: string,\n  preferredSize?: number,\n) {\n  const {\n    interactWithAnimatedEmoji, sendEmojiInteraction, sendWatchingEmojiInteraction,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const audioRef = useRef<HTMLAudioElement | undefined>();\n\n  const soundMediaData = useMedia(soundId ? `document${soundId}` : undefined, !soundId);\n\n  const size = preferredSize || SIZE;\n  const style = buildStyle(`width: ${size}px`, `height: ${size}px`, emoji && !IS_TAURI && 'cursor: pointer');\n\n  const interactions = useRef<number[] | undefined>(undefined);\n  const startedInteractions = useRef<number | undefined>(undefined);\n  const sendInteractionBunch = useLastCallback(() => {\n    const container = ref.current;\n\n    if (!container) return;\n\n    sendEmojiInteraction({\n      chatId: chatId!,\n      messageId: messageId!,\n      emoji: emoji!,\n      interactions: interactions.current!,\n    });\n    startedInteractions.current = undefined;\n    interactions.current = undefined;\n  });\n\n  const play = useLastCallback(() => {\n    const audio = audioRef.current;\n    if (soundMediaData) {\n      if (audio) {\n        audio.pause();\n        audio.remove();\n      }\n      audioRef.current = new Audio();\n      audioRef.current.src = soundMediaData;\n      safePlay(audioRef.current);\n      audioRef.current.addEventListener('ended', () => {\n        audioRef.current = undefined;\n      }, { once: true });\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    play();\n\n    const container = ref.current;\n\n    if (!emoji || !container || !messageId || !chatId) {\n      return;\n    }\n\n    const { x, y } = container.getBoundingClientRect();\n\n    interactWithAnimatedEmoji({\n      emoji,\n      x,\n      y,\n      startSize: size,\n      isReversed: !isOwn,\n    });\n\n    if (!interactions.current) {\n      interactions.current = [];\n      startedInteractions.current = performance.now();\n      setTimeout(sendInteractionBunch, INTERACTION_BUNCH_TIME);\n    }\n\n    interactions.current.push(startedInteractions.current\n      ? (performance.now() - startedInteractions.current) / MS_DIVIDER\n      : TIME_DEFAULT);\n  });\n\n  // Set an end anchor for remote activated interaction\n  useEffect(() => {\n    const container = ref.current;\n\n    if (!container || !activeEmojiInteractions) return;\n\n    activeEmojiInteractions.forEach(({\n      id,\n      startSize,\n      messageId: interactionMessageId,\n    }) => {\n      if (startSize || messageId !== interactionMessageId) {\n        return;\n      }\n\n      const { x, y } = container.getBoundingClientRect();\n\n      sendWatchingEmojiInteraction({\n        id,\n        chatId: chatId!,\n        emoticon: emoji!,\n        startSize: size,\n        x,\n        y,\n        isReversed: !isOwn,\n      });\n      play();\n    });\n  }, [activeEmojiInteractions, chatId, emoji, isOwn, messageId, play, sendWatchingEmojiInteraction, size]);\n\n  return {\n    ref,\n    size,\n    style,\n    handleClick,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n  selectCanPlayAnimatedEmojis,\n  selectCustomEmoji,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\n\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  customEmojiId: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  observeIntersection?: ObserveFn;\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n  noPlay?: boolean;\n}\n\nconst AnimatedCustomEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  customEmojiId,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n  noPlay,\n  observeIntersection,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(\n    chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji, getCustomEmojiSize(1),\n  );\n\n  return (\n    <CustomEmoji\n      ref={ref}\n      documentId={customEmojiId}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      size={size}\n      isBig\n      noPlay={noPlay}\n      withSharedAnimation\n      forceOnHeavyAnimation={Boolean(effect && activeEmojiInteractions?.length)}\n      observeIntersectionForLoading={observeIntersection}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { customEmojiId, withEffects }) => {\n  const sticker = selectCustomEmoji(global, customEmojiId);\n\n  return {\n    sticker,\n    effect: sticker?.emoji && withEffects ? selectAnimatedEmojiEffect(global, sticker.emoji) : undefined,\n    soundId: sticker?.emoji && selectAnimatedEmojiSound(global, sticker.emoji),\n    noPlay: !selectCanPlayAnimatedEmojis(global),\n  };\n})(AnimatedCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmoji,\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\n\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  emoji: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n}\n\nconst QUALITY = 1;\n\nconst AnimatedEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  observeIntersection,\n  forceLoadPreview,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji);\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  return (\n    <AnimatedIconFromSticker\n      sticker={sticker}\n      size={size}\n      quality={QUALITY}\n      noLoad={!isIntersecting}\n      forcePreview={forceLoadPreview}\n      play={isIntersecting}\n      forceAlways\n      ref={ref}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { emoji, withEffects }) => {\n  return {\n    sticker: selectAnimatedEmoji(global, emoji),\n    effect: withEffects ? selectAnimatedEmojiEffect(global, emoji) : undefined,\n    soundId: selectAnimatedEmojiSound(global, emoji),\n  };\n})(AnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiCommentsInfo } from '../../../api/types';\n\nimport { selectIsCurrentUserFrozen, selectPeer } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Spinner from '../../ui/Spinner';\n\nimport './CommentButton.scss';\n\ntype OwnProps = {\n  threadInfo?: ApiCommentsInfo;\n  disabled?: boolean;\n  isLoading?: boolean;\n  isCustomShape?: boolean;\n  asActionButton?: boolean;\n};\n\nconst SHOW_LOADER_DELAY = 450;\n\nconst CommentButton: FC<OwnProps> = ({\n  isCustomShape,\n  threadInfo,\n  disabled,\n  isLoading,\n  asActionButton,\n}) => {\n  const { openThread, openFrozenAccountModal } = getActions();\n\n  const shouldRenderLoading = useAsyncRendering([isLoading], SHOW_LOADER_DELAY);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const {\n    originMessageId, chatId, messagesCount, lastMessageId, lastReadInboxMessageId, recentReplierIds, originChannelId,\n  } = threadInfo || {};\n\n  const handleClick = useLastCallback(() => {\n    const global = getGlobal();\n\n    if (!originMessageId || !originChannelId) {\n      return;\n    }\n\n    if (selectIsCurrentUserFrozen(global)) {\n      openFrozenAccountModal();\n      return;\n    }\n    openThread({\n      isComments: true, chatId, originMessageId, originChannelId,\n    });\n  });\n\n  const recentRepliers = useMemo(() => {\n    if (!recentReplierIds?.length) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on chats and users, so we avoid them\n    const global = getGlobal();\n\n    return recentReplierIds.map((peerId) => {\n      return selectPeer(global, peerId);\n    }).filter(Boolean);\n  }, [recentReplierIds]);\n\n  function renderRecentRepliers() {\n    return (\n      Boolean(recentRepliers?.length) && (\n        <div className=\"recent-repliers\" dir={oldLang.isRtl ? 'rtl' : 'ltr'}>\n          {recentRepliers.map((peer) => (\n            <Avatar\n              key={peer.id}\n              size=\"small\"\n              peer={peer}\n            />\n          ))}\n        </div>\n      )\n    );\n  }\n\n  const hasUnread = Boolean(lastReadInboxMessageId && lastMessageId && lastReadInboxMessageId < lastMessageId);\n\n  const commentsText = messagesCount ? (oldLang('CommentsCount', '%COMMENTS_COUNT%', undefined, messagesCount))\n    .split('%')\n    .map((s) => {\n      return (s === 'COMMENTS_COUNT' ? <AnimatedCounter text={formatIntegerCompact(lang, messagesCount)} /> : s);\n    })\n    : undefined;\n\n  return (\n    <div\n      data-cnt={formatIntegerCompact(lang, messagesCount || 0)}\n      className={buildClassName(\n        'CommentButton',\n        hasUnread && 'has-unread',\n        disabled && 'disabled',\n        isCustomShape && 'CommentButton-custom-shape',\n        isLoading && 'loading',\n        asActionButton && 'as-action-button',\n      )}\n      dir={oldLang.isRtl ? 'rtl' : 'ltr'}\n      onClick={handleClick}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <Icon\n        name=\"comments-sticker\"\n        className={buildClassName(\n          'CommentButton_icon-comments',\n          isLoading && shouldRenderLoading && 'CommentButton_hidden',\n        )}\n      />\n      {!recentRepliers?.length && <Icon name=\"comments\" />}\n      {renderRecentRepliers()}\n      <div className=\"label\" dir=\"auto\">\n        {messagesCount ? commentsText : oldLang('LeaveAComment')}\n      </div>\n      <div className=\"CommentButton_right\">\n        {isLoading && (\n          <Spinner\n            className={buildClassName(\n              'CommentButton_loading',\n              !shouldRenderLoading && 'CommentButton_hidden',\n            )}\n            color={isCustomShape ? 'white' : 'blue'}\n          />\n        )}\n        <Icon\n          name=\"next\"\n          className={buildClassName(\n            'CommentButton_icon-open',\n            isLoading && shouldRenderLoading && 'CommentButton_hidden',\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(CommentButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AAHWWWvU\",\"info-container\":\"tpDpg82n\",\"infoContainer\":\"tpDpg82n\",\"info\":\"fpYynE5s\",\"name\":\"_PNTJc_V\",\"phone\":\"JP_3wes8\",\"divider\":\"_OSJcuqH\",\"buttons\":\"Blui4M4G\",\"button\":\"ReDHhQHm\",\"disabled\":\"XAeKpuIZ\",\"emoji-icon-background\":\"SjZYi3sJ\",\"emojiIconBackground\":\"SjZYi3sJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiContact, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { getCanAddContact, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\n\nimport styles from './Contact.module.scss';\n\ntype OwnProps = {\n  contact: ApiContact;\n  noUserColors?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst UNREGISTERED_CONTACT_ID = '0';\n\nconst Contact: FC<OwnProps & StateProps> = ({\n  contact, user, phoneCodeList, noUserColors,\n}) => {\n  const lang = useOldLang();\n  const {\n    openChat, openAddContactDialog, showNotification, openChatWithInfo,\n  } = getActions();\n\n  const { phoneNumber, userId } = contact;\n  const isRegistered = userId !== UNREGISTERED_CONTACT_ID;\n  const canAddContact = isRegistered && user && getCanAddContact(user);\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: userId });\n  });\n\n  const handleAddContact = useLastCallback(() => {\n    openAddContactDialog({ userId: user?.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (user) {\n      openChatWithInfo({ id: userId });\n    } else {\n      copyTextToClipboard(phoneNumber);\n      showNotification({ message: lang('PhoneCopied') });\n    }\n  });\n\n  return (\n    <PeerColorWrapper\n      noUserColors={noUserColors}\n      peer={user}\n      emojiIconClassName={styles.emojiIconBackground}\n      className={styles.root}\n    >\n      <div className={styles.infoContainer} onClick={handleClick}>\n        <Avatar size=\"medium\" peer={user} text={getContactName(contact)} />\n        <div className={styles.info}>\n          <div className={styles.name}>\n            {user ? getUserFullName(user) : getContactName(contact)}\n          </div>\n          <div className={styles.phone}>\n            {formatPhoneNumberWithCode(phoneCodeList, phoneNumber)}\n          </div>\n        </div>\n      </div>\n      {isRegistered && (\n        <>\n          <div className={styles.divider} />\n          <div className={styles.buttons}>\n            <Button\n              isText\n              color=\"translucent\"\n              ripple\n              size=\"tiny\"\n              onClick={handleOpenChat}\n              className={styles.button}\n            >\n              {lang('SharedContactMessage')}\n            </Button>\n            {canAddContact && (\n              <Button\n                isText\n                color=\"translucent\"\n                ripple\n                size=\"tiny\"\n                onClick={handleAddContact}\n                className={styles.button}\n              >\n                {lang('SharedContactAdd')}\n              </Button>\n            )}\n          </div>\n        </>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nfunction getContactName(contact: ApiContact) {\n  if (contact.firstName && contact.lastName) {\n    return `${contact.firstName} ${contact.lastName}`;\n  }\n\n  if (contact.firstName) {\n    return contact.firstName;\n  }\n\n  if (contact.lastName) {\n    return contact.lastName;\n  }\n\n  return '';\n}\n\nexport default withGlobal<OwnProps>((global, { contact }): Complete<StateProps> => {\n  const {\n    countryList: { phoneCodes: phoneCodeList },\n  } = global;\n  const user = selectUser(global, contact.userId);\n\n  return {\n    user,\n    phoneCodeList,\n  };\n})(Contact);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HMB5LgeX\",\"title\":\"vZnCPl3t\",\"content\":\"k_dGolcu\",\"separator\":\"qRaSs5iA\",\"footnote\":\"EDmr0wJG\",\"collapsed\":\"hYzpXwTM\",\"cutoutWrapper\":\"nfCzKu78\",\"collapseIcon\":\"mxPizZpR\",\"clickable\":\"Cj2cLczd\"};","import { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiFactCheck } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useCollapsibleLines from '../../../hooks/element/useCollapsibleLines';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Separator from '../../ui/Separator';\n\nimport styles from './FactCheck.module.scss';\n\ntype OwnProps = {\n  factCheck: ApiFactCheck;\n  isToggleDisabled?: boolean;\n};\n\nconst COLOR = {\n  color: 0,\n};\nconst MAX_LINES = 4;\n\nconst FactCheck = ({ factCheck, isToggleDisabled }: OwnProps) => {\n  const lang = useOldLang();\n\n  const ref = useRef<HTMLDivElement>();\n  const cutoutRef = useRef<HTMLDivElement>();\n  const {\n    isCollapsed, isCollapsible, setIsCollapsed,\n  } = useCollapsibleLines(ref, MAX_LINES, cutoutRef);\n\n  const countryLocalized = useMemo(() => {\n    if (!factCheck.countryCode || !lang.code) return undefined;\n\n    const displayNames = new Intl.DisplayNames([lang.code], { type: 'region' });\n    return displayNames.of(factCheck.countryCode);\n  }, [factCheck.countryCode, lang.code]);\n\n  const canExpand = !isToggleDisabled && isCollapsed;\n\n  const handleExpand = useLastCallback(() => {\n    setIsCollapsed(false);\n  });\n\n  const handleToggle = useLastCallback(() => {\n    setIsCollapsed((prev) => !prev);\n  });\n\n  if (!factCheck.text) {\n    return undefined;\n  }\n\n  return (\n    <PeerColorWrapper peerColor={COLOR} className={styles.root} onClick={canExpand ? handleExpand : undefined}>\n      <div\n        ref={cutoutRef}\n        className={buildClassName(styles.cutoutWrapper, isCollapsed && styles.collapsed)}\n      >\n        <div className={styles.title}>{lang('FactCheck')}</div>\n        <div ref={ref} className={styles.content}>\n          {renderTextWithEntities({\n            text: factCheck.text.text,\n            entities: factCheck.text.entities,\n          })}\n        </div>\n        <Separator className={styles.separator} />\n        <div className={styles.footnote}>{lang('FactCheckFooter', countryLocalized)}</div>\n      </div>\n      {isCollapsible && (\n        <div\n          className={buildClassName(styles.collapseIcon, !isToggleDisabled && styles.clickable)}\n          onClick={!isToggleDisabled ? handleToggle : undefined}\n          aria-hidden\n        >\n          <Icon name={isCollapsed ? 'down' : 'up'} />\n        </div>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(FactCheck);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { getGamePreviewPhotoHash, getGamePreviewVideoHash, getMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Game.scss';\n\nconst DEFAULT_PREVIEW_DIMENSIONS = {\n  width: 480,\n  height: 270,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  canAutoLoadMedia?: boolean;\n};\n\nconst Game: FC<OwnProps> = ({\n  message,\n  threadId,\n  canAutoLoadMedia,\n}) => {\n  const { clickBotInlineButton } = getActions();\n  const game = message.content.game!;\n  const {\n    title, description,\n  } = game;\n\n  const photoHash = getGamePreviewPhotoHash(game);\n  const videoHash = getGamePreviewVideoHash(game);\n  const photoBlobUrl = useMedia(photoHash, !canAutoLoadMedia);\n  const videoBlobUrl = useMedia(videoHash, !canAutoLoadMedia);\n\n  const handleGameClick = () => {\n    clickBotInlineButton({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId,\n      button: message.inlineButtons![0][0],\n    });\n  };\n\n  return (\n    <div className=\"Game\">\n      <div\n        className=\"preview\"\n        style={`width: ${DEFAULT_PREVIEW_DIMENSIONS.width}px; height: ${DEFAULT_PREVIEW_DIMENSIONS.height}px`}\n        onClick={handleGameClick}\n      >\n        {!photoBlobUrl && !videoBlobUrl && (\n          <Skeleton className=\"skeleton preview-content\" />\n        )}\n        {photoBlobUrl && (\n          <img\n            className=\"preview-content\"\n            src={photoBlobUrl}\n            alt={title}\n            draggable={false}\n          />\n        )}\n        {videoBlobUrl && (\n          <video\n            className=\"preview-content\"\n            playsInline\n            muted\n            disablePictureInPicture\n            autoPlay\n            loop\n            src={videoBlobUrl}\n          />\n        )}\n      </div>\n      <div className=\"title\">{title}</div>\n      {!getMessageText(message) && <div className=\"description\">{description}</div>}\n    </div>\n  );\n};\n\nexport default memo(Game);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CbpKtOey\",\"title\":\"ogvcv3mr\",\"sticker\":\"hjjKhvVv\",\"resultSticker\":\"JEiR48jJ\",\"count\":\"n_QCMv_A\",\"section\":\"MSFa9BPf\",\"description\":\"HfZ6SuLI\",\"peers\":\"rPyyNYxK\",\"peer\":\"FV70u896\",\"button\":\"jMBw7STU\",\"result\":\"ZQ4aVVkI\",\"separator\":\"ao0x1YnS\"};","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiGiveaway, ApiGiveawayInfo, ApiGiveawayResults, ApiMessage, ApiPeer, ApiSticker,\n} from '../../../api/types';\n\nimport {\n  getChatTitle, getUserFullName, isOwnMessage,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectForwardedSender,\n  selectGiftStickerForDuration,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateAtTime, formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { isoToEmoji } from '../../../util/emoji/emoji';\nimport { getServerTime } from '../../../util/serverTime';\nimport { callApi } from '../../../api/gramjs';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Separator from '../../ui/Separator';\n\nimport styles from './Giveaway.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  sender?: ApiPeer;\n  giftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst NBSP = '\\u00A0';\nconst GIFT_STICKER_SIZE = 175;\nconst RESULT_STICKER_SIZE = 150;\n\nconst Giveaway = ({\n  chat,\n  sender,\n  message,\n  canPlayAnimatedEmojis,\n  giftSticker,\n}: OwnProps & StateProps) => {\n  const { openChat } = getActions();\n\n  const isLoadingInfo = useRef(false);\n  const [giveawayInfo, setGiveawayInfo] = useState<ApiGiveawayInfo | undefined>();\n\n  const lang = useOldLang();\n  const { giveaway, giveawayResults } = message.content;\n  const isResults = Boolean(giveawayResults);\n  const {\n    months, untilDate, prizeDescription, stars,\n  } = (giveaway || giveawayResults)!;\n\n  const isOwn = isOwnMessage(message);\n\n  const quantity = isResults ? giveawayResults.winnersCount : giveaway!.quantity;\n\n  const hasEnded = getServerTime() > untilDate;\n\n  const countryList = useMemo(() => {\n    if (isResults) return undefined;\n    const translatedNames = new Intl.DisplayNames([lang.code!, 'en'].filter(Boolean), { type: 'region' });\n    return giveaway?.countries?.map((countryCode) => (\n      `${isoToEmoji(countryCode)}${NBSP}${translatedNames.of(countryCode)}`\n    )).join(', ');\n  }, [giveaway, isResults, lang.code]);\n\n  const handlePeerClick = useLastCallback((channelId: string) => {\n    openChat({ id: channelId });\n  });\n\n  const handleShowInfoClick = useLastCallback(async () => {\n    if (isLoadingInfo.current) return;\n\n    isLoadingInfo.current = true;\n    const result = await callApi('fetchGiveawayInfo', {\n      peer: chat,\n      messageId: message.id,\n    });\n    setGiveawayInfo(result);\n    isLoadingInfo.current = false;\n  });\n\n  const handleCloseInfo = useLastCallback(() => {\n    setGiveawayInfo(undefined);\n  });\n\n  const giveawayInfoTitle = useMemo(() => {\n    if (!giveawayInfo) return undefined;\n    return lang(giveawayInfo.type === 'results' ? 'BoostingGiveawayEnd' : 'BoostingGiveAwayAbout');\n  }, [giveawayInfo, lang]);\n\n  function renderGiveawayDescription(media: ApiGiveaway) {\n    const channelIds = media.channelIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayPrizes'), ['simple_markdown'])}\n          </strong>\n          {prizeDescription && (\n            <>\n              <p className={styles.description}>\n                {renderText(\n                  lang('BoostingGiveawayMsgPrizes', [quantity, prizeDescription], undefined, quantity),\n                  ['simple_markdown'],\n                )}\n              </p>\n              <Separator>{lang('BoostingGiveawayMsgWithDivider')}</Separator>\n            </>\n          )}\n          <p className={styles.description}>\n            {message?.content?.giveaway?.stars ? (\n              <>\n                {renderText(\n                  lang('Chat.Giveaway.Message.Stars.PrizeText', lang('Stars', message?.content?.giveaway?.stars)),\n                  ['simple_markdown'],\n                )}\n                <br />\n                {renderText(lang('AmongWinners', quantity), ['simple_markdown'])}\n              </>\n            ) : (\n              <>\n                {renderText(lang('Chat.Giveaway.Info.Subscriptions', quantity), ['simple_markdown'])}\n                <br />\n                {renderText(lang(\n                  'ActionGiftPremiumSubtitle',\n                  lang('Chat.Giveaway.Info.Months', months),\n                ), ['simple_markdown'])}\n              </>\n            )}\n          </p>\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayMsgParticipants'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayMsgAllSubsPlural', channelIds.length), ['simple_markdown'])}\n          </p>\n          <div className={styles.peers}>\n            {channelIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n          {countryList && (\n            <span>{renderText(lang('Chat.Giveaway.Message.CountriesFrom', countryList))}</span>\n          )}\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingWinnersDate'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {formatDateTimeToString(untilDate * 1000, lang.code, true)}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayResultsDescription(media: ApiGiveawayResults) {\n    const winnerIds = media.winnerIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersSelected'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersTitle', winnerIds.length), ['simple_markdown'])}\n          </p>\n          <strong className={styles.title}>\n            {lang('lng_prizes_results_winners')}\n          </strong>\n          <div className={styles.peers}>\n            {winnerIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <p className={styles.description}>\n            {lang('BoostingGiveawayResultsMsgAllWinnersReceivedLinks')}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayInfo() {\n    if (!sender || !giveawayInfo) return undefined;\n    const isResultsInfo = giveawayInfo.type === 'results';\n\n    const chatTitle = isApiPeerChat(sender) ? getChatTitle(lang, sender) : getUserFullName(sender);\n    const endDate = formatDateAtTime(lang, untilDate * 1000);\n    const otherChannelsCount = giveaway?.channelIds ? giveaway.channelIds.length - 1 : 0;\n    const otherChannelsString = lang('Chat.Giveaway.Info.OtherChannels', otherChannelsCount);\n    const isSeveral = otherChannelsCount > 0;\n\n    const firstKey = isResultsInfo ? 'BoostingGiveawayHowItWorksTextEnd' : 'BoostingGiveawayHowItWorksText';\n    const giveawayDuration = isResultsInfo ? lang('Chat.Giveaway.Info.Months', months) : lang('Stars', stars, 'i');\n    const firstParagraph = lang(firstKey, [chatTitle, quantity, giveawayDuration], undefined, quantity);\n\n    const additionalPrizes = prizeDescription\n      ? lang('BoostingGiveawayHowItWorksIncludeText', [chatTitle, quantity, prizeDescription], undefined, quantity)\n      : undefined;\n\n    let secondKey = '';\n    if (isResultsInfo) {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveralEnd' : 'BoostingGiveawayHowItWorksSubTextEnd';\n    } else {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveral' : 'BoostingGiveawayHowItWorksSubText';\n    }\n    let secondParagraph = lang(secondKey, [endDate, quantity, chatTitle, otherChannelsCount], undefined, quantity);\n    if (isResultsInfo && giveawayInfo.activatedCount) {\n      secondParagraph += ` ${lang('BoostingGiveawayUsedLinksPlural', giveawayInfo.activatedCount)}`;\n    }\n\n    let result = '';\n\n    if (isResultsInfo) {\n      if (giveawayInfo.isRefunded) {\n        result = lang('BoostingGiveawayCanceledByPayment');\n      } else {\n        result = lang(giveawayInfo.isWinner ? 'BoostingGiveawayYouWon' : 'BoostingGiveawayYouNotWon');\n      }\n    }\n\n    let lastParagraph = '';\n    if (isResultsInfo) {\n      // Nothing\n    } else if (giveawayInfo.disallowedCountry) {\n      lastParagraph = lang('BoostingGiveawayNotEligibleCountry');\n    } else if (giveawayInfo.adminDisallowedChatId) {\n      // Since rerenders are not expected, we can use the global state directly\n      const chatsById = getGlobal().chats.byId;\n      const disallowedChat = chatsById[giveawayInfo.adminDisallowedChatId];\n      const disallowedChatTitle = disallowedChat && getChatTitle(lang, disallowedChat);\n      lastParagraph = lang('BoostingGiveawayNotEligibleAdmin', disallowedChatTitle);\n    } else if (giveawayInfo.joinedTooEarlyDate) {\n      const joinedTooEarlyDate = formatDateAtTime(lang, giveawayInfo.joinedTooEarlyDate * 1000);\n      lastParagraph = lang('BoostingGiveawayNotEligible', joinedTooEarlyDate);\n    } else if (giveawayInfo.isParticipating) {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.ParticipatingMany', [chatTitle, otherChannelsCount])\n        : lang('Chat.Giveaway.Info.Participating', chatTitle);\n    } else {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.NotQualifiedMany', [chatTitle, otherChannelsString, endDate])\n        : lang('Chat.Giveaway.Info.NotQualified', [chatTitle, endDate]);\n    }\n\n    return (\n      <>\n        {result && (\n          <p className={styles.result}>\n            {renderText(result, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(firstParagraph, ['simple_markdown'])}\n        </p>\n        {additionalPrizes && (\n          <p>\n            {renderText(additionalPrizes, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(secondParagraph, ['simple_markdown'])}\n        </p>\n        {lastParagraph && (\n          <p>\n            {renderText(lastParagraph, ['simple_markdown'])}\n          </p>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.sticker, isResults && styles.resultSticker)}>\n        {isResults ? (\n          <AnimatedIconWithPreview\n            size={RESULT_STICKER_SIZE}\n            tgsUrl={LOCAL_TGS_URLS.PartyPopper}\n            nonInteractive\n            noLoop\n          />\n        ) : (\n          <AnimatedIconFromSticker\n            sticker={giftSticker}\n            play={canPlayAnimatedEmojis && hasEnded}\n            noLoop\n            nonInteractive\n            size={GIFT_STICKER_SIZE}\n          />\n        )}\n        <span className={styles.count}>\n          {`x${quantity}`}\n        </span>\n      </div>\n      {isResults ? renderGiveawayResultsDescription(giveawayResults) : renderGiveawayDescription(giveaway!)}\n      <Button\n        className={styles.button}\n        color=\"adaptive\"\n        onClick={handleShowInfoClick}\n      >\n        {lang('BoostingHowItWork')}\n      </Button>\n      <ConfirmDialog\n        isOpen={Boolean(giveawayInfo)}\n        isOnlyConfirm\n        title={giveawayInfoTitle}\n        confirmHandler={handleCloseInfo}\n        onClose={handleCloseInfo}\n      >\n        {renderGiveawayInfo()}\n      </ConfirmDialog>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message }): Complete<StateProps> => {\n    const { giveaway } = message.content;\n    const chat = selectChat(global, message.chatId)!;\n    const sender = (giveaway?.channelIds[0] ? selectChat(global, giveaway.channelIds[0]) : undefined)\n      || selectForwardedSender(global, message) || chat;\n\n    const sticker = giveaway && selectGiftStickerForDuration(global, giveaway.months);\n\n    return {\n      chat,\n      sender,\n      giftSticker: sticker,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(Giveaway));\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton, ApiMessage } from '../../../api/types';\nimport type { ActionPayloads } from '../../../global/types';\n\nimport { RE_TME_LINK, TME_LINK_PREFIX } from '../../../config';\nimport renderKeyboardButtonText from '../composer/helpers/renderKeyboardButtonText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport './InlineButtons.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  onClick: (payload: ActionPayloads['clickBotInlineButton']) => void;\n};\n\nconst InlineButtons: FC<OwnProps> = ({ message, onClick }) => {\n  const lang = useOldLang();\n\n  const renderIcon = (button: ApiKeyboardButton) => {\n    const { type } = button;\n    switch (type) {\n      case 'url': {\n        const { url } = button;\n\n        if (url.startsWith(TME_LINK_PREFIX) && url.includes('?startapp')) {\n          return <Icon className=\"corner-icon\" name=\"webapp\" />;\n        } else if (!RE_TME_LINK.test(url)) {\n          return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n        }\n\n        return;\n      }\n      case 'urlAuth':\n        return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n      case 'buy':\n      case 'receipt':\n        return <Icon className=\"corner-icon\" name=\"card\" />;\n      case 'switchBotInline':\n        return <Icon className=\"corner-icon\" name=\"share-filled\" />;\n      case 'webView':\n      case 'simpleWebView':\n        return <Icon className=\"corner-icon\" name=\"webapp\" />;\n      case 'copy':\n        return <Icon className=\"corner-icon\" name=\"copy\" />;\n      case 'suggestedMessage':\n        if (button.buttonType === 'suggestChanges') {\n          return <Icon className=\"left-icon\" name=\"edit\" />;\n        }\n        if (button.buttonType === 'approve') {\n          return <Icon className=\"left-icon\" name=\"check\" />;\n        }\n        if (button.buttonType === 'decline') {\n          return <Icon className=\"left-icon\" name=\"close\" />;\n        }\n        break;\n    }\n\n    return;\n  };\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message.inlineButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n    return texts;\n  }, [lang, message.inlineButtons]);\n\n  return (\n    <div className=\"InlineButtons\">\n      {message.inlineButtons!.map((row, i) => (\n        <div className=\"row\">\n          {row.map((button, j) => (\n            <Button\n              size=\"tiny\"\n              ripple\n              disabled={button.type === 'unsupported' || (button.type === 'suggestedMessage' && button.disabled)}\n\n              onClick={() => onClick({ chatId: message.chatId, messageId: message.id, button })}\n            >\n              {renderIcon(button)}\n              <span className=\"inline-button-text\">\n                {buttonTexts[i][j]}\n              </span>\n            </Button>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(InlineButtons);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageInvoice, getWebDocumentHash } from '../../../global/helpers';\nimport buildStyle from '../../../util/buildStyle';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\n\nimport useLang from '../../../hooks/useLang';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Invoice.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldAffectAppendix?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n  forcedWidth?: number;\n};\n\nconst Invoice: FC<OwnProps> = ({\n  message,\n  shouldAffectAppendix,\n  isInSelectMode,\n  isSelected,\n  theme,\n  forcedWidth,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const invoice = getMessageInvoice(message);\n\n  const {\n    title,\n    description,\n    amount,\n    currency,\n    isTest,\n    photo,\n  } = invoice!;\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n  const withBlurredBackground = Boolean(forcedWidth);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photoUrl, !withBlurredBackground);\n  const messageId = message.id;\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    if (photoUrl) {\n      const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n      getCustomAppendixBg(photoUrl, false, messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    }\n  }, [shouldAffectAppendix, photoUrl, isInSelectMode, isSelected, theme, messageId]);\n\n  const width = forcedWidth || photo?.dimensions?.width;\n\n  const style = buildStyle(\n    photo?.dimensions && `width: ${width}px`,\n    photo?.dimensions && `aspect-ratio: ${photo.dimensions.width} / ${photo.dimensions.height}`,\n    Boolean(!photo?.dimensions && forcedWidth) && `width: ${forcedWidth}px`,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className=\"Invoice\"\n    >\n      {title && (\n        <p className=\"title\">{renderText(title)}</p>\n      )}\n      {description && (\n        <div className=\"info\">{renderText(description, ['emoji', 'br'])}</div>\n      )}\n      <div className={`description ${photo ? 'has-image' : ''}`}>\n        {Boolean(photo) && (\n          <div className=\"invoice-image-container\">\n            {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n            {photoUrl && (\n              <img\n                className=\"invoice-image\"\n                src={photoUrl}\n                alt=\"\"\n                style={style}\n                crossOrigin=\"anonymous\"\n                draggable={false}\n              />\n            )}\n            {!photoUrl && photo && (\n              <Skeleton\n                width={width}\n                height={photo.dimensions?.height}\n                forceAspectRatio\n              />\n            )}\n          </div>\n        )}\n        <p className=\"description-text\">\n          {formatCurrency(lang, amount, currency, { iconClassName: 'invoice-currency-icon' })}\n          {isTest && <span className=\"test-invoice\">{oldLang('PaymentTestInvoice')}</span>}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Invoice);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dCK8GQ_8\",\"duration\":\"CWT8ZMwV\",\"buy\":\"C38zhCDM\",\"spoiler\":\"CG55VZP1\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getMessageInvoice } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './InvoiceMediaPreview.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  isConnected: boolean;\n};\n\nconst POLLING_INTERVAL = 30000;\n\nconst InvoiceMediaPreview: FC<OwnProps> = ({\n  message,\n  isConnected,\n}) => {\n  const { openInvoice, loadExtendedMedia } = getActions();\n  const lang = useOldLang();\n  const invoice = getMessageInvoice(message);\n\n  const { chatId, id } = message;\n\n  const refreshExtendedMedia = useLastCallback(() => {\n    loadExtendedMedia({ chatId, ids: [id] });\n  });\n\n  useInterval(refreshExtendedMedia, isConnected ? POLLING_INTERVAL : undefined);\n\n  const {\n    amount,\n    currency,\n    extendedMedia,\n  } = invoice!;\n\n  const {\n    width, height, thumbnail, duration,\n  } = extendedMedia!;\n\n  const handleClick = useLastCallback(() => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId: id,\n      isExtendedMedia: true,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, 'media-inner')}\n      onClick={handleClick}\n    >\n      <MediaSpoiler\n        thumbDataUri={thumbnail?.dataUri}\n        width={width}\n        height={height}\n        isVisible\n        className={styles.spoiler}\n      />\n      {Boolean(duration) && <div className={styles.duration}>{formatMediaDuration(duration)}</div>}\n      <div className={styles.buy}>\n        <Icon name=\"lock\" className={styles.lock} />\n        {lang('Checkout.PayPrice', formatCurrencyAsString(amount, currency))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(InvoiceMediaPreview);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  buildStaticMapHash,\n  getMessageLocation,\n  isGeoLiveExpired,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCountdownShort, formatLocationLastUpdate } from '../../../util/dates/dateFormat';\nimport {\n  getMetersPerPixel, getVenueColor, getVenueIconUrl,\n} from '../../../util/map';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../common/Avatar';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Location.scss';\n\nimport mapPin from '../../../assets/map-pin.svg';\n\nconst TIMER_RADIUS = 12;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst MOVE_THRESHOLD = 0.0001; // ~11m\nconst DEFAULT_MAP_CONFIG = {\n  width: 400,\n  height: 300,\n  zoom: 16,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  peer?: ApiPeer;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n};\n\nconst Location: FC<OwnProps> = ({\n  message,\n  peer,\n}) => {\n  const { openMapModal } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const countdownRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  const location = getMessageLocation(message)!;\n  const { mediaType, geo } = location;\n\n  const serverTime = getServerTime();\n  const isExpired = isGeoLiveExpired(message);\n  const secondsBeforeEnd = (mediaType === 'geoLive' && !isExpired) ? message.date + location.period - serverTime\n    : undefined;\n\n  const [point, setPoint] = useState(geo);\n\n  const shouldRenderText = mediaType === 'venue' || (mediaType === 'geoLive' && !isExpired);\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n\n  const mediaHash = buildStaticMapHash(point, width, height, zoom, dpr);\n  const mediaBlobUrl = useMedia(mediaHash);\n  const prevMediaBlobUrl = usePreviousDeprecated(mediaBlobUrl, true);\n  const mapBlobUrl = mediaBlobUrl || prevMediaBlobUrl;\n\n  const accuracyRadiusPx = useMemo(() => {\n    if (mediaType !== 'geoLive' || !point.accuracyRadius) {\n      return 0;\n    }\n\n    const { lat, accuracyRadius } = point;\n    return accuracyRadius / getMetersPerPixel(lat, zoom);\n  }, [mediaType, point, zoom]);\n\n  const handleClick = () => {\n    openMapModal({ geoPoint: point, zoom });\n  };\n\n  const updateCountdown = useLastCallback((countdownEl: HTMLDivElement) => {\n    if (mediaType !== 'geoLive') return;\n    const svgEl = countdownEl.lastElementChild!;\n    const timerEl = countdownEl.firstElementChild!;\n\n    const timeLeft = message.date + location.period - getServerTime();\n    const strokeDashOffset = (1 - timeLeft / location.period) * TIMER_CIRCUMFERENCE;\n    const text = formatCountdownShort(lang, timeLeft * 1000);\n    timerEl.textContent = text;\n    svgEl.firstElementChild!.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  });\n\n  useLayoutEffect(() => {\n    if (countdownRef.current) {\n      updateCountdown(countdownRef.current);\n    }\n  }, [updateCountdown]);\n\n  useEffect(() => {\n    // Prevent map refetching for slight location changes\n    if (Math.abs(geo.lat - point.lat) < MOVE_THRESHOLD && Math.abs(geo.long - point.long) < MOVE_THRESHOLD) {\n      if (point.accuracyRadius !== geo.accuracyRadius) {\n        setPoint({\n          ...point,\n          accuracyRadius: geo.accuracyRadius,\n        });\n      }\n      return;\n    }\n    setPoint(geo);\n  }, [geo, point]);\n\n  useTimeout(() => {\n    forceUpdate();\n  }, !isExpired ? (secondsBeforeEnd || 0) * 1000 : undefined);\n\n  useInterval(() => {\n    requestMutation(() => {\n      const countdownEl = countdownRef.current;\n      if (countdownEl) {\n        updateCountdown(countdownEl);\n      }\n    });\n  }, secondsBeforeEnd ? 1000 : undefined);\n\n  function renderInfo() {\n    if (!shouldRenderText) return undefined;\n    if (mediaType === 'venue') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">\n            {location.title}\n          </div>\n          <div className=\"location-info-subtitle\">\n            {location.address}\n          </div>\n        </div>\n      );\n    }\n    if (mediaType === 'geoLive') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">{lang('AttachLiveLocation')}</div>\n          <div className=\"location-info-subtitle\">\n            {formatLocationLastUpdate(lang, serverTime, message.editDate)}\n          </div>\n          {!isExpired && (\n            <div className=\"geo-countdown\" ref={countdownRef}>\n              <span className=\"geo-countdown-text\" />\n              <svg width=\"32px\" height=\"32px\">\n                <circle\n                  cx=\"16\"\n                  cy=\"16\"\n                  r={TIMER_RADIUS}\n                  className=\"geo-countdown-progress\"\n                  transform=\"rotate(-90, 16, 16)\"\n                  stroke-dasharray={TIMER_CIRCUMFERENCE}\n                  stroke-dashoffset=\"0\"\n                />\n              </svg>\n            </div>\n          )}\n        </div>\n      );\n    }\n    return undefined;\n  }\n\n  function renderMap() {\n    if (!mapBlobUrl) return <Skeleton width={width} height={height} />;\n    return (\n      <img\n        className=\"full-media map\"\n        src={mapBlobUrl}\n        alt=\"Location on a map\"\n        draggable={false}\n        style={`width: ${DEFAULT_MAP_CONFIG.width}px; height: ${DEFAULT_MAP_CONFIG.height}px;`}\n      />\n    );\n  }\n\n  function renderPin() {\n    const pinClassName = buildClassName(\n      'pin',\n      mediaType,\n      isExpired && 'expired',\n    );\n    if (mediaType === 'geoLive') {\n      return (\n        <div className={pinClassName}>\n          <PinSvg />\n          <Avatar peer={peer} className=\"location-avatar\" />\n          {location.heading !== undefined && (\n            <div className=\"direction\" style={`--direction: ${location.heading}deg`} />\n          )}\n        </div>\n      );\n    }\n\n    if (mediaType === 'venue') {\n      const color = getVenueColor(location.venueType);\n      const iconSrc = getVenueIconUrl(location.venueType);\n      if (iconSrc) {\n        return (\n          <div className={pinClassName} style={`--pin-color: ${color}`}>\n            <PinSvg />\n            <img src={iconSrc} draggable={false} className=\"venue-icon\" alt=\"\" />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <img className={pinClassName} draggable={false} src={mapPin} alt=\"\" />\n    );\n  }\n\n  function renderOverlay() {\n    if (!mapBlobUrl) return undefined;\n\n    return (\n      <>\n        {Boolean(accuracyRadiusPx) && !isExpired && (\n          <div\n            className=\"location-accuracy\"\n            style={`width: ${accuracyRadiusPx * 2}px; height: ${accuracyRadiusPx * 2}px`}\n          />\n        )}\n        {renderPin()}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className=\"Location media-inner interactive\"\n      onClick={handleClick}\n    >\n      <div className=\"map-wrapper\">\n        {renderMap()}\n        {renderOverlay()}\n      </div>\n      {renderInfo()}\n    </div>\n  );\n};\n\nfunction PinSvg() {\n  return (\n    <svg className=\"round-pin\" style=\"enable-background:new 0 0 64 64\" viewBox=\"0 0 64 64\">\n      <circle cx=\"32\" cy=\"32\" r=\"24.5\" />\n      <path d=\"M32 8c13.23 0 24 10.77 24 24S45.23 56 32 56 8 45.23 8 32 18.77 8 32 8m0-1C18.19 7 7 18.19 7 32s11.19 25 25 25 25-11.19 25-25S45.81 7 32 7z\" />\n      <path d=\"m29.38 57.67-1.98-1.59 3.02-1.66L32 51.54l1.58 2.88 3.02 1.66-1.91 1.53L32 60.73z\" />\n      <path d=\"m32 52.58 1.07 1.95.14.26.26.14 2.24 1.22-1.33 1.06-.07.06-.06.07L32 59.96l-2.24-2.61-.06-.07-.07-.06-1.33-1.06 2.24-1.22.26-.14.14-.26L32 52.58m0-2.08-1.94 3.56L26.5 56l2.5 2 3 3.5 3-3.5 2.5-2-3.56-1.94L32 50.5z\" />\n    </svg>\n  );\n}\n\nexport default memo(Location);\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiMessage, ApiMessageOutgoingStatus, ApiThreadInfo,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString, formatPastTimeShort, formatTime } from '../../../util/dates/dateFormat';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport MessageOutgoingStatus from '../../common/MessageOutgoingStatus';\n\nimport './MessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  withReactionOffset?: boolean;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  signature?: string;\n  availableReactions?: ApiAvailableReaction[];\n  noReplies?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  isTranslated?: boolean;\n  isPinned?: boolean;\n  withFullDate?: boolean;\n  effectEmoji?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onTranslationClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onEffectClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  renderQuickReactionButton?: () => TeactNode | undefined;\n  onOpenThread: NoneToVoidFunction;\n  paidMessageStars?: number;\n};\n\nconst MessageMeta: FC<OwnProps> = ({\n  message,\n  outgoingStatus,\n  signature,\n  withReactionOffset,\n  repliesThreadInfo,\n  renderQuickReactionButton,\n  noReplies,\n  isTranslated,\n  isPinned,\n  withFullDate,\n  effectEmoji,\n  onClick,\n  onTranslationClick,\n  onEffectClick,\n  onOpenThread,\n  paidMessageStars,\n}) => {\n  const { showNotification } = getActions();\n\n  const [isActivated, markActivated] = useFlag();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function handleImportedClick(e: React.MouseEvent) {\n    e.stopPropagation();\n\n    showNotification({\n      message: {\n        key: 'ImportedInfo',\n      },\n    });\n  }\n\n  function handleOpenThread(e: React.MouseEvent) {\n    e.stopPropagation();\n    onOpenThread();\n  }\n\n  const dateTitle = useMemo(() => {\n    if (!isActivated) return undefined;\n    const createDateTime = formatDateTimeToString(message.date * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const editDateTime = message.isEdited\n      && formatDateTimeToString(message.editDate! * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const forwardedDateTime = message.forwardInfo\n      && formatDateTimeToString(\n        (message.forwardInfo.savedDate || message.forwardInfo.date) * 1000,\n        oldLang.code,\n        undefined,\n        oldLang.timeFormat,\n      );\n\n    let text = createDateTime;\n    if (editDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipEditedDate', { date: editDateTime });\n    }\n    if (forwardedDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipForwardedDate', { date: forwardedDateTime });\n    }\n\n    return text;\n    // We need to listen to timeformat change\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [isActivated, oldLang, message, oldLang.timeFormat]);\n\n  const viewsTitle = useMemo(() => {\n    if (!message.viewsCount) return undefined;\n    let text = lang('MessageTooltipViews', {\n      count: lang.number(message.viewsCount),\n    }, { pluralValue: message.viewsCount });\n    if (message.forwardsCount) {\n      text += '\\n';\n      text += lang('MessageTooltipForwards', {\n        count: lang.number(message.forwardsCount),\n      }, { pluralValue: message.forwardsCount });\n    }\n\n    return text;\n  }, [lang, message.forwardsCount, message.viewsCount]);\n\n  const repliesTitle = useMemo(() => {\n    const count = repliesThreadInfo?.messagesCount;\n    if (!count) return undefined;\n    return lang('MessageTooltipReplies', { count }, { pluralValue: count });\n  }, [lang, repliesThreadInfo]);\n\n  const date = useMemo(() => {\n    const time = formatTime(oldLang, message.date * 1000);\n    if (!withFullDate) {\n      return time;\n    }\n\n    return formatPastTimeShort(oldLang, (message.forwardInfo?.date || message.date) * 1000, true);\n  }, [oldLang, message.date, message.forwardInfo?.date, withFullDate]);\n\n  const fullClassName = buildClassName(\n    'MessageMeta',\n    withReactionOffset && 'reactions-offset',\n    message.forwardInfo?.isImported && 'is-imported',\n  );\n\n  return (\n    <span\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n      onClick={onClick}\n      data-ignore-on-paste\n    >\n      {effectEmoji && (\n        <span className=\"message-effect-icon\" onClick={onEffectClick}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {isTranslated && (\n        <Icon name=\"language\" className=\"message-translated\" onClick={onTranslationClick} />\n      )}\n      {Boolean(message.viewsCount) && (\n        <>\n          <span className=\"message-views\" title={viewsTitle}>\n            {formatIntegerCompact(lang, message.viewsCount)}\n          </span>\n          <Icon name=\"channelviews\" />\n        </>\n      )}\n      {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n        <span onClick={handleOpenThread} className=\"message-replies-wrapper\" title={repliesTitle}>\n          <span className=\"message-replies\">\n            <AnimatedCounter text={formatIntegerCompact(lang, repliesThreadInfo.messagesCount)} />\n          </span>\n          <Icon name=\"reply-filled\" />\n        </span>\n      )}\n      {isPinned && (\n        <Icon name=\"pinned-message\" className=\"message-pinned\" />\n      )}\n      {signature && (\n        <span className=\"message-signature\">{renderText(signature)}</span>\n      )}\n      {Boolean(paidMessageStars) && (\n        <span className=\"message-price\">\n          {\n            formatStarsAsIcon(lang, paidMessageStars, {\n              asFont: true,\n              className: 'message-price-star-icon',\n              containerClassName: 'message-price-stars-container',\n            })\n          }\n        </span>\n      )}\n      <span className=\"message-time\" title={dateTitle} onMouseEnter={markActivated}>\n        {message.forwardInfo?.isImported && (\n          <>\n            <span className=\"message-imported\" onClick={handleImportedClick}>\n              {formatDateTimeToString(message.forwardInfo.date * 1000, lang.code, true)}\n            </span>\n            <span className=\"message-imported\" onClick={handleImportedClick}>{lang('MessageMetaImported')}</span>\n          </>\n        )}\n        {message.isEdited && `${lang('MessageMetaEdited')} `}\n        {message.isVideoProcessingPending && `${lang('MessageMetaApproximate')} `}\n        {date}\n      </span>\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      {renderQuickReactionButton && renderQuickReactionButton()}\n    </span>\n  );\n};\n\nexport default memo(MessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wqsZyy8u\",\"button\":\"NGmo4ADz\",\"info\":\"iFn6m6hd\",\"reason\":\"l8QfocIQ\",\"arrow\":\"ONmpzmUS\",\"incoming\":\"BfgDXljM\",\"missed\":\"Alra_BWu\",\"canceled\":\"J7xsuCAm\",\"meta\":\"rF5tkx92\",\"duration\":\"kKPKwFzu\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ApiMessageActionPhoneCall } from '../../../api/types/messageActions';\n\nimport { ARE_CALLS_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatTimeDuration } from '../../../util/dates/dateFormat';\nimport { getCallMessageKey } from './helpers/messageActions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MessagePhoneCall.module.scss';\n\ntype OwnProps = {\n  phoneCall: ApiMessageActionPhoneCall;\n  message: ApiMessage;\n  chatId: string;\n};\n\nconst MessagePhoneCall: FC<OwnProps> = ({\n  phoneCall,\n  message,\n  chatId,\n}) => {\n  const { requestMasterAndRequestCall } = getActions();\n\n  const lang = useOldLang();\n  const {\n    isVideo, reason, duration,\n  } = phoneCall;\n  const isOutgoing = message.isOutgoing;\n  const isMissed = reason === 'missed';\n  const isCancelled = reason === 'busy' || duration === undefined;\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ isVideo, userId: chatId });\n  });\n\n  const formattedDuration = useMemo(() => {\n    return phoneCall.duration ? formatTimeDuration(lang, phoneCall.duration) : undefined;\n  }, [lang, phoneCall.duration]);\n\n  const timeFormatted = formatTime(lang, message.date * 1000);\n  return (\n    <div className={styles.root}>\n      <Button\n        size=\"smaller\"\n        color=\"translucent\"\n        round\n        ripple\n        onClick={handleCall}\n        className={styles.button}\n        disabled={!ARE_CALLS_SUPPORTED}\n        ariaLabel={lang(isOutgoing ? 'CallAgain' : 'CallBack')}\n      >\n        <Icon name={isVideo ? 'video-outlined' : 'phone'} />\n      </Button>\n      <div className={styles.info}>\n        <div className={styles.reason}>{lang(getCallMessageKey(phoneCall, message.isOutgoing))}</div>\n        <div className={styles.meta}>\n          <Icon\n            name=\"arrow-right\"\n            className={buildClassName(\n              styles.arrow,\n              isMissed && styles.missed,\n              isCancelled && styles.canceled,\n              !isOutgoing && styles.incoming,\n            )}\n          />\n          <span className={styles.duration}>\n            {formattedDuration ? lang('CallMessageWithDuration', [timeFormatted, formattedDuration]) : timeFormatted}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MessagePhoneCall);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mVaSjZRJ\",\"buyButton\":\"GnKGu6D9\",\"boughtStatus\":\"IGXW5hWr\",\"star\":\"ywiOugiH\",\"buttonText\":\"gLaaVQXr\"};","import type React from '../../../lib/teact/teact';\nimport { memo, type TeactNode, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPaidMedia } from '../../../api/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { replaceWithTeact } from '../../../util/replaceWithTeact';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './PaidMediaOverlay.module.scss';\n\ntype OwnProps = {\n  paidMedia: ApiPaidMedia;\n  chatId: string;\n  messageId: number;\n  isOutgoing?: boolean;\n  children?: TeactNode;\n};\n\nconst PaidMediaOverlay = ({\n  paidMedia,\n  chatId,\n  messageId,\n  isOutgoing,\n  children,\n}: OwnProps) => {\n  const { openInvoice } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isClickable = !paidMedia.isBought;\n\n  const buttonText = useMemo(() => {\n    const value = oldLang('UnlockPaidContent', paidMedia.starsAmount);\n\n    return replaceWithTeact(\n      value, STARS_ICON_PLACEHOLDER, <StarIcon className={styles.star} type=\"gold\" size=\"adaptive\" />,\n    );\n  }, [oldLang, paidMedia]);\n\n  const handleClick = useLastCallback((e: React.MouseEvent) => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId,\n    });\n    stopEvent(e);\n  });\n\n  return (\n    <div\n      className={styles.root}\n      onClick={isClickable ? handleClick : undefined}\n    >\n      {children}\n      {isClickable && (\n        <Button\n          className={styles.buyButton}\n          color=\"dark\"\n          size=\"tiny\"\n          fluid\n          pill\n        >\n          <span className={styles.buttonText}>{buttonText}</span>\n        </Button>\n      )}\n      {paidMedia.isBought && (\n        <div className={buildClassName('message-paid-media-status', styles.boughtStatus)}>\n          {isOutgoing\n            ? formatStarsAsIcon(lang, paidMedia.starsAmount)\n            : oldLang('Chat.PaidMedia.Purchased')}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(PaidMediaOverlay);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  useEffect,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiPollAnswer, ApiPollResult } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './PollOption.scss';\n\ntype OwnProps = {\n  answer: ApiPollAnswer;\n  voteResults?: ApiPollResult[];\n  totalVoters?: number;\n  maxVotersCount?: number;\n  correctResults: string[];\n  shouldAnimate: boolean;\n};\n\nconst PollOption: FC<OwnProps> = ({\n  answer,\n  voteResults,\n  totalVoters,\n  maxVotersCount,\n  correctResults,\n  shouldAnimate,\n}) => {\n  const lang = useLang();\n  const result = voteResults && voteResults.find((r) => r.option === answer.option);\n  const correctAnswer = correctResults.length === 0 || correctResults.indexOf(answer.option) !== -1;\n  const showIcon = (correctResults.length > 0 && correctAnswer) || (result?.isChosen);\n  const answerPercent = result ? getPercentage(result.votersCount, totalVoters || 0) : 0;\n  const [finalPercent, setFinalPercent] = useState(shouldAnimate ? 0 : answerPercent);\n  const lineWidth = result ? getPercentage(result.votersCount, maxVotersCount || 0) : 0;\n  const isAnimationDoesNotStart = finalPercent !== answerPercent;\n\n  useEffect(() => {\n    if (shouldAnimate) {\n      setFinalPercent(answerPercent);\n    }\n  }, [shouldAnimate, answerPercent]);\n\n  if (!voteResults || !result) {\n    return undefined;\n  }\n\n  const lineStyle = `width: ${lineWidth}%; transform:scaleX(${isAnimationDoesNotStart ? 0 : 1})`;\n\n  return (\n    <div className=\"PollOption\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className={`poll-option-share ${answerPercent === '100' ? 'limit-width' : ''}`}>\n        {answerPercent}\n        %\n        {showIcon && (\n          <span className={buildClassName(\n            'poll-option-chosen',\n            !correctAnswer && 'wrong',\n            shouldAnimate && 'animate',\n          )}\n          >\n            <Icon name={correctAnswer ? 'check' : 'close'} className=\"poll-option-icon\" />\n          </span>\n        )}\n      </div>\n      <div className=\"poll-option-right\">\n        <div className=\"poll-option-text\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: answer.text.text,\n            entities: answer.text.entities,\n          })}\n        </div>\n        <div className={buildClassName('poll-option-answer', showIcon && !correctAnswer && 'wrong')}>\n          {shouldAnimate && (\n            <svg\n              className=\"poll-line\"\n              style={!isAnimationDoesNotStart ? 'stroke-dasharray: 100% 200%; stroke-dashoffset: -44' : ''}\n            >\n              <path d=\"M4.47 5.33v13.6a9 9 0 009 9h13\" />\n            </svg>\n          )}\n          <div\n            className=\"poll-option-line\"\n            style={lineStyle}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default PollOption;\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPoll, ApiPollAnswer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { selectPeer } from '../../../global/selectors';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getServerTime } from '../../../util/serverTime';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PollOption from './PollOption';\n\nimport './Poll.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  poll: ApiPoll;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onSendVote: (options: string[]) => void;\n};\n\nconst SOLUTION_CONTAINER_ID = '#middle-column-portals';\nconst SOLUTION_DURATION = 5000;\nconst TIMER_RADIUS = 6;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst TIMER_UPDATE_INTERVAL = 1000;\nconst NBSP = '\\u00A0';\n\nconst Poll: FC<OwnProps> = ({\n  message,\n  poll,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onSendVote,\n}) => {\n  const {\n    loadMessage, openPollResults, requestConfetti, showNotification,\n  } = getActions();\n\n  const { id: messageId, chatId } = message;\n  const { summary, results } = poll;\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [chosenOptions, setChosenOptions] = useState<string[]>([]);\n  const [wasSubmitted, setWasSubmitted] = useState<boolean>(false);\n  const [closePeriod, setClosePeriod] = useState<number>(() => (\n    !summary.closed && summary.closeDate && summary.closeDate > 0\n      ? Math.min(summary.closeDate - getServerTime(), summary.closePeriod!)\n      : 0\n  ));\n  const countdownRef = useRef<HTMLDivElement>();\n  const timerCircleRef = useRef<SVGCircleElement>();\n  const { results: voteResults, totalVoters } = results;\n  const hasVoted = voteResults && voteResults.some((r) => r.isChosen);\n  const canVote = !summary.closed && !hasVoted;\n  const canViewResult = !canVote && summary.isPublic && Number(results.totalVoters) > 0;\n  const isMultiple = canVote && summary.multipleChoice;\n  const recentVoterIds = results.recentVoterIds;\n  const maxVotersCount = voteResults ? Math.max(...voteResults.map((r) => r.votersCount)) : totalVoters;\n  const correctResults = useMemo(() => {\n    return voteResults?.filter((r) => r.isCorrect).map((r) => r.option) || [];\n  }, [voteResults]);\n  const answers = useMemo(() => summary.answers.map((a) => ({\n    label: renderTextWithEntities({\n      text: a.text.text,\n      entities: a.text.entities,\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    }),\n    value: a.option,\n    hidden: Boolean(summary.quiz && summary.closePeriod && closePeriod <= 0),\n  })), [\n    closePeriod, observeIntersectionForLoading, observeIntersectionForPlaying,\n    summary.answers, summary.closePeriod, summary.quiz,\n  ]);\n\n  useEffect(() => {\n    const chosen = poll.results.results?.find((result) => result.isChosen);\n    if (isSubmitting && chosen) {\n      if (chosen.isCorrect) {\n        requestConfetti({});\n      }\n      setIsSubmitting(false);\n    }\n  }, [isSubmitting, poll.results.results, requestConfetti]);\n\n  useLayoutEffect(() => {\n    if (closePeriod > 0) {\n      setTimeout(() => setClosePeriod(closePeriod - 1), TIMER_UPDATE_INTERVAL);\n    }\n    if (!timerCircleRef.current) return;\n\n    if (closePeriod <= 5) {\n      countdownRef.current!.classList.add('hurry-up');\n    }\n\n    const strokeDashOffset = ((summary.closePeriod! - closePeriod) / summary.closePeriod!) * TIMER_CIRCUMFERENCE;\n    timerCircleRef.current.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  }, [closePeriod, summary.closePeriod]);\n\n  useEffect(() => {\n    if (summary.quiz && (closePeriod <= 0 || (hasVoted && !summary.closed))) {\n      loadMessage({ chatId, messageId });\n    }\n  }, [chatId, closePeriod, hasVoted, loadMessage, messageId, summary.closed, summary.quiz]);\n\n  // If the client time is not synchronized, the poll must be updated after the closePeriod time has expired.\n  useEffect(() => {\n    let timer: number | undefined;\n\n    if (summary.quiz && !summary.closed && summary.closePeriod && summary.closePeriod > 0) {\n      timer = window.setTimeout(() => {\n        loadMessage({ chatId, messageId });\n      }, summary.closePeriod * 1000);\n    }\n\n    return () => {\n      if (timer) {\n        window.clearTimeout(timer);\n      }\n    };\n  }, [canVote, chatId, loadMessage, messageId, summary.closePeriod, summary.closed, summary.quiz]);\n\n  const recentVoters = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const global = getGlobal();\n    return recentVoterIds ? recentVoterIds.reduce((result: ApiPeer[], id) => {\n      const peer = selectPeer(global, id);\n      if (peer) {\n        result.push(peer);\n      }\n\n      return result;\n    }, []) : [];\n  }, [recentVoterIds]);\n\n  const handleRadioChange = useLastCallback((option: string) => {\n    setChosenOptions([option]);\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote([option]);\n  });\n\n  const handleCheckboxChange = useLastCallback((options: string[]) => {\n    setChosenOptions(options);\n  });\n\n  const handleVoteClick = useLastCallback(() => {\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote(chosenOptions);\n  });\n\n  const handleViewResultsClick = useLastCallback(() => {\n    openPollResults({ chatId, messageId });\n  });\n\n  const showSolution = useLastCallback(() => {\n    showNotification({\n      localId: getMessageKey(message),\n      message: renderTextWithEntities({ text: poll.results.solution!, entities: poll.results.solutionEntities }),\n      duration: SOLUTION_DURATION,\n      containerSelector: SOLUTION_CONTAINER_ID,\n    });\n  });\n\n  // Show the solution to quiz if the answer was incorrect\n  useEffect(() => {\n    if (wasSubmitted && hasVoted && summary.quiz && results.results && poll.results.solution) {\n      const correctResult = results.results.find((r) => r.isChosen && r.isCorrect);\n      if (!correctResult) {\n        showSolution();\n      }\n    }\n  }, [hasVoted, wasSubmitted, results.results, summary.quiz, poll.results.solution]);\n\n  const lang = useOldLang();\n\n  function renderResultOption(answer: ApiPollAnswer) {\n    return (\n      <PollOption\n        key={answer.option}\n        shouldAnimate={wasSubmitted || !canVote}\n        answer={answer}\n        voteResults={voteResults}\n        totalVoters={totalVoters}\n        maxVotersCount={maxVotersCount}\n        correctResults={correctResults}\n      />\n    );\n  }\n\n  function renderRecentVoters() {\n    return (\n      recentVoters.length > 0 && (\n        <div className=\"poll-recent-voters\">\n          <AvatarList\n            size=\"micro\"\n            peers={recentVoters}\n          />\n        </div>\n      )\n    );\n  }\n\n  return (\n    <div className=\"Poll\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"poll-question\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n          observeIntersectionForLoading,\n          observeIntersectionForPlaying,\n        })}\n      </div>\n      <div className=\"poll-type\">\n        {lang(getPollTypeString(summary))}\n        {renderRecentVoters()}\n        {closePeriod > 0 && canVote && (\n          <div ref={countdownRef} className=\"poll-countdown\">\n            <span>{formatMediaDuration(closePeriod)}</span>\n            <svg width=\"16px\" height=\"16px\">\n              <circle\n                ref={timerCircleRef}\n                cx=\"8\"\n                cy=\"8\"\n                r={TIMER_RADIUS}\n                className=\"poll-countdown-progress\"\n                transform=\"rotate(-90, 8, 8)\"\n                stroke-dasharray={TIMER_CIRCUMFERENCE}\n                stroke-dashoffset=\"0\"\n              />\n            </svg>\n          </div>\n        )}\n        {summary.quiz && poll.results.solution && !canVote && (\n          <Button\n            round\n            size=\"tiny\"\n            color=\"translucent\"\n            className=\"poll-quiz-help\"\n            onClick={showSolution}\n            ariaLabel=\"Show Solution\"\n          >\n            <Icon name=\"lamp\" />\n          </Button>\n        )}\n      </div>\n      {canVote && (\n        <div\n          className=\"poll-answers\"\n          onClick={stopPropagation}\n        >\n          {isMultiple\n            ? (\n              <CheckboxGroup\n                options={answers}\n                selected={chosenOptions}\n                onChange={handleCheckboxChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOptions={isSubmitting ? chosenOptions : undefined}\n                isRound\n              />\n            )\n            : (\n              <RadioGroup\n                name={`poll-${messageId}`}\n                options={answers}\n                onChange={handleRadioChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOption={isSubmitting ? chosenOptions[0] : undefined}\n              />\n            )}\n        </div>\n      )}\n      {!canVote && (\n        <div className=\"poll-results\">\n          {summary.answers.map(renderResultOption)}\n        </div>\n      )}\n      {!canViewResult && !isMultiple && (\n        <div className=\"poll-voters-count\">{getReadableVotersCount(lang, summary.quiz, results.totalVoters)}</div>\n      )}\n      {isMultiple && (\n        <Button\n          isText\n          disabled={chosenOptions.length === 0}\n          size=\"tiny\"\n          onClick={handleVoteClick}\n        >\n          {lang('PollSubmitVotes')}\n        </Button>\n      )}\n      {canViewResult && (\n        <Button\n          isText\n          size=\"tiny\"\n          onClick={handleViewResultsClick}\n        >\n          {lang('PollViewResults')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nfunction getPollTypeString(summary: ApiPoll['summary']) {\n  // When we just created the poll, some properties don't exist.\n  if (typeof summary.isPublic === 'undefined') {\n    return NBSP;\n  }\n\n  if (summary.closed) {\n    return 'FinalResults';\n  }\n\n  if (summary.quiz) {\n    return summary.isPublic ? 'QuizPoll' : 'AnonymousQuizPoll';\n  }\n\n  return summary.isPublic ? 'PublicPoll' : 'AnonymousPoll';\n}\n\nfunction getReadableVotersCount(lang: OldLangFn, isQuiz: true | undefined, count?: number) {\n  if (!count) {\n    return lang(isQuiz ? 'Chat.Quiz.TotalVotesEmpty' : 'Chat.Poll.TotalVotesResultEmpty');\n  }\n\n  return lang(isQuiz ? 'Answer' : 'Vote', count, 'i');\n}\n\nfunction stopPropagation(e: React.MouseEvent<HTMLDivElement>) {\n  e.stopPropagation();\n}\n\nexport default memo(Poll);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FPceNkgD\",\"inactive\":\"hruUWBuj\",\"mirrored\":\"GydRBA08\",\"effect\":\"WMMaWlOL\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getMediaThumbUri, getStickerMediaHash } from '../../../global/helpers';\nimport { IS_WEBM_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getStickerDimensions } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport SensitiveContentConfirmModal from '../../common/SensitiveContentConfirmModal';\nimport StickerView from '../../common/StickerView';\nimport Portal from '../../ui/Portal';\n\nimport styles from './Sticker.module.scss';\n\n// https://github.com/telegramdesktop/tdesktop/blob/master/Telegram/SourceFiles/history/view/media/history_view_sticker.cpp#L42\nconst EFFECT_SIZE_MULTIPLIER = 1 + 0.245 * 2;\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldLoop?: boolean;\n  shouldPlayEffect?: boolean;\n  withEffect?: boolean;\n  isMediaNsfw?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForPlaying: ObserveFn;\n  onStopEffect?: VoidFunction;\n};\n\ntype StateProps = {\n  needsAgeVerification?: boolean;\n};\n\nconst Sticker: FC<OwnProps & StateProps> = ({\n  message,\n  shouldLoop,\n  shouldPlayEffect,\n  withEffect,\n  isMediaNsfw,\n  onStopEffect,\n  observeIntersection,\n  observeIntersectionForPlaying,\n  needsAgeVerification,\n}) => {\n  const { showNotification, openStickerSet, updateContentSettings, openAgeVerificationModal } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const effectRef = useRef<HTMLDivElement>();\n\n  const sticker = message.content.sticker!;\n  const { stickerSetInfo, isVideo, hasEffect } = sticker;\n  const isMirrored = !message.isOutgoing;\n\n  const [isNsfwModalOpen, openNsfwModal, closeNsfwModal] = useFlag();\n  const [shouldAlwaysShowNsfw, setShouldAlwaysShowNsfw] = useState(false);\n\n  const shouldShowSpoiler = isMediaNsfw;\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(shouldShowSpoiler);\n\n  useEffect(() => {\n    if (shouldShowSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [shouldShowSpoiler]);\n\n  const handleNsfwConfirm = useLastCallback(() => {\n    closeNsfwModal();\n    hideSpoiler();\n\n    if (shouldAlwaysShowNsfw) {\n      updateContentSettings({ isSensitiveEnabled: true });\n    }\n  });\n\n  const mediaHash = sticker.isPreloadedGlobally ? undefined : (\n    getStickerMediaHash(sticker, isVideo && !IS_WEBM_SUPPORTED ? 'pictogram' : 'inline')\n  );\n\n  const canLoad = useIsIntersecting(ref, observeIntersection);\n  const canPlay = useIsIntersecting(ref, observeIntersectionForPlaying);\n  const mediaHashEffect = `sticker${sticker.id}?size=f`;\n  const effectBlobUrl = useMedia(\n    mediaHashEffect,\n    !canLoad || !hasEffect || !withEffect,\n    ApiMediaFormat.BlobUrl,\n  );\n  const [isPlayingEffect, startPlayingEffect, stopPlayingEffect] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(sticker);\n\n  const handleEffectEnded = useLastCallback(() => {\n    stopPlayingEffect();\n    onStopEffect?.();\n  });\n\n  useEffect(() => {\n    if (hasEffect && withEffect && canPlay && shouldPlayEffect) {\n      startPlayingEffect();\n    }\n  }, [hasEffect, canPlay, shouldPlayEffect, startPlayingEffect, withEffect]);\n\n  const shouldRenderEffect = hasEffect && withEffect && effectBlobUrl && isPlayingEffect;\n  useOverlayPosition({\n    anchorRef: ref,\n    overlayRef: effectRef,\n    isMirrored,\n    isDisabled: !shouldRenderEffect,\n  });\n\n  const openModal = useLastCallback(() => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isSpoilerShown) {\n      if (isMediaNsfw) {\n        if (needsAgeVerification) {\n          openAgeVerificationModal();\n          return;\n        }\n        openNsfwModal();\n        return;\n      }\n      hideSpoiler();\n      return;\n    }\n\n    if (hasEffect) {\n      if (isPlayingEffect || !withEffect) {\n        showNotification({\n          message: lang('PremiumStickerTooltip'),\n          action: {\n            action: 'openStickerSet',\n            payload: {\n              stickerSetInfo: sticker.stickerSetInfo,\n            },\n          },\n          actionText: lang('ViewAction'),\n        });\n        return;\n      } else if (withEffect) {\n        startPlayingEffect();\n        return;\n      }\n    }\n    openModal();\n  });\n\n  const isMemojiSticker = 'isMissing' in stickerSetInfo;\n  const { width, height } = getStickerDimensions(sticker, isMobile);\n  const className = buildClassName(\n    'media-inner',\n    styles.root,\n    isMemojiSticker && styles.inactive,\n    hasEffect && isMirrored && styles.mirrored,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      style={`width: ${width}px; height: ${height}px;`}\n      onClick={!isMemojiSticker ? handleClick : undefined}\n    >\n      <StickerView\n        containerRef={ref}\n        sticker={sticker}\n        fullMediaHash={mediaHash}\n        fullMediaClassName=\"full-media\"\n        size={width}\n        shouldLoop={shouldLoop}\n        noLoad={!canLoad}\n        noPlay={!canPlay}\n        withSharedAnimation\n      />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n        isNsfw={isMediaNsfw}\n      />\n      {shouldRenderEffect && (\n        <Portal>\n          <AnimatedSticker\n            ref={effectRef}\n            key={mediaHashEffect}\n            className={buildClassName(styles.effect, isMirrored && styles.mirrored)}\n            tgsUrl={effectBlobUrl}\n            size={width * EFFECT_SIZE_MULTIPLIER}\n            play\n            isLowPriority\n            noLoop\n            onEnded={handleEffectEnded}\n          />\n        </Portal>\n      )}\n      <SensitiveContentConfirmModal\n        isOpen={isNsfwModalOpen}\n        onClose={closeNsfwModal}\n        shouldAlwaysShow={shouldAlwaysShowNsfw}\n        onAlwaysShowChanged={setShouldAlwaysShowNsfw}\n        confirmHandler={handleNsfwConfirm}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): Complete<StateProps> => {\n  const appConfig = global.appConfig;\n  const needsAgeVerification = appConfig.needAgeVideoVerification;\n\n  return {\n    needsAgeVerification,\n  };\n})(Sticker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <Icon name=\"story-expired\" className={styles.expiredIcon} />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiTypeStory,\n} from '../../../api/types';\n\nimport { selectPeerStory } from '../../../global/selectors';\n\nimport BaseStory from './BaseStory';\n\ninterface OwnProps {\n  message: ApiMessage;\n  isProtected?: boolean;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  isConnected?: boolean;\n}\n\nfunction Story({\n  message, story, isProtected, isConnected,\n}: OwnProps & StateProps) {\n  const { storyData } = message.content;\n\n  return (\n    <BaseStory\n      story={story || storyData}\n      isProtected={isProtected}\n      isConnected={isConnected}\n    />\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): Complete<StateProps> => {\n  const { id, peerId } = message.content.storyData!;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    isConnected: global.connectionState === 'connectionStateReady',\n  };\n})(Story));\n","import { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiTypeStory, ApiUser,\n} from '../../../api/types';\n\nimport { getStoryMediaHash, getUserFirstOrLastName } from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport {\n  selectPeer,\n  selectPeerStories,\n  selectPeerStory,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\ninterface OwnProps {\n  message: ApiMessage;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  peer?: ApiPeer;\n  targetUser?: ApiUser;\n  isUnread?: boolean;\n}\n\nfunction StoryMention({\n  message, story, peer, isUnread, targetUser,\n}: OwnProps & StateProps) {\n  const { openStoryViewer } = getActions();\n\n  const lang = useOldLang();\n\n  const { storyData } = message.content;\n\n  const handleClick = useLastCallback(() => {\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  const isDeleted = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded\n    ? getStoryMediaHash(story, 'pictogram')\n    : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  useEnsureStory(storyData!.peerId, storyData!.id, story);\n\n  function getTitle() {\n    if (peer && 'isSelf' in peer && peer.isSelf) {\n      return isDeleted\n        ? lang('ExpiredStoryMentioned', getUserFirstOrLastName(targetUser))\n        : lang('StoryYouMentionedTitle', getUserFirstOrLastName(targetUser));\n    }\n\n    return isDeleted\n      ? lang('ExpiredStoryMention')\n      : lang('StoryMentionedTitle', getPeerTitle(lang, peer!));\n  }\n\n  return (\n    <div\n      className={buildClassName('action-message-story-mention', isUnread && 'is-unread', isLoaded && 'with-preview')}\n      tabIndex={0}\n      role=\"button\"\n      onClick={isLoaded ? handleClick : undefined}\n    >\n      {isLoaded && (\n        <span className=\"story-media-wrapper\">\n          {thumbUrl && (\n            <img src={thumbUrl} alt=\"\" className=\"story-media\" />\n          )}\n        </span>\n      )}\n\n      <span className=\"story-title\">{renderText(getTitle(), ['emoji', 'simple_markdown'])}</span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): Complete<StateProps> => {\n  const { id, peerId } = message.content.storyData!;\n  const lastReadId = selectPeerStories(global, peerId)?.lastReadId;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    peer: selectPeer(global, peerId),\n    targetUser: selectUser(global, message.chatId),\n    isUnread: Boolean(lastReadId && lastReadId < id),\n  };\n})(StoryMention));\n","import {\n  memo, useLayoutEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiMediaTodo,\n  ApiMessage,\n  ApiPeer,\n} from '../../../api/types';\n\nimport { getPeerFullTitle, getPeerTitle } from '../../../global/helpers/peers';\nimport { selectIsCurrentUserPremium, selectSender, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\n\nimport './TodoList.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  todoList: ApiMediaTodo;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  isCurrentUserPremium: boolean;\n  isSynced?: boolean;\n};\n\nconst TodoList = ({\n  message,\n  todoList,\n  sender,\n  isCurrentUserPremium,\n  isSynced,\n}: OwnProps & StateProps) => {\n  const { toggleTodoCompleted, showNotification, requestConfetti } = getActions();\n  const { todo, completions } = todoList;\n  const { title, items, othersCanComplete } = todo;\n  const [completedTasks, setCompletedTasks] = useState<string[]>([]);\n  const completedTasksSet = useMemo(() => new Set(completedTasks), [completedTasks]);\n\n  const canToggle = !message.isScheduled && isCurrentUserPremium && isSynced;\n\n  useLayoutEffect(() => {\n    const completedIds = completions?.map((c) => c.itemId.toString()) || [];\n    setCompletedTasks(completedIds);\n  }, [completions]);\n\n  const lang = useLang();\n\n  const handleTaskLabelClick = useLastCallback((e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('SubscribeToTelegramPremiumForToggleTask'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'todo' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n      return;\n    }\n  });\n\n  const handleTaskToggle = useLastCallback((newCompletedTasks: string[]) => {\n    const newCompletedId = newCompletedTasks.find((id) => !completedTasksSet.has(id));\n    const newIncompletedId = Array.from(completedTasksSet).find((id) => !newCompletedTasks.includes(id));\n\n    toggleTodoCompleted({\n      chatId: message.chatId,\n      messageId: message.id,\n      completedIds: newCompletedId ? [Number(newCompletedId)] : [],\n      incompletedIds: newIncompletedId ? [Number(newIncompletedId)] : [],\n    });\n\n    if (newCompletedTasks.length === items.length) {\n      requestConfetti({});\n    }\n  });\n  const isReadOnly = Boolean(message.forwardInfo) || (!othersCanComplete && !message.isOutgoing);\n  const isOutgoing = message.isOutgoing;\n\n  const tasks = useMemo(() => items.map((task) => {\n    const user = !othersCanComplete ? undefined : selectUser(getGlobal(),\n      completions?.find((c) => c.itemId === task.id)?.completedBy || '');\n    const subLabel = user ? getPeerFullTitle(lang, user) : undefined;\n    return {\n      label: renderTextWithEntities(task.title),\n      value: task.id.toString(),\n      user,\n      subLabel,\n    };\n  }), [items, othersCanComplete, completions, lang]);\n\n  const renderCheckBoxGroup = () => {\n    return (\n      <CheckboxGroup\n        options={tasks}\n        selected={completedTasks}\n        onChange={handleTaskToggle}\n        onClickLabel={!isCurrentUserPremium ? handleTaskLabelClick : undefined}\n        disabled={!canToggle}\n        isRound\n      />\n    );\n  };\n\n  const renderReadOnlyTodoList = () => {\n    return (\n      <div className=\"todo-list-items\">\n        {tasks.map((task) => (\n          <div\n            key={task.value}\n            className=\"todo-list-readonly-item\"\n          >\n            <div className=\"todo-readonly-item-checkbox\">\n              {completedTasksSet.has(task.value)\n                ? <Icon name=\"check\" />\n                : <div className=\"todo-item-bullet-point\" />}\n            </div>\n            <div\n              className={buildClassName(\n                'readonly-item-label',\n                completedTasksSet.has(task.value) && 'completed-label',\n              )}\n            >\n              {task.label}\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  const renderTodoListType = () => {\n    if (message.forwardInfo) {\n      return lang('TitleToDoList');\n    }\n\n    if (othersCanComplete) {\n      return lang('TitleGroupToDoList');\n    }\n\n    if (isOutgoing) {\n      return lang('TitleYourToDoList');\n    }\n\n    if (sender) {\n      return lang('TitleUserToDoList', { peer: getPeerTitle(lang, sender) }, { withNodes: true });\n    }\n\n    return lang('TitleToDoList');\n  };\n\n  return (\n    <div className=\"todo-list\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"todo-list-header\">\n        <div className=\"todo-list-title\">\n          {renderTextWithEntities(title)}\n        </div>\n        <div className=\"list-type\">\n          {renderTodoListType()}\n        </div>\n      </div>\n\n      <div className=\"todo-list-items\">\n        {isReadOnly ? renderReadOnlyTodoList() : renderCheckBoxGroup()}\n      </div>\n      <div className=\"completed-tasks-count\">\n        <AnimatedCounter text={\n          lang('DescriptionCompletedToDoTasks', {\n            number: completedTasks.length,\n            count: tasks.length,\n          })\n        }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { message }): Complete<StateProps> => {\n  const sender = selectSender(global, message);\n  return {\n    sender,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    isSynced: global.isSynced,\n  };\n},\n)(TodoList));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LaOdPURl\",\"backgroundWrapper\":\"zDnMa37m\",\"background\":\"EdXfeKWY\",\"stickerWrapper\":\"o_DYZEMV\"};","import { memo, useRef } from '@teact';\n\nimport type { ApiStarGiftUnique } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment.ts';\nimport buildClassName from '../../../util/buildClassName.ts';\nimport { getGiftAttributes } from '../../common/helpers/gifts';\n\nimport useFlag from '../../../hooks/useFlag.ts';\nimport { type ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport StickerView from '../../common/StickerView';\n\nimport styles from './WebPageUniqueGift.module.scss';\n\ntype OwnProps = {\n  gift: ApiStarGiftUnique;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst WebPageUniqueGift = ({\n  gift,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}: OwnProps) => {\n  const stickerRef = useRef<HTMLDivElement>();\n  const {\n    backdrop, model, pattern,\n  } = getGiftAttributes(gift)!;\n\n  const [isHover, markHover, unmarkHover] = useFlag();\n\n  const backgroundColors = [backdrop!.centerColor, backdrop!.edgeColor];\n\n  return (\n    <div\n      className={buildClassName('interactive-gift', styles.root)}\n      onClick={onClick}\n      onMouseEnter={!IS_TOUCH_ENV ? markHover : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? unmarkHover : undefined}\n    >\n      <div className={styles.backgroundWrapper}>\n        <RadialPatternBackground\n          className={styles.background}\n          backgroundColors={backgroundColors}\n          patternIcon={pattern!.sticker}\n          centerEmptiness={0.15}\n          ringsCount={2}\n          ovalFactor={1.2}\n        />\n      </div>\n      <div ref={stickerRef} className={styles.stickerWrapper}>\n        <StickerView\n          containerRef={stickerRef}\n          sticker={model!.sticker}\n          size={STAR_GIFT_STICKER_SIZE}\n          shouldLoop={isHover}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n          observeIntersectionForLoading={observeIntersectionForLoading}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WebPageUniqueGift);\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiMessageWebPage, ApiTypeStory, ApiWebPage, ApiWebPageFull } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ThemeKey, type WebPageMediaSize } from '../../../types';\n\nimport { getPhotoFullDimensions } from '../../../global/helpers';\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { tryParseDeepLink } from '../../../util/deepLinkParser';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { getWebpageButtonLangKey } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\nimport WebPageUniqueGift from './WebPageUniqueGift';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst WEBPAGE_GIFT_TYPE = 'telegram_nft';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  messageWebPage: ApiMessageWebPage;\n  webPage: ApiWebPage;\n  message?: ApiMessage;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ThemeKey;\n  story?: ApiTypeStory;\n  shouldWarnAboutFiles?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  lastPlaybackTimestamp?: number;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onDocumentClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n};\ntype StateProps = {\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst WebPage: FC<OwnProps & StateProps> = ({\n  messageWebPage,\n  webPage,\n  message,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutFiles,\n  autoLoadFileMaxSizeMb,\n  lastPlaybackTimestamp,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onMediaClick,\n  onDocumentClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n}) => {\n  const { openUrl, openTelegramLink } = getActions();\n  const stickersRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const fullWebPage = webPage?.webpageType === 'full' ? webPage : undefined;\n\n  const { story: storyData, stickers } = fullWebPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, undefined, !hasCustomColor);\n\n  const linkTimestamp = useMemo(() => {\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage?.url);\n    if (!parsedLink || !('timestamp' in parsedLink)) return undefined;\n    return parsedLink.timestamp;\n  }, [webPage?.url]);\n\n  if (webPage?.webpageType !== 'full') return undefined;\n\n  const handleOpenTelegramLink = useLastCallback(() => {\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n  } = webPage;\n  const { mediaSize } = messageWebPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isGift = type === WEBPAGE_GIFT_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n\n  const resultType = stickers?.isEmoji ? 'telegram_emojiset' : type;\n  const quickButtonLangKey = !isExpiredStory ? getWebpageButtonLangKey(resultType) : undefined;\n  const quickButtonTitle = quickButtonLangKey && lang(quickButtonLangKey);\n\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    isSquarePhoto = getIsSmallPhoto(webPage, mediaSize);\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonTitle && 'with-quick-button',\n    isGift && 'with-gift',\n  );\n\n  function renderQuickButton(caption: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        noForcedUpperCase\n        onClick={handleOpenTelegramLink}\n      >\n        {caption}\n      </Button>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={oldLang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName(\n        'WebPage--content',\n        isStory && 'is-story',\n        isGift && 'is-gift',\n      )}\n      >\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {isGift && (\n          <WebPageUniqueGift\n            gift={webPage.gift!}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onClick={handleOpenTelegramLink}\n          />\n        )}\n        {isArticle && (\n          <div\n            className={buildClassName('WebPage-text', 'WebPage-text_interactive')}\n            onClick={() => openUrl({ url, shouldSkipModal: messageWebPage.isSafe })}\n          >\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && !isGift && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {photo && !isGift && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message?.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {video && (\n          <Video\n            video={video}\n            isOwn={message?.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            lastPlaybackTimestamp={lastPlaybackTimestamp || linkTimestamp}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {audio && (\n          <Audio\n            theme={theme}\n            message={message!}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={onDocumentClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutFiles={shouldWarnAboutFiles}\n          />\n        )}\n        {stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      {quickButtonTitle && renderQuickButton(quickButtonTitle)}\n    </PeerColorWrapper>\n  );\n};\n\nfunction getIsSmallPhoto(webPage: ApiWebPageFull, mediaSize?: WebPageMediaSize) {\n  if (!webPage?.photo) return false;\n  if (mediaSize === 'small') return true;\n  if (mediaSize === 'large') return false;\n\n  const { width, height } = getPhotoFullDimensions(webPage.photo) || {};\n  if (!width || !height) return false;\n\n  return width === height && !webPage.hasLargeMedia;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): Complete<StateProps> => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(WebPage));\n","import type { RegularLangKey } from '../../../../types/language';\n\n// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonLangKey(type?: string): RegularLangKey | undefined {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'ViewButtonRequestJoin';\n    case 'telegram_message':\n      return 'ViewButtonMessage';\n    case 'telegram_bot':\n      return 'ViewButtonBot';\n    case 'telegram_voicechat':\n      return 'ViewButtonVoiceChat';\n    case 'telegram_livestream':\n      return 'ViewButtonVoiceChatChannel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'ViewButtonGroup';\n    case 'telegram_channel':\n      return 'ViewButtonChannel';\n    case 'telegram_user':\n      return 'ViewButtonUser';\n    case 'telegram_botapp':\n      return 'ViewButtonBotApp';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'ViewButtonStory';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'ViewButtonBoost';\n    case 'telegram_stickerset':\n      return 'ViewButtonStickerset';\n    case 'telegram_emojiset':\n      return 'ViewButtonEmojiset';\n    case 'telegram_nft':\n      return 'ViewButtonGiftUnique';\n    default:\n      return undefined;\n  }\n}\n","import {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatMember,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n  ApiThreadInfo,\n  ApiTopic,\n  ApiTypeStory,\n  ApiUser,\n  ApiWebPage,\n} from '../../../api/types';\nimport type { ActionPayloads } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ActiveEmojiInteraction,\n  ChatTranslatedMessages,\n  FocusDirection,\n  IAlbum,\n  MessageListType,\n  ScrollTargetPosition,\n  ThemeKey,\n  ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport type { OnIntersectPinnedMessage } from '../hooks/usePinnedMessage';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { EMOJI_STATUS_LOOP_LIMIT, MESSAGE_APPEARANCE_DELAY } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getIsDownloading,\n  getMainUsername,\n  getMessageContent,\n  getMessageCustomShape,\n  getMessageHtmlId,\n  getMessageSingleCustomEmoji,\n  getMessageSingleRegularEmoji,\n  getMessageWebPage,\n  hasMessageText,\n  hasMessageTtl,\n  isAnonymousForwardsChat,\n  isAnonymousOwnMessage,\n  isChatChannel,\n  isChatGroup,\n  isChatPublic,\n  isGeoLiveExpired,\n  isMessageLocal,\n  isMessageTranslatable,\n  isOwnMessage,\n  isReplyToMessage,\n  isSystemBot,\n} from '../../../global/helpers';\nimport { getPeerFullTitle } from '../../../global/helpers/peers';\nimport { getMessageReplyInfo, getStoryReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectActiveDownloads,\n  selectAnimatedEmoji,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectCanReplyToMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatTranslations,\n  selectCurrentMiddleSearch,\n  selectDefaultReaction,\n  selectForwardedSender,\n  selectFullWebPageFromMessage,\n  selectIsChatProtected,\n  selectIsChatRestricted,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsDocumentGroupSelected,\n  selectIsInSelectMode,\n  selectIsMessageFocused,\n  selectIsMessageProtected,\n  selectIsMessageSelected,\n  selectMessageIdsByGroupId,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectPollFromMessage,\n  selectReplyMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectSender,\n  selectSenderFromHeader,\n  selectShouldDetectChatLanguage,\n  selectShouldLoopStickers,\n  selectTabState,\n  selectTheme,\n  selectThreadInfo,\n  selectTopicFromMessage,\n  selectUploadProgress,\n  selectUser,\n} from '../../../global/selectors';\nimport {\n  selectIsMediaNsfw,\n  selectMessageDownloadableMedia,\n  selectMessageLastPlaybackTimestamp,\n  selectMessageTimestampableDuration,\n} from '../../../global/selectors/media';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_TAURI } from '../../../util/browser/globalEnvironment';\nimport { IS_ANDROID, IS_TRANSLATION_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getServerTime } from '../../../util/serverTime';\nimport stopEvent from '../../../util/stopEvent';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport { calculateDimensionsForMessageMedia, getStickerDimensions, REM } from '../../common/helpers/mediaDimensions';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\nimport renderText from '../../common/helpers/renderText';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\nimport { buildContentClassName } from './helpers/buildContentClassName';\nimport { calculateAlbumLayout } from './helpers/calculateAlbumLayout';\nimport getSingularPaidMedia from './helpers/getSingularPaidMedia';\nimport { calculateMediaDimensions, getMinMediaWidth, getMinMediaWidthWithText } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useFlag from '../../../hooks/useFlag';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useMessageResizeObserver from '../../../hooks/useResizeMessageObserver';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useTextLanguage from '../../../hooks/useTextLanguage';\nimport useDetectChatLanguage from './hooks/useDetectChatLanguage';\nimport useFocusMessage from './hooks/useFocusMessage';\nimport useInnerHandlers from './hooks/useInnerHandlers';\nimport useMessageTranslation from './hooks/useMessageTranslation';\nimport useOuterHandlers from './hooks/useOuterHandlers';\n\nimport Audio from '../../common/Audio';\nimport Avatar from '../../common/Avatar';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Document from '../../common/Document';\nimport DotAnimation from '../../common/DotAnimation';\nimport EmbeddedMessage from '../../common/embedded/EmbeddedMessage';\nimport EmbeddedStory from '../../common/embedded/EmbeddedStory';\nimport FakeIcon from '../../common/FakeIcon';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport MessageText from '../../common/MessageText';\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport TopicChip from '../../common/TopicChip';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\nimport Album from './Album';\nimport AnimatedCustomEmoji from './AnimatedCustomEmoji';\nimport AnimatedEmoji from './AnimatedEmoji';\nimport CommentButton from './CommentButton';\nimport Contact from './Contact';\nimport ContextMenuContainer from './ContextMenuContainer.async';\nimport FactCheck from './FactCheck';\nimport Game from './Game';\nimport Giveaway from './Giveaway';\nimport InlineButtons from './InlineButtons';\nimport Invoice from './Invoice';\nimport InvoiceMediaPreview from './InvoiceMediaPreview';\nimport Location from './Location';\nimport MessageAppendix from './MessageAppendix';\nimport MessageEffect from './MessageEffect';\nimport MessageMeta from './MessageMeta';\nimport MessagePhoneCall from './MessagePhoneCall';\nimport PaidMediaOverlay from './PaidMediaOverlay';\nimport Photo from './Photo';\nimport Poll from './Poll';\nimport Reactions from './reactions/Reactions';\nimport RoundVideo from './RoundVideo';\nimport Sticker from './Sticker';\nimport Story from './Story';\nimport StoryMention from './StoryMention';\nimport TodoList from './TodoList';\nimport Video from './Video';\nimport WebPage from './WebPage';\n\nimport './Message.scss';\n\ntype MessagePositionProperties = {\n  isFirstInGroup: boolean;\n  isLastInGroup: boolean;\n  isFirstInDocumentGroup: boolean;\n  isLastInDocumentGroup: boolean;\n  isLastInList: boolean;\n};\n\ntype OwnProps =\n  {\n    message: ApiMessage;\n    album?: IAlbum;\n    noAvatars?: boolean;\n    withAvatar?: boolean;\n    withSenderName?: boolean;\n    threadId: ThreadId;\n    messageListType: MessageListType;\n    noComments: boolean;\n    noReplies: boolean;\n    appearanceOrder: number;\n    isJustAdded: boolean;\n    memoFirstUnreadIdRef?: { current: number | undefined };\n    getIsMessageListReady?: Signal<boolean>;\n    observeIntersectionForBottom?: ObserveFn;\n    observeIntersectionForLoading?: ObserveFn;\n    observeIntersectionForPlaying?: ObserveFn;\n    onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n  }\n  & MessagePositionProperties;\n\ntype StateProps = {\n  theme: ThemeKey;\n  forceSenderName?: boolean;\n  sender?: ApiPeer;\n  canShowSender: boolean;\n  originSender?: ApiPeer;\n  botSender?: ApiUser;\n  isThreadTop?: boolean;\n  shouldHideReply?: boolean;\n  replyMessage?: ApiMessage;\n  replyMessageSender?: ApiPeer;\n  replyMessageForwardSender?: ApiPeer;\n  replyMessageChat?: ApiChat;\n  isReplyPrivate?: boolean;\n  replyStory?: ApiTypeStory;\n  storySender?: ApiPeer;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  uploadProgress?: number;\n  isInDocumentGroup: boolean;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  focusedQuote?: string;\n  focusedQuoteOffset?: number;\n  noFocusHighlight?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n  isResizingContainer?: boolean;\n  isForwarding?: boolean;\n  isChatWithSelf?: boolean;\n  isRepliesChat?: boolean;\n  isAnonymousForwards?: boolean;\n  isChannel?: boolean;\n  isGroup?: boolean;\n  canReply?: boolean;\n  highlight?: string;\n  animatedEmoji?: string;\n  animatedCustomEmoji?: string;\n  hasActiveReactions?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  isGroupSelected?: boolean;\n  isDownloading?: boolean;\n  threadId?: ThreadId;\n  isPinnedList?: boolean;\n  isPinned?: boolean;\n  canAutoLoadMedia?: boolean;\n  canAutoPlayMedia?: boolean;\n  hasLinkedChat?: boolean;\n  shouldLoopStickers?: boolean;\n  autoLoadFileMaxSizeMb: number;\n  repliesThreadInfo?: ApiThreadInfo;\n  reactionMessage?: ApiMessage;\n  availableReactions?: ApiAvailableReaction[];\n  defaultReaction?: ApiReaction;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  hasUnreadReaction?: boolean;\n  isTranscribing?: boolean;\n  transcribedText?: string;\n  isPremium: boolean;\n  senderAdminMember?: ApiChatMember;\n  messageTopic?: ApiTopic;\n  hasTopicChip?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  areTranslationsEnabled?: boolean;\n  shouldDetectChatLanguage?: boolean;\n  requestedTranslationLanguage?: string;\n  requestedChatTranslationLanguage?: string;\n  withAnimatedEffects?: boolean;\n  webPageStory?: ApiTypeStory;\n  isConnected: boolean;\n  isLoadingComments?: boolean;\n  shouldWarnAboutFiles?: boolean;\n  senderBoosts?: number;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  canTranscribeVoice?: boolean;\n  viaBusinessBot?: ApiUser;\n  effect?: ApiAvailableEffect;\n  poll?: ApiPoll;\n  webPage?: ApiWebPage;\n  maxTimestamp?: number;\n  lastPlaybackTimestamp?: number;\n  paidMessageStars?: number;\n  isChatWithUser?: boolean;\n  isAccountFrozen?: boolean;\n  minFutureTime?: number;\n  isMediaNsfw?: boolean;\n  isReplyMediaNsfw?: boolean;\n};\n\ntype MetaPosition =\n  'in-text'\n  | 'standalone'\n  | 'none';\ntype ReactionsPosition =\n  'inside'\n  | 'outside'\n  | 'none';\ntype QuickReactionPosition =\n  'in-content'\n  | 'in-meta';\n\nconst NBSP = '\\u00A0';\nconst QUICK_REACTION_SIZE = 1.75 * REM;\nconst EXTRA_SPACE_FOR_REACTIONS = 2.25 * REM;\nconst MAX_REASON_LENGTH = 200;\n\nconst Message = ({\n  message,\n  observeIntersectionForBottom,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  album,\n  noAvatars,\n  withAvatar,\n  withSenderName,\n  noComments,\n  noReplies,\n  appearanceOrder,\n  isJustAdded,\n  isFirstInGroup,\n  isPremium,\n  isLastInGroup,\n  isFirstInDocumentGroup,\n  isLastInDocumentGroup,\n  isTranscribing,\n  transcribedText,\n  isLastInList,\n  theme,\n  forceSenderName,\n  sender,\n  canShowSender,\n  originSender,\n  botSender,\n  isThreadTop,\n  shouldHideReply,\n  replyMessage,\n  replyMessageSender,\n  replyMessageForwardSender,\n  replyMessageChat,\n  replyStory,\n  isReplyPrivate,\n  storySender,\n  outgoingStatus,\n  uploadProgress,\n  isInDocumentGroup,\n  isLoadingComments,\n  isProtected,\n  isChatProtected,\n  isFocused,\n  focusDirection,\n  focusedQuote,\n  focusedQuoteOffset,\n  noFocusHighlight,\n  scrollTargetPosition,\n  isResizingContainer,\n  isForwarding,\n  isChatWithSelf,\n  isRepliesChat,\n  isAnonymousForwards,\n  isChannel,\n  isGroup,\n  canReply,\n  highlight,\n  animatedEmoji,\n  animatedCustomEmoji,\n  hasActiveReactions,\n  hasLinkedChat,\n  isInSelectMode,\n  isSelected,\n  isGroupSelected,\n  threadId,\n  reactionMessage,\n  availableReactions,\n  defaultReaction,\n  activeEmojiInteractions,\n  messageListType,\n  isPinnedList,\n  isPinned,\n  isDownloading,\n  canAutoLoadMedia,\n  canAutoPlayMedia,\n  shouldLoopStickers,\n  autoLoadFileMaxSizeMb,\n  repliesThreadInfo,\n  hasUnreadReaction,\n  memoFirstUnreadIdRef,\n  senderAdminMember,\n  messageTopic,\n  hasTopicChip,\n  chatTranslations,\n  areTranslationsEnabled,\n  shouldDetectChatLanguage,\n  requestedTranslationLanguage,\n  requestedChatTranslationLanguage,\n  withAnimatedEffects,\n  webPageStory,\n  isConnected,\n  getIsMessageListReady,\n  shouldWarnAboutFiles,\n  senderBoosts,\n  tags,\n  canTranscribeVoice,\n  viaBusinessBot,\n  effect,\n  poll,\n  maxTimestamp,\n  lastPlaybackTimestamp,\n  isMediaNsfw,\n  isReplyMediaNsfw,\n  paidMessageStars,\n  isChatWithUser,\n  isAccountFrozen,\n  minFutureTime,\n  webPage,\n  onIntersectPinnedMessage,\n}: OwnProps & StateProps) => {\n  const {\n    toggleMessageSelection,\n    clickBotInlineButton,\n    clickSuggestedMessageButton,\n    rejectSuggestedPost,\n    openSuggestedPostApprovalModal,\n    disableContextMenuHint,\n    animateUnreadReaction,\n    focusLastMessage,\n    markMentionsRead,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const bottomMarkerRef = useRef<HTMLDivElement>();\n  const quickReactionRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [isTranscriptionHidden, setTranscriptionHidden] = useState(false);\n  const [isPlayingSnapAnimation, setIsPlayingSnapAnimation] = useState(false);\n  const [isPlayingDeleteAnimation, setIsPlayingDeleteAnimation] = useState(false);\n  const [shouldPlayEffect, requestEffect, hideEffect] = useFlag();\n  const [isDeclineDialogOpen, openDeclineDialog, closeDeclineDialog] = useFlag();\n  const [declineReason, setDeclineReason] = useState('');\n  const { isMobile, isTouchScreen } = useAppLayout();\n\n  useOnIntersect(bottomMarkerRef, observeIntersectionForBottom);\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    contextMenuTarget,\n    handleBeforeContextMenu,\n    handleContextMenu: onContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(\n    ref,\n    (isTouchScreen && isInSelectMode) || isAccountFrozen,\n    !IS_TAURI,\n    IS_ANDROID,\n    getIsMessageListReady,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      disableContextMenuHint();\n    }\n  }, [isContextMenuOpen, disableContextMenuHint]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * MESSAGE_APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  useShowTransition({\n    ref,\n    isOpen: isShown || isJustAdded,\n    noMountTransition: noAppearanceAnimation && !isJustAdded,\n    className: false,\n  });\n\n  const {\n    id: messageId, chatId, forwardInfo, viaBotId, isTranscriptionError, factCheck,\n  } = message;\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      const id = album ? album.mainMessage.id : messageId;\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [id] });\n    }\n  });\n\n  const isLocal = isMessageLocal(message);\n  const isOwn = isOwnMessage(message);\n  const isScheduled = messageListType === 'scheduled' || message.isScheduled;\n  const hasMessageReply = isReplyToMessage(message) && !shouldHideReply;\n\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo, audio,\n    voice, document, sticker, contact,\n    invoice, location,\n    action, game, storyData, giveaway,\n    giveawayResults, todo,\n  } = getMessageContent(message);\n\n  const messageReplyInfo = getMessageReplyInfo(message);\n  const storyReplyInfo = getStoryReplyInfo(message);\n\n  const withVoiceTranscription = Boolean(!isTranscriptionHidden && (isTranscriptionError || transcribedText));\n\n  const hasStoryReply = Boolean(storyReplyInfo);\n  const hasThread = Boolean(repliesThreadInfo) && messageListType === 'thread';\n  const isCustomShape = !withVoiceTranscription && getMessageCustomShape(message);\n  const hasAnimatedEmoji = isCustomShape && (animatedEmoji || animatedCustomEmoji);\n  const hasReactions = reactionMessage?.reactions && !areReactionsEmpty(reactionMessage.reactions);\n  const asForwarded = (\n    forwardInfo\n    && (!isChatWithSelf || isScheduled)\n    && !isRepliesChat\n    && !forwardInfo.isLinkedChannelPost\n    && !isAnonymousForwards\n    && !botSender\n  ) || Boolean(storyData && !storyData.isMention);\n  const canShowSenderBoosts = Boolean(senderBoosts) && !asForwarded && isFirstInGroup;\n  const isStoryMention = storyData?.isMention;\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isAlbum = Boolean(album)\n    && (\n      (album.isPaidMedia && paidMedia!.extendedMedia.length > 1)\n      || album.messages.length > 1\n    ) && !album.messages.some((msg) => Object.keys(msg.content).length === 0);\n  const isInDocumentGroupNotFirst = isInDocumentGroup && !isFirstInDocumentGroup;\n  const isInDocumentGroupNotLast = isInDocumentGroup && !isLastInDocumentGroup;\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n  const canShowActionButton = (\n    !(isContextMenuShown || isInSelectMode || isForwarding)\n    && !isInDocumentGroupNotLast\n    && !isStoryMention\n  );\n  const canForward = isChannel && !isScheduled && message.isForwardingAllowed\n    && !isChatProtected;\n  const canFocus = Boolean(isPinnedList\n    || (forwardInfo\n      && (forwardInfo.isChannelPost || isChatWithSelf || isRepliesChat || isAnonymousForwards)\n      && forwardInfo.fromMessageId\n    ));\n\n  const hasFactCheck = Boolean(factCheck?.text);\n\n  const hasForwardedCustomShape = asForwarded && isCustomShape;\n  const hasSubheader = hasTopicChip || hasMessageReply || hasStoryReply || hasForwardedCustomShape;\n\n  const selectMessage = useLastCallback((e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => {\n    if (isAccountFrozen) return;\n    toggleMessageSelection({\n      messageId,\n      groupedId,\n      ...(e?.shiftKey && { withShift: true }),\n      ...(isAlbum && { childMessageIds: album.messages.map(({ id }) => id) }),\n    });\n  });\n\n  const messageSender = canShowSender ? sender : undefined;\n\n  const shouldPreferOriginSender = forwardInfo\n    && (isChatWithSelf || isRepliesChat || isAnonymousForwards || !messageSender);\n  const avatarPeer = shouldPreferOriginSender ? originSender : messageSender;\n\n  const messageColorPeer = asForwarded ? originSender : sender;\n  const noUserColors = isOwn && !isCustomShape;\n\n  const senderPeer = (forwardInfo || storyData) ? originSender : messageSender;\n  const hasTtl = hasMessageTtl(message);\n\n  const {\n    handleMouseDown,\n    handleClick,\n    handleContextMenu,\n    handleDoubleClick,\n    handleContentDoubleClick,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  } = useOuterHandlers(\n    selectMessage,\n    ref,\n    messageId,\n    Boolean(isInSelectMode),\n    Boolean(canReply),\n    Boolean(isProtected),\n    onContextMenu,\n    handleBeforeContextMenu,\n    chatId,\n    isContextMenuShown,\n    quickReactionRef,\n    isInDocumentGroupNotLast,\n    getIsMessageListReady,\n  );\n\n  const {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleMediaClick,\n    handleDocumentClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll,\n    handleTopicChipClick,\n    handleStoryClick,\n  } = useInnerHandlers({\n    lang: oldLang,\n    selectMessage,\n    message,\n    webPage,\n    chatId,\n    threadId,\n    isInDocumentGroup,\n    asForwarded,\n    isScheduled,\n    album,\n    avatarPeer,\n    senderPeer,\n    botSender,\n    messageTopic,\n    isTranslatingChat: Boolean(requestedChatTranslationLanguage),\n    story: replyStory && 'content' in replyStory ? replyStory : undefined,\n    isReplyPrivate,\n    isRepliesChat,\n    isSavedMessages: isChatWithSelf,\n    lastPlaybackTimestamp,\n  });\n\n  const handleEffectClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    requestEffect();\n  });\n\n  useEffect(() => {\n    if (!isLastInList) {\n      return;\n    }\n\n    if (withVoiceTranscription && transcribedText) {\n      focusLastMessage();\n    }\n  }, [focusLastMessage, isLastInList, transcribedText, withVoiceTranscription]);\n\n  useEffect(() => {\n    const element = ref.current;\n    const isPartialAlbumDelete = message.isInAlbum && album?.messages.some((msg) => !msg.isDeleting);\n    if (message.isDeleting && element && !isPartialAlbumDelete) {\n      if (animateSnap(element)) {\n        setIsPlayingSnapAnimation(true);\n      } else {\n        setIsPlayingDeleteAnimation(true);\n      }\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- Only start animation on `isDeleting` change\n  }, [message.isDeleting]);\n\n  const textMessage = album?.hasMultipleCaptions ? undefined : (album?.captionMessage || message);\n  const hasTextContent = textMessage && hasMessageText(textMessage);\n  const hasText = hasTextContent || hasFactCheck;\n\n  const containerClassName = buildClassName(\n    'Message message-list-item',\n    isFirstInGroup && 'first-in-group',\n    isProtected && 'hide-on-print',\n    isProtected && !hasTextContent ? 'is-protected' : 'allow-selection',\n    isLastInGroup && 'last-in-group',\n    isFirstInDocumentGroup && 'first-in-document-group',\n    isLastInDocumentGroup && 'last-in-document-group',\n    isLastInList && 'last-in-list',\n    isOwn && 'own',\n    Boolean(message.viewsCount) && 'has-views',\n    message.isEdited && 'was-edited',\n    hasMessageReply && 'has-reply',\n    isContextMenuOpen && 'has-menu-open',\n    isFocused && !noFocusHighlight && 'focused',\n    isForwarding && 'is-forwarding',\n    isPlayingDeleteAnimation && 'is-deleting',\n    isPlayingSnapAnimation && 'is-dissolving',\n    isInDocumentGroup && 'is-in-document-group',\n    isAlbum && 'is-album',\n    message.hasUnreadMention && 'has-unread-mention',\n    isSelected && 'is-selected',\n    isInSelectMode && 'is-in-selection-mode',\n    isThreadTop && !withAvatar && 'is-thread-top',\n    Boolean(message.inlineButtons) && 'has-inline-buttons',\n    isSwiped && 'is-swiped',\n    isJustAdded && 'is-just-added',\n    (hasActiveReactions || shouldPlayEffect) && 'has-active-effect',\n    isStoryMention && 'is-story-mention',\n  );\n\n  const text = textMessage && getMessageContent(textMessage).text;\n  const isInvertedMedia = Boolean(message.isInvertedMedia);\n\n  const { replyToMsgId, replyToPeerId } = messageReplyInfo || {};\n  const { peerId: storyReplyPeerId, storyId: storyReplyId } = storyReplyInfo || {};\n\n  useEffect(() => {\n    if ((sticker?.hasEffect || effect) && ((\n      memoFirstUnreadIdRef?.current && messageId >= memoFirstUnreadIdRef.current\n    ) || isLocal)) {\n      requestEffect();\n    }\n  }, [effect, isLocal, memoFirstUnreadIdRef, messageId, sticker?.hasEffect]);\n\n  const detectedLanguage = useTextLanguage(\n    text?.text,\n    !(areTranslationsEnabled && shouldDetectChatLanguage),\n    getIsMessageListReady,\n  );\n  useDetectChatLanguage(message, detectedLanguage, !shouldDetectChatLanguage, getIsMessageListReady);\n\n  const shouldTranslate = isMessageTranslatable(message, !requestedChatTranslationLanguage);\n  const { isPending: isTranslationPending, translatedText } = useMessageTranslation(\n    chatTranslations, chatId, shouldTranslate ? messageId : undefined, requestedTranslationLanguage,\n  );\n  // Used to display previous result while new one is loading\n  const previousTranslatedText = usePreviousDeprecated(translatedText, Boolean(shouldTranslate));\n\n  const currentTranslatedText = translatedText || previousTranslatedText;\n\n  const phoneCall = action?.type === 'phoneCall' ? action : undefined;\n\n  const commentsThreadInfo = repliesThreadInfo?.isCommentsInfo ? repliesThreadInfo : undefined;\n  const isLocalWithCommentButton = hasLinkedChat && isChannel && isLocal;\n\n  const isMediaWithCommentButton = (commentsThreadInfo || isLocalWithCommentButton)\n    && !isInDocumentGroupNotLast\n    && messageListType === 'thread'\n    && !noComments;\n  const withCommentButton = (commentsThreadInfo || isLocalWithCommentButton)\n    && !isInDocumentGroupNotLast && messageListType === 'thread'\n    && !noComments;\n  const withQuickReactionButton = !isTouchScreen && !phoneCall && !isInSelectMode && defaultReaction\n    && !isInDocumentGroupNotLast && !isStoryMention && !hasTtl && !isAccountFrozen;\n\n  const hasOutsideReactions = !withVoiceTranscription && hasReactions\n    && (isCustomShape || (\n      (photo || video || storyData || (location?.mediaType === 'geo')) && (!hasText || isInvertedMedia))\n    );\n\n  const contentClassName = buildContentClassName(message, album, {\n    poll,\n    webPage,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread: hasThread && !noComments,\n    forceSenderName,\n    hasCommentCounter: hasThread && repliesThreadInfo.messagesCount > 0,\n    hasBottomCommentButton: withCommentButton && !isCustomShape,\n    hasActionButton: canForward || canFocus || (withCommentButton && isCustomShape),\n    hasReactions,\n    isGeoLiveActive: location?.mediaType === 'geoLive' && !isGeoLiveExpired(message),\n    withVoiceTranscription,\n    peerColorClass: getPeerColorClass(messageColorPeer, noUserColors, true),\n    hasOutsideReactions,\n  });\n\n  const withAppendix = contentClassName.includes('has-appendix');\n  const emojiSize = getCustomEmojiSize(text?.emojiOnlyCount);\n\n  const paidMessageStarsInMeta = !isChatWithUser\n    ? (isAlbum && paidMessageStars ? album.messages.length * paidMessageStars : paidMessageStars)\n    : undefined;\n\n  let metaPosition!: MetaPosition;\n  if (phoneCall) {\n    metaPosition = 'none';\n  } else if (isInDocumentGroupNotLast) {\n    metaPosition = 'none';\n  } else if (hasText && !webPage && !emojiSize && !isInvertedMedia) {\n    metaPosition = 'in-text';\n  } else if (isInvertedMedia && !emojiSize && (hasFactCheck || webPage)) {\n    metaPosition = 'in-text';\n  } else {\n    metaPosition = 'standalone';\n  }\n\n  let reactionsPosition!: ReactionsPosition;\n  if (hasReactions) {\n    if (hasOutsideReactions) {\n      reactionsPosition = 'outside';\n    } else if (asForwarded) {\n      metaPosition = 'standalone';\n      reactionsPosition = 'inside';\n    } else {\n      reactionsPosition = 'inside';\n    }\n  } else {\n    reactionsPosition = 'none';\n  }\n\n  const quickReactionPosition: QuickReactionPosition = isCustomShape ? 'in-meta' : 'in-content';\n\n  useEnsureMessage(\n    replyToPeerId || chatId,\n    replyToMsgId,\n    replyMessage,\n    message.id,\n    shouldHideReply || isReplyPrivate,\n  );\n\n  useEnsureStory(\n    storyReplyPeerId || chatId,\n    storyReplyId,\n    replyStory,\n  );\n\n  useFocusMessage({\n    elementRef: ref,\n    chatId,\n    isFocused,\n    focusDirection,\n    noFocusHighlight,\n    isResizingContainer,\n    isJustAdded,\n    isQuote: Boolean(focusedQuote),\n    scrollTargetPosition,\n  });\n\n  const viaBusinessBotTitle = viaBusinessBot ? getPeerFullTitle(oldLang, viaBusinessBot) : undefined;\n\n  const canShowPostAuthor = !message.senderId;\n  const signature = viaBusinessBotTitle || (canShowPostAuthor && message.postAuthorTitle)\n    || ((asForwarded || isChatWithSelf) && forwardInfo?.postAuthorTitle)\n    || undefined;\n\n  useMessageResizeObserver(ref, isLastInList);\n\n  useEffect(() => {\n    const bottomMarker = bottomMarkerRef.current;\n    if (!bottomMarker || !isElementInViewport(bottomMarker)) return;\n\n    if (hasUnreadReaction) {\n      animateUnreadReaction({ messageIds: [messageId] });\n    }\n\n    let unreadMentionIds: number[] = [];\n    if (message.hasUnreadMention) {\n      unreadMentionIds = [messageId];\n    }\n\n    if (album) {\n      unreadMentionIds = album.messages.filter((msg) => msg.hasUnreadMention).map((msg) => msg.id);\n    }\n\n    if (unreadMentionIds.length) {\n      markMentionsRead({ chatId, messageIds: unreadMentionIds });\n    }\n  }, [hasUnreadReaction, album, chatId, messageId, animateUnreadReaction, message.hasUnreadMention]);\n\n  const albumLayout = useMemo(() => {\n    return isAlbum\n      ? calculateAlbumLayout(isOwn, Boolean(noAvatars), album, isMobile)\n      : undefined;\n  }, [isAlbum, isOwn, noAvatars, album, isMobile]);\n\n  const extraPadding = asForwarded && !isCustomShape ? 28 : 0;\n\n  const sizeCalculations = useMemo(() => {\n    let calculatedWidth;\n    let contentWidth: number | undefined;\n    let style = '';\n    let reactionsMaxWidth;\n\n    if (!isAlbum && (photo || video || invoice?.extendedMedia)) {\n      let width: number | undefined;\n      if (photo || video) {\n        const media = (photo || video);\n        if (media && !isRoundVideo) {\n          width = calculateMediaDimensions({\n            media,\n            isOwn,\n            asForwarded,\n            noAvatars,\n            isMobile,\n          }).width;\n        }\n      } else if (invoice?.extendedMedia && (\n        invoice.extendedMedia.width && invoice.extendedMedia.height\n      )) {\n        const { width: previewWidth, height: previewHeight } = invoice.extendedMedia;\n        width = calculateDimensionsForMessageMedia({\n          width: previewWidth,\n          height: previewHeight,\n          fromOwnMessage: isOwn,\n          asForwarded,\n          noAvatars,\n          isMobile,\n        }).width;\n      }\n\n      if (width) {\n        if (width < getMinMediaWidthWithText(isMobile)) {\n          contentWidth = width;\n        }\n        calculatedWidth = Math.max(getMinMediaWidth(text?.text, isMobile, isMediaWithCommentButton), width);\n      }\n    } else if (albumLayout) {\n      const minWidth = getMinMediaWidth(text?.text, isMobile, isMediaWithCommentButton);\n      calculatedWidth = Math.max(minWidth, albumLayout.containerStyle.width);\n    }\n\n    if (calculatedWidth) {\n      style = `width: ${calculatedWidth}px`;\n      reactionsMaxWidth = calculatedWidth + EXTRA_SPACE_FOR_REACTIONS;\n    } else if (sticker && !hasSubheader) {\n      const { width } = getStickerDimensions(sticker, isMobile);\n      style = `width: ${width + extraPadding}px`;\n      reactionsMaxWidth = width + EXTRA_SPACE_FOR_REACTIONS;\n    }\n\n    return {\n      contentWidth, style, reactionsMaxWidth,\n    };\n  }, [\n    albumLayout, asForwarded, extraPadding, hasSubheader, invoice?.extendedMedia, isAlbum, isMediaWithCommentButton,\n    isMobile, isOwn, noAvatars, photo, sticker, text?.text, video, isRoundVideo,\n  ]);\n\n  const {\n    contentWidth, style, reactionsMaxWidth,\n  } = sizeCalculations;\n\n  function renderMessageText(isForAnimation?: boolean) {\n    if (!textMessage) return undefined;\n    return (\n      <MessageText\n        messageOrStory={textMessage}\n        translatedText={requestedTranslationLanguage ? currentTranslatedText : undefined}\n        isForAnimation={isForAnimation}\n        focusedQuote={focusedQuote}\n        focusedQuoteOffset={focusedQuoteOffset}\n        emojiSize={emojiSize}\n        highlight={highlight}\n        isProtected={isProtected}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        withTranslucentThumbs={isCustomShape}\n        isInSelectMode={isInSelectMode}\n        canBeEmpty={hasFactCheck}\n        maxTimestamp={maxTimestamp}\n        threadId={threadId}\n      />\n    );\n  }\n\n  const renderQuickReactionButton = useCallback(() => {\n    if (!defaultReaction) return undefined;\n\n    return (\n      <div\n        className={buildClassName(\n          'quick-reaction',\n          'no-selection',\n          isQuickReactionVisible && !hasActiveReactions && 'visible',\n        )}\n        onClick={handleSendQuickReaction}\n        ref={quickReactionRef}\n      >\n        <ReactionStaticEmoji\n          reaction={defaultReaction}\n          size={QUICK_REACTION_SIZE}\n          availableReactions={availableReactions}\n          observeIntersection={observeIntersectionForPlaying}\n        />\n      </div>\n    );\n  }, [\n    hasActiveReactions, availableReactions, defaultReaction, handleSendQuickReaction, isQuickReactionVisible,\n    observeIntersectionForPlaying,\n  ]);\n\n  function renderReactionsAndMeta() {\n    const meta = (\n      <MessageMeta\n        message={message}\n        isPinned={isPinned}\n        withFullDate={isChatWithSelf && !isOwn}\n        noReplies={noReplies}\n        repliesThreadInfo={repliesThreadInfo}\n        outgoingStatus={outgoingStatus}\n        signature={signature}\n        withReactionOffset={reactionsPosition === 'inside'}\n        renderQuickReactionButton={\n          withQuickReactionButton && quickReactionPosition === 'in-meta' ? renderQuickReactionButton : undefined\n        }\n        availableReactions={availableReactions}\n        isTranslated={Boolean(requestedTranslationLanguage ? currentTranslatedText : undefined)}\n        effectEmoji={effect?.emoticon}\n        onClick={handleMetaClick}\n        onEffectClick={handleEffectClick}\n        onTranslationClick={handleTranslationClick}\n        onOpenThread={handleOpenThread}\n        paidMessageStars={paidMessageStarsInMeta}\n      />\n    );\n\n    if (reactionsPosition !== 'inside') {\n      return meta;\n    }\n\n    return (\n      <Reactions\n        message={reactionMessage!}\n        threadId={threadId}\n        metaChildren={meta}\n        observeIntersection={observeIntersectionForPlaying}\n        noRecentReactors={isChannel}\n        tags={tags}\n        isCurrentUserPremium={isPremium}\n        isAccountFrozen={isAccountFrozen}\n      />\n    );\n  }\n\n  function renderContent() {\n    const className = buildClassName(\n      'content-inner',\n      asForwarded && 'forwarded-message',\n      hasForwardedCustomShape && 'forwarded-custom-shape',\n      hasSubheader && 'with-subheader',\n    );\n    const hasCustomAppendix = isLastInGroup\n      && (!hasText || (isInvertedMedia && !hasFactCheck && reactionsPosition !== 'inside')) && !withCommentButton;\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n    const shouldReadMedia = !hasTtl || !isOwn || isChatWithSelf;\n\n    return (\n      <div className={className} onDoubleClick={handleContentDoubleClick} dir=\"auto\">\n        {!asForwarded && shouldRenderSenderName() && renderSenderName()}\n        {hasSubheader && (\n          <div className=\"message-subheader\">\n            {hasTopicChip && (\n              <TopicChip\n                topic={messageTopic}\n                onClick={handleTopicChipClick}\n                className=\"message-topic\"\n              />\n            )}\n            {hasForwardedCustomShape && (\n              <div className=\"forward-custom-shape-subheader\">\n                <div className=\"message-title\">\n                  {renderForwardTitle()}\n                </div>\n                {renderSenderName(true, true)}\n              </div>\n            )}\n            {hasMessageReply && (\n              <EmbeddedMessage\n                message={replyMessage}\n                replyInfo={messageReplyInfo}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                sender={replyMessageSender}\n                senderChat={replyMessageChat}\n                forwardSender={replyMessageForwardSender}\n                chatTranslations={chatTranslations}\n                isMediaNsfw={isReplyMediaNsfw}\n                requestedChatTranslationLanguage={requestedChatTranslationLanguage}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                observeIntersectionForPlaying={observeIntersectionForPlaying}\n                onClick={handleReplyClick}\n              />\n            )}\n            {hasStoryReply && (\n              <EmbeddedStory\n                story={replyStory}\n                sender={storySender}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                onClick={handleStoryClick}\n              />\n            )}\n          </div>\n        )}\n        {sticker && observeIntersectionForLoading && observeIntersectionForPlaying && (\n          <Sticker\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            shouldLoop={shouldLoopStickers}\n            shouldPlayEffect={shouldPlayEffect}\n            withEffect={withAnimatedEffects}\n            isMediaNsfw={isMediaNsfw}\n            onStopEffect={hideEffect}\n          />\n        )}\n        {hasAnimatedEmoji && animatedCustomEmoji && (\n          <AnimatedCustomEmoji\n            customEmojiId={animatedCustomEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {hasAnimatedEmoji && animatedEmoji && (\n          <AnimatedEmoji\n            emoji={animatedEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {withAnimatedEffects && effect && !isLocal && (\n          <MessageEffect\n            shouldPlay={shouldPlayEffect}\n            messageId={message.id}\n            isMirrored={!message.isOutgoing}\n            effect={effect}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onStop={hideEffect}\n          />\n        )}\n        {phoneCall && (\n          <MessagePhoneCall\n            message={message}\n            phoneCall={phoneCall}\n            chatId={chatId}\n          />\n        )}\n        {!isAlbum && isRoundVideo && !withVoiceTranscription && (\n          <RoundVideo\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            isDownloading={isDownloading}\n            onReadMedia={shouldReadMedia ? handleReadMedia : undefined}\n            onHideTranscription={setTranscriptionHidden}\n            isTranscriptionError={isTranscriptionError}\n            isTranscribed={Boolean(transcribedText)}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribing={isTranscribing}\n          />\n        )}\n        {(audio || voice || withVoiceTranscription) && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            noAvatars={noAvatars}\n            onPlay={handleAudioPlay}\n            onReadMedia={voice && shouldReadMedia ? handleReadMedia : undefined}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            isTranscribing={isTranscribing}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribed={Boolean(transcribedText)}\n            isTranscriptionError={isTranscriptionError}\n            canDownload={!isProtected}\n            onHideTranscription={setTranscriptionHidden}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n          />\n        )}\n        {document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            onMediaClick={handleDocumentClick}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            shouldWarnAboutFiles={shouldWarnAboutFiles}\n          />\n        )}\n        {storyData && !isStoryMention && (\n          <Story\n            message={message}\n            isProtected={isProtected}\n          />\n        )}\n        {isStoryMention && <StoryMention message={message} />}\n        {contact && (\n          <Contact contact={contact} noUserColors={isOwn} />\n        )}\n        {poll && (\n          <Poll message={message} poll={poll} onSendVote={handleVoteSend} />\n        )}\n        {todo && (\n          <TodoList message={message} todoList={todo} />\n        )}\n        {(giveaway || giveawayResults) && (\n          <Giveaway message={message} />\n        )}\n        {game && (\n          <Game\n            message={message}\n            threadId={threadId}\n            canAutoLoadMedia={canAutoLoadMedia}\n          />\n        )}\n        {invoice?.extendedMedia && (\n          <InvoiceMediaPreview\n            message={message}\n            isConnected={isConnected}\n          />\n        )}\n\n        {withVoiceTranscription && (\n          <p\n            className={buildClassName(\n              'transcription',\n              !isTranscriptionHidden && isTranscriptionError && 'transcription-error',\n            )}\n            dir=\"auto\"\n          >\n            {(isTranscriptionError ? oldLang('NoWordsRecognized') : (\n              isTranscribing && transcribedText ? <DotAnimation content={transcribedText} /> : transcribedText\n            ))}\n          </p>\n        )}\n\n        {isInvertedMedia && renderInvertedMediaContent(hasCustomAppendix)}\n\n        {!isInvertedMedia && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {hasText && !hasAnimatedEmoji && (\n              <div className={textContentClass} dir=\"auto\">\n                {renderMessageText()}\n                {isTranslationPending && (\n                  <div className=\"translation-animation\">\n                    <div className=\"text-loading\">\n                      {renderMessageText(true)}\n                    </div>\n                  </div>\n                )}\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {metaPosition === 'in-text' && renderReactionsAndMeta()}\n              </div>\n            )}\n            {renderWebPage()}\n          </>\n        )}\n\n        {invoice && !invoice.extendedMedia && (\n          <Invoice\n            message={message}\n            shouldAffectAppendix={hasCustomAppendix && !hasReactions}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            forcedWidth={contentWidth}\n          />\n        )}\n        {location && (\n          <Location\n            message={message}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            peer={sender}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderInvertedMediaContent(hasCustomAppendix: boolean) {\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n    );\n    const footerClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n\n    const hasMediaAfterText = isAlbum || (!isAlbum && photo) || (!isAlbum && video && !isRoundVideo);\n    const hasContentAfterText = hasMediaAfterText || (!hasAnimatedEmoji && hasFactCheck);\n    const isMetaInText = metaPosition === 'in-text';\n\n    return (\n      <>\n        {renderWebPage()}\n        {hasText && !hasAnimatedEmoji && (\n          <div className={textContentClass} dir=\"auto\">\n            {renderMessageText()}\n            {isTranslationPending && (\n              <div className=\"translation-animation\">\n                <div className=\"text-loading\">\n                  {renderMessageText(true)}\n                </div>\n              </div>\n            )}\n            {!hasContentAfterText && isMetaInText && renderReactionsAndMeta()}\n          </div>\n        )}\n\n        {hasContentAfterText && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {!hasAnimatedEmoji && (\n              <div className={footerClass} dir=\"auto\">\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {isMetaInText && renderReactionsAndMeta()}\n              </div>\n            )}\n          </>\n        )}\n\n      </>\n    );\n  }\n\n  function renderWebPage() {\n    const messageWebPage = getMessageWebPage(message);\n    if (!messageWebPage || !webPage) return undefined;\n    return (\n      <WebPage\n        messageWebPage={messageWebPage}\n        webPage={webPage}\n        message={message}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        noAvatars={noAvatars}\n        canAutoLoad={canAutoLoadMedia}\n        canAutoPlay={canAutoPlayMedia}\n        asForwarded={asForwarded}\n        isDownloading={isDownloading}\n        isProtected={isProtected}\n        theme={theme}\n        story={webPageStory}\n        isConnected={isConnected}\n        lastPlaybackTimestamp={lastPlaybackTimestamp}\n        backgroundEmojiId={messageColorPeer?.color?.backgroundEmojiId}\n        shouldWarnAboutFiles={shouldWarnAboutFiles}\n        autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n        onAudioPlay={handleAudioPlay}\n        onMediaClick={handleMediaClick}\n        onDocumentClick={handleDocumentClick}\n        onCancelMediaTransfer={handleCancelUpload}\n      />\n    );\n  }\n\n  function renderInvertibleMediaContent(hasCustomAppendix: boolean) {\n    const content = (\n      <>\n        {isAlbum && observeIntersectionForLoading && (\n          <Album\n            album={album}\n            albumLayout={albumLayout!}\n            observeIntersection={observeIntersectionForLoading}\n            isOwn={isOwn}\n            isProtected={isProtected}\n            hasCustomAppendix={hasCustomAppendix}\n            onMediaClick={handleAlbumMediaClick}\n          />\n        )}\n        {!isAlbum && photo && (\n          <Photo\n            messageText={text?.text}\n            photo={photo}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            uploadProgress={uploadProgress}\n            shouldAffectAppendix={hasCustomAppendix}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            theme={theme}\n            isMediaNsfw={isMediaNsfw}\n            forcedWidth={contentWidth}\n            onClick={handlePhotoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n        {!isAlbum && video && !isRoundVideo && (\n          <Video\n            video={video}\n            isOwn={isOwn}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            forcedWidth={contentWidth}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            canAutoPlay={canAutoPlayMedia}\n            uploadProgress={uploadProgress}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            isMediaNsfw={isMediaNsfw}\n            lastPlaybackTimestamp={lastPlaybackTimestamp}\n            onClick={handleVideoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n      </>\n    );\n\n    if (paidMedia) {\n      return (\n        <PaidMediaOverlay chatId={chatId} messageId={messageId} paidMedia={paidMedia} isOutgoing={isOwn}>\n          {content}\n        </PaidMediaOverlay>\n      );\n    }\n\n    return content;\n  }\n\n  function shouldRenderSenderName() {\n    const media = photo || video || location || paidMedia;\n    return !(isCustomShape && !viaBotId) && (\n      (withSenderName && (!media || hasTopicChip)) || asForwarded || viaBotId || forceSenderName\n    ) && !isInDocumentGroupNotFirst && !(hasMessageReply && isCustomShape);\n  }\n\n  function renderForwardTitle() {\n    return (\n      <span className=\"forward-title-container\">\n        {asForwarded && (\n          <Icon name={forwardInfo?.hiddenUserName ? 'forward' : 'share-filled'} />\n        )}\n        {asForwarded && (\n          <span className=\"forward-title\">\n            {oldLang('ForwardedFrom')}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  const handleSuggestedMessageButton = useLastCallback((payload: ActionPayloads['clickBotInlineButton']) => {\n    if (payload.button.type !== 'suggestedMessage') return;\n    if (payload.button.buttonType === 'approve') {\n      openSuggestedPostApprovalModal({\n        chatId,\n        messageId: message.id,\n      });\n      return;\n    }\n\n    if (payload.button.buttonType === 'decline') {\n      openDeclineDialog();\n      return;\n    }\n\n    clickSuggestedMessageButton({\n      ...payload,\n      button: payload.button,\n    });\n  });\n\n  const handleDeclineReasonChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setDeclineReason(e.target.value);\n  });\n\n  const handleDeclineConfirm = useLastCallback(() => {\n    rejectSuggestedPost({\n      chatId,\n      messageId: message.id,\n      rejectComment: declineReason.trim() || undefined,\n    });\n    closeDeclineDialog();\n    setDeclineReason('');\n  });\n\n  function renderSenderName(\n    shouldSkipRenderForwardTitle: boolean = false, shouldSkipRenderAdminTitle: boolean = false,\n  ) {\n    let senderTitle;\n    let senderColor;\n    if (senderPeer && !(isCustomShape && viaBotId)) {\n      senderTitle = getPeerFullTitle(oldLang, senderPeer);\n    } else if (forwardInfo?.hiddenUserName) {\n      senderTitle = forwardInfo.hiddenUserName;\n    } else if (storyData && originSender) {\n      senderTitle = getPeerFullTitle(oldLang, originSender);\n    }\n    const senderEmojiStatus = senderPeer && 'emojiStatus' in senderPeer && senderPeer.emojiStatus;\n    const senderIsPremium = senderPeer && 'isPremium' in senderPeer && senderPeer.isPremium;\n\n    const shouldRenderForwardAvatar = asForwarded && senderPeer;\n    const hasBotSenderUsername = botSender?.hasUsername;\n    return (\n      <div className=\"message-title\" dir=\"ltr\">\n        {(senderTitle || asForwarded) ? (\n          <span\n            className={buildClassName(\n              'message-title-name-container',\n              forwardInfo?.hiddenUserName ? 'sender-hidden' : 'interactive',\n              senderColor,\n            )}\n            dir=\"ltr\"\n          >\n            {!shouldSkipRenderForwardTitle && renderForwardTitle()}\n            <span className=\"message-title-name\">\n              {storyData && <Icon name=\"play-story\" />}\n              {shouldRenderForwardAvatar && (\n                <Avatar\n                  className=\"forward-avatar\"\n                  peer={senderPeer}\n                  size=\"micro\"\n                />\n              )}\n              <span\n                className=\"sender-title\"\n                onClick={handleSenderClick}\n              >\n                {senderTitle ? renderText(senderTitle) : (asForwarded ? NBSP : undefined)}\n              </span>\n              {!asForwarded && senderEmojiStatus && (\n                <CustomEmoji\n                  documentId={senderEmojiStatus.documentId}\n                  className=\"no-selection\"\n                  loopLimit={EMOJI_STATUS_LOOP_LIMIT}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                />\n              )}\n              {!asForwarded && !senderEmojiStatus && senderIsPremium && <StarIcon />}\n              {senderPeer?.fakeType && <FakeIcon fakeType={senderPeer.fakeType} />}\n            </span>\n          </span>\n        ) : !botSender ? (\n          NBSP\n        ) : undefined}\n        {botSender?.hasUsername && (\n          <span className=\"interactive\">\n            <span className=\"via\">{oldLang('ViaBot')}</span>\n            <span\n              className=\"sender-title\"\n              onClick={handleViaBotClick}\n            >\n              {renderText(`@${getMainUsername(botSender)}`)}\n            </span>\n          </span>\n        )}\n        <div className=\"title-spacer\" />\n        {!shouldSkipRenderAdminTitle && !hasBotSenderUsername ? (forwardInfo?.isLinkedChannelPost ? (\n          <span className=\"admin-title\" dir=\"auto\">{oldLang('DiscussChannel')}</span>\n        ) : message.postAuthorTitle && isGroup && !asForwarded ? (\n          <span className=\"admin-title\" dir=\"auto\">{message.postAuthorTitle}</span>\n        ) : senderAdminMember && !asForwarded && !viaBotId ? (\n          <span className=\"admin-title\" dir=\"auto\">\n            {senderAdminMember.customTitle || oldLang(\n              senderAdminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin',\n            )}\n          </span>\n        ) : undefined) : undefined}\n        {canShowSenderBoosts && (\n          <span className=\"sender-boosts\" aria-hidden>\n            <Icon name={senderBoosts > 1 ? 'boosts' : 'boost'} />\n            {senderBoosts > 1 ? senderBoosts : undefined}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  const forwardAuthor = isGroup && asForwarded ? message.postAuthorTitle : undefined;\n  const shouldRenderSuggestedPostButtons = message.suggestedPostInfo\n    && !message.isOutgoing && !message.suggestedPostInfo.isAccepted && !message.suggestedPostInfo.isRejected;\n\n  const isSuggestedPostExpired = useMemo(() => {\n    if (!message.suggestedPostInfo?.scheduleDate || !minFutureTime) return false;\n    const now = getServerTime();\n    return message.suggestedPostInfo.scheduleDate <= now + minFutureTime;\n  }, [message.suggestedPostInfo, minFutureTime]);\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={containerClassName}\n      data-message-id={messageId}\n      onCopy={isProtected ? stopEvent : undefined}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n      onDoubleClick={handleDoubleClick}\n      onMouseEnter={isInDocumentGroupNotLast ? handleDocumentGroupMouseEnter : undefined}\n      onMouseMove={withQuickReactionButton ? handleMouseMove : undefined}\n      onMouseLeave={(withQuickReactionButton || isInDocumentGroupNotLast) ? handleMouseLeave : undefined}\n    >\n      <div\n        ref={bottomMarkerRef}\n        className=\"bottom-marker\"\n        data-message-id={messageId}\n        data-last-message-id={album ? album.messages[album.messages.length - 1].id : undefined}\n        data-album-main-id={album ? album.mainMessage.id : undefined}\n        data-has-unread-mention={message.hasUnreadMention || undefined}\n        data-has-unread-reaction={hasUnreadReaction || undefined}\n        data-is-pinned={isPinned || undefined}\n        data-should-update-views={message.viewsCount !== undefined}\n      />\n      {!isInDocumentGroup && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {isLastInDocumentGroup && (\n        <div\n          className={buildClassName(\n            'message-select-control group-select no-selection', isGroupSelected && 'is-selected',\n          )}\n          onClick={handleDocumentGroupSelectAll}\n        >\n          {isGroupSelected && (\n            <Icon name=\"select\" />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName('message-content-wrapper',\n          contentClassName.includes('text') && 'can-select-text',\n          contentClassName.includes('giveaway') && 'giveaway-result-content')}\n      >\n        <div\n          className={contentClassName}\n          style={style}\n          dir=\"auto\"\n        >\n          {asForwarded && !isInDocumentGroupNotFirst && (\n            <>\n              {shouldRenderSenderName() && renderSenderName()}\n              {forwardAuthor && <span className=\"admin-title\" dir=\"auto\">{forwardAuthor}</span>}\n            </>\n          )}\n          {renderContent()}\n          {!isInDocumentGroupNotLast && metaPosition === 'standalone' && !isStoryMention && renderReactionsAndMeta()}\n          {canShowActionButton && (\n            <div className={buildClassName(\n              'message-action-buttons',\n              isLoadingComments && 'message-action-buttons-shown',\n            )}\n            >\n              {withCommentButton && isCustomShape && (\n                <CommentButton\n                  threadInfo={commentsThreadInfo}\n                  disabled={noComments || !commentsThreadInfo}\n                  isLoading={isLoadingComments}\n                  isCustomShape\n                  asActionButton\n                />\n              )}\n              {canForward && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel={oldLang('lng_context_forward_msg')}\n                  onClick={isLastInDocumentGroup ? handleGroupForward : handleForward}\n                >\n                  <Icon name=\"share-filled\" />\n                </Button>\n              )}\n              {canFocus && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel={lang('FocusMessage')}\n                  onClick={isPinnedList ? handleFocus : handleFocusForwarded}\n                >\n                  <Icon name=\"arrow-right\" />\n                </Button>\n              )}\n            </div>\n          )}\n          {withCommentButton && !isCustomShape && (\n            <CommentButton\n              threadInfo={commentsThreadInfo}\n              disabled={noComments || !commentsThreadInfo}\n              isLoading={isLoadingComments}\n            />\n          )}\n          {withAppendix && <MessageAppendix isOwn={isOwn} />}\n          {withQuickReactionButton && quickReactionPosition === 'in-content' && renderQuickReactionButton()}\n        </div>\n        {message.inlineButtons && (\n          <InlineButtons message={message} onClick={clickBotInlineButton} />\n        )}\n        {shouldRenderSuggestedPostButtons && (\n          <InlineButtons\n            message={{\n              ...message,\n              inlineButtons: [\n                [\n                  {\n                    type: 'suggestedMessage',\n                    buttonType: 'decline',\n                    text: lang('SuggestedPostDecline'),\n                  },\n                  {\n                    type: 'suggestedMessage',\n                    buttonType: 'approve',\n                    text: lang('SuggestedPostApprove'),\n                    disabled: isSuggestedPostExpired,\n                  },\n                ],\n                [\n                  {\n                    type: 'suggestedMessage',\n                    buttonType: 'suggestChanges',\n                    text: lang('SuggestedPostSuggestChanges'),\n                  },\n                ],\n              ],\n            }}\n            onClick={handleSuggestedMessageButton}\n          />\n        )}\n        {reactionsPosition === 'outside' && !isStoryMention && (\n          <Reactions\n            message={reactionMessage!}\n            threadId={threadId}\n            isOutside\n            isCurrentUserPremium={isPremium}\n            maxWidth={reactionsMaxWidth}\n            observeIntersection={observeIntersectionForPlaying}\n            noRecentReactors={isChannel}\n            tags={tags}\n            isAccountFrozen={isAccountFrozen}\n          />\n        )}\n      </div>\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          targetHref={contextMenuTarget?.matches('a[href]') ? (contextMenuTarget as HTMLAnchorElement).href : undefined}\n          message={message}\n          album={album}\n          messageListType={messageListType}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          repliesThreadInfo={repliesThreadInfo}\n          noReplies={noReplies}\n          detectedLanguage={detectedLanguage}\n        />\n      )}\n      {isDeclineDialogOpen && (\n        <ConfirmDialog\n          isOpen={isDeclineDialogOpen}\n          onClose={closeDeclineDialog}\n          title={lang('SuggestedPostDecline')}\n          confirmLabel={lang('SuggestedPostDecline')}\n          confirmHandler={handleDeclineConfirm}\n          confirmIsDestructive\n        >\n          <div className=\"decline-dialog-question\">\n            {renderText(lang('DeclinePostDialogQuestion', {\n              sender: sender ? getPeerFullTitle(oldLang, sender) : '',\n            }, { withNodes: true, withMarkdown: true }))}\n          </div>\n          <InputText\n            placeholder={lang('DeclineReasonPlaceholder')}\n            value={declineReason}\n            onChange={handleDeclineReasonChange}\n            maxLength={MAX_REASON_LENGTH}\n          />\n        </ConfirmDialog>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): Complete<StateProps> => {\n    const {\n      focusedMessage, forwardMessages, activeReactions, activeEmojiInteractions,\n      loadingThread,\n    } = selectTabState(global);\n    const {\n      message, album, withSenderName, withAvatar, threadId, messageListType, isLastInDocumentGroup, isFirstInGroup,\n    } = ownProps;\n    const {\n      id, chatId, viaBotId, isOutgoing, forwardInfo, transcriptionId, isPinned, viaBusinessBotId, effectId,\n      paidMessageStars,\n    } = message;\n\n    const webPage = selectFullWebPageFromMessage(global, message);\n\n    const { shouldWarnAboutFiles } = selectSharedSettings(global);\n    const isChatWithUser = isUserId(chatId);\n\n    const chat = selectChat(global, chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isSystemBotChat = isSystemBot(chatId);\n    const isAnonymousForwards = isAnonymousForwardsChat(chatId);\n    const isChannel = chat && isChatChannel(chat);\n    const isGroup = chat && isChatGroup(chat);\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const webPageStoryData = webPage?.story;\n    const webPageStory = webPageStoryData\n      ? selectPeerStory(global, webPageStoryData.peerId, webPageStoryData.id)\n      : undefined;\n\n    const isForwarding = forwardMessages.messageIds && forwardMessages.messageIds.includes(id);\n    const forceSenderName = !isChatWithSelf && isAnonymousOwnMessage(message);\n    const canShowSender = withSenderName || withAvatar || forceSenderName;\n    const sender = selectSender(global, message);\n    const originSender = selectForwardedSender(global, message);\n    const botSender = viaBotId ? selectUser(global, viaBotId) : undefined;\n    const senderAdminMember = sender?.id && isGroup\n      ? chatFullInfo?.adminMembersById?.[sender?.id]\n      : undefined;\n\n    const isThreadTop = message.id === threadId;\n\n    const { replyToMsgId, replyToPeerId, replyFrom } = getMessageReplyInfo(message) || {};\n    const { peerId: storyReplyPeerId, storyId: storyReplyId } = getStoryReplyInfo(message) || {};\n\n    const shouldHideReply = replyToMsgId && replyToMsgId === threadId;\n    const replyMessage = selectReplyMessage(global, message);\n    const forwardHeader = forwardInfo || replyFrom;\n    const replyMessageSender = replyMessage ? selectSender(global, replyMessage)\n      : forwardHeader && !isSystemBotChat && !isAnonymousForwards\n        ? selectSenderFromHeader(global, forwardHeader) : undefined;\n    const replyMessageForwardSender = replyMessage && selectForwardedSender(global, replyMessage);\n    const replyMessageChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n    const isReplyPrivate = !isSystemBotChat && !isAnonymousForwards && replyMessageChat\n      && !isChatPublic(replyMessageChat)\n      && (replyMessageChat.isNotJoined || selectIsChatRestricted(global, replyMessageChat.id));\n    const isReplyToTopicStart = replyMessage?.content.action?.type === 'topicCreate';\n    const replyStory = storyReplyId && storyReplyPeerId\n      ? selectPeerStory(global, storyReplyPeerId, storyReplyId)\n      : undefined;\n    const storySender = storyReplyPeerId ? selectPeer(global, storyReplyPeerId) : undefined;\n\n    const uploadProgress = selectUploadProgress(global, message);\n    const isFocused = messageListType === 'thread' && (\n      album\n        ? album.messages.some((m) => selectIsMessageFocused(global, m, threadId))\n        : selectIsMessageFocused(global, message, threadId)\n    );\n\n    const {\n      direction: focusDirection, noHighlight: noFocusHighlight, isResizingContainer,\n      quote: focusedQuote, quoteOffset: focusedQuoteOffset, scrollTargetPosition,\n    } = (isFocused && focusedMessage) || {};\n\n    const middleSearch = selectCurrentMiddleSearch(global);\n    const highlight = middleSearch?.results?.query\n      && `${middleSearch.isHashtag ? '#' : ''}${middleSearch.results.query}`;\n\n    const singleEmoji = getMessageSingleRegularEmoji(message);\n    const animatedEmoji = singleEmoji && selectAnimatedEmoji(global, singleEmoji) ? singleEmoji : undefined;\n    const animatedCustomEmoji = getMessageSingleCustomEmoji(message);\n\n    let isSelected: boolean;\n    if (album?.messages) {\n      isSelected = album.messages.every(({ id: messageId }) => selectIsMessageSelected(global, messageId));\n    } else {\n      isSelected = selectIsMessageSelected(global, id);\n    }\n\n    const canReply = messageListType === 'thread' && selectCanReplyToMessage(global, message, threadId);\n    const activeDownloads = selectActiveDownloads(global);\n    const downloadableMedia = selectMessageDownloadableMedia(global, message);\n    const isDownloading = downloadableMedia && getIsDownloading(activeDownloads, downloadableMedia);\n\n    const repliesThreadInfo = selectThreadInfo(global, chatId, album?.commentsMessage?.id || id);\n\n    const isInDocumentGroup = Boolean(message.groupedId) && !message.isInAlbum;\n    const documentGroupFirstMessageId = isInDocumentGroup\n      ? selectMessageIdsByGroupId(global, chatId, message.groupedId!)![0]\n      : undefined;\n    const reactionMessage = isInDocumentGroup ? (\n      isLastInDocumentGroup ? selectChatMessage(global, chatId, documentGroupFirstMessageId!) : undefined\n    ) : message;\n\n    const hasUnreadReaction = chat?.unreadReactions?.includes(message.id);\n\n    const hasTopicChip = threadId === MAIN_THREAD_ID && chat?.isForum && isFirstInGroup;\n    const messageTopic = hasTopicChip ? selectTopicFromMessage(global, message) : undefined;\n\n    const chatTranslations = selectChatTranslations(global, chatId);\n\n    const requestedTranslationLanguage = selectRequestedMessageTranslationLanguage(global, chatId, message.id);\n    const requestedChatTranslationLanguage = selectRequestedChatTranslationLanguage(global, chatId);\n\n    const areTranslationsEnabled = IS_TRANSLATION_SUPPORTED && global.settings.byKey.canTranslate\n      && !requestedChatTranslationLanguage; // Stop separate language detection if chat translation is requested\n\n    const isConnected = global.connectionState === 'connectionStateReady';\n\n    const hasActiveReactions = Boolean(reactionMessage && activeReactions[getMessageKey(reactionMessage)]?.length);\n\n    const isPremium = selectIsCurrentUserPremium(global);\n    const senderBoosts = sender && selectIsChatWithSelf(global, sender.id)\n      ? (chatFullInfo?.boostsApplied ?? message.senderBoosts) : message.senderBoosts;\n\n    const chatLevel = chat?.boostLevel || 0;\n    const transcribeMinLevel = global.appConfig.groupTranscribeLevelMin;\n    const canTranscribeVoice = isPremium || Boolean(transcribeMinLevel && chatLevel >= transcribeMinLevel);\n\n    const viaBusinessBot = viaBusinessBotId ? selectUser(global, viaBusinessBotId) : undefined;\n\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n\n    const poll = selectPollFromMessage(global, message);\n\n    const maxTimestamp = selectMessageTimestampableDuration(global, message);\n\n    const lastPlaybackTimestamp = selectMessageLastPlaybackTimestamp(global, chatId, message.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const minFutureTime = global.appConfig.starsSuggestedPostFutureMin;\n\n    const isMediaNsfw = selectIsMediaNsfw(global, message);\n    const isReplyMediaNsfw = replyMessage && selectIsMediaNsfw(global, replyMessage);\n\n    return {\n      theme: selectTheme(global),\n      forceSenderName,\n      sender,\n      canShowSender,\n      originSender,\n      botSender,\n      shouldHideReply: shouldHideReply || isReplyToTopicStart,\n      isThreadTop,\n      replyMessage,\n      replyMessageSender,\n      replyMessageForwardSender,\n      replyMessageChat,\n      replyStory,\n      isReplyPrivate,\n      storySender,\n      isInDocumentGroup,\n      isProtected: selectIsMessageProtected(global, message),\n      isChatProtected: selectIsChatProtected(global, chatId),\n      isFocused,\n      isForwarding,\n      reactionMessage,\n      isChatWithSelf,\n      isRepliesChat: isSystemBotChat,\n      isAnonymousForwards,\n      isChannel,\n      isGroup,\n      canReply,\n      highlight,\n      animatedEmoji,\n      animatedCustomEmoji,\n      isInSelectMode: selectIsInSelectMode(global),\n      isSelected,\n      isGroupSelected: (\n        Boolean(message.groupedId)\n        && !message.isInAlbum\n        && selectIsDocumentGroupSelected(global, chatId, message.groupedId)\n      ),\n      threadId,\n      isDownloading,\n      isPinnedList: messageListType === 'pinned',\n      isPinned,\n      canAutoLoadMedia: selectCanAutoLoadMedia(global, message),\n      canAutoPlayMedia: selectCanAutoPlayMedia(global, message),\n      autoLoadFileMaxSizeMb: global.settings.byKey.autoLoadFileMaxSizeMb,\n      shouldLoopStickers: selectShouldLoopStickers(global),\n      repliesThreadInfo,\n      availableReactions: global.reactions.availableReactions,\n      defaultReaction: isMessageLocal(message) || messageListType === 'scheduled'\n        ? undefined : selectDefaultReaction(global, chatId),\n      hasActiveReactions,\n      activeEmojiInteractions,\n      hasUnreadReaction,\n      isTranscribing: transcriptionId !== undefined && global.transcriptions[transcriptionId]?.isPending,\n      transcribedText: transcriptionId !== undefined ? global.transcriptions[transcriptionId]?.text : undefined,\n      isPremium,\n      senderAdminMember,\n      messageTopic,\n      hasTopicChip,\n      chatTranslations,\n      areTranslationsEnabled,\n      shouldDetectChatLanguage: selectShouldDetectChatLanguage(global, chatId),\n      requestedTranslationLanguage,\n      requestedChatTranslationLanguage,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      withAnimatedEffects: selectPerformanceSettingsValue(global, 'stickerEffects'),\n      webPageStory,\n      isConnected,\n      isLoadingComments: repliesThreadInfo?.isCommentsInfo\n        && loadingThread?.loadingChatId === repliesThreadInfo?.originChannelId\n        && loadingThread?.loadingMessageId === repliesThreadInfo?.originMessageId,\n      shouldWarnAboutFiles,\n      outgoingStatus: isOutgoing ? selectOutgoingStatus(global, message, messageListType === 'scheduled') : undefined,\n      uploadProgress: typeof uploadProgress === 'number' ? uploadProgress : undefined,\n      focusDirection: isFocused ? focusDirection : undefined,\n      noFocusHighlight: isFocused ? noFocusHighlight : undefined,\n      isResizingContainer: isFocused ? isResizingContainer : undefined,\n      focusedQuote: isFocused ? focusedQuote : undefined,\n      focusedQuoteOffset: isFocused ? focusedQuoteOffset : undefined,\n      scrollTargetPosition: isFocused ? scrollTargetPosition : undefined,\n      senderBoosts,\n      tags: global.savedReactionTags?.byKey,\n      canTranscribeVoice,\n      viaBusinessBot,\n      minFutureTime,\n      effect,\n      poll,\n      maxTimestamp,\n      lastPlaybackTimestamp,\n      paidMessageStars,\n      isChatWithUser,\n      isAccountFrozen,\n      isMediaNsfw,\n      isReplyMediaNsfw,\n      webPage,\n    };\n  },\n)(Message));\n","import { getActions } from '../../../../global';\n\nimport type { ApiMessage, ApiPeer, ApiStory, ApiTopic, ApiUser, ApiWebPage } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IAlbum, ThreadId } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\nimport { MediaViewerOrigin } from '../../../../types';\n\nimport { getMainUsername, getMessagePhoto, getWebPagePhoto, getWebPageVideo } from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport { tryParseDeepLink } from '../../../../util/deepLinkParser';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useInnerHandlers({\n  lang,\n  selectMessage,\n  message,\n  webPage,\n  chatId,\n  threadId,\n  isInDocumentGroup,\n  asForwarded,\n  isScheduled,\n  album,\n  senderPeer,\n  botSender,\n  messageTopic,\n  isTranslatingChat,\n  story,\n  isReplyPrivate,\n  isRepliesChat,\n  isSavedMessages,\n  lastPlaybackTimestamp,\n}: {\n  lang: OldLangFn;\n  selectMessage: (e: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void;\n  message: ApiMessage;\n  webPage?: ApiWebPage;\n  chatId: string;\n  threadId: ThreadId;\n  isInDocumentGroup: boolean;\n  asForwarded?: boolean;\n  isScheduled?: boolean;\n  album?: IAlbum;\n  avatarPeer?: ApiPeer;\n  senderPeer?: ApiPeer;\n  botSender?: ApiUser;\n  messageTopic?: ApiTopic;\n  isTranslatingChat?: boolean;\n  story?: ApiStory;\n  isReplyPrivate?: boolean;\n  isRepliesChat?: boolean;\n  isSavedMessages?: boolean;\n  lastPlaybackTimestamp?: number;\n}) {\n  const {\n    openChat, openChatWithDraft, showNotification, focusMessage, openMediaViewer, openAudioPlayer,\n    markMessagesRead, cancelUploadMedia, sendPollVote, openForwardMenu,\n    openChatLanguageModal, openThread, openStoryViewer, searchChatMediaMessages,\n  } = getActions();\n\n  const {\n    id: messageId, forwardInfo, groupedId, content: { paidMedia, video },\n  } = message;\n\n  const {\n    replyToMsgId, replyToPeerId, replyToTopId, isQuote, quoteText, quoteOffset,\n  } = getMessageReplyInfo(message) || {};\n\n  const handleSenderClick = useLastCallback(() => {\n    if (!senderPeer) {\n      showNotification({ message: lang('HidAccount') });\n\n      return;\n    }\n\n    if (asForwarded && forwardInfo?.channelPostId) {\n      focusMessage({ chatId: senderPeer.id, messageId: forwardInfo.channelPostId });\n    } else {\n      openChat({ id: senderPeer.id });\n    }\n  });\n\n  const handleViaBotClick = useLastCallback(() => {\n    if (!botSender) {\n      return;\n    }\n\n    openChatWithDraft({\n      chatId,\n      threadId,\n      text: {\n        text: `@${getMainUsername(botSender)} `,\n      },\n    });\n  });\n\n  const handleReplyClick = useLastCallback((): void => {\n    if (!replyToMsgId || isReplyPrivate) {\n      showNotification({\n        message: isQuote ? lang('QuotePrivate') : lang('ReplyPrivate'),\n      });\n      return;\n    }\n\n    if (isRepliesChat && replyToPeerId && replyToTopId) {\n      openThread({\n        isComments: true,\n        originChannelId: replyToPeerId,\n        originMessageId: replyToTopId,\n        focusMessageId: replyToMsgId,\n      });\n      return;\n    }\n\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: isRepliesChat ? replyToTopId : threadId, // Open comments from Replies bot, otherwise, keep current thread\n      messageId: replyToMsgId,\n      replyMessageId: replyToPeerId ? undefined : messageId,\n      noForumTopicPanel: !replyToPeerId, // Open topic panel for cross-chat replies\n      ...(isQuote && { quote: quoteText?.text, quoteOffset }),\n    });\n  });\n\n  const handleDocumentClick = useLastCallback((): void => {\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n    });\n  });\n\n  const openMediaViewerWithPhotoOrVideo = useLastCallback((withDynamicLoading: boolean): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n    if (withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    }\n\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage.url);\n\n    const videoContent = video || getWebPageVideo(webPage);\n    const webpageTimestamp = parsedLink && 'timestamp' in parsedLink ? parsedLink.timestamp : undefined;\n\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n      timestamp: lastPlaybackTimestamp || videoContent?.timestamp || webpageTimestamp,\n      withDynamicLoading,\n    });\n  });\n  const handlePhotoMediaClick = useLastCallback((): void => {\n    const withDynamicLoading = !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n  const handleVideoMediaClick = useLastCallback(() => {\n    const isGif = message.content?.video?.isGif;\n    const withDynamicLoading = !isGif && !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n\n  const handleMediaClick = useLastCallback((): void => {\n    const photo = getMessagePhoto(message) || getWebPagePhoto(webPage);\n    if (photo) {\n      handlePhotoMediaClick();\n    }\n\n    handleVideoMediaClick();\n  });\n\n  const handleAudioPlay = useLastCallback((): void => {\n    openAudioPlayer({ chatId, messageId });\n  });\n\n  const handleAlbumMediaClick = useLastCallback((albumMessageId: number, albumIndex?: number): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n\n    searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId: albumMessageId,\n      mediaIndex: albumIndex,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledAlbum : MediaViewerOrigin.Album,\n      withDynamicLoading: !paidMedia,\n    });\n  });\n\n  const handleReadMedia = useLastCallback((): void => {\n    markMessagesRead({ messageIds: [messageId] });\n  });\n\n  const handleCancelUpload = useLastCallback(() => {\n    cancelUploadMedia({ chatId, messageId });\n  });\n\n  const handleVoteSend = useLastCallback((options: string[]) => {\n    sendPollVote({ chatId, messageId, options });\n  });\n\n  const handleGroupForward = useLastCallback(() => {\n    openForwardMenu({ fromChatId: chatId, groupedId });\n  });\n\n  const handleForward = useLastCallback(() => {\n    if (album && album.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: chatId, messageIds: [messageId] });\n    }\n  });\n\n  const handleFocus = useLastCallback(() => {\n    focusMessage({\n      chatId, threadId: MAIN_THREAD_ID, messageId,\n    });\n  });\n\n  const handleFocusForwarded = useLastCallback(() => {\n    const originalChatId = (isSavedMessages && forwardInfo!.savedFromPeerId) || forwardInfo!.fromChatId!;\n\n    if (isInDocumentGroup) {\n      focusMessage({\n        chatId: originalChatId, groupedId, groupedChatId: chatId, messageId: forwardInfo!.fromMessageId!,\n      });\n      return;\n    }\n\n    if (replyToPeerId && replyToTopId) {\n      if (isRepliesChat) {\n        openThread({\n          isComments: true,\n          originChannelId: replyToPeerId,\n          originMessageId: replyToTopId,\n          focusMessageId: forwardInfo!.fromMessageId!,\n        });\n      } else {\n        focusMessage({\n          chatId: replyToPeerId,\n          threadId: replyToTopId,\n          messageId: forwardInfo!.fromMessageId!,\n        });\n      }\n    } else {\n      focusMessage({\n        chatId: originalChatId, messageId: forwardInfo!.fromMessageId!,\n      });\n    }\n  });\n\n  const selectWithGroupedId = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    selectMessage(e, groupedId);\n  });\n\n  const handleTranslationClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    openChatLanguageModal({ chatId, messageId: !isTranslatingChat ? messageId : undefined });\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n  });\n\n  const handleTopicChipClick = useLastCallback(() => {\n    if (!messageTopic) return;\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: messageTopic.id,\n      messageId,\n    });\n  });\n\n  const handleStoryClick = useLastCallback(() => {\n    if (!story) return;\n    openStoryViewer({\n      peerId: story.peerId,\n      storyId: story.id,\n      isSingleStory: true,\n    });\n  });\n\n  return {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleDocumentClick,\n    handleMediaClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick: selectWithGroupedId,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll: selectWithGroupedId,\n    handleTopicChipClick,\n    handleStoryClick,\n  };\n}\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport { detectLanguage } from '../util/languageDetection';\n\nexport default function useTextLanguage(text?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>) {\n  const [language, setLanguage] = useState<string | undefined>();\n\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    if (text) {\n      detectLanguage(text).then(setLanguage);\n    } else {\n      setLanguage(undefined);\n    }\n  }, [isDisabled, text, getIsReady]);\n\n  return language;\n}\n","import type { ApiMessage, ApiPoll, ApiWebPage } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { EMOJI_SIZES, MESSAGE_CONTENT_CLASS_NAME } from '../../../../config';\nimport { getMessageContent } from '../../../../global/helpers';\nimport getSingularPaidMedia from './getSingularPaidMedia';\n\nexport function buildContentClassName(\n  message: ApiMessage,\n  album?: IAlbum,\n  {\n    poll,\n    webPage,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread,\n    forceSenderName,\n    hasCommentCounter,\n    hasBottomCommentButton,\n    hasActionButton,\n    hasReactions,\n    isGeoLiveActive,\n    withVoiceTranscription,\n    peerColorClass,\n    hasOutsideReactions,\n  }: {\n    poll?: ApiPoll;\n    webPage?: ApiWebPage;\n    hasSubheader?: boolean;\n    isCustomShape?: boolean | number;\n    isLastInGroup?: boolean;\n    asForwarded?: boolean;\n    hasThread?: boolean;\n    forceSenderName?: boolean;\n    hasCommentCounter?: boolean;\n    hasBottomCommentButton?: boolean;\n    hasActionButton?: boolean;\n    hasReactions?: boolean;\n    isGeoLiveActive?: boolean;\n    withVoiceTranscription?: boolean;\n    peerColorClass?: string;\n    hasOutsideReactions?: boolean;\n  } = {},\n) {\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const content = getMessageContent(message);\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo,\n    audio, voice, document, contact, location, invoice, storyData,\n    giveaway, giveawayResults,\n  } = content;\n  const text = album?.hasMultipleCaptions ? undefined : getMessageContent(album?.captionMessage || message).text;\n  const hasFactCheck = Boolean(message.factCheck?.text);\n\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isInvertedMedia = message.isInvertedMedia;\n  const isInvertibleMedia = photo || (video && !isRoundVideo) || album || webPage;\n\n  const classNames = [MESSAGE_CONTENT_CLASS_NAME];\n  const isMedia = storyData || photo || video || location || invoice?.extendedMedia || paidMedia;\n  const hasText = text || location?.mediaType === 'venue' || isGeoLiveActive || hasFactCheck;\n  const isMediaWithNoText = isMedia && !hasText;\n  const hasInlineKeyboard = Boolean(message.inlineButtons);\n  const isViaBot = Boolean(message.viaBotId);\n\n  const hasFooter = (() => {\n    if (isInvertedMedia && isInvertibleMedia) {\n      if (hasReactions && !hasOutsideReactions) return true;\n      if (hasFactCheck) return true;\n      if (webPage && hasText) return true;\n      return false;\n    }\n    return hasText;\n  })();\n\n  if (peerColorClass) {\n    classNames.push(peerColorClass);\n  }\n\n  if (!isMedia && text?.emojiOnlyCount) {\n    classNames.push('emoji-only');\n    if (text.emojiOnlyCount <= EMOJI_SIZES) {\n      classNames.push(`emoji-only-${text.emojiOnlyCount}`);\n    }\n  } else if (hasText) {\n    classNames.push('text');\n  } else {\n    classNames.push('no-text');\n  }\n\n  if (!Object.keys(content).length) {\n    classNames.push('unsupported');\n  }\n\n  if (hasActionButton) {\n    classNames.push('has-action-button');\n  }\n\n  if (isCustomShape) {\n    classNames.push('custom-shape');\n\n    if (isRoundVideo) {\n      classNames.push('round');\n    }\n\n    if (hasCommentCounter) {\n      classNames.push('has-comment-counter');\n    }\n  }\n  if (isMedia && !withVoiceTranscription) {\n    classNames.push('media');\n  } else if (video) {\n    classNames.push('video');\n  } else if (audio) {\n    classNames.push('audio');\n  } else if (voice) {\n    classNames.push('voice');\n    if (withVoiceTranscription) {\n      classNames.push('with-voice-transcription');\n    }\n  } else if (document) {\n    classNames.push('document');\n  } else if (contact) {\n    classNames.push('contact');\n  } else if (poll) {\n    classNames.push('poll');\n  } else if (giveaway || giveawayResults) {\n    classNames.push('giveaway');\n  } else if (webPage?.webpageType === 'full') {\n    classNames.push('web-page');\n\n    if (webPage.photo || webPage.video) {\n      classNames.push('media');\n    }\n\n    if (webPage.document) {\n      classNames.push('document');\n    }\n\n    if (webPage.gift) {\n      classNames.push('gift');\n    }\n  }\n\n  if (invoice && !invoice.extendedMedia) {\n    classNames.push('invoice');\n  }\n\n  if (invoice && invoice.photo) {\n    classNames.push('has-photo');\n  }\n\n  if (storyData) {\n    classNames.push('story');\n  }\n\n  if (asForwarded) {\n    classNames.push('is-forwarded');\n  }\n\n  if (hasSubheader) {\n    classNames.push('has-subheader');\n  }\n\n  if (hasThread) {\n    classNames.push('has-replies');\n  }\n\n  if (hasReactions) {\n    classNames.push('has-reactions');\n  }\n\n  if (hasOutsideReactions) {\n    classNames.push('has-outside-reactions');\n  }\n\n  if (isViaBot) {\n    classNames.push('is-via-bot');\n  }\n\n  if (forceSenderName) {\n    classNames.push('force-sender-name');\n  }\n\n  if (!isCustomShape) {\n    classNames.push('has-shadow');\n\n    if (isMedia && hasThread) {\n      classNames.push('has-background');\n    }\n\n    if (hasSubheader || asForwarded || isViaBot || !isMediaWithNoText\n      || forceSenderName || hasFactCheck || withVoiceTranscription) {\n      classNames.push('has-solid-background');\n    }\n\n    if (hasFactCheck) {\n      classNames.push('has-fact-check');\n    }\n\n    if (isLastInGroup && !hasInlineKeyboard && (photo || !isMediaWithNoText || hasBottomCommentButton)) {\n      classNames.push('has-appendix');\n    }\n  }\n\n  if (isInvertibleMedia && isInvertedMedia) {\n    classNames.push('is-inverted-media');\n  }\n\n  if (hasFooter) {\n    classNames.push('has-footer');\n  } else {\n    classNames.push('no-footer');\n  }\n\n  return classNames.join(' ');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiInputSuggestedPostInfo,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatTranslatedMessages } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { TON_CURRENCY_CODE } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageRoundVideo,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatScheduledDateTime } from '../../../util/dates/dateFormat';\nimport { isUserId } from '../../../util/entities/ids';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { formatStarsAsIcon, formatTonAsIcon } from '../../../util/localization/format';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport useMessageMediaHash from '../../../hooks/media/useMessageMediaHash';\nimport useThumbnail from '../../../hooks/media/useThumbnail';\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  suggestedPostInfo?: ApiInputSuggestedPostInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  composerForwardSenders?: ApiPeer[];\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  isMediaNsfw?: boolean;\n  noCaptions?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  suggestedPostInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  composerForwardSenders,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  isMediaNsfw,\n  noCaptions,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = useMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia)) || isMediaNsfw;\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const senderTitle = sender ? getPeerTitle(oldLang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n\n  const forwardSendersTitle = useMemo(() => {\n    if (!composerForwardSenders) return undefined;\n\n    const peerTitles = composerForwardSenders.map((peer) => getPeerTitle(lang, peer)).filter(Boolean);\n    return lang.conjunction(peerTitles);\n  }, [composerForwardSenders, lang]);\n\n  const senderChatTitle = senderChat ? getPeerTitle(oldLang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getPeerTitle(oldLang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    const isFree = !(suggestedPostInfo?.price?.amount);\n    if (suggestedPostInfo) {\n      if (isFree && !suggestedPostInfo.scheduleDate) {\n        return lang('ComposerEmbeddedMessageSuggestedPostDescription');\n      }\n      const priceText = suggestedPostInfo.price\n        ? (suggestedPostInfo.price.currency === TON_CURRENCY_CODE\n          ? formatTonAsIcon(lang, suggestedPostInfo.price.amount, {\n            className: 'suggested-price-ton-icon',\n            shouldConvertFromNanos: true,\n          })\n          : formatStarsAsIcon(lang, suggestedPostInfo.price.amount, {\n            className: 'suggested-price-star-icon',\n          }))\n        : '';\n      const scheduleText = suggestedPostInfo.scheduleDate\n        ? formatScheduledDateTime(suggestedPostInfo.scheduleDate, lang, oldLang)\n        : '';\n      if (priceText && !scheduleText) {\n        return (\n          <span className=\"suggested-post-price-wrapper\">\n            {\n              lang('TitleSuggestedPostAmountForAnyTime',\n                { amount: priceText },\n                {\n                  withNodes: true,\n                  withMarkdown: true,\n                })\n            }\n          </span>\n        );\n      }\n      return (\n        <span className=\"suggested-post-price-wrapper\">\n          {priceText}\n          {scheduleText ? ` • ${scheduleText}` : ''}\n        </span>\n      );\n    }\n\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        asPreview: true,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    if (noCaptions) {\n      return lang('EmbeddedMessageNoCaption');\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content, {});\n    if (!description) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (suggestedPostInfo && replyInfo) {\n      return lang('TitleSuggestedChanges');\n    }\n\n    if (suggestedPostInfo) {\n      return lang('ComposerEmbeddedMessageSuggestedPostTitle');\n    }\n\n    if (!senderTitle && !forwardSendersTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <span className=\"embedded-sender-wrapper\">\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {!composerForwardSenders && senderTitle\n              && renderText(isReplyToQuote ? oldLang('ReplyToQuote', senderTitle) : senderTitle)}\n            {forwardSendersTitle && renderText(lang('ComposerTitleForwardFrom', {\n              users: forwardSendersTitle,\n            }, {\n              withNodes: true,\n              withMarkdown: true,\n            }))}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderForwardSender() {\n    return forwardSenderTitle && !areSendersSame && (\n      <span className=\"embedded-forward-sender-wrapper\">\n        <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n        <span className=\"forward-sender-title\">\n          {renderText(forwardSenderTitle)}\n        </span>\n      </span>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      peer={sender}\n      emojiIconClassName=\"EmbeddedMessage--background-icons\"\n      ref={ref}\n      shouldReset\n      noUserColors={noUserColors}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n        'no-selection',\n        composerForwardSenders && 'is-input-forward',\n        suggestedPostInfo && 'is-suggested-post',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {renderForwardSender()}\n        </div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressiveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideos) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.target = '_blank';\n  link.rel = 'noopener noreferrer';\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","import { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  const anchorRef = useRef<HTMLDivElement>();\n  const ref = useRef<HTMLDivElement>();\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n"],"names":["Keys","memo","MessageOutgoingStatus","status","_jsx","className","children","Transition","name","activeKey","Icon","withGlobal","global","userId","chat","selectCurrentChat","user","selectUser","contactName","getUserFirstOrLastName","undefined","DeleteMemberModal","isOpen","onClose","deleteChatMember","getActions","lang","useOldLang","handleDeleteChatMember","useCallback","chatId","id","ConfirmDialog","title","textParts","renderText","confirmLabel","confirmHandler","confirmIsDestructive","IGNORE_TAGS","Set","handlers","createCallbackManager","useHotkeys","hotkeys","useEffect","entries","Object","addCallback","e","target","HTMLElement","has","tagName","shouldFireEvent","forEach","hotkey","handler","event","alt","ctrl","meta","mod","shift","key","altKey","ctrlKey","metaKey","shiftKey","pressedKey","Boolean","toLowerCase","code","replace","isExactHotkey","keys","split","map","part","trim","modifiers","includes","reservedKeys","find","parseHotkey","getHotkeyMatcher","document","documentElement","addEventListener","runCallbacks","THROTTLE","RE_ENDS_ON_EMOJI","RegExp","twemojiRegex","source","RE_ENDS_ON_EMOJI_IMG","EMOJI_IMG_REGEX","useCustomEmojiTooltip","isEnabled","getHtml","setHtml","getSelectionRange","inputRef","customEmojis","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","useFlag","extractLastEmojiThrottled","useThrottledResolver","html","collapsed","match","IS_EMOJI_SUPPORTED","htmlBeforeSelection","getHtmlBeforeSelection","current","getLastEmoji","useDerivedSignal","isActive","useDerivedState","hasCustomEmojis","length","lastEmoji","emoji","insertCustomEmoji","useLastCallback","inputEl","regexText","regex","count","newHtml","buildCustomEmojiHtml","repeat","htmlAfterSelection","innerHTML","substring","requestNextMutation","focusEditableElement","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","ConnectorClass","requestStates","Map","requestStatesByCallback","pendingPayloads","pendingTransferables","constructor","onUpdate","channel","destroy","init","args","this","postMessageOnTickEnd","type","request","messageData","transferables","restMessageData","messageId","generateUniqueId","payload","requestState","promise","Promise","resolve","reject","assign","withCallback","callback","pop","set","catch","finally","delete","cancelCallback","progressCallback","isCanceled","get","onMessage","data","payloads","update","error","response","callbackArgs","Error","message","push","postMessagesOnTickEnd","throttleWithTickEnd","postMessage","createConnector","worker","connector","handleMessage","removeEventListener","props","CustomSend","useModuleLoader","Bundles","Extra","LAST_DELTA_COUNT","ACTIVE_SCROLL_RESET_TIMEOUT","NEW_INPUT_DELTA_THRESHOLD","OVERSCROLL_CONTAINER_CLASS","NO_TOUCH_CONTAINER_CLASS","TRANSITION_DURATION","DRAG_TRIGGER_DISTANCE","initialActiveScrollContext","lastDeltas","Array","fill","lastAverageDelta","isStartedAtTop","resetStartTopAt","timeout","useTopOverscroll","containerRef","isOverscrolled","isDisabled","onOverscroll","onReset","getState","setState","useSignal","activeScrollRef","useRef","transitionTimeoutRef","touchStartYRef","triggerOverscroll","clearTimeout","triggerReset","window","setTimeout","scheduleResetActiveScroll","handleWheel","container","defaultPrevented","deltaY","scrollTop","state","activeScroll","isStarting","at","Date","now","slice","currentAverageDelta","reduce","a","b","isNewInput","Math","abs","stopEvent","handleTouchStart","touches","clientY","handleTouchMove","startY","handleTouchEnd","requestMutation","classList","add","remove","toggle","passive","RE_USERNAME_SEARCH","useMentionTooltip","groupChatMembers","topInlineBotIds","currentUserId","useLang","filteredUsers","setFilteredUsers","useState","extractUsernameTagThrottled","prepareForRegExp","getUsernameTag","getWithInlineBots","startsWith","usernameTag","usersById","getGlobal","users","byId","memberIds","acc","member","filter","filteredIds","filterPeersByQuery","ids","unique","query","values","pickTruthy","insertMention","peer","forceFocus","insertAtEnd","hasUsername","getPeerTitle","mainUsername","getMainUsername","userFirstOrLastName","htmlToInsert","ApiMessageEntityTypes","MentionName","fixedHtmlBeforeSelection","cleanWebkitNewLines","atIndex","lastIndexOf","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","EMPTY_ORDER_DIFF","useOrderDiff","orderedIds","orderById","useMemo","i","prevOrderById","usePreviousDeprecated","prevChatId","orderDiffByIdRef","forceUpdate","useForceUpdate","onReorderAnimationEnd","useSyncEffect","diff","mapValues","order","hasChanges","some","value","getAnimationType","useChatAnimationType","orderDiffById","OFFSET_X","REM","useOverlayPosition","anchorRef","overlayRef","isMirrored","isForMessageEffect","updatePosition","element","anchor","anchorRect","getBoundingClientRect","elementRect","windowWidth","innerWidth","anchorCenterY","top","height","anchorBottomY","bottom","y","style","left","right","messagesContainer","closest","MAX_NESTING_PARENTS","isSelectionInsideInput","selectionRange","inputId","commonAncestorContainer","parentNode","iterations","parentElement","useForumPanelRender","isForumPanelOpen","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","verifyAgeMin","appConfig","VERIFY_AGE_MIN_DEFAULT","SensitiveContentConfirmModal","shouldAlwaysShow","onAlwaysShowChanged","_jsxs","years","Checkbox","label","checked","onCheck","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","styles","root","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","rect","x","scrollX","scrollY","width","innerHeight","seed","floor","filterId","SNAP_EFFECT_ID","component","ghost","viewBox","createFilter","min","elementContainer","svg","jsxToHtml","foreignObject","querySelector","computedStyle","getComputedStyle","clone","cloneNode","from","setProperty","getPropertyValue","appendChild","snapContainer","getElementById","removeChild","once","smallestSide","baseSeed","xmlns","SVG_NAMESPACE","baseFrequency","numOctaves","result","in","slope","intercept","attributeName","dur","in2","operator","scale","xChannelSelector","yChannelSelector","isAlbum","messageOrAlbum","groupMessages","messages","firstUnreadId","topMessageId","isChatWithSelf","withUsers","currentAlbum","dateGroups","originalDate","date","datetime","getDayStartAt","senderGroups","index","currentDateGroup","currentSenderGroup","isInAlbum","hasComments","commentsMessage","content","text","hasMultipleCaptions","captionMessage","albumId","groupedId","mainMessage","paidMedia","extendedMedia","isPaidMedia","nextMessage","lastMessageInSenderGroup","nextMessageDayStartsAt","newDateGroup","senderId","paidMessageStars","suggestedPostInfo","isOutgoing","postAuthorTitle","isActionMessage","action","inlineButtons","forwardInfo","fromId","stickers","greeting","selectChat","fullInfo","selectUserFullInfo","lastMessage","selectChatLastMessage","defaultStickers","lastUnreadMessageId","lastReadInboxMessageId","connectionState","currentMessageList","selectCurrentMessageList","businessIntro","ContactGreeting","loadGreetingStickers","sendMessage","markMessageListRead","sticker","randomIndex","random","maxId","handleStickerSelect","isPreloadedGlobally","messageList","description","dir","ref","onClick","StickerView","size","shouldLoop","getUserFullName","countryList","phoneCodes","phoneCodeList","userFullInfo","commonChats","selectUserCommonChats","botInfo","isLoadingFullUser","selectBot","MessageListAccountInfo","hasMessages","loadCommonChats","openChatWithInfo","oldLang","phoneCountry","registrationMonth","nameChangeDate","photoChangeDate","settings","country","getCountryCodeByIso","botInfoPhotoUrl","useMedia","photo","getBotCoverMediaHash","botInfoGifUrl","gif","getVideoMediaHash","botInfoDimensions","getPhotoFullDimensions","getVideoDimensions","isBotInfoEmpty","isChatInfoEmpty","isVerifyCodes","isChatWithVerificationCodesBot","handleClick","shouldReplaceHistory","profileTab","forceScrollProfileTab","securityNameInfo","time","formatPastDatetime","withNodes","withMarkdown","securityPhotoInfo","tableData","isoToEmoji","iso2","defaultName","formatRegistrationMonth","commonChatsCount","peers","selectPeer","Link","pluralValue","AvatarList","buildClassName","buildStyle","src","OptimizedVideo","canPlay","loop","disablePictureInPicture","muted","playsInline","Skeleton","forceAspectRatio","getChatTitle","MiniTable","keyClassName","isVerified","INTERSECTION_THROTTLE_FOR_MEDIA","IS_ANDROID","ownProps","withAvatar","selectIsChatWithSelf","isSystemBotChat","isSystemBot","isAnonymousForwards","isAnonymousForwardsChat","forceSenderName","isAnonymousOwnMessage","canShowSender","sender","selectSender","originSender","selectForwardedSender","isRepliesChat","SenderGroupContainer","appearanceOrder","canPost","openChat","updateInsertingPeerIdMention","messageSender","noAppearanceAnimation","isShown","markShown","MESSAGE_APPEARANCE_DELAY","avatarPeer","isAvatarPeerUser","isApiPeerUser","handleOpenChat","handleMention","EDITABLE_INPUT_CSS_SELECTOR","peerId","handleAvatarClick","avatarRef","shouldRender","useShowTransition","noMountTransition","withShouldRender","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","getMenuElement","getLayout","withPortal","canMention","shouldRenderContextMenu","hiddenName","hiddenUserName","Avatar","onContextMenu","renderAvatar","Menu","onCloseAnimationEnd","autoClose","_Fragment","MenuItem","icon","SponsoredContextMenuContainer","selectSponsoredMessage","activeDownloads","selectActiveDownloads","downloadableMedia","selectMessageDownloadableMedia","isDownloading","getIsDownloading","theme","selectTheme","canAutoLoadMedia","selectCanAutoLoadMedia","canAutoPlayMedia","selectCanAutoPlayMedia","SponsoredMessage","observeIntersectionForLoading","observeIntersectionForPlaying","viewSponsored","openUrl","hideSponsored","clickSponsored","openMediaViewer","openAboutAdsModal","contentRef","shouldObserve","isMobile","useAppLayout","observe","observeIntersection","useIntersectionObserver","rootRef","debounceMs","threshold","handleBeforeContextMenu","isIntersecting","randomId","handleHideSponsoredMessage","getMessageContent","video","isGif","hasMedia","isMedia","url","shouldSkipModal","handleOpenMedia","origin","MediaViewerOrigin","isSponsoredMessage","handleOpenAboutAdsModal","canReport","additionalInfo","sponsorInfo","sizeCalculations","calculatedWidth","contentWidth","calculateMediaDimensions","media","getMinMediaWidthWithText","max","getMinMediaWidth","noMediaCorners","onMouseDown","preventMessageInputBlur","PeerColorWrapper","peerColor","Photo","canAutoLoad","noAvatars","forcedWidth","Video","canAutoPlay","renderMediaContent","isRtl","isRecommended","BadgeButton","renderTextWithEntities","entities","Button","color","isRectangular","buttonText","renderContent","MessageAppendix","round","ariaLabel","triggerRef","MessageListContent","canShowAds","threadId","messageIds","messageGroups","getContainerHeight","isViewportNewest","isUnread","isComments","isEmptyThread","isChannelChat","isChatMonoforum","anchorIdRef","memoUnreadDividerBeforeIdRef","memoFirstUnreadIdRef","isReady","hasLinkedChat","isSchedule","shouldRenderAccountInfo","isSavedDialog","isQuickPreview","onScrollDownToggle","onNotchToggle","onIntersectPinnedMessage","openHistoryCalendar","getIsHeavyAnimating2","getIsHeavyAnimating","getIsReady","areDatesClickable","observeIntersectionForReading","markMentionsRead","animateUnreadReaction","scheduleForViewsIncrement","INTERSECTION_MARGIN_FOR_LOADING","freeze","freezeForReading","unfreeze","unfreezeForReading","throttleMs","isBackgroundModeActive","mentionIds","reactionIds","viewportPinnedIdsToAdd","viewportPinnedIdsToRemove","scheduledToUpdateViews","entry","dataset","Number","lastMessageId","shouldUpdateViews","albumMainId","hasUnreadMention","hasUnreadReaction","isPinned","useBackgroundMode","margin","useMessageObservers","withHistoryTriggers","backwardsTriggerRef","forwardsTriggerRef","fabTriggerRef","loadViewportMessages","loadMoreBackwards","loadMoreForwards","debounce","direction","LoadMoreDirection","Backwards","Forwards","toggleScrollTools","fabTrigger","offsetHeight","scrollHeight","fabOffsetTop","offsetTop","scrollBottom","isNearBottom","isAtBottom","observeIntersectionForHistory","MESSAGE_LIST_SENSITIVE_AREA","useOnIntersect","observeIntersectionForFab","freezeForFab","unfreezeForFab","FAB_THRESHOLD","throttleScheduler","requestMeasure","observeIntersectionForNotch","freezeForNotch","unfreezeForNotch","freezeShortly","getContainerHeightDebounced","useDebouncedSignal","useSignalEffect","useScrollHooks","unreadDivider","renderPaidMessageAction","album","messagesLength","amount","formatStarsAsText","userTitle","renderSuggestedPostInfoAction","price","scheduleDate","userLink","renderPeerLink","originalMessage","replyInfo","replyToMsgId","selectChatMessage","titleText","getSuggestedChangesInfo","getSuggestedChangesActionText","compact","currency","formatTonAsText","convertTonFromNanos","formatScheduledDateTime","actionMessageStyles","suggestedPostContainer","suggestedPostTitle","messageCountToAnimate","messageGroup","flat","appearanceIndex","prevMessageIds","isNewMessage","dateGroup","dateGroupIndex","dateGroupsArray","senderGroup","senderGroupIndex","senderGroupsArray","isLastInList","ActionMessage","observeIntersectionForBottom","isJustAdded","getIsMessageListReady","currentDocumentGroupId","senderGroupElements","messageIndex","isOwn","isOwnMessage","isMessageAlbum","previousLocalId","getMessageHtmlId","documentGroupId","nextDocumentGroupId","isTopicTopMessage","position","isFirstInGroup","isLastInGroup","isFirstInDocumentGroup","isLastInDocumentGroup","originalId","getMessageOriginalId","isServiceNotificationMessage","noComments","Message","withSenderName","messageListType","noReplies","MAIN_THREAD_ID","lastMessageOrAlbum","lastAppearanceOrder","firstMessageOrAlbum","firstMessage","firstMessageId","calculateSenderGroups","teactFastList","selectedAt","SCHEDULED_WHEN_ONLINE","formatHumanDate","ICON_SIZE","NoMessages","isGroupChatJustCreated","topic","renderScheduled","renderSavedMessages","renderGroup","TopicIcon","renderTopic","patternColor","selectThemeValues","paidMessagesStars","openPremiumModal","openStarsBalanceModal","handleOpenPremiumModal","handleGetMoreStars","AnimatedIconWithPreview","tgsUrl","LOCAL_TGS_URLS","Unlock","formatStarsAsIcon","asFont","containerClassName","pill","Sparkles","preset","Content","runDebouncedForScroll","cb","selectCurrentMessageIds","messagesById","selectChatScheduledMessages","selectChatMessages","getIsSavedDialog","isForum","isRestricted","selectIsChatRestricted","restrictionReasons","selectActiveRestrictionReasons","focusingId","selectFocusedMessageId","withLastMessageWhenPreloading","unreadCount","chatBot","isNonContact","canAddContact","selectTopic","chatFullInfo","isUserId","selectChatFullInfo","selectThreadInfo","messagesCount","areAdsEnabled","selectIsCurrentUserPremium","isAccountFrozen","selectIsCurrentUserFrozen","hasCustomGreeting","isAppConfigLoaded","monoforumChannelId","selectMonoforumChannel","canTranslate","selectCanTranslateChat","isTranslationDisabled","shouldAutoTranslate","hasAutoTranslation","translationLanguage","selectTranslationLanguage","isChatLoaded","isChatChannel","isGroupChat","isChatGroup","isChannelWithAvatars","areProfilesShown","isCreator","isBot","isSynced","selectFirstUnreadId","selectIsViewportNewest","isSelectModeActive","selectIsInSelectMode","linkedChatId","channelJoinInfo","joinInfo","noMessageSendingAnimation","selectPerformanceSettingsValue","isServiceNotificationsChat","SERVICE_NOTIFICATIONS_USER_ID","isChatProtected","selectIsChatProtected","MessageList","withBottomShift","withDefaultBg","isContactRequirePremium","setScrollOffset","loadSponsoredMessages","loadMessageReactions","copyMessagesByIds","loadMessageViews","loadPeerStoriesByIds","loadFactChecks","requestChatTranslation","scrollOffsetRef","selectScrollOffset","selectLastScrollOffset","anchorTopRef","listItemElementsRef","memoFocusingIdRef","isScrollTopJustUpdatedRef","shouldAnimateAppearanceRef","hasOpenChatButton","ANONYMOUS_USER_ID","areMessagesLoaded","isPrivate","onTickEnd","toLanguageCode","handleCopy","getMessageIdsForSelectedText","preventDefault","useNativeCopySelectedMessages","listedMessages","arr","prevMessage","shouldAppendJoinMessage","shouldAppendJoinMessageAfterCurrent","joinedDate","generateChannelJoinMessageId","mediaType","inviterId","isViaRequest","orderRule","orderBy","useInterval","reactions","storyDataList","storyData","storiesByPeerIds","storyIds","isCommentsInfo","viewsCount","factCheck","shouldFetch","loadMoreAround","Around","isScrolled","updateStickyDates","markIsScrolled","runDebounced","useRunDebounced","body","contains","stuckDateEl","allElements","querySelectorAll","containerTop","headerActionsHeight","parseInt","el","findStuckDate","currentStuck","useStickyDates","handleScroll","selectTabState","focusedMessage","shouldCancelWaiting","scrollOffset","prevContainerHeightRef","isComposerVisible","setContainerHeight","handleResize","contentRect","useResizeObserver","currentNormalHeight","normalHeight","containerHeight","String","prevContainerHeight","useContainerHeight","isLocalMessageId","MESSAGE_LIST_SLICE","firstElementChild","clientHeight","rememberScrollPositionRef","useStateRef","preservedItemElements","forceMeasure","useLayoutEffectWithPrevDeps","prevIsViewportNewest","lastItemElement","firstUnreadElement","hasLastMessageChanged","hasViewportShifted","wasMessageAdded","addExtraClass","removeExtraClass","requestForcedReflow","bottomOffset","isAlreadyFocusing","shouldScrollToBottom","animateScroll","forceDuration","isResized","isAnimatingScroll","newScrollTop","newAnchorTop","getOffsetToContainer","resetScroll","ceil","restartCurrentScrollAnimation","useEffectWithPrevDeps","prevIsSelectModeActive","beginHeavyAnimation","ANIMATION_END_DELAY","shouldRenderGreeting","isEmptyTopic","Restricted","PremiumRequired","Loading","AccountInfo","StarsRequired","shouldCleanup","onScroll","RequirementToContactMessage","backgroundColor","forceShowSelf","userStatus","selectUserStatus","isSavedMessages","isSelf","self","PrivateChatInfo","customPeer","typingStatus","avatarSize","statusIcon","withDots","withMediaViewer","withUsername","withStory","withFullInfo","withUpdatingStatus","emojiStatusSize","noStatusOrTyping","noEmojiStatus","noFake","noVerified","noRtl","adminMember","ripple","storyViewerOrigin","onEmojiStatusClick","iconElement","rightElement","loadFullUser","loadMoreProfilePhotos","hasAvatarMediaViewer","isPreload","useIntervalForceUpdate","handleAvatarViewerOpen","stopPropagation","isAvatarView","mediaIndex","ProfileAvatar","MiddleHeaderAvatar","customTitle","isOwner","storyViewerMode","FullNameTitle","withEmojiStatus","DotAnimation","subtitleKey","TypingStatus","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","renderStatusOrTyping","RippleEffect","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","ChatCallStatus","isSelected","ChatTags","orderedFolderIds","chatFoldersById","visibleFolderIds","remainingCount","folderId","folder","getApiPeerColorClass","noCustomEmojiPlayback","noTitleAnimations","emojiSize","isPreview","previewMessageId","chatFolderIds","getChatFolderIds","areTagsEnabled","chatFolders","isPremium","selectChatLastMessageId","savedDialogSender","lastMessageSender","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectTopicFromMessage","selectThreadParam","topicsInfo","selectTopicsInfo","lastMessageStory","selectPeerStory","monoforumChannel","isMuted","getIsChatMuted","selectNotifyDefaults","selectNotifyException","draft","selectDraft","selectIsForumPanelOpen","canScrollDown","canChangeFolder","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","selectCanAnimateInterface","listedTopicIds","topics","topicsById","Chat","orderDiff","animationType","onDragEnter","onDragLeave","withTags","openSavedDialog","toggleChatInfo","focusLastMessage","focusMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","openFrozenAccountModal","updateChatMutedState","openQuickPreview","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","isForumAsMessages","isMonoforum","useEnsureMessage","tagFolderIds","chatFolderIdsSet","isAll","ALL_FOLDER_ID","hasColor","shouldRenderTags","renderSubtitle","useChatListEntry","statefulMediaContent","groupStatefulContent","story","noForumTitle","getIsForumPanelClosed","useSelectorSignal","selectIsForumPanelClosed","noForumTopicPanel","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleUnmute","mutedUntil","UNMUTE_TIMESTAMP","handleChatFolderChange","handleReport","contextActions","useChatContextActions","useIsIntersecting","isOnline","hasShownClass","isAvatarOnlineShown","useShowTransitionDeprecated","href","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","ListItem","withPortalForMenu","asMessageBubble","withStoryGap","subscriptionUntil","StoryViewerOrigin","ChatList","StarIcon","ChatBadge","shouldShowOnlyMostImportant","forceHidden","isCallActive","isCallNotEmpty","monoforumBadgeClassName","withStatusTextColor","LastMessageMeta","outgoingStatus","draftDate","hasMiniApp","hasMainMiniApp","DeleteChatModal","MuteChatModal","ChatFolderModal","usePaidMessageConfirmation","starsForAllMessages","isStarsBalanceModeOpen","starsBalance","shouldPaidMessageAutoApprove","byKey","shouldAutoApprove","setAutoApprove","isWaitingStarsTopup","setIsWaitingStarsTopup","confirmPaymentHandlerRef","closeConfirmDialog","closePaymentMessageConfirmDialogOpen","handleStarsTopup","topup","balanceNeeded","purpose","PAID_MESSAGES_PURPOSE","handleWithConfirmation","openPaymentMessageConfirmDialogOpen","dialogHandler","setPaidMessageAutoApprove","storyId","loadStoryThrottled","throttled","throttle","resetInput","applyIosAutoCapitalizationFix","focus","IS_IOS","createElement","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","headers","parseHtml","DOMParser","parseFromString","wrapNodeAnchor","node","wrapNodeInline","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","VALID_TARGET_IDS","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","updateShouldSaveAttachmentsCompression","applyDefaultAttachmentsCompression","handlePaste","async","clipboardData","input","activeElement","pastedText","getData","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","filteredNodes","cleanNodes","getCleanDocument","err","DEBUG","console","textContents","getElementsByTagName","removeAttribute","replaceWith","entityType","getAttribute","ignoreOnPaste","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","getFilesFromDataTransferItems","textToPaste","isWordDocument","hasText","shouldSetAttachments","newAttachments","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","shouldSave","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","RE_LINK","RE_LINK_TEMPLATE","STARTS_ENDS_ON_EMOJI_IMG_REGEX","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","opusRecorderPromise","OpusRecorder","mediaRecorder","default","start","analyzerCallback","startMediaRecorder","startedAt","pausedAt","chunks","waveform","ondataavailable","typedArray","releaseAnalyzer","recorder","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","Uint8Array","isDestroyed","tick","getByteFrequencyData","volume","subscribeToAnalyzer","stop","onstop","blob","Blob","duration","onerror","delayStop","pause","AttachmentModal","AttachMenu","isButtonVisible","canAttachMedia","canAttachPolls","canAttachToDoLists","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","canEditMedia","editingMessage","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","onTodoListCreate","updateAttachmentSettings","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","validatedFiles","validateFiles","handleQuickSelect","shouldCompress","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","positionX","positionY","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","button","renderKeyboardButtonText","noCompact","j","BotMenuButton","textRef","textEl","scrollWidth","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","forwardMessages","fromChatId","toChatId","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","shouldAnimate","isForwarding","forwardedMessages","replyToPeerId","senderChat","selectEditingMessage","forwardSenders","m","selectSenderFromForwardedMessage","forwardedMessage","isChannelPost","quoteText","isSenderChannel","forwardsHaveCaptions","forward","isContextMenuDisabled","isReplyToDiscussion","isMediaNsfw","selectIsMediaNsfw","forwardedMessagesCount","isCurrentUserPremium","isInChangingRecipientMode","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","resetDraftSuggestedPostInfo","updateDraftReplyInfo","setEditingId","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","openSuggestMessageModal","isReplyToTopicStart","isShowingReply","isReplyWithQuote","isShowingSuggestedPost","senders","transitionClassNames","clearEmbedded","captureEscKeyListener","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","renderingSender","useCurrentOrPrev","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","ClosableEmbeddedMessage","isInComposer","composerForwardSenders","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","modal","ToDoListModal","tabState","noWebPage","selectNoWebPage","attachmentSettings","webPagePreview","webPagePreviewId","selectWebPage","webpageType","WebPagePreview","isEditing","toggleMessageWebPage","isInvertedMedia","isSmallerMedia","webPageMediaSize","hasMediaSizeOptions","hasLargeMedia","prevWebPageRef","renderingWebPage","isFullWebPage","thumbnailUrl","useThumbnail","previewMedia","getWebPagePhoto","getWebPageVideo","getWebPageAudio","getWebPageDocument","previewMediaHash","getMediaHash","previewMediaUrl","shouldRenderPreviewMedia","previewMediaRef","noCloseTransition","hasPreviewMedia","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","noUserColors","siteName","webPage","audio","MainButtonState","isChatWithBot","isChatWithUser","selectPeerPaidMessagesStars","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","language","selectSharedSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","sendAsId","sendAsPeer","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","isStoryViewerOpen","storyViewer","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isInScheduledList","canSendQuickReplies","isSilentPosting","getChatNotifySettings","areEffectsSupported","canPlayEffect","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","maxMessageLength","config","DEFAULT_MAX_MESSAGE_LENGTH","isReplying","hasSuggestedPost","stars","balance","isStarsBalanceModalOpen","starsBalanceModal","insertingPeerIdMention","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","withScheduledButton","hasScheduledMessages","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","todoListModal","stickersForEmoji","forEmoji","customEmojiForEmoji","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","isPaymentMessageConfirmDialogOpen","shouldDisplayGiftsButton","disallowedGifts","pollMaxAnswers","Composer","dropAreaState","inputPlaceholder","editableInputCssSelector","editableInputId","onDropHide","onFocus","onBlur","onForward","clearDraft","showDialog","openPollModal","closePollModal","openTodoListModal","closeTodoListModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","openGiftModal","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","updateChatSilentPosting","updateDraftSuggestedPostInfo","counterRef","storyReactionRef","isMounted","setIsMounted","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","windowSize","isInMessageList","isInStoryViewer","sendAsPeerIds","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","chatBotCommands","chatEmojiSetId","canSchedule","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","isChatWithSendAs","isChatSuperGroup","isChatPublic","isLinkedInDiscussion","hasGeo","shouldAnimateSendAsButtonRef","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","messagesInInput","closeConfirmModalPayForMessage","paymentMessageConfirmDialogHandler","setShouldPaidMessageAutoApprove","handleActionWithPaymentConfirmation","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","inInputId","shouldPrepend","selection","getSelection","messageInput","rangeCount","getRangeAt","insertHtmlInSelection","dispatchEvent","Event","bubbles","newFirstWord","shouldReplace","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","shouldSendInHighQuality","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","limit","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","handleUpdateAttachmentsQuality","filename","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","boxShadow","shouldSendRecordingStatus","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","loadStickersForEmoji","clearStickersForEmoji","getSingleEmoji","cleanHtml","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","getCommand","command","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","shouldKeepSuggestedPost","runDebouncedForSaveDraft","DRAFT_DEBOUNCE","prevThreadId","prevDraft","isTouched","shouldUpdateSuggestedPost","customEmojiIds","entity","documentId","useLayoutEffect","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBeforeUnload","loadWebPagePreview","clearWebPagePreview","formattedTextWithLinkRef","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","getLink","link","useLoadLinkPreview","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","prevEditedMessage","prevReplyingToId","shouldSetNoWebPage","edited","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","handleBlur","resetComposerRef","stopRecordingVoiceRef","areAllGiftsDisallowed","every","shouldShowGiftButton","shouldShowSuggestedPostButton","showCustomEmojiPremiumNotification","notificationNumber","actionText","initialSection","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","formatMediaDuration","isSlowMode","blur","canSendAttachments","attachmentsToSend","sendAttachments","sendCompressed","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSendCore","currentAttachments","webPageUrl","handleSend","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","voice","handleSendWithConfirmation","handleTodoListCreate","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","queryId","restArgs","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","isScheduleRequested","canUpdateStickerSetsOrder","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","handleToDoListSend","todo","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","handleGiftClick","forUserId","handleSuggestPostClick","STARS_CURRENCY_CODE","nanos","handleToggleSilentPosting","localId","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholder","adminRights","anonymous","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","fullClassName","handleToggleReaction","reaction","emoticon","selectCustomEmoji","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","shouldRenderPaidBadge","prevShouldRenderPaidBadge","usePrevious","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","isQuiz","shouldBeAnonymous","maxOptionsCount","selectedSendAsId","onInsertUserName","filterUnits","dy","stdDeviation","d","onSelectResult","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onSuppressedFocus","Spinner","slideClassName","formatVoiceRecordDuration","CustomEmojiTooltip","EmojiTooltip","emojis","ReactionAnimatedEmoji","withEffectOnly","getReactionKey","allowDisabledClick","noFastClick","nonInteractive","fluid","AnimatedCounter","number","MessageEffect","shouldPlay","onStop","CustomSendMenu","onSendSchedule","onRemoveEffect","withEffects","hasCurrentEffect","PaymentMessageConfirmDialog","userName","messagePriceInStars","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","loadStoriesMaxIds","peerIds","usePeerStoriesPolling","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","isUserBot","isSupport","usePrevDuringAnimation","prev","timeoutRef","isCurrentPresent","isPrevPresent","wasTopicOpened","requestMainWebView","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","shouldBeUnMuted","notifySettings","isEveryUnreadMuted","hasUnreadMark","isSignal","handleOpenApp","extractCurrentThemeParams","ShowTransition","isCustom","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","formatIntegerCompact","pinnedElement","miniAppButton","visiblePinnedElement","elements","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","needsAgeVerification","needAgeVideoVerification","isInWebPage","uploadProgress","dimensions","asForwarded","isProtected","lastPlaybackTimestamp","clickArg","onCancelUpload","cancelMediaDownload","updateContentSettings","openAgeVerificationModal","videoRef","isNsfwModalOpen","openNsfwModal","closeNsfwModal","shouldAlwaysShowNsfw","setShouldAlwaysShowNsfw","isPaidPreview","localBlobUrl","blobUrl","shouldShowSpoiler","isSpoilerShown","showSpoiler","hideSpoiler","handleNsfwConfirm","isSensitiveEnabled","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isLoadAllowed","setIsLoadAllowed","shouldLoad","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","mediaLoader","mediaData","loadProgress","useMediaWithLoadProgress","getMediaFormat","fullMediaData","isPlayerReady","markPlayerReady","thumbDataUri","getMediaThumbUri","hasThumb","withBlurredBackground","isInline","isUnsupported","useUnsupportedMedia","isPreviewPreloaded","canLoadPreview","previewBlobUrl","shouldHidePreview","previewRef","useMediaTransition","hasMediaData","noThumb","thumbRef","useBlurredMediaThumbRef","blurredBackgroundRef","downloadProgress","isUploading","isTransferring","transferProgress","getMediaTransferState","wasLoadDisabled","spinnerRef","shouldRenderSpinner","playButtonRef","transferProgressRef","shouldRenderTransferProgress","playProgress","setPlayProgress","handleTimeUpdate","currentTarget","currentTime","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","isAllowed","handleClickOnSpinner","componentClassName","MIN_MEDIA_HEIGHT","defaultMuted","draggable","onTimeUpdate","onReady","MediaSpoiler","isVisible","withAnimation","isNsfw","ProgressSpinner","progress","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","prepareLibraryMemo","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","sort","matchedNames","setById","setFilteredEmojis","setFilteredCustomEmojis","exec","uncompressEmoji","ensureEmojiData","then","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","emojiHtml","emojiCode","newShouldAutoInsert","endsWith","test","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","onLoad","onSearchOpen","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","ANIMATION_DURATION","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","animateOpening","isArchived","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","reverse","isLast","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","opacity","transform","ghostRevealName","createDelayedCallback","animateClosing","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","canvas","getContext","drawImage","ms","clear","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH","hasCommentButton","messageText","isPhoto","isVideo","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","isSmall","selectWebPagesById","webPageById","useMessageMediaHash","webPagesById","useSelector","webPageId","getMessageMediaHash","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","collapse","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","selectWebPageFromMessage","WebLink","senderTitle","onMessageClick","linkData","getFirstLinkInMessage","domain","formattedDescription","getMessageTextWithFallback","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","formatPastTimeShort","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","letterClassName","noLoopLimit","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","topicId","onStart","onEnd","isLongPressActive","isPressed","timerId","canProcessEvent","end","cancel","useUnmountCleanup","onMouseUp","onTouchStart","onTouchEnd","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","cloneContents","caretRange","endContainer","endOffset","Node","TEXT_NODE","removeAllSelections","orderedPeerIds","archived","active","byPeerId","isRibbonShown","isArchivedRibbonShown","chatsById","chats","peerStories","canShow","toggleStoryRibbon","PREVIEW_AVATAR_COUNT","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","useStoryPreloader","avatar","withStorySolid","forceFriendStorySolid","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","getCustomAppendixBg","requestMediaWorker","MAX_WORKERS","navigator","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","Worker","inputSelector","getRange","setRange","onSelectionChange","Element","VTN_PROPERTY_NAME","useVtn","uniqueId","fallbackId","useUniqueId","createVtnStyle","vtClass","vtClassString","CSS","registerProperty","syntax","inherits","DropTarget","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","handleDragLeave","relatedTarget","toTarget","onDrop","rx","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","matches","shouldRenderQuick","Portal","containerSelector","onDragOver","handleDragOver","reducer","initialState","reducerRef","dispatch","NothingFound","withSticker","DuckNothingFound","previewUrl","LOCAL_TGS_PREVIEW_URLS","noLoop","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","getDate","setDate","getTime","shiftTimeRanges","ranges","shiftedRanges","startMinute","endMinute","last","DAYS","_","BusinessHours","businessHours","transitionRef","isExpanded","expand","isMyTime","showInMyTime","showInLocalTime","timezoneSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","handleAnimationStart","TO_SLIDE_CLASS_NAME","iconClassName","multiline","isStatic","narrow","withColorTransition","role","tabIndex","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","UserBirthday","birthday","isInSettings","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","getMonth","getAge","numbersForAge","numbers","byEmoji","digit","effectSticker","randomEffect","hash","getStickerMediaHash","ApiMediaFormat","BlobUrl","effectHash","column","canGiftPremium","handleOpenGiftModal","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","forceAlways","birthdate","DEFAULT_MAP_CONFIG","zoom","chatOrUserId","botAppPermissions","selectBotAppPermissions","botVerification","chatInviteLink","inviteLink","bio","about","canViewSubscribers","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","isBotCanManageEmojiStatus","ChatExtra","isOwnProfile","updateTopicMutedState","loadPeerStories","openMapModal","requestCollectibleInfo","toggleUserEmojiStatusPermission","toggleUserLocationPermission","requestNextManagementScreen","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","prevPeerId","dpr","useDevicePixelRatio","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","copyTextToClipboard","geoPoint","handleToggleNotifications","MUTE_INDEFINITE_TIMESTAMP","manageEmojiStatusChange","handleLocationPermissionChange","isAccessGranted","geolocation","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","handleOpenSubscribers","screen","ManagementScreens","ChannelSubscribers","shouldMarkBotTrusted","appTermsInfo","terms","membersCount","ChatAnimationTypes","renderUsernames","allowSelection","Switcher","inactive","iconId","usernameList","otherUsernames","usernameLinks","s","idx","dataTransferItems","traverseFileTreePromise","item","itemFile","getAsFile","isDirectory","createReader","readEntries","entriesPromises","kind","webkitGetAsEntry","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","markChatMessagesRead","markChatUnread","openChatInNewTab","actionOpenInNewTab","IS_TAURI","actionQuickPreview","togglePinned","actionPin","actionDelete","actionAddToFolder","actionMute","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","PI","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","confirmPaymentMessage","totalAmount","HeaderMenuContainer","isSuperGroup","selectLanguageCode","doNotTranslate","noMenu","isMainThread","isDiscussionThread","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","isChatBasicGroup","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","channelMonoforumId","linkedMonoforumId","detectedChatLanguage","detectedLanguage","HeaderActions","isForForum","canExpandActions","onTopicSearch","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","togglePeerTranslations","openChatLanguageModal","setSettingOption","unblockUser","setViewForumAsMessages","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","handleJoinRequestsClick","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","IS_APP","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","focusNoScroll","CLOSE_DURATION","RESIZE_THROTTLE","useHeaderPane","providedRef","withResizeObserver","onStateChange","setShouldRender","localRef","lastHeightRef","reset","handleUpdate","currentHeight","useThrottledCallback","applyAnimationState","list","noTransition","cumulativeHeight","shiftPx","apply","setExtraStyles","transition","isPanelOpen","path","DEFAULT_HANDLERS","play","seekbackward","seekforward","previoustrack","nexttrack","seekTo","registerMediaSession","metadata","mediaSession","updateMetadata","setMediaSessionHandlers","warn","setActionHandler","clearMediaSession","playbackState","setPositionState","setPlaybackState","buildMediaMetadata","artist","artwork","MediaMetadata","ARCHIVE_CUSTOM_PEER","isCustomPeer","avatarIcon","customPeerAvatarColor","Archive","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","unread","actionMinimize","isMinimized","actionExpand","actionHide","isHidden","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","openSettingsScreen","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","FrozenAccountNotification","UnconfirmedSession","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","handleAccept","isConfirmed","handleReject","isText","RESERVED_HOTKEYS","canDisplayArchive","isMainList","openNextChat","openLeftColumnContent","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isAllFolder","isSaved","resolvedFolderId","SAVED_FOLDER_ID","shouldDisplayArchive","shouldShowFrozenAccountNotification","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","frozenNotificationHeight","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","targetIndexDelta","handleKeyDown","IS_MAC_OS","isArchiveInList","contentKey","LeftColumnContent","Archived","handleArchivedClick","handleFrozenAccountNotificationClick","handleShowStoryRibbon","handleHideStoryRibbon","handleArchivedDragEnter","handleChatDragEnter","InfiniteScroll","itemSelector","preloadBackwards","withAbsolutePositioning","maxHeight","onLoadMore","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","TOPIC_ICON_SIZE","threadInfo","onlineCount","selectChatOnlineCount","selectThreadMessagesCount","GroupChatInfo","noAvatar","withChatType","realChat","withMonoforumStatus","loadFullChat","isTopic","isMin","shouldRestoreHeight","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","isInSelectMode","shouldAffectAppendix","getPhotoMediaHash","prevMediaData","fullMediaRef","shouldRenderFullMedia","withThumb","downloadButtonRef","shouldRenderDownloadButton","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","appendixBg","dimensionsStyle","fileSelector","accept","noMultiple","onchange","click","extension","timestamp","thumbnailDataUri","previewData","smaller","isSelectable","actionIcon","onDateClick","elementRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","spinnerClassNames","getColorFromExtension","sizeString","getFileSizeString","subtitle","getDocumentThumbnailDimensions","formatMediaDateTime","tracks","currentTrackId","voiceQueue","musicQueue","playNext","trackId","isReverseOrder","currentTrack","onTrackChange","nextTrackId","findNextInQueue","audioPlayer","AudioOrigin","Inline","openAudioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","onForcePlay","safePlay","stopCurrentAudio","register","trackType","track","Audio","handleEvent","eventName","isSafariPatchInProgress","proxy","Proxy","createAudio","trackIdComparator","addTrackToQueue","paused","preventPlayAfterPatch","preload","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","prevSrc","setCurrentTime","fastSeek","setVolume","setPlaybackRate","rate","playbackRate","toggleMuted","requestNextTrack","isFirst","requestPreviousTrack","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","currentId","getTrackQueue","Search","chatAudio","makeTrackId","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","isPrivateChat","getPrivateChatUserId","canDeleteForAll","isBasicGroup","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","deleteChat","chatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","handleDeleteChat","handleLeaveChat","Modal","header","COLOR_REPLACE_PATTERN","AttachBotIcon","isTouchScreen","getDocumentMediaHash","Text","iconSvg","mediaDataWithReplacedColors","doc","stroke","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","shortName","isDisclaimerNeeded","interval","MAX_STANDARD_QUALITY_IMG_SIZE","MAX_HIGH_QUALITY_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","options","createObjectURL","mimeType","quick","shouldSendAsFile","img","preloadImage","validateAspectRatio","maxQuickImgSize","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","performer","coverUrl","parseBlob","selectCover","fetchBlob","common","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getSenderName","senderName","preloadedHashes","LimitedMap","Document","autoLoadFileMaxSizeMb","shouldWarnAboutFiles","onMediaClick","downloadMedia","setSharedSettingOption","isFileIpDialogOpen","openFileIpDialog","closeFileIpDialog","shouldNotWarnAboutFiles","setShouldNotWarnAboutFiles","fileName","getDocumentExtension","wasIntersected","markIntersected","shouldDownload","documentHash","isLoaded","hasPreview","getDocumentHasPreview","shouldForceDownload","innerMediaType","mediaSize","fromDocumentAttribute","fromPreload","fileEl","onHover","mediaContainer","getMessageDocumentVideo","getMessageDocumentPhoto","shouldSkipPhoto","fetch","IS_PROGRESSIVE_SUPPORTED","videoEl","naturalWidth","naturalHeight","updateChatMessage","setGlobal","preloadDocumentMedia","handleDownload","originMessage","isIpRevealingMedia","handleFileIpConfirm","handleDateClick","isDocumentVideo","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","r","shouldDisplayCount","updateCustomEmojiSize","prevReactionCount","effectSize","shouldPause","formatTemperature","temperatureC","restrictedEmoji","selectRestrictedEmoji","MediaAreaWeather","int2cssRgba","textColor","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","noPlay","withTranslucentThumb","STORY_ASPECT_RATIO","NO_SHINY_TYPES","prepareStyle","mediaWidth","rotation","radius","coordinates","pixelRadius","pixelWidth","pixelHeight","MediaAreaOverlay","isStoryPlaying","openUniqueGiftBySlug","closeStoryViewer","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","channelId","slug","handleMediaAreaClick","lastCallback","onBeforeUnload","useScrollNotch","selector","deps","toggleExtraClass","RADIUS_RATIO","lastWorkerIndex","thumbData","canvasRef","workerIndex","cycleRestrict","offscreenRef","blurThumb","uri","image","transferControlToOffscreen","useOffscreenCanvasBlur","groupCall","selectChatGroupCall","isMasterTab","groupCalls","activeGroupCallId","participantsCount","GroupCallTopPane","onPaneStateChange","requestMasterAndJoinGroupCall","handleJoinGroupCall","participants","fetchedParticipants","renderingParticipantCount","renderingFetchedParticipants","isRendering","resolver","msOrSchedulerFn","noFirst","setValue","useThrottledSignal","getValue","throttledResolver","noLast","useDebouncedCallback","debouncedResolver","PENDING_TRANSLATIONS","useMessageTranslation","chatTranslations","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","translatedText","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","TINY_SCREEN_WIDTH_MQL","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderAudio","isPlaying","bufferedRanges","seekerRef","showProgress","showSeekline","renderSeekline","renderVoice","waveformCanvasRef","isMediaUnread","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","onClickTranscribe","onHideTranscription","ry","OneTimeModal","mediaDuration","selectMessageMediaDuration","canDownload","canTranscribe","autoPlay","onPlay","onPause","onReadMedia","transcribeAudio","openOneTimeMediaModal","contentAudio","mediaSource","isVoice","isSeeking","isActivated","setIsActivated","coverHash","coverBlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","playPause","useAudioPlayer","isMessageLocal","reversePlayProgress","isReverse","spikes","peak","MIN_SPIKES","MAX_SPIKES","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","val","interpolateArray","encoded5bit","bitsCount","valuesCount","bitsData","l","byteIndex","bitShift","lastByteIndex","lastBitShift","lastValue","decodeWaveform","fillStyle","progressFillStyle","ctx","globalAlpha","spikeHeight","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","clientX","MouseEvent","targetTouches","handleStartSeek","handleStopSeek","handleTranscribe","renderFirstLine","renderSecondLine","captureEvents","onCapture","onRelease","onDrag","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","backgroundImage","AnimatedIcon","Flame","transparent","withColor","noCross","rotationOffset","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","onSourceOpen","sourceBuffer","addSourceBuffer","loader","makeProgressiveLoader","next","done","readyState","endOfStream","appendBuffer","display","unloadVideo","checkIfStreamingSupported","buffer","ManagedMediaSource","MediaSource","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaHash","noLoad","mediaFormat","delay","isHtmlAllowed","isStreaming","Progressive","selectIsSynced","setLoadProgress","startedAtRef","handleProgress","spentTime","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","phoneCall","adminId","selectCanInviteToActiveGroupCall","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","isToncoin","renderOverviewItemValue","change","percentage","isChangeNegative","renderBalanceCell","usdRate","integerTonPart","decimalTonPart","toFixed","integerUsdPart","decimalUsdPart","period","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","waitStartingTransitionsEnd","scheduler","fastRaf","allSettled","getAnimations","subtree","CSSTransition","finished","waitCurrentTransitionsEnd","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","getOrderedTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleMouseDown","handleOpenTopicMouseDown","useFastClick","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","shouldTryLoadingStory","useEnsureStory","mediaContent","mediaHasPreview","getMessageSticker","mediaThumbnail","mediaBlobUrl","isRoundVideo","getMessageRoundVideo","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","asPreview","withTranslucentThumbs","getMessageSenderName","renderSummary","isCancelled","notifyAnimationEnd","Opacity","Move","messageSummary","MessageSummary","noEmoji","inChatList","getMessageIsSpoiler","isGraph","obj","openStoryViewer","toggleStoriesHidden","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","handleArchivedStories","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","isClosing","hidden","closing","useHorizontalScroll","StoryRibbonButton","willSkipNext","shouldSkipNext","ConnectionStatus","useConnectionStatus","isSyncing","hasMiddleHeader","setIsOnline","onLine","handleChange","useBrowserOnline","syncing","online","waitingForNetwork","connectionStatus","connectionStatusPosition","connectionStatusText","AbsoluteVideo","videoUrl","load","recalculatePositionAndSize","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","customColor","useDynamicColorListener","colorFilter","useColorFilter","playersById","clearPlayers","player","synchronizeElements","playerIdsToClear","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","isLottie","shouldUseTextColor","hex2rgbaObj","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","createPlayer","animation","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","scroller","newHeight","isOverflown","transitionDuration","log","htmlRef","focusInput","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","placeholderAriaLabel","spellCheck","onChange","onKeyDown","isComposing","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","anchorPosition","orderDiffs","numberOfUp","numberOfDown","Infinity","typingUser","typingUserName","isHovering","markMouseOver","markMouseOut","fullGiftHash","fullGifBlobUrl","hasSpoiler","onMouseOver","onMouseOut","decoding","shouldUseDraft","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","stopPrevious","RoundVideo","playerRef","circleRef","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","playerEl","strokeDashOffset","stopPlaying","capturePlaying","togglePlaying","isPriority","onEnded","cx","cy","replaceWithTeact","STARS_ICON_PLACEHOLDER","ProfilePhoto","canPlayVideo","isDeleted","isDeletedUser","isChatWithRepliesBot","canHaveMedia","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","thumbnail","dataUri","blurredThumbCanvasRef","specialIcon","userFullName","getFirstLetters","GIFT_STICKER_SIZE","POSITIONS","PinnedGift","gift","withGlow","openGiftInfoModal","stickerRef","giftAttributes","getGiftAttributes","model","backdrop","GiftEffectWrapper","withSparkles","sparklesColor","glowColor","edgeColor","ProfilePinnedGifts","gifts","clamp","getExpandedPosition","PATTERN_Y_SHIFT","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","animationLevel","emojiStatus","emojiStatusSticker","emojiStatusSlug","profileColor","selectPeerProfileColor","hasBackground","selectPeerHasProfileBackground","savedGifts","selectPeerSavedGifts","profileColorOption","ProfileInfo","isForSettings","isForMonoforum","onExpand","openStickerSet","openPrivacySettingsNoticeModal","openProfileRatingModal","loadPeerSavedGifts","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","currentPhotoIndex","setCurrentPhotoIndex","collectibleEmojiStatus","backgroundEmoji","useCustomEmoji","patternDocumentId","backgroundEmojiId","profileColorSet","bgColors","centerColor","storyColors","colors","darkColors","pinnedGifts","currentIndex","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","handleRatingClick","handleMinimizedAvatarClick","selectorToPreventScroll","onSwipe","SwipeDirection","Right","Left","RadialPatternBackground","backgroundColors","patternIcon","patternSize","withLinearGradient","yPosition","totalPhotosLength","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","renderPhotoTabs","personalPhoto","fallbackPhoto","resolveTransitionName","canCopyTitle","renderUserRating","isReadDateRestrictedByMe","renderStatus","starsRating","onRatingClick","safeLevel","iconLevel","iconName","originalDuration","onInit","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","mediaHandlers","closeAudioPlayer","skipTime","seekOffset","seekTime","makeMediaHandlers","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","prevShouldPlay","playIfPresent","setTime","audioProxy","SponsoredContextMenu","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","SponsoredMessageContextMenuContainer","onItemClick","reportSponsored","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","handleReportSponsoredMessage","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","selectTopics","isChatMuted","canDelete","selectCanDeleteTopic","Topic","deleteTopic","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","canToggleClosed","getCanManageTopic","canTogglePinned","actionUnreadMark","actionCloseTopic","useTopicContextActions","ForumPanel","onOpenAnimationStart","scrollTopHandlerRef","setIsScrolled","handleClose","handleToggleChatInfo","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","waitForTransitionEnd","onTransitionEnd","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","beforeChildren","renderTopics","GENERAL_TOPIC_ID","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeTauriListener","tauri","getCurrentWindow","tauriWindow","onResized","setupTauriListener","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","getSingularPaidMedia","singularMedia","accumulate","initValue","accumulator","calculateContainerSize","layout","sides","calculateAlbumLayout","ratios","isSingleMessage","allMedia","getRatios","proportions","ratio","getProportions","averageRatio","getAverageRatio","albumCount","forceCalc","maxWidth","getAvailableWidth","params","minWidth","spacing","originalRatios","cropRatios","attempts","pushAttempt","lineCounts","heights","currentCount","multiHeight","attemptCount","sum","first","second","third","fourth","optimalAttempt","optimalDiff","lineCount","totalHeight","bad1","bad2","line","optimalCounts","optimalHeights","rowCount","colCount","lineHeight","col","layoutWithComplexLayouter","AlbumRectPart","layoutTwoTopBottom","layoutTwoLeftRightEqual","minimalWidth","secondWidth","firstWidth","layoutTwoLeftRight","layoutTwo","firstHeight","thirdHeight","secondHeight","rightWidth","leftWidth","layoutThreeLeftAndOther","layoutThreeTopAndOther","layoutThree","w","h0","w0","w2","w1","h1","layoutFourTopAndOther","h2","layoutFourLeftAndOther","layoutFour","containerStyle","initializationDeferred","Deferred","IS_TRANSLATION_SUPPORTED","CHAT_STATS","throttledMakeChatDecision","updateChatDetectedLanguage","chatStats","messagesChecked","translatableCount","detectableCount","languageOccurrences","isTranslatable","occurrences","QUICK_REACTION_AREA_WIDTH","QUICK_REACTION_AREA_HEIGHT","GROUP_MESSAGE_HOVER_ATTRIBUTE","useOuterHandlers","selectMessage","canReply","isContextMenuShown","quickReactionRef","shouldHandleMouseLeave","sendDefaultReaction","isQuickReactionVisible","markQuickReactionVisible","unmarkQuickReactionVisible","isSwiped","markSwiped","unmarkSwiped","doubleTapTimeoutRef","handleMouseMove","quickReactionContainer","quickReactionX","quickReactionWidth","quickReactionY","quickReactionHeight","isVisibleX","isVisibleY","excludedClosestSelector","clearInterval","getIsKeyboardVisible","handleTap","handleDoubleClick","quoteOffset","handleContentDoubleClick","handleSendQuickReaction","lastGroupElement","getLastElementInDocumentGroup","handleDocumentGroupMouseLeave","handleDocumentGroupMouseEnter","nextElementSibling","renderPictogram","srcUrl","getPictogramDimensions","EmbeddedStory","isFullStory","isExpiredStory","isVideoStory","getStoryMediaHash","pictogramUrl","handleFastClick","shouldReset","TopicChip","getTopicColorCssVariable","blankSrc","withSelectControl","WrappedComponent","noSelectControls","selectIsMessageSelected","toggleMessageSelection","handleMessageSelect","withShift","newProps","dims","PhotoWithSelect","VideoWithSelect","uploadsByKey","fileUploads","byMessageKey","Album","hasCustomAppendix","albumLayout","cancelUploadMedia","mediaCount","handlePaidMediaClick","handleAlbumMessageClick","handleCancelUpload","containerWidth","renderingPaidMedia","paidPhotoOrPreview","paidVideoOrPreview","fileUpload","getMessageKey","useAnimatedEmoji","soundId","activeEmojiInteractions","preferredSize","interactWithAnimatedEmoji","sendEmojiInteraction","sendWatchingEmojiInteraction","audioRef","soundMediaData","interactions","startedInteractions","sendInteractionBunch","startSize","isReversed","performance","interactionMessageId","customEmojiId","selectAnimatedEmojiEffect","selectAnimatedEmojiSound","AnimatedCustomEmoji","getCustomEmojiSize","LIKE_STICKER_ID","isBig","withSharedAnimation","AnimatedEmoji","forceLoadPreview","quality","forcePreview","CommentButton","isCustomShape","asActionButton","shouldRenderLoading","useAsyncRendering","originMessageId","recentReplierIds","originChannelId","recentRepliers","hasUnread","commentsText","getContactName","contact","firstName","lastName","Contact","openAddContactDialog","isRegistered","getCanAddContact","handleAddContact","emojiIconClassName","ContextMenuContainer","COLOR","FactCheck","isToggleDisabled","cutoutRef","isCollapsible","setIsCollapsed","useCollapsibleLines","countryLocalized","countryCode","canExpand","handleExpand","handleToggle","Separator","Game","game","getGamePreviewPhotoHash","getGamePreviewVideoHash","videoBlobUrl","handleGameClick","getMessageText","giveaway","channelIds","giftSticker","selectGiftStickerForDuration","months","Giveaway","isLoadingInfo","giveawayInfo","setGiveawayInfo","giveawayResults","isResults","untilDate","prizeDescription","quantity","winnersCount","hasEnded","translatedNames","countries","handlePeerClick","handleShowInfoClick","callApi","handleCloseInfo","giveawayInfoTitle","PartyPopper","winnerIds","PeerChip","withPeerColors","renderGiveawayResultsDescription","formatDateTimeToString","renderGiveawayDescription","isOnlyConfirm","isResultsInfo","isApiPeerChat","endDate","formatDateAtTime","otherChannelsCount","otherChannelsString","isSeveral","firstKey","giveawayDuration","firstParagraph","additionalPrizes","secondKey","secondParagraph","activatedCount","isRefunded","isWinner","lastParagraph","disallowedCountry","adminDisallowedChatId","disallowedChat","disallowedChatTitle","joinedTooEarlyDate","isParticipating","renderGiveawayInfo","InlineButtons","renderIcon","RE_TME_LINK","buttonType","Invoice","invoice","getMessageInvoice","isTest","photoUrl","getWebDocumentHash","crossOrigin","formatCurrency","InvoiceMediaPreview","isConnected","openInvoice","loadExtendedMedia","refreshExtendedMedia","isExtendedMedia","spoiler","buy","lock","formatCurrencyAsString","TIMER_CIRCUMFERENCE","TIMER_RADIUS","MOVE_THRESHOLD","PinSvg","Location","countdownRef","location","getMessageLocation","serverTime","isExpired","isGeoLiveExpired","secondsBeforeEnd","setPoint","shouldRenderText","prevMediaBlobUrl","mapBlobUrl","accuracyRadiusPx","accuracyRadius","updateCountdown","countdownEl","svgEl","lastElementChild","timerEl","timeLeft","formatCountdownShort","renderPin","pinClassName","heading","venueType","iconSrc","mapPin","renderOverlay","formatLocationLastUpdate","editDate","renderInfo","MessageMeta","signature","withReactionOffset","repliesThreadInfo","renderQuickReactionButton","isTranslated","withFullDate","onTranslationClick","onEffectClick","onOpenThread","markActivated","handleImportedClick","dateTitle","createDateTime","timeFormat","editDateTime","isEdited","forwardedDateTime","savedDate","viewsTitle","forwardsCount","repliesTitle","isImported","isVideoProcessingPending","MessagePhoneCall","reason","isMissed","handleCall","formattedDuration","formatTimeDuration","timeFormatted","getCallMessageKey","PaidMediaOverlay","isClickable","isBought","starsAmount","getPercentage","total","PollOption","answer","voteResults","totalVoters","maxVotersCount","correctResults","option","correctAnswer","showIcon","isChosen","answerPercent","votersCount","finalPercent","setFinalPercent","lineWidth","isAnimationDoesNotStart","lineStyle","getPollTypeString","summary","isPublic","closed","quiz","getReadableVotersCount","Poll","onSendVote","loadMessage","openPollResults","isSubmitting","setIsSubmitting","chosenOptions","setChosenOptions","wasSubmitted","setWasSubmitted","closePeriod","setClosePeriod","closeDate","timerCircleRef","hasVoted","canVote","canViewResult","isMultiple","multipleChoice","recentVoterIds","isCorrect","answers","chosen","timer","recentVoters","handleRadioChange","handleCheckboxChange","handleVoteClick","handleViewResultsClick","showSolution","solution","solutionEntities","question","CheckboxGroup","selected","loadingOptions","isRound","RadioGroup","loadingOption","Sticker","withEffect","onStopEffect","effectRef","hasEffect","IS_WEBM_SUPPORTED","canLoad","mediaHashEffect","effectBlobUrl","isPlayingEffect","startPlayingEffect","stopPlayingEffect","handleEffectEnded","shouldRenderEffect","openModal","isMemojiSticker","getStickerDimensions","fullMediaClassName","AnimatedSticker","imageHash","imgBlobUrl","isSinglePeer","isSingleStory","BaseStory","selectPeerStories","targetUser","thumbUrl","TodoList","todoList","toggleTodoCompleted","completions","othersCanComplete","completedTasks","setCompletedTasks","completedTasksSet","canToggle","completedIds","itemId","handleTaskLabelClick","handleTaskToggle","newCompletedTasks","newCompletedId","newIncompletedId","incompletedIds","isReadOnly","tasks","task","completedBy","subLabel","getPeerFullTitle","onClickLabel","WebPageUniqueGift","pattern","isHover","markHover","unmarkHover","centerEmptiness","ringsCount","ovalFactor","WebPage","messageWebPage","onDocumentClick","onContainerClick","onAudioPlay","onCancelMediaTransfer","openTelegramLink","stickersRef","handleMediaClick","handleContainerClick","fullWebPage","hasCustomColor","isWithTextColor","documents","linkTimestamp","handleOpenTelegramLink","isStory","isGift","quickButtonLangKey","getWebpageButtonLangKey","isEmoji","quickButtonTitle","isArticle","isSquarePhoto","getIsSmallPhoto","isMediaInteractive","EmojiIconBackground","emojiDocumentId","isSafe","caption","noForcedUpperCase","QUICK_REACTION_SIZE","EXTRA_SPACE_FOR_REACTIONS","activeReactions","loadingThread","viaBotId","transcriptionId","viaBusinessBotId","selectFullWebPageFromMessage","isGroup","webPageStoryData","webPageStory","botSender","senderAdminMember","adminMembersById","isThreadTop","replyFrom","getMessageReplyInfo","storyReplyPeerId","storyReplyId","getStoryReplyInfo","shouldHideReply","replyMessage","selectReplyMessage","forwardHeader","replyMessageSender","selectSenderFromHeader","replyMessageForwardSender","replyMessageChat","isReplyPrivate","replyStory","storySender","selectUploadProgress","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","isResizingContainer","quote","focusedQuote","focusedQuoteOffset","scrollTargetPosition","middleSearch","selectCurrentMiddleSearch","highlight","isHashtag","getMessageSingleRegularEmoji","animatedCustomEmoji","getMessageSingleCustomEmoji","selectCanReplyToMessage","isInDocumentGroup","documentGroupFirstMessageId","selectMessageIdsByGroupId","reactionMessage","unreadReactions","hasTopicChip","messageTopic","selectChatTranslations","requestedTranslationLanguage","selectRequestedMessageTranslationLanguage","requestedChatTranslationLanguage","areTranslationsEnabled","hasActiveReactions","senderBoosts","boostsApplied","chatLevel","boostLevel","transcribeMinLevel","groupTranscribeLevelMin","canTranscribeVoice","viaBusinessBot","selectPollFromMessage","maxTimestamp","selectMessageTimestampableDuration","selectMessageLastPlaybackTimestamp","minFutureTime","starsSuggestedPostFutureMin","isReplyMediaNsfw","selectIsMessageProtected","isGroupSelected","selectIsDocumentGroupSelected","isPinnedList","shouldLoopStickers","selectShouldLoopStickers","defaultReaction","selectDefaultReaction","transcriptions","transcribedText","shouldDetectChatLanguage","selectShouldDetectChatLanguage","withAnimatedEffects","isLoadingComments","loadingChatId","loadingMessageId","tags","savedReactionTags","clickSuggestedMessageButton","rejectSuggestedPost","openSuggestedPostApprovalModal","disableContextMenuHint","bottomMarkerRef","setTranscriptionHidden","isPlayingSnapAnimation","setIsPlayingSnapAnimation","isPlayingDeleteAnimation","setIsPlayingDeleteAnimation","requestEffect","hideEffect","isDeclineDialogOpen","openDeclineDialog","closeDeclineDialog","declineReason","setDeclineReason","contextMenuTarget","hasMessageReply","isReplyToMessage","paidMediaPhoto","paidMediaVideo","messageReplyInfo","storyReplyInfo","withVoiceTranscription","hasStoryReply","hasThread","getMessageCustomShape","hasAnimatedEmoji","hasReactions","areReactionsEmpty","isLinkedChannelPost","isMention","canShowSenderBoosts","isStoryMention","msg","isInDocumentGroupNotFirst","isInDocumentGroupNotLast","canShowActionButton","canForward","isForwardingAllowed","canFocus","fromMessageId","hasFactCheck","hasForwardedCustomShape","hasSubheader","childMessageIds","messageColorPeer","senderPeer","handleSenderClick","handleViaBotClick","handleReplyClick","handleDocumentClick","handleAudioPlay","handleAlbumMediaClick","handlePhotoMediaClick","handleVideoMediaClick","handleMetaClick","handleTranslationClick","handleOpenThread","handleReadMedia","handleVoteSend","handleGroupForward","handleForward","handleFocus","handleFocusForwarded","handleDocumentGroupSelectAll","handleTopicChipClick","handleStoryClick","isTranslatingChat","markMessagesRead","sendPollVote","openForwardMenu","searchChatMediaMessages","replyToTopId","isQuote","channelPostId","focusMessageId","replyMessageId","ScheduledInline","openMediaViewerWithPhotoOrVideo","withDynamicLoading","currentMediaMessageId","videoContent","webpageTimestamp","albumMessageId","albumIndex","ScheduledAlbum","originalChatId","savedFromPeerId","groupedChatId","selectWithGroupedId","useInnerHandlers","handleEffectClick","isPartialAlbumDelete","isDeleting","textMessage","hasTextContent","hasMessageText","setLanguage","detectLanguage","useTextLanguage","previousMetadata","processMessageMetadata","useDetectChatLanguage","shouldTranslate","isMessageTranslatable","isTranslationPending","previousTranslatedText","currentTranslatedText","commentsThreadInfo","isLocalWithCommentButton","isMediaWithCommentButton","withCommentButton","withQuickReactionButton","hasOutsideReactions","hasCommentCounter","hasBottomCommentButton","hasActionButton","isGeoLiveActive","peerColorClass","isInvertibleMedia","classNames","MESSAGE_CONTENT_CLASS_NAME","isMediaWithNoText","hasInlineKeyboard","isViaBot","hasFooter","emojiOnlyCount","EMOJI_SIZES","buildContentClassName","withAppendix","paidMessageStarsInMeta","metaPosition","reactionsPosition","quickReactionPosition","useFocusMessage","viaBusinessBotTitle","canShowPostAuthor","useMessageResizeObserver","bottomMarker","isElementInViewport","unreadMentionIds","extraPadding","reactionsMaxWidth","previewWidth","previewHeight","calculateDimensionsForMessageMedia","fromOwnMessage","renderMessageText","isForAnimation","MessageText","messageOrStory","canBeEmpty","ReactionStaticEmoji","renderReactionsAndMeta","Reactions","metaChildren","noRecentReactors","renderInvertedMediaContent","textContentClass","footerClass","hasContentAfterText","isMetaInText","renderWebPage","renderInvertibleMediaContent","getMessageWebPage","shouldRenderSenderName","renderForwardTitle","handleSuggestedMessageButton","handleDeclineReasonChange","handleDeclineConfirm","rejectComment","renderSenderName","shouldSkipRenderForwardTitle","shouldSkipRenderAdminTitle","senderEmojiStatus","senderIsPremium","shouldRenderForwardAvatar","hasBotSenderUsername","senderColor","EMOJI_STATUS_LOOP_LIMIT","fakeType","FakeIcon","forwardAuthor","shouldRenderSuggestedPostButtons","isAccepted","isRejected","isSuggestedPostExpired","onCopy","onDoubleClick","onMouseMove","shouldReadMedia","EmbeddedMessage","forwardSender","Story","StoryMention","isOutside","targetHref","InputText","NBSP","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","replyForwardInfo","forwardSendersTitle","peerTitles","conjunction","senderChatTitle","forwardSenderTitle","areSendersSame","priceText","TON_CURRENCY_CODE","formatTonAsIcon","shouldConvertFromNanos","scheduleText","getMediaContentTypeDescription","renderMediaContentType","renderTextContent","isReplyToQuote","renderSender","isFullVideo","shouldRenderVideo","freezeWhenClosed","preloadedStories","canPreload","aroundStoryId","isArray","mediaHashes","isStream","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","head","autoplay","disableRemotePlayback","preloadProgressive","preloadHashes","preloadIds","findIdsAroundCurrentId","currentStoryId","altVideos","getPreloadMediaHashes","dependencies","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","rel","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","fullSize","startPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","handleEnded","effectClassName"],"sourceRoot":""}