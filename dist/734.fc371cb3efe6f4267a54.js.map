{"version":3,"file":"734.fc371cb3efe6f4267a54.js","mappings":"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sBAAwB04B,EAAAA,IAClEC,cAAcF,EAAAA,EAAAA,GAAmBz4B,EAAQ,iBACzCsqB,uBACA2J,wBACApF,mBAAoB7uB,EAAO6uB,mBAC3BsF,WACAJ,qBACA6E,sBAAsBC,EAAAA,EAAAA,KAA2B74B,GACjD84B,eAAgBxO,KAAyByO,EAAAA,EAAAA,KAA+B/4B,GACxEg5B,uBAAuBC,EAAAA,EAAAA,KAA4Bj5B,GACnDk5B,qBAAsB3P,GAAkBoI,IAAmBD,IAAkBuD,EAC7ExT,uBAAwBzhB,EAAOuyB,SAASC,MAAM/Q,uBAC9CgT,oBACA0E,YAAan5B,EAAOo5B,QAAQD,YAC5BvE,eACAyE,mBAAoBr5B,EAAOs5B,aAAaC,aACxCD,aAAct5B,EAAOs5B,aAAap3B,KAClCgzB,sBACAvG,YACAI,gBAAgBxuB,EAAAA,EAAAA,KAAeP,GAAQ+uB,eACvCyK,wBAAyB3H,GAAc2H,wBACvC9D,UACAE,mBACAT,sBACAE,gBACAE,oBACAO,oBACD,GAvJe/1B,EApvDwB05B,EAC1C9b,OACAwY,gBACAuD,gBACAzE,oBACAoB,yBACAsD,UACAxyB,WACAyyB,aACAC,UACAC,SACA/X,kBACA9hB,UACA6gB,YACAwQ,WACAyC,sBACAtM,mBACAkB,SACAzoB,QACA6xB,gBACA6C,gBACAZ,2BACA1J,wBACA2J,yBACAvC,iBACAnI,kBACAgN,aACAiC,iBACAhC,sBACAE,sBACAkC,wBACAnQ,gBACAuO,aACApE,wBACAkE,0BACAiD,oBACAnD,uBACAK,oBACAG,uBACAE,mBACA7M,iBACAqI,eACA6F,gBACAlB,wBACArF,yBACAC,4BACAI,qBACAC,iBACAgF,gBACAE,cACAE,sBACAE,eACA1E,cACAC,cACAN,YACAmB,gBACAZ,kBACAE,uBACAyE,iBACA7W,cACAgX,sBACAzJ,sBACAlqB,SACAwvB,YACA7B,+BACA0H,4BACAC,mBACAC,WACA/4B,aACA80B,sBACAC,gBACA4C,iBACAE,yBACAvX,0BACAgT,qBACA0E,eACAD,uBACAG,sBACAC,gBACApE,uBACAiF,aACApL,kBACAJ,aACA6K,2B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B,GAAc,CAAEhe,gBAAgBqf,EAAAA,EAAAA,KAAqB9jE,EAAQ4E,EAA6B,cAApB6iB,OAC5C,iBAAnB3iB,IAA+B,CAAEA,sBACxC68G,IAAa,CACfE,kBACAE,oBACAC,uBACAE,gBACAC,yBAEF0B,gBACAqC,KAAMlmH,EAAOmmH,mBAAmB3zF,MAChC4xF,sBACAC,kBACA3uF,UACAyc,QACAoyE,gBACAE,yBACD,GA/Ne1kH,EA52CuBqmH,EACzCxhH,UACAyhH,+BACA91D,gCACA5B,gCACAwuC,QACAl4F,YACA8E,aACA01G,iBACA6G,aACA1P,YACA2P,kBACAC,cACA7G,iBACA3kD,YACAyrD,gBACAC,yBACAhH,wBACAr6G,kBACAmgH,mBACAmB,gBACAhiH,SACAu7G,mBACAl3F,UACAo3F,iBACAC,gBACAC,aACAG,eACAK,mBACAC,gBACAG,sBACAE,6BACAC,oBACAG,cACAF,kBACAG,eACAh9D,kBACA3/C,kBACAk+G,qBACA8C,qBACAjgE,eACA++D,mBACAjD,aACAE,kBACAK,gBACAH,oBACAI,wBACAH,uBACAv5F,gBACAc,kBACAk/B,iBACAE,uBACApyB,aACAwpF,WACAvc,YACA8e,aACA12C,iBACA62C,uBACAmB,sBACA+B,iBACApiB,kBACAp+F,cACA2/G,mBACAhkG,YACAqiG,mBACAltF,sBACAmvF,mBACAnc,2BACAxhF,mBACAu9F,gBACA5gD,YACAh/D,iBACAmoG,oBACA0X,oBACAC,sBACA/nE,yBACAu5D,qBACA0M,qBACAwD,wBACArG,qBACAgD,gBACAD,gBACAjzD,oBACAszD,0BACA8B,4BACAhC,gCACAnzD,oCACAu1D,uBACA5F,gBACAxkB,eACAmI,yBACAtmD,sBACAumE,gBACAqC,QACA9B,sBACAC,kBACA3uF,UACAyc,QACAoyE,gBACAE,yBACAoC,gCAEA,MAAM,uBACJlgB,GAAsB,qBACtBrgF,GAAoB,uBACpBwgG,GAAsB,sBACtBC,GAAqB,iBACrBtiD,GAAgB,iBAChBuiD,KACEzlH,EAAAA,EAAAA,MAGEyB,IAAMiE,EAAAA,EAAAA,I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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/hooks/useHeaderPane.tsx","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getSingularPaidMedia.ts","webpack://telegram-t/./src/components/middle/message/helpers/calculateAlbumLayout.ts","webpack://telegram-t/./src/util/languageDetection.ts","webpack://telegram-t/./src/components/middle/message/hooks/useDetectChatLanguage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOuterHandlers.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStory.tsx","webpack://telegram-t/./src/components/common/TopicChip.tsx","webpack://telegram-t/./src/components/common/TopicChip.module.scss?5208","webpack://telegram-t/./src/components/middle/message/hocs/withSelectControl.tsx","webpack://telegram-t/./src/components/middle/message/Album.tsx","webpack://telegram-t/./src/components/common/hooks/useAnimatedEmoji.ts","webpack://telegram-t/./src/components/middle/message/AnimatedCustomEmoji.tsx","webpack://telegram-t/./src/components/middle/message/AnimatedEmoji.tsx","webpack://telegram-t/./src/components/middle/message/CommentButton.tsx","webpack://telegram-t/./src/components/middle/message/Contact.module.scss?fec1","webpack://telegram-t/./src/components/middle/message/Contact.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/FactCheck.module.scss?3842","webpack://telegram-t/./src/components/middle/message/FactCheck.tsx","webpack://telegram-t/./src/components/middle/message/Game.tsx","webpack://telegram-t/./src/components/middle/message/Giveaway.module.scss?9b0c","webpack://telegram-t/./src/components/middle/message/Giveaway.tsx","webpack://telegram-t/./src/components/middle/message/InlineButtons.tsx","webpack://telegram-t/./src/components/middle/message/Invoice.tsx","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.module.scss?19f6","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.tsx","webpack://telegram-t/./src/components/middle/message/Location.tsx","webpack://telegram-t/./src/components/middle/message/MessageMeta.tsx","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.module.scss?15a3","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.tsx","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.module.scss?e3d6","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.tsx","webpack://telegram-t/./src/components/middle/message/PollOption.tsx","webpack://telegram-t/./src/components/middle/message/Poll.tsx","webpack://telegram-t/./src/components/middle/message/Sticker.module.scss?30d0","webpack://telegram-t/./src/components/middle/message/Sticker.tsx","webpack://telegram-t/./src/components/middle/message/Story.tsx","webpack://telegram-t/./src/components/middle/message/StoryMention.tsx","webpack://telegram-t/./src/components/middle/message/Message.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useInnerHandlers.ts","webpack://telegram-t/./src/hooks/useTextLanguage.ts","webpack://telegram-t/./src/components/middle/message/helpers/buildContentClassName.ts","webpack://telegram-t/./src/components/middle/message/MessageAppendix.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.module.scss?8703","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/global/selectors/limits.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useIntervalForceUpdate.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/progressiveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isPlaying) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <Icon name={isDownloading ? 'close' : 'arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <Icon\n              name={(isTranscribed || isTranscriptionError) ? 'down' : 'transcribe'}\n              className={buildClassName(\n                'transcribe-icon',\n                (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n              )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media!.duration) : formatMediaDuration(media!.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst VALID_TARGET_IDS = new Set([EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID]);\nconst CLOSEST_CONTENT_EDITABLE_SELECTOR = 'div[contenteditable]';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = (e.target as HTMLElement)?.closest(CLOSEST_CONTENT_EDITABLE_SELECTOR);\n      if (!input || !VALID_TARGET_IDS.has(input.id)) {\n        return;\n      }\n\n      e.preventDefault();\n\n      // Some extensions can trigger paste into their panels without focus\n      if (document.activeElement !== input) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text');\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiMessage } from '../../../../api/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({\n        chatId,\n        messageIds: [editedMessage.id],\n        isSchedule: type === 'scheduled',\n      });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  canEditMedia,\n  editingMessage,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId\n          && bot.attachMenuPeerTypes && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useOldLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ chatId: message.chatId, messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <Icon name=\"webapp\" className={buildClassName('bot-menu-icon', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (sender && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId, WebPageMediaSize } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n  attachmentSettings,\n  isEditing,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isShown);\n\n  const hasMediaSizeOptions = webPagePreview?.hasLargeMedia;\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector('.web-page-preview-context-menu .bubble'),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"web-page-preview-context-menu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('PreviewSender.MoveTextUp')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang(('PreviewSender.MoveTextDown'))}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ChatInput.EditLink.LargerMedia')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang(('ChatInput.EditLink.SmallerMedia'))}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ChatInput.EditLink.RemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)} ref={ref}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\" onClick={handlePreviewClick}>\n          <Icon name=\"link\" />\n        </div>\n        <WebPage\n          message={messageStub}\n          inPreview\n          theme={theme}\n          onContainerClick={handlePreviewClick}\n          isEditing={isEditing}\n        />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiDraft,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  GlobalState, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition,\n  InlineBotSettings,\n  ISettings,\n  MessageList,\n  MessageListType,\n  ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  DEFAULT_MAX_MESSAGE_LENGTH,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNoWebPage,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n    maxMessageLength: number;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  onForward,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n  maxMessageLength,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    if (chatId && chat && !sendAsPeerIds && isReady && (isChatSuperGroup(chat) || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot, isInStoryViewer),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : maxMessageLength;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    const effectId = effect?.id;\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n      if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        isInvertedMedia,\n        effectId,\n        webPageMediaSize: attachmentSettings.webPageMediaSize,\n        webPageUrl: hasWebPagePreview ? webPagePreview!.url : undefined,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n    clearDraft({\n      chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n    });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        chatId,\n        threadId,\n        queryId,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        threadId,\n        chatId,\n        isSilent,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ sendCompressed, sendGrouped, isInvertedMedia }, scheduledAt, currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      sendSilent({ sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => { saveEffectInDraft({ chatId, threadId, effectId: undefined }); });\n\n  const handleStopEffect = useLastCallback(() => { hideEffectInComposer({ }); });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : isInStoryViewer ? lang('StoryRepliesLocked') : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <Icon name=\"schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={lang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <Icon name=\"heart\" className={buildClassName(isSentStoryReactionHeart && 'story-reaction-heart')} />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <Icon name=\"send\" />\n        <Icon name=\"microphone-alt\" />\n        {onForward && <Icon name=\"forward\" />}\n        {isInMessageList && <Icon name=\"schedule\" />}\n        {isInMessageList && <Icon name=\"check\" />}\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const userFullInfo = isChatWithUser ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !userFullInfo?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n    && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    const maxMessageLength = global.config?.maxMessageLength || DEFAULT_MAX_MESSAGE_LENGTH;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && (userFullInfo || chatFullInfo)?.hasScheduledMessages\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: userFullInfo ? (userFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: userFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview: selectTabState(global).webPagePreview,\n      isContactRequirePremium: userFullInfo?.isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n      maxMessageLength,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useOldLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Icon from './icons/Icon';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <Icon\n            name={actionIcon || 'download'}\n            className={buildClassName('action-icon', shouldSpinnerRender && 'hidden')}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  useIntervalForceUpdate(UPDATE_INTERVAL);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPeerPhotos, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectPeerPhotos,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    emojiStatusSticker?: ApiSticker;\n    emojiStatusSlug?: string;\n    profilePhotos?: ApiPeerPhotos;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\nconst STATUS_UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  emojiStatusSticker,\n  emojiStatusSlug,\n  profilePhotos,\n  peerId,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n    openUniqueGiftBySlug,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useIntervalForceUpdate(user ? STATUS_UPDATE_INTERVAL : undefined);\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (emojiStatusSlug) {\n      openUniqueGiftBySlug({ slug: emojiStatusSlug });\n      return;\n    }\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && profilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && profilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={profilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n    const emojiStatusSlug = emojiStatus?.type === 'collectible' ? emojiStatus.slug : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      emojiStatusSticker,\n      emojiStatusSlug,\n      profilePhotos,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message)?.text !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatTranslatedMessages } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getPeerTitle,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = containedMedia && getMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useOldLang();\n\n  const senderTitle = sender ? getPeerTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getPeerTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getPeerTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        asPreview: true,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content, {});\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <span className=\"embedded-sender-wrapper\">\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderForwardSender() {\n    return forwardSenderTitle && !areSendersSame && (\n      <span className=\"embedded-forward-sender-wrapper\">\n        <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n        <span className=\"forward-sender-title\">\n          {renderText(forwardSenderTitle)}\n        </span>\n      </span>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      peer={sender}\n      emojiIconClassName=' className=\"EmbeddedMessage--background-icons\"'\n      ref={ref}\n      shouldReset\n      noUserColors={noUserColors}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n        'no-selection',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {renderForwardSender()}\n        </div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(lang(valueKey, [formattedDate, age], undefined, age))}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"botVerificationSection\":\"RWFu5ENh\",\"sectionInfo\":\"IrqRJFxm\",\"botVerificationIcon\":\"b32hsSPS\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiBotVerification,\n  ApiChat,\n  ApiCountryCode,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUsername,\n} from '../../../api/types';\nimport type { BotAppPermissions } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectBotAppPermissions,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport CustomEmoji from '../CustomEmoji';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n  isBotCanManageEmojiStatus?: boolean;\n  botAppPermissions?: BotAppPermissions;\n  botVerification?: ApiBotVerification;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst BOT_VERIFICATION_ICON_SIZE = 16;\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n  isBotCanManageEmojiStatus,\n  botAppPermissions,\n  botVerification,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n    toggleUserEmojiStatusPermission,\n    toggleUserLocationPermission,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    if (isTopicInfo) {\n      updateTopicMutedState({\n        chatId: chatId!,\n        topicId: topicId!,\n        isMuted: !isMuted,\n      });\n    } else {\n      updateChatMutedState({ chatId: chatId!, isMuted: !isMuted });\n    }\n  });\n\n  const manageEmojiStatusChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserEmojiStatusPermission({ botId: user.id, isEnabled: !isBotCanManageEmojiStatus });\n  });\n\n  const handleLocationPermissionChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserLocationPermission({ botId: user.id, isAccessGranted: !botAppPermissions?.geolocation });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  if (chat?.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      { hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            size=\"smaller\"\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" narrow ripple onClick={handleNotificationChange}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n      {userFullInfo && 'isBotAccessEmojiGranted' in userFullInfo && (\n        <ListItem icon=\"user\" narrow ripple onClick={manageEmojiStatusChange}>\n          <span>{oldLang('BotProfilePermissionEmojiStatus')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionEmojiStatus')}\n            checked={isBotCanManageEmojiStatus}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botAppPermissions?.geolocation !== undefined && (\n        <ListItem icon=\"location\" narrow ripple onClick={handleLocationPermissionChange}>\n          <span>{oldLang('BotProfilePermissionLocation')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionLocation')}\n            checked={botAppPermissions?.geolocation}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botVerification && (\n        <div className={styles.botVerificationSection}>\n          <CustomEmoji\n            className={styles.botVerificationIcon}\n            documentId={botVerification.iconId}\n            size={BOT_VERIFICATION_ICON_SIZE}\n          />\n          {botVerification.description}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const botAppPermissions = chatOrUserId ? selectBotAppPermissions(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const botVerification = userFullInfo?.botVerification || chatFullInfo?.botVerification;\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      botAppPermissions,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n      isBotCanManageEmojiStatus: userFullInfo?.isBotCanManageEmojiStatus,\n      botVerification,\n    };\n  },\n)(ChatExtra));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiDraft,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  groupStatefulContent,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectSender,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n            isSelected={isSelected}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              hasMiniApp={user?.hasMainMiniApp}\n              topics={topics}\n              isSelected={isSelected}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { isOutgoing, forwardInfo } = lastMessage || {};\n    const savedDialogSender = isSavedDialog && forwardInfo?.fromId ? selectPeer(global, forwardInfo.fromId) : undefined;\n    const messageSender = lastMessage ? selectSender(global, lastMessage) : undefined;\n    const lastMessageSender = savedDialogSender || messageSender;\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const userStatus = selectUserStatus(global, chatId);\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  hasMiniApp?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n  isSelected?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n  hasMiniApp,\n  isSelected,\n}) => {\n  const { requestMainWebView } = getActions();\n\n  const oldLang = useOldLang();\n\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = topics\n      && Object.values(topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (topics && !hasUnmutedUnreadTopics);\n  }, [topics, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened || hasMiniApp,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chat.id,\n      peerId: chat.id,\n      theme,\n    });\n  });\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <Icon name=\"heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <Icon name=\"mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <Icon name=\"pinned-chat\" />\n      </div>\n    );\n\n    const miniAppButton = hasMiniApp && (\n      <Button\n        color={isSelected ? 'secondary' : 'primary'}\n        className=\"ChatBadge miniapp\"\n        pill\n        size=\"tiny\"\n        onClick={handleOpenApp}\n      >\n        {oldLang('BotOpen')}\n      </Button>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    // Show only if empty or have pinned icon\n    if (hasMiniApp && (elements.length === 0 || visiblePinnedElement)) return miniAppButton;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\nconst ARCHIVE_CUSTOM_PEER: CustomPeer = {\n  isCustomPeer: true,\n  title: 'Archived Chats',\n  avatarIcon: 'archive-filled',\n  customPeerAvatarColor: '#9EAAB5',\n};\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <Icon name=\"archive-filled\" className={styles.icon} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <Avatar peer={ARCHIVE_CUSTOM_PEER} />\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <Icon name=\"settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { groupStatefulContent } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectSender,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport Icon from '../../common/icons/Icon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  lastMessageSender?: ApiPeer;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <Icon name=\"lock-badge\" className={styles.closedIcon} />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { isOutgoing } = lastMessage || {};\n    const lastMessageSender = lastMessage && selectSender(global, lastMessage);\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    return {\n      chat,\n      lastMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n} from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport Icon from '../../../common/icons/Icon';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  lastMessageTopic,\n  lastMessageSender,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const oldLang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? getMessageMediaThumbDataUri(mediaContent) : undefined;\n  const mediaBlobUrl = useMedia(mediaHasPreview ? getMessageMediaHash(mediaContent, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{oldLang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            asPreview: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    const senderName = getMessageSenderName(oldLang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<Icon name=\"share-filled\" className=\"chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<Icon name=\"story-reply\" className=\"chat-prefix-icon\" />)}\n        {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    chat, chatId, draft, isRoundVideo, isTopic, oldLang, lastMessage, lastMessageSender, lastMessageTopic,\n    mediaBlobUrl, mediaThumbnail, observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  getPeerTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getPeerTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID, SVG_NAMESPACE } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport jsxToHtml from '../../../util/element/jsxToHtml';\nimport generateUniqueId from '../../../util/generateUniqueId';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const component = (\n    <svg\n      className={styles.ghost}\n      width={width}\n      height={height}\n      style={`left: ${x}px; top: ${y}px;`}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <defs>\n        {createFilter(filterId, Math.min(width, height), seed)}\n      </defs>\n      <g filter={`url(#${filterId})`}>\n        <foreignObject className={styles.elementContainer} width={width} height={height} />\n      </g>\n    </svg>\n  );\n\n  const svg = jsxToHtml(component)[0] as HTMLElement;\n  const foreignObject = svg.querySelector('foreignObject')!;\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(id: string, smallestSide: number, baseSeed: number = 42) {\n  return (\n    <filter\n      xmlns={SVG_NAMESPACE}\n      id={id}\n      x=\"-150%\"\n      y=\"-150%\"\n      width=\"400%\"\n      height=\"400%\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.5\" numOctaves=\"1\" result=\"dustNoise\" seed={baseSeed} />\n      <feComponentTransfer in=\"dustNoise\" result=\"dustNoiseMask\">\n        <feFuncA type=\"linear\" slope=\"5\" intercept=\"0\">\n          <animate attributeName=\"slope\" values=\"5; 2; 1; 0\" dur={`${DURATION}ms`} fill=\"freeze\" />\n        </feFuncA>\n      </feComponentTransfer>\n      <feComposite in=\"SourceGraphic\" in2=\"dustNoiseMask\" operator=\"in\" result=\"dustySource\" />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"0.015\"\n        numOctaves=\"1\"\n        result=\"displacementNoise1\"\n        seed={baseSeed + 1}\n      />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"1\"\n        numOctaves=\"2\"\n        result=\"displacementNoise2\"\n        seed={baseSeed + 2}\n      />\n      <feMerge result=\"combinedNoise\">\n        <feMergeNode in=\"displacementNoise1\" />\n        <feMergeNode in=\"displacementNoise2\" />\n      </feMerge>\n      <feDisplacementMap in=\"dustySource\" in2=\"combinedNoise\" scale=\"0\" xChannelSelector=\"R\" yChannelSelector=\"G\">\n        <animate attributeName=\"scale\" values={`0; ${smallestSide * 3}`} dur={`${DURATION}ms`} fill=\"freeze\" />\n      </feDisplacementMap>\n    </filter>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { IAnchorPosition, MessageListType, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <Icon name=\"language\" />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <Icon name=\"search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <Icon name=\"phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <Icon name=\"user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <Icon name=\"more\" />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <Icon name={isQuick ? 'photo' : 'document'} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, undefined, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  getIsHeavyAnimating,\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <Icon name=\"lock-badge\" className=\"placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {lang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <Icon name=\"smile\" />\n          <Icon name=\"keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <Icon name=\"smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import React, { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport { filterPeersByQuery } from '../../../../global/helpers/peers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterPeersByQuery({\n      ids: unique([\n        ...((getWithInlineBots() && topInlineBotIds) || []),\n        ...(memberIds || []),\n      ]),\n      query: filter,\n      type: 'user',\n    });\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import {\n  type RefObject,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n} : {\n  ref?: RefObject<RefType | null>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  // eslint-disable-next-line no-null/no-null\n  const localRef = useRef<RefType>(null);\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n    onStateChange?.({\n      height: 0,\n      isOpen: false,\n    });\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <Icon name=\"story-expired\" className={styles.expiredIcon} />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { ApiPaidMedia } from '../../../../api/types';\n\nexport default function getSingularPaidMedia(media?: ApiPaidMedia) {\n  if (!media || media.extendedMedia.length !== 1) {\n    return {\n      photo: undefined,\n      video: undefined,\n    };\n  }\n\n  const singularMedia = media.extendedMedia[0];\n  const isPreview = 'mediaType' in singularMedia;\n  const photo = isPreview ? (!singularMedia.duration ? singularMedia : undefined) : singularMedia.photo;\n  const video = isPreview ? (singularMedia.duration ? singularMedia : undefined) : singularMedia.video;\n\n  return { photo, video };\n}\n","/* eslint-disable no-bitwise */\n// Based on\n// https://github.com/telegramdesktop/tdesktop/blob/dev/Telegram/SourceFiles/ui/grouped_layout.cpp\n// https://github.com/overtake/TelegramSwift/blob/master/Telegram-Mac/GroupedLayout.swift#L83\n\nimport type { ApiDimensions, ApiMessage } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { getMessageContent } from '../../../../global/helpers';\nimport { clamp } from '../../../../util/math';\nimport { getAvailableWidth } from '../../../common/helpers/mediaDimensions';\nimport { calculateMediaDimensions } from './mediaDimensions';\n\nexport const AlbumRectPart = {\n  None: 0,\n  Top: 1,\n  Right: 2,\n  Bottom: 4,\n  Left: 8,\n};\n\ntype IAttempt = {\n  lineCounts: number[];\n  heights: number[];\n};\nexport type IMediaDimensions = {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n};\ntype IMediaLayout = {\n  dimensions: IMediaDimensions;\n  sides: number;\n};\ntype ILayoutParams = {\n  ratios: number[];\n  proportions: string;\n  averageRatio: number;\n  maxWidth: number;\n  minWidth: number;\n  maxHeight: number;\n  spacing: number;\n};\nexport type IAlbumLayout = {\n  layout: IMediaLayout[];\n  containerStyle: ApiDimensions;\n};\n\nfunction getRatios(messages: ApiMessage[], isSingleMessage?: boolean, isMobile?: boolean) {\n  const isOutgoing = messages[0].isOutgoing;\n  const allMedia = (isSingleMessage\n    ? messages[0].content.paidMedia!.extendedMedia.map((media) => (\n      'mediaType' in media ? media : (media.photo || media.video)\n    ))\n    : messages.map((message) => (\n      getMessageContent(message).photo || getMessageContent(message).video\n    ))\n  ).filter(Boolean);\n  return allMedia.map(\n    (media) => {\n      const dimensions = calculateMediaDimensions({\n        media,\n        isOwn: isOutgoing,\n        isMobile,\n      }) as ApiDimensions;\n\n      return dimensions.width / dimensions.height;\n    },\n  );\n}\n\nfunction getProportions(ratios: number[]) {\n  return ratios.map((ratio) => (ratio > 1.2 ? 'w' : (ratio < 0.8 ? 'n' : 'q'))).join('');\n}\n\nfunction getAverageRatio(ratios: number[]) {\n  return ratios.reduce((result, ratio) => ratio + result, 1) / ratios.length;\n}\n\nfunction accumulate(list: number[], initValue: number) {\n  return list.reduce((accumulator, item) => accumulator + item, initValue);\n}\n\nfunction cropRatios(ratios: number[], averageRatio: number) {\n  return ratios.map((ratio) => {\n    return (averageRatio > 1.1 ? clamp(ratio, 1, 2.75) : clamp(ratio, 0.6667, 1));\n  });\n}\n\nfunction calculateContainerSize(layout: IMediaLayout[]) {\n  const styles: ApiDimensions = { width: 0, height: 0 };\n  layout.forEach(({\n    dimensions,\n    sides,\n  }) => {\n    if (sides & AlbumRectPart.Right) {\n      styles.width = dimensions.width + dimensions.x;\n    }\n    if (sides & AlbumRectPart.Bottom) {\n      styles.height = dimensions.height + dimensions.y;\n    }\n  });\n\n  return styles;\n}\n\nexport function calculateAlbumLayout(\n  isOwn: boolean,\n  noAvatars: boolean,\n  album: IAlbum,\n  isMobile?: boolean,\n): IAlbumLayout {\n  const spacing = 2;\n  const ratios = getRatios(album.messages, album.isPaidMedia, isMobile);\n  const proportions = getProportions(ratios);\n  const averageRatio = getAverageRatio(ratios);\n  const albumCount = ratios.length;\n  const forceCalc = ratios.some((ratio) => ratio > 2);\n  const maxWidth = getAvailableWidth(isOwn, false, noAvatars, isMobile);\n  const maxHeight = maxWidth;\n\n  let layout;\n\n  const params = {\n    ratios,\n    proportions,\n    averageRatio,\n    maxWidth,\n    minWidth: 100,\n    maxHeight,\n    spacing,\n  };\n\n  if (albumCount >= 5 || forceCalc) {\n    layout = layoutWithComplexLayouter(params);\n  } else if (albumCount === 2) {\n    layout = layoutTwo(params);\n  } else if (albumCount === 3) {\n    layout = layoutThree(params);\n  } else {\n    layout = layoutFour(params);\n  }\n\n  return {\n    layout,\n    containerStyle: calculateContainerSize(layout),\n  };\n}\n\nfunction layoutWithComplexLayouter({\n  ratios: originalRatios,\n  averageRatio,\n  maxWidth,\n  minWidth,\n  spacing,\n  maxHeight = (4 * maxWidth) / 3,\n}: ILayoutParams) {\n  const ratios = cropRatios(originalRatios, averageRatio);\n  const count = originalRatios.length;\n  const result = new Array(count);\n  const attempts: IAttempt[] = [];\n\n  const multiHeight = (offset: number, attemptCount: number) => {\n    const attemptRatios = ratios.slice(offset, offset + attemptCount);\n    const sum = accumulate(attemptRatios, 0);\n\n    return (maxWidth - (attemptCount - 1) * spacing) / sum;\n  };\n\n  const pushAttempt = (lineCounts: number[]) => {\n    const heights: number[] = [];\n    let offset = 0;\n    lineCounts.forEach((currentCount) => {\n      heights.push(multiHeight(offset, currentCount));\n      offset += currentCount;\n    });\n\n    attempts.push({\n      lineCounts,\n      heights,\n    });\n  };\n\n  for (let first = 1; first !== count; ++first) {\n    const second = count - first;\n    if (first <= 3 && second <= 3) {\n      pushAttempt([first, second]);\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      const third = count - first - second;\n      if (first <= 3 && second <= (averageRatio < 0.85 ? 4 : 3) && third <= 3) {\n        pushAttempt([first, second, third]);\n      }\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      for (let third = 1; third !== count - first - second; ++third) {\n        const fourth = count - first - second - third;\n        if (first <= 3 && second <= 3 && third <= 3 && fourth <= 4) {\n          pushAttempt([first, second, third, fourth]);\n        }\n      }\n    }\n  }\n\n  let optimalAttempt: IAttempt | undefined;\n  let optimalDiff = 0;\n  for (let i = 0; i < attempts.length; i++) {\n    const {\n      heights,\n      lineCounts,\n    } = attempts[i];\n    const lineCount = lineCounts.length;\n    const totalHeight = accumulate(heights, 0) + spacing * (lineCount - 1);\n    const minLineHeight = Math.min(...heights);\n    const bad1 = minLineHeight < minWidth ? 1.5 : 1;\n    const bad2 = (() => {\n      for (let line = 1; line !== lineCount; ++line) {\n        if (lineCounts[line - 1] > lineCounts[line]) {\n          return 1.5;\n        }\n      }\n\n      return 1;\n    })();\n    const diff = Math.abs(totalHeight - maxHeight) * bad1 * bad2;\n\n    if (!optimalAttempt || diff < optimalDiff) {\n      optimalAttempt = attempts[i];\n      optimalDiff = diff;\n    }\n  }\n\n  const optimalCounts = optimalAttempt!.lineCounts;\n  const optimalHeights = optimalAttempt!.heights;\n  const rowCount = optimalCounts.length;\n  let index = 0;\n  let y = 0;\n  for (let row = 0; row !== rowCount; ++row) {\n    const colCount = optimalCounts[row];\n    const lineHeight = optimalHeights[row];\n    const height = Math.round(lineHeight);\n    let x = 0;\n\n    for (let col = 0; col !== colCount; ++col) {\n      const sides = AlbumRectPart.None\n        | (row === 0 ? AlbumRectPart.Top : AlbumRectPart.None)\n        | (row === rowCount - 1 ? AlbumRectPart.Bottom : AlbumRectPart.None)\n        | (col === 0 ? AlbumRectPart.Left : AlbumRectPart.None)\n        | (col === colCount - 1 ? AlbumRectPart.Right : AlbumRectPart.None);\n      const ratio = ratios[index];\n      const width = col === colCount - 1 ? maxWidth - x : Math.round(ratio * lineHeight);\n      result[index] = {\n        dimensions: {\n          x,\n          y,\n          width,\n          height,\n        },\n        sides,\n      };\n      x += width + spacing;\n      ++index;\n    }\n    y += height + spacing;\n  }\n\n  return result;\n}\n\nfunction layoutTwo(params: ILayoutParams) {\n  const {\n    ratios,\n    proportions,\n    averageRatio,\n  } = params;\n  return proportions === 'ww' && averageRatio > 1.4 && ratios[1] - ratios[0] < 0.2\n    ? layoutTwoTopBottom(params)\n    : proportions === 'ww' || proportions === 'qq'\n      ? layoutTwoLeftRightEqual(params)\n      : layoutTwoLeftRight(params);\n}\n\nfunction layoutTwoTopBottom(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const height = Math.round(Math.min(maxWidth / ratios[0], Math.min(maxWidth / ratios[1], (maxHeight - spacing) / 2)));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: height + spacing,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutTwoLeftRightEqual(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const width = (maxWidth - spacing) / 2;\n  const height = Math.round(Math.min(width / ratios[0], Math.min(width / ratios[1], maxHeight)));\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: width + spacing,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutTwoLeftRight(params: ILayoutParams) {\n  const {\n    ratios,\n    minWidth,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const minimalWidth = Math.round(1.5 * minWidth);\n  const secondWidth = Math.min(\n    Math.round(\n      Math.max(\n        0.4 * (maxWidth - spacing),\n        (maxWidth - spacing) / ratios[0] / (1 / ratios[0] + 1 / ratios[1]),\n      ),\n    ),\n    maxWidth - spacing - minimalWidth,\n  );\n  const firstWidth = maxWidth - secondWidth - spacing;\n  const height = Math.min(maxHeight, Math.round(Math.min(firstWidth / ratios[0], secondWidth / ratios[1])));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: firstWidth + spacing,\n      y: 0,\n      width: secondWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutThree(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'n'\n    ? layoutThreeLeftAndOther(params)\n    : layoutThreeTopAndOther(params);\n}\n\nfunction layoutThreeLeftAndOther(params: ILayoutParams) {\n  const {\n    maxHeight,\n    spacing,\n    ratios,\n    maxWidth,\n    minWidth,\n  } = params;\n  const firstHeight = maxHeight;\n  const thirdHeight = Math.round(\n    Math.min(\n      (maxHeight - spacing) / 2,\n      (ratios[1] * (maxWidth - spacing)) / (ratios[2] + ratios[1]),\n    ),\n  );\n  const secondHeight = firstHeight - thirdHeight - spacing;\n  const rightWidth = Math.max(\n    minWidth,\n    Math.round(\n      Math.min(\n        (maxWidth - spacing) / 2,\n        Math.min(\n          thirdHeight * ratios[2],\n          secondHeight * ratios[1],\n        ),\n      ),\n    ),\n  );\n  const leftWidth = Math.min(Math.round(firstHeight * ratios[0]), maxWidth - spacing - rightWidth);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: leftWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: 0,\n      width: rightWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: secondHeight + spacing,\n      width: rightWidth,\n      height: thirdHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutThreeTopAndOther(params: ILayoutParams) {\n  const {\n    maxWidth,\n    ratios,\n    maxHeight,\n    spacing,\n  } = params;\n  const firstWidth = maxWidth;\n  const firstHeight = Math.round(Math.min(firstWidth / ratios[0], 0.66 * (maxHeight - spacing)));\n  const secondWidth = (maxWidth - spacing) / 2;\n  const secondHeight = Math.min(\n    maxHeight - firstHeight - spacing,\n    Math.round(Math.min(\n      secondWidth / ratios[1],\n      secondWidth / ratios[2],\n    )),\n  );\n  const thirdWidth = firstWidth - secondWidth - spacing;\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: firstHeight + spacing,\n      width: secondWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: secondWidth + spacing,\n      y: firstHeight + spacing,\n      width: thirdWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutFour(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'w'\n    ? layoutFourTopAndOther(params)\n    : layoutFourLeftAndOther(params);\n}\n\nfunction layoutFourTopAndOther({\n  maxWidth,\n  ratios,\n  spacing,\n  maxHeight,\n  minWidth,\n}: ILayoutParams) {\n  const w = maxWidth;\n  const h0 = Math.round(Math.min(w / ratios[0], 0.66 * (maxHeight - spacing)));\n  const h = Math.round((maxWidth - 2 * spacing) / (ratios[1] + ratios[2] + ratios[3]));\n  const w0 = Math.max(minWidth, Math.round(Math.min(0.4 * (maxWidth - 2 * spacing), h * ratios[1])));\n  const w2 = Math.round(Math.max(Math.max(minWidth, 0.33 * (maxWidth - 2 * spacing)), h * ratios[3]));\n  const w1 = w - w0 - w2 - 2 * spacing;\n  const h1 = Math.min(maxHeight - h0 - spacing, h);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w,\n      height: h0,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: h0 + spacing,\n      width: w0,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing + w1 + spacing,\n      y: h0 + spacing,\n      width: w2,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutFourLeftAndOther({\n  maxHeight,\n  ratios,\n  maxWidth,\n  spacing,\n  minWidth,\n}: ILayoutParams) {\n  const h = maxHeight;\n  const w0 = Math.round(Math.min(h * ratios[0], 0.6 * (maxWidth - spacing)));\n  const w = Math.round((maxHeight - 2 * spacing) / (1 / ratios[1] + 1 / ratios[2] + 1 / ratios[3]));\n  const h0 = Math.round(w / ratios[1]);\n  const h1 = Math.round(w / ratios[2]);\n  const h2 = h - h0 - h1 - 2 * spacing;\n  const w1 = Math.max(minWidth, Math.min(maxWidth - w0 - spacing, w));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w0,\n      height: h,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: 0,\n      width: w1,\n      height: h0,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + h1 + 2 * spacing,\n      width: w1,\n      height: h2,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n","import type { FastTextApi } from '../lib/fasttextweb/fasttext.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TRANSLATION_SUPPORTED } from './windowEnvironment';\n\nimport Deferred from './Deferred';\nimport { createConnector } from './PostMessageConnector';\n\nconst WORKER_INIT_DELAY = 4000;\n\nconst DEFAULT_THRESHOLD = 0.2;\nconst DEFAULT_LABELS_COUNT = 5;\n\nlet worker: Connector<FastTextApi> | undefined;\nconst initializationDeferred = new Deferred();\n\nif (IS_TRANSLATION_SUPPORTED) {\n  setTimeout(initWorker, WORKER_INIT_DELAY);\n}\n\nfunction initWorker() {\n  if (!worker) {\n    worker = createConnector<FastTextApi>(\n      new Worker(new URL('../lib/fasttextweb/fasttext.worker.ts', import.meta.url)),\n    );\n    initializationDeferred.resolve();\n  }\n}\n\nexport async function detectLanguage(text: string, threshold = DEFAULT_THRESHOLD) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguage', args: [text, threshold] });\n  return result;\n}\n\nexport async function detectLanguageProbability(\n  text: string, labelsCount = DEFAULT_LABELS_COUNT, threshold = DEFAULT_THRESHOLD,\n) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguageProbability', args: [text, labelsCount, threshold] });\n  return result;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport LimitedMap from '../../../../util/primitives/LimitedMap';\nimport { throttle } from '../../../../util/schedulers';\n\n// https://github.com/DrKLO/Telegram/blob/dfd74f809e97d1ecad9672fc7388cb0223a95dfc/TMessagesProj/src/main/java/org/telegram/messenger/TranslateController.java#L35\nconst MIN_MESSAGES_CHECKED = 8;\nconst MIN_TRANSLATABLE_RATIO = 0.3;\nconst MIN_DETECTABLE_RATIO = 0.6;\n\nconst THROTTLE_DELAY = 1000;\nconst MESSAGES_LIMIT = 150;\n\ntype MessageMetadata = {\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage: string | undefined;\n};\n\nconst CHAT_STATS = new Map<string, LimitedMap<number, MessageMetadata>>();\n\nexport default function useDetectChatLanguage(\n  message: ApiMessage, detectedLanguage?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>,\n) {\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    const isTranslatable = Boolean(message.content.text?.text.length);\n    processMessageMetadata(message.chatId, message.id, isTranslatable, detectedLanguage);\n  }, [message, detectedLanguage, isDisabled, getIsReady]);\n}\n\nconst throttledMakeChatDecision = throttle(makeChatDecision, THROTTLE_DELAY);\n\nfunction processMessageMetadata(chatId: string, id: number, isTranslatable: boolean, detectedLanguage?: string) {\n  const chatStats = CHAT_STATS.get(chatId) || new LimitedMap<number, MessageMetadata>(MESSAGES_LIMIT);\n\n  const previousMetadata = chatStats.get(id);\n  if (previousMetadata && previousMetadata.detectedLanguage === detectedLanguage\n    && previousMetadata.isTranslatable === isTranslatable\n  ) {\n    return;\n  }\n\n  chatStats.set(id, {\n    id,\n    isTranslatable,\n    detectedLanguage,\n  });\n\n  CHAT_STATS.set(chatId, chatStats);\n\n  throttledMakeChatDecision(chatId);\n}\n\nfunction makeChatDecision(chatId: string) {\n  const { updateChatDetectedLanguage } = getActions();\n  const chatStats = CHAT_STATS.get(chatId);\n  if (!chatStats) {\n    return;\n  }\n\n  const messagesChecked = chatStats.size;\n  if (messagesChecked < MIN_MESSAGES_CHECKED) {\n    return;\n  }\n\n  let translatableCount = 0;\n  let detectableCount = 0;\n  const languageOccurrences = new Map<string, number>();\n\n  for (const metadata of chatStats.values()) {\n    if (metadata.isTranslatable) {\n      translatableCount++;\n    }\n\n    if (metadata.detectedLanguage) {\n      detectableCount++;\n    }\n\n    const language = metadata.detectedLanguage;\n    if (language) {\n      const occurrences = languageOccurrences.get(language) || 0;\n      languageOccurrences.set(language, occurrences + 1);\n    }\n  }\n\n  const translatableRatio = translatableCount / messagesChecked;\n  const detectableRatio = detectableCount / messagesChecked;\n\n  if (translatableRatio < MIN_TRANSLATABLE_RATIO || detectableRatio < MIN_DETECTABLE_RATIO) {\n    return;\n  }\n\n  const mostFrequentLanguage = Array.from(languageOccurrences.entries())\n    .sort(([, a], [, b]) => b - a)[0][0];\n\n  updateChatDetectedLanguage({\n    chatId,\n    detectedLanguage: mostFrequentLanguage,\n  });\n}\n","import type { RefObject } from 'react';\nimport type React from '../../../../lib/teact/teact';\nimport { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { captureEvents, SwipeDirection } from '../../../../util/captureEvents';\nimport stopEvent from '../../../../util/stopEvent';\nimport { IS_ANDROID, IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport windowSize from '../../../../util/windowSize';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { preventMessageInputBlur } from '../../helpers/preventMessageInputBlur';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\n\nconst ANDROID_KEYBOARD_HIDE_DELAY_MS = 350;\nconst SWIPE_ANIMATION_DURATION = 150;\nconst QUICK_REACTION_DOUBLE_TAP_DELAY = 200;\nconst QUICK_REACTION_AREA_WIDTH = 3 * REM;\nconst QUICK_REACTION_AREA_HEIGHT = Number(REM);\nconst GROUP_MESSAGE_HOVER_ATTRIBUTE = 'data-is-document-group-hover';\n\nexport default function useOuterHandlers(\n  selectMessage: (e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void,\n  containerRef: RefObject<HTMLDivElement>,\n  messageId: number,\n  isInSelectMode: boolean,\n  canReply: boolean,\n  isProtected: boolean,\n  onContextMenu: (e: React.MouseEvent) => void,\n  handleBeforeContextMenu: (e: React.MouseEvent) => void,\n  chatId: string,\n  isContextMenuShown: boolean,\n  quickReactionRef: RefObject<HTMLDivElement>,\n  shouldHandleMouseLeave: boolean,\n  getIsMessageListReady?: Signal<boolean>,\n) {\n  const { updateDraftReplyInfo, sendDefaultReaction } = getActions();\n\n  const [isQuickReactionVisible, markQuickReactionVisible, unmarkQuickReactionVisible] = useFlag();\n  const [isSwiped, markSwiped, unmarkSwiped] = useFlag();\n  const doubleTapTimeoutRef = useRef<NodeJS.Timeout>();\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  }\n\n  const handleMouseMove = useThrottledCallback((e: React.MouseEvent) => {\n    const quickReactionContainer = quickReactionRef.current;\n    if (!quickReactionContainer) return;\n\n    const { clientX, clientY } = e;\n    const {\n      x: quickReactionX, width: quickReactionWidth, y: quickReactionY, height: quickReactionHeight,\n    } = quickReactionContainer.getBoundingClientRect();\n    const x = quickReactionX + quickReactionWidth / 2;\n    const y = quickReactionY + quickReactionHeight / 2;\n\n    const isVisibleX = Math.abs(x - clientX) < QUICK_REACTION_AREA_WIDTH;\n    const isVisibleY = Math.abs(y - clientY) < QUICK_REACTION_AREA_HEIGHT;\n    if (isVisibleX && isVisibleY) {\n      markQuickReactionVisible();\n    } else {\n      unmarkQuickReactionVisible();\n    }\n  }, [quickReactionRef], requestMeasure);\n\n  function handleSendQuickReaction(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleTap(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      const target = e.target as HTMLDivElement;\n      if (!target.classList.contains('text-content') && !target.classList.contains('Message')) {\n        return;\n      }\n\n      if (windowSize.getIsKeyboardVisible()) {\n        setTimeout(() => {\n          onContextMenu(e);\n        }, ANDROID_KEYBOARD_HIDE_DELAY_MS);\n      } else {\n        onContextMenu(e);\n      }\n    }\n  }\n\n  function handleDoubleTap() {\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleClick(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (isInSelectMode) {\n      selectMessage(e);\n      return;\n    }\n\n    if (!IS_TOUCH_ENV) return;\n\n    if (doubleTapTimeoutRef.current) {\n      clearInterval(doubleTapTimeoutRef.current);\n      doubleTapTimeoutRef.current = undefined;\n      handleDoubleTap();\n      return;\n    }\n\n    doubleTapTimeoutRef.current = setTimeout(() => {\n      doubleTapTimeoutRef.current = undefined;\n      handleTap(e);\n    }, QUICK_REACTION_DOUBLE_TAP_DELAY);\n  }\n\n  function handleContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      if ((e.target as HTMLElement).matches('a[href]') || isContextMenuShown) {\n        return;\n      }\n\n      e.preventDefault();\n      selectMessage();\n    } else {\n      onContextMenu(e);\n    }\n  }\n\n  function handleContainerDoubleClick() {\n    if (IS_TOUCH_ENV || !canReply) return;\n\n    updateDraftReplyInfo({ replyToMsgId: messageId, replyToPeerId: undefined, quoteText: undefined });\n  }\n\n  function stopPropagation(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n  }\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV || isInSelectMode || !canReply || isContextMenuShown || !getIsMessageListReady?.()) {\n      return undefined;\n    }\n\n    let startedAt: number | undefined;\n    return captureEvents(containerRef.current!, {\n      selectorToPreventScroll: '.MessageList',\n      excludedClosestSelector: '.no-word-wrap',\n      onSwipe: ((e, direction) => {\n        if (direction === SwipeDirection.Left) {\n          if (!startedAt) {\n            startedAt = Date.now();\n          }\n\n          markSwiped();\n\n          return true;\n        }\n\n        return false;\n      }),\n      onRelease: () => {\n        if (!startedAt || !canReply) {\n          return;\n        }\n\n        updateDraftReplyInfo({ replyToMsgId: messageId });\n\n        setTimeout(unmarkSwiped, Math.max(0, SWIPE_ANIMATION_DURATION - (Date.now() - startedAt)));\n        startedAt = undefined;\n      },\n    });\n  }, [\n    containerRef, isInSelectMode, messageId, markSwiped, unmarkSwiped, canReply, isContextMenuShown,\n    getIsMessageListReady,\n  ]);\n\n  function handleMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n    // Because `mousemove` event is throttled, we need to also throttle `mouseleave` event,\n    // so the order of events is preserved\n    requestMeasure(unmarkQuickReactionVisible);\n    if (shouldHandleMouseLeave) handleDocumentGroupMouseLeave(e);\n  }\n\n  return {\n    handleMouseDown: !isInSelectMode ? handleMouseDown : undefined,\n    handleClick,\n    handleContextMenu: !isInSelectMode ? handleContextMenu : (isProtected ? stopEvent : undefined),\n    handleDoubleClick: !isInSelectMode ? handleContainerDoubleClick : undefined,\n    handleContentDoubleClick: !IS_TOUCH_ENV ? stopPropagation : undefined,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  };\n}\n\nfunction handleDocumentGroupMouseEnter(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.setAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE, '');\n  }\n}\n\nfunction handleDocumentGroupMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.removeAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE);\n  }\n}\n\nfunction getLastElementInDocumentGroup(element: Element) {\n  let current: Element | null = element;\n\n  do {\n    current = current.nextElementSibling;\n  } while (current && !current.classList.contains('last-in-document-group'));\n\n  return current;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport {\n  getPeerTitle,\n  getStoryMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  story?: ApiTypeStory;\n  sender?: ApiPeer;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\n\nconst EmbeddedStory: FC<OwnProps> = ({\n  story,\n  sender,\n  noUserColors,\n  isProtected,\n  observeIntersectionForLoading,\n  onClick,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isFullStory = story && 'content' in story;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const isVideoStory = isFullStory && Boolean(story.content.video);\n  const title = isFullStory ? 'Story' : (isExpiredStory ? 'ExpiredStory' : 'Loading');\n\n  const mediaBlobUrl = useMedia(isFullStory && getStoryMediaHash(story, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = isVideoStory ? story.content.video!.thumbnail?.dataUri : undefined;\n  const pictogramUrl = mediaBlobUrl || mediaThumbnail;\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : undefined;\n  const handleFastClick = useLastCallback(() => {\n    if (story && !isExpiredStory) {\n      onClick();\n    } else {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(handleFastClick);\n\n  return (\n    <PeerColorWrapper\n      ref={ref}\n      peerColor={sender?.color}\n      noUserColors={noUserColors}\n      shouldReset\n      className={buildClassName(\n        'EmbeddedMessage',\n        pictogramUrl && 'with-thumb',\n      )}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {pictogramUrl && renderPictogram(pictogramUrl, isProtected)}\n      <div className=\"message-text with-message-color\">\n        <p className=\"embedded-text-wrapper\">\n          {isExpiredStory && (\n            <Icon name=\"story-expired\" className=\"embedded-origin-icon\" />\n          )}\n          {isFullStory && (\n            <Icon name=\"story-reply\" className=\"embedded-origin-icon\" />\n          )}\n          {lang(title)}\n        </p>\n        <div className=\"message-title\">{renderText(senderTitle || NBSP)}</div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  srcUrl: string,\n  isProtected?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  return (\n    <div className=\"embedded-thumb\">\n      <img\n        src={srcUrl}\n        width={width}\n        height={height}\n        alt=\"\"\n        className=\"pictogram\"\n        draggable={false}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedStory;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getTopicColorCssVariable } from '../../util/forumColors';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\n\nimport styles from './TopicChip.module.scss';\n\nimport blankSrc from '../../assets/blank.png';\n\ntype OwnProps = {\n  topic?: ApiTopic;\n  className?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst TOPIC_ICON_SIZE = 1.125 * REM;\n\nconst TopicChip: FC<OwnProps> = ({\n  topic,\n  className,\n  onClick,\n}) => {\n  const lang = useOldLang();\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={`--topic-button-accent-color: var(${getTopicColorCssVariable(topic?.iconColor)})`}\n      onClick={onClick}\n    >\n      {topic\n        ? <TopicIcon topic={topic} size={TOPIC_ICON_SIZE} />\n        : <img src={blankSrc} alt=\"\" draggable={false} />}\n      {topic?.title ? renderText(topic.title) : lang('Loading')}\n      {topic?.isClosed && <Icon name=\"lock\" />}\n      <Icon name=\"next\" />\n    </div>\n  );\n};\n\nexport default memo(TopicChip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"JldIqqof\"};","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { OwnProps as PhotoProps } from '../Photo';\nimport type { OwnProps as VideoProps } from '../Video';\n\nimport {\n  selectIsInSelectMode,\n  selectIsMessageSelected,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Icon from '../../../common/icons/Icon';\n\ntype OwnProps<T> =\n  (PhotoProps<T> | VideoProps<T>) & {\n    clickArg: number;\n    noSelectControls?: boolean;\n  };\n\ntype StateProps = {\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n};\n\nexport default function withSelectControl(WrappedComponent: FC) {\n  // eslint-disable-next-line @typescript-eslint/comma-dangle\n  const ComponentWithSelectControl = <T,>(props: OwnProps<T> & StateProps) => {\n    const {\n      isInSelectMode,\n      isSelected,\n      dimensions,\n      clickArg,\n    } = props;\n    const { toggleMessageSelection } = getActions();\n\n    const handleMessageSelect = useLastCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n      e.stopPropagation();\n      toggleMessageSelection({ messageId: clickArg, withShift: e?.shiftKey });\n    });\n\n    const newProps = useMemo(() => {\n      const { dimensions: dims, onClick } = props;\n      return {\n        ...props,\n        isInSelectMode,\n        isSelected,\n        dimensions: {\n          ...dims,\n          x: 0,\n          y: 0,\n        },\n        onClick: isInSelectMode ? undefined : onClick,\n      };\n    }, [props, isInSelectMode, isSelected]);\n\n    return (\n      <div\n        className={buildClassName('album-item-select-wrapper', isSelected && 'is-selected')}\n        style={dimensions ? `left: ${dimensions.x}px; top: ${dimensions.y}px;` : ''}\n        onClick={isInSelectMode ? handleMessageSelect : undefined}\n      >\n        {isInSelectMode && (\n          <div className=\"message-select-control\">\n            {isSelected && (\n              <Icon name=\"select\" />\n            )}\n          </div>\n        )}\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n        <WrappedComponent {...newProps} />\n      </div>\n    );\n  };\n\n  return memo(withGlobal<OwnProps<unknown>>(\n    (global, ownProps) => {\n      const { clickArg, noSelectControls } = ownProps;\n      return {\n        isInSelectMode: !noSelectControls && selectIsInSelectMode(global),\n        isSelected: !noSelectControls && selectIsMessageSelected(global, clickArg),\n      };\n    },\n  )(ComponentWithSelectControl)) as typeof ComponentWithSelectControl;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IAlbum, ISettings } from '../../../types';\nimport type { IAlbumLayout } from './helpers/calculateAlbumLayout';\n\nimport {\n  getIsDownloading, getMessageContent, getMessageHtmlId, getMessagePhoto,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectTheme,\n} from '../../../global/selectors';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { AlbumRectPart } from './helpers/calculateAlbumLayout';\nimport withSelectControl from './hocs/withSelectControl';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './Album.scss';\n\nconst PhotoWithSelect = withSelectControl(Photo);\nconst VideoWithSelect = withSelectControl(Video);\n\ntype OwnProps = {\n  album: IAlbum;\n  observeIntersection: ObserveFn;\n  hasCustomAppendix?: boolean;\n  isOwn: boolean;\n  isProtected?: boolean;\n  albumLayout: IAlbumLayout;\n  onMediaClick: (messageId: number, index?: number) => void;\n};\n\ntype StateProps = {\n  theme: ISettings['theme'];\n  uploadsByKey: GlobalState['fileUploads']['byMessageKey'];\n  activeDownloads: TabState['activeDownloads'];\n};\n\nconst Album: FC<OwnProps & StateProps> = ({\n  album,\n  observeIntersection,\n  hasCustomAppendix,\n  isOwn,\n  isProtected,\n  albumLayout,\n  onMediaClick,\n  uploadsByKey,\n  activeDownloads,\n  theme,\n}) => {\n  const { cancelUploadMedia } = getActions();\n\n  const { content: { paidMedia } } = album.mainMessage;\n\n  const mediaCount = album.isPaidMedia ? paidMedia!.extendedMedia.length : album.messages.length;\n\n  const handlePaidMediaClick = useLastCallback((index: number) => {\n    onMediaClick(album.mainMessage.id, index);\n  });\n\n  const handleAlbumMessageClick = useLastCallback((messageId: number) => {\n    onMediaClick(messageId);\n  });\n\n  const handleCancelUpload = useLastCallback((messageId: number) => {\n    cancelUploadMedia({ chatId: album.mainMessage.chatId, messageId });\n  });\n\n  const messages = useMemo(() => {\n    if (album.isPaidMedia) {\n      return album.mainMessage.content.paidMedia!.extendedMedia.map(() => album.mainMessage);\n    }\n\n    return album.messages;\n  }, [album]);\n\n  function renderAlbumMessage(message: ApiMessage, index: number) {\n    const renderingPaidMedia = album.isPaidMedia ? message.content.paidMedia?.extendedMedia[index] : undefined;\n    const paidPhotoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.photo;\n    const paidVideoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.video;\n    const photo = paidPhotoOrPreview || getMessagePhoto(message);\n    const video = paidVideoOrPreview || getMessageContent(message).video;\n\n    const fileUpload = uploadsByKey[getMessageKey(message)];\n    const uploadProgress = fileUpload?.progress;\n    const { dimensions, sides } = albumLayout.layout[index];\n\n    // Ignoring global updates is a known drawback here\n    const canAutoLoad = selectCanAutoLoadMedia(getGlobal(), message);\n    const canAutoPlay = selectCanAutoPlayMedia(getGlobal(), message);\n\n    if (photo) {\n      const shouldAffectAppendix = hasCustomAppendix && (\n        // eslint-disable-next-line no-bitwise\n        (isOwn ? index === mediaCount - 1 : Boolean(sides & AlbumRectPart.Left && sides & AlbumRectPart.Bottom))\n      );\n\n      return (\n        <PhotoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id, album.isPaidMedia ? index : undefined)}`}\n          photo={photo}\n          isOwn={isOwn}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          shouldAffectAppendix={shouldAffectAppendix}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={photo.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, photo)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    } else if (video) {\n      return (\n        <VideoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id)}`}\n          video={video}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          canAutoPlay={canAutoPlay}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={video.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, video)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    }\n\n    return undefined;\n  }\n\n  const { width: containerWidth, height: containerHeight } = albumLayout.containerStyle;\n\n  return (\n    <div\n      className=\"Album\"\n      style={`width: ${containerWidth}px; height: ${containerHeight}px;`}\n    >\n      {messages.map(renderAlbumMessage)}\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const activeDownloads = selectActiveDownloads(global);\n\n    return {\n      theme,\n      uploadsByKey: global.fileUploads.byMessageKey,\n      activeDownloads,\n    };\n  },\n)(Album);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport buildStyle from '../../../util/buildStyle';\nimport safePlay from '../../../util/safePlay';\nimport { IS_ELECTRON } from '../../../util/windowEnvironment';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\n\nconst SIZE = 7 * REM;\nconst INTERACTION_BUNCH_TIME = 1000;\nconst MS_DIVIDER = 1000;\nconst TIME_DEFAULT = 0;\n\nexport default function useAnimatedEmoji(\n  chatId?: string,\n  messageId?: number,\n  soundId?: string,\n  activeEmojiInteractions?: ActiveEmojiInteraction[],\n  isOwn?: boolean,\n  emoji?: string,\n  preferredSize?: number,\n) {\n  const {\n    interactWithAnimatedEmoji, sendEmojiInteraction, sendWatchingEmojiInteraction,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const audioRef = useRef<HTMLAudioElement | undefined>(null);\n\n  const soundMediaData = useMedia(soundId ? `document${soundId}` : undefined, !soundId);\n\n  const size = preferredSize || SIZE;\n  const style = buildStyle(`width: ${size}px`, `height: ${size}px`, emoji && !IS_ELECTRON && 'cursor: pointer');\n\n  const interactions = useRef<number[] | undefined>(undefined);\n  const startedInteractions = useRef<number | undefined>(undefined);\n  const sendInteractionBunch = useLastCallback(() => {\n    const container = ref.current;\n\n    if (!container) return;\n\n    sendEmojiInteraction({\n      chatId: chatId!,\n      messageId: messageId!,\n      emoji: emoji!,\n      interactions: interactions.current!,\n    });\n    startedInteractions.current = undefined;\n    interactions.current = undefined;\n  });\n\n  const play = useLastCallback(() => {\n    const audio = audioRef.current;\n    if (soundMediaData) {\n      if (audio) {\n        audio.pause();\n        audio.remove();\n      }\n      audioRef.current = new Audio();\n      audioRef.current.src = soundMediaData;\n      safePlay(audioRef.current);\n      audioRef.current.addEventListener('ended', () => {\n        audioRef.current = undefined;\n      }, { once: true });\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    play();\n\n    const container = ref.current;\n\n    if (!emoji || !container || !messageId || !chatId) {\n      return;\n    }\n\n    const { x, y } = container.getBoundingClientRect();\n\n    interactWithAnimatedEmoji({\n      emoji: emoji!,\n      x,\n      y,\n      startSize: size,\n      isReversed: !isOwn,\n    });\n\n    if (!interactions.current) {\n      interactions.current = [];\n      startedInteractions.current = performance.now();\n      setTimeout(sendInteractionBunch, INTERACTION_BUNCH_TIME);\n    }\n\n    interactions.current.push(startedInteractions.current\n      ? (performance.now() - startedInteractions.current) / MS_DIVIDER\n      : TIME_DEFAULT);\n  });\n\n  // Set an end anchor for remote activated interaction\n  useEffect(() => {\n    const container = ref.current;\n\n    if (!container || !activeEmojiInteractions) return;\n\n    activeEmojiInteractions.forEach(({\n      id,\n      startSize,\n      messageId: interactionMessageId,\n    }) => {\n      if (startSize || messageId !== interactionMessageId) {\n        return;\n      }\n\n      const { x, y } = container.getBoundingClientRect();\n\n      sendWatchingEmojiInteraction({\n        id,\n        chatId: chatId!,\n        emoticon: emoji!,\n        startSize: size,\n        x,\n        y,\n        isReversed: !isOwn,\n      });\n      play();\n    });\n  }, [activeEmojiInteractions, chatId, emoji, isOwn, messageId, play, sendWatchingEmojiInteraction, size]);\n\n  return {\n    ref,\n    size,\n    style,\n    handleClick,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n  selectCanPlayAnimatedEmojis,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\n\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  customEmojiId: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  observeIntersection?: ObserveFn;\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n  noPlay?: boolean;\n}\n\nconst AnimatedCustomEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  customEmojiId,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n  noPlay,\n  observeIntersection,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(\n    chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji, getCustomEmojiSize(1),\n  );\n\n  return (\n    <CustomEmoji\n      ref={ref}\n      documentId={customEmojiId}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      size={size}\n      isBig\n      noPlay={noPlay}\n      withSharedAnimation\n      forceOnHeavyAnimation={Boolean(effect && activeEmojiInteractions?.length)}\n      observeIntersectionForLoading={observeIntersection}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { customEmojiId, withEffects }) => {\n  const sticker = global.customEmojis.byId[customEmojiId];\n\n  return {\n    sticker,\n    effect: sticker?.emoji && withEffects ? selectAnimatedEmojiEffect(global, sticker.emoji) : undefined,\n    soundId: sticker?.emoji && selectAnimatedEmojiSound(global, sticker.emoji),\n    noPlay: !selectCanPlayAnimatedEmojis(global),\n  };\n})(AnimatedCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmoji,\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\n\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  emoji: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n}\n\nconst QUALITY = 1;\n\nconst AnimatedEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  observeIntersection,\n  forceLoadPreview,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji);\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  return (\n    <AnimatedIconFromSticker\n      sticker={sticker}\n      size={size}\n      quality={QUALITY}\n      noLoad={!isIntersecting}\n      forcePreview={forceLoadPreview}\n      play={isIntersecting}\n      forceAlways\n      ref={ref}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { emoji, withEffects }) => {\n  return {\n    sticker: selectAnimatedEmoji(global, emoji),\n    effect: withEffects ? selectAnimatedEmojiEffect(global, emoji) : undefined,\n    soundId: selectAnimatedEmojiSound(global, emoji),\n  };\n})(AnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiCommentsInfo } from '../../../api/types';\n\nimport { selectPeer } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Spinner from '../../ui/Spinner';\n\nimport './CommentButton.scss';\n\ntype OwnProps = {\n  threadInfo: ApiCommentsInfo;\n  disabled?: boolean;\n  isLoading?: boolean;\n  isCustomShape?: boolean;\n  asActionButton?: boolean;\n};\n\nconst SHOW_LOADER_DELAY = 450;\n\nconst CommentButton: FC<OwnProps> = ({\n  isCustomShape,\n  threadInfo,\n  disabled,\n  isLoading,\n  asActionButton,\n}) => {\n  const { openThread } = getActions();\n\n  const shouldRenderLoading = useAsyncRendering([isLoading], SHOW_LOADER_DELAY);\n\n  const lang = useOldLang();\n  const {\n    originMessageId, chatId, messagesCount, lastMessageId, lastReadInboxMessageId, recentReplierIds, originChannelId,\n  } = threadInfo;\n\n  const handleClick = useLastCallback(() => {\n    openThread({\n      isComments: true, chatId, originMessageId, originChannelId,\n    });\n  });\n\n  const recentRepliers = useMemo(() => {\n    if (!recentReplierIds?.length) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on chats and users, so we avoid them\n    const global = getGlobal();\n\n    return recentReplierIds.map((peerId) => {\n      return selectPeer(global, peerId);\n    }).filter(Boolean);\n  }, [recentReplierIds]);\n\n  if (messagesCount === undefined) {\n    return undefined;\n  }\n\n  function renderRecentRepliers() {\n    return (\n      Boolean(recentRepliers?.length) && (\n        <div className=\"recent-repliers\" dir={lang.isRtl ? 'rtl' : 'ltr'}>\n          {recentRepliers!.map((peer) => (\n            <Avatar\n              key={peer.id}\n              size=\"small\"\n              peer={peer}\n            />\n          ))}\n        </div>\n      )\n    );\n  }\n\n  const hasUnread = Boolean(lastReadInboxMessageId && lastMessageId && lastReadInboxMessageId < lastMessageId);\n\n  const commentsText = messagesCount ? (lang('CommentsCount', '%COMMENTS_COUNT%', undefined, messagesCount) as string)\n    .split('%')\n    .map((s) => {\n      return (s === 'COMMENTS_COUNT' ? <AnimatedCounter text={formatIntegerCompact(messagesCount)} /> : s);\n    })\n    : undefined;\n\n  return (\n    <div\n      data-cnt={formatIntegerCompact(messagesCount)}\n      className={buildClassName(\n        'CommentButton',\n        hasUnread && 'has-unread',\n        disabled && 'disabled',\n        isCustomShape && 'CommentButton-custom-shape',\n        isLoading && 'loading',\n        asActionButton && 'as-action-button',\n      )}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n      onClick={handleClick}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <Icon\n        name=\"comments-sticker\"\n        className={buildClassName(\n          'CommentButton_icon-comments',\n          isLoading && shouldRenderLoading && 'CommentButton_hidden',\n        )}\n      />\n      {!recentRepliers?.length && <Icon name=\"comments\" />}\n      {renderRecentRepliers()}\n      <div className=\"label\" dir=\"auto\">\n        {messagesCount ? commentsText : lang('LeaveAComment')}\n      </div>\n      <div className=\"CommentButton_right\">\n        {isLoading && (\n          <Spinner\n            className={buildClassName(\n              'CommentButton_loading',\n              !shouldRenderLoading && 'CommentButton_hidden',\n            )}\n            color={isCustomShape ? 'white' : 'blue'}\n          />\n        ) }\n        <Icon\n          name=\"next\"\n          className={buildClassName(\n            'CommentButton_icon-open',\n            isLoading && shouldRenderLoading && 'CommentButton_hidden',\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(CommentButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AAHWWWvU\",\"info-container\":\"tpDpg82n\",\"infoContainer\":\"tpDpg82n\",\"info\":\"fpYynE5s\",\"name\":\"_PNTJc_V\",\"phone\":\"JP_3wes8\",\"divider\":\"_OSJcuqH\",\"buttons\":\"Blui4M4G\",\"button\":\"ReDHhQHm\",\"disabled\":\"XAeKpuIZ\",\"emoji-icon-background\":\"SjZYi3sJ\",\"emojiIconBackground\":\"SjZYi3sJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiContact, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { getCanAddContact, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\n\nimport styles from './Contact.module.scss';\n\ntype OwnProps = {\n  contact: ApiContact;\n  noUserColors?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst UNREGISTERED_CONTACT_ID = '0';\n\nconst Contact: FC<OwnProps & StateProps> = ({\n  contact, user, phoneCodeList, noUserColors,\n}) => {\n  const lang = useOldLang();\n  const {\n    openChat, openAddContactDialog, showNotification, openChatWithInfo,\n  } = getActions();\n\n  const { phoneNumber, userId } = contact;\n  const isRegistered = userId !== UNREGISTERED_CONTACT_ID;\n  const canAddContact = isRegistered && user && getCanAddContact(user);\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: userId });\n  });\n\n  const handleAddContact = useLastCallback(() => {\n    openAddContactDialog({ userId: user?.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (user) {\n      openChatWithInfo({ id: userId });\n    } else {\n      copyTextToClipboard(phoneNumber);\n      showNotification({ message: lang('PhoneCopied') });\n    }\n  });\n\n  return (\n    <PeerColorWrapper\n      noUserColors={noUserColors}\n      peer={user}\n      emojiIconClassName={styles.emojiIconBackground}\n      className={styles.root}\n    >\n      <div className={styles.infoContainer} onClick={handleClick}>\n        <Avatar size=\"medium\" peer={user} text={getContactName(contact)} />\n        <div className={styles.info}>\n          <div className={styles.name}>\n            {user ? getUserFullName(user) : getContactName(contact)}\n          </div>\n          <div className={styles.phone}>\n            {formatPhoneNumberWithCode(phoneCodeList, phoneNumber)}\n          </div>\n        </div>\n      </div>\n      {isRegistered && (\n        <>\n          <div className={styles.divider} />\n          <div className={styles.buttons}>\n            <Button\n              isText\n              color=\"translucent\"\n              ripple\n              size=\"tiny\"\n              onClick={handleOpenChat}\n              className={styles.button}\n            >\n              {lang('SharedContactMessage')}\n            </Button>\n            {canAddContact && (\n              <Button\n                isText\n                color=\"translucent\"\n                ripple\n                size=\"tiny\"\n                onClick={handleAddContact}\n                className={styles.button}\n              >\n                {lang('SharedContactAdd')}\n              </Button>\n            )}\n          </div>\n        </>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nfunction getContactName(contact: ApiContact) {\n  if (contact.firstName && contact.lastName) {\n    return `${contact.firstName} ${contact.lastName}`;\n  }\n\n  if (contact.firstName) {\n    return contact.firstName;\n  }\n\n  if (contact.lastName) {\n    return contact.lastName;\n  }\n\n  return '';\n}\n\nexport default withGlobal<OwnProps>((global, { contact }): StateProps => {\n  const {\n    countryList: { phoneCodes: phoneCodeList },\n  } = global;\n  const user = selectUser(global, contact.userId);\n\n  return {\n    user,\n    phoneCodeList,\n  };\n})(Contact);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HMB5LgeX\",\"title\":\"vZnCPl3t\",\"content\":\"k_dGolcu\",\"separator\":\"qRaSs5iA\",\"footnote\":\"EDmr0wJG\",\"collapsed\":\"hYzpXwTM\",\"cutoutWrapper\":\"nfCzKu78\",\"collapseIcon\":\"mxPizZpR\",\"clickable\":\"Cj2cLczd\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiFactCheck } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useCollapsibleLines from '../../../hooks/element/useCollapsibleLines';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Separator from '../../ui/Separator';\n\nimport styles from './FactCheck.module.scss';\n\ntype OwnProps = {\n  factCheck: ApiFactCheck;\n  isToggleDisabled?: boolean;\n};\n\nconst COLOR = {\n  color: 0,\n};\nconst MAX_LINES = 4;\n\nconst FactCheck = ({ factCheck, isToggleDisabled }: OwnProps) => {\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cutoutRef = useRef<HTMLDivElement>(null);\n  const {\n    isCollapsed, isCollapsible, setIsCollapsed,\n  } = useCollapsibleLines(ref, MAX_LINES, cutoutRef);\n\n  const countryLocalized = useMemo(() => {\n    if (!factCheck.countryCode || !lang.code) return undefined;\n\n    const displayNames = new Intl.DisplayNames([lang.code], { type: 'region' });\n    return displayNames.of(factCheck.countryCode);\n  }, [factCheck.countryCode, lang.code]);\n\n  const canExpand = !isToggleDisabled && isCollapsed;\n\n  const handleExpand = useLastCallback(() => {\n    setIsCollapsed(false);\n  });\n\n  const handleToggle = useLastCallback(() => {\n    setIsCollapsed((prev) => !prev);\n  });\n\n  if (!factCheck.text) {\n    return undefined;\n  }\n\n  return (\n    <PeerColorWrapper peerColor={COLOR} className={styles.root} onClick={canExpand ? handleExpand : undefined}>\n      <div\n        ref={cutoutRef}\n        className={buildClassName(styles.cutoutWrapper, isCollapsed && styles.collapsed)}\n      >\n        <div className={styles.title}>{lang('FactCheck')}</div>\n        <div ref={ref} className={styles.content}>\n          {renderTextWithEntities({\n            text: factCheck.text.text,\n            entities: factCheck.text.entities,\n          })}\n        </div>\n        <Separator className={styles.separator} />\n        <div className={styles.footnote}>{lang('FactCheckFooter', countryLocalized)}</div>\n      </div>\n      {isCollapsible && (\n        <div\n          className={buildClassName(styles.collapseIcon, !isToggleDisabled && styles.clickable)}\n          onClick={!isToggleDisabled ? handleToggle : undefined}\n          aria-hidden\n        >\n          <Icon name={isCollapsed ? 'down' : 'up'} />\n        </div>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(FactCheck);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getGamePreviewPhotoHash, getGamePreviewVideoHash, getMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Game.scss';\n\nconst DEFAULT_PREVIEW_DIMENSIONS = {\n  width: 480,\n  height: 270,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  canAutoLoadMedia?: boolean;\n};\n\nconst Game: FC<OwnProps> = ({\n  message,\n  canAutoLoadMedia,\n}) => {\n  const { clickBotInlineButton } = getActions();\n  const game = message.content.game!;\n  const {\n    title, description,\n  } = game;\n\n  const photoHash = getGamePreviewPhotoHash(game);\n  const videoHash = getGamePreviewVideoHash(game);\n  const photoBlobUrl = useMedia(photoHash, !canAutoLoadMedia);\n  const videoBlobUrl = useMedia(videoHash, !canAutoLoadMedia);\n\n  const handleGameClick = () => {\n    clickBotInlineButton({\n      chatId: message.chatId,\n      messageId: message.id,\n      button: message.inlineButtons![0][0],\n    });\n  };\n\n  return (\n    <div className=\"Game\">\n      <div\n        className=\"preview\"\n        style={`width: ${DEFAULT_PREVIEW_DIMENSIONS.width}px; height: ${DEFAULT_PREVIEW_DIMENSIONS.height}px`}\n        onClick={handleGameClick}\n      >\n        {!photoBlobUrl && !videoBlobUrl && (\n          <Skeleton className=\"skeleton preview-content\" />\n        )}\n        {photoBlobUrl && (\n          <img\n            className=\"preview-content\"\n            src={photoBlobUrl}\n            alt={title}\n            draggable={false}\n          />\n        )}\n        {videoBlobUrl && (\n          <video\n            className=\"preview-content\"\n            playsInline\n            muted\n            disablePictureInPicture\n            autoPlay\n            loop\n            src={videoBlobUrl}\n          />\n        )}\n      </div>\n      <div className=\"title\">{title}</div>\n      {!getMessageText(message) && <div className=\"description\">{description}</div>}\n    </div>\n  );\n};\n\nexport default memo(Game);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CbpKtOey\",\"title\":\"ogvcv3mr\",\"sticker\":\"hjjKhvVv\",\"resultSticker\":\"JEiR48jJ\",\"count\":\"n_QCMv_A\",\"section\":\"MSFa9BPf\",\"description\":\"HfZ6SuLI\",\"peers\":\"rPyyNYxK\",\"peer\":\"FV70u896\",\"button\":\"jMBw7STU\",\"result\":\"ZQ4aVVkI\",\"separator\":\"ao0x1YnS\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiGiveaway, ApiGiveawayInfo, ApiGiveawayResults, ApiMessage, ApiPeer, ApiSticker,\n} from '../../../api/types';\n\nimport {\n  getChatTitle, getUserFullName, isOwnMessage,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectForwardedSender,\n  selectGiftStickerForDuration,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateAtTime, formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { isoToEmoji } from '../../../util/emoji/emoji';\nimport { getServerTime } from '../../../util/serverTime';\nimport { callApi } from '../../../api/gramjs';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Separator from '../../ui/Separator';\n\nimport styles from './Giveaway.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  sender?: ApiPeer;\n  giftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst NBSP = '\\u00A0';\nconst GIFT_STICKER_SIZE = 175;\nconst RESULT_STICKER_SIZE = 150;\n\nconst Giveaway = ({\n  chat,\n  sender,\n  message,\n  canPlayAnimatedEmojis,\n  giftSticker,\n}: OwnProps & StateProps) => {\n  const { openChat } = getActions();\n\n  const isLoadingInfo = useRef(false);\n  const [giveawayInfo, setGiveawayInfo] = useState<ApiGiveawayInfo | undefined>();\n\n  const lang = useOldLang();\n  const { giveaway, giveawayResults } = message.content;\n  const isResults = Boolean(giveawayResults);\n  const {\n    months, untilDate, prizeDescription, stars,\n  } = (giveaway || giveawayResults)!;\n\n  const isOwn = isOwnMessage(message);\n\n  const quantity = isResults ? giveawayResults.winnersCount : giveaway!.quantity;\n\n  const hasEnded = getServerTime() > untilDate;\n\n  const countryList = useMemo(() => {\n    if (isResults) return undefined;\n    const translatedNames = new Intl.DisplayNames([lang.code!, 'en'].filter(Boolean), { type: 'region' });\n    return giveaway?.countries?.map((countryCode) => (\n      `${isoToEmoji(countryCode)}${NBSP}${translatedNames.of(countryCode)}`\n    )).join(', ');\n  }, [giveaway, isResults, lang.code]);\n\n  const handlePeerClick = useLastCallback((channelId: string) => {\n    openChat({ id: channelId });\n  });\n\n  const handleShowInfoClick = useLastCallback(async () => {\n    if (isLoadingInfo.current) return;\n\n    isLoadingInfo.current = true;\n    const result = await callApi('fetchGiveawayInfo', {\n      peer: chat,\n      messageId: message.id,\n    });\n    setGiveawayInfo(result);\n    isLoadingInfo.current = false;\n  });\n\n  const handleCloseInfo = useLastCallback(() => {\n    setGiveawayInfo(undefined);\n  });\n\n  const giveawayInfoTitle = useMemo(() => {\n    if (!giveawayInfo) return undefined;\n    return lang(giveawayInfo.type === 'results' ? 'BoostingGiveawayEnd' : 'BoostingGiveAwayAbout');\n  }, [giveawayInfo, lang]);\n\n  function renderGiveawayDescription(media: ApiGiveaway) {\n    const channelIds = media.channelIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayPrizes'), ['simple_markdown'])}\n          </strong>\n          {prizeDescription && (\n            <>\n              <p className={styles.description}>\n                {renderText(\n                  lang('BoostingGiveawayMsgPrizes', [quantity, prizeDescription], undefined, quantity),\n                  ['simple_markdown'],\n                )}\n              </p>\n              <Separator>{lang('BoostingGiveawayMsgWithDivider')}</Separator>\n            </>\n          )}\n          <p className={styles.description}>\n            {message?.content?.giveaway?.stars ? (\n              <>\n                {renderText(\n                  lang('Chat.Giveaway.Message.Stars.PrizeText', lang('Stars', message?.content?.giveaway?.stars)),\n                  ['simple_markdown'],\n                )}\n                <br />\n                {renderText(lang('AmongWinners', quantity), ['simple_markdown'])}\n              </>\n            ) : (\n              <>\n                {renderText(lang('Chat.Giveaway.Info.Subscriptions', quantity), ['simple_markdown'])}\n                <br />\n                {renderText(lang(\n                  'ActionGiftPremiumSubtitle',\n                  lang('Chat.Giveaway.Info.Months', months),\n                ), ['simple_markdown'])}\n              </>\n            )}\n          </p>\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayMsgParticipants'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayMsgAllSubsPlural', channelIds.length), ['simple_markdown'])}\n          </p>\n          <div className={styles.peers}>\n            {channelIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n          {countryList && (\n            <span>{renderText(lang('Chat.Giveaway.Message.CountriesFrom', countryList))}</span>\n          )}\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingWinnersDate'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {formatDateTimeToString(untilDate * 1000, lang.code, true)}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayResultsDescription(media: ApiGiveawayResults) {\n    const winnerIds = media.winnerIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersSelected'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersTitle', winnerIds.length), ['simple_markdown'])}\n          </p>\n          <strong className={styles.title}>\n            {lang('lng_prizes_results_winners')}\n          </strong>\n          <div className={styles.peers}>\n            {winnerIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <p className={styles.description}>\n            {lang('BoostingGiveawayResultsMsgAllWinnersReceivedLinks')}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayInfo() {\n    if (!sender || !giveawayInfo) return undefined;\n    const isResultsInfo = giveawayInfo.type === 'results';\n\n    const chatTitle = isApiPeerChat(sender) ? getChatTitle(lang, sender) : getUserFullName(sender);\n    const endDate = formatDateAtTime(lang, untilDate * 1000);\n    const otherChannelsCount = giveaway?.channelIds ? giveaway.channelIds.length - 1 : 0;\n    const otherChannelsString = lang('Chat.Giveaway.Info.OtherChannels', otherChannelsCount);\n    const isSeveral = otherChannelsCount > 0;\n\n    const firstKey = isResultsInfo ? 'BoostingGiveawayHowItWorksTextEnd' : 'BoostingGiveawayHowItWorksText';\n    const giveawayDuration = isResultsInfo ? lang('Chat.Giveaway.Info.Months', months) : lang('Stars', stars, 'i');\n    const firstParagraph = lang(firstKey, [chatTitle, quantity, giveawayDuration], undefined, quantity);\n\n    const additionalPrizes = prizeDescription\n      ? lang('BoostingGiveawayHowItWorksIncludeText', [chatTitle, quantity, prizeDescription], undefined, quantity)\n      : undefined;\n\n    let secondKey = '';\n    if (isResultsInfo) {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveralEnd' : 'BoostingGiveawayHowItWorksSubTextEnd';\n    } else {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveral' : 'BoostingGiveawayHowItWorksSubText';\n    }\n    let secondParagraph = lang(secondKey, [endDate, quantity, chatTitle, otherChannelsCount], undefined, quantity);\n    if (isResultsInfo && giveawayInfo.activatedCount) {\n      secondParagraph += ` ${lang('BoostingGiveawayUsedLinksPlural', giveawayInfo.activatedCount)}`;\n    }\n\n    let result = '';\n\n    if (isResultsInfo) {\n      if (giveawayInfo.isRefunded) {\n        result = lang('BoostingGiveawayCanceledByPayment');\n      } else {\n        result = lang(giveawayInfo.isWinner ? 'BoostingGiveawayYouWon' : 'BoostingGiveawayYouNotWon');\n      }\n    }\n\n    let lastParagraph = '';\n    if (isResultsInfo) {\n      // Nothing\n    } else if (giveawayInfo.disallowedCountry) {\n      lastParagraph = lang('BoostingGiveawayNotEligibleCountry');\n    } else if (giveawayInfo.adminDisallowedChatId) {\n      // Since rerenders are not expected, we can use the global state directly\n      const chatsById = getGlobal().chats.byId;\n      const disallowedChat = chatsById[giveawayInfo.adminDisallowedChatId];\n      const disallowedChatTitle = disallowedChat && getChatTitle(lang, disallowedChat);\n      lastParagraph = lang('BoostingGiveawayNotEligibleAdmin', disallowedChatTitle);\n    } else if (giveawayInfo.joinedTooEarlyDate) {\n      const joinedTooEarlyDate = formatDateAtTime(lang, giveawayInfo.joinedTooEarlyDate * 1000);\n      lastParagraph = lang('BoostingGiveawayNotEligible', joinedTooEarlyDate);\n    } else if (giveawayInfo.isParticipating) {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.ParticipatingMany', [chatTitle, otherChannelsCount])\n        : lang('Chat.Giveaway.Info.Participating', chatTitle);\n    } else {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.NotQualifiedMany', [chatTitle, otherChannelsString, endDate])\n        : lang('Chat.Giveaway.Info.NotQualified', [chatTitle, endDate]);\n    }\n\n    return (\n      <>\n        {result && (\n          <p className={styles.result}>\n            {renderText(result, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(firstParagraph, ['simple_markdown'])}\n        </p>\n        {additionalPrizes && (\n          <p>\n            {renderText(additionalPrizes, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(secondParagraph, ['simple_markdown'])}\n        </p>\n        {lastParagraph && (\n          <p>\n            {renderText(lastParagraph, ['simple_markdown'])}\n          </p>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.sticker, isResults && styles.resultSticker)}>\n        {isResults ? (\n          <AnimatedIconWithPreview\n            size={RESULT_STICKER_SIZE}\n            tgsUrl={LOCAL_TGS_URLS.PartyPopper}\n            nonInteractive\n            noLoop\n          />\n        ) : (\n          <AnimatedIconFromSticker\n            sticker={giftSticker}\n            play={canPlayAnimatedEmojis && hasEnded}\n            noLoop\n            nonInteractive\n            size={GIFT_STICKER_SIZE}\n          />\n        )}\n        <span className={styles.count}>\n          {`x${quantity}`}\n        </span>\n      </div>\n      {isResults ? renderGiveawayResultsDescription(giveawayResults) : renderGiveawayDescription(giveaway!)}\n      <Button\n        className={styles.button}\n        color=\"adaptive\"\n        size=\"smaller\"\n        onClick={handleShowInfoClick}\n      >\n        {lang('BoostingHowItWork')}\n      </Button>\n      <ConfirmDialog\n        isOpen={Boolean(giveawayInfo)}\n        isOnlyConfirm\n        title={giveawayInfoTitle}\n        confirmHandler={handleCloseInfo}\n        onClose={handleCloseInfo}\n      >\n        {renderGiveawayInfo()}\n      </ConfirmDialog>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message }): StateProps => {\n    const { giveaway } = message.content;\n    const chat = selectChat(global, message.chatId)!;\n    const sender = selectChat(global, giveaway?.channelIds[0]!)\n      || selectForwardedSender(global, message) || chat;\n\n    const sticker = giveaway && selectGiftStickerForDuration(global, giveaway.months);\n\n    return {\n      chat,\n      sender,\n      giftSticker: sticker,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(Giveaway));\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton, ApiMessage } from '../../../api/types';\nimport type { ActionPayloads } from '../../../global/types';\n\nimport { RE_TME_LINK } from '../../../config';\nimport renderKeyboardButtonText from '../composer/helpers/renderKeyboardButtonText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport './InlineButtons.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  onClick: (payload: ActionPayloads['clickBotInlineButton']) => void;\n};\n\nconst InlineButtons: FC<OwnProps> = ({ message, onClick }) => {\n  const lang = useOldLang();\n\n  const renderIcon = (button: ApiKeyboardButton) => {\n    const { type } = button;\n    switch (type) {\n      case 'url': {\n        if (!RE_TME_LINK.test(button.url)) {\n          return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n        }\n        break;\n      }\n      case 'urlAuth':\n        return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n      case 'buy':\n      case 'receipt':\n        return <Icon className=\"corner-icon\" name=\"card\" />;\n      case 'switchBotInline':\n        return <Icon className=\"corner-icon\" name=\"share-filled\" />;\n      case 'webView':\n      case 'simpleWebView':\n        return <Icon className=\"corner-icon\" name=\"webapp\" />;\n      case 'copy':\n        return <Icon className=\"corner-icon\" name=\"copy\" />;\n    }\n    return undefined;\n  };\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message.inlineButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n    return texts;\n  }, [lang, message.inlineButtons]);\n\n  return (\n    <div className=\"InlineButtons\">\n      {message.inlineButtons!.map((row, i) => (\n        <div className=\"row\">\n          {row.map((button, j) => (\n            <Button\n              size=\"tiny\"\n              ripple\n              disabled={button.type === 'unsupported'}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onClick({ chatId: message.chatId, messageId: message.id, button })}\n            >\n              <span className=\"inline-button-text\">\n                {buttonTexts[i][j]}\n              </span>\n              {renderIcon(button)}\n            </Button>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(InlineButtons);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageInvoice, getWebDocumentHash } from '../../../global/helpers';\nimport buildStyle from '../../../util/buildStyle';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\n\nimport useLang from '../../../hooks/useLang';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Invoice.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldAffectAppendix?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ISettings['theme'];\n  forcedWidth?: number;\n};\n\nconst Invoice: FC<OwnProps> = ({\n  message,\n  shouldAffectAppendix,\n  isInSelectMode,\n  isSelected,\n  theme,\n  forcedWidth,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const invoice = getMessageInvoice(message);\n\n  const {\n    title,\n    description,\n    amount,\n    currency,\n    isTest,\n    photo,\n  } = invoice!;\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n  const withBlurredBackground = Boolean(forcedWidth);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photoUrl, !withBlurredBackground);\n  const messageId = message.id;\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    if (photoUrl) {\n      const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n      getCustomAppendixBg(photoUrl, false, messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    }\n  }, [shouldAffectAppendix, photoUrl, isInSelectMode, isSelected, theme, messageId]);\n\n  const width = forcedWidth || photo?.dimensions?.width;\n\n  const style = buildStyle(\n    photo?.dimensions && `width: ${width}px`,\n    photo?.dimensions && `aspect-ratio: ${photo.dimensions.width} / ${photo.dimensions.height}`,\n    Boolean(!photo?.dimensions && forcedWidth) && `width: ${forcedWidth}px`,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className=\"Invoice\"\n    >\n      {title && (\n        <p className=\"title\">{renderText(title)}</p>\n      )}\n      {description && (\n        <div>{renderText(description, ['emoji', 'br'])}</div>\n      )}\n      <div className={`description ${photo ? 'has-image' : ''}`}>\n        {Boolean(photo) && (\n          <div className=\"invoice-image-container\">\n            {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n            {photoUrl && (\n              <img\n                className=\"invoice-image\"\n                src={photoUrl}\n                alt=\"\"\n                style={style}\n                crossOrigin=\"anonymous\"\n                draggable={false}\n              />\n            )}\n            {!photoUrl && photo && (\n              <Skeleton\n                width={width}\n                height={photo.dimensions?.height}\n                forceAspectRatio\n              />\n            )}\n          </div>\n        )}\n        <p className=\"description-text\">\n          {formatCurrency(lang, amount, currency, { iconClassName: 'invoice-currency-icon' })}\n          {isTest && <span className=\"test-invoice\">{oldLang('PaymentTestInvoice')}</span>}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Invoice);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dCK8GQ_8\",\"duration\":\"CWT8ZMwV\",\"buy\":\"C38zhCDM\",\"spoiler\":\"CG55VZP1\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getMessageInvoice } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './InvoiceMediaPreview.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  isConnected: boolean;\n};\n\nconst POLLING_INTERVAL = 30000;\n\nconst InvoiceMediaPreview: FC<OwnProps> = ({\n  message,\n  isConnected,\n}) => {\n  const { openInvoice, loadExtendedMedia } = getActions();\n  const lang = useOldLang();\n  const invoice = getMessageInvoice(message);\n\n  const { chatId, id } = message;\n\n  const refreshExtendedMedia = useLastCallback(() => {\n    loadExtendedMedia({ chatId, ids: [id] });\n  });\n\n  useInterval(refreshExtendedMedia, isConnected ? POLLING_INTERVAL : undefined);\n\n  const {\n    amount,\n    currency,\n    extendedMedia,\n  } = invoice!;\n\n  const {\n    width, height, thumbnail, duration,\n  } = extendedMedia!;\n\n  const handleClick = useLastCallback(() => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId: id,\n      isExtendedMedia: true,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, 'media-inner')}\n      onClick={handleClick}\n    >\n      <MediaSpoiler\n        thumbDataUri={thumbnail?.dataUri}\n        width={width}\n        height={height}\n        isVisible\n        className={styles.spoiler}\n      />\n      {Boolean(duration) && <div className={styles.duration}>{formatMediaDuration(duration)}</div>}\n      <div className={styles.buy}>\n        <Icon name=\"lock\" className={styles.lock} />\n        {lang('Checkout.PayPrice', formatCurrencyAsString(amount, currency))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(InvoiceMediaPreview);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  buildStaticMapHash,\n  getMessageLocation,\n  isGeoLiveExpired,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCountdownShort, formatLastUpdated } from '../../../util/dates/dateFormat';\nimport {\n  getMetersPerPixel, getVenueColor, getVenueIconUrl,\n} from '../../../util/map';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../common/Avatar';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Location.scss';\n\nimport mapPin from '../../../assets/map-pin.svg';\n\nconst TIMER_RADIUS = 12;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst MOVE_THRESHOLD = 0.0001; // ~11m\nconst DEFAULT_MAP_CONFIG = {\n  width: 400,\n  height: 300,\n  zoom: 16,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  peer?: ApiPeer;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ISettings['theme'];\n};\n\nconst Location: FC<OwnProps> = ({\n  message,\n  peer,\n}) => {\n  const { openMapModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const countdownRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  const location = getMessageLocation(message)!;\n  const { mediaType, geo } = location;\n\n  const serverTime = getServerTime();\n  const isExpired = isGeoLiveExpired(message);\n  const secondsBeforeEnd = (mediaType === 'geoLive' && !isExpired) ? message.date + location.period - serverTime\n    : undefined;\n\n  const [point, setPoint] = useState(geo);\n\n  const shouldRenderText = mediaType === 'venue' || (mediaType === 'geoLive' && !isExpired);\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n\n  const mediaHash = buildStaticMapHash(point, width, height, zoom, dpr);\n  const mediaBlobUrl = useMedia(mediaHash);\n  const prevMediaBlobUrl = usePreviousDeprecated(mediaBlobUrl, true);\n  const mapBlobUrl = mediaBlobUrl || prevMediaBlobUrl;\n\n  const accuracyRadiusPx = useMemo(() => {\n    if (mediaType !== 'geoLive' || !point.accuracyRadius) {\n      return 0;\n    }\n\n    const { lat, accuracyRadius } = point;\n    return accuracyRadius / getMetersPerPixel(lat, zoom);\n  }, [mediaType, point, zoom]);\n\n  const handleClick = () => {\n    openMapModal({ geoPoint: point, zoom });\n  };\n\n  const updateCountdown = useLastCallback((countdownEl: HTMLDivElement) => {\n    if (mediaType !== 'geoLive') return;\n    const svgEl = countdownEl.lastElementChild!;\n    const timerEl = countdownEl.firstElementChild!;\n\n    const timeLeft = message.date + location.period - getServerTime();\n    const strokeDashOffset = (1 - timeLeft / location.period) * TIMER_CIRCUMFERENCE;\n    const text = formatCountdownShort(lang, timeLeft * 1000);\n    timerEl.textContent = text;\n    svgEl.firstElementChild!.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  });\n\n  useLayoutEffect(() => {\n    if (countdownRef.current) {\n      updateCountdown(countdownRef.current);\n    }\n  }, [updateCountdown]);\n\n  useEffect(() => {\n    // Prevent map refetching for slight location changes\n    if (Math.abs(geo.lat - point.lat) < MOVE_THRESHOLD && Math.abs(geo.long - point.long) < MOVE_THRESHOLD) {\n      if (point.accuracyRadius !== geo.accuracyRadius) {\n        setPoint({\n          ...point,\n          accuracyRadius: geo.accuracyRadius,\n        });\n      }\n      return;\n    }\n    setPoint(geo);\n  }, [geo, point]);\n\n  useTimeout(() => {\n    forceUpdate();\n  }, !isExpired ? (secondsBeforeEnd || 0) * 1000 : undefined);\n\n  useInterval(() => {\n    requestMutation(() => {\n      const countdownEl = countdownRef.current;\n      if (countdownEl) {\n        updateCountdown(countdownEl);\n      }\n    });\n  }, secondsBeforeEnd ? 1000 : undefined);\n\n  function renderInfo() {\n    if (!shouldRenderText) return undefined;\n    if (mediaType === 'venue') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">\n            {location.title}\n          </div>\n          <div className=\"location-info-subtitle\">\n            {location.address}\n          </div>\n        </div>\n      );\n    }\n    if (mediaType === 'geoLive') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">{lang('AttachLiveLocation')}</div>\n          <div className=\"location-info-subtitle\">\n            {formatLastUpdated(lang, serverTime, message.editDate)}\n          </div>\n          {!isExpired && (\n            <div className=\"geo-countdown\" ref={countdownRef}>\n              <span className=\"geo-countdown-text\" />\n              <svg width=\"32px\" height=\"32px\">\n                <circle\n                  cx=\"16\"\n                  cy=\"16\"\n                  r={TIMER_RADIUS}\n                  className=\"geo-countdown-progress\"\n                  transform=\"rotate(-90, 16, 16)\"\n                  stroke-dasharray={TIMER_CIRCUMFERENCE}\n                  stroke-dashoffset=\"0\"\n                />\n              </svg>\n            </div>\n          )}\n        </div>\n      );\n    }\n    return undefined;\n  }\n\n  function renderMap() {\n    if (!mapBlobUrl) return <Skeleton width={width} height={height} />;\n    return (\n      <img\n        className=\"full-media map\"\n        src={mapBlobUrl}\n        alt=\"Location on a map\"\n        draggable={false}\n        style={`width: ${DEFAULT_MAP_CONFIG.width}px; height: ${DEFAULT_MAP_CONFIG.height}px;`}\n      />\n    );\n  }\n\n  function renderPin() {\n    const pinClassName = buildClassName(\n      'pin',\n      mediaType,\n      isExpired && 'expired',\n    );\n    if (mediaType === 'geoLive') {\n      return (\n        <div className={pinClassName}>\n          <PinSvg />\n          <Avatar peer={peer} className=\"location-avatar\" />\n          {location.heading !== undefined && (\n            <div className=\"direction\" style={`--direction: ${location.heading}deg`} />\n          )}\n        </div>\n      );\n    }\n\n    if (mediaType === 'venue') {\n      const color = getVenueColor(location.venueType);\n      const iconSrc = getVenueIconUrl(location.venueType);\n      if (iconSrc) {\n        return (\n          <div className={pinClassName} style={`--pin-color: ${color}`}>\n            <PinSvg />\n            <img src={iconSrc} draggable={false} className=\"venue-icon\" alt=\"\" />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <img className={pinClassName} draggable={false} src={mapPin} alt=\"\" />\n    );\n  }\n\n  function renderOverlay() {\n    if (!mapBlobUrl) return undefined;\n\n    return (\n      <>\n        {Boolean(accuracyRadiusPx) && !isExpired && (\n          <div\n            className=\"location-accuracy\"\n            style={`width: ${accuracyRadiusPx * 2}px; height: ${accuracyRadiusPx * 2}px`}\n          />\n        )}\n        {renderPin()}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className=\"Location media-inner interactive\"\n      onClick={handleClick}\n    >\n      <div className=\"map-wrapper\">\n        {renderMap()}\n        {renderOverlay()}\n      </div>\n      {renderInfo()}\n    </div>\n  );\n};\n\nfunction PinSvg() {\n  return (\n    <svg className=\"round-pin\" style=\"enable-background:new 0 0 64 64\" viewBox=\"0 0 64 64\">\n      <circle cx=\"32\" cy=\"32\" r=\"24.5\" />\n      <path d=\"M32 8c13.23 0 24 10.77 24 24S45.23 56 32 56 8 45.23 8 32 18.77 8 32 8m0-1C18.19 7 7 18.19 7 32s11.19 25 25 25 25-11.19 25-25S45.81 7 32 7z\" />\n      <path d=\"m29.38 57.67-1.98-1.59 3.02-1.66L32 51.54l1.58 2.88 3.02 1.66-1.91 1.53L32 60.73z\" />\n      <path d=\"m32 52.58 1.07 1.95.14.26.26.14 2.24 1.22-1.33 1.06-.07.06-.06.07L32 59.96l-2.24-2.61-.06-.07-.07-.06-1.33-1.06 2.24-1.22.26-.14.14-.26L32 52.58m0-2.08-1.94 3.56L26.5 56l2.5 2 3 3.5 3-3.5 2.5-2-3.56-1.94L32 50.5z\" />\n    </svg>\n  );\n}\n\nexport default memo(Location);\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiMessage, ApiMessageOutgoingStatus, ApiThreadInfo,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString, formatPastTimeShort, formatTime } from '../../../util/dates/dateFormat';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport MessageOutgoingStatus from '../../common/MessageOutgoingStatus';\n\nimport './MessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  withReactionOffset?: boolean;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  signature?: string;\n  availableReactions?: ApiAvailableReaction[];\n  noReplies?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  isTranslated?: boolean;\n  isPinned?: boolean;\n  withFullDate?: boolean;\n  effectEmoji?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onTranslationClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onEffectClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  renderQuickReactionButton?: () => TeactNode | undefined;\n  onOpenThread: NoneToVoidFunction;\n};\n\nconst MessageMeta: FC<OwnProps> = ({\n  message,\n  outgoingStatus,\n  signature,\n  withReactionOffset,\n  repliesThreadInfo,\n  renderQuickReactionButton,\n  noReplies,\n  isTranslated,\n  isPinned,\n  withFullDate,\n  effectEmoji,\n  onClick,\n  onTranslationClick,\n  onEffectClick,\n  onOpenThread,\n}) => {\n  const { showNotification } = getActions();\n\n  const [isActivated, markActivated] = useFlag();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function handleImportedClick(e: React.MouseEvent) {\n    e.stopPropagation();\n\n    showNotification({\n      message: {\n        key: 'ImportedInfo',\n      },\n    });\n  }\n\n  function handleOpenThread(e: React.MouseEvent) {\n    e.stopPropagation();\n    onOpenThread();\n  }\n\n  const dateTitle = useMemo(() => {\n    if (!isActivated) return undefined;\n    const createDateTime = formatDateTimeToString(message.date * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const editDateTime = message.isEdited\n      && formatDateTimeToString(message.editDate! * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const forwardedDateTime = message.forwardInfo\n      && formatDateTimeToString(\n        (message.forwardInfo.savedDate || message.forwardInfo.date) * 1000,\n        oldLang.code,\n        undefined,\n        oldLang.timeFormat,\n      );\n\n    let text = createDateTime;\n    if (editDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipEditedDate', { date: editDateTime });\n    }\n    if (forwardedDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipForwardedDate', { date: forwardedDateTime });\n    }\n\n    return text;\n    // We need to listen to timeformat change\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [isActivated, oldLang, message, oldLang.timeFormat]);\n\n  const viewsTitle = useMemo(() => {\n    if (!message.viewsCount) return undefined;\n    let text = lang('MessageTooltipViews', { count: message.viewsCount }, { pluralValue: message.viewsCount });\n    if (message.forwardsCount) {\n      text += '\\n';\n      text += lang('MessageTooltipForwards', { count: message.forwardsCount }, { pluralValue: message.forwardsCount });\n    }\n\n    return text;\n  }, [lang, message.forwardsCount, message.viewsCount]);\n\n  const repliesTitle = useMemo(() => {\n    const count = repliesThreadInfo?.messagesCount;\n    if (!count) return undefined;\n    return lang('MessageTooltipReplies', { count }, { pluralValue: count });\n  }, [lang, repliesThreadInfo]);\n\n  const date = useMemo(() => {\n    const time = formatTime(oldLang, message.date * 1000);\n    if (!withFullDate) {\n      return time;\n    }\n\n    return formatPastTimeShort(oldLang, (message.forwardInfo?.date || message.date) * 1000, true);\n  }, [oldLang, message.date, message.forwardInfo?.date, withFullDate]);\n\n  const fullClassName = buildClassName(\n    'MessageMeta',\n    withReactionOffset && 'reactions-offset',\n    message.forwardInfo?.isImported && 'is-imported',\n  );\n\n  return (\n    <span\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n      onClick={onClick}\n      data-ignore-on-paste\n    >\n      {effectEmoji && (\n        <span className=\"message-effect-icon\" onClick={onEffectClick}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {isTranslated && (\n        <Icon name=\"language\" className=\"message-translated\" onClick={onTranslationClick} />\n      )}\n      {Boolean(message.viewsCount) && (\n        <>\n          <span className=\"message-views\" title={viewsTitle}>\n            {formatIntegerCompact(message.viewsCount!)}\n          </span>\n          <Icon name=\"channelviews\" />\n        </>\n      )}\n      {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n        <span onClick={handleOpenThread} className=\"message-replies-wrapper\" title={repliesTitle}>\n          <span className=\"message-replies\">\n            <AnimatedCounter text={formatIntegerCompact(repliesThreadInfo!.messagesCount!)} />\n          </span>\n          <Icon name=\"reply-filled\" />\n        </span>\n      )}\n      {isPinned && (\n        <Icon name=\"pinned-message\" className=\"message-pinned\" />\n      )}\n      {signature && (\n        <span className=\"message-signature\">{renderText(signature)}</span>\n      )}\n      <span className=\"message-time\" title={dateTitle} onMouseEnter={markActivated}>\n        {message.forwardInfo?.isImported && (\n          <>\n            <span className=\"message-imported\" onClick={handleImportedClick}>\n              {formatDateTimeToString(message.forwardInfo.date * 1000, lang.code, true)}\n            </span>\n            <span className=\"message-imported\" onClick={handleImportedClick}>{lang('MessageMetaImported')}</span>\n          </>\n        )}\n        {message.isEdited && `${lang('MessageMetaEdited')} `}\n        {message.isVideoProcessingPending && `${lang('MessageMetaApproximate')} `}\n        {date}\n      </span>\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      {renderQuickReactionButton && renderQuickReactionButton()}\n    </span>\n  );\n};\n\nexport default memo(MessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wqsZyy8u\",\"button\":\"NGmo4ADz\",\"info\":\"iFn6m6hd\",\"reason\":\"l8QfocIQ\",\"arrow\":\"ONmpzmUS\",\"incoming\":\"BfgDXljM\",\"missed\":\"Alra_BWu\",\"canceled\":\"J7xsuCAm\",\"meta\":\"rF5tkx92\",\"duration\":\"kKPKwFzu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ApiMessageActionPhoneCall } from '../../../api/types/messageActions';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatTimeDuration } from '../../../util/dates/dateFormat';\nimport { ARE_CALLS_SUPPORTED } from '../../../util/windowEnvironment';\nimport { getCallMessageKey } from './helpers/messageActions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MessagePhoneCall.module.scss';\n\ntype OwnProps = {\n  phoneCall: ApiMessageActionPhoneCall;\n  message: ApiMessage;\n  chatId: string;\n};\n\nconst MessagePhoneCall: FC<OwnProps> = ({\n  phoneCall,\n  message,\n  chatId,\n}) => {\n  const { requestMasterAndRequestCall } = getActions();\n\n  const lang = useOldLang();\n  const {\n    isVideo, reason, duration,\n  } = phoneCall;\n  const isOutgoing = message.isOutgoing;\n  const isMissed = reason === 'missed';\n  const isCancelled = reason === 'busy' || duration === undefined;\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ isVideo, userId: chatId });\n  });\n\n  const formattedDuration = useMemo(() => {\n    return phoneCall.duration ? formatTimeDuration(lang, phoneCall.duration) : undefined;\n  }, [lang, phoneCall.duration]);\n\n  const timeFormatted = formatTime(lang, message.date * 1000);\n  return (\n    <div className={styles.root}>\n      <Button\n        size=\"smaller\"\n        color=\"translucent\"\n        round\n        ripple\n        onClick={handleCall}\n        className={styles.button}\n        disabled={!ARE_CALLS_SUPPORTED}\n        ariaLabel={lang(isOutgoing ? 'CallAgain' : 'CallBack')}\n      >\n        <Icon name={isVideo ? 'video-outlined' : 'phone'} />\n      </Button>\n      <div className={styles.info}>\n        <div className={styles.reason}>{lang(getCallMessageKey(phoneCall, message.isOutgoing))}</div>\n        <div className={styles.meta}>\n          <Icon\n            name=\"arrow-right\"\n            className={buildClassName(\n              styles.arrow,\n              isMissed && styles.missed,\n              isCancelled && styles.canceled,\n              !isOutgoing && styles.incoming,\n            )}\n          />\n          <span className={styles.duration}>\n            {formattedDuration ? lang('CallMessageWithDuration', [timeFormatted, formattedDuration]) : timeFormatted}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MessagePhoneCall);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mVaSjZRJ\",\"buyButton\":\"GnKGu6D9\",\"boughtStatus\":\"IGXW5hWr\",\"star\":\"ywiOugiH\",\"buttonText\":\"gLaaVQXr\"};","import React, { memo, type TeactNode, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPaidMedia } from '../../../api/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { replaceWithTeact } from '../../../util/replaceWithTeact';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './PaidMediaOverlay.module.scss';\n\ntype OwnProps = {\n  paidMedia: ApiPaidMedia;\n  chatId: string;\n  messageId: number;\n  isOutgoing?: boolean;\n  children?: TeactNode;\n};\n\nconst PaidMediaOverlay = ({\n  paidMedia,\n  chatId,\n  messageId,\n  isOutgoing,\n  children,\n}: OwnProps) => {\n  const { openInvoice } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isClickable = !paidMedia.isBought;\n\n  const buttonText = useMemo(() => {\n    const value = oldLang('UnlockPaidContent', paidMedia.starsAmount);\n\n    return replaceWithTeact(\n      value, STARS_ICON_PLACEHOLDER, <StarIcon className={styles.star} type=\"gold\" size=\"adaptive\" />,\n    );\n  }, [oldLang, paidMedia]);\n\n  const handleClick = useLastCallback((e: React.MouseEvent) => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId,\n    });\n    stopEvent(e);\n  });\n\n  return (\n    <div\n      className={styles.root}\n      onClick={isClickable ? handleClick : undefined}\n    >\n      {children}\n      {isClickable && (\n        <Button\n          className={styles.buyButton}\n          color=\"dark\"\n          size=\"tiny\"\n          fluid\n          pill\n        >\n          <span className={styles.buttonText}>{buttonText}</span>\n        </Button>\n      )}\n      {paidMedia.isBought && (\n        <div className={buildClassName('message-paid-media-status', styles.boughtStatus)}>\n          {isOutgoing\n            ? formatStarsAsIcon(lang, paidMedia.starsAmount)\n            : oldLang('Chat.PaidMedia.Purchased')}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(PaidMediaOverlay);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiPollAnswer, ApiPollResult } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './PollOption.scss';\n\ntype OwnProps = {\n  answer: ApiPollAnswer;\n  voteResults?: ApiPollResult[];\n  totalVoters?: number;\n  maxVotersCount?: number;\n  correctResults: string[];\n  shouldAnimate: boolean;\n};\n\nconst PollOption: FC<OwnProps> = ({\n  answer,\n  voteResults,\n  totalVoters,\n  maxVotersCount,\n  correctResults,\n  shouldAnimate,\n}) => {\n  const result = voteResults && voteResults.find((r) => r.option === answer.option);\n  const correctAnswer = correctResults.length === 0 || correctResults.indexOf(answer.option) !== -1;\n  const showIcon = (correctResults.length > 0 && correctAnswer) || (result?.isChosen);\n  const answerPercent = result ? getPercentage(result.votersCount, totalVoters || 0) : 0;\n  const [finalPercent, setFinalPercent] = useState(shouldAnimate ? 0 : answerPercent);\n  const lineWidth = result ? getPercentage(result.votersCount, maxVotersCount || 0) : 0;\n  const isAnimationDoesNotStart = finalPercent !== answerPercent;\n\n  useEffect(() => {\n    if (shouldAnimate) {\n      setFinalPercent(answerPercent);\n    }\n  }, [shouldAnimate, answerPercent]);\n\n  if (!voteResults || !result) {\n    return undefined;\n  }\n\n  const lineStyle = `width: ${lineWidth}%; transform:scaleX(${isAnimationDoesNotStart ? 0 : 1})`;\n\n  return (\n    <div className=\"PollOption\" dir=\"ltr\">\n      <div className={`poll-option-share ${answerPercent === '100' ? 'limit-width' : ''}`}>\n        {answerPercent}%\n        {showIcon && (\n          <span className={buildClassName(\n            'poll-option-chosen',\n            !correctAnswer && 'wrong',\n            shouldAnimate && 'animate',\n          )}\n          >\n            <Icon name={correctAnswer ? 'check' : 'close'} className=\"poll-option-icon\" />\n          </span>\n        )}\n      </div>\n      <div className=\"poll-option-right\">\n        <div className=\"poll-option-text\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: answer.text.text,\n            entities: answer.text.entities,\n          })}\n        </div>\n        <div className={buildClassName('poll-option-answer', showIcon && !correctAnswer && 'wrong')}>\n          {shouldAnimate && (\n            <svg\n              className=\"poll-line\"\n              style={!isAnimationDoesNotStart ? 'stroke-dasharray: 100% 200%; stroke-dashoffset: -44' : ''}\n            >\n              <path d=\"M4.47 5.33v13.6a9 9 0 009 9h13\" />\n            </svg>\n          )}\n          <div\n            className=\"poll-option-line\"\n            style={lineStyle}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default PollOption;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPoll, ApiPollAnswer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { selectPeer } from '../../../global/selectors';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getServerTime } from '../../../util/serverTime';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PollOption from './PollOption';\n\nimport './Poll.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  poll: ApiPoll;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onSendVote: (options: string[]) => void;\n};\n\nconst SOLUTION_CONTAINER_ID = '#middle-column-portals';\nconst SOLUTION_DURATION = 5000;\nconst TIMER_RADIUS = 6;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst TIMER_UPDATE_INTERVAL = 1000;\nconst NBSP = '\\u00A0';\n\nconst Poll: FC<OwnProps> = ({\n  message,\n  poll,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onSendVote,\n}) => {\n  const {\n    loadMessage, openPollResults, requestConfetti, showNotification,\n  } = getActions();\n\n  const { id: messageId, chatId } = message;\n  const { summary, results } = poll;\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [chosenOptions, setChosenOptions] = useState<string[]>([]);\n  const [wasSubmitted, setWasSubmitted] = useState<boolean>(false);\n  const [closePeriod, setClosePeriod] = useState<number>(\n    !summary.closed && summary.closeDate && summary.closeDate > 0\n      ? Math.min(summary.closeDate - getServerTime(), summary.closePeriod!)\n      : 0,\n  );\n  // eslint-disable-next-line no-null/no-null\n  const countdownRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const timerCircleRef = useRef<SVGCircleElement>(null);\n  const { results: voteResults, totalVoters } = results;\n  const hasVoted = voteResults && voteResults.some((r) => r.isChosen);\n  const canVote = !summary.closed && !hasVoted;\n  const canViewResult = !canVote && summary.isPublic && Number(results.totalVoters) > 0;\n  const isMultiple = canVote && summary.multipleChoice;\n  const recentVoterIds = results.recentVoterIds;\n  const maxVotersCount = voteResults ? Math.max(...voteResults.map((r) => r.votersCount)) : totalVoters;\n  const correctResults = useMemo(() => {\n    return voteResults?.filter((r) => r.isCorrect).map((r) => r.option) || [];\n  }, [voteResults]);\n  const answers = useMemo(() => summary.answers.map((a) => ({\n    label: renderTextWithEntities({\n      text: a.text.text,\n      entities: a.text.entities,\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    }),\n    value: a.option,\n    hidden: Boolean(summary.quiz && summary.closePeriod && closePeriod <= 0),\n  })), [\n    closePeriod, observeIntersectionForLoading, observeIntersectionForPlaying,\n    summary.answers, summary.closePeriod, summary.quiz,\n  ]);\n\n  useEffect(() => {\n    const chosen = poll.results.results?.find((result) => result.isChosen);\n    if (isSubmitting && chosen) {\n      if (chosen.isCorrect) {\n        requestConfetti({});\n      }\n      setIsSubmitting(false);\n    }\n  }, [isSubmitting, poll.results.results, requestConfetti]);\n\n  useLayoutEffect(() => {\n    if (closePeriod > 0) {\n      setTimeout(() => setClosePeriod(closePeriod - 1), TIMER_UPDATE_INTERVAL);\n    }\n    if (!timerCircleRef.current) return;\n\n    if (closePeriod <= 5) {\n      countdownRef.current!.classList.add('hurry-up');\n    }\n\n    const strokeDashOffset = ((summary.closePeriod! - closePeriod) / summary.closePeriod!) * TIMER_CIRCUMFERENCE;\n    timerCircleRef.current.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  }, [closePeriod, summary.closePeriod]);\n\n  useEffect(() => {\n    if (summary.quiz && (closePeriod <= 0 || (hasVoted && !summary.closed))) {\n      loadMessage({ chatId, messageId });\n    }\n  }, [chatId, closePeriod, hasVoted, loadMessage, messageId, summary.closed, summary.quiz]);\n\n  // If the client time is not synchronized, the poll must be updated after the closePeriod time has expired.\n  useEffect(() => {\n    let timer: number | undefined;\n\n    if (summary.quiz && !summary.closed && summary.closePeriod && summary.closePeriod > 0) {\n      timer = window.setTimeout(() => {\n        loadMessage({ chatId, messageId });\n      }, summary.closePeriod * 1000);\n    }\n\n    return () => {\n      if (timer) {\n        window.clearTimeout(timer);\n      }\n    };\n  }, [canVote, chatId, loadMessage, messageId, summary.closePeriod, summary.closed, summary.quiz]);\n\n  const recentVoters = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const global = getGlobal();\n    return recentVoterIds ? recentVoterIds.reduce((result: ApiPeer[], id) => {\n      const peer = selectPeer(global, id);\n      if (peer) {\n        result.push(peer);\n      }\n\n      return result;\n    }, []) : [];\n  }, [recentVoterIds]);\n\n  const handleRadioChange = useLastCallback((option: string) => {\n    setChosenOptions([option]);\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote([option]);\n  });\n\n  const handleCheckboxChange = useLastCallback((options: string[]) => {\n    setChosenOptions(options);\n  });\n\n  const handleVoteClick = useLastCallback(() => {\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote(chosenOptions);\n  });\n\n  const handleViewResultsClick = useLastCallback(() => {\n    openPollResults({ chatId, messageId });\n  });\n\n  const showSolution = useLastCallback(() => {\n    showNotification({\n      localId: getMessageKey(message),\n      message: renderTextWithEntities({ text: poll.results.solution!, entities: poll.results.solutionEntities }),\n      duration: SOLUTION_DURATION,\n      containerSelector: SOLUTION_CONTAINER_ID,\n    });\n  });\n\n  // Show the solution to quiz if the answer was incorrect\n  useEffect(() => {\n    if (wasSubmitted && hasVoted && summary.quiz && results.results && poll.results.solution) {\n      const correctResult = results.results.find((r) => r.isChosen && r.isCorrect);\n      if (!correctResult) {\n        showSolution();\n      }\n    }\n  }, [hasVoted, wasSubmitted, results.results, summary.quiz, poll.results.solution]);\n\n  const lang = useOldLang();\n\n  function renderResultOption(answer: ApiPollAnswer) {\n    return (\n      <PollOption\n        key={answer.option}\n        shouldAnimate={wasSubmitted || !canVote}\n        answer={answer}\n        voteResults={voteResults}\n        totalVoters={totalVoters}\n        maxVotersCount={maxVotersCount}\n        correctResults={correctResults}\n      />\n    );\n  }\n\n  function renderRecentVoters() {\n    return (\n      recentVoters.length > 0 && (\n        <div className=\"poll-recent-voters\">\n          <AvatarList\n            size=\"micro\"\n            peers={recentVoters}\n          />\n        </div>\n      )\n    );\n  }\n\n  return (\n    <div className=\"Poll\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"poll-question\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n          observeIntersectionForLoading,\n          observeIntersectionForPlaying,\n        })}\n      </div>\n      <div className=\"poll-type\">\n        {lang(getPollTypeString(summary))}\n        {renderRecentVoters()}\n        {closePeriod > 0 && canVote && (\n          <div ref={countdownRef} className=\"poll-countdown\">\n            <span>{formatMediaDuration(closePeriod)}</span>\n            <svg width=\"16px\" height=\"16px\">\n              <circle\n                ref={timerCircleRef}\n                cx=\"8\"\n                cy=\"8\"\n                r={TIMER_RADIUS}\n                className=\"poll-countdown-progress\"\n                transform=\"rotate(-90, 8, 8)\"\n                stroke-dasharray={TIMER_CIRCUMFERENCE}\n                stroke-dashoffset=\"0\"\n              />\n            </svg>\n          </div>\n        )}\n        {summary.quiz && poll.results.solution && !canVote && (\n          <Button\n            round\n            size=\"tiny\"\n            color=\"translucent\"\n            className=\"poll-quiz-help\"\n            onClick={showSolution}\n            ariaLabel=\"Show Solution\"\n          >\n            <Icon name=\"lamp\" />\n          </Button>\n        )}\n      </div>\n      {canVote && (\n        <div className=\"poll-answers\" onClick={stopPropagation}>\n          {isMultiple\n            ? (\n              <CheckboxGroup\n                options={answers}\n                onChange={handleCheckboxChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOptions={isSubmitting ? chosenOptions : undefined}\n                isRound\n              />\n            )\n            : (\n              <RadioGroup\n                name={`poll-${messageId}`}\n                options={answers}\n                onChange={handleRadioChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOption={isSubmitting ? chosenOptions[0] : undefined}\n              />\n            )}\n        </div>\n      )}\n      {!canVote && (\n        <div className=\"poll-results\">\n          {summary.answers.map(renderResultOption)}\n        </div>\n      )}\n      {!canViewResult && !isMultiple && (\n        <div className=\"poll-voters-count\">{getReadableVotersCount(lang, summary.quiz, results.totalVoters)}</div>\n      )}\n      {isMultiple && (\n        <Button\n          isText\n          disabled={chosenOptions.length === 0}\n          size=\"tiny\"\n          onClick={handleVoteClick}\n        >\n          {lang('PollSubmitVotes')}\n        </Button>\n      )}\n      {canViewResult && (\n        <Button\n          isText\n          size=\"tiny\"\n          onClick={handleViewResultsClick}\n        >\n          {lang('PollViewResults')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nfunction getPollTypeString(summary: ApiPoll['summary']) {\n  // When we just created the poll, some properties don't exist.\n  if (typeof summary.isPublic === 'undefined') {\n    return NBSP;\n  }\n\n  if (summary.closed) {\n    return 'FinalResults';\n  }\n\n  if (summary.quiz) {\n    return summary.isPublic ? 'QuizPoll' : 'AnonymousQuizPoll';\n  }\n\n  return summary.isPublic ? 'PublicPoll' : 'AnonymousPoll';\n}\n\nfunction getReadableVotersCount(lang: OldLangFn, isQuiz: true | undefined, count?: number) {\n  if (!count) {\n    return lang(isQuiz ? 'Chat.Quiz.TotalVotesEmpty' : 'Chat.Poll.TotalVotesResultEmpty');\n  }\n\n  return lang(isQuiz ? 'Answer' : 'Vote', count, 'i');\n}\n\nfunction stopPropagation(e: React.MouseEvent<HTMLDivElement>) {\n  e.stopPropagation();\n}\n\nexport default memo(Poll);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FPceNkgD\",\"inactive\":\"hruUWBuj\",\"mirrored\":\"GydRBA08\",\"effect\":\"WMMaWlOL\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_WEBM_SUPPORTED } from '../../../util/windowEnvironment';\nimport { getStickerDimensions } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport StickerView from '../../common/StickerView';\nimport Portal from '../../ui/Portal';\n\nimport styles from './Sticker.module.scss';\n\n// https://github.com/telegramdesktop/tdesktop/blob/master/Telegram/SourceFiles/history/view/media/history_view_sticker.cpp#L42\nconst EFFECT_SIZE_MULTIPLIER = 1 + 0.245 * 2;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection: ObserveFn;\n  observeIntersectionForPlaying: ObserveFn;\n  shouldLoop?: boolean;\n  shouldPlayEffect?: boolean;\n  withEffect?: boolean;\n  onStopEffect?: VoidFunction;\n};\n\nconst Sticker: FC<OwnProps> = ({\n  message, observeIntersection, observeIntersectionForPlaying, shouldLoop,\n  shouldPlayEffect, withEffect, onStopEffect,\n}) => {\n  const { showNotification, openStickerSet } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const effectRef = useRef<HTMLDivElement>(null);\n\n  const sticker = message.content.sticker!;\n  const { stickerSetInfo, isVideo, hasEffect } = sticker;\n  const isMirrored = !message.isOutgoing;\n\n  const mediaHash = sticker.isPreloadedGlobally ? undefined : (\n    getStickerMediaHash(sticker, isVideo && !IS_WEBM_SUPPORTED ? 'pictogram' : 'inline')!\n  );\n\n  const canLoad = useIsIntersecting(ref, observeIntersection);\n  const canPlay = useIsIntersecting(ref, observeIntersectionForPlaying);\n  const mediaHashEffect = `sticker${sticker.id}?size=f`;\n  const effectBlobUrl = useMedia(\n    mediaHashEffect,\n    !canLoad || !hasEffect || !withEffect,\n    ApiMediaFormat.BlobUrl,\n  );\n  const [isPlayingEffect, startPlayingEffect, stopPlayingEffect] = useFlag();\n\n  const handleEffectEnded = useLastCallback(() => {\n    stopPlayingEffect();\n    onStopEffect?.();\n  });\n\n  useEffect(() => {\n    if (hasEffect && withEffect && canPlay && shouldPlayEffect) {\n      startPlayingEffect();\n    }\n  }, [hasEffect, canPlay, shouldPlayEffect, startPlayingEffect, withEffect]);\n\n  const shouldRenderEffect = hasEffect && withEffect && effectBlobUrl && isPlayingEffect;\n  useOverlayPosition({\n    anchorRef: ref,\n    overlayRef: effectRef,\n    isMirrored,\n    isDisabled: !shouldRenderEffect,\n  });\n\n  const openModal = useLastCallback(() => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (hasEffect) {\n      if (isPlayingEffect || !withEffect) {\n        showNotification({\n          message: lang('PremiumStickerTooltip'),\n          action: {\n            action: 'openStickerSet',\n            payload: {\n              stickerSetInfo: sticker.stickerSetInfo,\n            },\n          },\n          actionText: lang('ViewAction'),\n        });\n        return;\n      } else if (withEffect) {\n        startPlayingEffect();\n        return;\n      }\n    }\n    openModal();\n  });\n\n  const isMemojiSticker = 'isMissing' in stickerSetInfo;\n  const { width, height } = getStickerDimensions(sticker, isMobile);\n  const className = buildClassName(\n    'media-inner',\n    styles.root,\n    isMemojiSticker && styles.inactive,\n    hasEffect && isMirrored && styles.mirrored,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      style={`width: ${width}px; height: ${height}px;`}\n      onClick={!isMemojiSticker ? handleClick : undefined}\n    >\n      <StickerView\n        containerRef={ref}\n        sticker={sticker}\n        fullMediaHash={mediaHash}\n        fullMediaClassName=\"full-media\"\n        size={width}\n        shouldLoop={shouldLoop}\n        noLoad={!canLoad}\n        noPlay={!canPlay}\n        withSharedAnimation\n      />\n      {shouldRenderEffect && (\n        <Portal>\n          <AnimatedSticker\n            ref={effectRef}\n            key={mediaHashEffect}\n            className={buildClassName(styles.effect, isMirrored && styles.mirrored)}\n            tgsUrl={effectBlobUrl}\n            size={width * EFFECT_SIZE_MULTIPLIER}\n            play\n            isLowPriority\n            noLoop\n            onEnded={handleEffectEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nexport default Sticker;\n","import React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiTypeStory,\n} from '../../../api/types';\n\nimport { selectPeerStory } from '../../../global/selectors';\n\nimport BaseStory from './BaseStory';\n\ninterface OwnProps {\n  message: ApiMessage;\n  isProtected?: boolean;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  isConnected?: boolean;\n}\n\nfunction Story({\n  message, story, isProtected, isConnected,\n}: OwnProps & StateProps) {\n  const { storyData } = message.content;\n\n  return (\n    <BaseStory\n      story={story || storyData}\n      isProtected={isProtected}\n      isConnected={isConnected}\n    />\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const { id, peerId } = message.content.storyData!;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    isConnected: global.connectionState === 'connectionStateReady',\n  };\n})(Story));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiTypeStory, ApiUser,\n} from '../../../api/types';\n\nimport { getPeerTitle, getStoryMediaHash, getUserFirstOrLastName } from '../../../global/helpers';\nimport {\n  selectPeer,\n  selectPeerStories,\n  selectPeerStory,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\ninterface OwnProps {\n  message: ApiMessage;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  peer?: ApiPeer;\n  targetUser?: ApiUser;\n  isUnread?: boolean;\n}\n\nfunction StoryMention({\n  message, story, peer, isUnread, targetUser,\n}: OwnProps & StateProps) {\n  const { openStoryViewer } = getActions();\n\n  const lang = useOldLang();\n\n  const { storyData } = message.content;\n\n  const handleClick = useLastCallback(() => {\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  const isDeleted = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded\n    ? getStoryMediaHash(story, 'pictogram')\n    : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  useEnsureStory(storyData!.peerId, storyData!.id, story);\n\n  function getTitle() {\n    if (peer && 'isSelf' in peer && peer.isSelf) {\n      return isDeleted\n        ? lang('ExpiredStoryMentioned', getUserFirstOrLastName(targetUser))\n        : lang('StoryYouMentionedTitle', getUserFirstOrLastName(targetUser));\n    }\n\n    return isDeleted\n      ? lang('ExpiredStoryMention')\n      : lang('StoryMentionedTitle', getPeerTitle(lang, peer!));\n  }\n\n  return (\n    <div\n      className={buildClassName('action-message-story-mention', isUnread && 'is-unread', isLoaded && 'with-preview')}\n      tabIndex={0}\n      role=\"button\"\n      onClick={isLoaded ? handleClick : undefined}\n    >\n      {isLoaded && (\n        <span className=\"story-media-wrapper\">\n          {thumbUrl && (\n            <img src={thumbUrl} alt=\"\" className=\"story-media\" />\n          )}\n        </span>\n      )}\n\n      <span className=\"story-title\">{renderText(getTitle(), ['emoji', 'simple_markdown'])}</span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const { id, peerId } = message.content.storyData!;\n  const lastReadId = selectPeerStories(global, peerId)?.lastReadId;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    peer: selectPeer(global, peerId),\n    targetUser: selectUser(global, message.chatId),\n    isUnread: Boolean(lastReadId && lastReadId < id),\n  };\n})(StoryMention));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatMember,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n  ApiThreadInfo,\n  ApiTopic,\n  ApiTypeStory,\n  ApiUser,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ActiveEmojiInteraction,\n  ChatTranslatedMessages,\n  FocusDirection,\n  IAlbum,\n  ISettings,\n  MessageListType,\n  ScrollTargetPosition,\n  ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport type { OnIntersectPinnedMessage } from '../hooks/usePinnedMessage';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { EMOJI_STATUS_LOOP_LIMIT, MESSAGE_APPEARANCE_DELAY } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getIsDownloading,\n  getMessageContent,\n  getMessageCustomShape,\n  getMessageDownloadableMedia,\n  getMessageHtmlId,\n  getMessageSingleCustomEmoji,\n  getMessageSingleRegularEmoji,\n  getPeerTitle,\n  hasMessageText,\n  hasMessageTtl,\n  isAnonymousForwardsChat,\n  isAnonymousOwnMessage,\n  isChatChannel,\n  isChatGroup,\n  isChatPublic,\n  isGeoLiveExpired,\n  isMessageLocal,\n  isMessageTranslatable,\n  isOwnMessage,\n  isReplyToMessage,\n  isSystemBot,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo, getStoryReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectActiveDownloads,\n  selectAnimatedEmoji,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectCanReplyToMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatTranslations,\n  selectCurrentMiddleSearch,\n  selectDefaultReaction,\n  selectForwardedSender,\n  selectIsChatProtected,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsDocumentGroupSelected,\n  selectIsInSelectMode,\n  selectIsMessageFocused,\n  selectIsMessageProtected,\n  selectIsMessageSelected,\n  selectMessageIdsByGroupId,\n  selectMessageLastPlaybackTimestamp,\n  selectMessageTimestampableDuration,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectPollFromMessage,\n  selectReplyMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectSender,\n  selectSenderFromHeader,\n  selectShouldDetectChatLanguage,\n  selectShouldLoopStickers,\n  selectTabState,\n  selectTheme,\n  selectThreadInfo,\n  selectTopicFromMessage,\n  selectUploadProgress,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport stopEvent from '../../../util/stopEvent';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport { IS_ANDROID, IS_ELECTRON, IS_TRANSLATION_SUPPORTED } from '../../../util/windowEnvironment';\nimport { calculateDimensionsForMessageMedia, getStickerDimensions, REM } from '../../common/helpers/mediaDimensions';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\nimport renderText from '../../common/helpers/renderText';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\nimport { buildContentClassName } from './helpers/buildContentClassName';\nimport { calculateAlbumLayout } from './helpers/calculateAlbumLayout';\nimport getSingularPaidMedia from './helpers/getSingularPaidMedia';\nimport { calculateMediaDimensions, getMinMediaWidth, MIN_MEDIA_WIDTH_WITH_TEXT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useFlag from '../../../hooks/useFlag';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useMessageResizeObserver from '../../../hooks/useResizeMessageObserver';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useTextLanguage from '../../../hooks/useTextLanguage';\nimport useDetectChatLanguage from './hooks/useDetectChatLanguage';\nimport useFocusMessage from './hooks/useFocusMessage';\nimport useInnerHandlers from './hooks/useInnerHandlers';\nimport useMessageTranslation from './hooks/useMessageTranslation';\nimport useOuterHandlers from './hooks/useOuterHandlers';\n\nimport Audio from '../../common/Audio';\nimport Avatar from '../../common/Avatar';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Document from '../../common/Document';\nimport DotAnimation from '../../common/DotAnimation';\nimport EmbeddedMessage from '../../common/embedded/EmbeddedMessage';\nimport EmbeddedStory from '../../common/embedded/EmbeddedStory';\nimport FakeIcon from '../../common/FakeIcon';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport MessageText from '../../common/MessageText';\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport TopicChip from '../../common/TopicChip';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Button from '../../ui/Button';\nimport Album from './Album';\nimport AnimatedCustomEmoji from './AnimatedCustomEmoji';\nimport AnimatedEmoji from './AnimatedEmoji';\nimport CommentButton from './CommentButton';\nimport Contact from './Contact';\nimport ContextMenuContainer from './ContextMenuContainer.async';\nimport FactCheck from './FactCheck';\nimport Game from './Game';\nimport Giveaway from './Giveaway';\nimport InlineButtons from './InlineButtons';\nimport Invoice from './Invoice';\nimport InvoiceMediaPreview from './InvoiceMediaPreview';\nimport Location from './Location';\nimport MessageAppendix from './MessageAppendix';\nimport MessageEffect from './MessageEffect';\nimport MessageMeta from './MessageMeta';\nimport MessagePhoneCall from './MessagePhoneCall';\nimport PaidMediaOverlay from './PaidMediaOverlay';\nimport Photo from './Photo';\nimport Poll from './Poll';\nimport Reactions from './reactions/Reactions';\nimport RoundVideo from './RoundVideo';\nimport Sticker from './Sticker';\nimport Story from './Story';\nimport StoryMention from './StoryMention';\nimport Video from './Video';\nimport WebPage from './WebPage';\n\nimport './Message.scss';\n\ntype MessagePositionProperties = {\n  isFirstInGroup: boolean;\n  isLastInGroup: boolean;\n  isFirstInDocumentGroup: boolean;\n  isLastInDocumentGroup: boolean;\n  isLastInList: boolean;\n};\n\ntype OwnProps =\n  {\n    message: ApiMessage;\n    observeIntersectionForBottom?: ObserveFn;\n    observeIntersectionForLoading?: ObserveFn;\n    observeIntersectionForPlaying?: ObserveFn;\n    album?: IAlbum;\n    noAvatars?: boolean;\n    withAvatar?: boolean;\n    withSenderName?: boolean;\n    threadId: ThreadId;\n    messageListType: MessageListType;\n    noComments: boolean;\n    noReplies: boolean;\n    appearanceOrder: number;\n    isJustAdded: boolean;\n    memoFirstUnreadIdRef?: { current: number | undefined };\n    getIsMessageListReady?: Signal<boolean>;\n    onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n  }\n  & MessagePositionProperties;\n\ntype StateProps = {\n  theme: ISettings['theme'];\n  forceSenderName?: boolean;\n  sender?: ApiPeer;\n  canShowSender: boolean;\n  originSender?: ApiPeer;\n  botSender?: ApiUser;\n  isThreadTop?: boolean;\n  shouldHideReply?: boolean;\n  replyMessage?: ApiMessage;\n  replyMessageSender?: ApiPeer;\n  replyMessageForwardSender?: ApiPeer;\n  replyMessageChat?: ApiChat;\n  isReplyPrivate?: boolean;\n  replyStory?: ApiTypeStory;\n  storySender?: ApiPeer;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  uploadProgress?: number;\n  isInDocumentGroup: boolean;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  focusedQuote?: string;\n  noFocusHighlight?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n  isResizingContainer?: boolean;\n  isForwarding?: boolean;\n  isChatWithSelf?: boolean;\n  isRepliesChat?: boolean;\n  isAnonymousForwards?: boolean;\n  isChannel?: boolean;\n  isGroup?: boolean;\n  canReply?: boolean;\n  highlight?: string;\n  animatedEmoji?: string;\n  animatedCustomEmoji?: string;\n  hasActiveReactions?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  isGroupSelected?: boolean;\n  isDownloading?: boolean;\n  threadId?: ThreadId;\n  isPinnedList?: boolean;\n  isPinned?: boolean;\n  canAutoLoadMedia?: boolean;\n  canAutoPlayMedia?: boolean;\n  hasLinkedChat?: boolean;\n  shouldLoopStickers?: boolean;\n  autoLoadFileMaxSizeMb: number;\n  repliesThreadInfo?: ApiThreadInfo;\n  reactionMessage?: ApiMessage;\n  availableReactions?: ApiAvailableReaction[];\n  defaultReaction?: ApiReaction;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  hasUnreadReaction?: boolean;\n  isTranscribing?: boolean;\n  transcribedText?: string;\n  isTranscriptionError?: boolean;\n  isPremium: boolean;\n  senderAdminMember?: ApiChatMember;\n  messageTopic?: ApiTopic;\n  hasTopicChip?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  areTranslationsEnabled?: boolean;\n  shouldDetectChatLanguage?: boolean;\n  requestedTranslationLanguage?: string;\n  requestedChatTranslationLanguage?: string;\n  withAnimatedEffects?: boolean;\n  webPageStory?: ApiTypeStory;\n  isConnected: boolean;\n  isLoadingComments?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  senderBoosts?: number;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  canTranscribeVoice?: boolean;\n  viaBusinessBot?: ApiUser;\n  effect?: ApiAvailableEffect;\n  poll?: ApiPoll;\n  maxTimestamp?: number;\n  lastPlaybackTimestamp?: number;\n};\n\ntype MetaPosition =\n  'in-text'\n  | 'standalone'\n  | 'none';\ntype ReactionsPosition =\n  'inside'\n  | 'outside'\n  | 'none';\ntype QuickReactionPosition =\n  'in-content'\n  | 'in-meta';\n\nconst NBSP = '\\u00A0';\nconst NO_MEDIA_CORNERS_THRESHOLD = 18;\nconst QUICK_REACTION_SIZE = 1.75 * REM;\nconst EXTRA_SPACE_FOR_REACTIONS = 2.25 * REM;\n\nconst Message: FC<OwnProps & StateProps> = ({\n  message,\n  observeIntersectionForBottom,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  album,\n  noAvatars,\n  withAvatar,\n  withSenderName,\n  noComments,\n  noReplies,\n  appearanceOrder,\n  isJustAdded,\n  isFirstInGroup,\n  isPremium,\n  isLastInGroup,\n  isFirstInDocumentGroup,\n  isLastInDocumentGroup,\n  isTranscribing,\n  transcribedText,\n  isLastInList,\n  theme,\n  forceSenderName,\n  sender,\n  canShowSender,\n  originSender,\n  botSender,\n  isThreadTop,\n  shouldHideReply,\n  replyMessage,\n  replyMessageSender,\n  replyMessageForwardSender,\n  replyMessageChat,\n  replyStory,\n  isReplyPrivate,\n  storySender,\n  outgoingStatus,\n  uploadProgress,\n  isInDocumentGroup,\n  isLoadingComments,\n  isProtected,\n  isChatProtected,\n  isFocused,\n  focusDirection,\n  focusedQuote,\n  noFocusHighlight,\n  scrollTargetPosition,\n  isResizingContainer,\n  isForwarding,\n  isChatWithSelf,\n  isRepliesChat,\n  isAnonymousForwards,\n  isChannel,\n  isGroup,\n  canReply,\n  highlight,\n  animatedEmoji,\n  animatedCustomEmoji,\n  hasActiveReactions,\n  hasLinkedChat,\n  isInSelectMode,\n  isSelected,\n  isGroupSelected,\n  threadId,\n  reactionMessage,\n  availableReactions,\n  defaultReaction,\n  activeEmojiInteractions,\n  messageListType,\n  isPinnedList,\n  isPinned,\n  isDownloading,\n  canAutoLoadMedia,\n  canAutoPlayMedia,\n  shouldLoopStickers,\n  autoLoadFileMaxSizeMb,\n  repliesThreadInfo,\n  hasUnreadReaction,\n  memoFirstUnreadIdRef,\n  senderAdminMember,\n  messageTopic,\n  hasTopicChip,\n  chatTranslations,\n  areTranslationsEnabled,\n  shouldDetectChatLanguage,\n  requestedTranslationLanguage,\n  requestedChatTranslationLanguage,\n  withAnimatedEffects,\n  webPageStory,\n  isConnected,\n  getIsMessageListReady,\n  shouldWarnAboutSvg,\n  senderBoosts,\n  tags,\n  canTranscribeVoice,\n  viaBusinessBot,\n  effect,\n  poll,\n  maxTimestamp,\n  lastPlaybackTimestamp,\n  onIntersectPinnedMessage,\n}) => {\n  const {\n    toggleMessageSelection,\n    clickBotInlineButton,\n    disableContextMenuHint,\n    animateUnreadReaction,\n    focusLastMessage,\n    markMentionsRead,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const bottomMarkerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const quickReactionRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [isTranscriptionHidden, setTranscriptionHidden] = useState(false);\n  const [isPlayingSnapAnimation, setIsPlayingSnapAnimation] = useState(false);\n  const [isPlayingDeleteAnimation, setIsPlayingDeleteAnimation] = useState(false);\n  const [shouldPlayEffect, requestEffect, hideEffect] = useFlag();\n  const { isMobile, isTouchScreen } = useAppLayout();\n\n  useOnIntersect(bottomMarkerRef, observeIntersectionForBottom);\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    contextMenuTarget,\n    handleBeforeContextMenu,\n    handleContextMenu: onContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(\n    ref,\n    isTouchScreen && isInSelectMode,\n    !IS_ELECTRON,\n    IS_ANDROID,\n    getIsMessageListReady,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      disableContextMenuHint();\n    }\n  }, [isContextMenuOpen, disableContextMenuHint]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * MESSAGE_APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  useShowTransition({\n    ref,\n    isOpen: isShown || isJustAdded,\n    noMountTransition: noAppearanceAnimation && !isJustAdded,\n    className: false,\n  });\n\n  const {\n    id: messageId, chatId, forwardInfo, viaBotId, isTranscriptionError, factCheck,\n  } = message;\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      const id = album ? album.mainMessage.id : messageId;\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [id] });\n    }\n  });\n\n  const isLocal = isMessageLocal(message);\n  const isOwn = isOwnMessage(message);\n  const isScheduled = messageListType === 'scheduled' || message.isScheduled;\n  const hasMessageReply = isReplyToMessage(message) && !shouldHideReply;\n\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo, audio,\n    voice, document, sticker, contact,\n    webPage, invoice, location,\n    action, game, storyData, giveaway,\n    giveawayResults,\n  } = getMessageContent(message);\n\n  const messageReplyInfo = getMessageReplyInfo(message);\n  const storyReplyInfo = getStoryReplyInfo(message);\n\n  const withVoiceTranscription = Boolean(!isTranscriptionHidden && (isTranscriptionError || transcribedText));\n\n  const hasStoryReply = Boolean(storyReplyInfo);\n  const hasThread = Boolean(repliesThreadInfo) && messageListType === 'thread';\n  const isCustomShape = !withVoiceTranscription && getMessageCustomShape(message);\n  const hasAnimatedEmoji = isCustomShape && (animatedEmoji || animatedCustomEmoji);\n  const hasReactions = reactionMessage?.reactions && !areReactionsEmpty(reactionMessage.reactions);\n  const asForwarded = (\n    forwardInfo\n    && (!isChatWithSelf || isScheduled)\n    && !isRepliesChat\n    && !forwardInfo.isLinkedChannelPost\n    && !isAnonymousForwards\n    && !botSender\n  ) || Boolean(storyData && !storyData.isMention);\n  const canShowSenderBoosts = Boolean(senderBoosts) && !asForwarded && isFirstInGroup;\n  const isStoryMention = storyData?.isMention;\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isAlbum = Boolean(album)\n    && (\n      (album.isPaidMedia && paidMedia!.extendedMedia.length > 1)\n      || album.messages.length > 1\n    ) && !album.messages.some((msg) => Object.keys(msg.content).length === 0);\n  const isInDocumentGroupNotFirst = isInDocumentGroup && !isFirstInDocumentGroup;\n  const isInDocumentGroupNotLast = isInDocumentGroup && !isLastInDocumentGroup;\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n  const canShowActionButton = (\n    !(isContextMenuShown || isInSelectMode || isForwarding)\n    && !isInDocumentGroupNotLast\n    && !isStoryMention\n    && !((sticker || hasAnimatedEmoji) && asForwarded)\n  );\n  const canForward = isChannel && !isScheduled && message.isForwardingAllowed\n  && !isChatProtected;\n  const canFocus = Boolean(isPinnedList\n    || (forwardInfo\n      && (forwardInfo.isChannelPost || isChatWithSelf || isRepliesChat || isAnonymousForwards)\n      && forwardInfo.fromMessageId\n    ));\n\n  const hasFactCheck = Boolean(factCheck?.text);\n\n  const hasForwardedCustomShape = asForwarded && isCustomShape;\n  const hasSubheader = hasTopicChip || hasMessageReply || hasStoryReply || hasForwardedCustomShape;\n\n  const selectMessage = useLastCallback((e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => {\n    toggleMessageSelection({\n      messageId,\n      groupedId,\n      ...(e?.shiftKey && { withShift: true }),\n      ...(isAlbum && { childMessageIds: album!.messages.map(({ id }) => id) }),\n    });\n  });\n\n  const messageSender = canShowSender ? sender : undefined;\n\n  const shouldPreferOriginSender = forwardInfo\n    && (isChatWithSelf || isRepliesChat || isAnonymousForwards || !messageSender);\n  const avatarPeer = shouldPreferOriginSender ? originSender : messageSender;\n\n  const messageColorPeer = asForwarded ? originSender : sender;\n  const noUserColors = isOwn && !isCustomShape;\n\n  const senderPeer = (forwardInfo || storyData) ? originSender : messageSender;\n  const hasTtl = hasMessageTtl(message);\n\n  const {\n    handleMouseDown,\n    handleClick,\n    handleContextMenu,\n    handleDoubleClick,\n    handleContentDoubleClick,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  } = useOuterHandlers(\n    selectMessage,\n    ref,\n    messageId,\n    Boolean(isInSelectMode),\n    Boolean(canReply),\n    Boolean(isProtected),\n    onContextMenu,\n    handleBeforeContextMenu,\n    chatId,\n    isContextMenuShown,\n    quickReactionRef,\n    isInDocumentGroupNotLast,\n    getIsMessageListReady,\n  );\n\n  const {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleMediaClick,\n    handleDocumentClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll,\n    handleTopicChipClick,\n    handleStoryClick,\n  } = useInnerHandlers({\n    lang,\n    selectMessage,\n    message,\n    chatId,\n    threadId,\n    isInDocumentGroup,\n    asForwarded,\n    isScheduled,\n    album,\n    avatarPeer,\n    senderPeer,\n    botSender,\n    messageTopic,\n    isTranslatingChat: Boolean(requestedChatTranslationLanguage),\n    story: replyStory && 'content' in replyStory ? replyStory : undefined,\n    isReplyPrivate,\n    isRepliesChat,\n    isSavedMessages: isChatWithSelf,\n    lastPlaybackTimestamp,\n  });\n\n  const handleEffectClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    requestEffect();\n  });\n\n  useEffect(() => {\n    if (!isLastInList) {\n      return;\n    }\n\n    if (withVoiceTranscription && transcribedText) {\n      focusLastMessage();\n    }\n  }, [focusLastMessage, isLastInList, transcribedText, withVoiceTranscription]);\n\n  useEffect(() => {\n    const element = ref.current;\n    const isPartialAlbumDelete = message.isInAlbum && album?.messages.some((msg) => !msg.isDeleting);\n    if (message.isDeleting && element && !isPartialAlbumDelete) {\n      if (animateSnap(element)) {\n        setIsPlayingSnapAnimation(true);\n      } else {\n        setIsPlayingDeleteAnimation(true);\n      }\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- Only start animation on `isDeleting` change\n  }, [message.isDeleting]);\n\n  const textMessage = album?.hasMultipleCaptions ? undefined : (album?.captionMessage || message);\n  const hasTextContent = textMessage && hasMessageText(textMessage);\n  const hasText = hasTextContent || hasFactCheck;\n\n  const containerClassName = buildClassName(\n    'Message message-list-item',\n    isFirstInGroup && 'first-in-group',\n    isProtected && 'hide-on-print',\n    isProtected && !hasTextContent ? 'is-protected' : 'allow-selection',\n    isLastInGroup && 'last-in-group',\n    isFirstInDocumentGroup && 'first-in-document-group',\n    isLastInDocumentGroup && 'last-in-document-group',\n    isLastInList && 'last-in-list',\n    isOwn && 'own',\n    Boolean(message.viewsCount) && 'has-views',\n    message.isEdited && 'was-edited',\n    hasMessageReply && 'has-reply',\n    isContextMenuOpen && 'has-menu-open',\n    isFocused && !noFocusHighlight && 'focused',\n    isForwarding && 'is-forwarding',\n    isPlayingDeleteAnimation && 'is-deleting',\n    isPlayingSnapAnimation && 'is-dissolving',\n    isInDocumentGroup && 'is-in-document-group',\n    isAlbum && 'is-album',\n    message.hasUnreadMention && 'has-unread-mention',\n    isSelected && 'is-selected',\n    isInSelectMode && 'is-in-selection-mode',\n    isThreadTop && !withAvatar && 'is-thread-top',\n    Boolean(message.inlineButtons) && 'has-inline-buttons',\n    isSwiped && 'is-swiped',\n    isJustAdded && 'is-just-added',\n    (hasActiveReactions || shouldPlayEffect) && 'has-active-effect',\n    isStoryMention && 'is-story-mention',\n    !canShowActionButton && 'no-action-button',\n  );\n\n  const text = textMessage && getMessageContent(textMessage).text;\n  const isInvertedMedia = Boolean(message.isInvertedMedia);\n\n  const { replyToMsgId, replyToPeerId, isQuote } = messageReplyInfo || {};\n  const { peerId: storyReplyPeerId, storyId: storyReplyId } = storyReplyInfo || {};\n\n  useEffect(() => {\n    if ((sticker?.hasEffect || effect) && ((\n      memoFirstUnreadIdRef?.current && messageId >= memoFirstUnreadIdRef.current\n    ) || isLocal)) {\n      requestEffect();\n    }\n  }, [effect, isLocal, memoFirstUnreadIdRef, messageId, sticker?.hasEffect]);\n\n  const detectedLanguage = useTextLanguage(\n    text?.text,\n    !(areTranslationsEnabled || shouldDetectChatLanguage),\n    getIsMessageListReady,\n  );\n  useDetectChatLanguage(message, detectedLanguage, !shouldDetectChatLanguage, getIsMessageListReady);\n\n  const shouldTranslate = isMessageTranslatable(message, !requestedChatTranslationLanguage);\n  const { isPending: isTranslationPending, translatedText } = useMessageTranslation(\n    chatTranslations, chatId, shouldTranslate ? messageId : undefined, requestedTranslationLanguage,\n  );\n  // Used to display previous result while new one is loading\n  const previousTranslatedText = usePreviousDeprecated(translatedText, Boolean(shouldTranslate));\n\n  const currentTranslatedText = translatedText || previousTranslatedText;\n\n  const phoneCall = action?.type === 'phoneCall' ? action : undefined;\n\n  const isMediaWithCommentButton = (repliesThreadInfo || (hasLinkedChat && isChannel && isLocal))\n    && !isInDocumentGroupNotLast\n    && messageListType === 'thread'\n    && !noComments;\n  const withCommentButton = repliesThreadInfo?.isCommentsInfo\n    && !isInDocumentGroupNotLast && messageListType === 'thread'\n    && !noComments;\n  const withQuickReactionButton = !isTouchScreen && !phoneCall && !isInSelectMode && defaultReaction\n    && !isInDocumentGroupNotLast && !isStoryMention && !hasTtl;\n\n  const hasOutsideReactions = !withVoiceTranscription && hasReactions\n    && (isCustomShape || ((photo || video || storyData || (location?.mediaType === 'geo')) && !hasText));\n\n  const contentClassName = buildContentClassName(message, album, {\n    poll,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread: hasThread && !noComments,\n    forceSenderName,\n    hasCommentCounter: hasThread && repliesThreadInfo.messagesCount > 0,\n    hasCommentButton: withCommentButton,\n    hasActionButton: canForward || canFocus,\n    hasReactions,\n    isGeoLiveActive: location?.mediaType === 'geoLive' && !isGeoLiveExpired(message),\n    withVoiceTranscription,\n    peerColorClass: getPeerColorClass(messageColorPeer, noUserColors, true),\n    hasOutsideReactions,\n  });\n\n  const withAppendix = contentClassName.includes('has-appendix');\n  const emojiSize = getCustomEmojiSize(message.emojiOnlyCount);\n\n  let metaPosition!: MetaPosition;\n  if (phoneCall) {\n    metaPosition = 'none';\n  } else if (isInDocumentGroupNotLast) {\n    metaPosition = 'none';\n  } else if (hasText && !webPage && !emojiSize && !isInvertedMedia) {\n    metaPosition = 'in-text';\n  } else if (isInvertedMedia && !emojiSize && (hasFactCheck || webPage)) {\n    metaPosition = 'in-text';\n  } else {\n    metaPosition = 'standalone';\n  }\n\n  let reactionsPosition!: ReactionsPosition;\n  if (hasReactions) {\n    if (hasOutsideReactions) {\n      reactionsPosition = 'outside';\n    } else if (asForwarded) {\n      metaPosition = 'standalone';\n      reactionsPosition = 'inside';\n    } else {\n      reactionsPosition = 'inside';\n    }\n  } else {\n    reactionsPosition = 'none';\n  }\n\n  const quickReactionPosition: QuickReactionPosition = isCustomShape ? 'in-meta' : 'in-content';\n\n  useEnsureMessage(\n    replyToPeerId || chatId,\n    replyToMsgId,\n    replyMessage,\n    message.id,\n    shouldHideReply || isQuote || isReplyPrivate,\n  );\n\n  useEnsureStory(\n    storyReplyPeerId || chatId,\n    storyReplyId,\n    replyStory,\n  );\n\n  useFocusMessage({\n    elementRef: ref,\n    chatId,\n    isFocused,\n    focusDirection,\n    noFocusHighlight,\n    isResizingContainer,\n    isJustAdded,\n    isQuote: Boolean(focusedQuote),\n    scrollTargetPosition,\n  });\n\n  const viaBusinessBotTitle = viaBusinessBot ? getPeerTitle(lang, viaBusinessBot) : undefined;\n\n  const canShowPostAuthor = !message.senderId;\n  const signature = viaBusinessBotTitle || (canShowPostAuthor && message.postAuthorTitle)\n    || ((asForwarded || isChatWithSelf) && forwardInfo?.postAuthorTitle)\n    || undefined;\n\n  useMessageResizeObserver(ref, isLastInList);\n\n  useEffect(() => {\n    const bottomMarker = bottomMarkerRef.current;\n    if (!bottomMarker || !isElementInViewport(bottomMarker)) return;\n\n    if (hasUnreadReaction) {\n      animateUnreadReaction({ messageIds: [messageId] });\n    }\n\n    let unreadMentionIds: number[] = [];\n    if (message.hasUnreadMention) {\n      unreadMentionIds = [messageId];\n    }\n\n    if (album) {\n      unreadMentionIds = album.messages.filter((msg) => msg.hasUnreadMention).map((msg) => msg.id);\n    }\n\n    if (unreadMentionIds.length) {\n      markMentionsRead({ messageIds: unreadMentionIds });\n    }\n  }, [hasUnreadReaction, album, messageId, animateUnreadReaction, message.hasUnreadMention]);\n\n  const albumLayout = useMemo(() => {\n    return isAlbum\n      ? calculateAlbumLayout(isOwn, Boolean(noAvatars), album!, isMobile)\n      : undefined;\n  }, [isAlbum, isOwn, noAvatars, album, isMobile]);\n\n  const extraPadding = asForwarded && !isCustomShape ? 28 : 0;\n\n  const sizeCalculations = useMemo(() => {\n    let calculatedWidth;\n    let contentWidth: number | undefined;\n    let noMediaCorners = false;\n    let style = '';\n    let reactionsMaxWidth;\n\n    if (!isAlbum && (photo || video || invoice?.extendedMedia)) {\n      let width: number | undefined;\n      if (photo || video) {\n        const media = (photo || video);\n        if (media && !isRoundVideo) {\n          width = calculateMediaDimensions({\n            media,\n            isOwn,\n            asForwarded,\n            noAvatars,\n            isMobile,\n          }).width;\n        }\n      } else if (invoice?.extendedMedia && (\n        invoice.extendedMedia.width && invoice.extendedMedia.height\n      )) {\n        const { width: previewWidth, height: previewHeight } = invoice.extendedMedia;\n        width = calculateDimensionsForMessageMedia({\n          width: previewWidth,\n          height: previewHeight,\n          fromOwnMessage: isOwn,\n          asForwarded,\n          noAvatars,\n          isMobile,\n        }).width;\n      }\n\n      if (width) {\n        if (width < MIN_MEDIA_WIDTH_WITH_TEXT) {\n          contentWidth = width;\n        }\n        calculatedWidth = Math.max(getMinMediaWidth(text?.text, isMediaWithCommentButton), width);\n        if (!asForwarded && invoice?.extendedMedia && calculatedWidth - width > NO_MEDIA_CORNERS_THRESHOLD) {\n          noMediaCorners = true;\n        }\n      }\n    } else if (albumLayout) {\n      calculatedWidth = Math.max(\n        getMinMediaWidth(text?.text, isMediaWithCommentButton), albumLayout.containerStyle.width,\n      );\n      if (calculatedWidth - albumLayout.containerStyle.width > NO_MEDIA_CORNERS_THRESHOLD) {\n        noMediaCorners = true;\n      }\n    }\n\n    if (calculatedWidth) {\n      style = `width: ${calculatedWidth}px`;\n      reactionsMaxWidth = calculatedWidth + EXTRA_SPACE_FOR_REACTIONS;\n    } else if (sticker && !hasSubheader) {\n      const { width } = getStickerDimensions(sticker, isMobile);\n      style = `width: ${width + extraPadding}px`;\n      reactionsMaxWidth = width + EXTRA_SPACE_FOR_REACTIONS;\n    }\n\n    return {\n      contentWidth, noMediaCorners, style, reactionsMaxWidth,\n    };\n  }, [\n    albumLayout, asForwarded, extraPadding, hasSubheader, invoice?.extendedMedia, isAlbum, isMediaWithCommentButton,\n    isMobile, isOwn, noAvatars, photo, sticker, text?.text, video, isRoundVideo,\n  ]);\n\n  const {\n    contentWidth, noMediaCorners, style, reactionsMaxWidth,\n  } = sizeCalculations;\n\n  function renderMessageText(isForAnimation?: boolean) {\n    if (!textMessage) return undefined;\n    return (\n      <MessageText\n        messageOrStory={textMessage}\n        translatedText={requestedTranslationLanguage ? currentTranslatedText : undefined}\n        isForAnimation={isForAnimation}\n        focusedQuote={focusedQuote}\n        emojiSize={emojiSize}\n        highlight={highlight}\n        isProtected={isProtected}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        withTranslucentThumbs={isCustomShape}\n        isInSelectMode={isInSelectMode}\n        canBeEmpty={hasFactCheck}\n        maxTimestamp={maxTimestamp}\n        threadId={threadId}\n      />\n    );\n  }\n\n  const renderQuickReactionButton = useCallback(() => {\n    if (!defaultReaction) return undefined;\n\n    return (\n      <div\n        className={buildClassName('quick-reaction', isQuickReactionVisible && !hasActiveReactions && 'visible')}\n        onClick={handleSendQuickReaction}\n        ref={quickReactionRef}\n      >\n        <ReactionStaticEmoji\n          reaction={defaultReaction}\n          size={QUICK_REACTION_SIZE}\n          availableReactions={availableReactions}\n          observeIntersection={observeIntersectionForPlaying}\n        />\n      </div>\n    );\n  }, [\n    hasActiveReactions, availableReactions, defaultReaction, handleSendQuickReaction, isQuickReactionVisible,\n    observeIntersectionForPlaying,\n  ]);\n\n  function renderReactionsAndMeta() {\n    const meta = (\n      <MessageMeta\n        message={message}\n        isPinned={isPinned}\n        withFullDate={isChatWithSelf && !isOwn}\n        noReplies={noReplies}\n        repliesThreadInfo={repliesThreadInfo}\n        outgoingStatus={outgoingStatus}\n        signature={signature}\n        withReactionOffset={reactionsPosition === 'inside'}\n        renderQuickReactionButton={\n          withQuickReactionButton && quickReactionPosition === 'in-meta' ? renderQuickReactionButton : undefined\n        }\n        availableReactions={availableReactions}\n        isTranslated={Boolean(requestedTranslationLanguage ? currentTranslatedText : undefined)}\n        effectEmoji={effect?.emoticon}\n        onClick={handleMetaClick}\n        onEffectClick={handleEffectClick}\n        onTranslationClick={handleTranslationClick}\n        onOpenThread={handleOpenThread}\n      />\n    );\n\n    if (reactionsPosition !== 'inside') {\n      return meta;\n    }\n\n    return (\n      <Reactions\n        message={reactionMessage!}\n        threadId={threadId}\n        metaChildren={meta}\n        observeIntersection={observeIntersectionForPlaying}\n        noRecentReactors={isChannel}\n        tags={tags}\n        isCurrentUserPremium={isPremium}\n      />\n    );\n  }\n\n  function renderContent() {\n    const className = buildClassName(\n      'content-inner',\n      asForwarded && 'forwarded-message',\n      hasForwardedCustomShape && 'forwarded-custom-shape',\n      hasSubheader && 'with-subheader',\n      noMediaCorners && 'no-media-corners',\n    );\n    const hasCustomAppendix = isLastInGroup\n      && (!hasText || (isInvertedMedia && !hasFactCheck && !hasReactions)) && !withCommentButton;\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n    const shouldReadMedia = !hasTtl || !isOwn || isChatWithSelf;\n\n    return (\n      <div className={className} onDoubleClick={handleContentDoubleClick} dir=\"auto\">\n        {!asForwarded && shouldRenderSenderName() && renderSenderName()}\n        {hasSubheader && (\n          <div className=\"message-subheader\">\n            {hasTopicChip && (\n              <TopicChip\n                topic={messageTopic}\n                onClick={handleTopicChipClick}\n                className=\"message-topic\"\n              />\n            )}\n            {hasForwardedCustomShape && (\n              <div className=\"forward-custom-shape-subheader\">\n                <div className=\"message-title\">\n                  {renderForwardTitle()}\n                </div>\n                {renderSenderName(true, true)}\n              </div>\n            )}\n            {hasMessageReply && (\n              <EmbeddedMessage\n                message={replyMessage}\n                replyInfo={messageReplyInfo}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                sender={replyMessageSender}\n                senderChat={replyMessageChat}\n                forwardSender={replyMessageForwardSender}\n                chatTranslations={chatTranslations}\n                requestedChatTranslationLanguage={requestedChatTranslationLanguage}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                observeIntersectionForPlaying={observeIntersectionForPlaying}\n                onClick={handleReplyClick}\n              />\n            )}\n            {hasStoryReply && (\n              <EmbeddedStory\n                story={replyStory}\n                sender={storySender}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                onClick={handleStoryClick}\n              />\n            )}\n          </div>\n        )}\n        {sticker && observeIntersectionForLoading && observeIntersectionForPlaying && (\n          <Sticker\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            shouldLoop={shouldLoopStickers}\n            shouldPlayEffect={shouldPlayEffect}\n            withEffect={withAnimatedEffects}\n            onStopEffect={hideEffect}\n          />\n        )}\n        {hasAnimatedEmoji && animatedCustomEmoji && (\n          <AnimatedCustomEmoji\n            customEmojiId={animatedCustomEmoji}\n            withEffects={withAnimatedEffects && isUserId(chatId) && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {hasAnimatedEmoji && animatedEmoji && (\n          <AnimatedEmoji\n            emoji={animatedEmoji}\n            withEffects={withAnimatedEffects && isUserId(chatId) && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {withAnimatedEffects && effect && !isLocal && (\n          <MessageEffect\n            shouldPlay={shouldPlayEffect}\n            messageId={message.id}\n            isMirrored={!message.isOutgoing}\n            effect={effect}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onStop={hideEffect}\n          />\n        )}\n        {phoneCall && (\n          <MessagePhoneCall\n            message={message}\n            phoneCall={phoneCall}\n            chatId={chatId}\n          />\n        )}\n        {!isAlbum && isRoundVideo && !withVoiceTranscription && (\n          <RoundVideo\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            isDownloading={isDownloading}\n            onReadMedia={shouldReadMedia ? handleReadMedia : undefined}\n            onHideTranscription={setTranscriptionHidden}\n            isTranscriptionError={isTranscriptionError}\n            isTranscribed={Boolean(transcribedText)}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribing={isTranscribing}\n          />\n        )}\n        {(audio || voice || withVoiceTranscription) && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            noAvatars={noAvatars}\n            onPlay={handleAudioPlay}\n            onReadMedia={voice && shouldReadMedia ? handleReadMedia : undefined}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            isTranscribing={isTranscribing}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribed={Boolean(transcribedText)}\n            isTranscriptionError={isTranscriptionError}\n            canDownload={!isProtected}\n            onHideTranscription={setTranscriptionHidden}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n          />\n        )}\n        {document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            onMediaClick={handleDocumentClick}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {storyData && !isStoryMention && (\n          <Story\n            message={message}\n            isProtected={isProtected}\n          />\n        )}\n        {isStoryMention && <StoryMention message={message} />}\n        {contact && (\n          <Contact contact={contact} noUserColors={isOwn} />\n        )}\n        {poll && (\n          <Poll message={message} poll={poll} onSendVote={handleVoteSend} />\n        )}\n        {(giveaway || giveawayResults) && (\n          <Giveaway message={message} />\n        )}\n        {game && (\n          <Game\n            message={message}\n            canAutoLoadMedia={canAutoLoadMedia}\n          />\n        )}\n        {invoice?.extendedMedia && (\n          <InvoiceMediaPreview\n            message={message}\n            isConnected={isConnected}\n          />\n        )}\n\n        {withVoiceTranscription && (\n          <p\n            className={buildClassName(\n              'transcription',\n              !isTranscriptionHidden && isTranscriptionError && 'transcription-error',\n            )}\n            dir=\"auto\"\n          >\n            {(isTranscriptionError ? lang('NoWordsRecognized') : (\n              isTranscribing && transcribedText ? <DotAnimation content={transcribedText} /> : transcribedText\n            ))}\n          </p>\n        )}\n\n        {isInvertedMedia && renderInvertedMediaContent(hasCustomAppendix)}\n\n        {!isInvertedMedia && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {hasText && !hasAnimatedEmoji && (\n              <div className={textContentClass} dir=\"auto\">\n                {renderMessageText()}\n                {isTranslationPending && (\n                  <div className=\"translation-animation\">\n                    <div className=\"text-loading\">\n                      {renderMessageText(true)}\n                    </div>\n                  </div>\n                )}\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {metaPosition === 'in-text' && renderReactionsAndMeta()}\n              </div>\n            )}\n            {renderWebPage()}\n          </>\n        )}\n\n        {invoice && !invoice.extendedMedia && (\n          <Invoice\n            message={message}\n            shouldAffectAppendix={hasCustomAppendix && !hasReactions}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            forcedWidth={contentWidth}\n          />\n        )}\n        {location && (\n          <Location\n            message={message}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            peer={sender}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderInvertedMediaContent(hasCustomAppendix: boolean) {\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n    );\n    const footerClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n\n    const hasMediaAfterText = isAlbum || (!isAlbum && photo) || (!isAlbum && video && !isRoundVideo);\n    const hasContentAfterText = hasMediaAfterText || (!hasAnimatedEmoji && hasFactCheck);\n    const isMetaInText = metaPosition === 'in-text';\n\n    return (\n      <>\n        {renderWebPage()}\n        {hasText && !hasAnimatedEmoji && (\n          <div className={textContentClass} dir=\"auto\">\n            {renderMessageText()}\n            {isTranslationPending && (\n              <div className=\"translation-animation\">\n                <div className=\"text-loading\">\n                  {renderMessageText(true)}\n                </div>\n              </div>\n            )}\n            {!hasContentAfterText && isMetaInText && renderReactionsAndMeta()}\n          </div>\n        )}\n\n        {hasContentAfterText && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {!hasAnimatedEmoji && (\n              <div className={footerClass} dir=\"auto\">\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {isMetaInText && renderReactionsAndMeta()}\n              </div>\n            )}\n          </>\n        )}\n\n      </>\n    );\n  }\n\n  function renderWebPage() {\n    return webPage && (\n      <WebPage\n        message={message}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        noAvatars={noAvatars}\n        canAutoLoad={canAutoLoadMedia}\n        canAutoPlay={canAutoPlayMedia}\n        asForwarded={asForwarded}\n        isDownloading={isDownloading}\n        isProtected={isProtected}\n        theme={theme}\n        story={webPageStory}\n        isConnected={isConnected}\n        lastPlaybackTimestamp={lastPlaybackTimestamp}\n        backgroundEmojiId={messageColorPeer?.color?.backgroundEmojiId}\n        shouldWarnAboutSvg={shouldWarnAboutSvg}\n        autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n        onAudioPlay={handleAudioPlay}\n        onMediaClick={handleMediaClick}\n        onDocumentClick={handleDocumentClick}\n        onCancelMediaTransfer={handleCancelUpload}\n      />\n    );\n  }\n\n  function renderInvertibleMediaContent(hasCustomAppendix: boolean) {\n    const content = (\n      <>\n        {isAlbum && observeIntersectionForLoading && (\n          <Album\n            album={album!}\n            albumLayout={albumLayout!}\n            observeIntersection={observeIntersectionForLoading}\n            isOwn={isOwn}\n            isProtected={isProtected}\n            hasCustomAppendix={hasCustomAppendix}\n            onMediaClick={handleAlbumMediaClick}\n          />\n        )}\n        {!isAlbum && photo && (\n          <Photo\n            messageText={text?.text}\n            photo={photo}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            uploadProgress={uploadProgress}\n            shouldAffectAppendix={hasCustomAppendix}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            theme={theme}\n            forcedWidth={contentWidth}\n            onClick={handlePhotoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n        {!isAlbum && video && !isRoundVideo && (\n          <Video\n            video={video}\n            isOwn={isOwn}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            forcedWidth={contentWidth}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            canAutoPlay={canAutoPlayMedia}\n            uploadProgress={uploadProgress}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            lastPlaybackTimestamp={lastPlaybackTimestamp}\n            onClick={handleVideoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n      </>\n    );\n\n    if (paidMedia) {\n      return (\n        <PaidMediaOverlay chatId={chatId} messageId={messageId} paidMedia={paidMedia} isOutgoing={isOwn}>\n          {content}\n        </PaidMediaOverlay>\n      );\n    }\n\n    return content;\n  }\n\n  function shouldRenderSenderName() {\n    const media = photo || video || location || paidMedia;\n    return !(isCustomShape && !viaBotId) && (\n      (withSenderName && (!media || hasTopicChip)) || asForwarded || viaBotId || forceSenderName\n    ) && !isInDocumentGroupNotFirst && !(hasMessageReply && isCustomShape);\n  }\n\n  function renderForwardTitle() {\n    return (\n      <span className=\"forward-title-container\">\n        {asForwarded && (\n          <Icon name={forwardInfo?.hiddenUserName ? 'forward' : 'share-filled'} />\n        )}\n        {asForwarded && (\n          <span className=\"forward-title\">\n            {lang('ForwardedFrom')}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderSenderName(shouldSkipRenderForwardTitle:boolean = false, shouldSkipRenderAdminTitle: boolean = false) {\n    let senderTitle;\n    let senderColor;\n    if (senderPeer && !(isCustomShape && viaBotId)) {\n      senderTitle = getPeerTitle(lang, senderPeer);\n    } else if (forwardInfo?.hiddenUserName) {\n      senderTitle = forwardInfo.hiddenUserName;\n    } else if (storyData && originSender) {\n      senderTitle = getPeerTitle(lang, originSender!);\n    }\n    const senderEmojiStatus = senderPeer && 'emojiStatus' in senderPeer && senderPeer.emojiStatus;\n    const senderIsPremium = senderPeer && 'isPremium' in senderPeer && senderPeer.isPremium;\n\n    const shouldRenderForwardAvatar = asForwarded && senderPeer;\n    const hasBotSenderUsername = botSender?.usernames?.length;\n    return (\n      <div className=\"message-title\" dir=\"ltr\">\n        {(senderTitle || asForwarded) ? (\n          <span\n            className={buildClassName(\n              'message-title-name-container',\n              forwardInfo?.hiddenUserName ? 'sender-hidden' : 'interactive',\n              senderColor,\n            )}\n            dir=\"ltr\"\n          >\n            {!shouldSkipRenderForwardTitle && renderForwardTitle()}\n            <span className=\"message-title-name\">\n              {storyData && <Icon name=\"play-story\" />}\n              {shouldRenderForwardAvatar && (\n                <Avatar\n                  className=\"forward-avatar\"\n                  peer={senderPeer}\n                  size=\"micro\"\n                />\n              )}\n              <span\n                className=\"sender-title\"\n                onClick={handleSenderClick}\n              >\n                {senderTitle ? renderText(senderTitle) : (asForwarded ? NBSP : undefined)}\n              </span>\n              {!asForwarded && senderEmojiStatus && (\n                <CustomEmoji\n                  documentId={senderEmojiStatus.documentId}\n                  className=\"no-selection\"\n                  loopLimit={EMOJI_STATUS_LOOP_LIMIT}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                />\n              )}\n              {!asForwarded && !senderEmojiStatus && senderIsPremium && <StarIcon />}\n              {senderPeer?.fakeType && <FakeIcon fakeType={senderPeer.fakeType} />}\n            </span>\n          </span>\n        ) : !botSender ? (\n          NBSP\n        ) : undefined}\n        {botSender?.usernames?.length && (\n          <span className=\"interactive\">\n            <span className=\"via\">{lang('ViaBot')}</span>\n            <span\n              className=\"sender-title\"\n              onClick={handleViaBotClick}\n            >\n              {renderText(`@${botSender.usernames[0].username}`)}\n            </span>\n          </span>\n        )}\n        <div className=\"title-spacer\" />\n        {!shouldSkipRenderAdminTitle && !hasBotSenderUsername ? (forwardInfo?.isLinkedChannelPost ? (\n          <span className=\"admin-title\" dir=\"auto\">{lang('DiscussChannel')}</span>\n        ) : message.postAuthorTitle && isGroup && !asForwarded ? (\n          <span className=\"admin-title\" dir=\"auto\">{message.postAuthorTitle}</span>\n        ) : senderAdminMember && !asForwarded && !viaBotId ? (\n          <span className=\"admin-title\" dir=\"auto\">\n            {senderAdminMember.customTitle || lang(\n              senderAdminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin',\n            )}\n          </span>\n        ) : undefined) : undefined}\n        {canShowSenderBoosts && (\n          <span className=\"sender-boosts\" aria-hidden>\n            <Icon name={senderBoosts > 1 ? 'boosts' : 'boost'} />\n            {senderBoosts > 1 ? senderBoosts : undefined}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  const forwardAuthor = isGroup && asForwarded ? message.postAuthorTitle : undefined;\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={containerClassName}\n      data-message-id={messageId}\n      onCopy={isProtected ? stopEvent : undefined}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n      onDoubleClick={handleDoubleClick}\n      onMouseEnter={isInDocumentGroupNotLast ? handleDocumentGroupMouseEnter : undefined}\n      onMouseMove={withQuickReactionButton ? handleMouseMove : undefined}\n      onMouseLeave={(withQuickReactionButton || isInDocumentGroupNotLast) ? handleMouseLeave : undefined}\n    >\n      <div\n        ref={bottomMarkerRef}\n        className=\"bottom-marker\"\n        data-message-id={messageId}\n        data-last-message-id={album ? album.messages[album.messages.length - 1].id : undefined}\n        data-album-main-id={album ? album.mainMessage.id : undefined}\n        data-has-unread-mention={message.hasUnreadMention || undefined}\n        data-has-unread-reaction={hasUnreadReaction || undefined}\n        data-is-pinned={isPinned || undefined}\n        data-should-update-views={message.viewsCount !== undefined}\n      />\n      {!isInDocumentGroup && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {isLastInDocumentGroup && (\n        <div\n          className={buildClassName(\n            'message-select-control group-select no-selection', isGroupSelected && 'is-selected',\n          )}\n          onClick={handleDocumentGroupSelectAll}\n        >\n          {isGroupSelected && (\n            <Icon name=\"select\" />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName('message-content-wrapper',\n          contentClassName.includes('text') && 'can-select-text',\n          contentClassName.includes('giveaway') && 'giveaway-result-content')}\n      >\n        <div\n          className={contentClassName}\n          style={style}\n          dir=\"auto\"\n        >\n          {asForwarded && !isInDocumentGroupNotFirst && (\n            <>\n              {shouldRenderSenderName() && renderSenderName()}\n              {forwardAuthor && <span className=\"admin-title\" dir=\"auto\">{forwardAuthor}</span>}\n            </>\n          )}\n          {renderContent()}\n          {!isInDocumentGroupNotLast && metaPosition === 'standalone' && !isStoryMention && renderReactionsAndMeta()}\n          {canShowActionButton && (\n            <div className={buildClassName(\n              'message-action-buttons',\n              isLoadingComments && 'message-action-buttons-shown',\n            )}\n            >\n              {withCommentButton && isCustomShape && (\n                <CommentButton\n                  threadInfo={repliesThreadInfo}\n                  disabled={noComments}\n                  isLoading={isLoadingComments}\n                  isCustomShape\n                  asActionButton\n                />\n              )}\n              {canForward && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel={lang('lng_context_forward_msg')}\n                  onClick={isLastInDocumentGroup ? handleGroupForward : handleForward}\n                >\n                  <Icon name=\"share-filled\" />\n                </Button>\n              )}\n              {canFocus && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel=\"Focus message\"\n                  onClick={isPinnedList ? handleFocus : handleFocusForwarded}\n                >\n                  <Icon name=\"arrow-right\" />\n                </Button>\n              )}\n            </div>\n          )}\n          {withCommentButton && !(canShowActionButton && isCustomShape) && (\n            <CommentButton\n              threadInfo={repliesThreadInfo}\n              disabled={noComments}\n              isLoading={isLoadingComments}\n            />\n          )}\n          {withAppendix && <MessageAppendix isOwn={isOwn} />}\n          {withQuickReactionButton && quickReactionPosition === 'in-content' && renderQuickReactionButton()}\n        </div>\n        {message.inlineButtons && (\n          <InlineButtons message={message} onClick={clickBotInlineButton} />\n        )}\n        {reactionsPosition === 'outside' && !isStoryMention && (\n          <Reactions\n            message={reactionMessage!}\n            threadId={threadId}\n            isOutside\n            isCurrentUserPremium={isPremium}\n            maxWidth={reactionsMaxWidth}\n            observeIntersection={observeIntersectionForPlaying}\n            noRecentReactors={isChannel}\n            tags={tags}\n          />\n        )}\n      </div>\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          targetHref={contextMenuTarget?.matches('a[href]') ? (contextMenuTarget as HTMLAnchorElement).href : undefined}\n          message={message}\n          album={album}\n          messageListType={messageListType}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          repliesThreadInfo={repliesThreadInfo}\n          noReplies={noReplies}\n          detectedLanguage={detectedLanguage}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): StateProps => {\n    const {\n      focusedMessage, forwardMessages, activeReactions, activeEmojiInteractions,\n      loadingThread,\n    } = selectTabState(global);\n    const {\n      message, album, withSenderName, withAvatar, threadId, messageListType, isLastInDocumentGroup, isFirstInGroup,\n    } = ownProps;\n    const {\n      id, chatId, viaBotId, isOutgoing, forwardInfo, transcriptionId, isPinned, viaBusinessBotId, effectId,\n    } = message;\n\n    const chat = selectChat(global, chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isSystemBotChat = isSystemBot(chatId);\n    const isAnonymousForwards = isAnonymousForwardsChat(chatId);\n    const isChannel = chat && isChatChannel(chat);\n    const isGroup = chat && isChatGroup(chat);\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const webPageStoryData = message.content.webPage?.story;\n    const webPageStory = webPageStoryData\n      ? selectPeerStory(global, webPageStoryData.peerId, webPageStoryData.id)\n      : undefined;\n\n    const isForwarding = forwardMessages.messageIds && forwardMessages.messageIds.includes(id);\n    const forceSenderName = !isChatWithSelf && isAnonymousOwnMessage(message);\n    const canShowSender = withSenderName || withAvatar || forceSenderName;\n    const sender = selectSender(global, message);\n    const originSender = selectForwardedSender(global, message);\n    const botSender = viaBotId ? selectUser(global, viaBotId) : undefined;\n    const senderAdminMember = sender?.id && isGroup\n      ? chatFullInfo?.adminMembersById?.[sender?.id]\n      : undefined;\n\n    const isThreadTop = message.id === threadId;\n\n    const { replyToMsgId, replyToPeerId, replyFrom } = getMessageReplyInfo(message) || {};\n    const { peerId: storyReplyPeerId, storyId: storyReplyId } = getStoryReplyInfo(message) || {};\n\n    const shouldHideReply = replyToMsgId && replyToMsgId === threadId;\n    const replyMessage = selectReplyMessage(global, message);\n    const forwardHeader = forwardInfo || replyFrom;\n    const replyMessageSender = replyMessage ? selectSender(global, replyMessage)\n      : forwardHeader && !isSystemBotChat && !isAnonymousForwards\n        ? selectSenderFromHeader(global, forwardHeader) : undefined;\n    const replyMessageForwardSender = replyMessage && selectForwardedSender(global, replyMessage);\n    const replyMessageChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n    const isReplyPrivate = !isSystemBotChat && !isAnonymousForwards && replyMessageChat\n      && !isChatPublic(replyMessageChat)\n      && (replyMessageChat.isNotJoined || replyMessageChat.isRestricted);\n    const isReplyToTopicStart = replyMessage?.content.action?.type === 'topicCreate';\n    const replyStory = storyReplyId && storyReplyPeerId\n      ? selectPeerStory(global, storyReplyPeerId, storyReplyId)\n      : undefined;\n    const storySender = storyReplyPeerId ? selectPeer(global, storyReplyPeerId) : undefined;\n\n    const uploadProgress = selectUploadProgress(global, message);\n    const isFocused = messageListType === 'thread' && (\n      album\n        ? album.messages.some((m) => selectIsMessageFocused(global, m, threadId))\n        : selectIsMessageFocused(global, message, threadId)\n    );\n\n    const {\n      direction: focusDirection, noHighlight: noFocusHighlight, isResizingContainer,\n      quote: focusedQuote, scrollTargetPosition,\n    } = (isFocused && focusedMessage) || {};\n\n    const middleSearch = selectCurrentMiddleSearch(global);\n    const highlight = middleSearch?.results?.query\n      && `${middleSearch.isHashtag ? '#' : ''}${middleSearch.results.query}`;\n\n    const singleEmoji = getMessageSingleRegularEmoji(message);\n    const animatedEmoji = singleEmoji && selectAnimatedEmoji(global, singleEmoji) ? singleEmoji : undefined;\n    const animatedCustomEmoji = getMessageSingleCustomEmoji(message);\n\n    let isSelected: boolean;\n    if (album?.messages) {\n      isSelected = album.messages.every(({ id: messageId }) => selectIsMessageSelected(global, messageId));\n    } else {\n      isSelected = selectIsMessageSelected(global, id);\n    }\n\n    const canReply = messageListType === 'thread' && selectCanReplyToMessage(global, message, threadId);\n    const activeDownloads = selectActiveDownloads(global);\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    const isDownloading = downloadableMedia && getIsDownloading(activeDownloads, downloadableMedia);\n\n    const repliesThreadInfo = selectThreadInfo(global, chatId, album?.commentsMessage?.id || id);\n\n    const isInDocumentGroup = Boolean(message.groupedId) && !message.isInAlbum;\n    const documentGroupFirstMessageId = isInDocumentGroup\n      ? selectMessageIdsByGroupId(global, chatId, message.groupedId!)![0]\n      : undefined;\n    const reactionMessage = isInDocumentGroup ? (\n      isLastInDocumentGroup ? selectChatMessage(global, chatId, documentGroupFirstMessageId!) : undefined\n    ) : message;\n\n    const hasUnreadReaction = chat?.unreadReactions?.includes(message.id);\n\n    const hasTopicChip = threadId === MAIN_THREAD_ID && chat?.isForum && isFirstInGroup;\n    const messageTopic = hasTopicChip ? selectTopicFromMessage(global, message) : undefined;\n\n    const chatTranslations = selectChatTranslations(global, chatId);\n\n    const requestedTranslationLanguage = selectRequestedMessageTranslationLanguage(global, chatId, message.id);\n    const requestedChatTranslationLanguage = selectRequestedChatTranslationLanguage(global, chatId);\n\n    const areTranslationsEnabled = IS_TRANSLATION_SUPPORTED && global.settings.byKey.canTranslate\n      && !requestedChatTranslationLanguage; // Stop separate language detection if chat translation is requested\n\n    const isConnected = global.connectionState === 'connectionStateReady';\n\n    const hasActiveReactions = Boolean(reactionMessage && activeReactions[getMessageKey(reactionMessage)]?.length);\n\n    const isPremium = selectIsCurrentUserPremium(global);\n    const senderBoosts = sender && selectIsChatWithSelf(global, sender.id)\n      ? (chatFullInfo?.boostsApplied ?? message.senderBoosts) : message.senderBoosts;\n\n    const chatLevel = chat?.boostLevel || 0;\n    const transcribeMinLevel = global.appConfig?.groupTranscribeLevelMin;\n    const canTranscribeVoice = isPremium || Boolean(transcribeMinLevel && chatLevel >= transcribeMinLevel);\n\n    const viaBusinessBot = viaBusinessBotId ? selectUser(global, viaBusinessBotId) : undefined;\n\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n\n    const poll = selectPollFromMessage(global, message);\n\n    const maxTimestamp = selectMessageTimestampableDuration(global, message);\n\n    const lastPlaybackTimestamp = selectMessageLastPlaybackTimestamp(global, chatId, message.id);\n\n    return {\n      theme: selectTheme(global),\n      forceSenderName,\n      sender,\n      canShowSender,\n      originSender,\n      botSender,\n      shouldHideReply: shouldHideReply || isReplyToTopicStart,\n      isThreadTop,\n      replyMessage,\n      replyMessageSender,\n      replyMessageForwardSender,\n      replyMessageChat,\n      replyStory,\n      isReplyPrivate,\n      storySender,\n      isInDocumentGroup,\n      isProtected: selectIsMessageProtected(global, message),\n      isChatProtected: selectIsChatProtected(global, chatId),\n      isFocused,\n      isForwarding,\n      reactionMessage,\n      isChatWithSelf,\n      isRepliesChat: isSystemBotChat,\n      isAnonymousForwards,\n      isChannel,\n      isGroup,\n      canReply,\n      highlight,\n      animatedEmoji,\n      animatedCustomEmoji,\n      isInSelectMode: selectIsInSelectMode(global),\n      isSelected,\n      isGroupSelected: (\n        Boolean(message.groupedId)\n        && !message.isInAlbum\n        && selectIsDocumentGroupSelected(global, chatId, message.groupedId)\n      ),\n      threadId,\n      isDownloading,\n      isPinnedList: messageListType === 'pinned',\n      isPinned,\n      canAutoLoadMedia: selectCanAutoLoadMedia(global, message),\n      canAutoPlayMedia: selectCanAutoPlayMedia(global, message),\n      autoLoadFileMaxSizeMb: global.settings.byKey.autoLoadFileMaxSizeMb,\n      shouldLoopStickers: selectShouldLoopStickers(global),\n      repliesThreadInfo,\n      availableReactions: global.reactions.availableReactions,\n      defaultReaction: isMessageLocal(message) || messageListType === 'scheduled'\n        ? undefined : selectDefaultReaction(global, chatId),\n      hasActiveReactions,\n      activeEmojiInteractions,\n      hasUnreadReaction,\n      isTranscribing: transcriptionId !== undefined && global.transcriptions[transcriptionId]?.isPending,\n      transcribedText: transcriptionId !== undefined ? global.transcriptions[transcriptionId]?.text : undefined,\n      isPremium,\n      senderAdminMember,\n      messageTopic,\n      hasTopicChip,\n      chatTranslations,\n      areTranslationsEnabled,\n      shouldDetectChatLanguage: selectShouldDetectChatLanguage(global, chatId),\n      requestedTranslationLanguage,\n      requestedChatTranslationLanguage,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      withAnimatedEffects: selectPerformanceSettingsValue(global, 'stickerEffects'),\n      webPageStory,\n      isConnected,\n      isLoadingComments: repliesThreadInfo?.isCommentsInfo\n        && loadingThread?.loadingChatId === repliesThreadInfo?.originChannelId\n        && loadingThread?.loadingMessageId === repliesThreadInfo?.originMessageId,\n      shouldWarnAboutSvg: global.settings.byKey.shouldWarnAboutSvg,\n      ...(isOutgoing && { outgoingStatus: selectOutgoingStatus(global, message, messageListType === 'scheduled') }),\n      ...(typeof uploadProgress === 'number' && { uploadProgress }),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n        isResizingContainer,\n        focusedQuote,\n        scrollTargetPosition,\n      }),\n      senderBoosts,\n      tags: global.savedReactionTags?.byKey,\n      canTranscribeVoice,\n      viaBusinessBot,\n      effect,\n      poll,\n      maxTimestamp,\n      lastPlaybackTimestamp,\n    };\n  },\n)(Message));\n","import { getActions } from '../../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiStory, ApiTopic, ApiUser,\n} from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IAlbum, ThreadId } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\nimport { MediaViewerOrigin } from '../../../../types';\n\nimport { getMessagePhoto, getMessageWebPagePhoto } from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport { tryParseDeepLink } from '../../../../util/deepLinkParser';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useInnerHandlers({\n  lang,\n  selectMessage,\n  message,\n  chatId,\n  threadId,\n  isInDocumentGroup,\n  asForwarded,\n  isScheduled,\n  album,\n  senderPeer,\n  botSender,\n  messageTopic,\n  isTranslatingChat,\n  story,\n  isReplyPrivate,\n  isRepliesChat,\n  isSavedMessages,\n  lastPlaybackTimestamp,\n}: {\n  lang: OldLangFn;\n  selectMessage: (e: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void;\n  message: ApiMessage;\n  chatId: string;\n  threadId: ThreadId;\n  isInDocumentGroup: boolean;\n  asForwarded?: boolean;\n  isScheduled?: boolean;\n  album?: IAlbum;\n  avatarPeer?: ApiPeer;\n  senderPeer?: ApiPeer;\n  botSender?: ApiUser;\n  messageTopic?: ApiTopic;\n  isTranslatingChat?: boolean;\n  story?: ApiStory;\n  isReplyPrivate?: boolean;\n  isRepliesChat?: boolean;\n  isSavedMessages?: boolean;\n  lastPlaybackTimestamp?: number;\n}) {\n  const {\n    openChat, showNotification, focusMessage, openMediaViewer, openAudioPlayer,\n    markMessagesRead, cancelUploadMedia, sendPollVote, openForwardMenu,\n    openChatLanguageModal, openThread, openStoryViewer, searchChatMediaMessages,\n  } = getActions();\n\n  const {\n    id: messageId, forwardInfo, groupedId, content: { paidMedia, video, webPage },\n  } = message;\n\n  const {\n    replyToMsgId, replyToPeerId, replyToTopId, isQuote, quoteText,\n  } = getMessageReplyInfo(message) || {};\n\n  const handleSenderClick = useLastCallback(() => {\n    if (!senderPeer) {\n      showNotification({ message: lang('HidAccount') });\n\n      return;\n    }\n\n    if (asForwarded && forwardInfo?.channelPostId) {\n      focusMessage({ chatId: senderPeer.id, messageId: forwardInfo.channelPostId });\n    } else {\n      openChat({ id: senderPeer.id });\n    }\n  });\n\n  const handleViaBotClick = useLastCallback(() => {\n    if (!botSender) {\n      return;\n    }\n\n    openChat({ id: botSender.id });\n  });\n\n  const handleReplyClick = useLastCallback((): void => {\n    if (!replyToMsgId || isReplyPrivate) {\n      showNotification({\n        message: isQuote ? lang('QuotePrivate') : lang('ReplyPrivate'),\n      });\n      return;\n    }\n\n    if (isRepliesChat && replyToPeerId && replyToTopId) {\n      openThread({\n        isComments: true,\n        originChannelId: replyToPeerId,\n        originMessageId: replyToTopId,\n        focusMessageId: replyToMsgId,\n      });\n      return;\n    }\n\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: isRepliesChat ? replyToTopId : threadId, // Open comments from Replies bot, otherwise, keep current thread\n      messageId: replyToMsgId,\n      replyMessageId: replyToPeerId ? undefined : messageId,\n      noForumTopicPanel: !replyToPeerId, // Open topic panel for cross-chat replies\n      ...(isQuote && { quote: quoteText?.text }),\n    });\n  });\n\n  const handleDocumentClick = useLastCallback((): void => {\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n    });\n  });\n\n  const openMediaViewerWithPhotoOrVideo = useLastCallback((withDynamicLoading: boolean): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n    if (withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    }\n\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage.url);\n\n    const videoContent = video || webPage?.video;\n    const webpageTimestamp = parsedLink && 'timestamp' in parsedLink ? parsedLink.timestamp : undefined;\n\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n      timestamp: lastPlaybackTimestamp || videoContent?.timestamp || webpageTimestamp,\n      withDynamicLoading,\n    });\n  });\n  const handlePhotoMediaClick = useLastCallback((): void => {\n    const withDynamicLoading = !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n  const handleVideoMediaClick = useLastCallback(() => {\n    const isGif = message.content?.video?.isGif;\n    const withDynamicLoading = !isGif && !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n\n  const handleMediaClick = useLastCallback((): void => {\n    const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n    if (photo) {\n      handlePhotoMediaClick();\n    }\n\n    handleVideoMediaClick();\n  });\n\n  const handleAudioPlay = useLastCallback((): void => {\n    openAudioPlayer({ chatId, messageId });\n  });\n\n  const handleAlbumMediaClick = useLastCallback((albumMessageId: number, albumIndex?: number): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n\n    searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId: albumMessageId,\n      mediaIndex: albumIndex,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledAlbum : MediaViewerOrigin.Album,\n      withDynamicLoading: !paidMedia,\n    });\n  });\n\n  const handleReadMedia = useLastCallback((): void => {\n    markMessagesRead({ messageIds: [messageId] });\n  });\n\n  const handleCancelUpload = useLastCallback(() => {\n    cancelUploadMedia({ chatId, messageId });\n  });\n\n  const handleVoteSend = useLastCallback((options: string[]) => {\n    sendPollVote({ chatId, messageId, options });\n  });\n\n  const handleGroupForward = useLastCallback(() => {\n    openForwardMenu({ fromChatId: chatId, groupedId });\n  });\n\n  const handleForward = useLastCallback(() => {\n    if (album && album.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: chatId, messageIds: [messageId] });\n    }\n  });\n\n  const handleFocus = useLastCallback(() => {\n    focusMessage({\n      chatId, threadId: MAIN_THREAD_ID, messageId,\n    });\n  });\n\n  const handleFocusForwarded = useLastCallback(() => {\n    const originalChatId = (isSavedMessages && forwardInfo!.savedFromPeerId) || forwardInfo!.fromChatId!;\n\n    if (isInDocumentGroup) {\n      focusMessage({\n        chatId: originalChatId, groupedId, groupedChatId: chatId, messageId: forwardInfo!.fromMessageId!,\n      });\n      return;\n    }\n\n    if (replyToPeerId && replyToTopId) {\n      if (isRepliesChat) {\n        openThread({\n          isComments: true,\n          originChannelId: replyToPeerId,\n          originMessageId: replyToTopId,\n          focusMessageId: forwardInfo!.fromMessageId!,\n        });\n      } else {\n        focusMessage({\n          chatId: replyToPeerId,\n          threadId: replyToTopId,\n          messageId: forwardInfo!.fromMessageId!,\n        });\n      }\n    } else {\n      focusMessage({\n        chatId: originalChatId, messageId: forwardInfo!.fromMessageId!,\n      });\n    }\n  });\n\n  const selectWithGroupedId = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    selectMessage(e, groupedId);\n  });\n\n  const handleTranslationClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    openChatLanguageModal({ chatId, messageId: !isTranslatingChat ? messageId : undefined });\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n  });\n\n  const handleTopicChipClick = useLastCallback(() => {\n    if (!messageTopic) return;\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: messageTopic.id,\n      messageId,\n    });\n  });\n\n  const handleStoryClick = useLastCallback(() => {\n    if (!story) return;\n    openStoryViewer({\n      peerId: story.peerId,\n      storyId: story.id,\n      isSingleStory: true,\n    });\n  });\n\n  return {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleDocumentClick,\n    handleMediaClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick: selectWithGroupedId,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll: selectWithGroupedId,\n    handleTopicChipClick,\n    handleStoryClick,\n  };\n}\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport { detectLanguage } from '../util/languageDetection';\n\nexport default function useTextLanguage(text?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>) {\n  const [language, setLanguage] = useState<string | undefined>();\n\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    if (text) {\n      detectLanguage(text).then(setLanguage);\n    } else {\n      setLanguage(undefined);\n    }\n  }, [isDisabled, text, getIsReady]);\n\n  return language;\n}\n","import type { ApiMessage, ApiPoll } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { EMOJI_SIZES, MESSAGE_CONTENT_CLASS_NAME } from '../../../../config';\nimport { getMessageContent } from '../../../../global/helpers';\nimport getSingularPaidMedia from './getSingularPaidMedia';\n\nexport function buildContentClassName(\n  message: ApiMessage,\n  album?: IAlbum,\n  {\n    poll,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread,\n    forceSenderName,\n    hasCommentCounter,\n    hasCommentButton,\n    hasActionButton,\n    hasReactions,\n    isGeoLiveActive,\n    withVoiceTranscription,\n    peerColorClass,\n    hasOutsideReactions,\n  }: {\n    poll?: ApiPoll;\n    hasSubheader?: boolean;\n    isCustomShape?: boolean | number;\n    isLastInGroup?: boolean;\n    asForwarded?: boolean;\n    hasThread?: boolean;\n    forceSenderName?: boolean;\n    hasCommentCounter?: boolean;\n    hasCommentButton?: boolean;\n    hasActionButton?: boolean;\n    hasReactions?: boolean;\n    isGeoLiveActive?: boolean;\n    withVoiceTranscription?: boolean;\n    peerColorClass?: string;\n    hasOutsideReactions?: boolean;\n  } = {},\n) {\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const content = getMessageContent(message);\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo,\n    audio, voice, document, webPage, contact, location, invoice, storyData,\n    giveaway, giveawayResults,\n  } = content;\n  const text = album?.hasMultipleCaptions ? undefined : getMessageContent(album?.captionMessage || message).text;\n  const hasFactCheck = Boolean(message.factCheck?.text);\n\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isInvertedMedia = message.isInvertedMedia;\n  const isInvertibleMedia = photo || (video && !isRoundVideo) || album || webPage;\n\n  const classNames = [MESSAGE_CONTENT_CLASS_NAME];\n  const isMedia = storyData || photo || video || location || invoice?.extendedMedia || paidMedia;\n  const hasText = text || location?.mediaType === 'venue' || isGeoLiveActive || hasFactCheck;\n  const isMediaWithNoText = isMedia && !hasText;\n  const hasInlineKeyboard = Boolean(message.inlineButtons);\n  const isViaBot = Boolean(message.viaBotId);\n\n  const hasFooter = (() => {\n    if (isInvertedMedia && isInvertibleMedia) {\n      if (hasReactions && !hasOutsideReactions) return true;\n      if (hasFactCheck) return true;\n      if (webPage && hasText) return true;\n      return false;\n    }\n    return hasText;\n  })();\n\n  if (peerColorClass) {\n    classNames.push(peerColorClass);\n  }\n\n  if (!isMedia && message.emojiOnlyCount) {\n    classNames.push('emoji-only');\n    if (message.emojiOnlyCount <= EMOJI_SIZES) {\n      classNames.push(`emoji-only-${message.emojiOnlyCount}`);\n    }\n  } else if (hasText) {\n    classNames.push('text');\n  } else {\n    classNames.push('no-text');\n  }\n\n  if (!Object.keys(content).length) {\n    classNames.push('unsupported');\n  }\n\n  if (hasActionButton) {\n    classNames.push('has-action-button');\n  }\n\n  if (isCustomShape) {\n    classNames.push('custom-shape');\n\n    if (isRoundVideo) {\n      classNames.push('round');\n    }\n\n    if (hasCommentCounter) {\n      classNames.push('has-comment-counter');\n    }\n  }\n  if (isMedia && !withVoiceTranscription) {\n    classNames.push('media');\n  } else if (video) {\n    classNames.push('video');\n  } else if (audio) {\n    classNames.push('audio');\n  } else if (voice) {\n    classNames.push('voice');\n    if (withVoiceTranscription) {\n      classNames.push('with-voice-transcription');\n    }\n  } else if (document) {\n    classNames.push('document');\n  } else if (contact) {\n    classNames.push('contact');\n  } else if (poll) {\n    classNames.push('poll');\n  } else if (giveaway || giveawayResults) {\n    classNames.push('giveaway');\n  } else if (webPage) {\n    classNames.push('web-page');\n\n    if (webPage.photo || webPage.video) {\n      classNames.push('media');\n    }\n\n    if (webPage.document) {\n      classNames.push('document');\n    }\n\n    if (webPage.gift) {\n      classNames.push('gift');\n    }\n  }\n\n  if (invoice && !invoice.extendedMedia) {\n    classNames.push('invoice');\n  }\n\n  if (storyData) {\n    classNames.push('story');\n  }\n\n  if (asForwarded) {\n    classNames.push('is-forwarded');\n  }\n\n  if (hasSubheader) {\n    classNames.push('has-subheader');\n  }\n\n  if (hasThread) {\n    classNames.push('has-replies');\n  }\n\n  if (hasReactions) {\n    classNames.push('has-reactions');\n  }\n\n  if (hasOutsideReactions) {\n    classNames.push('has-outside-reactions');\n  }\n\n  if (isViaBot) {\n    classNames.push('is-via-bot');\n  }\n\n  if (forceSenderName) {\n    classNames.push('force-sender-name');\n  }\n\n  if (!isCustomShape) {\n    classNames.push('has-shadow');\n\n    if (isMedia && hasThread) {\n      classNames.push('has-background');\n    }\n\n    if (hasSubheader || asForwarded || isViaBot || !isMediaWithNoText\n      || forceSenderName || hasFactCheck || withVoiceTranscription) {\n      classNames.push('has-solid-background');\n    }\n\n    if (hasFactCheck) {\n      classNames.push('has-fact-check');\n    }\n\n    if (isLastInGroup && !hasInlineKeyboard && (photo || !isMediaWithNoText || hasCommentButton)) {\n      classNames.push('has-appendix');\n    }\n  }\n\n  if (isInvertibleMedia && isInvertedMedia) {\n    classNames.push('is-inverted-media');\n  }\n\n  if (hasFooter) {\n    classNames.push('has-footer');\n  } else {\n    classNames.push('no-footer');\n  }\n\n  return classNames.join(' ');\n}\n","import React from '../../../lib/teact/teact';\n\ninterface OwnProps {\n  isOwn?: boolean;\n}\n\nfunction MessageAppendix({ isOwn } : OwnProps) {\n  const path = isOwn\n    ? 'M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z'\n    : 'M3 17h6V0c-.193 2.84-.876 5.767-2.05 8.782-.904 2.325-2.446 4.485-4.625 6.48A1 1 0 003 17z';\n  return (\n    <svg width=\"9\" height=\"20\" className=\"svg-appendix\">\n      <defs>\n        <filter x=\"-50%\" y=\"-14.7%\" width=\"200%\" height=\"141.2%\" filterUnits=\"objectBoundingBox\" id=\"messageAppendix\">\n          <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n          <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n          <feColorMatrix\n            values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n            in=\"shadowBlurOuter1\"\n          />\n        </filter>\n      </defs>\n      <g fill=\"none\" fill-rule=\"evenodd\">\n        <path d={path} fill=\"#000\" filter=\"url(#messageAppendix)\" />\n        <path d={path} fill={isOwn ? '#EEFFDE' : 'FFF'} className=\"corner\" />\n      </g>\n    </svg>\n  );\n}\n\nexport default MessageAppendix;\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const anchorRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || photo.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, photo]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {fullMediaData && (\n        <img\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <Icon ref={downloadButtonRef} name=\"download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getMessageMediaThumbDataUri,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n  const isMediaUnread = message.isMediaUnread;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isActivated) {\n      onReadMedia();\n    }\n  }, [isActivated, isMediaUnread, onReadMedia]);\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <Icon name=\"download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div\n          className={buildClassName(\n            'message-media-duration', isMediaUnread && 'unread',\n          )}\n        >\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type {\n  ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  message: ApiSponsoredMessage;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenu: FC<OwnProps> = ({\n  isOpen,\n  message,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = message.sponsorInfo || !shouldSkipAbout || message.canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {message.sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(message.canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {message.canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredMessageContextMenu from './SponsoredMessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  message,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsoredMessage,\n    hideSponsoredMessages,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({ chatId: message.chatId });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsoredMessages();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsoredMessage({ peerId: message.chatId, randomId: message.randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredMessageContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        message={message}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  lastPlaybackTimestamp?: number;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  lastPlaybackTimestamp,\n  clickArg,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const { cancelMediaDownload } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || video.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, video]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const shouldHidePreview = isPlayerReady && !isUnsupported;\n  const previewRef = useMediaTransition<HTMLImageElement>((hasThumb || previewBlobUrl) && !shouldHidePreview);\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) && !isUnsupported\n    ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          disablePictureInPicture\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <Icon ref={playButtonRef} name=\"large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <Icon name=\"download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <Icon name=\"message-failed\" className=\"playback-failed\" />}\n        </div>\n      )}\n      {Boolean(lastPlaybackTimestamp) && (\n        <div\n          className=\"message-media-last-progress\"\n          style={`--_progress: ${Math.floor((lastPlaybackTimestamp / duration) * 100)}%`}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LaOdPURl\",\"backgroundWrapper\":\"zDnMa37m\",\"background\":\"EdXfeKWY\",\"stickerWrapper\":\"o_DYZEMV\"};","import React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiStarGiftUnique } from '../../../api/types';\n\nimport { getGiftAttributes } from '../../common/helpers/gifts';\n\nimport { type ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport StickerView from '../../common/StickerView';\n\nimport styles from './WebPageUniqueGift.module.scss';\n\ntype OwnProps = {\n  gift: ApiStarGiftUnique;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst WebPageUniqueGift = ({\n  gift,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const stickerRef = useRef<HTMLDivElement>(null);\n  const {\n    backdrop, model, pattern,\n  } = getGiftAttributes(gift)!;\n\n  const backgroundColors = [backdrop!.centerColor, backdrop!.edgeColor];\n\n  return (\n    <div\n      className={styles.root}\n      onClick={onClick}\n    >\n      <div className={styles.backgroundWrapper}>\n        <RadialPatternBackground\n          className={styles.background}\n          backgroundColors={backgroundColors}\n          patternColor={backdrop!.patternColor}\n          patternIcon={pattern!.sticker}\n        />\n      </div>\n      <div ref={stickerRef} className={styles.stickerWrapper}>\n        <StickerView\n          containerRef={stickerRef}\n          sticker={model!.sticker}\n          size={STAR_GIFT_STICKER_SIZE}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n          observeIntersectionForLoading={observeIntersectionForLoading}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WebPageUniqueGift);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { tryParseDeepLink } from '../../../util/deepLinkParser';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonLangKey } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\nimport WebPageUniqueGift from './WebPageUniqueGift';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst WEBPAGE_GIFT_TYPE = 'telegram_nft';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  lastPlaybackTimestamp?: number;\n  isEditing?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onDocumentClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n};\ntype StateProps = {\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst WebPage: FC<OwnProps & StateProps> = ({\n  message,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  lastPlaybackTimestamp,\n  isEditing,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onMediaClick,\n  onDocumentClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n}) => {\n  const { openUrl, openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const handleOpenTelegramLink = useLastCallback(() => {\n    if (!webPage) return;\n\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, undefined, !hasCustomColor);\n\n  const linkTimestamp = useMemo(() => {\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage?.url);\n    if (!parsedLink || !('timestamp' in parsedLink)) return undefined;\n    return parsedLink.timestamp;\n  }, [webPage?.url]);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n    mediaSize,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isGift = type === WEBPAGE_GIFT_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonLangKey(type) : undefined;\n  const quickButtonTitle = quickButtonLangKey && lang(quickButtonLangKey);\n\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    const { width, height } = calculateMediaDimensions({\n      media: webPage.photo,\n      isOwn: message.isOutgoing,\n      isInWebPage: true,\n      asForwarded,\n      noAvatars,\n      isMobile,\n    });\n    isSquarePhoto = (width === height || mediaSize === 'small') && mediaSize !== 'large';\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    !isEditing && inPreview && 'interactive',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonTitle && 'with-quick-button',\n    isGift && 'with-gift',\n  );\n\n  function renderQuickButton(caption: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        noForcedUpperCase\n        onClick={handleOpenTelegramLink}\n      >\n        {caption}\n      </Button>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={oldLang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName(\n        'WebPage--content',\n        isStory && 'is-story',\n        isGift && 'is-gift',\n      )}\n      >\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {isGift && !inPreview && (\n          <WebPageUniqueGift\n            gift={webPage.gift!}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onClick={handleOpenTelegramLink}\n          />\n        )}\n        {isArticle && (\n          <div\n            className={buildClassName('WebPage-text', !inPreview && 'WebPage-text_interactive')}\n            onClick={!inPreview ? () => openUrl({ url, shouldSkipModal: true }) : undefined}\n          >\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {(!inPreview || isGift) && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && !isGift && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {photo && !isGift && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && video && (\n          <Video\n            video={video}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            lastPlaybackTimestamp={lastPlaybackTimestamp || linkTimestamp}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={onDocumentClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{oldLang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonTitle && renderQuickButton(quickButtonTitle)}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(WebPage));\n","import type { RegularLangKey } from '../../../../types/language';\n\n// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonLangKey(type?: string): RegularLangKey | undefined {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'ViewButtonRequestJoin';\n    case 'telegram_message':\n      return 'ViewButtonMessage';\n    case 'telegram_bot':\n      return 'ViewButtonBot';\n    case 'telegram_voicechat':\n      return 'ViewButtonVoiceChat';\n    case 'telegram_livestream':\n      return 'ViewButtonVoiceChatChannel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'ViewButtonGroup';\n    case 'telegram_channel':\n      return 'ViewButtonChannel';\n    case 'telegram_user':\n      return 'ViewButtonUser';\n    case 'telegram_botapp':\n      return 'ViewButtonBotApp';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'ViewButtonStory';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'ViewButtonBoost';\n    case 'telegram_stickerset':\n      return 'ViewButtonStickerset';\n    case 'telegram_nft':\n      return 'ViewButtonGiftUnique';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n} : {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport cycleRestrict from '../util/cycleRestrict';\nimport { preloadImage } from '../util/files';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\nimport useLastCallback from './useLastCallback';\n\nconst RADIUS_RATIO = 0.1; // Use 10% of the smallest dimension as the blur radius\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  const blurThumb = useLastCallback(async (canvas: HTMLCanvasElement, uri: string) => {\n    const image = await preloadImage(uri);\n    if (!image) {\n      return;\n    }\n\n    requestMutation(() => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      offscreenRef.current = canvas.transferControlToOffscreen();\n\n      const radius = Math.ceil(Math.min(image.width, image.height) * RADIUS_RATIO);\n\n      requestMediaWorker({\n        name: 'offscreen-canvas:blurThumb',\n        args: [offscreenRef.current, uri, radius],\n        transferables: [offscreenRef.current],\n      }, workerIndex);\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    blurThumb(canvas, thumbData);\n  }, [blurThumb, isDisabled, thumbData]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean) : CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { type RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n} : {\n  anchorRef: RefObject<HTMLDivElement>;\n  overlayRef: RefObject<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n  ApiChannelStatistics |\n  ApiGroupStatistics |\n  ApiPostStatistics |\n  ApiBoostStatistics |\n  ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const lang = useOldLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}<span className={styles.decimalPart}>.{decimalTonPart}</span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ ${integerUsdPart}<span className={styles.decimalUsdPart}>.{decimalUsdPart}</span>\n        </span>\n        <h3 className={styles.tableHeading}>{lang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n  const { balances, usdRate } = (statistics as ApiChannelMonetizationStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getPeerTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getPeerTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n\n            callbacks.delete(cb);\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n\n          callbacks.delete(cb);\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressiveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideos) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): StateProps => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst NO_SHINY_TYPES = new Set<ApiMediaArea['type']>(['channelPost', 'uniqueGift']);\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, openUniqueGiftBySlug, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element!.clientWidth!);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n      case 'uniqueGift': {\n        openUniqueGiftBySlug({ slug: mediaArea.slug });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url':\n          case 'uniqueGift': {\n            const isShiny = isActive && !NO_SHINY_TYPES.has(mediaArea.type);\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","import type { ApiLimitType } from '../../api/types';\nimport type { GlobalState } from '../types';\n\nimport { DEFAULT_LIMITS } from '../../config';\nimport { selectIsCurrentUserPremium } from './users';\n\nexport function selectCurrentLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) {\n    return DEFAULT_LIMITS[limit][0];\n  }\n\n  const isPremium = selectIsCurrentUserPremium(global);\n  const { limits } = appConfig;\n\n  // When there are new limits when updating a layer, until we get a new configuration, we must use the default values\n  const value = limits[limit]?.[isPremium ? 1 : 0] ?? DEFAULT_LIMITS[limit][isPremium ? 1 : 0];\n  if (limit === 'dialogFilters') return value + 1; // Server does not count \"All\" as folder, but we need to\n  return value;\n}\n\nexport function selectPremiumLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) return DEFAULT_LIMITS[limit][1];\n\n  const { limits } = appConfig;\n\n  return limits[limit][1];\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: { text: '' },\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n): FoldersState => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: { text: action.payload },\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : { text: getSuggestedFolderName(state.includeFilters) },\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import useForceUpdate from '../useForceUpdate';\nimport useInterval from './useInterval';\n\nexport default function useIntervalForceUpdate(interval?: number) {\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, interval, true);\n}\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useOldLang from './useOldLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useOldLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import { useCallback, useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  }, [onStart, threshold]);\n\n  const cancel = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd, onClick]);\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { makeProgressiveLoader } from '../util/progressiveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { ElectronEvent } from '../../types/electron';\n\nimport { IS_IOS } from '../../util/windowEnvironment';\n\ntype ElementType = HTMLElement;\ntype RefType = {\n  current: ElementType | null;\n};\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen(elRef: RefType, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: ElementType) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_AVAILABLE = 'update-available',\n  DEEPLINK = 'deeplink',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_TRAFFIC_LIGHT_POSITION = 'set-traffic-light-position',\n  SET_IS_AUTO_UPDATE_ENABLED = 'set-is-auto-update-enabled',\n  GET_IS_AUTO_UPDATE_ENABLED = 'get-is-auto-update-enabled',\n  SET_IS_TRAY_ICON_ENABLED = 'set-is-tray-icon-enabled',\n  GET_IS_TRAY_ICON_ENABLED = 'get-is-tray-icon-enabled',\n  RESTORE_LOCAL_STORAGE = 'restore-local-storage',\n}\n\nexport type TrafficLightPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setTrafficLightPosition: (position: TrafficLightPosition) => Promise<void>;\n  setIsAutoUpdateEnabled: (value: boolean) => Promise<void>;\n  getIsAutoUpdateEnabled: () => Promise<boolean>;\n  setIsTrayIconEnabled: (value: boolean) => Promise<void>;\n  getIsTrayIconEnabled: () => Promise<boolean>;\n  restoreLocalStorage: () => Promise<void>;\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.target = '_blank';\n  link.rel = 'noopener noreferrer';\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","GroupCallTopPane","className","onPaneStateChange","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useOldLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","filter","useEffect","subscribed","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","isRendering","ref","shouldRender","useHeaderPane","isOpen","onStateChange","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","start","end","style","Audio","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMediaDownload","downloadMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","media","mediaSource","isVoice","isSeeking","useRef","isRtl","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMediaHash","coverBlobUrl","useMedia","ApiMediaFormat","BlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","useLastCallback","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","i","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","current","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","originMessage","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","push","contentClassName","renderWithTitle","dir","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","Icon","name","ripple","color","ariaLabel","backgroundImage","nonInteractive","AnimatedIcon","tgsUrl","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","draggable","viewBox","rx","ry","stroke","renderVoice","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","add","body","appendChild","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","href","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","VALID_TARGET_IDS","Set","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","target","closest","has","preventDefault","activeElement","pastedText","getData","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","getFilesFromDataTransferItems","textToPaste","entities","text","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","setTimeout","pause","props","AttachmentModal","useModuleLoader","Bundles","Extra","AttachMenu","threadId","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","canEditMedia","editingMessage","isAttachMenuOpen","openAttachMenu","closeAttachMenu","useFlag","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","includes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","selectCurrentMessageList","selectChatMessage","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","renderKeyboardButtonText","noCompact","j","BotMenuButton","isDisabled","textRef","textEl","scrollWidth","setProperty","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","shouldAnimate","selectCanAnimateInterface","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","selectSender","selectForwardedSender","selectPeer","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","currentUserId","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","oldLang","useLang","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShown","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","querySelector","renderingSender","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","attachmentSettings","selectTheme","webPagePreview","WebPagePreview","getHtml","isEditing","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","updateAttachmentSettings","formattedTextWithLinkRef","isInvertedMedia","isSmallerMedia","webPageMediaSize","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","entity","url","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","hasMediaSizeOptions","hasLargeMedia","renderingWebPage","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","onContainerClick","MainButtonState","storyId","chatBot","isSystemBot","selectBot","isChatWithBot","isChatWithUser","isUserId","userFullInfo","selectUserFullInfo","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","peer","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","maxMessageLength","config","DEFAULT_MAX_MESSAGE_LENGTH","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","hasScheduledMessages","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","isContactRequirePremium","Composer","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePreviousDeprecated","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","limit","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","substring","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","EDITABLE_INPUT_CSS_SELECTOR","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSend","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","webPageUrl","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","sticker","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","emoticon","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","isQuiz","shouldBeAnonymous","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","Avatar","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","CustomEmojiTooltip","key","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","allowDisabledClick","noFastClick","MessageEffect","shouldPlay","onStop","CustomSendMenu","canSchedule","onSendSchedule","onRemoveEffect","withEffects","hasCurrentEffect","isSavedDialog","isPrivateChat","user","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","DeleteChatModal","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","Document","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","getDocumentMediaHash","hasPreview","getDocumentHasPreview","thumbDataUri","getMediaThumbUri","localBlobUrl","previewBlobUrl","previewData","withMediaViewer","innerMediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","checked","label","onCheck","DotAnimation","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","src","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","selectTopic","messagesCount","selectThreadMessagesCount","GroupChatInfo","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadMoreProfilePhotos","isTopic","isMin","isRestricted","isPreload","handleAvatarViewerOpen","hasMedia","isAvatarView","mediaIndex","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","TypingStatus","Transition","shouldRestoreHeight","activeKey","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","renderStatusOrTyping","LastMessageMeta","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","Media","isProtected","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isVisible","isGif","Keys","NothingFound","description","forceShowSelf","isSynced","userStatus","selectUserStatus","isSelf","PrivateChatInfo","customPeer","noFake","noVerified","adminMember","iconElement","rightElement","loadFullUser","useIntervalForceUpdate","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","ProfilePhoto","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getPhotoMediaHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","thumbnail","dataUri","blurredThumbCanvasRef","currentTime","specialIcon","role","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","emojiStatus","emojiStatusSticker","emojiStatusSlug","slug","ProfileInfo","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","openUniqueGiftBySlug","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaHash","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","styles","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","totalPhotosLength","count","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","_","renderPhotoTabs","personalPhoto","fallbackPhoto","renderPhoto","canCopyTitle","isSystemBotChat","isReadDateRestrictedByMe","membersCount","renderStatus","iconEmojiId","observeIntersectionForPlaying","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","WebLink","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","SafeLink","NBSP","EmbeddedMessage","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getPeerTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","PeerColorWrapper","emojiIconClassName","shouldReset","blobUrl","isFullVideo","getPictogramDimensions","srcUrl","shouldRenderVideo","renderPictogram","renderTextWithEntities","asPreview","emojiSize","MessageSummary","noEmoji","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isChatGroup","isReplyToQuote","renderSender","freezeWhenClosed","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shift","shiftedRanges","startMinute","endMinute","sort","a","b","last","DAYS","BusinessHours","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","forceUpdate","useForceUpdate","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","ListItem","iconClassName","multiline","isStatic","narrow","withColorTransition","tabIndex","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","UserBirthday","birthday","isInSettings","openGiftModal","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","buildCollectionByKey","split","digit","effectSticker","randomEffect","random","hash","getStickerMediaHash","effectHash","column","valueKey","canGiftPremium","isPremium","handleOpenGiftModal","forUserId","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","index","StickerView","containerRef","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","chatOrUserId","countryList","phoneCodes","phoneCodeList","botAppPermissions","selectBotAppPermissions","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","botVerification","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","hasMainMiniApp","isBotCanManageEmojiStatus","ChatExtra","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","requestMainWebView","toggleUserEmojiStatusPermission","toggleUserLocationPermission","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","prevPeerId","dpr","useDevicePixelRatio","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","manageEmojiStatusChange","handleLocationPermissionChange","isAccessGranted","geolocation","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","handleOpenApp","extractCurrentThemeParams","shouldMarkBotTrusted","appTermsInfo","terms","withNodes","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","Switcher","inactive","iconId","usernameList","otherUsernames","usernameLinks","s","ChatFolderModal","MuteChatModal","ChatCallStatus","lastMessageId","selectChatLastMessageId","lastMessage","selectChatLastMessage","isOutgoing","savedDialogSender","fromId","messageSender","lastMessageSender","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","topicsInfo","selectTopicsInfo","lastMessageStory","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","listedTopicIds","topics","topicsById","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","useEnsureMessage","renderSubtitle","useChatListEntry","statefulMediaContent","groupStatefulContent","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","handleReport","contextActions","useChatContextActions","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","subscriptionUntil","StoryViewerOrigin","ChatList","StarIcon","ChatBadge","shouldShowOnlyMostImportant","forceHidden","hasMiniApp","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","isCustom","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","miniAppButton","pill","visiblePinnedElement","elements","renderContent","ARCHIVE_CUSTOM_PEER","isCustomPeer","avatarIcon","customPeerAvatarColor","Archive","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","isMinimized","handler","actionExpand","actionHide","isHidden","compact","root","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","fluid","UnconfirmedSession","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","useResizeObserver","entry","borderBoxSize","blockSize","contentRect","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","isArchiveInList","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","rect","currentTarget","clientY","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","event","container","scrollHeight","deltaY","passive","useTopOverscroll","InfiniteScroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onLoadMore","onDragLeave","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","Loading","ICON_SIZE","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","selectTopics","canDelete","selectCanDeleteTopic","Topic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","ForumPanel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","beginHeavyAnimation","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","renderTopics","GENERAL_TOPIC_ID","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","shouldTryLoadingStory","useEnsureStory","mediaContent","mediaHasPreview","getMessageSticker","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","opacity","ANIMATION_END_DELAY","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","senderId","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","scrollX","scrollY","innerWidth","innerHeight","seed","filterId","SNAP_EFFECT_ID","generateUniqueId","component","ghost","smallestSide","baseSeed","xmlns","SVG_NAMESPACE","baseFrequency","numOctaves","slope","intercept","attributeName","dur","in2","operator","xChannelSelector","yChannelSelector","createFilter","elementContainer","svg","jsxToHtml","foreignObject","computedStyle","getComputedStyle","clone","getPropertyValue","snapContainer","once","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","screen","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","AttachBotIcon","isTouchScreen","Text","iconSvg","mediaDataWithReplacedColors","doc","path","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","shortName","isDisclaimerNeeded","withPortal","CustomSend","DropTarget","isQuick","isGeneric","svgRef","isHovered","markHovered","unmarkHovered","relatedTarget","toTarget","handleResize","baseVal","useEffectOnce","onDrop","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","containerSelector","onDragOver","handleDragOver","clearTimeout","AbsoluteVideo","constructor","videoUrl","options","_defineProperty","this","load","recalculatePositionAndSize","play","paused","safePlay","destroy","updatePosition","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","customColor","useDynamicColorListener","colorFilter","useColorFilter","playersById","Map","clearPlayers","player","delete","synchronizeElements","playerIdsToClear","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","isLottie","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","r","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","then","animation","set","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","getIsHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","onChange","onKeyDown","isComposing","altKey","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onLoad","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","mimeType","quick","shouldSendAsFile","img","preloadImage","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","replaceWithTeact","STARS_ICON_PLACEHOLDER","MAX_NESTING_PARENTS","commonAncestorContainer","parentNode","iterations","parentElement","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterPeersByQuery","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","CLOSE_DURATION","RESIZE_THROTTLE","providedRef","withResizeObserver","setShouldRender","localRef","lastHeightRef","reset","useUnmountCleanup","handleUpdate","applyAnimationState","list","noTransition","cumulativeHeight","state","shiftPx","apply","setExtraStyles","zIndex","String","transition","isPanelOpen","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","getSingularPaidMedia","extendedMedia","singularMedia","AlbumRectPart","Top","Bottom","accumulate","initValue","accumulator","calculateContainerSize","layout","dimensions","sides","calculateAlbumLayout","album","ratios","messages","isSingleMessage","paidMedia","getMessageContent","calculateMediaDimensions","getRatios","isPaidMedia","proportions","ratio","getProportions","averageRatio","getAverageRatio","albumCount","forceCalc","maxWidth","getAvailableWidth","params","minWidth","spacing","originalRatios","clamp","cropRatios","attempts","pushAttempt","lineCounts","heights","currentCount","multiHeight","attemptCount","sum","first","second","third","fourth","optimalAttempt","optimalDiff","lineCount","totalHeight","bad1","bad2","line","optimalCounts","optimalHeights","rowCount","colCount","lineHeight","col","layoutWithComplexLayouter","layoutTwoTopBottom","layoutTwoLeftRightEqual","minimalWidth","secondWidth","firstWidth","layoutTwoLeftRight","layoutTwo","firstHeight","thirdHeight","secondHeight","rightWidth","leftWidth","layoutThreeLeftAndOther","thirdWidth","layoutThreeTopAndOther","layoutThree","w","h0","h","w0","w2","w1","h1","layoutFourTopAndOther","h2","layoutFourLeftAndOther","layoutFour","containerStyle","worker","initializationDeferred","Deferred","IS_TRANSLATION_SUPPORTED","createConnector","Worker","CHAT_STATS","throttledMakeChatDecision","throttle","updateChatDetectedLanguage","chatStats","messagesChecked","translatableCount","detectableCount","languageOccurrences","isTranslatable","occurrences","QUICK_REACTION_AREA_WIDTH","QUICK_REACTION_AREA_HEIGHT","GROUP_MESSAGE_HOVER_ATTRIBUTE","useOuterHandlers","selectMessage","isInSelectMode","canReply","isContextMenuShown","quickReactionRef","shouldHandleMouseLeave","getIsMessageListReady","sendDefaultReaction","isQuickReactionVisible","markQuickReactionVisible","unmarkQuickReactionVisible","isSwiped","markSwiped","unmarkSwiped","doubleTapTimeoutRef","handleMouseMove","quickReactionContainer","quickReactionX","quickReactionWidth","quickReactionY","quickReactionHeight","isVisibleX","isVisibleY","excludedClosestSelector","preventMessageInputBlur","clearInterval","contains","getIsKeyboardVisible","handleTap","handleDoubleClick","handleContentDoubleClick","handleSendQuickReaction","lastGroupElement","getLastElementInDocumentGroup","handleDocumentGroupMouseLeave","handleDocumentGroupMouseEnter","nextElementSibling","EmbeddedStory","isFullStory","isExpiredStory","isVideoStory","pictogramUrl","handleFastClick","peerColor","TopicChip","getTopicColorCssVariable","blankSrc","withSelectControl","WrappedComponent","ownProps","clickArg","noSelectControls","selectIsMessageSelected","toggleMessageSelection","handleMessageSelect","withShift","newProps","dims","PhotoWithSelect","Photo","VideoWithSelect","Video","activeDownloads","selectActiveDownloads","uploadsByKey","fileUploads","byMessageKey","Album","hasCustomAppendix","albumLayout","cancelUploadMedia","mainMessage","mediaCount","handlePaidMediaClick","handleAlbumMessageClick","handleCancelUpload","containerWidth","containerHeight","renderingPaidMedia","paidPhotoOrPreview","paidVideoOrPreview","fileUpload","getMessageKey","selectCanAutoLoadMedia","canAutoPlay","selectCanAutoPlayMedia","shouldAffectAppendix","mediaType","getIsDownloading","useAnimatedEmoji","soundId","activeEmojiInteractions","preferredSize","interactWithAnimatedEmoji","sendEmojiInteraction","sendWatchingEmojiInteraction","audioRef","soundMediaData","buildStyle","IS_ELECTRON","interactions","startedInteractions","sendInteractionBunch","startSize","isReversed","performance","interactionMessageId","customEmojiId","selectAnimatedEmojiEffect","selectAnimatedEmojiSound","noPlay","AnimatedCustomEmoji","getCustomEmojiSize","LIKE_STICKER_ID","isBig","withSharedAnimation","AnimatedEmoji","forceLoadPreview","quality","noLoad","forcePreview","CommentButton","isCustomShape","asActionButton","shouldRenderLoading","useAsyncRendering","originMessageId","recentReplierIds","originChannelId","isComments","recentRepliers","hasUnread","commentsText","getContactName","contact","firstName","lastName","Contact","openAddContactDialog","isRegistered","canAddContact","getCanAddContact","handleOpenChat","handleAddContact","ContextMenuContainer","COLOR","FactCheck","factCheck","isToggleDisabled","cutoutRef","isCollapsible","setIsCollapsed","useCollapsibleLines","countryLocalized","countryCode","canExpand","handleExpand","handleToggle","prev","Separator","Game","canAutoLoadMedia","game","getGamePreviewPhotoHash","getGamePreviewVideoHash","videoBlobUrl","handleGameClick","inlineButtons","giveaway","channelIds","giftSticker","selectGiftStickerForDuration","months","Giveaway","isLoadingInfo","giveawayInfo","setGiveawayInfo","giveawayResults","isResults","untilDate","prizeDescription","stars","quantity","winnersCount","hasEnded","translatedNames","countries","isoToEmoji","handlePeerClick","channelId","handleShowInfoClick","callApi","handleCloseInfo","giveawayInfoTitle","AnimatedIconWithPreview","PartyPopper","winnerIds","PeerChip","withPeerColors","renderGiveawayResultsDescription","formatDateTimeToString","renderGiveawayDescription","isOnlyConfirm","isResultsInfo","isApiPeerChat","endDate","formatDateAtTime","otherChannelsCount","otherChannelsString","isSeveral","firstKey","giveawayDuration","firstParagraph","additionalPrizes","secondKey","secondParagraph","activatedCount","isRefunded","isWinner","lastParagraph","disallowedCountry","adminDisallowedChatId","disallowedChat","disallowedChatTitle","joinedTooEarlyDate","isParticipating","renderGiveawayInfo","InlineButtons","RE_TME_LINK","renderIcon","Invoice","forcedWidth","invoice","getMessageInvoice","amount","currency","isTest","photoUrl","getWebDocumentHash","withBlurredBackground","useBlurredMediaThumbRef","prevShouldAffectAppendix","contentEl","MESSAGE_CONTENT_SELECTOR","getCustomAppendixBg","appendixBg","CUSTOM_APPENDIX_ATTRIBUTE","crossOrigin","forceAspectRatio","formatCurrency","InvoiceMediaPreview","openInvoice","loadExtendedMedia","refreshExtendedMedia","isExtendedMedia","spoiler","buy","lock","formatCurrencyAsString","TIMER_CIRCUMFERENCE","TIMER_RADIUS","PI","MOVE_THRESHOLD","PinSvg","cx","cy","Location","countdownRef","location","getMessageLocation","serverTime","isGeoLiveExpired","secondsBeforeEnd","period","point","setPoint","shouldRenderText","prevMediaBlobUrl","mapBlobUrl","accuracyRadiusPx","accuracyRadius","lat","getMetersPerPixel","updateCountdown","countdownEl","svgEl","lastElementChild","timerEl","firstElementChild","timeLeft","strokeDashOffset","formatCountdownShort","long","pinClassName","heading","getVenueColor","venueType","iconSrc","getVenueIconUrl","mapPin","renderPin","renderOverlay","formatLastUpdated","editDate","renderInfo","MessageMeta","signature","withReactionOffset","repliesThreadInfo","renderQuickReactionButton","noReplies","isTranslated","withFullDate","onTranslationClick","onEffectClick","onOpenThread","markActivated","handleImportedClick","dateTitle","createDateTime","timeFormat","editDateTime","isEdited","forwardedDateTime","savedDate","viewsTitle","viewsCount","pluralValue","forwardsCount","repliesTitle","time","isImported","isVideoProcessingPending","MessagePhoneCall","phoneCall","reason","isMissed","isCancelled","handleCall","formattedDuration","formatTimeDuration","timeFormatted","getCallMessageKey","PaidMediaOverlay","children","isClickable","isBought","starsAmount","formatStarsAsIcon","getPercentage","total","toFixed","PollOption","answer","voteResults","totalVoters","maxVotersCount","correctResults","option","correctAnswer","showIcon","isChosen","answerPercent","votersCount","finalPercent","setFinalPercent","lineWidth","isAnimationDoesNotStart","lineStyle","Poll","onSendVote","loadMessage","openPollResults","summary","isSubmitting","setIsSubmitting","chosenOptions","setChosenOptions","wasSubmitted","setWasSubmitted","closePeriod","setClosePeriod","closed","closeDate","timerCircleRef","hasVoted","canVote","canViewResult","isPublic","isMultiple","multipleChoice","recentVoterIds","isCorrect","answers","hidden","quiz","chosen","timer","recentVoters","handleRadioChange","handleCheckboxChange","handleVoteClick","handleViewResultsClick","showSolution","localId","solution","solutionEntities","question","getPollTypeString","CheckboxGroup","loadingOptions","isRound","RadioGroup","loadingOption","getReadableVotersCount","Sticker","withEffect","onStopEffect","effectRef","hasEffect","isMirrored","IS_WEBM_SUPPORTED","canLoad","mediaHashEffect","effectBlobUrl","isPlayingEffect","startPlayingEffect","stopPlayingEffect","handleEffectEnded","shouldRenderEffect","useOverlayPosition","anchorRef","overlayRef","openModal","isMemojiSticker","getStickerDimensions","fullMediaHash","fullMediaClassName","AnimatedSticker","onEnded","connectionState","BaseStory","lastReadId","selectPeerStories","targetUser","thumbUrl","QUICK_REACTION_SIZE","EXTRA_SPACE_FOR_REACTIONS","focusedMessage","activeReactions","loadingThread","withSenderName","isLastInDocumentGroup","isFirstInGroup","viaBotId","transcriptionId","viaBusinessBotId","isGroup","webPageStoryData","webPageStory","forceSenderName","isAnonymousOwnMessage","canShowSender","originSender","botSender","senderAdminMember","adminMembersById","isThreadTop","getMessageReplyInfo","storyReplyPeerId","storyReplyId","getStoryReplyInfo","shouldHideReply","replyMessage","selectReplyMessage","forwardHeader","replyMessageSender","selectSenderFromHeader","replyMessageForwardSender","replyMessageChat","isReplyPrivate","isChatPublic","replyStory","storySender","selectUploadProgress","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","isResizingContainer","quote","focusedQuote","scrollTargetPosition","middleSearch","selectCurrentMiddleSearch","highlight","isHashtag","getMessageSingleRegularEmoji","animatedCustomEmoji","getMessageSingleCustomEmoji","every","selectCanReplyToMessage","downloadableMedia","getMessageDownloadableMedia","commentsMessage","isInDocumentGroup","documentGroupFirstMessageId","selectMessageIdsByGroupId","reactionMessage","hasUnreadReaction","unreadReactions","hasTopicChip","messageTopic","selectChatTranslations","requestedTranslationLanguage","selectRequestedMessageTranslationLanguage","areTranslationsEnabled","hasActiveReactions","senderBoosts","boostsApplied","chatLevel","boostLevel","transcribeMinLevel","appConfig","groupTranscribeLevelMin","canTranscribeVoice","viaBusinessBot","selectPollFromMessage","maxTimestamp","selectMessageTimestampableDuration","lastPlaybackTimestamp","selectMessageLastPlaybackTimestamp","selectIsMessageProtected","isChatProtected","selectIsChatProtected","isGroupSelected","selectIsDocumentGroupSelected","isPinnedList","canAutoPlayMedia","shouldLoopStickers","selectShouldLoopStickers","defaultReaction","selectDefaultReaction","transcriptions","isPending","transcribedText","shouldDetectChatLanguage","selectShouldDetectChatLanguage","hasLinkedChat","linkedChatId","withAnimatedEffects","isLoadingComments","isCommentsInfo","loadingChatId","loadingMessageId","tags","savedReactionTags","Message","observeIntersectionForBottom","noComments","appearanceOrder","isJustAdded","isLastInGroup","isFirstInDocumentGroup","isLastInList","memoFirstUnreadIdRef","onIntersectPinnedMessage","disableContextMenuHint","animateUnreadReaction","markMentionsRead","bottomMarkerRef","setTranscriptionHidden","isPlayingSnapAnimation","setIsPlayingSnapAnimation","isPlayingDeleteAnimation","setIsPlayingDeleteAnimation","requestEffect","hideEffect","contextMenuTarget","noAppearanceAnimation","markShown","MESSAGE_APPEARANCE_DELAY","useShowTransition","noMountTransition","viewportPinnedIdsToRemove","hasMessageReply","isReplyToMessage","paidMediaPhoto","paidMediaVideo","messageReplyInfo","storyReplyInfo","withVoiceTranscription","hasStoryReply","hasThread","getMessageCustomShape","hasAnimatedEmoji","hasReactions","areReactionsEmpty","asForwarded","isLinkedChannelPost","isMention","canShowSenderBoosts","isStoryMention","isAlbum","msg","isInDocumentGroupNotFirst","isInDocumentGroupNotLast","canShowActionButton","canForward","isForwardingAllowed","canFocus","fromMessageId","hasFactCheck","hasForwardedCustomShape","hasSubheader","childMessageIds","avatarPeer","messageColorPeer","senderPeer","handleSenderClick","handleViaBotClick","handleReplyClick","handleMediaClick","handleDocumentClick","handleAudioPlay","handleAlbumMediaClick","handlePhotoMediaClick","handleVideoMediaClick","handleMetaClick","handleTranslationClick","handleOpenThread","handleReadMedia","handleVoteSend","handleGroupForward","handleForward","handleFocus","handleFocusForwarded","handleDocumentGroupSelectAll","handleTopicChipClick","handleStoryClick","isTranslatingChat","openAudioPlayer","markMessagesRead","sendPollVote","openForwardMenu","searchChatMediaMessages","replyToTopId","channelPostId","focusMessageId","replyMessageId","ScheduledInline","openMediaViewerWithPhotoOrVideo","withDynamicLoading","currentMediaMessageId","videoContent","webpageTimestamp","albumMessageId","albumIndex","ScheduledAlbum","originalChatId","savedFromPeerId","groupedChatId","selectWithGroupedId","useInnerHandlers","handleEffectClick","isPartialAlbumDelete","isDeleting","textMessage","hasMultipleCaptions","captionMessage","hasTextContent","hasMessageText","containerClassName","hasUnreadMention","getIsReady","setLanguage","threshold","promise","request","detectLanguage","useTextLanguage","LimitedMap","previousMetadata","processMessageMetadata","useDetectChatLanguage","isTranslationPending","previousTranslatedText","currentTranslatedText","isMediaWithCommentButton","withCommentButton","withQuickReactionButton","hasOutsideReactions","hasCommentCounter","hasCommentButton","hasActionButton","isGeoLiveActive","peerColorClass","isInvertibleMedia","classNames","MESSAGE_CONTENT_CLASS_NAME","isMedia","isMediaWithNoText","hasInlineKeyboard","isViaBot","hasFooter","emojiOnlyCount","EMOJI_SIZES","gift","buildContentClassName","withAppendix","metaPosition","reactionsPosition","quickReactionPosition","useFocusMessage","viaBusinessBotTitle","canShowPostAuthor","postAuthorTitle","useMessageResizeObserver","bottomMarker","isElementInViewport","unreadMentionIds","extraPadding","sizeCalculations","calculatedWidth","contentWidth","reactionsMaxWidth","noMediaCorners","previewWidth","previewHeight","calculateDimensionsForMessageMedia","fromOwnMessage","MIN_MEDIA_WIDTH_WITH_TEXT","getMinMediaWidth","renderMessageText","isForAnimation","MessageText","messageOrStory","canBeEmpty","ReactionStaticEmoji","renderReactionsAndMeta","meta","Reactions","metaChildren","noRecentReactors","renderWebPage","backgroundEmojiId","onAudioPlay","onDocumentClick","onCancelMediaTransfer","renderInvertibleMediaContent","messageText","shouldRenderSenderName","renderForwardTitle","renderSenderName","shouldSkipRenderForwardTitle","shouldSkipRenderAdminTitle","senderEmojiStatus","senderIsPremium","shouldRenderForwardAvatar","hasBotSenderUsername","senderColor","EMOJI_STATUS_LOOP_LIMIT","fakeType","FakeIcon","forwardAuthor","onCopy","onDoubleClick","onMouseMove","textContentClass","shouldReadMedia","RoundVideo","Story","StoryMention","footerClass","hasContentAfterText","isMetaInText","renderInvertedMediaContent","MessageAppendix","isOutside","targetHref","startPlaying","stopPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","handleEnded","isForMessageEffect","effectClassName","isInWebPage","isPaidPreview","useMediaTransition","showSpoiler","wasLoadDisabled","spinnerRef","withShouldRender","downloadButtonRef","shouldRenderDownloadButton","isAllowed","isSmall","componentClassName","MIN_MEDIA_HEIGHT","dimensionsStyle","withAnimation","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","stopPrevious","playerRef","circleRef","getVideoMediaHash","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","capturePlaying","togglePlaying","stopCurrentAudio","handleTimeUpdate","isPriority","onTimeUpdate","SponsoredMessageContextMenu","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","sponsorInfo","canReport","SponsoredMessageContextMenuContainer","onItemClick","openAboutAdsModal","reportSponsoredMessage","hideSponsoredMessages","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","additionalInfo","handleReportSponsoredMessage","randomId","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","isFullMediaPreloaded","hasThumb","isInline","isUnsupported","useUnsupportedMedia","previewMediaHash","isPreviewPreloaded","canLoadPreview","shouldHidePreview","previewRef","playButtonRef","setPlayProgress","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","handleClickOnSpinner","WebPageUniqueGift","stickerRef","backdrop","model","pattern","getGiftAttributes","backgroundColors","centerColor","edgeColor","RadialPatternBackground","patternColor","patternIcon","openUrl","openTelegramLink","stickersRef","handleContainerClick","handleOpenTelegramLink","hasCustomColor","isWithTextColor","documents","linkTimestamp","mediaSize","isStory","isGift","quickButtonLangKey","getWebpageButtonLangKey","quickButtonTitle","isArticle","isSquarePhoto","isMediaInteractive","EmojiIconBackground","emojiDocumentId","shouldSkipModal","isEmoji","caption","isRectangular","noForcedUpperCase","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","requestMediaWorker","MAX_WORKERS","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH","isPhoto","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","RADIUS_RATIO","lastWorkerIndex","thumbData","workerIndex","cycleRestrict","offscreenRef","blurThumb","uri","image","transferControlToOffscreen","ceil","transferables","useOffscreenCanvasBlur","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","OFFSET_X","anchorRect","elementRect","anchorCenterY","anchorBottomY","messagesContainer","selectCurrentChat","DeleteMemberModal","deleteChatMember","handleDeleteChatMember","textParts","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","isToncoin","renderBalanceCell","balance","usdRate","integerTonPart","decimalTonPart","integerUsdPart","decimalUsdPart","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","part","percentage","renderOverviewItemValue","change","isChangeNegative","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","active","archived","isClosing","closing","useHorizontalScroll","StoryRibbonButton","byPeerId","isRibbonShown","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","avatar","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","toggleAvatar","selectByPeerId","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","drawImage","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","isArray","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","unloadVideo","preloadProgressive","preloadHashes","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideos","getPreloadMediaHashes","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","effectSize","shouldPause","restrictedEmoji","selectRestrictedEmoji","MediaAreaWeather","temperatureC","backgroundColor","convertToRGBA","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","withTranslucentThumb","navigator","formatTemperature","STORY_ASPECT_RATIO","NO_SHINY_TYPES","prepareStyle","mediaWidth","rotation","coordinates","pixelRadius","pixelWidth","pixelHeight","isStoryPlaying","closeStoryViewer","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","handleMediaAreaClick","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","adminId","selectCanInviteToActiveGroupCall","DEFAULT_LIMITS","limits","selectPremiumLimit","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","interval","resolver","deps","msOrSchedulerFn","noFirst","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","audioProxy","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","toggleChatUnread","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","loadStoryThrottled","throttled","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","shouldFireEvent","hotkey","ctrl","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","isLongPressActive","isPressed","timerId","canProcessEvent","touches","cancel","onMouseUp","onTouchStart","onTouchEnd","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeElectronListener","electron","on","ElectronEvent","FULLSCREEN_CHANGE","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","ConnectorClass","channel","throttleWithTickEnd","payloads","pendingPayloads","pendingTransferables","postMessage","postMessageOnTickEnd","messageData","requestStates","requestStatesByCallback","restMessageData","requestState","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","postMessagesOnTickEnd","connector","handleMessage","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","parseMessageKey","splitTrackId","messageKey","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","rel","click","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","LUMA_THRESHOLD","outputType","Image","onload","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","averageColor","getAverageColor","fillColor","getColorLuma","res","ctx2D","fillRect","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","globalCompositeOperation","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","providerUrl","cos","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","fullSize","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","cloneContents","caretRange","endContainer","endOffset","Node","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange"],"sourceRoot":""}