{"version":3,"file":"7493.97f4d0748c74cb036eb3.js","mappings":"yGAMO,SAASA,EAAmBC,EAAMC,GACrC,IAAIC,EAAIC,EAER,MAAyF,kBAA7EF,aAA6C,EAASA,EAAUG,SACjEH,EAAUG,QAG+G,QAA5HD,EAA2E,QAArED,EAAKF,aAAmC,EAASA,EAAKK,iBAA8B,IAAPH,OAAgB,EAASA,EAAGE,eAA4B,IAAPD,GAAgBA,CAChK,C,+FCkBO,SAASG,EAAaC,EAAOC,GAChC,SAASC,EAAOC,GACZ,IAAIV,EAAOO,EACPI,EAAKD,EAAIE,MAAMA,MACnB,GAAIZ,GAAQW,EAAI,CACZ,IAAIV,EAAYD,EAAKW,GACrB,KAAK,OAAmBX,EAAMC,GAE1B,OADAS,EAAIG,YAAY,gBAAgB,IAAAC,WAAS,IAAAA,UAAS,CAAC,EAAGJ,EAAIE,MAAMG,cAAe,CAAEC,KAAK,EAAO,WAAW,KACjGN,EAGP,IAAIO,EAzCpB,SAAoCjB,EAAMQ,GACtC,IAAIN,EAAIC,EACR,IAAKH,IAASkB,OAAOC,KAAKnB,GACtB,MAAO,CAAC,EAEZ,IAAIoB,EAAuBpB,EAAKe,aAC1BG,OAAOC,KAAKnB,EAAKe,cAAcN,QAAO,SAAUY,GAAK,OAAgC,IAAzBrB,EAAKe,aAAaM,EAAc,IAC5F,GAGFC,EAAwB,GAQ5B,OAPmC,QAAjCpB,EAAKM,EAASe,qBAAkC,IAAPrB,EAAgBA,EAAK,IAAIsB,SAAQ,SAAUC,GAClFL,EAAqBI,SAAQ,SAAUE,IAC/BD,EAAEE,KAAKC,SAASF,IAAQA,EAAIE,SAASH,EAAEE,QACvCL,EAAsBO,KAAKJ,EAAEE,KAErC,GACJ,KAC0C,QAAjCxB,EAAKK,EAASe,qBAAkC,IAAPpB,EAAgBA,EAAK,IAAI2B,QAAO,SAAUC,EAAKN,GAS7F,OARIA,EAAEjB,SAAwB,eACtBc,EAAsBM,SAASH,EAAEE,OAEjCF,EAAEjB,SAAwB,cAAEgB,SAE5B,SAAUQ,GAAO,OAAQD,EAAI,GAAGE,OAAOR,EAAEE,KAAM,KAAKM,OAAOD,EAAIE,iBAAkB,CAAQ,IAG1FH,CACX,GAAG,CAAC,EACR,CAYsCI,CAA2BlC,EAAWO,GAC5DE,EAAIG,YAAY,gBAAgB,IAAAC,WAAS,IAAAA,WAAS,IAAAA,UAAS,CAAC,EAAGJ,EAAIE,MAAMG,cAAed,aAA6C,EAASA,EAAUc,cAAeE,GAE/K,CACA,OAAOP,CACX,CACA,MAAO,CACHiB,KAAM,gBACNS,QAAS,QACTC,SAAU,WAAc,OAAO,CAAM,EACrCC,KAAM,WAAc,OAAOC,QAAQC,SAAW,EAC9CC,KAAM,SACNC,KAAMjC,EACNkC,MAAOlC,EACPF,MAAOE,EACPmC,SAAUnC,EACVoC,MAAOpC,EAEf,C","sources":["webpack://telegram-t/./node_modules/@june-so/analytics-next/dist/pkg/lib/is-plan-event-enabled.js","webpack://telegram-t/./node_modules/@june-so/analytics-next/dist/pkg/plugins/schema-filter/index.js"],"sourcesContent":["/**\n * Determines whether a track event is allowed to be sent based on the\n * user's tracking plan.\n * If the user does not have a tracking plan or the event is allowed based\n * on the tracking plan configuration, returns true.\n */\nexport function isPlanEventEnabled(plan, planEvent) {\n    var _a, _b;\n    // Always prioritize the event's `enabled` status\n    if (typeof (planEvent === null || planEvent === void 0 ? void 0 : planEvent.enabled) === 'boolean') {\n        return planEvent.enabled;\n    }\n    // Assume absence of a tracking plan means events are enabled\n    return (_b = (_a = plan === null || plan === void 0 ? void 0 : plan.__default) === null || _a === void 0 ? void 0 : _a.enabled) !== null && _b !== void 0 ? _b : true;\n}\n//# sourceMappingURL=is-plan-event-enabled.js.map","import { __assign } from \"tslib\";\nimport { isPlanEventEnabled } from '../../lib/is-plan-event-enabled';\nfunction disabledActionDestinations(plan, settings) {\n    var _a, _b;\n    if (!plan || !Object.keys(plan)) {\n        return {};\n    }\n    var disabledIntegrations = plan.integrations\n        ? Object.keys(plan.integrations).filter(function (i) { return plan.integrations[i] === false; })\n        : [];\n    // This accounts for cases like Fullstory, where the settings.integrations\n    // contains a \"Fullstory\" object but settings.remotePlugins contains \"Fullstory (Actions)\"\n    var disabledRemotePlugins = [];\n    ((_a = settings.remotePlugins) !== null && _a !== void 0 ? _a : []).forEach(function (p) {\n        disabledIntegrations.forEach(function (int) {\n            if (p.name.includes(int) || int.includes(p.name)) {\n                disabledRemotePlugins.push(p.name);\n            }\n        });\n    });\n    return ((_b = settings.remotePlugins) !== null && _b !== void 0 ? _b : []).reduce(function (acc, p) {\n        if (p.settings['subscriptions']) {\n            if (disabledRemotePlugins.includes(p.name)) {\n                // @ts-expect-error element implicitly has an 'any' type because p.settings is a JSONObject\n                p.settings['subscriptions'].forEach(\n                // @ts-expect-error parameter 'sub' implicitly has an 'any' type\n                function (sub) { return (acc[\"\".concat(p.name, \" \").concat(sub.partnerAction)] = false); });\n            }\n        }\n        return acc;\n    }, {});\n}\nexport function schemaFilter(track, settings) {\n    function filter(ctx) {\n        var plan = track;\n        var ev = ctx.event.event;\n        if (plan && ev) {\n            var planEvent = plan[ev];\n            if (!isPlanEventEnabled(plan, planEvent)) {\n                ctx.updateEvent('integrations', __assign(__assign({}, ctx.event.integrations), { All: false, 'june.so': true }));\n                return ctx;\n            }\n            else {\n                var disabledActions = disabledActionDestinations(planEvent, settings);\n                ctx.updateEvent('integrations', __assign(__assign(__assign({}, ctx.event.integrations), planEvent === null || planEvent === void 0 ? void 0 : planEvent.integrations), disabledActions));\n            }\n        }\n        return ctx;\n    }\n    return {\n        name: 'Schema Filter',\n        version: '0.1.0',\n        isLoaded: function () { return true; },\n        load: function () { return Promise.resolve(); },\n        type: 'before',\n        page: filter,\n        alias: filter,\n        track: filter,\n        identify: filter,\n        group: filter,\n    };\n}\n//# sourceMappingURL=index.js.map"],"names":["isPlanEventEnabled","plan","planEvent","_a","_b","enabled","__default","schemaFilter","track","settings","filter","ctx","ev","event","updateEvent","__assign","integrations","All","disabledActions","Object","keys","disabledIntegrations","i","disabledRemotePlugins","remotePlugins","forEach","p","int","name","includes","push","reduce","acc","sub","concat","partnerAction","disabledActionDestinations","version","isLoaded","load","Promise","resolve","type","page","alias","identify","group"],"sourceRoot":""}