{"version":3,"file":"8013.d6d39c9ef36fd739c58e.js","mappings":"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BACAmH,sBAvOcx5C,EAx3CuBy7C,EACzCtwC,UACAuwC,+BACApoC,gCACAC,gCACAmM,QACA7K,YACA88B,aACAD,iBACAiK,aACAvW,YACAwW,kBACAC,cACA9J,iBACAyG,YACAsD,gBACAC,yBACAjK,yBACA0I,kBACAG,mBACAqB,gBACA1mC,SACAi+B,mBACA3nB,UACA6nB,iBACAE,gBACAC,aACAG,eACAM,mBACAC,gBACAG,sBACAE,6BACAC,oBACAM,cACAL,kBACAM,eACApQ,kBACA/U,kBACA+mB,qBACAmE,qBACA/lC,eACAukC,mBACArE,aACAG,kBACAK,gBACAC,sBACAJ,oBACAK,wBACAJ,uBACAtC,gBACAd,kBACAqH,iBACAjH,uBACAE,aACAE,WACA9rB,YACAivB,aACAI,iBACAC,uBACAgC,sBACAuC,iBACA9zB,kBACA+G,cACA8rB,mBACAjI,YACAwF,mBACA+C,sBACAE,mBACA1pB,2BACAkhB,mBACAkI,gBACAzU,YACApwB,iBACAojB,oBACA0hB,oBACAC,sBACAxkC,yBACAyvB,qBACAoS,qBACA2E,wBACApI,qBACA8D,gBACAH,gBACAK,oBACAM,0BACAyC,4BACA7C,gCACAE,oCACA+C,uBACA5H,gBACAh+B,eACAmS,yBACA/R,sBACAkjC,gBACA6C,QACAtC,sBACAC,kBACA/mB,UACA4Y,QACAsO,gBACA3jC,yBACAwmC,4BACAtW,oBACAyM,kBACAmH,uBAEA,MAAM,uBACJtrB,GAAsB,qBACtBqK,GAAoB,uBACpB4jB,GAAsB,sBACtBC,GAAqB,iBACrBC,GAAgB,iBAChBC,KACEx7C,EAAAA,EAAAA,MAEEwT,IAAM3B,EAAAA,EAAAA,MACN4pC,IAAkB5pC,EAAAA,EAAAA,MAClB0U,IAAmB1U,EAAAA,EAAAA,MAEnB5R,IAAOC,EAAAA,EAAAA,MAENw7C,GAAuBC,KAA0BpwC,EAAAA,EAAAA,KAAS,IAC1DqwC,GAAwBC,KAA6BtwC,EAAAA,EAAAA,KAAS,IAC9DuwC,GAA0BC,KAA+BxwC,EAAAA,EAAAA,KAAS,IAClE+hC,GAAkB0O,GAAeC,KAAc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,KAAyBm/B,EAAAA,EAAAA,KAA+B7oF,GACxEyU,uBAAuBC,EAAAA,EAAAA,KAA4B1U,GACnDylH,qBAAsBnzE,GAAkBF,IAAmBkuE,IAAkB+B,GAC7E5K,yBACAwK,oBACAyD,YAAa1lH,EAAOm0E,QAAQuxC,YAC5BtD,gBACAuD,mBAAoB3lH,EAAO4lH,aAAaC,aACxCD,aAAc5lH,EAAO4lH,aAAa94G,KAClCw1G,uBACA3D,aACAG,gBAAgBttE,EAAAA,EAAAA,KAAexxC,GAAQ8+G,eACvCgH,wBAAyBx6B,GAAcw6B,wBACvC5zF,UACA0wF,mBACAH,uBACAC,iBACAv0E,oBACA00E,oBACA/K,oBACAlnD,+BACA2xD,mBACAwD,kCAAmCxE,EAASwE,kCAC5Cp1D,gBACAsyD,2BACA+C,yBAA0B16B,GAAc06B,yBACxCC,gBAAiB36B,GAAc26B,gBAC/B1sE,mBACA4pE,qBACAC,0BACA8C,eAAgBptE,GAAWotE,kBA/KbnmH,EAr+DwBomH,EAC1Cl9G,OACAq6G,gBACA8C,gBACA/D,oBACAmB,yBACA9kD,UACAtoD,WACAkrE,iBACApgF,UACAywC,YACAjB,WACA+wE,sBACA7vE,mBACA8yB,SACAxkE,QACA8yC,gBACAovE,gBACAV,2BACAh4D,wBACAi4D,yBACArB,iBACAhuE,kBACAM,aACAsyE,iBACA5uB,sBACAotB,sBACA4B,wBACAU,4BACA5yE,gBACA0oE,0BACAiI,aACAjD,wBACA+C,0BACAwC,oBACA1C,uBACAK,oBACAE,uBACAn4G,mBACAC,iBACAg1G,eACAqE,gBACAhB,wBACA3D,yBACAC,4BACAxlD,qBACAC,iBACAkpD,gBACAC,cACAE,sBACAC,eACAxD,cACAD,YACAa,gBACAX,kBACAE,uBACAwD,iBACAtN,cACAyN,sBACAnG,sBACAxpG,SACAwsG,YACAjB,+BACA0F,4BACAC,mBACAr0G,WACAzS,aACAy6C,sBACAmpE,gBACAmC,iBACA/wG,yBACAgjG,0BACAwK,qBACAyD,eACAD,uBACAE,sBACAC,gBACAtD,uBACAxD,kBACAH,aACAmH,2BACAhO,qBA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","sources":["webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.tsx","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.module.scss?8703","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getSingularPaidMedia.ts","webpack://telegram-t/./src/components/middle/message/helpers/calculateAlbumLayout.ts","webpack://telegram-t/./src/util/languageDetection.ts","webpack://telegram-t/./src/components/middle/message/hooks/useDetectChatLanguage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOuterHandlers.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStory.tsx","webpack://telegram-t/./src/components/common/TopicChip.tsx","webpack://telegram-t/./src/components/common/TopicChip.module.scss?5208","webpack://telegram-t/./src/components/middle/message/hocs/withSelectControl.tsx","webpack://telegram-t/./src/components/middle/message/Album.tsx","webpack://telegram-t/./src/components/common/hooks/useAnimatedEmoji.ts","webpack://telegram-t/./src/components/middle/message/AnimatedCustomEmoji.tsx","webpack://telegram-t/./src/components/middle/message/AnimatedEmoji.tsx","webpack://telegram-t/./src/components/middle/message/CommentButton.tsx","webpack://telegram-t/./src/components/middle/message/Contact.module.scss?fec1","webpack://telegram-t/./src/components/middle/message/Contact.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/FactCheck.module.scss?3842","webpack://telegram-t/./src/components/middle/message/FactCheck.tsx","webpack://telegram-t/./src/components/middle/message/Game.tsx","webpack://telegram-t/./src/components/middle/message/Giveaway.module.scss?9b0c","webpack://telegram-t/./src/components/middle/message/Giveaway.tsx","webpack://telegram-t/./src/components/middle/message/InlineButtons.tsx","webpack://telegram-t/./src/components/middle/message/Invoice.tsx","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.module.scss?19f6","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.tsx","webpack://telegram-t/./src/components/middle/message/Location.tsx","webpack://telegram-t/./src/components/middle/message/MessageMeta.tsx","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.module.scss?15a3","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.tsx","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.module.scss?e3d6","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.tsx","webpack://telegram-t/./src/components/middle/message/PollOption.tsx","webpack://telegram-t/./src/components/middle/message/Poll.tsx","webpack://telegram-t/./src/components/middle/message/Sticker.module.scss?30d0","webpack://telegram-t/./src/components/middle/message/Sticker.tsx","webpack://telegram-t/./src/components/middle/message/Story.tsx","webpack://telegram-t/./src/components/middle/message/StoryMention.tsx","webpack://telegram-t/./src/components/middle/message/Message.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useInnerHandlers.ts","webpack://telegram-t/./src/hooks/useTextLanguage.ts","webpack://telegram-t/./src/components/middle/message/helpers/buildContentClassName.ts","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/hooks/usePaidMessageConfirmation.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/FrozenAccountNotification.tsx","webpack://telegram-t/./src/components/left/main/FrozenAccountNotification.module.scss?c59a","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.tsx","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.module.scss?1d52","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/hooks/useHeaderPane.tsx","webpack://telegram-t/./src/components/middle/message/MessageAppendix.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/hooks/schedulers/useIntervalForceUpdate.ts","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/global/selectors/limits.ts","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/hooks/useMarkScrolled/useMarkScrolled.ts","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenuContainer.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/progressiveLoader.ts","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: ElementRef<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        const emoji = IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1];\n        if (emoji) {\n          loadCustomEmojiForEmoji({\n            emoji,\n          });\n        }\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\nexport type ApiUpdate = { type: string } & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: AnyToVoidFunction;\n  reject: AnyToVoidFunction;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise = new Promise<any>((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiPeer, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getMainUsername } from '../../../../global/helpers';\nimport { filterPeersByQuery, getPeerTitle } from '../../../../global/helpers/peers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: ElementRef<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const lang = useLang();\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterPeersByQuery({\n      ids: unique([\n        ...((getWithInlineBots() && topInlineBotIds) || []),\n        ...(memberIds || []),\n      ]),\n      query: filter,\n      type: 'user',\n    });\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((\n    peer: ApiPeer,\n    forceFocus = false,\n    insertAtEnd = false,\n  ) => {\n    if (!peer.hasUsername && !getPeerTitle(lang, peer)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(peer);\n    const userFirstOrLastName = getPeerTitle(lang, peer) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${peer.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = insertAtEnd ? fixedHtmlBeforeSelection.length\n      : fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n}: {\n  anchorRef: ElementRef<HTMLDivElement>;\n  overlayRef: ElementRef<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiStarGiftUnique } from '../../../api/types';\n\nimport { getGiftAttributes } from '../../common/helpers/gifts';\n\nimport { type ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport StickerView from '../../common/StickerView';\n\nimport styles from './WebPageUniqueGift.module.scss';\n\ntype OwnProps = {\n  gift: ApiStarGiftUnique;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst WebPageUniqueGift = ({\n  gift,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}: OwnProps) => {\n  const stickerRef = useRef<HTMLDivElement>();\n  const {\n    backdrop, model, pattern,\n  } = getGiftAttributes(gift)!;\n\n  const backgroundColors = [backdrop!.centerColor, backdrop!.edgeColor];\n\n  return (\n    <div\n      className={styles.root}\n      onClick={onClick}\n    >\n      <div className={styles.backgroundWrapper}>\n        <RadialPatternBackground\n          className={styles.background}\n          backgroundColors={backgroundColors}\n          patternColor={backdrop!.patternColor}\n          patternIcon={pattern!.sticker}\n        />\n      </div>\n      <div ref={stickerRef} className={styles.stickerWrapper}>\n        <StickerView\n          containerRef={stickerRef}\n          sticker={model!.sticker}\n          size={STAR_GIFT_STICKER_SIZE}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n          observeIntersectionForLoading={observeIntersectionForLoading}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WebPageUniqueGift);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LaOdPURl\",\"backgroundWrapper\":\"zDnMa37m\",\"background\":\"EdXfeKWY\",\"stickerWrapper\":\"o_DYZEMV\"};","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ThemeKey } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { tryParseDeepLink } from '../../../util/deepLinkParser';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonLangKey } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\nimport WebPageUniqueGift from './WebPageUniqueGift';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst WEBPAGE_GIFT_TYPE = 'telegram_nft';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ThemeKey;\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  lastPlaybackTimestamp?: number;\n  isEditing?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onDocumentClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n};\ntype StateProps = {\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst WebPage: FC<OwnProps & StateProps> = ({\n  message,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  lastPlaybackTimestamp,\n  isEditing,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onMediaClick,\n  onDocumentClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n}) => {\n  const { openUrl, openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  const stickersRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const handleOpenTelegramLink = useLastCallback(() => {\n    if (!webPage) return;\n\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, undefined, !hasCustomColor);\n\n  const linkTimestamp = useMemo(() => {\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage?.url);\n    if (!parsedLink || !('timestamp' in parsedLink)) return undefined;\n    return parsedLink.timestamp;\n  }, [webPage?.url]);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n    mediaSize,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isGift = type === WEBPAGE_GIFT_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n\n  const resultType = stickers?.isEmoji ? 'telegram_emojiset' : type;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonLangKey(resultType) : undefined;\n  const quickButtonTitle = quickButtonLangKey && lang(quickButtonLangKey);\n\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    const { width, height } = calculateMediaDimensions({\n      media: webPage.photo,\n      isOwn: message.isOutgoing,\n      isInWebPage: true,\n      asForwarded,\n      noAvatars,\n      isMobile,\n    });\n    isSquarePhoto = (width === height || mediaSize === 'small') && mediaSize !== 'large';\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    !isEditing && inPreview && 'interactive',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonTitle && 'with-quick-button',\n    isGift && 'with-gift',\n  );\n\n  function renderQuickButton(caption: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        noForcedUpperCase\n        onClick={handleOpenTelegramLink}\n      >\n        {caption}\n      </Button>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={oldLang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName(\n        'WebPage--content',\n        isStory && 'is-story',\n        isGift && 'is-gift',\n      )}\n      >\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {isGift && !inPreview && (\n          <WebPageUniqueGift\n            gift={webPage.gift!}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onClick={handleOpenTelegramLink}\n          />\n        )}\n        {isArticle && (\n          <div\n            className={buildClassName('WebPage-text', !inPreview && 'WebPage-text_interactive')}\n            onClick={!inPreview ? () => openUrl({ url, shouldSkipModal: true }) : undefined}\n          >\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {(!inPreview || isGift) && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && !isGift && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {photo && !isGift && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && video && (\n          <Video\n            video={video}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            lastPlaybackTimestamp={lastPlaybackTimestamp || linkTimestamp}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={onDocumentClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{oldLang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonTitle && renderQuickButton(quickButtonTitle)}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(WebPage));\n","import type { RegularLangKey } from '../../../../types/language';\n\n// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonLangKey(type?: string): RegularLangKey | undefined {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'ViewButtonRequestJoin';\n    case 'telegram_message':\n      return 'ViewButtonMessage';\n    case 'telegram_bot':\n      return 'ViewButtonBot';\n    case 'telegram_voicechat':\n      return 'ViewButtonVoiceChat';\n    case 'telegram_livestream':\n      return 'ViewButtonVoiceChatChannel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'ViewButtonGroup';\n    case 'telegram_channel':\n      return 'ViewButtonChannel';\n    case 'telegram_user':\n      return 'ViewButtonUser';\n    case 'telegram_botapp':\n      return 'ViewButtonBotApp';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'ViewButtonStory';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'ViewButtonBoost';\n    case 'telegram_stickerset':\n      return 'ViewButtonStickerset';\n    case 'telegram_emojiset':\n      return 'ViewButtonEmojiset';\n    case 'telegram_nft':\n      return 'ViewButtonGiftUnique';\n    default:\n      return undefined;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID, SVG_NAMESPACE } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport jsxToHtml from '../../../util/element/jsxToHtml';\nimport generateUniqueId from '../../../util/generateUniqueId';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const component = (\n    <svg\n      className={styles.ghost}\n      width={width}\n      height={height}\n      style={`left: ${x}px; top: ${y}px;`}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <defs>\n        {createFilter(filterId, Math.min(width, height), seed)}\n      </defs>\n      <g filter={`url(#${filterId})`}>\n        <foreignObject className={styles.elementContainer} width={width} height={height} />\n      </g>\n    </svg>\n  );\n\n  const svg = jsxToHtml(component)[0] as HTMLElement;\n  const foreignObject = svg.querySelector('foreignObject')!;\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(id: string, smallestSide: number, baseSeed: number = 42) {\n  return (\n    <filter\n      xmlns={SVG_NAMESPACE}\n      id={id}\n      x=\"-150%\"\n      y=\"-150%\"\n      width=\"400%\"\n      height=\"400%\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.5\" numOctaves=\"1\" result=\"dustNoise\" seed={baseSeed} />\n      <feComponentTransfer in=\"dustNoise\" result=\"dustNoiseMask\">\n        <feFuncA type=\"linear\" slope=\"5\" intercept=\"0\">\n          <animate attributeName=\"slope\" values=\"5; 2; 1; 0\" dur={`${DURATION}ms`} fill=\"freeze\" />\n        </feFuncA>\n      </feComponentTransfer>\n      <feComposite in=\"SourceGraphic\" in2=\"dustNoiseMask\" operator=\"in\" result=\"dustySource\" />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"0.015\"\n        numOctaves=\"1\"\n        result=\"displacementNoise1\"\n        seed={baseSeed + 1}\n      />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"1\"\n        numOctaves=\"2\"\n        result=\"displacementNoise2\"\n        seed={baseSeed + 2}\n      />\n      <feMerge result=\"combinedNoise\">\n        <feMergeNode in=\"displacementNoise1\" />\n        <feMergeNode in=\"displacementNoise2\" />\n      </feMerge>\n      <feDisplacementMap in=\"dustySource\" in2=\"combinedNoise\" scale=\"0\" xChannelSelector=\"R\" yChannelSelector=\"G\">\n        <animate attributeName=\"scale\" values={`0; ${smallestSide * 3}`} dur={`${DURATION}ms`} fill=\"freeze\" />\n      </feDisplacementMap>\n    </filter>\n  );\n}\n","import type { ApiPaidMedia } from '../../../../api/types';\n\nexport default function getSingularPaidMedia(media?: ApiPaidMedia) {\n  if (!media || media.extendedMedia.length !== 1) {\n    return {\n      photo: undefined,\n      video: undefined,\n    };\n  }\n\n  const singularMedia = media.extendedMedia[0];\n  const isPreview = 'mediaType' in singularMedia;\n  const photo = isPreview ? (!singularMedia.duration ? singularMedia : undefined) : singularMedia.photo;\n  const video = isPreview ? (singularMedia.duration ? singularMedia : undefined) : singularMedia.video;\n\n  return { photo, video };\n}\n","// Based on\n// https://github.com/telegramdesktop/tdesktop/blob/dev/Telegram/SourceFiles/ui/grouped_layout.cpp\n// https://github.com/overtake/TelegramSwift/blob/master/Telegram-Mac/GroupedLayout.swift#L83\n\nimport type { ApiDimensions, ApiMessage } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { getMessageContent } from '../../../../global/helpers';\nimport { clamp } from '../../../../util/math';\nimport { getAvailableWidth } from '../../../common/helpers/mediaDimensions';\nimport { calculateMediaDimensions } from './mediaDimensions';\n\nexport const AlbumRectPart = {\n  None: 0,\n  Top: 1,\n  Right: 2,\n  Bottom: 4,\n  Left: 8,\n};\n\ntype IAttempt = {\n  lineCounts: number[];\n  heights: number[];\n};\nexport type IMediaDimensions = {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n};\ntype IMediaLayout = {\n  dimensions: IMediaDimensions;\n  sides: number;\n};\ntype ILayoutParams = {\n  ratios: number[];\n  proportions: string;\n  averageRatio: number;\n  maxWidth: number;\n  minWidth: number;\n  maxHeight: number;\n  spacing: number;\n};\nexport type IAlbumLayout = {\n  layout: IMediaLayout[];\n  containerStyle: ApiDimensions;\n};\n\nfunction getRatios(messages: ApiMessage[], isSingleMessage?: boolean, isMobile?: boolean) {\n  const isOutgoing = messages[0].isOutgoing;\n  const allMedia = (isSingleMessage\n    ? messages[0].content.paidMedia!.extendedMedia.map((media) => (\n      'mediaType' in media ? media : (media.photo || media.video)\n    ))\n    : messages.map((message) => (\n      getMessageContent(message).photo || getMessageContent(message).video\n    ))\n  ).filter(Boolean);\n  return allMedia.map(\n    (media) => {\n      const dimensions = calculateMediaDimensions({\n        media,\n        isOwn: isOutgoing,\n        isMobile,\n      }) as ApiDimensions;\n\n      return dimensions.width / dimensions.height;\n    },\n  );\n}\n\nfunction getProportions(ratios: number[]) {\n  return ratios.map((ratio) => (ratio > 1.2 ? 'w' : (ratio < 0.8 ? 'n' : 'q'))).join('');\n}\n\nfunction getAverageRatio(ratios: number[]) {\n  return ratios.reduce((result, ratio) => ratio + result, 1) / ratios.length;\n}\n\nfunction accumulate(list: number[], initValue: number) {\n  return list.reduce((accumulator, item) => accumulator + item, initValue);\n}\n\nfunction cropRatios(ratios: number[], averageRatio: number) {\n  return ratios.map((ratio) => {\n    return (averageRatio > 1.1 ? clamp(ratio, 1, 2.75) : clamp(ratio, 0.6667, 1));\n  });\n}\n\nfunction calculateContainerSize(layout: IMediaLayout[]) {\n  const styles: ApiDimensions = { width: 0, height: 0 };\n  layout.forEach(({\n    dimensions,\n    sides,\n  }) => {\n    if (sides & AlbumRectPart.Right) {\n      styles.width = dimensions.width + dimensions.x;\n    }\n    if (sides & AlbumRectPart.Bottom) {\n      styles.height = dimensions.height + dimensions.y;\n    }\n  });\n\n  return styles;\n}\n\nexport function calculateAlbumLayout(\n  isOwn: boolean,\n  noAvatars: boolean,\n  album: IAlbum,\n  isMobile?: boolean,\n): IAlbumLayout {\n  const spacing = 2;\n  const ratios = getRatios(album.messages, album.isPaidMedia, isMobile);\n  const proportions = getProportions(ratios);\n  const averageRatio = getAverageRatio(ratios);\n  const albumCount = ratios.length;\n  const forceCalc = ratios.some((ratio) => ratio > 2);\n  const maxWidth = getAvailableWidth(isOwn, false, noAvatars, isMobile);\n  const maxHeight = maxWidth;\n\n  let layout;\n\n  const params = {\n    ratios,\n    proportions,\n    averageRatio,\n    maxWidth,\n    minWidth: 100,\n    maxHeight,\n    spacing,\n  };\n\n  if (albumCount >= 5 || forceCalc) {\n    layout = layoutWithComplexLayouter(params);\n  } else if (albumCount === 2) {\n    layout = layoutTwo(params);\n  } else if (albumCount === 3) {\n    layout = layoutThree(params);\n  } else {\n    layout = layoutFour(params);\n  }\n\n  return {\n    layout,\n    containerStyle: calculateContainerSize(layout),\n  };\n}\n\nfunction layoutWithComplexLayouter({\n  ratios: originalRatios,\n  averageRatio,\n  maxWidth,\n  minWidth,\n  spacing,\n  maxHeight = (4 * maxWidth) / 3,\n}: ILayoutParams) {\n  const ratios = cropRatios(originalRatios, averageRatio);\n  const count = originalRatios.length;\n  const result = new Array(count);\n  const attempts: IAttempt[] = [];\n\n  const multiHeight = (offset: number, attemptCount: number) => {\n    const attemptRatios = ratios.slice(offset, offset + attemptCount);\n    const sum = accumulate(attemptRatios, 0);\n\n    return (maxWidth - (attemptCount - 1) * spacing) / sum;\n  };\n\n  const pushAttempt = (lineCounts: number[]) => {\n    const heights: number[] = [];\n    let offset = 0;\n    lineCounts.forEach((currentCount) => {\n      heights.push(multiHeight(offset, currentCount));\n      offset += currentCount;\n    });\n\n    attempts.push({\n      lineCounts,\n      heights,\n    });\n  };\n\n  for (let first = 1; first !== count; ++first) {\n    const second = count - first;\n    if (first <= 3 && second <= 3) {\n      pushAttempt([first, second]);\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      const third = count - first - second;\n      if (first <= 3 && second <= (averageRatio < 0.85 ? 4 : 3) && third <= 3) {\n        pushAttempt([first, second, third]);\n      }\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      for (let third = 1; third !== count - first - second; ++third) {\n        const fourth = count - first - second - third;\n        if (first <= 3 && second <= 3 && third <= 3 && fourth <= 4) {\n          pushAttempt([first, second, third, fourth]);\n        }\n      }\n    }\n  }\n\n  let optimalAttempt: IAttempt | undefined;\n  let optimalDiff = 0;\n  for (let i = 0; i < attempts.length; i++) {\n    const {\n      heights,\n      lineCounts,\n    } = attempts[i];\n    const lineCount = lineCounts.length;\n    const totalHeight = accumulate(heights, 0) + spacing * (lineCount - 1);\n    const minLineHeight = Math.min(...heights);\n    const bad1 = minLineHeight < minWidth ? 1.5 : 1;\n    const bad2 = (() => {\n      for (let line = 1; line !== lineCount; ++line) {\n        if (lineCounts[line - 1] > lineCounts[line]) {\n          return 1.5;\n        }\n      }\n\n      return 1;\n    })();\n    const diff = Math.abs(totalHeight - maxHeight) * bad1 * bad2;\n\n    if (!optimalAttempt || diff < optimalDiff) {\n      optimalAttempt = attempts[i];\n      optimalDiff = diff;\n    }\n  }\n\n  const optimalCounts = optimalAttempt!.lineCounts;\n  const optimalHeights = optimalAttempt!.heights;\n  const rowCount = optimalCounts.length;\n  let index = 0;\n  let y = 0;\n  for (let row = 0; row !== rowCount; ++row) {\n    const colCount = optimalCounts[row];\n    const lineHeight = optimalHeights[row];\n    const height = Math.round(lineHeight);\n    let x = 0;\n\n    for (let col = 0; col !== colCount; ++col) {\n      const sides = AlbumRectPart.None\n        | (row === 0 ? AlbumRectPart.Top : AlbumRectPart.None)\n        | (row === rowCount - 1 ? AlbumRectPart.Bottom : AlbumRectPart.None)\n        | (col === 0 ? AlbumRectPart.Left : AlbumRectPart.None)\n        | (col === colCount - 1 ? AlbumRectPart.Right : AlbumRectPart.None);\n      const ratio = ratios[index];\n      const width = col === colCount - 1 ? maxWidth - x : Math.round(ratio * lineHeight);\n      result[index] = {\n        dimensions: {\n          x,\n          y,\n          width,\n          height,\n        },\n        sides,\n      };\n      x += width + spacing;\n      ++index;\n    }\n    y += height + spacing;\n  }\n\n  return result;\n}\n\nfunction layoutTwo(params: ILayoutParams) {\n  const {\n    ratios,\n    proportions,\n    averageRatio,\n  } = params;\n  return proportions === 'ww' && averageRatio > 1.4 && ratios[1] - ratios[0] < 0.2\n    ? layoutTwoTopBottom(params)\n    : proportions === 'ww' || proportions === 'qq'\n      ? layoutTwoLeftRightEqual(params)\n      : layoutTwoLeftRight(params);\n}\n\nfunction layoutTwoTopBottom(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const height = Math.round(Math.min(maxWidth / ratios[0], Math.min(maxWidth / ratios[1], (maxHeight - spacing) / 2)));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: height + spacing,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutTwoLeftRightEqual(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const width = (maxWidth - spacing) / 2;\n  const height = Math.round(Math.min(width / ratios[0], Math.min(width / ratios[1], maxHeight)));\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: width + spacing,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutTwoLeftRight(params: ILayoutParams) {\n  const {\n    ratios,\n    minWidth,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const minimalWidth = Math.round(1.5 * minWidth);\n  const secondWidth = Math.min(\n    Math.round(\n      Math.max(\n        0.4 * (maxWidth - spacing),\n        (maxWidth - spacing) / ratios[0] / (1 / ratios[0] + 1 / ratios[1]),\n      ),\n    ),\n    maxWidth - spacing - minimalWidth,\n  );\n  const firstWidth = maxWidth - secondWidth - spacing;\n  const height = Math.min(maxHeight, Math.round(Math.min(firstWidth / ratios[0], secondWidth / ratios[1])));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: firstWidth + spacing,\n      y: 0,\n      width: secondWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutThree(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'n'\n    ? layoutThreeLeftAndOther(params)\n    : layoutThreeTopAndOther(params);\n}\n\nfunction layoutThreeLeftAndOther(params: ILayoutParams) {\n  const {\n    maxHeight,\n    spacing,\n    ratios,\n    maxWidth,\n    minWidth,\n  } = params;\n  const firstHeight = maxHeight;\n  const thirdHeight = Math.round(\n    Math.min(\n      (maxHeight - spacing) / 2,\n      (ratios[1] * (maxWidth - spacing)) / (ratios[2] + ratios[1]),\n    ),\n  );\n  const secondHeight = firstHeight - thirdHeight - spacing;\n  const rightWidth = Math.max(\n    minWidth,\n    Math.round(\n      Math.min(\n        (maxWidth - spacing) / 2,\n        Math.min(\n          thirdHeight * ratios[2],\n          secondHeight * ratios[1],\n        ),\n      ),\n    ),\n  );\n  const leftWidth = Math.min(Math.round(firstHeight * ratios[0]), maxWidth - spacing - rightWidth);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: leftWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: 0,\n      width: rightWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: secondHeight + spacing,\n      width: rightWidth,\n      height: thirdHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutThreeTopAndOther(params: ILayoutParams) {\n  const {\n    maxWidth,\n    ratios,\n    maxHeight,\n    spacing,\n  } = params;\n  const firstWidth = maxWidth;\n  const firstHeight = Math.round(Math.min(firstWidth / ratios[0], 0.66 * (maxHeight - spacing)));\n  const secondWidth = (maxWidth - spacing) / 2;\n  const secondHeight = Math.min(\n    maxHeight - firstHeight - spacing,\n    Math.round(Math.min(\n      secondWidth / ratios[1],\n      secondWidth / ratios[2],\n    )),\n  );\n  const thirdWidth = firstWidth - secondWidth - spacing;\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: firstHeight + spacing,\n      width: secondWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: secondWidth + spacing,\n      y: firstHeight + spacing,\n      width: thirdWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutFour(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'w'\n    ? layoutFourTopAndOther(params)\n    : layoutFourLeftAndOther(params);\n}\n\nfunction layoutFourTopAndOther({\n  maxWidth,\n  ratios,\n  spacing,\n  maxHeight,\n  minWidth,\n}: ILayoutParams) {\n  const w = maxWidth;\n  const h0 = Math.round(Math.min(w / ratios[0], 0.66 * (maxHeight - spacing)));\n  const h = Math.round((maxWidth - 2 * spacing) / (ratios[1] + ratios[2] + ratios[3]));\n  const w0 = Math.max(minWidth, Math.round(Math.min(0.4 * (maxWidth - 2 * spacing), h * ratios[1])));\n  const w2 = Math.round(Math.max(Math.max(minWidth, 0.33 * (maxWidth - 2 * spacing)), h * ratios[3]));\n  const w1 = w - w0 - w2 - 2 * spacing;\n  const h1 = Math.min(maxHeight - h0 - spacing, h);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w,\n      height: h0,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: h0 + spacing,\n      width: w0,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing + w1 + spacing,\n      y: h0 + spacing,\n      width: w2,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutFourLeftAndOther({\n  maxHeight,\n  ratios,\n  maxWidth,\n  spacing,\n  minWidth,\n}: ILayoutParams) {\n  const h = maxHeight;\n  const w0 = Math.round(Math.min(h * ratios[0], 0.6 * (maxWidth - spacing)));\n  const w = Math.round((maxHeight - 2 * spacing) / (1 / ratios[1] + 1 / ratios[2] + 1 / ratios[3]));\n  const h0 = Math.round(w / ratios[1]);\n  const h1 = Math.round(w / ratios[2]);\n  const h2 = h - h0 - h1 - 2 * spacing;\n  const w1 = Math.max(minWidth, Math.min(maxWidth - w0 - spacing, w));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w0,\n      height: h,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: 0,\n      width: w1,\n      height: h0,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + h1 + 2 * spacing,\n      width: w1,\n      height: h2,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n","import type { FastTextApi } from '../lib/fasttextweb/fasttext.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TRANSLATION_SUPPORTED } from './browser/windowEnvironment';\n\nimport Deferred from './Deferred';\nimport { createConnector } from './PostMessageConnector';\n\nconst WORKER_INIT_DELAY = 4000;\n\nconst DEFAULT_THRESHOLD = 0.2;\nconst DEFAULT_LABELS_COUNT = 5;\n\nlet worker: Connector<FastTextApi> | undefined;\nconst initializationDeferred = new Deferred();\n\nif (IS_TRANSLATION_SUPPORTED) {\n  setTimeout(initWorker, WORKER_INIT_DELAY);\n}\n\nfunction initWorker() {\n  if (!worker) {\n    worker = createConnector<FastTextApi>(\n      new Worker(new URL('../lib/fasttextweb/fasttext.worker.ts', import.meta.url)),\n    );\n    initializationDeferred.resolve();\n  }\n}\n\nexport async function detectLanguage(text: string, threshold = DEFAULT_THRESHOLD) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguage', args: [text, threshold] });\n  return result;\n}\n\nexport async function detectLanguageProbability(\n  text: string, labelsCount = DEFAULT_LABELS_COUNT, threshold = DEFAULT_THRESHOLD,\n) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguageProbability', args: [text, labelsCount, threshold] });\n  return result;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport LimitedMap from '../../../../util/primitives/LimitedMap';\nimport { throttle } from '../../../../util/schedulers';\n\n// https://github.com/DrKLO/Telegram/blob/dfd74f809e97d1ecad9672fc7388cb0223a95dfc/TMessagesProj/src/main/java/org/telegram/messenger/TranslateController.java#L35\nconst MIN_MESSAGES_CHECKED = 8;\nconst MIN_TRANSLATABLE_RATIO = 0.3;\nconst MIN_DETECTABLE_RATIO = 0.6;\n\nconst THROTTLE_DELAY = 1000;\nconst MESSAGES_LIMIT = 150;\n\ntype MessageMetadata = {\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage: string | undefined;\n};\n\nconst CHAT_STATS = new Map<string, LimitedMap<number, MessageMetadata>>();\n\nexport default function useDetectChatLanguage(\n  message: ApiMessage, detectedLanguage?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>,\n) {\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    const isTranslatable = Boolean(message.content.text?.text.length);\n    processMessageMetadata({\n      chatId: message.chatId,\n      id: message.id,\n      isTranslatable,\n      detectedLanguage,\n    });\n  }, [message, detectedLanguage, isDisabled, getIsReady]);\n}\n\nconst throttledMakeChatDecision = throttle(makeChatDecision, THROTTLE_DELAY);\n\nfunction processMessageMetadata({\n  chatId, id, isTranslatable, detectedLanguage,\n}: {\n  chatId: string;\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage?: string;\n}) {\n  const chatStats = CHAT_STATS.get(chatId) || new LimitedMap<number, MessageMetadata>(MESSAGES_LIMIT);\n\n  const previousMetadata = chatStats.get(id);\n  if (previousMetadata && previousMetadata.detectedLanguage === detectedLanguage\n    && previousMetadata.isTranslatable === isTranslatable\n  ) {\n    return;\n  }\n\n  chatStats.set(id, {\n    id,\n    isTranslatable,\n    detectedLanguage,\n  });\n\n  CHAT_STATS.set(chatId, chatStats);\n\n  throttledMakeChatDecision(chatId);\n}\n\nfunction makeChatDecision(chatId: string) {\n  const { updateChatDetectedLanguage } = getActions();\n  const chatStats = CHAT_STATS.get(chatId);\n  if (!chatStats) {\n    return;\n  }\n\n  const messagesChecked = chatStats.size;\n  if (messagesChecked < MIN_MESSAGES_CHECKED) {\n    return;\n  }\n\n  let translatableCount = 0;\n  let detectableCount = 0;\n  const languageOccurrences = new Map<string, number>();\n\n  for (const metadata of chatStats.values()) {\n    if (metadata.isTranslatable) {\n      translatableCount++;\n    }\n\n    if (metadata.detectedLanguage) {\n      detectableCount++;\n    }\n\n    const language = metadata.detectedLanguage;\n    if (language) {\n      const occurrences = languageOccurrences.get(language) || 0;\n      languageOccurrences.set(language, occurrences + 1);\n    }\n  }\n\n  const translatableRatio = translatableCount / messagesChecked;\n  const detectableRatio = detectableCount / translatableCount;\n\n  if (translatableRatio < MIN_TRANSLATABLE_RATIO || detectableRatio < MIN_DETECTABLE_RATIO) {\n    return;\n  }\n\n  const mostFrequentLanguage = Array.from(languageOccurrences.entries())\n    .sort(([, a], [, b]) => b - a)[0][0];\n\n  updateChatDetectedLanguage({\n    chatId,\n    detectedLanguage: mostFrequentLanguage,\n  });\n}\n","import type React from '../../../../lib/teact/teact';\nimport type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_ANDROID, IS_TOUCH_ENV } from '../../../../util/browser/windowEnvironment';\nimport { captureEvents, SwipeDirection } from '../../../../util/captureEvents';\nimport stopEvent from '../../../../util/stopEvent';\nimport windowSize from '../../../../util/windowSize';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { preventMessageInputBlur } from '../../helpers/preventMessageInputBlur';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\n\nconst ANDROID_KEYBOARD_HIDE_DELAY_MS = 350;\nconst SWIPE_ANIMATION_DURATION = 150;\nconst QUICK_REACTION_DOUBLE_TAP_DELAY = 200;\nconst QUICK_REACTION_AREA_WIDTH = 3 * REM;\nconst QUICK_REACTION_AREA_HEIGHT = Number(REM);\nconst GROUP_MESSAGE_HOVER_ATTRIBUTE = 'data-is-document-group-hover';\n\nexport default function useOuterHandlers(\n  selectMessage: (e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void,\n  containerRef: ElementRef<HTMLDivElement>,\n  messageId: number,\n  isInSelectMode: boolean,\n  canReply: boolean,\n  isProtected: boolean,\n  onContextMenu: (e: React.MouseEvent) => void,\n  handleBeforeContextMenu: (e: React.MouseEvent) => void,\n  chatId: string,\n  isContextMenuShown: boolean,\n  quickReactionRef: ElementRef<HTMLDivElement>,\n  shouldHandleMouseLeave: boolean,\n  getIsMessageListReady?: Signal<boolean>,\n) {\n  const { updateDraftReplyInfo, sendDefaultReaction } = getActions();\n\n  const [isQuickReactionVisible, markQuickReactionVisible, unmarkQuickReactionVisible] = useFlag();\n  const [isSwiped, markSwiped, unmarkSwiped] = useFlag();\n  const doubleTapTimeoutRef = useRef<NodeJS.Timeout>();\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  }\n\n  const handleMouseMove = useThrottledCallback((e: React.MouseEvent) => {\n    const quickReactionContainer = quickReactionRef.current;\n    if (!quickReactionContainer) return;\n\n    const { clientX, clientY } = e;\n    const {\n      x: quickReactionX, width: quickReactionWidth, y: quickReactionY, height: quickReactionHeight,\n    } = quickReactionContainer.getBoundingClientRect();\n    const x = quickReactionX + quickReactionWidth / 2;\n    const y = quickReactionY + quickReactionHeight / 2;\n\n    const isVisibleX = Math.abs(x - clientX) < QUICK_REACTION_AREA_WIDTH;\n    const isVisibleY = Math.abs(y - clientY) < QUICK_REACTION_AREA_HEIGHT;\n    if (isVisibleX && isVisibleY) {\n      markQuickReactionVisible();\n    } else {\n      unmarkQuickReactionVisible();\n    }\n  }, [quickReactionRef], requestMeasure);\n\n  function handleSendQuickReaction(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleTap(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      const target = e.target as HTMLDivElement;\n      if (!target.classList.contains('text-content') && !target.classList.contains('Message')) {\n        return;\n      }\n\n      if (windowSize.getIsKeyboardVisible()) {\n        setTimeout(() => {\n          onContextMenu(e);\n        }, ANDROID_KEYBOARD_HIDE_DELAY_MS);\n      } else {\n        onContextMenu(e);\n      }\n    }\n  }\n\n  function handleDoubleTap() {\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleClick(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (isInSelectMode) {\n      selectMessage(e);\n      return;\n    }\n\n    if (!IS_TOUCH_ENV) return;\n\n    if (doubleTapTimeoutRef.current) {\n      clearInterval(doubleTapTimeoutRef.current);\n      doubleTapTimeoutRef.current = undefined;\n      handleDoubleTap();\n      return;\n    }\n\n    doubleTapTimeoutRef.current = setTimeout(() => {\n      doubleTapTimeoutRef.current = undefined;\n      handleTap(e);\n    }, QUICK_REACTION_DOUBLE_TAP_DELAY);\n  }\n\n  function handleContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      if ((e.target as HTMLElement).matches('a[href]') || isContextMenuShown) {\n        return;\n      }\n\n      e.preventDefault();\n      selectMessage();\n    } else {\n      onContextMenu(e);\n    }\n  }\n\n  function handleContainerDoubleClick() {\n    if (IS_TOUCH_ENV || !canReply) return;\n\n    updateDraftReplyInfo({\n      replyToMsgId: messageId, replyToPeerId: undefined, quoteText: undefined, quoteOffset: undefined,\n    });\n  }\n\n  function stopPropagation(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n  }\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV || isInSelectMode || !canReply || isContextMenuShown || !getIsMessageListReady?.()) {\n      return undefined;\n    }\n\n    let startedAt: number | undefined;\n    return captureEvents(containerRef.current!, {\n      selectorToPreventScroll: '.MessageList',\n      excludedClosestSelector: '.no-word-wrap',\n      onSwipe: (e, direction) => {\n        if (direction === SwipeDirection.Left) {\n          if (!startedAt) {\n            startedAt = Date.now();\n          }\n\n          markSwiped();\n\n          return true;\n        }\n\n        return false;\n      },\n      onRelease: () => {\n        if (!startedAt || !canReply) {\n          return;\n        }\n\n        updateDraftReplyInfo({ replyToMsgId: messageId });\n\n        setTimeout(unmarkSwiped, Math.max(0, SWIPE_ANIMATION_DURATION - (Date.now() - startedAt)));\n        startedAt = undefined;\n      },\n    });\n  }, [\n    containerRef, isInSelectMode, messageId, markSwiped, unmarkSwiped, canReply, isContextMenuShown,\n    getIsMessageListReady,\n  ]);\n\n  function handleMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n    // Because `mousemove` event is throttled, we need to also throttle `mouseleave` event,\n    // so the order of events is preserved\n    requestMeasure(unmarkQuickReactionVisible);\n    if (shouldHandleMouseLeave) handleDocumentGroupMouseLeave(e);\n  }\n\n  return {\n    handleMouseDown: !isInSelectMode ? handleMouseDown : undefined,\n    handleClick,\n    handleContextMenu: !isInSelectMode ? handleContextMenu : (isProtected ? stopEvent : undefined),\n    handleDoubleClick: !isInSelectMode ? handleContainerDoubleClick : undefined,\n    handleContentDoubleClick: !IS_TOUCH_ENV ? stopPropagation : undefined,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  };\n}\n\nfunction handleDocumentGroupMouseEnter(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.setAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE, '');\n  }\n}\n\nfunction handleDocumentGroupMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.removeAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE);\n  }\n}\n\nfunction getLastElementInDocumentGroup(element: Element) {\n  let current: Element | null = element;\n\n  do {\n    current = current.nextElementSibling;\n  } while (current && !current.classList.contains('last-in-document-group'));\n\n  return current;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport {\n  getStoryMediaHash,\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  story?: ApiTypeStory;\n  sender?: ApiPeer;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\n\nconst EmbeddedStory: FC<OwnProps> = ({\n  story,\n  sender,\n  noUserColors,\n  isProtected,\n  observeIntersectionForLoading,\n  onClick,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const ref = useRef<HTMLDivElement>();\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isFullStory = story && 'content' in story;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const isVideoStory = isFullStory && Boolean(story.content.video);\n  const title = isFullStory ? 'Story' : (isExpiredStory ? 'ExpiredStory' : 'Loading');\n\n  const mediaBlobUrl = useMedia(isFullStory && getStoryMediaHash(story, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = isVideoStory ? story.content.video!.thumbnail?.dataUri : undefined;\n  const pictogramUrl = mediaBlobUrl || mediaThumbnail;\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : undefined;\n  const handleFastClick = useLastCallback(() => {\n    if (story && !isExpiredStory) {\n      onClick();\n    } else {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(handleFastClick);\n\n  return (\n    <PeerColorWrapper\n      ref={ref}\n      peerColor={sender?.color}\n      noUserColors={noUserColors}\n      shouldReset\n      className={buildClassName(\n        'EmbeddedMessage',\n        pictogramUrl && 'with-thumb',\n      )}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {pictogramUrl && renderPictogram(pictogramUrl, isProtected)}\n      <div className=\"message-text with-message-color\">\n        <p className=\"embedded-text-wrapper\">\n          {isExpiredStory && (\n            <Icon name=\"story-expired\" className=\"embedded-origin-icon\" />\n          )}\n          {isFullStory && (\n            <Icon name=\"story-reply\" className=\"embedded-origin-icon\" />\n          )}\n          {lang(title)}\n        </p>\n        <div className=\"message-title\">{renderText(senderTitle || NBSP)}</div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  srcUrl: string,\n  isProtected?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  return (\n    <div className=\"embedded-thumb\">\n      <img\n        src={srcUrl}\n        width={width}\n        height={height}\n        alt=\"\"\n        className=\"pictogram\"\n        draggable={false}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedStory;\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getTopicColorCssVariable } from '../../util/forumColors';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\n\nimport styles from './TopicChip.module.scss';\n\nimport blankSrc from '../../assets/blank.png';\n\ntype OwnProps = {\n  topic?: ApiTopic;\n  className?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst TOPIC_ICON_SIZE = 1.125 * REM;\n\nconst TopicChip: FC<OwnProps> = ({\n  topic,\n  className,\n  onClick,\n}) => {\n  const lang = useOldLang();\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={`--topic-button-accent-color: var(${getTopicColorCssVariable(topic?.iconColor)})`}\n      onClick={onClick}\n    >\n      {topic\n        ? <TopicIcon topic={topic} size={TOPIC_ICON_SIZE} />\n        : <img src={blankSrc} alt=\"\" draggable={false} />}\n      {topic?.title ? renderText(topic.title) : lang('Loading')}\n      {topic?.isClosed && <Icon name=\"lock\" />}\n      <Icon name=\"next\" />\n    </div>\n  );\n};\n\nexport default memo(TopicChip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"JldIqqof\"};","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { OwnProps as PhotoProps } from '../Photo';\nimport type { OwnProps as VideoProps } from '../Video';\n\nimport {\n  selectIsInSelectMode,\n  selectIsMessageSelected,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Icon from '../../../common/icons/Icon';\n\ntype OwnProps<T> =\n  (PhotoProps<T> | VideoProps<T>) & {\n    clickArg: number;\n    noSelectControls?: boolean;\n  };\n\ntype StateProps = {\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n};\n\nexport default function withSelectControl(WrappedComponent: FC) {\n  const ComponentWithSelectControl = <T,>(props: OwnProps<T> & StateProps) => {\n    const {\n      isInSelectMode,\n      isSelected,\n      dimensions,\n      clickArg,\n    } = props;\n    const { toggleMessageSelection } = getActions();\n\n    const handleMessageSelect = useLastCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n      e.stopPropagation();\n      toggleMessageSelection({ messageId: clickArg, withShift: e?.shiftKey });\n    });\n\n    const newProps = useMemo(() => {\n      const { dimensions: dims, onClick } = props;\n      return {\n        ...props,\n        isInSelectMode,\n        isSelected,\n        dimensions: {\n          ...dims,\n          x: 0,\n          y: 0,\n        },\n        onClick: isInSelectMode ? undefined : onClick,\n      };\n    }, [props, isInSelectMode, isSelected]);\n\n    return (\n      <div\n        className={buildClassName('album-item-select-wrapper', isSelected && 'is-selected')}\n        style={dimensions ? `left: ${dimensions.x}px; top: ${dimensions.y}px;` : ''}\n        onClick={isInSelectMode ? handleMessageSelect : undefined}\n      >\n        {isInSelectMode && (\n          <div className=\"message-select-control\">\n            {isSelected && (\n              <Icon name=\"select\" />\n            )}\n          </div>\n        )}\n        {}\n        <WrappedComponent {...newProps} />\n      </div>\n    );\n  };\n\n  return memo(withGlobal<OwnProps<unknown>>(\n    (global, ownProps) => {\n      const { clickArg, noSelectControls } = ownProps;\n      return {\n        isInSelectMode: !noSelectControls && selectIsInSelectMode(global),\n        isSelected: !noSelectControls && selectIsMessageSelected(global, clickArg),\n      };\n    },\n  )(ComponentWithSelectControl)) as typeof ComponentWithSelectControl;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IAlbum, ThemeKey } from '../../../types';\nimport type { IAlbumLayout } from './helpers/calculateAlbumLayout';\n\nimport {\n  getIsDownloading, getMessageContent, getMessageHtmlId, getMessagePhoto,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectTheme,\n} from '../../../global/selectors';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { AlbumRectPart } from './helpers/calculateAlbumLayout';\nimport withSelectControl from './hocs/withSelectControl';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './Album.scss';\n\nconst PhotoWithSelect = withSelectControl(Photo);\nconst VideoWithSelect = withSelectControl(Video);\n\ntype OwnProps = {\n  album: IAlbum;\n  observeIntersection: ObserveFn;\n  hasCustomAppendix?: boolean;\n  isOwn: boolean;\n  isProtected?: boolean;\n  albumLayout: IAlbumLayout;\n  onMediaClick: (messageId: number, index?: number) => void;\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n  uploadsByKey: GlobalState['fileUploads']['byMessageKey'];\n  activeDownloads: TabState['activeDownloads'];\n};\n\nconst Album: FC<OwnProps & StateProps> = ({\n  album,\n  observeIntersection,\n  hasCustomAppendix,\n  isOwn,\n  isProtected,\n  albumLayout,\n  onMediaClick,\n  uploadsByKey,\n  activeDownloads,\n  theme,\n}) => {\n  const { cancelUploadMedia } = getActions();\n\n  const { content: { paidMedia } } = album.mainMessage;\n\n  const mediaCount = album.isPaidMedia ? paidMedia!.extendedMedia.length : album.messages.length;\n\n  const handlePaidMediaClick = useLastCallback((index: number) => {\n    onMediaClick(album.mainMessage.id, index);\n  });\n\n  const handleAlbumMessageClick = useLastCallback((messageId: number) => {\n    onMediaClick(messageId);\n  });\n\n  const handleCancelUpload = useLastCallback((messageId: number) => {\n    cancelUploadMedia({ chatId: album.mainMessage.chatId, messageId });\n  });\n\n  const messages = useMemo(() => {\n    if (album.isPaidMedia) {\n      return album.mainMessage.content.paidMedia!.extendedMedia.map(() => album.mainMessage);\n    }\n\n    return album.messages;\n  }, [album]);\n\n  function renderAlbumMessage(message: ApiMessage, index: number) {\n    const renderingPaidMedia = album.isPaidMedia ? message.content.paidMedia?.extendedMedia[index] : undefined;\n    const paidPhotoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.photo;\n    const paidVideoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.video;\n    const photo = paidPhotoOrPreview || getMessagePhoto(message);\n    const video = paidVideoOrPreview || getMessageContent(message).video;\n\n    const fileUpload = uploadsByKey[getMessageKey(message)];\n    const uploadProgress = fileUpload?.progress;\n    const { dimensions, sides } = albumLayout.layout[index];\n\n    // Ignoring global updates is a known drawback here\n    const canAutoLoad = selectCanAutoLoadMedia(getGlobal(), message);\n    const canAutoPlay = selectCanAutoPlayMedia(getGlobal(), message);\n\n    if (photo) {\n      const shouldAffectAppendix = hasCustomAppendix && (\n\n        (isOwn ? index === mediaCount - 1 : Boolean(sides & AlbumRectPart.Left && sides & AlbumRectPart.Bottom))\n      );\n\n      return (\n        <PhotoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id, album.isPaidMedia ? index : undefined)}`}\n          photo={photo}\n          isOwn={isOwn}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          shouldAffectAppendix={shouldAffectAppendix}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={photo.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, photo)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    } else if (video) {\n      return (\n        <VideoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id)}`}\n          video={video}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          canAutoPlay={canAutoPlay}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={video.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, video)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    }\n\n    return undefined;\n  }\n\n  const { width: containerWidth, height: containerHeight } = albumLayout.containerStyle;\n\n  return (\n    <div\n      className=\"Album\"\n      style={`width: ${containerWidth}px; height: ${containerHeight}px;`}\n    >\n      {messages.map(renderAlbumMessage)}\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const activeDownloads = selectActiveDownloads(global);\n\n    return {\n      theme,\n      uploadsByKey: global.fileUploads.byMessageKey,\n      activeDownloads,\n    };\n  },\n)(Album);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport { IS_ELECTRON } from '../../../util/browser/windowEnvironment';\nimport buildStyle from '../../../util/buildStyle';\nimport safePlay from '../../../util/safePlay';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\n\nconst SIZE = 7 * REM;\nconst INTERACTION_BUNCH_TIME = 1000;\nconst MS_DIVIDER = 1000;\nconst TIME_DEFAULT = 0;\n\nexport default function useAnimatedEmoji(\n  chatId?: string,\n  messageId?: number,\n  soundId?: string,\n  activeEmojiInteractions?: ActiveEmojiInteraction[],\n  isOwn?: boolean,\n  emoji?: string,\n  preferredSize?: number,\n) {\n  const {\n    interactWithAnimatedEmoji, sendEmojiInteraction, sendWatchingEmojiInteraction,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const audioRef = useRef<HTMLAudioElement | undefined>();\n\n  const soundMediaData = useMedia(soundId ? `document${soundId}` : undefined, !soundId);\n\n  const size = preferredSize || SIZE;\n  const style = buildStyle(`width: ${size}px`, `height: ${size}px`, emoji && !IS_ELECTRON && 'cursor: pointer');\n\n  const interactions = useRef<number[] | undefined>(undefined);\n  const startedInteractions = useRef<number | undefined>(undefined);\n  const sendInteractionBunch = useLastCallback(() => {\n    const container = ref.current;\n\n    if (!container) return;\n\n    sendEmojiInteraction({\n      chatId: chatId!,\n      messageId: messageId!,\n      emoji: emoji!,\n      interactions: interactions.current!,\n    });\n    startedInteractions.current = undefined;\n    interactions.current = undefined;\n  });\n\n  const play = useLastCallback(() => {\n    const audio = audioRef.current;\n    if (soundMediaData) {\n      if (audio) {\n        audio.pause();\n        audio.remove();\n      }\n      audioRef.current = new Audio();\n      audioRef.current.src = soundMediaData;\n      safePlay(audioRef.current);\n      audioRef.current.addEventListener('ended', () => {\n        audioRef.current = undefined;\n      }, { once: true });\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    play();\n\n    const container = ref.current;\n\n    if (!emoji || !container || !messageId || !chatId) {\n      return;\n    }\n\n    const { x, y } = container.getBoundingClientRect();\n\n    interactWithAnimatedEmoji({\n      emoji,\n      x,\n      y,\n      startSize: size,\n      isReversed: !isOwn,\n    });\n\n    if (!interactions.current) {\n      interactions.current = [];\n      startedInteractions.current = performance.now();\n      setTimeout(sendInteractionBunch, INTERACTION_BUNCH_TIME);\n    }\n\n    interactions.current.push(startedInteractions.current\n      ? (performance.now() - startedInteractions.current) / MS_DIVIDER\n      : TIME_DEFAULT);\n  });\n\n  // Set an end anchor for remote activated interaction\n  useEffect(() => {\n    const container = ref.current;\n\n    if (!container || !activeEmojiInteractions) return;\n\n    activeEmojiInteractions.forEach(({\n      id,\n      startSize,\n      messageId: interactionMessageId,\n    }) => {\n      if (startSize || messageId !== interactionMessageId) {\n        return;\n      }\n\n      const { x, y } = container.getBoundingClientRect();\n\n      sendWatchingEmojiInteraction({\n        id,\n        chatId: chatId!,\n        emoticon: emoji!,\n        startSize: size,\n        x,\n        y,\n        isReversed: !isOwn,\n      });\n      play();\n    });\n  }, [activeEmojiInteractions, chatId, emoji, isOwn, messageId, play, sendWatchingEmojiInteraction, size]);\n\n  return {\n    ref,\n    size,\n    style,\n    handleClick,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n  selectCanPlayAnimatedEmojis,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\n\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  customEmojiId: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  observeIntersection?: ObserveFn;\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n  noPlay?: boolean;\n}\n\nconst AnimatedCustomEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  customEmojiId,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n  noPlay,\n  observeIntersection,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(\n    chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji, getCustomEmojiSize(1),\n  );\n\n  return (\n    <CustomEmoji\n      ref={ref}\n      documentId={customEmojiId}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      size={size}\n      isBig\n      noPlay={noPlay}\n      withSharedAnimation\n      forceOnHeavyAnimation={Boolean(effect && activeEmojiInteractions?.length)}\n      observeIntersectionForLoading={observeIntersection}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { customEmojiId, withEffects }) => {\n  const sticker = global.customEmojis.byId[customEmojiId];\n\n  return {\n    sticker,\n    effect: sticker?.emoji && withEffects ? selectAnimatedEmojiEffect(global, sticker.emoji) : undefined,\n    soundId: sticker?.emoji && selectAnimatedEmojiSound(global, sticker.emoji),\n    noPlay: !selectCanPlayAnimatedEmojis(global),\n  };\n})(AnimatedCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmoji,\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\n\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  emoji: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n}\n\nconst QUALITY = 1;\n\nconst AnimatedEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  observeIntersection,\n  forceLoadPreview,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji);\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  return (\n    <AnimatedIconFromSticker\n      sticker={sticker}\n      size={size}\n      quality={QUALITY}\n      noLoad={!isIntersecting}\n      forcePreview={forceLoadPreview}\n      play={isIntersecting}\n      forceAlways\n      ref={ref}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { emoji, withEffects }) => {\n  return {\n    sticker: selectAnimatedEmoji(global, emoji),\n    effect: withEffects ? selectAnimatedEmojiEffect(global, emoji) : undefined,\n    soundId: selectAnimatedEmojiSound(global, emoji),\n  };\n})(AnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiCommentsInfo } from '../../../api/types';\n\nimport { selectIsCurrentUserFrozen, selectPeer } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Spinner from '../../ui/Spinner';\n\nimport './CommentButton.scss';\n\ntype OwnProps = {\n  threadInfo: ApiCommentsInfo;\n  disabled?: boolean;\n  isLoading?: boolean;\n  isCustomShape?: boolean;\n  asActionButton?: boolean;\n};\n\nconst SHOW_LOADER_DELAY = 450;\n\nconst CommentButton: FC<OwnProps> = ({\n  isCustomShape,\n  threadInfo,\n  disabled,\n  isLoading,\n  asActionButton,\n}) => {\n  const { openThread, openFrozenAccountModal } = getActions();\n\n  const shouldRenderLoading = useAsyncRendering([isLoading], SHOW_LOADER_DELAY);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const {\n    originMessageId, chatId, messagesCount, lastMessageId, lastReadInboxMessageId, recentReplierIds, originChannelId,\n  } = threadInfo;\n\n  const handleClick = useLastCallback(() => {\n    const global = getGlobal();\n    if (selectIsCurrentUserFrozen(global)) {\n      openFrozenAccountModal();\n      return;\n    }\n    openThread({\n      isComments: true, chatId, originMessageId, originChannelId,\n    });\n  });\n\n  const recentRepliers = useMemo(() => {\n    if (!recentReplierIds?.length) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on chats and users, so we avoid them\n    const global = getGlobal();\n\n    return recentReplierIds.map((peerId) => {\n      return selectPeer(global, peerId);\n    }).filter(Boolean);\n  }, [recentReplierIds]);\n\n  if (messagesCount === undefined) {\n    return undefined;\n  }\n\n  function renderRecentRepliers() {\n    return (\n      Boolean(recentRepliers?.length) && (\n        <div className=\"recent-repliers\" dir={oldLang.isRtl ? 'rtl' : 'ltr'}>\n          {recentRepliers.map((peer) => (\n            <Avatar\n              key={peer.id}\n              size=\"small\"\n              peer={peer}\n            />\n          ))}\n        </div>\n      )\n    );\n  }\n\n  const hasUnread = Boolean(lastReadInboxMessageId && lastMessageId && lastReadInboxMessageId < lastMessageId);\n\n  const commentsText = messagesCount ? (oldLang('CommentsCount', '%COMMENTS_COUNT%', undefined, messagesCount))\n    .split('%')\n    .map((s) => {\n      return (s === 'COMMENTS_COUNT' ? <AnimatedCounter text={formatIntegerCompact(lang, messagesCount)} /> : s);\n    })\n    : undefined;\n\n  return (\n    <div\n      data-cnt={formatIntegerCompact(lang, messagesCount)}\n      className={buildClassName(\n        'CommentButton',\n        hasUnread && 'has-unread',\n        disabled && 'disabled',\n        isCustomShape && 'CommentButton-custom-shape',\n        isLoading && 'loading',\n        asActionButton && 'as-action-button',\n      )}\n      dir={oldLang.isRtl ? 'rtl' : 'ltr'}\n      onClick={handleClick}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <Icon\n        name=\"comments-sticker\"\n        className={buildClassName(\n          'CommentButton_icon-comments',\n          isLoading && shouldRenderLoading && 'CommentButton_hidden',\n        )}\n      />\n      {!recentRepliers?.length && <Icon name=\"comments\" />}\n      {renderRecentRepliers()}\n      <div className=\"label\" dir=\"auto\">\n        {messagesCount ? commentsText : oldLang('LeaveAComment')}\n      </div>\n      <div className=\"CommentButton_right\">\n        {isLoading && (\n          <Spinner\n            className={buildClassName(\n              'CommentButton_loading',\n              !shouldRenderLoading && 'CommentButton_hidden',\n            )}\n            color={isCustomShape ? 'white' : 'blue'}\n          />\n        )}\n        <Icon\n          name=\"next\"\n          className={buildClassName(\n            'CommentButton_icon-open',\n            isLoading && shouldRenderLoading && 'CommentButton_hidden',\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(CommentButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AAHWWWvU\",\"info-container\":\"tpDpg82n\",\"infoContainer\":\"tpDpg82n\",\"info\":\"fpYynE5s\",\"name\":\"_PNTJc_V\",\"phone\":\"JP_3wes8\",\"divider\":\"_OSJcuqH\",\"buttons\":\"Blui4M4G\",\"button\":\"ReDHhQHm\",\"disabled\":\"XAeKpuIZ\",\"emoji-icon-background\":\"SjZYi3sJ\",\"emojiIconBackground\":\"SjZYi3sJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiContact, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { getCanAddContact, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\n\nimport styles from './Contact.module.scss';\n\ntype OwnProps = {\n  contact: ApiContact;\n  noUserColors?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst UNREGISTERED_CONTACT_ID = '0';\n\nconst Contact: FC<OwnProps & StateProps> = ({\n  contact, user, phoneCodeList, noUserColors,\n}) => {\n  const lang = useOldLang();\n  const {\n    openChat, openAddContactDialog, showNotification, openChatWithInfo,\n  } = getActions();\n\n  const { phoneNumber, userId } = contact;\n  const isRegistered = userId !== UNREGISTERED_CONTACT_ID;\n  const canAddContact = isRegistered && user && getCanAddContact(user);\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: userId });\n  });\n\n  const handleAddContact = useLastCallback(() => {\n    openAddContactDialog({ userId: user?.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (user) {\n      openChatWithInfo({ id: userId });\n    } else {\n      copyTextToClipboard(phoneNumber);\n      showNotification({ message: lang('PhoneCopied') });\n    }\n  });\n\n  return (\n    <PeerColorWrapper\n      noUserColors={noUserColors}\n      peer={user}\n      emojiIconClassName={styles.emojiIconBackground}\n      className={styles.root}\n    >\n      <div className={styles.infoContainer} onClick={handleClick}>\n        <Avatar size=\"medium\" peer={user} text={getContactName(contact)} />\n        <div className={styles.info}>\n          <div className={styles.name}>\n            {user ? getUserFullName(user) : getContactName(contact)}\n          </div>\n          <div className={styles.phone}>\n            {formatPhoneNumberWithCode(phoneCodeList, phoneNumber)}\n          </div>\n        </div>\n      </div>\n      {isRegistered && (\n        <>\n          <div className={styles.divider} />\n          <div className={styles.buttons}>\n            <Button\n              isText\n              color=\"translucent\"\n              ripple\n              size=\"tiny\"\n              onClick={handleOpenChat}\n              className={styles.button}\n            >\n              {lang('SharedContactMessage')}\n            </Button>\n            {canAddContact && (\n              <Button\n                isText\n                color=\"translucent\"\n                ripple\n                size=\"tiny\"\n                onClick={handleAddContact}\n                className={styles.button}\n              >\n                {lang('SharedContactAdd')}\n              </Button>\n            )}\n          </div>\n        </>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nfunction getContactName(contact: ApiContact) {\n  if (contact.firstName && contact.lastName) {\n    return `${contact.firstName} ${contact.lastName}`;\n  }\n\n  if (contact.firstName) {\n    return contact.firstName;\n  }\n\n  if (contact.lastName) {\n    return contact.lastName;\n  }\n\n  return '';\n}\n\nexport default withGlobal<OwnProps>((global, { contact }): StateProps => {\n  const {\n    countryList: { phoneCodes: phoneCodeList },\n  } = global;\n  const user = selectUser(global, contact.userId);\n\n  return {\n    user,\n    phoneCodeList,\n  };\n})(Contact);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HMB5LgeX\",\"title\":\"vZnCPl3t\",\"content\":\"k_dGolcu\",\"separator\":\"qRaSs5iA\",\"footnote\":\"EDmr0wJG\",\"collapsed\":\"hYzpXwTM\",\"cutoutWrapper\":\"nfCzKu78\",\"collapseIcon\":\"mxPizZpR\",\"clickable\":\"Cj2cLczd\"};","import { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiFactCheck } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useCollapsibleLines from '../../../hooks/element/useCollapsibleLines';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Separator from '../../ui/Separator';\n\nimport styles from './FactCheck.module.scss';\n\ntype OwnProps = {\n  factCheck: ApiFactCheck;\n  isToggleDisabled?: boolean;\n};\n\nconst COLOR = {\n  color: 0,\n};\nconst MAX_LINES = 4;\n\nconst FactCheck = ({ factCheck, isToggleDisabled }: OwnProps) => {\n  const lang = useOldLang();\n\n  const ref = useRef<HTMLDivElement>();\n  const cutoutRef = useRef<HTMLDivElement>();\n  const {\n    isCollapsed, isCollapsible, setIsCollapsed,\n  } = useCollapsibleLines(ref, MAX_LINES, cutoutRef);\n\n  const countryLocalized = useMemo(() => {\n    if (!factCheck.countryCode || !lang.code) return undefined;\n\n    const displayNames = new Intl.DisplayNames([lang.code], { type: 'region' });\n    return displayNames.of(factCheck.countryCode);\n  }, [factCheck.countryCode, lang.code]);\n\n  const canExpand = !isToggleDisabled && isCollapsed;\n\n  const handleExpand = useLastCallback(() => {\n    setIsCollapsed(false);\n  });\n\n  const handleToggle = useLastCallback(() => {\n    setIsCollapsed((prev) => !prev);\n  });\n\n  if (!factCheck.text) {\n    return undefined;\n  }\n\n  return (\n    <PeerColorWrapper peerColor={COLOR} className={styles.root} onClick={canExpand ? handleExpand : undefined}>\n      <div\n        ref={cutoutRef}\n        className={buildClassName(styles.cutoutWrapper, isCollapsed && styles.collapsed)}\n      >\n        <div className={styles.title}>{lang('FactCheck')}</div>\n        <div ref={ref} className={styles.content}>\n          {renderTextWithEntities({\n            text: factCheck.text.text,\n            entities: factCheck.text.entities,\n          })}\n        </div>\n        <Separator className={styles.separator} />\n        <div className={styles.footnote}>{lang('FactCheckFooter', countryLocalized)}</div>\n      </div>\n      {isCollapsible && (\n        <div\n          className={buildClassName(styles.collapseIcon, !isToggleDisabled && styles.clickable)}\n          onClick={!isToggleDisabled ? handleToggle : undefined}\n          aria-hidden\n        >\n          <Icon name={isCollapsed ? 'down' : 'up'} />\n        </div>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(FactCheck);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getGamePreviewPhotoHash, getGamePreviewVideoHash, getMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Game.scss';\n\nconst DEFAULT_PREVIEW_DIMENSIONS = {\n  width: 480,\n  height: 270,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  canAutoLoadMedia?: boolean;\n};\n\nconst Game: FC<OwnProps> = ({\n  message,\n  canAutoLoadMedia,\n}) => {\n  const { clickBotInlineButton } = getActions();\n  const game = message.content.game!;\n  const {\n    title, description,\n  } = game;\n\n  const photoHash = getGamePreviewPhotoHash(game);\n  const videoHash = getGamePreviewVideoHash(game);\n  const photoBlobUrl = useMedia(photoHash, !canAutoLoadMedia);\n  const videoBlobUrl = useMedia(videoHash, !canAutoLoadMedia);\n\n  const handleGameClick = () => {\n    clickBotInlineButton({\n      chatId: message.chatId,\n      messageId: message.id,\n      button: message.inlineButtons![0][0],\n    });\n  };\n\n  return (\n    <div className=\"Game\">\n      <div\n        className=\"preview\"\n        style={`width: ${DEFAULT_PREVIEW_DIMENSIONS.width}px; height: ${DEFAULT_PREVIEW_DIMENSIONS.height}px`}\n        onClick={handleGameClick}\n      >\n        {!photoBlobUrl && !videoBlobUrl && (\n          <Skeleton className=\"skeleton preview-content\" />\n        )}\n        {photoBlobUrl && (\n          <img\n            className=\"preview-content\"\n            src={photoBlobUrl}\n            alt={title}\n            draggable={false}\n          />\n        )}\n        {videoBlobUrl && (\n          <video\n            className=\"preview-content\"\n            playsInline\n            muted\n            disablePictureInPicture\n            autoPlay\n            loop\n            src={videoBlobUrl}\n          />\n        )}\n      </div>\n      <div className=\"title\">{title}</div>\n      {!getMessageText(message) && <div className=\"description\">{description}</div>}\n    </div>\n  );\n};\n\nexport default memo(Game);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CbpKtOey\",\"title\":\"ogvcv3mr\",\"sticker\":\"hjjKhvVv\",\"resultSticker\":\"JEiR48jJ\",\"count\":\"n_QCMv_A\",\"section\":\"MSFa9BPf\",\"description\":\"HfZ6SuLI\",\"peers\":\"rPyyNYxK\",\"peer\":\"FV70u896\",\"button\":\"jMBw7STU\",\"result\":\"ZQ4aVVkI\",\"separator\":\"ao0x1YnS\"};","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiGiveaway, ApiGiveawayInfo, ApiGiveawayResults, ApiMessage, ApiPeer, ApiSticker,\n} from '../../../api/types';\n\nimport {\n  getChatTitle, getUserFullName, isOwnMessage,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectForwardedSender,\n  selectGiftStickerForDuration,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateAtTime, formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { isoToEmoji } from '../../../util/emoji/emoji';\nimport { getServerTime } from '../../../util/serverTime';\nimport { callApi } from '../../../api/gramjs';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Separator from '../../ui/Separator';\n\nimport styles from './Giveaway.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  sender?: ApiPeer;\n  giftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst NBSP = '\\u00A0';\nconst GIFT_STICKER_SIZE = 175;\nconst RESULT_STICKER_SIZE = 150;\n\nconst Giveaway = ({\n  chat,\n  sender,\n  message,\n  canPlayAnimatedEmojis,\n  giftSticker,\n}: OwnProps & StateProps) => {\n  const { openChat } = getActions();\n\n  const isLoadingInfo = useRef(false);\n  const [giveawayInfo, setGiveawayInfo] = useState<ApiGiveawayInfo | undefined>();\n\n  const lang = useOldLang();\n  const { giveaway, giveawayResults } = message.content;\n  const isResults = Boolean(giveawayResults);\n  const {\n    months, untilDate, prizeDescription, stars,\n  } = (giveaway || giveawayResults)!;\n\n  const isOwn = isOwnMessage(message);\n\n  const quantity = isResults ? giveawayResults.winnersCount : giveaway!.quantity;\n\n  const hasEnded = getServerTime() > untilDate;\n\n  const countryList = useMemo(() => {\n    if (isResults) return undefined;\n    const translatedNames = new Intl.DisplayNames([lang.code!, 'en'].filter(Boolean), { type: 'region' });\n    return giveaway?.countries?.map((countryCode) => (\n      `${isoToEmoji(countryCode)}${NBSP}${translatedNames.of(countryCode)}`\n    )).join(', ');\n  }, [giveaway, isResults, lang.code]);\n\n  const handlePeerClick = useLastCallback((channelId: string) => {\n    openChat({ id: channelId });\n  });\n\n  const handleShowInfoClick = useLastCallback(async () => {\n    if (isLoadingInfo.current) return;\n\n    isLoadingInfo.current = true;\n    const result = await callApi('fetchGiveawayInfo', {\n      peer: chat,\n      messageId: message.id,\n    });\n    setGiveawayInfo(result);\n    isLoadingInfo.current = false;\n  });\n\n  const handleCloseInfo = useLastCallback(() => {\n    setGiveawayInfo(undefined);\n  });\n\n  const giveawayInfoTitle = useMemo(() => {\n    if (!giveawayInfo) return undefined;\n    return lang(giveawayInfo.type === 'results' ? 'BoostingGiveawayEnd' : 'BoostingGiveAwayAbout');\n  }, [giveawayInfo, lang]);\n\n  function renderGiveawayDescription(media: ApiGiveaway) {\n    const channelIds = media.channelIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayPrizes'), ['simple_markdown'])}\n          </strong>\n          {prizeDescription && (\n            <>\n              <p className={styles.description}>\n                {renderText(\n                  lang('BoostingGiveawayMsgPrizes', [quantity, prizeDescription], undefined, quantity),\n                  ['simple_markdown'],\n                )}\n              </p>\n              <Separator>{lang('BoostingGiveawayMsgWithDivider')}</Separator>\n            </>\n          )}\n          <p className={styles.description}>\n            {message?.content?.giveaway?.stars ? (\n              <>\n                {renderText(\n                  lang('Chat.Giveaway.Message.Stars.PrizeText', lang('Stars', message?.content?.giveaway?.stars)),\n                  ['simple_markdown'],\n                )}\n                <br />\n                {renderText(lang('AmongWinners', quantity), ['simple_markdown'])}\n              </>\n            ) : (\n              <>\n                {renderText(lang('Chat.Giveaway.Info.Subscriptions', quantity), ['simple_markdown'])}\n                <br />\n                {renderText(lang(\n                  'ActionGiftPremiumSubtitle',\n                  lang('Chat.Giveaway.Info.Months', months),\n                ), ['simple_markdown'])}\n              </>\n            )}\n          </p>\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayMsgParticipants'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayMsgAllSubsPlural', channelIds.length), ['simple_markdown'])}\n          </p>\n          <div className={styles.peers}>\n            {channelIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n          {countryList && (\n            <span>{renderText(lang('Chat.Giveaway.Message.CountriesFrom', countryList))}</span>\n          )}\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingWinnersDate'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {formatDateTimeToString(untilDate * 1000, lang.code, true)}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayResultsDescription(media: ApiGiveawayResults) {\n    const winnerIds = media.winnerIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersSelected'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersTitle', winnerIds.length), ['simple_markdown'])}\n          </p>\n          <strong className={styles.title}>\n            {lang('lng_prizes_results_winners')}\n          </strong>\n          <div className={styles.peers}>\n            {winnerIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <p className={styles.description}>\n            {lang('BoostingGiveawayResultsMsgAllWinnersReceivedLinks')}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayInfo() {\n    if (!sender || !giveawayInfo) return undefined;\n    const isResultsInfo = giveawayInfo.type === 'results';\n\n    const chatTitle = isApiPeerChat(sender) ? getChatTitle(lang, sender) : getUserFullName(sender);\n    const endDate = formatDateAtTime(lang, untilDate * 1000);\n    const otherChannelsCount = giveaway?.channelIds ? giveaway.channelIds.length - 1 : 0;\n    const otherChannelsString = lang('Chat.Giveaway.Info.OtherChannels', otherChannelsCount);\n    const isSeveral = otherChannelsCount > 0;\n\n    const firstKey = isResultsInfo ? 'BoostingGiveawayHowItWorksTextEnd' : 'BoostingGiveawayHowItWorksText';\n    const giveawayDuration = isResultsInfo ? lang('Chat.Giveaway.Info.Months', months) : lang('Stars', stars, 'i');\n    const firstParagraph = lang(firstKey, [chatTitle, quantity, giveawayDuration], undefined, quantity);\n\n    const additionalPrizes = prizeDescription\n      ? lang('BoostingGiveawayHowItWorksIncludeText', [chatTitle, quantity, prizeDescription], undefined, quantity)\n      : undefined;\n\n    let secondKey = '';\n    if (isResultsInfo) {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveralEnd' : 'BoostingGiveawayHowItWorksSubTextEnd';\n    } else {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveral' : 'BoostingGiveawayHowItWorksSubText';\n    }\n    let secondParagraph = lang(secondKey, [endDate, quantity, chatTitle, otherChannelsCount], undefined, quantity);\n    if (isResultsInfo && giveawayInfo.activatedCount) {\n      secondParagraph += ` ${lang('BoostingGiveawayUsedLinksPlural', giveawayInfo.activatedCount)}`;\n    }\n\n    let result = '';\n\n    if (isResultsInfo) {\n      if (giveawayInfo.isRefunded) {\n        result = lang('BoostingGiveawayCanceledByPayment');\n      } else {\n        result = lang(giveawayInfo.isWinner ? 'BoostingGiveawayYouWon' : 'BoostingGiveawayYouNotWon');\n      }\n    }\n\n    let lastParagraph = '';\n    if (isResultsInfo) {\n      // Nothing\n    } else if (giveawayInfo.disallowedCountry) {\n      lastParagraph = lang('BoostingGiveawayNotEligibleCountry');\n    } else if (giveawayInfo.adminDisallowedChatId) {\n      // Since rerenders are not expected, we can use the global state directly\n      const chatsById = getGlobal().chats.byId;\n      const disallowedChat = chatsById[giveawayInfo.adminDisallowedChatId];\n      const disallowedChatTitle = disallowedChat && getChatTitle(lang, disallowedChat);\n      lastParagraph = lang('BoostingGiveawayNotEligibleAdmin', disallowedChatTitle);\n    } else if (giveawayInfo.joinedTooEarlyDate) {\n      const joinedTooEarlyDate = formatDateAtTime(lang, giveawayInfo.joinedTooEarlyDate * 1000);\n      lastParagraph = lang('BoostingGiveawayNotEligible', joinedTooEarlyDate);\n    } else if (giveawayInfo.isParticipating) {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.ParticipatingMany', [chatTitle, otherChannelsCount])\n        : lang('Chat.Giveaway.Info.Participating', chatTitle);\n    } else {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.NotQualifiedMany', [chatTitle, otherChannelsString, endDate])\n        : lang('Chat.Giveaway.Info.NotQualified', [chatTitle, endDate]);\n    }\n\n    return (\n      <>\n        {result && (\n          <p className={styles.result}>\n            {renderText(result, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(firstParagraph, ['simple_markdown'])}\n        </p>\n        {additionalPrizes && (\n          <p>\n            {renderText(additionalPrizes, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(secondParagraph, ['simple_markdown'])}\n        </p>\n        {lastParagraph && (\n          <p>\n            {renderText(lastParagraph, ['simple_markdown'])}\n          </p>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.sticker, isResults && styles.resultSticker)}>\n        {isResults ? (\n          <AnimatedIconWithPreview\n            size={RESULT_STICKER_SIZE}\n            tgsUrl={LOCAL_TGS_URLS.PartyPopper}\n            nonInteractive\n            noLoop\n          />\n        ) : (\n          <AnimatedIconFromSticker\n            sticker={giftSticker}\n            play={canPlayAnimatedEmojis && hasEnded}\n            noLoop\n            nonInteractive\n            size={GIFT_STICKER_SIZE}\n          />\n        )}\n        <span className={styles.count}>\n          {`x${quantity}`}\n        </span>\n      </div>\n      {isResults ? renderGiveawayResultsDescription(giveawayResults) : renderGiveawayDescription(giveaway!)}\n      <Button\n        className={styles.button}\n        color=\"adaptive\"\n        size=\"smaller\"\n        onClick={handleShowInfoClick}\n      >\n        {lang('BoostingHowItWork')}\n      </Button>\n      <ConfirmDialog\n        isOpen={Boolean(giveawayInfo)}\n        isOnlyConfirm\n        title={giveawayInfoTitle}\n        confirmHandler={handleCloseInfo}\n        onClose={handleCloseInfo}\n      >\n        {renderGiveawayInfo()}\n      </ConfirmDialog>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message }): StateProps => {\n    const { giveaway } = message.content;\n    const chat = selectChat(global, message.chatId)!;\n    const sender = (giveaway?.channelIds[0] ? selectChat(global, giveaway.channelIds[0]) : undefined)\n      || selectForwardedSender(global, message) || chat;\n\n    const sticker = giveaway && selectGiftStickerForDuration(global, giveaway.months);\n\n    return {\n      chat,\n      sender,\n      giftSticker: sticker,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(Giveaway));\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton, ApiMessage } from '../../../api/types';\nimport type { ActionPayloads } from '../../../global/types';\n\nimport { RE_TME_LINK } from '../../../config';\nimport renderKeyboardButtonText from '../composer/helpers/renderKeyboardButtonText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport './InlineButtons.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  onClick: (payload: ActionPayloads['clickBotInlineButton']) => void;\n};\n\nconst InlineButtons: FC<OwnProps> = ({ message, onClick }) => {\n  const lang = useOldLang();\n\n  const renderIcon = (button: ApiKeyboardButton) => {\n    const { type } = button;\n    switch (type) {\n      case 'url': {\n        if (!RE_TME_LINK.test(button.url)) {\n          return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n        }\n        break;\n      }\n      case 'urlAuth':\n        return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n      case 'buy':\n      case 'receipt':\n        return <Icon className=\"corner-icon\" name=\"card\" />;\n      case 'switchBotInline':\n        return <Icon className=\"corner-icon\" name=\"share-filled\" />;\n      case 'webView':\n      case 'simpleWebView':\n        return <Icon className=\"corner-icon\" name=\"webapp\" />;\n      case 'copy':\n        return <Icon className=\"corner-icon\" name=\"copy\" />;\n    }\n    return undefined;\n  };\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message.inlineButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n    return texts;\n  }, [lang, message.inlineButtons]);\n\n  return (\n    <div className=\"InlineButtons\">\n      {message.inlineButtons!.map((row, i) => (\n        <div className=\"row\">\n          {row.map((button, j) => (\n            <Button\n              size=\"tiny\"\n              ripple\n              disabled={button.type === 'unsupported'}\n\n              onClick={() => onClick({ chatId: message.chatId, messageId: message.id, button })}\n            >\n              <span className=\"inline-button-text\">\n                {buttonTexts[i][j]}\n              </span>\n              {renderIcon(button)}\n            </Button>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(InlineButtons);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageInvoice, getWebDocumentHash } from '../../../global/helpers';\nimport buildStyle from '../../../util/buildStyle';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\n\nimport useLang from '../../../hooks/useLang';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Invoice.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldAffectAppendix?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n  forcedWidth?: number;\n};\n\nconst Invoice: FC<OwnProps> = ({\n  message,\n  shouldAffectAppendix,\n  isInSelectMode,\n  isSelected,\n  theme,\n  forcedWidth,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const invoice = getMessageInvoice(message);\n\n  const {\n    title,\n    description,\n    amount,\n    currency,\n    isTest,\n    photo,\n  } = invoice!;\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n  const withBlurredBackground = Boolean(forcedWidth);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photoUrl, !withBlurredBackground);\n  const messageId = message.id;\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    if (photoUrl) {\n      const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n      getCustomAppendixBg(photoUrl, false, messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    }\n  }, [shouldAffectAppendix, photoUrl, isInSelectMode, isSelected, theme, messageId]);\n\n  const width = forcedWidth || photo?.dimensions?.width;\n\n  const style = buildStyle(\n    photo?.dimensions && `width: ${width}px`,\n    photo?.dimensions && `aspect-ratio: ${photo.dimensions.width} / ${photo.dimensions.height}`,\n    Boolean(!photo?.dimensions && forcedWidth) && `width: ${forcedWidth}px`,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className=\"Invoice\"\n    >\n      {title && (\n        <p className=\"title\">{renderText(title)}</p>\n      )}\n      {description && (\n        <div className=\"info\">{renderText(description, ['emoji', 'br'])}</div>\n      )}\n      <div className={`description ${photo ? 'has-image' : ''}`}>\n        {Boolean(photo) && (\n          <div className=\"invoice-image-container\">\n            {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n            {photoUrl && (\n              <img\n                className=\"invoice-image\"\n                src={photoUrl}\n                alt=\"\"\n                style={style}\n                crossOrigin=\"anonymous\"\n                draggable={false}\n              />\n            )}\n            {!photoUrl && photo && (\n              <Skeleton\n                width={width}\n                height={photo.dimensions?.height}\n                forceAspectRatio\n              />\n            )}\n          </div>\n        )}\n        <p className=\"description-text\">\n          {formatCurrency(lang, amount, currency, { iconClassName: 'invoice-currency-icon' })}\n          {isTest && <span className=\"test-invoice\">{oldLang('PaymentTestInvoice')}</span>}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Invoice);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dCK8GQ_8\",\"duration\":\"CWT8ZMwV\",\"buy\":\"C38zhCDM\",\"spoiler\":\"CG55VZP1\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getMessageInvoice } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './InvoiceMediaPreview.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  isConnected: boolean;\n};\n\nconst POLLING_INTERVAL = 30000;\n\nconst InvoiceMediaPreview: FC<OwnProps> = ({\n  message,\n  isConnected,\n}) => {\n  const { openInvoice, loadExtendedMedia } = getActions();\n  const lang = useOldLang();\n  const invoice = getMessageInvoice(message);\n\n  const { chatId, id } = message;\n\n  const refreshExtendedMedia = useLastCallback(() => {\n    loadExtendedMedia({ chatId, ids: [id] });\n  });\n\n  useInterval(refreshExtendedMedia, isConnected ? POLLING_INTERVAL : undefined);\n\n  const {\n    amount,\n    currency,\n    extendedMedia,\n  } = invoice!;\n\n  const {\n    width, height, thumbnail, duration,\n  } = extendedMedia!;\n\n  const handleClick = useLastCallback(() => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId: id,\n      isExtendedMedia: true,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, 'media-inner')}\n      onClick={handleClick}\n    >\n      <MediaSpoiler\n        thumbDataUri={thumbnail?.dataUri}\n        width={width}\n        height={height}\n        isVisible\n        className={styles.spoiler}\n      />\n      {Boolean(duration) && <div className={styles.duration}>{formatMediaDuration(duration)}</div>}\n      <div className={styles.buy}>\n        <Icon name=\"lock\" className={styles.lock} />\n        {lang('Checkout.PayPrice', formatCurrencyAsString(amount, currency))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(InvoiceMediaPreview);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  buildStaticMapHash,\n  getMessageLocation,\n  isGeoLiveExpired,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCountdownShort, formatLocationLastUpdate } from '../../../util/dates/dateFormat';\nimport {\n  getMetersPerPixel, getVenueColor, getVenueIconUrl,\n} from '../../../util/map';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../common/Avatar';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Location.scss';\n\nimport mapPin from '../../../assets/map-pin.svg';\n\nconst TIMER_RADIUS = 12;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst MOVE_THRESHOLD = 0.0001; // ~11m\nconst DEFAULT_MAP_CONFIG = {\n  width: 400,\n  height: 300,\n  zoom: 16,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  peer?: ApiPeer;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n};\n\nconst Location: FC<OwnProps> = ({\n  message,\n  peer,\n}) => {\n  const { openMapModal } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const countdownRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  const location = getMessageLocation(message)!;\n  const { mediaType, geo } = location;\n\n  const serverTime = getServerTime();\n  const isExpired = isGeoLiveExpired(message);\n  const secondsBeforeEnd = (mediaType === 'geoLive' && !isExpired) ? message.date + location.period - serverTime\n    : undefined;\n\n  const [point, setPoint] = useState(geo);\n\n  const shouldRenderText = mediaType === 'venue' || (mediaType === 'geoLive' && !isExpired);\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n\n  const mediaHash = buildStaticMapHash(point, width, height, zoom, dpr);\n  const mediaBlobUrl = useMedia(mediaHash);\n  const prevMediaBlobUrl = usePreviousDeprecated(mediaBlobUrl, true);\n  const mapBlobUrl = mediaBlobUrl || prevMediaBlobUrl;\n\n  const accuracyRadiusPx = useMemo(() => {\n    if (mediaType !== 'geoLive' || !point.accuracyRadius) {\n      return 0;\n    }\n\n    const { lat, accuracyRadius } = point;\n    return accuracyRadius / getMetersPerPixel(lat, zoom);\n  }, [mediaType, point, zoom]);\n\n  const handleClick = () => {\n    openMapModal({ geoPoint: point, zoom });\n  };\n\n  const updateCountdown = useLastCallback((countdownEl: HTMLDivElement) => {\n    if (mediaType !== 'geoLive') return;\n    const svgEl = countdownEl.lastElementChild!;\n    const timerEl = countdownEl.firstElementChild!;\n\n    const timeLeft = message.date + location.period - getServerTime();\n    const strokeDashOffset = (1 - timeLeft / location.period) * TIMER_CIRCUMFERENCE;\n    const text = formatCountdownShort(lang, timeLeft * 1000);\n    timerEl.textContent = text;\n    svgEl.firstElementChild!.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  });\n\n  useLayoutEffect(() => {\n    if (countdownRef.current) {\n      updateCountdown(countdownRef.current);\n    }\n  }, [updateCountdown]);\n\n  useEffect(() => {\n    // Prevent map refetching for slight location changes\n    if (Math.abs(geo.lat - point.lat) < MOVE_THRESHOLD && Math.abs(geo.long - point.long) < MOVE_THRESHOLD) {\n      if (point.accuracyRadius !== geo.accuracyRadius) {\n        setPoint({\n          ...point,\n          accuracyRadius: geo.accuracyRadius,\n        });\n      }\n      return;\n    }\n    setPoint(geo);\n  }, [geo, point]);\n\n  useTimeout(() => {\n    forceUpdate();\n  }, !isExpired ? (secondsBeforeEnd || 0) * 1000 : undefined);\n\n  useInterval(() => {\n    requestMutation(() => {\n      const countdownEl = countdownRef.current;\n      if (countdownEl) {\n        updateCountdown(countdownEl);\n      }\n    });\n  }, secondsBeforeEnd ? 1000 : undefined);\n\n  function renderInfo() {\n    if (!shouldRenderText) return undefined;\n    if (mediaType === 'venue') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">\n            {location.title}\n          </div>\n          <div className=\"location-info-subtitle\">\n            {location.address}\n          </div>\n        </div>\n      );\n    }\n    if (mediaType === 'geoLive') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">{lang('AttachLiveLocation')}</div>\n          <div className=\"location-info-subtitle\">\n            {formatLocationLastUpdate(lang, serverTime, message.editDate)}\n          </div>\n          {!isExpired && (\n            <div className=\"geo-countdown\" ref={countdownRef}>\n              <span className=\"geo-countdown-text\" />\n              <svg width=\"32px\" height=\"32px\">\n                <circle\n                  cx=\"16\"\n                  cy=\"16\"\n                  r={TIMER_RADIUS}\n                  className=\"geo-countdown-progress\"\n                  transform=\"rotate(-90, 16, 16)\"\n                  stroke-dasharray={TIMER_CIRCUMFERENCE}\n                  stroke-dashoffset=\"0\"\n                />\n              </svg>\n            </div>\n          )}\n        </div>\n      );\n    }\n    return undefined;\n  }\n\n  function renderMap() {\n    if (!mapBlobUrl) return <Skeleton width={width} height={height} />;\n    return (\n      <img\n        className=\"full-media map\"\n        src={mapBlobUrl}\n        alt=\"Location on a map\"\n        draggable={false}\n        style={`width: ${DEFAULT_MAP_CONFIG.width}px; height: ${DEFAULT_MAP_CONFIG.height}px;`}\n      />\n    );\n  }\n\n  function renderPin() {\n    const pinClassName = buildClassName(\n      'pin',\n      mediaType,\n      isExpired && 'expired',\n    );\n    if (mediaType === 'geoLive') {\n      return (\n        <div className={pinClassName}>\n          <PinSvg />\n          <Avatar peer={peer} className=\"location-avatar\" />\n          {location.heading !== undefined && (\n            <div className=\"direction\" style={`--direction: ${location.heading}deg`} />\n          )}\n        </div>\n      );\n    }\n\n    if (mediaType === 'venue') {\n      const color = getVenueColor(location.venueType);\n      const iconSrc = getVenueIconUrl(location.venueType);\n      if (iconSrc) {\n        return (\n          <div className={pinClassName} style={`--pin-color: ${color}`}>\n            <PinSvg />\n            <img src={iconSrc} draggable={false} className=\"venue-icon\" alt=\"\" />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <img className={pinClassName} draggable={false} src={mapPin} alt=\"\" />\n    );\n  }\n\n  function renderOverlay() {\n    if (!mapBlobUrl) return undefined;\n\n    return (\n      <>\n        {Boolean(accuracyRadiusPx) && !isExpired && (\n          <div\n            className=\"location-accuracy\"\n            style={`width: ${accuracyRadiusPx * 2}px; height: ${accuracyRadiusPx * 2}px`}\n          />\n        )}\n        {renderPin()}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className=\"Location media-inner interactive\"\n      onClick={handleClick}\n    >\n      <div className=\"map-wrapper\">\n        {renderMap()}\n        {renderOverlay()}\n      </div>\n      {renderInfo()}\n    </div>\n  );\n};\n\nfunction PinSvg() {\n  return (\n    <svg className=\"round-pin\" style=\"enable-background:new 0 0 64 64\" viewBox=\"0 0 64 64\">\n      <circle cx=\"32\" cy=\"32\" r=\"24.5\" />\n      <path d=\"M32 8c13.23 0 24 10.77 24 24S45.23 56 32 56 8 45.23 8 32 18.77 8 32 8m0-1C18.19 7 7 18.19 7 32s11.19 25 25 25 25-11.19 25-25S45.81 7 32 7z\" />\n      <path d=\"m29.38 57.67-1.98-1.59 3.02-1.66L32 51.54l1.58 2.88 3.02 1.66-1.91 1.53L32 60.73z\" />\n      <path d=\"m32 52.58 1.07 1.95.14.26.26.14 2.24 1.22-1.33 1.06-.07.06-.06.07L32 59.96l-2.24-2.61-.06-.07-.07-.06-1.33-1.06 2.24-1.22.26-.14.14-.26L32 52.58m0-2.08-1.94 3.56L26.5 56l2.5 2 3 3.5 3-3.5 2.5-2-3.56-1.94L32 50.5z\" />\n    </svg>\n  );\n}\n\nexport default memo(Location);\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiMessage, ApiMessageOutgoingStatus, ApiThreadInfo,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString, formatPastTimeShort, formatTime } from '../../../util/dates/dateFormat';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport MessageOutgoingStatus from '../../common/MessageOutgoingStatus';\n\nimport './MessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  withReactionOffset?: boolean;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  signature?: string;\n  availableReactions?: ApiAvailableReaction[];\n  noReplies?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  isTranslated?: boolean;\n  isPinned?: boolean;\n  withFullDate?: boolean;\n  effectEmoji?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onTranslationClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onEffectClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  renderQuickReactionButton?: () => TeactNode | undefined;\n  onOpenThread: NoneToVoidFunction;\n  paidMessageStars?: number;\n};\n\nconst MessageMeta: FC<OwnProps> = ({\n  message,\n  outgoingStatus,\n  signature,\n  withReactionOffset,\n  repliesThreadInfo,\n  renderQuickReactionButton,\n  noReplies,\n  isTranslated,\n  isPinned,\n  withFullDate,\n  effectEmoji,\n  onClick,\n  onTranslationClick,\n  onEffectClick,\n  onOpenThread,\n  paidMessageStars,\n}) => {\n  const { showNotification } = getActions();\n\n  const [isActivated, markActivated] = useFlag();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function handleImportedClick(e: React.MouseEvent) {\n    e.stopPropagation();\n\n    showNotification({\n      message: {\n        key: 'ImportedInfo',\n      },\n    });\n  }\n\n  function handleOpenThread(e: React.MouseEvent) {\n    e.stopPropagation();\n    onOpenThread();\n  }\n\n  const dateTitle = useMemo(() => {\n    if (!isActivated) return undefined;\n    const createDateTime = formatDateTimeToString(message.date * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const editDateTime = message.isEdited\n      && formatDateTimeToString(message.editDate! * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const forwardedDateTime = message.forwardInfo\n      && formatDateTimeToString(\n        (message.forwardInfo.savedDate || message.forwardInfo.date) * 1000,\n        oldLang.code,\n        undefined,\n        oldLang.timeFormat,\n      );\n\n    let text = createDateTime;\n    if (editDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipEditedDate', { date: editDateTime });\n    }\n    if (forwardedDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipForwardedDate', { date: forwardedDateTime });\n    }\n\n    return text;\n    // We need to listen to timeformat change\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [isActivated, oldLang, message, oldLang.timeFormat]);\n\n  const viewsTitle = useMemo(() => {\n    if (!message.viewsCount) return undefined;\n    let text = lang('MessageTooltipViews', {\n      count: lang.number(message.viewsCount),\n    }, { pluralValue: message.viewsCount });\n    if (message.forwardsCount) {\n      text += '\\n';\n      text += lang('MessageTooltipForwards', {\n        count: lang.number(message.forwardsCount),\n      }, { pluralValue: message.forwardsCount });\n    }\n\n    return text;\n  }, [lang, message.forwardsCount, message.viewsCount]);\n\n  const repliesTitle = useMemo(() => {\n    const count = repliesThreadInfo?.messagesCount;\n    if (!count) return undefined;\n    return lang('MessageTooltipReplies', { count }, { pluralValue: count });\n  }, [lang, repliesThreadInfo]);\n\n  const date = useMemo(() => {\n    const time = formatTime(oldLang, message.date * 1000);\n    if (!withFullDate) {\n      return time;\n    }\n\n    return formatPastTimeShort(oldLang, (message.forwardInfo?.date || message.date) * 1000, true);\n  }, [oldLang, message.date, message.forwardInfo?.date, withFullDate]);\n\n  const fullClassName = buildClassName(\n    'MessageMeta',\n    withReactionOffset && 'reactions-offset',\n    message.forwardInfo?.isImported && 'is-imported',\n  );\n\n  return (\n    <span\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n      onClick={onClick}\n      data-ignore-on-paste\n    >\n      {effectEmoji && (\n        <span className=\"message-effect-icon\" onClick={onEffectClick}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {isTranslated && (\n        <Icon name=\"language\" className=\"message-translated\" onClick={onTranslationClick} />\n      )}\n      {Boolean(message.viewsCount) && (\n        <>\n          <span className=\"message-views\" title={viewsTitle}>\n            {formatIntegerCompact(lang, message.viewsCount)}\n          </span>\n          <Icon name=\"channelviews\" />\n        </>\n      )}\n      {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n        <span onClick={handleOpenThread} className=\"message-replies-wrapper\" title={repliesTitle}>\n          <span className=\"message-replies\">\n            <AnimatedCounter text={formatIntegerCompact(lang, repliesThreadInfo.messagesCount)} />\n          </span>\n          <Icon name=\"reply-filled\" />\n        </span>\n      )}\n      {isPinned && (\n        <Icon name=\"pinned-message\" className=\"message-pinned\" />\n      )}\n      {signature && (\n        <span className=\"message-signature\">{renderText(signature)}</span>\n      )}\n      {Boolean(paidMessageStars) && (\n        <span className=\"message-price\">\n          {\n            formatStarsAsIcon(lang, paidMessageStars, {\n              asFont: true,\n              className: 'message-price-star-icon',\n              containerClassName: 'message-price-stars-container',\n            })\n          }\n        </span>\n      )}\n      <span className=\"message-time\" title={dateTitle} onMouseEnter={markActivated}>\n        {message.forwardInfo?.isImported && (\n          <>\n            <span className=\"message-imported\" onClick={handleImportedClick}>\n              {formatDateTimeToString(message.forwardInfo.date * 1000, lang.code, true)}\n            </span>\n            <span className=\"message-imported\" onClick={handleImportedClick}>{lang('MessageMetaImported')}</span>\n          </>\n        )}\n        {message.isEdited && `${lang('MessageMetaEdited')} `}\n        {message.isVideoProcessingPending && `${lang('MessageMetaApproximate')} `}\n        {date}\n      </span>\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      {renderQuickReactionButton && renderQuickReactionButton()}\n    </span>\n  );\n};\n\nexport default memo(MessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wqsZyy8u\",\"button\":\"NGmo4ADz\",\"info\":\"iFn6m6hd\",\"reason\":\"l8QfocIQ\",\"arrow\":\"ONmpzmUS\",\"incoming\":\"BfgDXljM\",\"missed\":\"Alra_BWu\",\"canceled\":\"J7xsuCAm\",\"meta\":\"rF5tkx92\",\"duration\":\"kKPKwFzu\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ApiMessageActionPhoneCall } from '../../../api/types/messageActions';\n\nimport { ARE_CALLS_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatTimeDuration } from '../../../util/dates/dateFormat';\nimport { getCallMessageKey } from './helpers/messageActions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MessagePhoneCall.module.scss';\n\ntype OwnProps = {\n  phoneCall: ApiMessageActionPhoneCall;\n  message: ApiMessage;\n  chatId: string;\n};\n\nconst MessagePhoneCall: FC<OwnProps> = ({\n  phoneCall,\n  message,\n  chatId,\n}) => {\n  const { requestMasterAndRequestCall } = getActions();\n\n  const lang = useOldLang();\n  const {\n    isVideo, reason, duration,\n  } = phoneCall;\n  const isOutgoing = message.isOutgoing;\n  const isMissed = reason === 'missed';\n  const isCancelled = reason === 'busy' || duration === undefined;\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ isVideo, userId: chatId });\n  });\n\n  const formattedDuration = useMemo(() => {\n    return phoneCall.duration ? formatTimeDuration(lang, phoneCall.duration) : undefined;\n  }, [lang, phoneCall.duration]);\n\n  const timeFormatted = formatTime(lang, message.date * 1000);\n  return (\n    <div className={styles.root}>\n      <Button\n        size=\"smaller\"\n        color=\"translucent\"\n        round\n        ripple\n        onClick={handleCall}\n        className={styles.button}\n        disabled={!ARE_CALLS_SUPPORTED}\n        ariaLabel={lang(isOutgoing ? 'CallAgain' : 'CallBack')}\n      >\n        <Icon name={isVideo ? 'video-outlined' : 'phone'} />\n      </Button>\n      <div className={styles.info}>\n        <div className={styles.reason}>{lang(getCallMessageKey(phoneCall, message.isOutgoing))}</div>\n        <div className={styles.meta}>\n          <Icon\n            name=\"arrow-right\"\n            className={buildClassName(\n              styles.arrow,\n              isMissed && styles.missed,\n              isCancelled && styles.canceled,\n              !isOutgoing && styles.incoming,\n            )}\n          />\n          <span className={styles.duration}>\n            {formattedDuration ? lang('CallMessageWithDuration', [timeFormatted, formattedDuration]) : timeFormatted}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MessagePhoneCall);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mVaSjZRJ\",\"buyButton\":\"GnKGu6D9\",\"boughtStatus\":\"IGXW5hWr\",\"star\":\"ywiOugiH\",\"buttonText\":\"gLaaVQXr\"};","import type React from '../../../lib/teact/teact';\nimport { memo, type TeactNode, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPaidMedia } from '../../../api/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { replaceWithTeact } from '../../../util/replaceWithTeact';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './PaidMediaOverlay.module.scss';\n\ntype OwnProps = {\n  paidMedia: ApiPaidMedia;\n  chatId: string;\n  messageId: number;\n  isOutgoing?: boolean;\n  children?: TeactNode;\n};\n\nconst PaidMediaOverlay = ({\n  paidMedia,\n  chatId,\n  messageId,\n  isOutgoing,\n  children,\n}: OwnProps) => {\n  const { openInvoice } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isClickable = !paidMedia.isBought;\n\n  const buttonText = useMemo(() => {\n    const value = oldLang('UnlockPaidContent', paidMedia.starsAmount);\n\n    return replaceWithTeact(\n      value, STARS_ICON_PLACEHOLDER, <StarIcon className={styles.star} type=\"gold\" size=\"adaptive\" />,\n    );\n  }, [oldLang, paidMedia]);\n\n  const handleClick = useLastCallback((e: React.MouseEvent) => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId,\n    });\n    stopEvent(e);\n  });\n\n  return (\n    <div\n      className={styles.root}\n      onClick={isClickable ? handleClick : undefined}\n    >\n      {children}\n      {isClickable && (\n        <Button\n          className={styles.buyButton}\n          color=\"dark\"\n          size=\"tiny\"\n          fluid\n          pill\n        >\n          <span className={styles.buttonText}>{buttonText}</span>\n        </Button>\n      )}\n      {paidMedia.isBought && (\n        <div className={buildClassName('message-paid-media-status', styles.boughtStatus)}>\n          {isOutgoing\n            ? formatStarsAsIcon(lang, paidMedia.starsAmount)\n            : oldLang('Chat.PaidMedia.Purchased')}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(PaidMediaOverlay);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  useEffect,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiPollAnswer, ApiPollResult } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './PollOption.scss';\n\ntype OwnProps = {\n  answer: ApiPollAnswer;\n  voteResults?: ApiPollResult[];\n  totalVoters?: number;\n  maxVotersCount?: number;\n  correctResults: string[];\n  shouldAnimate: boolean;\n};\n\nconst PollOption: FC<OwnProps> = ({\n  answer,\n  voteResults,\n  totalVoters,\n  maxVotersCount,\n  correctResults,\n  shouldAnimate,\n}) => {\n  const lang = useLang();\n  const result = voteResults && voteResults.find((r) => r.option === answer.option);\n  const correctAnswer = correctResults.length === 0 || correctResults.indexOf(answer.option) !== -1;\n  const showIcon = (correctResults.length > 0 && correctAnswer) || (result?.isChosen);\n  const answerPercent = result ? getPercentage(result.votersCount, totalVoters || 0) : 0;\n  const [finalPercent, setFinalPercent] = useState(shouldAnimate ? 0 : answerPercent);\n  const lineWidth = result ? getPercentage(result.votersCount, maxVotersCount || 0) : 0;\n  const isAnimationDoesNotStart = finalPercent !== answerPercent;\n\n  useEffect(() => {\n    if (shouldAnimate) {\n      setFinalPercent(answerPercent);\n    }\n  }, [shouldAnimate, answerPercent]);\n\n  if (!voteResults || !result) {\n    return undefined;\n  }\n\n  const lineStyle = `width: ${lineWidth}%; transform:scaleX(${isAnimationDoesNotStart ? 0 : 1})`;\n\n  return (\n    <div className=\"PollOption\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className={`poll-option-share ${answerPercent === '100' ? 'limit-width' : ''}`}>\n        {answerPercent}\n        %\n        {showIcon && (\n          <span className={buildClassName(\n            'poll-option-chosen',\n            !correctAnswer && 'wrong',\n            shouldAnimate && 'animate',\n          )}\n          >\n            <Icon name={correctAnswer ? 'check' : 'close'} className=\"poll-option-icon\" />\n          </span>\n        )}\n      </div>\n      <div className=\"poll-option-right\">\n        <div className=\"poll-option-text\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: answer.text.text,\n            entities: answer.text.entities,\n          })}\n        </div>\n        <div className={buildClassName('poll-option-answer', showIcon && !correctAnswer && 'wrong')}>\n          {shouldAnimate && (\n            <svg\n              className=\"poll-line\"\n              style={!isAnimationDoesNotStart ? 'stroke-dasharray: 100% 200%; stroke-dashoffset: -44' : ''}\n            >\n              <path d=\"M4.47 5.33v13.6a9 9 0 009 9h13\" />\n            </svg>\n          )}\n          <div\n            className=\"poll-option-line\"\n            style={lineStyle}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default PollOption;\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPoll, ApiPollAnswer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { selectPeer } from '../../../global/selectors';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getServerTime } from '../../../util/serverTime';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PollOption from './PollOption';\n\nimport './Poll.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  poll: ApiPoll;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onSendVote: (options: string[]) => void;\n};\n\nconst SOLUTION_CONTAINER_ID = '#middle-column-portals';\nconst SOLUTION_DURATION = 5000;\nconst TIMER_RADIUS = 6;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst TIMER_UPDATE_INTERVAL = 1000;\nconst NBSP = '\\u00A0';\n\nconst Poll: FC<OwnProps> = ({\n  message,\n  poll,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onSendVote,\n}) => {\n  const {\n    loadMessage, openPollResults, requestConfetti, showNotification,\n  } = getActions();\n\n  const { id: messageId, chatId } = message;\n  const { summary, results } = poll;\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [chosenOptions, setChosenOptions] = useState<string[]>([]);\n  const [wasSubmitted, setWasSubmitted] = useState<boolean>(false);\n  const [closePeriod, setClosePeriod] = useState<number>(\n    !summary.closed && summary.closeDate && summary.closeDate > 0\n      ? Math.min(summary.closeDate - getServerTime(), summary.closePeriod!)\n      : 0,\n  );\n  const countdownRef = useRef<HTMLDivElement>();\n  const timerCircleRef = useRef<SVGCircleElement>();\n  const { results: voteResults, totalVoters } = results;\n  const hasVoted = voteResults && voteResults.some((r) => r.isChosen);\n  const canVote = !summary.closed && !hasVoted;\n  const canViewResult = !canVote && summary.isPublic && Number(results.totalVoters) > 0;\n  const isMultiple = canVote && summary.multipleChoice;\n  const recentVoterIds = results.recentVoterIds;\n  const maxVotersCount = voteResults ? Math.max(...voteResults.map((r) => r.votersCount)) : totalVoters;\n  const correctResults = useMemo(() => {\n    return voteResults?.filter((r) => r.isCorrect).map((r) => r.option) || [];\n  }, [voteResults]);\n  const answers = useMemo(() => summary.answers.map((a) => ({\n    label: renderTextWithEntities({\n      text: a.text.text,\n      entities: a.text.entities,\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    }),\n    value: a.option,\n    hidden: Boolean(summary.quiz && summary.closePeriod && closePeriod <= 0),\n  })), [\n    closePeriod, observeIntersectionForLoading, observeIntersectionForPlaying,\n    summary.answers, summary.closePeriod, summary.quiz,\n  ]);\n\n  useEffect(() => {\n    const chosen = poll.results.results?.find((result) => result.isChosen);\n    if (isSubmitting && chosen) {\n      if (chosen.isCorrect) {\n        requestConfetti({});\n      }\n      setIsSubmitting(false);\n    }\n  }, [isSubmitting, poll.results.results, requestConfetti]);\n\n  useLayoutEffect(() => {\n    if (closePeriod > 0) {\n      setTimeout(() => setClosePeriod(closePeriod - 1), TIMER_UPDATE_INTERVAL);\n    }\n    if (!timerCircleRef.current) return;\n\n    if (closePeriod <= 5) {\n      countdownRef.current!.classList.add('hurry-up');\n    }\n\n    const strokeDashOffset = ((summary.closePeriod! - closePeriod) / summary.closePeriod!) * TIMER_CIRCUMFERENCE;\n    timerCircleRef.current.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  }, [closePeriod, summary.closePeriod]);\n\n  useEffect(() => {\n    if (summary.quiz && (closePeriod <= 0 || (hasVoted && !summary.closed))) {\n      loadMessage({ chatId, messageId });\n    }\n  }, [chatId, closePeriod, hasVoted, loadMessage, messageId, summary.closed, summary.quiz]);\n\n  // If the client time is not synchronized, the poll must be updated after the closePeriod time has expired.\n  useEffect(() => {\n    let timer: number | undefined;\n\n    if (summary.quiz && !summary.closed && summary.closePeriod && summary.closePeriod > 0) {\n      timer = window.setTimeout(() => {\n        loadMessage({ chatId, messageId });\n      }, summary.closePeriod * 1000);\n    }\n\n    return () => {\n      if (timer) {\n        window.clearTimeout(timer);\n      }\n    };\n  }, [canVote, chatId, loadMessage, messageId, summary.closePeriod, summary.closed, summary.quiz]);\n\n  const recentVoters = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const global = getGlobal();\n    return recentVoterIds ? recentVoterIds.reduce((result: ApiPeer[], id) => {\n      const peer = selectPeer(global, id);\n      if (peer) {\n        result.push(peer);\n      }\n\n      return result;\n    }, []) : [];\n  }, [recentVoterIds]);\n\n  const handleRadioChange = useLastCallback((option: string) => {\n    setChosenOptions([option]);\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote([option]);\n  });\n\n  const handleCheckboxChange = useLastCallback((options: string[]) => {\n    setChosenOptions(options);\n  });\n\n  const handleVoteClick = useLastCallback(() => {\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote(chosenOptions);\n  });\n\n  const handleViewResultsClick = useLastCallback(() => {\n    openPollResults({ chatId, messageId });\n  });\n\n  const showSolution = useLastCallback(() => {\n    showNotification({\n      localId: getMessageKey(message),\n      message: renderTextWithEntities({ text: poll.results.solution!, entities: poll.results.solutionEntities }),\n      duration: SOLUTION_DURATION,\n      containerSelector: SOLUTION_CONTAINER_ID,\n    });\n  });\n\n  // Show the solution to quiz if the answer was incorrect\n  useEffect(() => {\n    if (wasSubmitted && hasVoted && summary.quiz && results.results && poll.results.solution) {\n      const correctResult = results.results.find((r) => r.isChosen && r.isCorrect);\n      if (!correctResult) {\n        showSolution();\n      }\n    }\n  }, [hasVoted, wasSubmitted, results.results, summary.quiz, poll.results.solution]);\n\n  const lang = useOldLang();\n\n  function renderResultOption(answer: ApiPollAnswer) {\n    return (\n      <PollOption\n        key={answer.option}\n        shouldAnimate={wasSubmitted || !canVote}\n        answer={answer}\n        voteResults={voteResults}\n        totalVoters={totalVoters}\n        maxVotersCount={maxVotersCount}\n        correctResults={correctResults}\n      />\n    );\n  }\n\n  function renderRecentVoters() {\n    return (\n      recentVoters.length > 0 && (\n        <div className=\"poll-recent-voters\">\n          <AvatarList\n            size=\"micro\"\n            peers={recentVoters}\n          />\n        </div>\n      )\n    );\n  }\n\n  return (\n    <div className=\"Poll\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"poll-question\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n          observeIntersectionForLoading,\n          observeIntersectionForPlaying,\n        })}\n      </div>\n      <div className=\"poll-type\">\n        {lang(getPollTypeString(summary))}\n        {renderRecentVoters()}\n        {closePeriod > 0 && canVote && (\n          <div ref={countdownRef} className=\"poll-countdown\">\n            <span>{formatMediaDuration(closePeriod)}</span>\n            <svg width=\"16px\" height=\"16px\">\n              <circle\n                ref={timerCircleRef}\n                cx=\"8\"\n                cy=\"8\"\n                r={TIMER_RADIUS}\n                className=\"poll-countdown-progress\"\n                transform=\"rotate(-90, 8, 8)\"\n                stroke-dasharray={TIMER_CIRCUMFERENCE}\n                stroke-dashoffset=\"0\"\n              />\n            </svg>\n          </div>\n        )}\n        {summary.quiz && poll.results.solution && !canVote && (\n          <Button\n            round\n            size=\"tiny\"\n            color=\"translucent\"\n            className=\"poll-quiz-help\"\n            onClick={showSolution}\n            ariaLabel=\"Show Solution\"\n          >\n            <Icon name=\"lamp\" />\n          </Button>\n        )}\n      </div>\n      {canVote && (\n        <div\n          className=\"poll-answers\"\n          onClick={stopPropagation}\n        >\n          {isMultiple\n            ? (\n              <CheckboxGroup\n                options={answers}\n                selected={chosenOptions}\n                onChange={handleCheckboxChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOptions={isSubmitting ? chosenOptions : undefined}\n                isRound\n              />\n            )\n            : (\n              <RadioGroup\n                name={`poll-${messageId}`}\n                options={answers}\n                onChange={handleRadioChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOption={isSubmitting ? chosenOptions[0] : undefined}\n              />\n            )}\n        </div>\n      )}\n      {!canVote && (\n        <div className=\"poll-results\">\n          {summary.answers.map(renderResultOption)}\n        </div>\n      )}\n      {!canViewResult && !isMultiple && (\n        <div className=\"poll-voters-count\">{getReadableVotersCount(lang, summary.quiz, results.totalVoters)}</div>\n      )}\n      {isMultiple && (\n        <Button\n          isText\n          disabled={chosenOptions.length === 0}\n          size=\"tiny\"\n          onClick={handleVoteClick}\n        >\n          {lang('PollSubmitVotes')}\n        </Button>\n      )}\n      {canViewResult && (\n        <Button\n          isText\n          size=\"tiny\"\n          onClick={handleViewResultsClick}\n        >\n          {lang('PollViewResults')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nfunction getPollTypeString(summary: ApiPoll['summary']) {\n  // When we just created the poll, some properties don't exist.\n  if (typeof summary.isPublic === 'undefined') {\n    return NBSP;\n  }\n\n  if (summary.closed) {\n    return 'FinalResults';\n  }\n\n  if (summary.quiz) {\n    return summary.isPublic ? 'QuizPoll' : 'AnonymousQuizPoll';\n  }\n\n  return summary.isPublic ? 'PublicPoll' : 'AnonymousPoll';\n}\n\nfunction getReadableVotersCount(lang: OldLangFn, isQuiz: true | undefined, count?: number) {\n  if (!count) {\n    return lang(isQuiz ? 'Chat.Quiz.TotalVotesEmpty' : 'Chat.Poll.TotalVotesResultEmpty');\n  }\n\n  return lang(isQuiz ? 'Answer' : 'Vote', count, 'i');\n}\n\nfunction stopPropagation(e: React.MouseEvent<HTMLDivElement>) {\n  e.stopPropagation();\n}\n\nexport default memo(Poll);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FPceNkgD\",\"inactive\":\"hruUWBuj\",\"mirrored\":\"GydRBA08\",\"effect\":\"WMMaWlOL\"};","import type { FC } from '../../../lib/teact/teact';\nimport { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { IS_WEBM_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getStickerDimensions } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport StickerView from '../../common/StickerView';\nimport Portal from '../../ui/Portal';\n\nimport styles from './Sticker.module.scss';\n\n// https://github.com/telegramdesktop/tdesktop/blob/master/Telegram/SourceFiles/history/view/media/history_view_sticker.cpp#L42\nconst EFFECT_SIZE_MULTIPLIER = 1 + 0.245 * 2;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection: ObserveFn;\n  observeIntersectionForPlaying: ObserveFn;\n  shouldLoop?: boolean;\n  shouldPlayEffect?: boolean;\n  withEffect?: boolean;\n  onStopEffect?: VoidFunction;\n};\n\nconst Sticker: FC<OwnProps> = ({\n  message, observeIntersection, observeIntersectionForPlaying, shouldLoop,\n  shouldPlayEffect, withEffect, onStopEffect,\n}) => {\n  const { showNotification, openStickerSet } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const effectRef = useRef<HTMLDivElement>();\n\n  const sticker = message.content.sticker!;\n  const { stickerSetInfo, isVideo, hasEffect } = sticker;\n  const isMirrored = !message.isOutgoing;\n\n  const mediaHash = sticker.isPreloadedGlobally ? undefined : (\n    getStickerMediaHash(sticker, isVideo && !IS_WEBM_SUPPORTED ? 'pictogram' : 'inline')\n  );\n\n  const canLoad = useIsIntersecting(ref, observeIntersection);\n  const canPlay = useIsIntersecting(ref, observeIntersectionForPlaying);\n  const mediaHashEffect = `sticker${sticker.id}?size=f`;\n  const effectBlobUrl = useMedia(\n    mediaHashEffect,\n    !canLoad || !hasEffect || !withEffect,\n    ApiMediaFormat.BlobUrl,\n  );\n  const [isPlayingEffect, startPlayingEffect, stopPlayingEffect] = useFlag();\n\n  const handleEffectEnded = useLastCallback(() => {\n    stopPlayingEffect();\n    onStopEffect?.();\n  });\n\n  useEffect(() => {\n    if (hasEffect && withEffect && canPlay && shouldPlayEffect) {\n      startPlayingEffect();\n    }\n  }, [hasEffect, canPlay, shouldPlayEffect, startPlayingEffect, withEffect]);\n\n  const shouldRenderEffect = hasEffect && withEffect && effectBlobUrl && isPlayingEffect;\n  useOverlayPosition({\n    anchorRef: ref,\n    overlayRef: effectRef,\n    isMirrored,\n    isDisabled: !shouldRenderEffect,\n  });\n\n  const openModal = useLastCallback(() => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (hasEffect) {\n      if (isPlayingEffect || !withEffect) {\n        showNotification({\n          message: lang('PremiumStickerTooltip'),\n          action: {\n            action: 'openStickerSet',\n            payload: {\n              stickerSetInfo: sticker.stickerSetInfo,\n            },\n          },\n          actionText: lang('ViewAction'),\n        });\n        return;\n      } else if (withEffect) {\n        startPlayingEffect();\n        return;\n      }\n    }\n    openModal();\n  });\n\n  const isMemojiSticker = 'isMissing' in stickerSetInfo;\n  const { width, height } = getStickerDimensions(sticker, isMobile);\n  const className = buildClassName(\n    'media-inner',\n    styles.root,\n    isMemojiSticker && styles.inactive,\n    hasEffect && isMirrored && styles.mirrored,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      style={`width: ${width}px; height: ${height}px;`}\n      onClick={!isMemojiSticker ? handleClick : undefined}\n    >\n      <StickerView\n        containerRef={ref}\n        sticker={sticker}\n        fullMediaHash={mediaHash}\n        fullMediaClassName=\"full-media\"\n        size={width}\n        shouldLoop={shouldLoop}\n        noLoad={!canLoad}\n        noPlay={!canPlay}\n        withSharedAnimation\n      />\n      {shouldRenderEffect && (\n        <Portal>\n          <AnimatedSticker\n            ref={effectRef}\n            key={mediaHashEffect}\n            className={buildClassName(styles.effect, isMirrored && styles.mirrored)}\n            tgsUrl={effectBlobUrl}\n            size={width * EFFECT_SIZE_MULTIPLIER}\n            play\n            isLowPriority\n            noLoop\n            onEnded={handleEffectEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nexport default Sticker;\n","import { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiTypeStory,\n} from '../../../api/types';\n\nimport { selectPeerStory } from '../../../global/selectors';\n\nimport BaseStory from './BaseStory';\n\ninterface OwnProps {\n  message: ApiMessage;\n  isProtected?: boolean;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  isConnected?: boolean;\n}\n\nfunction Story({\n  message, story, isProtected, isConnected,\n}: OwnProps & StateProps) {\n  const { storyData } = message.content;\n\n  return (\n    <BaseStory\n      story={story || storyData}\n      isProtected={isProtected}\n      isConnected={isConnected}\n    />\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const { id, peerId } = message.content.storyData!;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    isConnected: global.connectionState === 'connectionStateReady',\n  };\n})(Story));\n","import { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiTypeStory, ApiUser,\n} from '../../../api/types';\n\nimport { getStoryMediaHash, getUserFirstOrLastName } from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport {\n  selectPeer,\n  selectPeerStories,\n  selectPeerStory,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\ninterface OwnProps {\n  message: ApiMessage;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  peer?: ApiPeer;\n  targetUser?: ApiUser;\n  isUnread?: boolean;\n}\n\nfunction StoryMention({\n  message, story, peer, isUnread, targetUser,\n}: OwnProps & StateProps) {\n  const { openStoryViewer } = getActions();\n\n  const lang = useOldLang();\n\n  const { storyData } = message.content;\n\n  const handleClick = useLastCallback(() => {\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  const isDeleted = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded\n    ? getStoryMediaHash(story, 'pictogram')\n    : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  useEnsureStory(storyData!.peerId, storyData!.id, story);\n\n  function getTitle() {\n    if (peer && 'isSelf' in peer && peer.isSelf) {\n      return isDeleted\n        ? lang('ExpiredStoryMentioned', getUserFirstOrLastName(targetUser))\n        : lang('StoryYouMentionedTitle', getUserFirstOrLastName(targetUser));\n    }\n\n    return isDeleted\n      ? lang('ExpiredStoryMention')\n      : lang('StoryMentionedTitle', getPeerTitle(lang, peer!));\n  }\n\n  return (\n    <div\n      className={buildClassName('action-message-story-mention', isUnread && 'is-unread', isLoaded && 'with-preview')}\n      tabIndex={0}\n      role=\"button\"\n      onClick={isLoaded ? handleClick : undefined}\n    >\n      {isLoaded && (\n        <span className=\"story-media-wrapper\">\n          {thumbUrl && (\n            <img src={thumbUrl} alt=\"\" className=\"story-media\" />\n          )}\n        </span>\n      )}\n\n      <span className=\"story-title\">{renderText(getTitle(), ['emoji', 'simple_markdown'])}</span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const { id, peerId } = message.content.storyData!;\n  const lastReadId = selectPeerStories(global, peerId)?.lastReadId;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    peer: selectPeer(global, peerId),\n    targetUser: selectUser(global, message.chatId),\n    isUnread: Boolean(lastReadId && lastReadId < id),\n  };\n})(StoryMention));\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatMember,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n  ApiThreadInfo,\n  ApiTopic,\n  ApiTypeStory,\n  ApiUser,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ActiveEmojiInteraction,\n  ChatTranslatedMessages,\n  FocusDirection,\n  IAlbum,\n  MessageListType,\n  ScrollTargetPosition,\n  ThemeKey,\n  ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport type { OnIntersectPinnedMessage } from '../hooks/usePinnedMessage';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { EMOJI_STATUS_LOOP_LIMIT, MESSAGE_APPEARANCE_DELAY } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getIsDownloading,\n  getMainUsername,\n  getMessageContent,\n  getMessageCustomShape,\n  getMessageDownloadableMedia,\n  getMessageHtmlId,\n  getMessageSingleCustomEmoji,\n  getMessageSingleRegularEmoji,\n  hasMessageText,\n  hasMessageTtl,\n  isAnonymousForwardsChat,\n  isAnonymousOwnMessage,\n  isChatChannel,\n  isChatGroup,\n  isChatPublic,\n  isGeoLiveExpired,\n  isMessageLocal,\n  isMessageTranslatable,\n  isOwnMessage,\n  isReplyToMessage,\n  isSystemBot,\n} from '../../../global/helpers';\nimport { getPeerFullTitle } from '../../../global/helpers/peers';\nimport { getMessageReplyInfo, getStoryReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectActiveDownloads,\n  selectAnimatedEmoji,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectCanReplyToMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatTranslations,\n  selectCurrentMiddleSearch,\n  selectDefaultReaction,\n  selectForwardedSender,\n  selectIsChatProtected,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsDocumentGroupSelected,\n  selectIsInSelectMode,\n  selectIsMessageFocused,\n  selectIsMessageProtected,\n  selectIsMessageSelected,\n  selectMessageIdsByGroupId,\n  selectMessageLastPlaybackTimestamp,\n  selectMessageTimestampableDuration,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectPollFromMessage,\n  selectReplyMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectSender,\n  selectSenderFromHeader,\n  selectShouldDetectChatLanguage,\n  selectShouldLoopStickers,\n  selectTabState,\n  selectTheme,\n  selectThreadInfo,\n  selectTopicFromMessage,\n  selectUploadProgress,\n  selectUser,\n} from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_ANDROID, IS_ELECTRON, IS_TRANSLATION_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport stopEvent from '../../../util/stopEvent';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport { calculateDimensionsForMessageMedia, getStickerDimensions, REM } from '../../common/helpers/mediaDimensions';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\nimport renderText from '../../common/helpers/renderText';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\nimport { buildContentClassName } from './helpers/buildContentClassName';\nimport { calculateAlbumLayout } from './helpers/calculateAlbumLayout';\nimport getSingularPaidMedia from './helpers/getSingularPaidMedia';\nimport { calculateMediaDimensions, getMinMediaWidth, MIN_MEDIA_WIDTH_WITH_TEXT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useFlag from '../../../hooks/useFlag';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useMessageResizeObserver from '../../../hooks/useResizeMessageObserver';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useTextLanguage from '../../../hooks/useTextLanguage';\nimport useDetectChatLanguage from './hooks/useDetectChatLanguage';\nimport useFocusMessage from './hooks/useFocusMessage';\nimport useInnerHandlers from './hooks/useInnerHandlers';\nimport useMessageTranslation from './hooks/useMessageTranslation';\nimport useOuterHandlers from './hooks/useOuterHandlers';\n\nimport Audio from '../../common/Audio';\nimport Avatar from '../../common/Avatar';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Document from '../../common/Document';\nimport DotAnimation from '../../common/DotAnimation';\nimport EmbeddedMessage from '../../common/embedded/EmbeddedMessage';\nimport EmbeddedStory from '../../common/embedded/EmbeddedStory';\nimport FakeIcon from '../../common/FakeIcon';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport MessageText from '../../common/MessageText';\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport TopicChip from '../../common/TopicChip';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Button from '../../ui/Button';\nimport Album from './Album';\nimport AnimatedCustomEmoji from './AnimatedCustomEmoji';\nimport AnimatedEmoji from './AnimatedEmoji';\nimport CommentButton from './CommentButton';\nimport Contact from './Contact';\nimport ContextMenuContainer from './ContextMenuContainer.async';\nimport FactCheck from './FactCheck';\nimport Game from './Game';\nimport Giveaway from './Giveaway';\nimport InlineButtons from './InlineButtons';\nimport Invoice from './Invoice';\nimport InvoiceMediaPreview from './InvoiceMediaPreview';\nimport Location from './Location';\nimport MessageAppendix from './MessageAppendix';\nimport MessageEffect from './MessageEffect';\nimport MessageMeta from './MessageMeta';\nimport MessagePhoneCall from './MessagePhoneCall';\nimport PaidMediaOverlay from './PaidMediaOverlay';\nimport Photo from './Photo';\nimport Poll from './Poll';\nimport Reactions from './reactions/Reactions';\nimport RoundVideo from './RoundVideo';\nimport Sticker from './Sticker';\nimport Story from './Story';\nimport StoryMention from './StoryMention';\nimport Video from './Video';\nimport WebPage from './WebPage';\n\nimport './Message.scss';\n\ntype MessagePositionProperties = {\n  isFirstInGroup: boolean;\n  isLastInGroup: boolean;\n  isFirstInDocumentGroup: boolean;\n  isLastInDocumentGroup: boolean;\n  isLastInList: boolean;\n};\n\ntype OwnProps =\n  {\n    message: ApiMessage;\n    observeIntersectionForBottom?: ObserveFn;\n    observeIntersectionForLoading?: ObserveFn;\n    observeIntersectionForPlaying?: ObserveFn;\n    album?: IAlbum;\n    noAvatars?: boolean;\n    withAvatar?: boolean;\n    withSenderName?: boolean;\n    threadId: ThreadId;\n    messageListType: MessageListType;\n    noComments: boolean;\n    noReplies: boolean;\n    appearanceOrder: number;\n    isJustAdded: boolean;\n    memoFirstUnreadIdRef?: { current: number | undefined };\n    getIsMessageListReady?: Signal<boolean>;\n    onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n  }\n  & MessagePositionProperties;\n\ntype StateProps = {\n  theme: ThemeKey;\n  forceSenderName?: boolean;\n  sender?: ApiPeer;\n  canShowSender: boolean;\n  originSender?: ApiPeer;\n  botSender?: ApiUser;\n  isThreadTop?: boolean;\n  shouldHideReply?: boolean;\n  replyMessage?: ApiMessage;\n  replyMessageSender?: ApiPeer;\n  replyMessageForwardSender?: ApiPeer;\n  replyMessageChat?: ApiChat;\n  isReplyPrivate?: boolean;\n  replyStory?: ApiTypeStory;\n  storySender?: ApiPeer;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  uploadProgress?: number;\n  isInDocumentGroup: boolean;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  focusedQuote?: string;\n  focusedQuoteOffset?: number;\n  noFocusHighlight?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n  isResizingContainer?: boolean;\n  isForwarding?: boolean;\n  isChatWithSelf?: boolean;\n  isRepliesChat?: boolean;\n  isAnonymousForwards?: boolean;\n  isChannel?: boolean;\n  isGroup?: boolean;\n  canReply?: boolean;\n  highlight?: string;\n  animatedEmoji?: string;\n  animatedCustomEmoji?: string;\n  hasActiveReactions?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  isGroupSelected?: boolean;\n  isDownloading?: boolean;\n  threadId?: ThreadId;\n  isPinnedList?: boolean;\n  isPinned?: boolean;\n  canAutoLoadMedia?: boolean;\n  canAutoPlayMedia?: boolean;\n  hasLinkedChat?: boolean;\n  shouldLoopStickers?: boolean;\n  autoLoadFileMaxSizeMb: number;\n  repliesThreadInfo?: ApiThreadInfo;\n  reactionMessage?: ApiMessage;\n  availableReactions?: ApiAvailableReaction[];\n  defaultReaction?: ApiReaction;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  hasUnreadReaction?: boolean;\n  isTranscribing?: boolean;\n  transcribedText?: string;\n  isTranscriptionError?: boolean;\n  isPremium: boolean;\n  senderAdminMember?: ApiChatMember;\n  messageTopic?: ApiTopic;\n  hasTopicChip?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  areTranslationsEnabled?: boolean;\n  shouldDetectChatLanguage?: boolean;\n  requestedTranslationLanguage?: string;\n  requestedChatTranslationLanguage?: string;\n  withAnimatedEffects?: boolean;\n  webPageStory?: ApiTypeStory;\n  isConnected: boolean;\n  isLoadingComments?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  senderBoosts?: number;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  canTranscribeVoice?: boolean;\n  viaBusinessBot?: ApiUser;\n  effect?: ApiAvailableEffect;\n  poll?: ApiPoll;\n  maxTimestamp?: number;\n  lastPlaybackTimestamp?: number;\n  paidMessageStars?: number;\n  isChatWithUser?: boolean;\n  isAccountFrozen?: boolean;\n};\n\ntype MetaPosition =\n  'in-text'\n  | 'standalone'\n  | 'none';\ntype ReactionsPosition =\n  'inside'\n  | 'outside'\n  | 'none';\ntype QuickReactionPosition =\n  'in-content'\n  | 'in-meta';\n\nconst NBSP = '\\u00A0';\nconst NO_MEDIA_CORNERS_THRESHOLD = 18;\nconst QUICK_REACTION_SIZE = 1.75 * REM;\nconst EXTRA_SPACE_FOR_REACTIONS = 2.25 * REM;\n\nconst Message: FC<OwnProps & StateProps> = ({\n  message,\n  observeIntersectionForBottom,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  album,\n  noAvatars,\n  withAvatar,\n  withSenderName,\n  noComments,\n  noReplies,\n  appearanceOrder,\n  isJustAdded,\n  isFirstInGroup,\n  isPremium,\n  isLastInGroup,\n  isFirstInDocumentGroup,\n  isLastInDocumentGroup,\n  isTranscribing,\n  transcribedText,\n  isLastInList,\n  theme,\n  forceSenderName,\n  sender,\n  canShowSender,\n  originSender,\n  botSender,\n  isThreadTop,\n  shouldHideReply,\n  replyMessage,\n  replyMessageSender,\n  replyMessageForwardSender,\n  replyMessageChat,\n  replyStory,\n  isReplyPrivate,\n  storySender,\n  outgoingStatus,\n  uploadProgress,\n  isInDocumentGroup,\n  isLoadingComments,\n  isProtected,\n  isChatProtected,\n  isFocused,\n  focusDirection,\n  focusedQuote,\n  focusedQuoteOffset,\n  noFocusHighlight,\n  scrollTargetPosition,\n  isResizingContainer,\n  isForwarding,\n  isChatWithSelf,\n  isRepliesChat,\n  isAnonymousForwards,\n  isChannel,\n  isGroup,\n  canReply,\n  highlight,\n  animatedEmoji,\n  animatedCustomEmoji,\n  hasActiveReactions,\n  hasLinkedChat,\n  isInSelectMode,\n  isSelected,\n  isGroupSelected,\n  threadId,\n  reactionMessage,\n  availableReactions,\n  defaultReaction,\n  activeEmojiInteractions,\n  messageListType,\n  isPinnedList,\n  isPinned,\n  isDownloading,\n  canAutoLoadMedia,\n  canAutoPlayMedia,\n  shouldLoopStickers,\n  autoLoadFileMaxSizeMb,\n  repliesThreadInfo,\n  hasUnreadReaction,\n  memoFirstUnreadIdRef,\n  senderAdminMember,\n  messageTopic,\n  hasTopicChip,\n  chatTranslations,\n  areTranslationsEnabled,\n  shouldDetectChatLanguage,\n  requestedTranslationLanguage,\n  requestedChatTranslationLanguage,\n  withAnimatedEffects,\n  webPageStory,\n  isConnected,\n  getIsMessageListReady,\n  shouldWarnAboutSvg,\n  senderBoosts,\n  tags,\n  canTranscribeVoice,\n  viaBusinessBot,\n  effect,\n  poll,\n  maxTimestamp,\n  lastPlaybackTimestamp,\n  onIntersectPinnedMessage,\n  paidMessageStars,\n  isChatWithUser,\n  isAccountFrozen,\n}) => {\n  const {\n    toggleMessageSelection,\n    clickBotInlineButton,\n    disableContextMenuHint,\n    animateUnreadReaction,\n    focusLastMessage,\n    markMentionsRead,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const bottomMarkerRef = useRef<HTMLDivElement>();\n  const quickReactionRef = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n\n  const [isTranscriptionHidden, setTranscriptionHidden] = useState(false);\n  const [isPlayingSnapAnimation, setIsPlayingSnapAnimation] = useState(false);\n  const [isPlayingDeleteAnimation, setIsPlayingDeleteAnimation] = useState(false);\n  const [shouldPlayEffect, requestEffect, hideEffect] = useFlag();\n  const { isMobile, isTouchScreen } = useAppLayout();\n\n  useOnIntersect(bottomMarkerRef, observeIntersectionForBottom);\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    contextMenuTarget,\n    handleBeforeContextMenu,\n    handleContextMenu: onContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(\n    ref,\n    (isTouchScreen && isInSelectMode) || isAccountFrozen,\n    !IS_ELECTRON,\n    IS_ANDROID,\n    getIsMessageListReady,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      disableContextMenuHint();\n    }\n  }, [isContextMenuOpen, disableContextMenuHint]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * MESSAGE_APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  useShowTransition({\n    ref,\n    isOpen: isShown || isJustAdded,\n    noMountTransition: noAppearanceAnimation && !isJustAdded,\n    className: false,\n  });\n\n  const {\n    id: messageId, chatId, forwardInfo, viaBotId, isTranscriptionError, factCheck,\n  } = message;\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      const id = album ? album.mainMessage.id : messageId;\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [id] });\n    }\n  });\n\n  const isLocal = isMessageLocal(message);\n  const isOwn = isOwnMessage(message);\n  const isScheduled = messageListType === 'scheduled' || message.isScheduled;\n  const hasMessageReply = isReplyToMessage(message) && !shouldHideReply;\n\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo, audio,\n    voice, document, sticker, contact,\n    webPage, invoice, location,\n    action, game, storyData, giveaway,\n    giveawayResults,\n  } = getMessageContent(message);\n\n  const messageReplyInfo = getMessageReplyInfo(message);\n  const storyReplyInfo = getStoryReplyInfo(message);\n\n  const withVoiceTranscription = Boolean(!isTranscriptionHidden && (isTranscriptionError || transcribedText));\n\n  const hasStoryReply = Boolean(storyReplyInfo);\n  const hasThread = Boolean(repliesThreadInfo) && messageListType === 'thread';\n  const isCustomShape = !withVoiceTranscription && getMessageCustomShape(message);\n  const hasAnimatedEmoji = isCustomShape && (animatedEmoji || animatedCustomEmoji);\n  const hasReactions = reactionMessage?.reactions && !areReactionsEmpty(reactionMessage.reactions);\n  const asForwarded = (\n    forwardInfo\n    && (!isChatWithSelf || isScheduled)\n    && !isRepliesChat\n    && !forwardInfo.isLinkedChannelPost\n    && !isAnonymousForwards\n    && !botSender\n  ) || Boolean(storyData && !storyData.isMention);\n  const canShowSenderBoosts = Boolean(senderBoosts) && !asForwarded && isFirstInGroup;\n  const isStoryMention = storyData?.isMention;\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isAlbum = Boolean(album)\n    && (\n      (album.isPaidMedia && paidMedia!.extendedMedia.length > 1)\n      || album.messages.length > 1\n    ) && !album.messages.some((msg) => Object.keys(msg.content).length === 0);\n  const isInDocumentGroupNotFirst = isInDocumentGroup && !isFirstInDocumentGroup;\n  const isInDocumentGroupNotLast = isInDocumentGroup && !isLastInDocumentGroup;\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n  const canShowActionButton = (\n    !(isContextMenuShown || isInSelectMode || isForwarding)\n    && !isInDocumentGroupNotLast\n    && !isStoryMention\n    && !((sticker || hasAnimatedEmoji) && asForwarded)\n  );\n  const canForward = isChannel && !isScheduled && message.isForwardingAllowed\n    && !isChatProtected;\n  const canFocus = Boolean(isPinnedList\n    || (forwardInfo\n      && (forwardInfo.isChannelPost || isChatWithSelf || isRepliesChat || isAnonymousForwards)\n      && forwardInfo.fromMessageId\n    ));\n\n  const hasFactCheck = Boolean(factCheck?.text);\n\n  const hasForwardedCustomShape = asForwarded && isCustomShape;\n  const hasSubheader = hasTopicChip || hasMessageReply || hasStoryReply || hasForwardedCustomShape;\n\n  const selectMessage = useLastCallback((e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => {\n    if (isAccountFrozen) return;\n    toggleMessageSelection({\n      messageId,\n      groupedId,\n      ...(e?.shiftKey && { withShift: true }),\n      ...(isAlbum && { childMessageIds: album.messages.map(({ id }) => id) }),\n    });\n  });\n\n  const messageSender = canShowSender ? sender : undefined;\n\n  const shouldPreferOriginSender = forwardInfo\n    && (isChatWithSelf || isRepliesChat || isAnonymousForwards || !messageSender);\n  const avatarPeer = shouldPreferOriginSender ? originSender : messageSender;\n\n  const messageColorPeer = asForwarded ? originSender : sender;\n  const noUserColors = isOwn && !isCustomShape;\n\n  const senderPeer = (forwardInfo || storyData) ? originSender : messageSender;\n  const hasTtl = hasMessageTtl(message);\n\n  const {\n    handleMouseDown,\n    handleClick,\n    handleContextMenu,\n    handleDoubleClick,\n    handleContentDoubleClick,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  } = useOuterHandlers(\n    selectMessage,\n    ref,\n    messageId,\n    Boolean(isInSelectMode),\n    Boolean(canReply),\n    Boolean(isProtected),\n    onContextMenu,\n    handleBeforeContextMenu,\n    chatId,\n    isContextMenuShown,\n    quickReactionRef,\n    isInDocumentGroupNotLast,\n    getIsMessageListReady,\n  );\n\n  const {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleMediaClick,\n    handleDocumentClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll,\n    handleTopicChipClick,\n    handleStoryClick,\n  } = useInnerHandlers({\n    lang,\n    selectMessage,\n    message,\n    chatId,\n    threadId,\n    isInDocumentGroup,\n    asForwarded,\n    isScheduled,\n    album,\n    avatarPeer,\n    senderPeer,\n    botSender,\n    messageTopic,\n    isTranslatingChat: Boolean(requestedChatTranslationLanguage),\n    story: replyStory && 'content' in replyStory ? replyStory : undefined,\n    isReplyPrivate,\n    isRepliesChat,\n    isSavedMessages: isChatWithSelf,\n    lastPlaybackTimestamp,\n  });\n\n  const handleEffectClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    requestEffect();\n  });\n\n  useEffect(() => {\n    if (!isLastInList) {\n      return;\n    }\n\n    if (withVoiceTranscription && transcribedText) {\n      focusLastMessage();\n    }\n  }, [focusLastMessage, isLastInList, transcribedText, withVoiceTranscription]);\n\n  useEffect(() => {\n    const element = ref.current;\n    const isPartialAlbumDelete = message.isInAlbum && album?.messages.some((msg) => !msg.isDeleting);\n    if (message.isDeleting && element && !isPartialAlbumDelete) {\n      if (animateSnap(element)) {\n        setIsPlayingSnapAnimation(true);\n      } else {\n        setIsPlayingDeleteAnimation(true);\n      }\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- Only start animation on `isDeleting` change\n  }, [message.isDeleting]);\n\n  const textMessage = album?.hasMultipleCaptions ? undefined : (album?.captionMessage || message);\n  const hasTextContent = textMessage && hasMessageText(textMessage);\n  const hasText = hasTextContent || hasFactCheck;\n\n  const containerClassName = buildClassName(\n    'Message message-list-item',\n    isFirstInGroup && 'first-in-group',\n    isProtected && 'hide-on-print',\n    isProtected && !hasTextContent ? 'is-protected' : 'allow-selection',\n    isLastInGroup && 'last-in-group',\n    isFirstInDocumentGroup && 'first-in-document-group',\n    isLastInDocumentGroup && 'last-in-document-group',\n    isLastInList && 'last-in-list',\n    isOwn && 'own',\n    Boolean(message.viewsCount) && 'has-views',\n    message.isEdited && 'was-edited',\n    hasMessageReply && 'has-reply',\n    isContextMenuOpen && 'has-menu-open',\n    isFocused && !noFocusHighlight && 'focused',\n    isForwarding && 'is-forwarding',\n    isPlayingDeleteAnimation && 'is-deleting',\n    isPlayingSnapAnimation && 'is-dissolving',\n    isInDocumentGroup && 'is-in-document-group',\n    isAlbum && 'is-album',\n    message.hasUnreadMention && 'has-unread-mention',\n    isSelected && 'is-selected',\n    isInSelectMode && 'is-in-selection-mode',\n    isThreadTop && !withAvatar && 'is-thread-top',\n    Boolean(message.inlineButtons) && 'has-inline-buttons',\n    isSwiped && 'is-swiped',\n    isJustAdded && 'is-just-added',\n    (hasActiveReactions || shouldPlayEffect) && 'has-active-effect',\n    isStoryMention && 'is-story-mention',\n    !canShowActionButton && 'no-action-button',\n  );\n\n  const text = textMessage && getMessageContent(textMessage).text;\n  const isInvertedMedia = Boolean(message.isInvertedMedia);\n\n  const { replyToMsgId, replyToPeerId } = messageReplyInfo || {};\n  const { peerId: storyReplyPeerId, storyId: storyReplyId } = storyReplyInfo || {};\n\n  useEffect(() => {\n    if ((sticker?.hasEffect || effect) && ((\n      memoFirstUnreadIdRef?.current && messageId >= memoFirstUnreadIdRef.current\n    ) || isLocal)) {\n      requestEffect();\n    }\n  }, [effect, isLocal, memoFirstUnreadIdRef, messageId, sticker?.hasEffect]);\n\n  const detectedLanguage = useTextLanguage(\n    text?.text,\n    !(areTranslationsEnabled && shouldDetectChatLanguage),\n    getIsMessageListReady,\n  );\n  useDetectChatLanguage(message, detectedLanguage, !shouldDetectChatLanguage, getIsMessageListReady);\n\n  const shouldTranslate = isMessageTranslatable(message, !requestedChatTranslationLanguage);\n  const { isPending: isTranslationPending, translatedText } = useMessageTranslation(\n    chatTranslations, chatId, shouldTranslate ? messageId : undefined, requestedTranslationLanguage,\n  );\n  // Used to display previous result while new one is loading\n  const previousTranslatedText = usePreviousDeprecated(translatedText, Boolean(shouldTranslate));\n\n  const currentTranslatedText = translatedText || previousTranslatedText;\n\n  const phoneCall = action?.type === 'phoneCall' ? action : undefined;\n\n  const isMediaWithCommentButton = (repliesThreadInfo || (hasLinkedChat && isChannel && isLocal))\n    && !isInDocumentGroupNotLast\n    && messageListType === 'thread'\n    && !noComments;\n  const withCommentButton = repliesThreadInfo?.isCommentsInfo\n    && !isInDocumentGroupNotLast && messageListType === 'thread'\n    && !noComments;\n  const withQuickReactionButton = !isTouchScreen && !phoneCall && !isInSelectMode && defaultReaction\n    && !isInDocumentGroupNotLast && !isStoryMention && !hasTtl && !isAccountFrozen;\n\n  const hasOutsideReactions = !withVoiceTranscription && hasReactions\n    && (isCustomShape || ((photo || video || storyData || (location?.mediaType === 'geo')) && !hasText));\n\n  const contentClassName = buildContentClassName(message, album, {\n    poll,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread: hasThread && !noComments,\n    forceSenderName,\n    hasCommentCounter: hasThread && repliesThreadInfo.messagesCount > 0,\n    hasCommentButton: withCommentButton,\n    hasActionButton: canForward || canFocus,\n    hasReactions,\n    isGeoLiveActive: location?.mediaType === 'geoLive' && !isGeoLiveExpired(message),\n    withVoiceTranscription,\n    peerColorClass: getPeerColorClass(messageColorPeer, noUserColors, true),\n    hasOutsideReactions,\n  });\n\n  const withAppendix = contentClassName.includes('has-appendix');\n  const emojiSize = getCustomEmojiSize(message.emojiOnlyCount);\n\n  const paidMessageStarsInMeta = !isChatWithUser\n    ? (isAlbum && paidMessageStars ? album.messages.length * paidMessageStars : paidMessageStars)\n    : undefined;\n\n  let metaPosition!: MetaPosition;\n  if (phoneCall) {\n    metaPosition = 'none';\n  } else if (isInDocumentGroupNotLast) {\n    metaPosition = 'none';\n  } else if (hasText && !webPage && !emojiSize && !isInvertedMedia) {\n    metaPosition = 'in-text';\n  } else if (isInvertedMedia && !emojiSize && (hasFactCheck || webPage)) {\n    metaPosition = 'in-text';\n  } else {\n    metaPosition = 'standalone';\n  }\n\n  let reactionsPosition!: ReactionsPosition;\n  if (hasReactions) {\n    if (hasOutsideReactions) {\n      reactionsPosition = 'outside';\n    } else if (asForwarded) {\n      metaPosition = 'standalone';\n      reactionsPosition = 'inside';\n    } else {\n      reactionsPosition = 'inside';\n    }\n  } else {\n    reactionsPosition = 'none';\n  }\n\n  const quickReactionPosition: QuickReactionPosition = isCustomShape ? 'in-meta' : 'in-content';\n\n  useEnsureMessage(\n    replyToPeerId || chatId,\n    replyToMsgId,\n    replyMessage,\n    message.id,\n    shouldHideReply || isReplyPrivate,\n  );\n\n  useEnsureStory(\n    storyReplyPeerId || chatId,\n    storyReplyId,\n    replyStory,\n  );\n\n  useFocusMessage({\n    elementRef: ref,\n    chatId,\n    isFocused,\n    focusDirection,\n    noFocusHighlight,\n    isResizingContainer,\n    isJustAdded,\n    isQuote: Boolean(focusedQuote),\n    scrollTargetPosition,\n  });\n\n  const viaBusinessBotTitle = viaBusinessBot ? getPeerFullTitle(lang, viaBusinessBot) : undefined;\n\n  const canShowPostAuthor = !message.senderId;\n  const signature = viaBusinessBotTitle || (canShowPostAuthor && message.postAuthorTitle)\n    || ((asForwarded || isChatWithSelf) && forwardInfo?.postAuthorTitle)\n    || undefined;\n\n  useMessageResizeObserver(ref, isLastInList);\n\n  useEffect(() => {\n    const bottomMarker = bottomMarkerRef.current;\n    if (!bottomMarker || !isElementInViewport(bottomMarker)) return;\n\n    if (hasUnreadReaction) {\n      animateUnreadReaction({ messageIds: [messageId] });\n    }\n\n    let unreadMentionIds: number[] = [];\n    if (message.hasUnreadMention) {\n      unreadMentionIds = [messageId];\n    }\n\n    if (album) {\n      unreadMentionIds = album.messages.filter((msg) => msg.hasUnreadMention).map((msg) => msg.id);\n    }\n\n    if (unreadMentionIds.length) {\n      markMentionsRead({ chatId, messageIds: unreadMentionIds });\n    }\n  }, [hasUnreadReaction, album, chatId, messageId, animateUnreadReaction, message.hasUnreadMention]);\n\n  const albumLayout = useMemo(() => {\n    return isAlbum\n      ? calculateAlbumLayout(isOwn, Boolean(noAvatars), album, isMobile)\n      : undefined;\n  }, [isAlbum, isOwn, noAvatars, album, isMobile]);\n\n  const extraPadding = asForwarded && !isCustomShape ? 28 : 0;\n\n  const sizeCalculations = useMemo(() => {\n    let calculatedWidth;\n    let contentWidth: number | undefined;\n    let noMediaCorners = false;\n    let style = '';\n    let reactionsMaxWidth;\n\n    if (!isAlbum && (photo || video || invoice?.extendedMedia)) {\n      let width: number | undefined;\n      if (photo || video) {\n        const media = (photo || video);\n        if (media && !isRoundVideo) {\n          width = calculateMediaDimensions({\n            media,\n            isOwn,\n            asForwarded,\n            noAvatars,\n            isMobile,\n          }).width;\n        }\n      } else if (invoice?.extendedMedia && (\n        invoice.extendedMedia.width && invoice.extendedMedia.height\n      )) {\n        const { width: previewWidth, height: previewHeight } = invoice.extendedMedia;\n        width = calculateDimensionsForMessageMedia({\n          width: previewWidth,\n          height: previewHeight,\n          fromOwnMessage: isOwn,\n          asForwarded,\n          noAvatars,\n          isMobile,\n        }).width;\n      }\n\n      if (width) {\n        if (width < MIN_MEDIA_WIDTH_WITH_TEXT) {\n          contentWidth = width;\n        }\n        calculatedWidth = Math.max(getMinMediaWidth(text?.text, isMediaWithCommentButton), width);\n        if (!asForwarded && invoice?.extendedMedia && calculatedWidth - width > NO_MEDIA_CORNERS_THRESHOLD) {\n          noMediaCorners = true;\n        }\n      }\n    } else if (albumLayout) {\n      calculatedWidth = Math.max(\n        getMinMediaWidth(text?.text, isMediaWithCommentButton), albumLayout.containerStyle.width,\n      );\n      if (calculatedWidth - albumLayout.containerStyle.width > NO_MEDIA_CORNERS_THRESHOLD) {\n        noMediaCorners = true;\n      }\n    }\n\n    if (calculatedWidth) {\n      style = `width: ${calculatedWidth}px`;\n      reactionsMaxWidth = calculatedWidth + EXTRA_SPACE_FOR_REACTIONS;\n    } else if (sticker && !hasSubheader) {\n      const { width } = getStickerDimensions(sticker, isMobile);\n      style = `width: ${width + extraPadding}px`;\n      reactionsMaxWidth = width + EXTRA_SPACE_FOR_REACTIONS;\n    }\n\n    return {\n      contentWidth, noMediaCorners, style, reactionsMaxWidth,\n    };\n  }, [\n    albumLayout, asForwarded, extraPadding, hasSubheader, invoice?.extendedMedia, isAlbum, isMediaWithCommentButton,\n    isMobile, isOwn, noAvatars, photo, sticker, text?.text, video, isRoundVideo,\n  ]);\n\n  const {\n    contentWidth, noMediaCorners, style, reactionsMaxWidth,\n  } = sizeCalculations;\n\n  function renderMessageText(isForAnimation?: boolean) {\n    if (!textMessage) return undefined;\n    return (\n      <MessageText\n        messageOrStory={textMessage}\n        translatedText={requestedTranslationLanguage ? currentTranslatedText : undefined}\n        isForAnimation={isForAnimation}\n        focusedQuote={focusedQuote}\n        focusedQuoteOffset={focusedQuoteOffset}\n        emojiSize={emojiSize}\n        highlight={highlight}\n        isProtected={isProtected}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        withTranslucentThumbs={isCustomShape}\n        isInSelectMode={isInSelectMode}\n        canBeEmpty={hasFactCheck}\n        maxTimestamp={maxTimestamp}\n        threadId={threadId}\n      />\n    );\n  }\n\n  const renderQuickReactionButton = useCallback(() => {\n    if (!defaultReaction) return undefined;\n\n    return (\n      <div\n        className={buildClassName('quick-reaction', isQuickReactionVisible && !hasActiveReactions && 'visible')}\n        onClick={handleSendQuickReaction}\n        ref={quickReactionRef}\n      >\n        <ReactionStaticEmoji\n          reaction={defaultReaction}\n          size={QUICK_REACTION_SIZE}\n          availableReactions={availableReactions}\n          observeIntersection={observeIntersectionForPlaying}\n        />\n      </div>\n    );\n  }, [\n    hasActiveReactions, availableReactions, defaultReaction, handleSendQuickReaction, isQuickReactionVisible,\n    observeIntersectionForPlaying,\n  ]);\n\n  function renderReactionsAndMeta() {\n    const meta = (\n      <MessageMeta\n        message={message}\n        isPinned={isPinned}\n        withFullDate={isChatWithSelf && !isOwn}\n        noReplies={noReplies}\n        repliesThreadInfo={repliesThreadInfo}\n        outgoingStatus={outgoingStatus}\n        signature={signature}\n        withReactionOffset={reactionsPosition === 'inside'}\n        renderQuickReactionButton={\n          withQuickReactionButton && quickReactionPosition === 'in-meta' ? renderQuickReactionButton : undefined\n        }\n        availableReactions={availableReactions}\n        isTranslated={Boolean(requestedTranslationLanguage ? currentTranslatedText : undefined)}\n        effectEmoji={effect?.emoticon}\n        onClick={handleMetaClick}\n        onEffectClick={handleEffectClick}\n        onTranslationClick={handleTranslationClick}\n        onOpenThread={handleOpenThread}\n        paidMessageStars={paidMessageStarsInMeta}\n      />\n    );\n\n    if (reactionsPosition !== 'inside') {\n      return meta;\n    }\n\n    return (\n      <Reactions\n        message={reactionMessage!}\n        threadId={threadId}\n        metaChildren={meta}\n        observeIntersection={observeIntersectionForPlaying}\n        noRecentReactors={isChannel}\n        tags={tags}\n        isCurrentUserPremium={isPremium}\n        isAccountFrozen={isAccountFrozen}\n      />\n    );\n  }\n\n  function renderContent() {\n    const className = buildClassName(\n      'content-inner',\n      asForwarded && 'forwarded-message',\n      hasForwardedCustomShape && 'forwarded-custom-shape',\n      hasSubheader && 'with-subheader',\n      noMediaCorners && 'no-media-corners',\n    );\n    const hasCustomAppendix = isLastInGroup\n      && (!hasText || (isInvertedMedia && !hasFactCheck && !hasReactions)) && !withCommentButton;\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n    const shouldReadMedia = !hasTtl || !isOwn || isChatWithSelf;\n\n    return (\n      <div className={className} onDoubleClick={handleContentDoubleClick} dir=\"auto\">\n        {!asForwarded && shouldRenderSenderName() && renderSenderName()}\n        {hasSubheader && (\n          <div className=\"message-subheader\">\n            {hasTopicChip && (\n              <TopicChip\n                topic={messageTopic}\n                onClick={handleTopicChipClick}\n                className=\"message-topic\"\n              />\n            )}\n            {hasForwardedCustomShape && (\n              <div className=\"forward-custom-shape-subheader\">\n                <div className=\"message-title\">\n                  {renderForwardTitle()}\n                </div>\n                {renderSenderName(true, true)}\n              </div>\n            )}\n            {hasMessageReply && (\n              <EmbeddedMessage\n                message={replyMessage}\n                replyInfo={messageReplyInfo}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                sender={replyMessageSender}\n                senderChat={replyMessageChat}\n                forwardSender={replyMessageForwardSender}\n                chatTranslations={chatTranslations}\n                requestedChatTranslationLanguage={requestedChatTranslationLanguage}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                observeIntersectionForPlaying={observeIntersectionForPlaying}\n                onClick={handleReplyClick}\n              />\n            )}\n            {hasStoryReply && (\n              <EmbeddedStory\n                story={replyStory}\n                sender={storySender}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                onClick={handleStoryClick}\n              />\n            )}\n          </div>\n        )}\n        {sticker && observeIntersectionForLoading && observeIntersectionForPlaying && (\n          <Sticker\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            shouldLoop={shouldLoopStickers}\n            shouldPlayEffect={shouldPlayEffect}\n            withEffect={withAnimatedEffects}\n            onStopEffect={hideEffect}\n          />\n        )}\n        {hasAnimatedEmoji && animatedCustomEmoji && (\n          <AnimatedCustomEmoji\n            customEmojiId={animatedCustomEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {hasAnimatedEmoji && animatedEmoji && (\n          <AnimatedEmoji\n            emoji={animatedEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {withAnimatedEffects && effect && !isLocal && (\n          <MessageEffect\n            shouldPlay={shouldPlayEffect}\n            messageId={message.id}\n            isMirrored={!message.isOutgoing}\n            effect={effect}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onStop={hideEffect}\n          />\n        )}\n        {phoneCall && (\n          <MessagePhoneCall\n            message={message}\n            phoneCall={phoneCall}\n            chatId={chatId}\n          />\n        )}\n        {!isAlbum && isRoundVideo && !withVoiceTranscription && (\n          <RoundVideo\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            isDownloading={isDownloading}\n            onReadMedia={shouldReadMedia ? handleReadMedia : undefined}\n            onHideTranscription={setTranscriptionHidden}\n            isTranscriptionError={isTranscriptionError}\n            isTranscribed={Boolean(transcribedText)}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribing={isTranscribing}\n          />\n        )}\n        {(audio || voice || withVoiceTranscription) && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            noAvatars={noAvatars}\n            onPlay={handleAudioPlay}\n            onReadMedia={voice && shouldReadMedia ? handleReadMedia : undefined}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            isTranscribing={isTranscribing}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribed={Boolean(transcribedText)}\n            isTranscriptionError={isTranscriptionError}\n            canDownload={!isProtected}\n            onHideTranscription={setTranscriptionHidden}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n          />\n        )}\n        {document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            onMediaClick={handleDocumentClick}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {storyData && !isStoryMention && (\n          <Story\n            message={message}\n            isProtected={isProtected}\n          />\n        )}\n        {isStoryMention && <StoryMention message={message} />}\n        {contact && (\n          <Contact contact={contact} noUserColors={isOwn} />\n        )}\n        {poll && (\n          <Poll message={message} poll={poll} onSendVote={handleVoteSend} />\n        )}\n        {(giveaway || giveawayResults) && (\n          <Giveaway message={message} />\n        )}\n        {game && (\n          <Game\n            message={message}\n            canAutoLoadMedia={canAutoLoadMedia}\n          />\n        )}\n        {invoice?.extendedMedia && (\n          <InvoiceMediaPreview\n            message={message}\n            isConnected={isConnected}\n          />\n        )}\n\n        {withVoiceTranscription && (\n          <p\n            className={buildClassName(\n              'transcription',\n              !isTranscriptionHidden && isTranscriptionError && 'transcription-error',\n            )}\n            dir=\"auto\"\n          >\n            {(isTranscriptionError ? lang('NoWordsRecognized') : (\n              isTranscribing && transcribedText ? <DotAnimation content={transcribedText} /> : transcribedText\n            ))}\n          </p>\n        )}\n\n        {isInvertedMedia && renderInvertedMediaContent(hasCustomAppendix)}\n\n        {!isInvertedMedia && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {hasText && !hasAnimatedEmoji && (\n              <div className={textContentClass} dir=\"auto\">\n                {renderMessageText()}\n                {isTranslationPending && (\n                  <div className=\"translation-animation\">\n                    <div className=\"text-loading\">\n                      {renderMessageText(true)}\n                    </div>\n                  </div>\n                )}\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {metaPosition === 'in-text' && renderReactionsAndMeta()}\n              </div>\n            )}\n            {renderWebPage()}\n          </>\n        )}\n\n        {invoice && !invoice.extendedMedia && (\n          <Invoice\n            message={message}\n            shouldAffectAppendix={hasCustomAppendix && !hasReactions}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            forcedWidth={contentWidth}\n          />\n        )}\n        {location && (\n          <Location\n            message={message}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            peer={sender}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderInvertedMediaContent(hasCustomAppendix: boolean) {\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n    );\n    const footerClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n\n    const hasMediaAfterText = isAlbum || (!isAlbum && photo) || (!isAlbum && video && !isRoundVideo);\n    const hasContentAfterText = hasMediaAfterText || (!hasAnimatedEmoji && hasFactCheck);\n    const isMetaInText = metaPosition === 'in-text';\n\n    return (\n      <>\n        {renderWebPage()}\n        {hasText && !hasAnimatedEmoji && (\n          <div className={textContentClass} dir=\"auto\">\n            {renderMessageText()}\n            {isTranslationPending && (\n              <div className=\"translation-animation\">\n                <div className=\"text-loading\">\n                  {renderMessageText(true)}\n                </div>\n              </div>\n            )}\n            {!hasContentAfterText && isMetaInText && renderReactionsAndMeta()}\n          </div>\n        )}\n\n        {hasContentAfterText && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {!hasAnimatedEmoji && (\n              <div className={footerClass} dir=\"auto\">\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {isMetaInText && renderReactionsAndMeta()}\n              </div>\n            )}\n          </>\n        )}\n\n      </>\n    );\n  }\n\n  function renderWebPage() {\n    return webPage && (\n      <WebPage\n        message={message}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        noAvatars={noAvatars}\n        canAutoLoad={canAutoLoadMedia}\n        canAutoPlay={canAutoPlayMedia}\n        asForwarded={asForwarded}\n        isDownloading={isDownloading}\n        isProtected={isProtected}\n        theme={theme}\n        story={webPageStory}\n        isConnected={isConnected}\n        lastPlaybackTimestamp={lastPlaybackTimestamp}\n        backgroundEmojiId={messageColorPeer?.color?.backgroundEmojiId}\n        shouldWarnAboutSvg={shouldWarnAboutSvg}\n        autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n        onAudioPlay={handleAudioPlay}\n        onMediaClick={handleMediaClick}\n        onDocumentClick={handleDocumentClick}\n        onCancelMediaTransfer={handleCancelUpload}\n      />\n    );\n  }\n\n  function renderInvertibleMediaContent(hasCustomAppendix: boolean) {\n    const content = (\n      <>\n        {isAlbum && observeIntersectionForLoading && (\n          <Album\n            album={album}\n            albumLayout={albumLayout!}\n            observeIntersection={observeIntersectionForLoading}\n            isOwn={isOwn}\n            isProtected={isProtected}\n            hasCustomAppendix={hasCustomAppendix}\n            onMediaClick={handleAlbumMediaClick}\n          />\n        )}\n        {!isAlbum && photo && (\n          <Photo\n            messageText={text?.text}\n            photo={photo}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            uploadProgress={uploadProgress}\n            shouldAffectAppendix={hasCustomAppendix}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            theme={theme}\n            forcedWidth={contentWidth}\n            onClick={handlePhotoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n        {!isAlbum && video && !isRoundVideo && (\n          <Video\n            video={video}\n            isOwn={isOwn}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            forcedWidth={contentWidth}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            canAutoPlay={canAutoPlayMedia}\n            uploadProgress={uploadProgress}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            lastPlaybackTimestamp={lastPlaybackTimestamp}\n            onClick={handleVideoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n      </>\n    );\n\n    if (paidMedia) {\n      return (\n        <PaidMediaOverlay chatId={chatId} messageId={messageId} paidMedia={paidMedia} isOutgoing={isOwn}>\n          {content}\n        </PaidMediaOverlay>\n      );\n    }\n\n    return content;\n  }\n\n  function shouldRenderSenderName() {\n    const media = photo || video || location || paidMedia;\n    return !(isCustomShape && !viaBotId) && (\n      (withSenderName && (!media || hasTopicChip)) || asForwarded || viaBotId || forceSenderName\n    ) && !isInDocumentGroupNotFirst && !(hasMessageReply && isCustomShape);\n  }\n\n  function renderForwardTitle() {\n    return (\n      <span className=\"forward-title-container\">\n        {asForwarded && (\n          <Icon name={forwardInfo?.hiddenUserName ? 'forward' : 'share-filled'} />\n        )}\n        {asForwarded && (\n          <span className=\"forward-title\">\n            {lang('ForwardedFrom')}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderSenderName(\n    shouldSkipRenderForwardTitle: boolean = false, shouldSkipRenderAdminTitle: boolean = false,\n  ) {\n    let senderTitle;\n    let senderColor;\n    if (senderPeer && !(isCustomShape && viaBotId)) {\n      senderTitle = getPeerFullTitle(lang, senderPeer);\n    } else if (forwardInfo?.hiddenUserName) {\n      senderTitle = forwardInfo.hiddenUserName;\n    } else if (storyData && originSender) {\n      senderTitle = getPeerFullTitle(lang, originSender);\n    }\n    const senderEmojiStatus = senderPeer && 'emojiStatus' in senderPeer && senderPeer.emojiStatus;\n    const senderIsPremium = senderPeer && 'isPremium' in senderPeer && senderPeer.isPremium;\n\n    const shouldRenderForwardAvatar = asForwarded && senderPeer;\n    const hasBotSenderUsername = botSender?.hasUsername;\n    return (\n      <div className=\"message-title\" dir=\"ltr\">\n        {(senderTitle || asForwarded) ? (\n          <span\n            className={buildClassName(\n              'message-title-name-container',\n              forwardInfo?.hiddenUserName ? 'sender-hidden' : 'interactive',\n              senderColor,\n            )}\n            dir=\"ltr\"\n          >\n            {!shouldSkipRenderForwardTitle && renderForwardTitle()}\n            <span className=\"message-title-name\">\n              {storyData && <Icon name=\"play-story\" />}\n              {shouldRenderForwardAvatar && (\n                <Avatar\n                  className=\"forward-avatar\"\n                  peer={senderPeer}\n                  size=\"micro\"\n                />\n              )}\n              <span\n                className=\"sender-title\"\n                onClick={handleSenderClick}\n              >\n                {senderTitle ? renderText(senderTitle) : (asForwarded ? NBSP : undefined)}\n              </span>\n              {!asForwarded && senderEmojiStatus && (\n                <CustomEmoji\n                  documentId={senderEmojiStatus.documentId}\n                  className=\"no-selection\"\n                  loopLimit={EMOJI_STATUS_LOOP_LIMIT}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                />\n              )}\n              {!asForwarded && !senderEmojiStatus && senderIsPremium && <StarIcon />}\n              {senderPeer?.fakeType && <FakeIcon fakeType={senderPeer.fakeType} />}\n            </span>\n          </span>\n        ) : !botSender ? (\n          NBSP\n        ) : undefined}\n        {botSender?.hasUsername && (\n          <span className=\"interactive\">\n            <span className=\"via\">{lang('ViaBot')}</span>\n            <span\n              className=\"sender-title\"\n              onClick={handleViaBotClick}\n            >\n              {renderText(`@${getMainUsername(botSender)}`)}\n            </span>\n          </span>\n        )}\n        <div className=\"title-spacer\" />\n        {!shouldSkipRenderAdminTitle && !hasBotSenderUsername ? (forwardInfo?.isLinkedChannelPost ? (\n          <span className=\"admin-title\" dir=\"auto\">{lang('DiscussChannel')}</span>\n        ) : message.postAuthorTitle && isGroup && !asForwarded ? (\n          <span className=\"admin-title\" dir=\"auto\">{message.postAuthorTitle}</span>\n        ) : senderAdminMember && !asForwarded && !viaBotId ? (\n          <span className=\"admin-title\" dir=\"auto\">\n            {senderAdminMember.customTitle || lang(\n              senderAdminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin',\n            )}\n          </span>\n        ) : undefined) : undefined}\n        {canShowSenderBoosts && (\n          <span className=\"sender-boosts\" aria-hidden>\n            <Icon name={senderBoosts > 1 ? 'boosts' : 'boost'} />\n            {senderBoosts > 1 ? senderBoosts : undefined}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  const forwardAuthor = isGroup && asForwarded ? message.postAuthorTitle : undefined;\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={containerClassName}\n      data-message-id={messageId}\n      onCopy={isProtected ? stopEvent : undefined}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n      onDoubleClick={handleDoubleClick}\n      onMouseEnter={isInDocumentGroupNotLast ? handleDocumentGroupMouseEnter : undefined}\n      onMouseMove={withQuickReactionButton ? handleMouseMove : undefined}\n      onMouseLeave={(withQuickReactionButton || isInDocumentGroupNotLast) ? handleMouseLeave : undefined}\n    >\n      <div\n        ref={bottomMarkerRef}\n        className=\"bottom-marker\"\n        data-message-id={messageId}\n        data-last-message-id={album ? album.messages[album.messages.length - 1].id : undefined}\n        data-album-main-id={album ? album.mainMessage.id : undefined}\n        data-has-unread-mention={message.hasUnreadMention || undefined}\n        data-has-unread-reaction={hasUnreadReaction || undefined}\n        data-is-pinned={isPinned || undefined}\n        data-should-update-views={message.viewsCount !== undefined}\n      />\n      {!isInDocumentGroup && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {isLastInDocumentGroup && (\n        <div\n          className={buildClassName(\n            'message-select-control group-select no-selection', isGroupSelected && 'is-selected',\n          )}\n          onClick={handleDocumentGroupSelectAll}\n        >\n          {isGroupSelected && (\n            <Icon name=\"select\" />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName('message-content-wrapper',\n          contentClassName.includes('text') && 'can-select-text',\n          contentClassName.includes('giveaway') && 'giveaway-result-content')}\n      >\n        <div\n          className={contentClassName}\n          style={style}\n          dir=\"auto\"\n        >\n          {asForwarded && !isInDocumentGroupNotFirst && (\n            <>\n              {shouldRenderSenderName() && renderSenderName()}\n              {forwardAuthor && <span className=\"admin-title\" dir=\"auto\">{forwardAuthor}</span>}\n            </>\n          )}\n          {renderContent()}\n          {!isInDocumentGroupNotLast && metaPosition === 'standalone' && !isStoryMention && renderReactionsAndMeta()}\n          {canShowActionButton && (\n            <div className={buildClassName(\n              'message-action-buttons',\n              isLoadingComments && 'message-action-buttons-shown',\n            )}\n            >\n              {withCommentButton && isCustomShape && (\n                <CommentButton\n                  threadInfo={repliesThreadInfo}\n                  disabled={noComments}\n                  isLoading={isLoadingComments}\n                  isCustomShape\n                  asActionButton\n                />\n              )}\n              {canForward && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel={lang('lng_context_forward_msg')}\n                  onClick={isLastInDocumentGroup ? handleGroupForward : handleForward}\n                >\n                  <Icon name=\"share-filled\" />\n                </Button>\n              )}\n              {canFocus && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel=\"Focus message\"\n                  onClick={isPinnedList ? handleFocus : handleFocusForwarded}\n                >\n                  <Icon name=\"arrow-right\" />\n                </Button>\n              )}\n            </div>\n          )}\n          {withCommentButton && !(canShowActionButton && isCustomShape) && (\n            <CommentButton\n              threadInfo={repliesThreadInfo}\n              disabled={noComments}\n              isLoading={isLoadingComments}\n            />\n          )}\n          {withAppendix && <MessageAppendix isOwn={isOwn} />}\n          {withQuickReactionButton && quickReactionPosition === 'in-content' && renderQuickReactionButton()}\n        </div>\n        {message.inlineButtons && (\n          <InlineButtons message={message} onClick={clickBotInlineButton} />\n        )}\n        {reactionsPosition === 'outside' && !isStoryMention && (\n          <Reactions\n            message={reactionMessage!}\n            threadId={threadId}\n            isOutside\n            isCurrentUserPremium={isPremium}\n            maxWidth={reactionsMaxWidth}\n            observeIntersection={observeIntersectionForPlaying}\n            noRecentReactors={isChannel}\n            tags={tags}\n            isAccountFrozen={isAccountFrozen}\n          />\n        )}\n      </div>\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          targetHref={contextMenuTarget?.matches('a[href]') ? (contextMenuTarget as HTMLAnchorElement).href : undefined}\n          message={message}\n          album={album}\n          messageListType={messageListType}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          repliesThreadInfo={repliesThreadInfo}\n          noReplies={noReplies}\n          detectedLanguage={detectedLanguage}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): StateProps => {\n    const {\n      focusedMessage, forwardMessages, activeReactions, activeEmojiInteractions,\n      loadingThread,\n    } = selectTabState(global);\n    const {\n      message, album, withSenderName, withAvatar, threadId, messageListType, isLastInDocumentGroup, isFirstInGroup,\n    } = ownProps;\n    const {\n      id, chatId, viaBotId, isOutgoing, forwardInfo, transcriptionId, isPinned, viaBusinessBotId, effectId,\n      paidMessageStars,\n    } = message;\n\n    const { shouldWarnAboutSvg } = selectSharedSettings(global);\n    const isChatWithUser = isUserId(chatId);\n\n    const chat = selectChat(global, chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isSystemBotChat = isSystemBot(chatId);\n    const isAnonymousForwards = isAnonymousForwardsChat(chatId);\n    const isChannel = chat && isChatChannel(chat);\n    const isGroup = chat && isChatGroup(chat);\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const webPageStoryData = message.content.webPage?.story;\n    const webPageStory = webPageStoryData\n      ? selectPeerStory(global, webPageStoryData.peerId, webPageStoryData.id)\n      : undefined;\n\n    const isForwarding = forwardMessages.messageIds && forwardMessages.messageIds.includes(id);\n    const forceSenderName = !isChatWithSelf && isAnonymousOwnMessage(message);\n    const canShowSender = withSenderName || withAvatar || forceSenderName;\n    const sender = selectSender(global, message);\n    const originSender = selectForwardedSender(global, message);\n    const botSender = viaBotId ? selectUser(global, viaBotId) : undefined;\n    const senderAdminMember = sender?.id && isGroup\n      ? chatFullInfo?.adminMembersById?.[sender?.id]\n      : undefined;\n\n    const isThreadTop = message.id === threadId;\n\n    const { replyToMsgId, replyToPeerId, replyFrom } = getMessageReplyInfo(message) || {};\n    const { peerId: storyReplyPeerId, storyId: storyReplyId } = getStoryReplyInfo(message) || {};\n\n    const shouldHideReply = replyToMsgId && replyToMsgId === threadId;\n    const replyMessage = selectReplyMessage(global, message);\n    const forwardHeader = forwardInfo || replyFrom;\n    const replyMessageSender = replyMessage ? selectSender(global, replyMessage)\n      : forwardHeader && !isSystemBotChat && !isAnonymousForwards\n        ? selectSenderFromHeader(global, forwardHeader) : undefined;\n    const replyMessageForwardSender = replyMessage && selectForwardedSender(global, replyMessage);\n    const replyMessageChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n    const isReplyPrivate = !isSystemBotChat && !isAnonymousForwards && replyMessageChat\n      && !isChatPublic(replyMessageChat)\n      && (replyMessageChat.isNotJoined || replyMessageChat.isRestricted);\n    const isReplyToTopicStart = replyMessage?.content.action?.type === 'topicCreate';\n    const replyStory = storyReplyId && storyReplyPeerId\n      ? selectPeerStory(global, storyReplyPeerId, storyReplyId)\n      : undefined;\n    const storySender = storyReplyPeerId ? selectPeer(global, storyReplyPeerId) : undefined;\n\n    const uploadProgress = selectUploadProgress(global, message);\n    const isFocused = messageListType === 'thread' && (\n      album\n        ? album.messages.some((m) => selectIsMessageFocused(global, m, threadId))\n        : selectIsMessageFocused(global, message, threadId)\n    );\n\n    const {\n      direction: focusDirection, noHighlight: noFocusHighlight, isResizingContainer,\n      quote: focusedQuote, quoteOffset: focusedQuoteOffset, scrollTargetPosition,\n    } = (isFocused && focusedMessage) || {};\n\n    const middleSearch = selectCurrentMiddleSearch(global);\n    const highlight = middleSearch?.results?.query\n      && `${middleSearch.isHashtag ? '#' : ''}${middleSearch.results.query}`;\n\n    const singleEmoji = getMessageSingleRegularEmoji(message);\n    const animatedEmoji = singleEmoji && selectAnimatedEmoji(global, singleEmoji) ? singleEmoji : undefined;\n    const animatedCustomEmoji = getMessageSingleCustomEmoji(message);\n\n    let isSelected: boolean;\n    if (album?.messages) {\n      isSelected = album.messages.every(({ id: messageId }) => selectIsMessageSelected(global, messageId));\n    } else {\n      isSelected = selectIsMessageSelected(global, id);\n    }\n\n    const canReply = messageListType === 'thread' && selectCanReplyToMessage(global, message, threadId);\n    const activeDownloads = selectActiveDownloads(global);\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    const isDownloading = downloadableMedia && getIsDownloading(activeDownloads, downloadableMedia);\n\n    const repliesThreadInfo = selectThreadInfo(global, chatId, album?.commentsMessage?.id || id);\n\n    const isInDocumentGroup = Boolean(message.groupedId) && !message.isInAlbum;\n    const documentGroupFirstMessageId = isInDocumentGroup\n      ? selectMessageIdsByGroupId(global, chatId, message.groupedId!)![0]\n      : undefined;\n    const reactionMessage = isInDocumentGroup ? (\n      isLastInDocumentGroup ? selectChatMessage(global, chatId, documentGroupFirstMessageId!) : undefined\n    ) : message;\n\n    const hasUnreadReaction = chat?.unreadReactions?.includes(message.id);\n\n    const hasTopicChip = threadId === MAIN_THREAD_ID && chat?.isForum && isFirstInGroup;\n    const messageTopic = hasTopicChip ? selectTopicFromMessage(global, message) : undefined;\n\n    const chatTranslations = selectChatTranslations(global, chatId);\n\n    const requestedTranslationLanguage = selectRequestedMessageTranslationLanguage(global, chatId, message.id);\n    const requestedChatTranslationLanguage = selectRequestedChatTranslationLanguage(global, chatId);\n\n    const areTranslationsEnabled = IS_TRANSLATION_SUPPORTED && global.settings.byKey.canTranslate\n      && !requestedChatTranslationLanguage; // Stop separate language detection if chat translation is requested\n\n    const isConnected = global.connectionState === 'connectionStateReady';\n\n    const hasActiveReactions = Boolean(reactionMessage && activeReactions[getMessageKey(reactionMessage)]?.length);\n\n    const isPremium = selectIsCurrentUserPremium(global);\n    const senderBoosts = sender && selectIsChatWithSelf(global, sender.id)\n      ? (chatFullInfo?.boostsApplied ?? message.senderBoosts) : message.senderBoosts;\n\n    const chatLevel = chat?.boostLevel || 0;\n    const transcribeMinLevel = global.appConfig?.groupTranscribeLevelMin;\n    const canTranscribeVoice = isPremium || Boolean(transcribeMinLevel && chatLevel >= transcribeMinLevel);\n\n    const viaBusinessBot = viaBusinessBotId ? selectUser(global, viaBusinessBotId) : undefined;\n\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n\n    const poll = selectPollFromMessage(global, message);\n\n    const maxTimestamp = selectMessageTimestampableDuration(global, message);\n\n    const lastPlaybackTimestamp = selectMessageLastPlaybackTimestamp(global, chatId, message.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    return {\n      theme: selectTheme(global),\n      forceSenderName,\n      sender,\n      canShowSender,\n      originSender,\n      botSender,\n      shouldHideReply: shouldHideReply || isReplyToTopicStart,\n      isThreadTop,\n      replyMessage,\n      replyMessageSender,\n      replyMessageForwardSender,\n      replyMessageChat,\n      replyStory,\n      isReplyPrivate,\n      storySender,\n      isInDocumentGroup,\n      isProtected: selectIsMessageProtected(global, message),\n      isChatProtected: selectIsChatProtected(global, chatId),\n      isFocused,\n      isForwarding,\n      reactionMessage,\n      isChatWithSelf,\n      isRepliesChat: isSystemBotChat,\n      isAnonymousForwards,\n      isChannel,\n      isGroup,\n      canReply,\n      highlight,\n      animatedEmoji,\n      animatedCustomEmoji,\n      isInSelectMode: selectIsInSelectMode(global),\n      isSelected,\n      isGroupSelected: (\n        Boolean(message.groupedId)\n        && !message.isInAlbum\n        && selectIsDocumentGroupSelected(global, chatId, message.groupedId)\n      ),\n      threadId,\n      isDownloading,\n      isPinnedList: messageListType === 'pinned',\n      isPinned,\n      canAutoLoadMedia: selectCanAutoLoadMedia(global, message),\n      canAutoPlayMedia: selectCanAutoPlayMedia(global, message),\n      autoLoadFileMaxSizeMb: global.settings.byKey.autoLoadFileMaxSizeMb,\n      shouldLoopStickers: selectShouldLoopStickers(global),\n      repliesThreadInfo,\n      availableReactions: global.reactions.availableReactions,\n      defaultReaction: isMessageLocal(message) || messageListType === 'scheduled'\n        ? undefined : selectDefaultReaction(global, chatId),\n      hasActiveReactions,\n      activeEmojiInteractions,\n      hasUnreadReaction,\n      isTranscribing: transcriptionId !== undefined && global.transcriptions[transcriptionId]?.isPending,\n      transcribedText: transcriptionId !== undefined ? global.transcriptions[transcriptionId]?.text : undefined,\n      isPremium,\n      senderAdminMember,\n      messageTopic,\n      hasTopicChip,\n      chatTranslations,\n      areTranslationsEnabled,\n      shouldDetectChatLanguage: selectShouldDetectChatLanguage(global, chatId),\n      requestedTranslationLanguage,\n      requestedChatTranslationLanguage,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      withAnimatedEffects: selectPerformanceSettingsValue(global, 'stickerEffects'),\n      webPageStory,\n      isConnected,\n      isLoadingComments: repliesThreadInfo?.isCommentsInfo\n        && loadingThread?.loadingChatId === repliesThreadInfo?.originChannelId\n        && loadingThread?.loadingMessageId === repliesThreadInfo?.originMessageId,\n      shouldWarnAboutSvg,\n      ...(isOutgoing && { outgoingStatus: selectOutgoingStatus(global, message, messageListType === 'scheduled') }),\n      ...(typeof uploadProgress === 'number' && { uploadProgress }),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n        isResizingContainer,\n        focusedQuote,\n        focusedQuoteOffset,\n        scrollTargetPosition,\n      }),\n      senderBoosts,\n      tags: global.savedReactionTags?.byKey,\n      canTranscribeVoice,\n      viaBusinessBot,\n      effect,\n      poll,\n      maxTimestamp,\n      lastPlaybackTimestamp,\n      paidMessageStars,\n      isChatWithUser,\n      isAccountFrozen,\n    };\n  },\n)(Message));\n","import { getActions } from '../../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiStory, ApiTopic, ApiUser,\n} from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IAlbum, ThreadId } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\nimport { MediaViewerOrigin } from '../../../../types';\n\nimport { getMessagePhoto, getMessageWebPagePhoto } from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport { tryParseDeepLink } from '../../../../util/deepLinkParser';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useInnerHandlers({\n  lang,\n  selectMessage,\n  message,\n  chatId,\n  threadId,\n  isInDocumentGroup,\n  asForwarded,\n  isScheduled,\n  album,\n  senderPeer,\n  botSender,\n  messageTopic,\n  isTranslatingChat,\n  story,\n  isReplyPrivate,\n  isRepliesChat,\n  isSavedMessages,\n  lastPlaybackTimestamp,\n}: {\n  lang: OldLangFn;\n  selectMessage: (e: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void;\n  message: ApiMessage;\n  chatId: string;\n  threadId: ThreadId;\n  isInDocumentGroup: boolean;\n  asForwarded?: boolean;\n  isScheduled?: boolean;\n  album?: IAlbum;\n  avatarPeer?: ApiPeer;\n  senderPeer?: ApiPeer;\n  botSender?: ApiUser;\n  messageTopic?: ApiTopic;\n  isTranslatingChat?: boolean;\n  story?: ApiStory;\n  isReplyPrivate?: boolean;\n  isRepliesChat?: boolean;\n  isSavedMessages?: boolean;\n  lastPlaybackTimestamp?: number;\n}) {\n  const {\n    openChat, showNotification, focusMessage, openMediaViewer, openAudioPlayer,\n    markMessagesRead, cancelUploadMedia, sendPollVote, openForwardMenu,\n    openChatLanguageModal, openThread, openStoryViewer, searchChatMediaMessages,\n  } = getActions();\n\n  const {\n    id: messageId, forwardInfo, groupedId, content: { paidMedia, video, webPage },\n  } = message;\n\n  const {\n    replyToMsgId, replyToPeerId, replyToTopId, isQuote, quoteText, quoteOffset,\n  } = getMessageReplyInfo(message) || {};\n\n  const handleSenderClick = useLastCallback(() => {\n    if (!senderPeer) {\n      showNotification({ message: lang('HidAccount') });\n\n      return;\n    }\n\n    if (asForwarded && forwardInfo?.channelPostId) {\n      focusMessage({ chatId: senderPeer.id, messageId: forwardInfo.channelPostId });\n    } else {\n      openChat({ id: senderPeer.id });\n    }\n  });\n\n  const handleViaBotClick = useLastCallback(() => {\n    if (!botSender) {\n      return;\n    }\n\n    openChat({ id: botSender.id });\n  });\n\n  const handleReplyClick = useLastCallback((): void => {\n    if (!replyToMsgId || isReplyPrivate) {\n      showNotification({\n        message: isQuote ? lang('QuotePrivate') : lang('ReplyPrivate'),\n      });\n      return;\n    }\n\n    if (isRepliesChat && replyToPeerId && replyToTopId) {\n      openThread({\n        isComments: true,\n        originChannelId: replyToPeerId,\n        originMessageId: replyToTopId,\n        focusMessageId: replyToMsgId,\n      });\n      return;\n    }\n\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: isRepliesChat ? replyToTopId : threadId, // Open comments from Replies bot, otherwise, keep current thread\n      messageId: replyToMsgId,\n      replyMessageId: replyToPeerId ? undefined : messageId,\n      noForumTopicPanel: !replyToPeerId, // Open topic panel for cross-chat replies\n      ...(isQuote && { quote: quoteText?.text, quoteOffset }),\n    });\n  });\n\n  const handleDocumentClick = useLastCallback((): void => {\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n    });\n  });\n\n  const openMediaViewerWithPhotoOrVideo = useLastCallback((withDynamicLoading: boolean): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n    if (withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    }\n\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage.url);\n\n    const videoContent = video || webPage?.video;\n    const webpageTimestamp = parsedLink && 'timestamp' in parsedLink ? parsedLink.timestamp : undefined;\n\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n      timestamp: lastPlaybackTimestamp || videoContent?.timestamp || webpageTimestamp,\n      withDynamicLoading,\n    });\n  });\n  const handlePhotoMediaClick = useLastCallback((): void => {\n    const withDynamicLoading = !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n  const handleVideoMediaClick = useLastCallback(() => {\n    const isGif = message.content?.video?.isGif;\n    const withDynamicLoading = !isGif && !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n\n  const handleMediaClick = useLastCallback((): void => {\n    const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n    if (photo) {\n      handlePhotoMediaClick();\n    }\n\n    handleVideoMediaClick();\n  });\n\n  const handleAudioPlay = useLastCallback((): void => {\n    openAudioPlayer({ chatId, messageId });\n  });\n\n  const handleAlbumMediaClick = useLastCallback((albumMessageId: number, albumIndex?: number): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n\n    searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId: albumMessageId,\n      mediaIndex: albumIndex,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledAlbum : MediaViewerOrigin.Album,\n      withDynamicLoading: !paidMedia,\n    });\n  });\n\n  const handleReadMedia = useLastCallback((): void => {\n    markMessagesRead({ messageIds: [messageId] });\n  });\n\n  const handleCancelUpload = useLastCallback(() => {\n    cancelUploadMedia({ chatId, messageId });\n  });\n\n  const handleVoteSend = useLastCallback((options: string[]) => {\n    sendPollVote({ chatId, messageId, options });\n  });\n\n  const handleGroupForward = useLastCallback(() => {\n    openForwardMenu({ fromChatId: chatId, groupedId });\n  });\n\n  const handleForward = useLastCallback(() => {\n    if (album && album.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: chatId, messageIds: [messageId] });\n    }\n  });\n\n  const handleFocus = useLastCallback(() => {\n    focusMessage({\n      chatId, threadId: MAIN_THREAD_ID, messageId,\n    });\n  });\n\n  const handleFocusForwarded = useLastCallback(() => {\n    const originalChatId = (isSavedMessages && forwardInfo!.savedFromPeerId) || forwardInfo!.fromChatId!;\n\n    if (isInDocumentGroup) {\n      focusMessage({\n        chatId: originalChatId, groupedId, groupedChatId: chatId, messageId: forwardInfo!.fromMessageId!,\n      });\n      return;\n    }\n\n    if (replyToPeerId && replyToTopId) {\n      if (isRepliesChat) {\n        openThread({\n          isComments: true,\n          originChannelId: replyToPeerId,\n          originMessageId: replyToTopId,\n          focusMessageId: forwardInfo!.fromMessageId!,\n        });\n      } else {\n        focusMessage({\n          chatId: replyToPeerId,\n          threadId: replyToTopId,\n          messageId: forwardInfo!.fromMessageId!,\n        });\n      }\n    } else {\n      focusMessage({\n        chatId: originalChatId, messageId: forwardInfo!.fromMessageId!,\n      });\n    }\n  });\n\n  const selectWithGroupedId = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    selectMessage(e, groupedId);\n  });\n\n  const handleTranslationClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    openChatLanguageModal({ chatId, messageId: !isTranslatingChat ? messageId : undefined });\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n  });\n\n  const handleTopicChipClick = useLastCallback(() => {\n    if (!messageTopic) return;\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: messageTopic.id,\n      messageId,\n    });\n  });\n\n  const handleStoryClick = useLastCallback(() => {\n    if (!story) return;\n    openStoryViewer({\n      peerId: story.peerId,\n      storyId: story.id,\n      isSingleStory: true,\n    });\n  });\n\n  return {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleDocumentClick,\n    handleMediaClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick: selectWithGroupedId,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll: selectWithGroupedId,\n    handleTopicChipClick,\n    handleStoryClick,\n  };\n}\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport { detectLanguage } from '../util/languageDetection';\n\nexport default function useTextLanguage(text?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>) {\n  const [language, setLanguage] = useState<string | undefined>();\n\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    if (text) {\n      detectLanguage(text).then(setLanguage);\n    } else {\n      setLanguage(undefined);\n    }\n  }, [isDisabled, text, getIsReady]);\n\n  return language;\n}\n","import type { ApiMessage, ApiPoll } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { EMOJI_SIZES, MESSAGE_CONTENT_CLASS_NAME } from '../../../../config';\nimport { getMessageContent } from '../../../../global/helpers';\nimport getSingularPaidMedia from './getSingularPaidMedia';\n\nexport function buildContentClassName(\n  message: ApiMessage,\n  album?: IAlbum,\n  {\n    poll,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread,\n    forceSenderName,\n    hasCommentCounter,\n    hasCommentButton,\n    hasActionButton,\n    hasReactions,\n    isGeoLiveActive,\n    withVoiceTranscription,\n    peerColorClass,\n    hasOutsideReactions,\n  }: {\n    poll?: ApiPoll;\n    hasSubheader?: boolean;\n    isCustomShape?: boolean | number;\n    isLastInGroup?: boolean;\n    asForwarded?: boolean;\n    hasThread?: boolean;\n    forceSenderName?: boolean;\n    hasCommentCounter?: boolean;\n    hasCommentButton?: boolean;\n    hasActionButton?: boolean;\n    hasReactions?: boolean;\n    isGeoLiveActive?: boolean;\n    withVoiceTranscription?: boolean;\n    peerColorClass?: string;\n    hasOutsideReactions?: boolean;\n  } = {},\n) {\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const content = getMessageContent(message);\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo,\n    audio, voice, document, webPage, contact, location, invoice, storyData,\n    giveaway, giveawayResults,\n  } = content;\n  const text = album?.hasMultipleCaptions ? undefined : getMessageContent(album?.captionMessage || message).text;\n  const hasFactCheck = Boolean(message.factCheck?.text);\n\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isInvertedMedia = message.isInvertedMedia;\n  const isInvertibleMedia = photo || (video && !isRoundVideo) || album || webPage;\n\n  const classNames = [MESSAGE_CONTENT_CLASS_NAME];\n  const isMedia = storyData || photo || video || location || invoice?.extendedMedia || paidMedia;\n  const hasText = text || location?.mediaType === 'venue' || isGeoLiveActive || hasFactCheck;\n  const isMediaWithNoText = isMedia && !hasText;\n  const hasInlineKeyboard = Boolean(message.inlineButtons);\n  const isViaBot = Boolean(message.viaBotId);\n\n  const hasFooter = (() => {\n    if (isInvertedMedia && isInvertibleMedia) {\n      if (hasReactions && !hasOutsideReactions) return true;\n      if (hasFactCheck) return true;\n      if (webPage && hasText) return true;\n      return false;\n    }\n    return hasText;\n  })();\n\n  if (peerColorClass) {\n    classNames.push(peerColorClass);\n  }\n\n  if (!isMedia && message.emojiOnlyCount) {\n    classNames.push('emoji-only');\n    if (message.emojiOnlyCount <= EMOJI_SIZES) {\n      classNames.push(`emoji-only-${message.emojiOnlyCount}`);\n    }\n  } else if (hasText) {\n    classNames.push('text');\n  } else {\n    classNames.push('no-text');\n  }\n\n  if (!Object.keys(content).length) {\n    classNames.push('unsupported');\n  }\n\n  if (hasActionButton) {\n    classNames.push('has-action-button');\n  }\n\n  if (isCustomShape) {\n    classNames.push('custom-shape');\n\n    if (isRoundVideo) {\n      classNames.push('round');\n    }\n\n    if (hasCommentCounter) {\n      classNames.push('has-comment-counter');\n    }\n  }\n  if (isMedia && !withVoiceTranscription) {\n    classNames.push('media');\n  } else if (video) {\n    classNames.push('video');\n  } else if (audio) {\n    classNames.push('audio');\n  } else if (voice) {\n    classNames.push('voice');\n    if (withVoiceTranscription) {\n      classNames.push('with-voice-transcription');\n    }\n  } else if (document) {\n    classNames.push('document');\n  } else if (contact) {\n    classNames.push('contact');\n  } else if (poll) {\n    classNames.push('poll');\n  } else if (giveaway || giveawayResults) {\n    classNames.push('giveaway');\n  } else if (webPage) {\n    classNames.push('web-page');\n\n    if (webPage.photo || webPage.video) {\n      classNames.push('media');\n    }\n\n    if (webPage.document) {\n      classNames.push('document');\n    }\n\n    if (webPage.gift) {\n      classNames.push('gift');\n    }\n  }\n\n  if (invoice && !invoice.extendedMedia) {\n    classNames.push('invoice');\n  }\n\n  if (invoice && invoice.photo) {\n    classNames.push('has-photo');\n  }\n\n  if (storyData) {\n    classNames.push('story');\n  }\n\n  if (asForwarded) {\n    classNames.push('is-forwarded');\n  }\n\n  if (hasSubheader) {\n    classNames.push('has-subheader');\n  }\n\n  if (hasThread) {\n    classNames.push('has-replies');\n  }\n\n  if (hasReactions) {\n    classNames.push('has-reactions');\n  }\n\n  if (hasOutsideReactions) {\n    classNames.push('has-outside-reactions');\n  }\n\n  if (isViaBot) {\n    classNames.push('is-via-bot');\n  }\n\n  if (forceSenderName) {\n    classNames.push('force-sender-name');\n  }\n\n  if (!isCustomShape) {\n    classNames.push('has-shadow');\n\n    if (isMedia && hasThread) {\n      classNames.push('has-background');\n    }\n\n    if (hasSubheader || asForwarded || isViaBot || !isMediaWithNoText\n      || forceSenderName || hasFactCheck || withVoiceTranscription) {\n      classNames.push('has-solid-background');\n    }\n\n    if (hasFactCheck) {\n      classNames.push('has-fact-check');\n    }\n\n    if (isLastInGroup && !hasInlineKeyboard && (photo || !isMediaWithNoText || hasCommentButton)) {\n      classNames.push('has-appendix');\n    }\n  }\n\n  if (isInvertibleMedia && isInvertedMedia) {\n    classNames.push('is-inverted-media');\n  }\n\n  if (hasFooter) {\n    classNames.push('has-footer');\n  } else {\n    classNames.push('no-footer');\n  }\n\n  return classNames.join(' ');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  const hasAvatarMediaViewer = withMediaViewer && !isSavedMessages;\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  useIntervalForceUpdate(UPDATE_INTERVAL);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={hasAvatarMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport { PAID_MESSAGES_PURPOSE } from '../../../../config';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePaidMessageConfirmation(\n  starsForAllMessages: number,\n  isStarsBalanceModeOpen: boolean,\n  starsBalance: number,\n) {\n  const {\n    shouldPaidMessageAutoApprove,\n  } = getGlobal().settings.byKey;\n\n  const [shouldAutoApprove,\n    setAutoApprove] = useState(Boolean(shouldPaidMessageAutoApprove));\n  const [isWaitingStarsTopup, setIsWaitingStarsTopup] = useState(false);\n  const confirmPaymentHandlerRef = useRef<NoneToVoidFunction | undefined>(undefined);\n\n  const closeConfirmDialog = useLastCallback(() => {\n    getActions().closePaymentMessageConfirmDialogOpen();\n  });\n\n  useEffect(() => {\n    if (isWaitingStarsTopup && !isStarsBalanceModeOpen) {\n      setIsWaitingStarsTopup(false);\n\n      if (starsBalance > starsForAllMessages) {\n        confirmPaymentHandlerRef?.current?.();\n      }\n    }\n  }, [isWaitingStarsTopup, isStarsBalanceModeOpen, starsBalance, starsForAllMessages]);\n\n  const handleStarsTopup = useLastCallback(() => {\n    getActions().openStarsBalanceModal({\n      topup: {\n        balanceNeeded: starsForAllMessages,\n        purpose: PAID_MESSAGES_PURPOSE,\n      },\n    });\n    setIsWaitingStarsTopup(true);\n  });\n\n  const dialogHandler = useLastCallback(() => {\n    if (starsForAllMessages > starsBalance) {\n      handleStarsTopup();\n    } else {\n      confirmPaymentHandlerRef?.current?.();\n    }\n    getActions().closePaymentMessageConfirmDialogOpen();\n    if (shouldAutoApprove) getActions().setPaidMessageAutoApprove();\n  });\n\n  const handleWithConfirmation = <T extends (...args: any[]) => void>(\n    handler: T,\n    ...args: Parameters<T>\n  ) => {\n    if (starsForAllMessages) {\n      confirmPaymentHandlerRef.current = () => handler(...args);\n      if (!shouldPaidMessageAutoApprove) {\n        getActions().openPaymentMessageConfirmDialogOpen();\n        return;\n      }\n\n      if (starsForAllMessages > starsBalance) {\n        handleStarsTopup();\n        return;\n      }\n    }\n\n    handler(...args);\n  };\n\n  return {\n    closeConfirmDialog,\n    handleWithConfirmation,\n    dialogHandler,\n    shouldAutoApprove,\n    setAutoApprove,\n  };\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { isUserId } from '../../util/entities/ids';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { getServerTime } from '../../../util/serverTime';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  hasMiniApp?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n  isSelected?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n  hasMiniApp,\n  isSelected,\n}) => {\n  const { requestMainWebView } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => {\n    if (!isForum) {\n      return (topic || chat).unreadCount;\n    }\n\n    return topicsWithUnread?.length;\n  }, [chat, topic, topicsWithUnread, isForum]);\n\n  const shouldBeUnMuted = useMemo(() => {\n    if (!isForum) {\n      return !isMuted || topic?.notifySettings.mutedUntil === 0;\n    }\n\n    if (isMuted) {\n      return topicsWithUnread?.some((acc) => acc.notifySettings.mutedUntil === 0);\n    }\n\n    const isEveryUnreadMuted = topicsWithUnread?.every((acc) => (\n      acc.notifySettings.mutedUntil && acc.notifySettings.mutedUntil > getServerTime()\n    ));\n\n    return !isEveryUnreadMuted;\n  }, [isForum, isMuted, topicsWithUnread, topic?.notifySettings.mutedUntil]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened || hasMiniApp,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    !shouldBeUnMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chat.id,\n      peerId: chat.id,\n      theme,\n    });\n  });\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', !shouldBeUnMuted && 'muted')}>\n        <Icon name=\"heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <Icon name=\"mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', !shouldBeUnMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(lang, unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <Icon name=\"pinned-chat\" />\n      </div>\n    );\n\n    const miniAppButton = hasMiniApp && (\n      <Button\n        color={isSelected ? 'secondary' : 'primary'}\n        className=\"ChatBadge miniapp\"\n        pill\n        size=\"tiny\"\n        onClick={handleOpenApp}\n      >\n        {oldLang('BotOpen')}\n      </Button>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    // Show only if empty or have pinned icon\n    if (hasMiniApp && (elements.length === 0 || visiblePinnedElement)) return miniAppButton;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import type React from '../../../lib/teact/teact';\nimport { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  lastPlaybackTimestamp?: number;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  lastPlaybackTimestamp,\n  clickArg,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const { cancelMediaDownload } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const videoRef = useRef<HTMLVideoElement>();\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || video.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, video]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const shouldHidePreview = isPlayerReady && !isUnsupported;\n  const previewRef = useMediaTransition<HTMLImageElement>((hasThumb || previewBlobUrl) && !shouldHidePreview);\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) && !isUnsupported\n    ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          defaultMuted\n          muted\n          loop\n          playsInline\n          disablePictureInPicture\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <Icon ref={playButtonRef} name=\"large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <Icon name=\"download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <Icon name=\"message-failed\" className=\"playback-failed\" />}\n        </div>\n      )}\n      {Boolean(lastPlaybackTimestamp) && (\n        <div\n          className=\"message-media-last-progress\"\n          style={`--_progress: ${Math.floor((lastPlaybackTimestamp / duration) * 100)}%`}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule> | undefined;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string'\n        ? renderText(emoji, ['emoji_html'])[0] as string\n        : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  const triggerRef = useRef<HTMLDivElement>();\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'composer-action-button mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <Icon name=\"smile\" />\n          <Icon name=\"keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('composer-action-button symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <Icon name=\"smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_AVAILABLE = 'update-available',\n  DEEPLINK = 'deeplink',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_WINDOW_BUTTONS_POSITION = 'set-window-buttons-position',\n  SET_IS_AUTO_UPDATE_ENABLED = 'set-is-auto-update-enabled',\n  GET_IS_AUTO_UPDATE_ENABLED = 'get-is-auto-update-enabled',\n  SET_IS_TRAY_ICON_ENABLED = 'set-is-tray-icon-enabled',\n  GET_IS_TRAY_ICON_ENABLED = 'get-is-tray-icon-enabled',\n  RESTORE_LOCAL_STORAGE = 'restore-local-storage',\n}\n\nexport type WindowButtonsPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setWindowButtonsPosition: (position: WindowButtonsPosition) => Promise<void>;\n  /**\n   * @deprecated Use `setWindowButtonsPosition` instead\n   */\n  setTrafficLightPosition: (position: WindowButtonsPosition) => Promise<void>;\n  setIsAutoUpdateEnabled: (value: boolean) => Promise<void>;\n  getIsAutoUpdateEnabled: () => Promise<boolean>;\n  setIsTrayIconEnabled: (value: boolean) => Promise<void>;\n  getIsTrayIconEnabled: () => Promise<boolean>;\n  restoreLocalStorage: () => Promise<void>;\n\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: { text: '' },\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n): FoldersState => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: { text: action.payload },\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : { text: getSuggestedFolderName(state.includeFilters) },\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiDraft,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  groupStatefulContent,\n  isUserOnline,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsCurrentUserFrozen,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectMonoforumChannel,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectSender,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  monoforumChannel?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n  isAccountFrozen?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  monoforumChannel,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n  isAccountFrozen,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n    openFrozenAccountModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages, isMonoforum } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n    topics,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={isMonoforum ? monoforumChannel : peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          asMessageBubble={isMonoforum}\n          withStory={!user?.isSelf && !isMonoforum}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n            isSelected={isSelected}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={isMonoforum ? monoforumChannel! : peer}\n            isMonoforum={isMonoforum}\n            monoforumBadgeClassName=\"monoforum-badge\"\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              hasMiniApp={user?.hasMainMiniApp}\n              topics={topics}\n              isSelected={isSelected}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { isOutgoing, forwardInfo } = lastMessage || {};\n    const savedDialogSender = isSavedDialog && forwardInfo?.fromId ? selectPeer(global, forwardInfo.fromId) : undefined;\n    const messageSender = lastMessage ? selectSender(global, lastMessage) : undefined;\n    const lastMessageSender = savedDialogSender || messageSender;\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const userStatus = selectUserStatus(global, chatId);\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const monoforumChannel = selectMonoforumChannel(global, chatId);\n\n    return {\n      chat,\n      isMuted: getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id)),\n      lastMessageSender,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n      isAccountFrozen,\n      monoforumChannel,\n    };\n  },\n)(Chat));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks = new Set<NoneToVoidFunction>();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: String(zIndex),\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: String(zIndex),\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n\n            callbacks.delete(cb);\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: String(zIndex),\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: String(zIndex),\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar.classList.remove('animating');\n          });\n\n          callbacks.delete(cb);\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n}: {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import { IS_TOUCH_ENV } from './browser/windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/browser/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message)?.text !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import { useEffect, useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nimport { ELECTRON_WINDOW_DRAG_EVENT_START } from '../config';\nimport useLastCallback from './useLastCallback';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useLastCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  });\n\n  const end = useLastCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    cancel();\n  });\n\n  const cancel = useLastCallback(() => {\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  });\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  useEffect(() => {\n    document.body.addEventListener(ELECTRON_WINDOW_DRAG_EVENT_START, cancel);\n\n    return () => {\n      document.body.removeEventListener(ELECTRON_WINDOW_DRAG_EVENT_START, cancel);\n    };\n  }, []);\n\n  return {\n    onMouseDown: start,\n    onMouseUp: end,\n    onMouseLeave: end,\n    onTouchStart: start,\n    onTouchEnd: end,\n  };\n}\n\nexport default useLongPress;\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","import {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import type { ThemeKey } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ThemeKey,\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\nconst ARCHIVE_CUSTOM_PEER: CustomPeer = {\n  isCustomPeer: true,\n  title: 'Archived Chats',\n  avatarIcon: 'archive-filled',\n  customPeerAvatarColor: '#9EAAB5',\n};\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('ContextArchiveCollapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('ContextArchiveExpand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('ContextArchiveToMenu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <Icon name=\"archive-filled\" className={styles.icon} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <Avatar peer={ARCHIVE_CUSTOM_PEER} />\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch,\n}) => {\n  const { openSettingsScreen } = getActions();\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    openSettingsScreen({ screen: SettingsScreens.FoldersEditFolderFromChatList });\n  }, [chatFolder, foldersDispatch]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <Icon name=\"settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","import { memo } from '../../../lib/teact/teact';\n\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './FrozenAccountNotification.module.scss';\n\ntype OwnProps = {\n  onClick: () => void;\n};\n\nconst FrozenAccountNotification = ({ onClick }: OwnProps) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={styles.root}\n      onClick={onClick}\n    >\n      <div className={styles.title}>{lang('TitleFrozenAccount')}</div>\n      <div className={styles.subtitle}>{lang('SubtitleFrozenAccount')}</div>\n    </div>\n  );\n};\n\nexport default memo(FrozenAccountNotification);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"fOmerTkM\",\"title\":\"URLYINJA\",\"subtitle\":\"mCFsx7Tv\"};","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange }: OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport { IS_APP, IS_MAC_OS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport FrozenAccountNotification from './FrozenAccountNotification';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  isAccountFrozen?: boolean;\n  isMainList?: boolean;\n  foldersDispatch?: FolderEditDispatch;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  isAccountFrozen,\n  isMainList,\n  foldersDispatch,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n    openFrozenAccountModal,\n    openLeftColumnContent,\n  } = getActions();\n  const containerRef = useRef<HTMLDivElement>();\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n  const shouldShowFrozenAccountNotification = isAccountFrozen && isAllFolder;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n  const frozenNotificationHeight = shouldShowFrozenAccountNotification ? 68 : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return !isAccountFrozen && isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions, isAccountFrozen]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          if (isMainList) openLeftColumnContent({ contentKey: LeftColumnContent.Archived });\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, openChat, openNextChat, orderedIds, shouldDisplayArchive, isMainList,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    openLeftColumnContent({ contentKey: LeftColumnContent.Archived });\n    closeForumPanel();\n  });\n\n  const handleFrozenAccountNotificationClick = useLastCallback(() => {\n    openFrozenAccountModal();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + frozenNotificationHeight\n        + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + frozenNotificationHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldShowFrozenAccountNotification && (\n        <FrozenAccountNotification\n          key=\"frozen\"\n          onClick={handleFrozenAccountNotificationClick}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { IS_IOS, IS_SAFARI } from '../../util/browser/windowEnvironment';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: ElementRef<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  const overscrollTriggerRef = useRef<HTMLDivElement>();\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const ref = useRef<HTMLDivElement>();\n  const svgRef = useRef<SVGSVGElement>();\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <Icon name={isQuick ? 'photo' : 'document'} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[]) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useLang();\n  const { showNotification, updateAttachmentSettings } = getActions();\n  const hideTimeoutRef = useRef<number>();\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    if (editingMessage) {\n      if (files.length > 1) {\n        showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        return;\n      }\n\n      if (files.length === 1) {\n        const newAttachment = await buildAttachment(files[0].name, files[0]);\n        const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n        if (!canReplace) {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n          return;\n        }\n      }\n    }\n\n    onHide();\n    updateAttachmentSettings({ shouldCompress: withQuick ? false : undefined });\n    onFileSelect(files);\n  });\n\n  const handleQuickFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      const files = Array.from(dt.files);\n      if (editingMessage) {\n        if (files.length > 1) {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n          return;\n        }\n        if (files.length === 1) {\n          const newAttachment = await buildAttachment(files[0].name, files[0]);\n          const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n          if (!canReplace) {\n            showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n            return;\n          }\n        }\n      }\n\n      onHide();\n      updateAttachmentSettings({ shouldCompress: true });\n      onFileSelect(files);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement).matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { SVG_EXTENSIONS } from '../../config';\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSharedSettingOption } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSharedSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  const transitionRef = useRef<HTMLDivElement>();\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(lang(valueKey, [formattedDate, age], undefined, age))}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"botVerificationSection\":\"RWFu5ENh\",\"sectionInfo\":\"IrqRJFxm\",\"botVerificationIcon\":\"b32hsSPS\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiBotVerification,\n  ApiChat,\n  ApiCountryCode,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUsername,\n} from '../../../api/types';\nimport type { BotAppPermissions } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectBotAppPermissions,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport CustomEmoji from '../CustomEmoji';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n  isBotCanManageEmojiStatus?: boolean;\n  botAppPermissions?: BotAppPermissions;\n  botVerification?: ApiBotVerification;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst BOT_VERIFICATION_ICON_SIZE = 16;\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n  isBotCanManageEmojiStatus,\n  botAppPermissions,\n  botVerification,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n    toggleUserEmojiStatusPermission,\n    toggleUserLocationPermission,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    if (isTopicInfo) {\n      updateTopicMutedState({\n        chatId: chatId!,\n        topicId: topicId!,\n        isMuted: !isMuted,\n      });\n    } else {\n      updateChatMutedState({ chatId: chatId!, isMuted: !isMuted });\n    }\n  });\n\n  const manageEmojiStatusChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserEmojiStatusPermission({ botId: user.id, isEnabled: !isBotCanManageEmojiStatus });\n  });\n\n  const handleLocationPermissionChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserLocationPermission({ botId: user.id, isAccessGranted: !botAppPermissions?.geolocation });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  if (chat?.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%'))\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      {hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            size=\"smaller\"\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" narrow ripple onClick={handleNotificationChange}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={!isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n      {userFullInfo && 'isBotAccessEmojiGranted' in userFullInfo && (\n        <ListItem icon=\"user\" narrow ripple onClick={manageEmojiStatusChange}>\n          <span>{oldLang('BotProfilePermissionEmojiStatus')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionEmojiStatus')}\n            checked={isBotCanManageEmojiStatus}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botAppPermissions?.geolocation !== undefined && (\n        <ListItem icon=\"location\" narrow ripple onClick={handleLocationPermissionChange}>\n          <span>{oldLang('BotProfilePermissionLocation')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionLocation')}\n            checked={botAppPermissions?.geolocation}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botVerification && (\n        <div className={styles.botVerificationSection}>\n          <CustomEmoji\n            className={styles.botVerificationIcon}\n            documentId={botVerification.iconId}\n            size={BOT_VERIFICATION_ICON_SIZE}\n          />\n          {botVerification.description}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const botAppPermissions = chatOrUserId ? selectBotAppPermissions(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const botVerification = userFullInfo?.botVerification || chatFullInfo?.botVerification;\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      botAppPermissions,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n      isBotCanManageEmojiStatus: userFullInfo?.isBotCanManageEmojiStatus,\n      botVerification,\n    };\n  },\n)(ChatExtra));\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n          className={styles.share}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\",\"share\":\"Sbagy_Tm\"};","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiTopic, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n} from '../global/helpers';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/browser/windowEnvironment';\nimport { isUserId } from '../util/entities/ids';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  topics,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  topics?: Record<number, ApiTopic>;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChat');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('ChannelLeave');\n    }\n\n    return lang('GroupLeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      markChatMessagesRead,\n      markChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? lang('ChatListOpenInNewWindow') : lang('ChatListOpenInNewTab'),\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('ChatListUnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('ChatListPinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatListContextAddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatsUnmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatsMute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (\n      chat.unreadCount || chat.hasUnreadMark || Object.values(topics || {}).some(({ unreadCount }) => unreadCount)\n    ) ? {\n        title: lang('ChatListContextMaskAsRead'),\n        icon: 'readchats',\n        handler: () => markChatMessagesRead({ id: chat.id }),\n      } : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('ChatListContextMaskAsUnread'), icon: 'unread', handler: () => markChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeerReport'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview, topics,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","import type { FC, StateHookSetter } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport { formatStarsAsText } from '../../util/localization/format';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './PaymentMessageConfirmDialog.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  userName?: string;\n  messagePriceInStars: number;\n  messagesCount: number;\n  shouldAutoApprove: boolean;\n  setAutoApprove: StateHookSetter<boolean>;\n  confirmHandler: NoneToVoidFunction;\n};\n\nconst PaymentMessageConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  userName,\n  messagePriceInStars,\n  messagesCount,\n  shouldAutoApprove: shouldPaidMessageAutoApprove,\n  setAutoApprove: setShouldPaidMessageAutoApprove,\n  confirmHandler,\n}) => {\n  const lang = useLang();\n\n  const confirmPaymentMessage = lang('ConfirmationModalPaymentForMessage', {\n    user: userName,\n    amount: formatStarsAsText(lang, messagePriceInStars),\n    totalAmount: formatStarsAsText(lang, messagePriceInStars * messagesCount),\n    count: messagesCount,\n  }, {\n    withMarkdown: true,\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  const confirmLabel = lang('PayForMessage', { count: messagesCount }, {\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  return (\n    <ConfirmDialog\n      title={lang('TitleConfirmPayment')}\n      confirmLabel={confirmLabel}\n      isOpen={isOpen}\n      onClose={onClose}\n      confirmHandler={confirmHandler}\n    >\n      {confirmPaymentMessage}\n      <Checkbox\n        className={styles.checkBox}\n        label={lang('DoNotAskAgain')}\n        checked={shouldPaidMessageAutoApprove}\n        onCheck={setShouldPaidMessageAutoApprove}\n      />\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(PaymentMessageConfirmDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkBox\":\"eScpikxM\"};","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { IAnchorPosition, MessageListType, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/browser/windowEnvironment';\nimport { isUserId } from '../../util/entities/ids';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  channelMonoforumId?: string;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n  isAccountFrozen?: boolean;\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  channelMonoforumId,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  isAccountFrozen,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n    openFrozenAccountModal,\n  } = getActions();\n  const menuButtonRef = useRef<HTMLButtonElement>();\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  }, [language, lang]);\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <Icon name=\"language\" />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <Icon name=\"search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <Icon name=\"phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <Icon name=\"user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <Icon name=\"more\" />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          channelMonoforumId={channelMonoforumId}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined && !chat.isMonoforum,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat))) && !chat.isMonoforum;\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread && !chat.isMonoforum\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel) && !chat.isMonoforum;\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const channelMonoforumId = isChatChannel(chat) ? chat.linkedMonoforumId : undefined;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n      isAccountFrozen,\n      channelMonoforumId,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","import type {\n  ElementRef } from '../../../lib/teact/teact';\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n}: {\n  ref?: ElementRef<RefType>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  const localRef = useRef<RefType>();\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n    onStateChange?.({\n      height: 0,\n      isOpen: false,\n    });\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","interface OwnProps {\n  isOwn?: boolean;\n}\n\nfunction MessageAppendix({ isOwn }: OwnProps) {\n  const path = isOwn\n    ? 'M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z'\n    : 'M3 17h6V0c-.193 2.84-.876 5.767-2.05 8.782-.904 2.325-2.446 4.485-4.625 6.48A1 1 0 003 17z';\n  return (\n    <svg width=\"9\" height=\"20\" className=\"svg-appendix\">\n      <defs>\n        <filter x=\"-50%\" y=\"-14.7%\" width=\"200%\" height=\"141.2%\" filterUnits=\"objectBoundingBox\" id=\"messageAppendix\">\n          <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n          <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n          <feColorMatrix\n            values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n            in=\"shadowBlurOuter1\"\n          />\n        </filter>\n      </defs>\n      <g fill=\"none\" fill-rule=\"evenodd\">\n        <path d={path} fill=\"#000\" filter=\"url(#messageAppendix)\" />\n        <path d={path} fill={isOwn ? '#EEFFDE' : 'FFF'} className=\"corner\" />\n      </g>\n    </svg>\n  );\n}\n\nexport default MessageAppendix;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectMonoforumChannel,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  withMonoforumStatus?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  threadInfo?: ApiThreadInfo;\n  topic?: ApiTopic;\n  onlineCount?: number;\n  areMessagesLoaded: boolean;\n  messagesCount?: number;\n  self?: ApiUser;\n  monoforumChannel?: ApiChat;\n};\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat: realChat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  withMonoforumStatus,\n  monoforumChannel,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const chat = !withMonoforumStatus && monoforumChannel ? monoforumChannel : realChat;\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={oldLang('Updating')} />\n      );\n    }\n\n    if (withMonoforumStatus) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {lang('MonoforumStatus')}\n        </span>\n      );\n    }\n\n    if (realChat?.isMonoforum) {\n      return undefined;\n    }\n\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && oldLang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{oldLang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(oldLang, chat);\n    const onlineStatus = onlineCount ? `, ${oldLang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && oldLang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            asMessageBubble={Boolean(monoforumChannel)}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              isMonoforum={!withMonoforumStatus && Boolean(monoforumChannel)}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n    const monoforumChannel = selectMonoforumChannel(global, chatId);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n      monoforumChannel,\n    };\n  },\n)(GroupChatInfo));\n","import type React from '../../../lib/teact/teact';\nimport { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ThemeKey } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ThemeKey;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const ref = useRef<HTMLDivElement>();\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || photo.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, photo]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {fullMediaData && (\n        <img\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <Icon ref={downloadButtonRef} name=\"download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">\n          {Math.round(transferProgress * 100)}\n          %\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","import type { ElementRef, FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Icon from './icons/Icon';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: ElementRef<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  let elementRef = useRef<HTMLDivElement>();\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <Icon\n            name={actionIcon || 'download'}\n            className={buildClassName('action-icon', shouldSpinnerRender && 'hidden')}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  const lastMessageRef = useRef<HTMLDivElement>();\n  const mainColumnRef = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import {\n  useCallback, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n} from '../../../../global/helpers';\nimport { getMessageSenderName } from '../../../../global/helpers/peers';\nimport buildClassName from '../../../../util/buildClassName';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport Icon from '../../../common/icons/Icon';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  lastMessageTopic,\n  lastMessageSender,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const oldLang = useOldLang();\n  const ref = useRef<HTMLDivElement>();\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? getMessageMediaThumbDataUri(mediaContent) : undefined;\n  const mediaBlobUrl = useMedia(mediaHasPreview ? getMessageMediaHash(mediaContent, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n      && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{oldLang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            asPreview: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    const senderName = lastMessageSender\n      ? getMessageSenderName(oldLang, chatId, lastMessageSender)\n      : undefined;\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<Icon name=\"share-filled\" className=\"chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<Icon name=\"story-reply\" className=\"chat-prefix-icon\" />)}\n        {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    chat, chatId, draft, isRoundVideo, isTopic, oldLang, lastMessage, lastMessageSender, lastMessageTopic,\n    mediaBlobUrl, mediaThumbnail, observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { IS_SAFARI } from './browser/windowEnvironment';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport { isUserId } from '../../util/entities/ids';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n    deleteChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useLastCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  });\n\n  const handleDeleteAndStop = useLastCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  });\n\n  const handleDeleteChat = useLastCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      if (chat.isCreator) {\n        deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n        deleteChat({ chatId: chat.id });\n      } else {\n        deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n        deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      }\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  });\n\n  const handleLeaveChat = useLastCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else if (isBasicGroup && chat.isCreator) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n    } else {\n      handleDeleteChat();\n    }\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ThemeKey;\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ThemeKey, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ThemeKey;\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import useForceUpdate from '../useForceUpdate';\nimport useInterval from './useInterval';\n\nexport default function useIntervalForceUpdate(interval?: number) {\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, interval, true);\n}\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_STANDARD_QUALITY_IMG_SIZE = 1280; // px\nconst MAX_HIGH_QUALITY_IMG_SIZE = 2560;\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n  const shouldSendInHighQuality = options?.shouldSendInHighQuality;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const maxQuickImgSize = shouldSendInHighQuality ? MAX_HIGH_QUALITY_IMG_SIZE : MAX_STANDARD_QUALITY_IMG_SIZE;\n    const shouldShrink = Math.max(width, height) > maxQuickImgSize;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? maxQuickImgSize / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          ...options,\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width, height, duration };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blob,\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","import { fetchBlob } from './files';\n\ntype AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { parseBlob, selectCover } = await import('music-metadata');\n  const blob = await fetchBlob(url);\n  const metadata = await parseBlob(blob);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  isChatGroup,\n} from '../../../../global/helpers';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { isUserId } from '../../../../util/entities/ids';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getPeerTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import { IS_IOS } from '../../../../util/browser/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../../hooks/useLang';\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst VALID_TARGET_IDS = new Set([EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID]);\nconst CLOSEST_CONTENT_EDITABLE_SELECTOR = 'div[contenteditable]';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = (e.target as HTMLElement)?.closest(CLOSEST_CONTENT_EDITABLE_SELECTOR);\n      if (!input || !VALID_TARGET_IDS.has(input.id)) {\n        return;\n      }\n\n      e.preventDefault();\n\n      // Some extensions can trigger paste into their panels without focus\n      if (document.activeElement !== input) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text');\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && newAttachments?.length > 1) {\n        showNotification({\n          message: lang('MediaReplaceInvalidError', undefined, { pluralValue: newAttachments.length }),\n        });\n        return;\n      }\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: 1 }) });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({\n            message: lang('MediaReplaceInvalidError', undefined, { pluralValue: newAttachments.length }),\n          });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiMessage } from '../../../../api/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n}: {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({\n        chatId,\n        messageIds: [editedMessage.id],\n        isSchedule: type === 'scheduled',\n      });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1])\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: (volume: number) => void) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: (volume: number) => void) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { MessageListType, ThemeKey, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ThemeKey;\n  onFileSelect: (files: File[]) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  paidMessagesStars?: number;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  canEditMedia,\n  editingMessage,\n  messageListType,\n  paidMessagesStars,\n}) => {\n  const {\n    updateAttachmentSettings,\n  } = getActions();\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    updateAttachmentSettings({ shouldCompress: true });\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    updateAttachmentSettings({ shouldCompress: false });\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId\n          && bot.attachMenuPeerTypes && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>\n            {lang(messageListType === 'scheduled' && paidMessagesStars\n              ? 'DescriptionScheduledPaidMediaNotAllowed'\n              : 'DescriptionRestrictedMedia')}\n          </MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {oldLang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {oldLang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {oldLang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{oldLang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n\n                onClick={() => clickBotInlineButton({ chatId: message.chatId, messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  const textRef = useRef<HTMLSpanElement>();\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('composer-action-button bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <Icon name=\"webapp\" className={buildClassName('bot-menu-icon', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { unique } from '../../../util/iteratees';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n  forwardMessageIds?: number[];\n  fromChatId?: string;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n  forwardMessageIds,\n  fromChatId,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const selectSenderFromForwardedMessage = useLastCallback((forwardedMessage: ApiMessage) => {\n    const global = getGlobal();\n    sender = selectForwardedSender(global, forwardedMessage);\n    if (!sender) {\n      sender = selectSender(global, forwardedMessage);\n    }\n    return sender;\n  });\n\n  const forwardSenders = useMemo(() => {\n    if (!isForwarding) return undefined;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(getGlobal(), fromChatId!, id))\n      .filter(Boolean);\n    const senders = forwardedMessages?.map((m) => selectSenderFromForwardedMessage(m)).filter(Boolean);\n    return senders ? unique(senders) : undefined;\n  }, [isForwarding, forwardMessageIds, fromChatId]);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (forwardSenders && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          composerForwardSenders={forwardSenders}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    const selectSenderFromForwardedMessage = (forwardedMessage: ApiMessage) => {\n      sender = selectForwardedSender(global, forwardedMessage);\n      if (!sender) {\n        sender = selectSender(global, forwardedMessage);\n      }\n      return sender;\n    };\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      let forwardSenders = forwardedMessages?.map((m) => selectSenderFromForwardedMessage(m)).filter(Boolean);\n      forwardSenders = forwardSenders ? unique(forwardSenders) : undefined;\n      sender = forwardSenders?.length === 1 ? forwardSenders?.[0] : undefined;\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n      forwardMessageIds,\n      fromChatId,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThemeKey, ThreadId, WebPageMediaSize } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ThemeKey;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n  attachmentSettings,\n  isEditing,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isShown);\n\n  const hasMediaSizeOptions = webPagePreview?.hasLargeMedia;\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector('.web-page-preview-context-menu .bubble'),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"web-page-preview-context-menu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('PreviewSender.MoveTextUp')}\n              </MenuItem>\n            ) : (\n\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang(('PreviewSender.MoveTextDown'))}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ChatInput.EditLink.LargerMedia')}\n              </MenuItem>\n            ) : (\n\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang(('ChatInput.EditLink.SmallerMedia'))}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ChatInput.EditLink.RemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)} ref={ref}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\" onClick={handlePreviewClick}>\n          <Icon name=\"link\" />\n        </div>\n        <WebPage\n          message={messageStub}\n          inPreview\n          theme={theme}\n          onContainerClick={handlePreviewClick}\n          isEditing={isEditing}\n        />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiDisallowedGifts,\n  ApiDraft,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiPeer,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  GlobalState, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition,\n  InlineBotSettings,\n  MessageList,\n  MessageListType,\n  ThemeKey,\n  ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  DEFAULT_MAX_MESSAGE_LENGTH,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatPublic,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n} from '../../global/helpers';\nimport { getChatNotifySettings } from '../../global/helpers/notifications';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectNoWebPage,\n  selectPeer,\n  selectPeerPaidMessagesStars,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport { selectSharedSettings } from '../../global/selectors/sharedState';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport { isUserId } from '../../util/entities/ids';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { formatStarsAsIcon } from '../../util/localization/format';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport usePaidMessageConfirmation from '../middle/composer/hooks/usePaidMessageConfirmation';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport AnimatedCounter from './AnimatedCounter';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport PaymentMessageConfirmDialog from './PaymentMessageConfirmDialog';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: TeactNode | string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    shouldDisplayGiftsButton?: boolean;\n    isForwarding?: boolean;\n    forwardedMessagesCount?: number;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsPeer?: ApiPeer;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ThemeKey;\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    paidMessagesStars?: number;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n    maxMessageLength: number;\n    shouldPaidMessageAutoApprove?: boolean;\n    isSilentPosting?: boolean;\n    isPaymentMessageConfirmDialogOpen: boolean;\n    starsBalance: number;\n    isStarsBalanceModalOpen: boolean;\n    disallowedGifts?: ApiDisallowedGifts;\n    isAccountFrozen?: boolean;\n    isAppConfigLoaded?: boolean;\n    insertingPeerIdMention?: string;\n    pollMaxAnswers?: number;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  shouldDisplayGiftsButton,\n  isForwarding,\n  forwardedMessagesCount,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsPeer,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  paidMessagesStars,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n  maxMessageLength,\n  isSilentPosting,\n  isPaymentMessageConfirmDialogOpen,\n  starsBalance,\n  isStarsBalanceModalOpen,\n  disallowedGifts,\n  isAccountFrozen,\n  isAppConfigLoaded,\n  insertingPeerIdMention,\n  pollMaxAnswers,\n  onDropHide,\n  onFocus,\n  onBlur,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    openGiftModal,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n    updateChatSilentPosting,\n    updateInsertingPeerIdMention,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const inputRef = useRef<HTMLDivElement>();\n  const counterRef = useRef<HTMLSpanElement>();\n\n  const storyReactionRef = useRef<HTMLButtonElement>();\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = Boolean(sendAsPeerIds?.length);\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const isMonoforum = chat?.isMonoforum;\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const canSchedule = !paidMessagesStars && !isMonoforum;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (isAppConfigLoaded && chatId && isReady && !isInStoryViewer && !isMonoforum) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer, isAppConfigLoaded, isMonoforum]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    const isChatWithSendAs = chat && isChatSuperGroup(chat)\n      && Boolean(isChatPublic(chat) || chat.isLinkedInDiscussion || chat.hasGeo);\n    if (!sendAsPeerIds && isReady && (isChatWithSendAs || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat,\n      chatFullInfo,\n      isChatWithBot,\n      isChatWithSelf,\n      isInStoryViewer,\n      paidMessagesStars,\n      isInScheduledList),\n    [chat, chatFullInfo, isChatWithBot, isChatWithSelf, isInStoryViewer, paidMessagesStars, isInScheduledList],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const messagesCount = useDerivedState(() => {\n    if (hasAttachments) return attachments.length;\n    const messagesInInput = (getHtml() || hasAttachments) ? 1 : 0;\n    if (!isForwarding || !forwardedMessagesCount) return messagesInInput || 1;\n    return forwardedMessagesCount + messagesInInput;\n  }, [getHtml, hasAttachments, attachments, isForwarding, forwardedMessagesCount]);\n  const starsForAllMessages = paidMessagesStars ? messagesCount * paidMessagesStars : 0;\n\n  const {\n    closeConfirmDialog: closeConfirmModalPayForMessage,\n    dialogHandler: paymentMessageConfirmDialogHandler,\n    shouldAutoApprove: shouldPaidMessageAutoApprove,\n    setAutoApprove: setShouldPaidMessageAutoApprove,\n    handleWithConfirmation: handleActionWithPaymentConfirmation,\n  } = usePaidMessageConfirmation(starsForAllMessages, isStarsBalanceModalOpen, starsBalance);\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = (renderText(text, ['escape_html', 'emoji_html', 'br_html']) as string[])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n    shouldSendInHighQuality: attachmentSettings.shouldSendInHighQuality,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  useEffect(() => {\n    if (!insertingPeerIdMention) return;\n    const peer = selectPeer(getGlobal(), insertingPeerIdMention);\n    if (peer) {\n      insertMention(peer, true, true);\n    }\n    updateInsertingPeerIdMention({ peerId: undefined });\n  }, [insertingPeerIdMention, insertMention]);\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft) || isMonoforum,\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const areAllGiftsDisallowed = useMemo(() => {\n    if (!disallowedGifts) {\n      return undefined;\n    }\n    return Object.values(disallowedGifts).every(Boolean);\n  }, [disallowedGifts]);\n\n  const shouldShowGiftButton = Boolean(!isChatWithSelf && shouldDisplayGiftsButton && !areAllGiftsDisallowed);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: oldLang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: oldLang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : maxMessageLength;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: oldLang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const canSendAttachments = (attachmentsToSend: ApiAttachment[]): boolean => {\n    if (!currentMessageList && !storyId) {\n      return false;\n    }\n\n    const { text } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return false;\n    }\n    if (!validateTextLength(text, true)) return false;\n    if (!checkSlowMode()) return false;\n\n    return true;\n  };\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n    isSilent = isSilent || isSilentPosting;\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      if (editingMessage) {\n        sendAttachments({\n          attachments,\n          sendCompressed,\n          sendGrouped,\n          isInvertedMedia,\n        });\n        return;\n      }\n\n      handleActionWithPaymentConfirmation(sendAttachments, {\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      sendAttachments({\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isSilent,\n        scheduledAt,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendCore = useLastCallback(\n    (currentAttachments: ApiAttachment[], isSilent = false, scheduledAt?: number) => {\n      const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n      if (currentAttachments.length) {\n        if (canSendAttachments(currentAttachments)) {\n          sendAttachments({\n            attachments: currentAttachments,\n            scheduledAt,\n            isSilent,\n          });\n        }\n        return;\n      }\n\n      if (!text && !isForwarding) {\n        return;\n      }\n\n      if (!validateTextLength(text)) return;\n\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const effectId = effect?.id;\n\n      if (text || isForwarding) {\n        if (!checkSlowMode()) return;\n\n        const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n        if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n        sendMessage({\n          messageList: currentMessageList,\n          text,\n          entities,\n          scheduledAt,\n          isSilent,\n          shouldUpdateStickerSetOrder,\n          isInvertedMedia,\n          effectId,\n          webPageMediaSize: attachmentSettings.webPageMediaSize,\n          webPageUrl: hasWebPagePreview ? webPagePreview.url : undefined,\n          isForwarding,\n        });\n      }\n\n      lastMessageSendTimeSeconds.current = getServerTime();\n      clearDraft({\n        chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n      });\n\n      if (IS_IOS && messageInput && messageInput === document.activeElement) {\n        applyIosAutoCapitalizationFix(messageInput);\n      }\n\n      // Wait until message animation starts\n      requestMeasure(() => {\n        resetComposer();\n      });\n    },\n  );\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    handleSendCore(currentAttachments, isSilent, scheduledAt);\n  });\n\n  const handleSendWithConfirmation = useLastCallback((isSilent = false, scheduledAt?: number) => {\n    handleActionWithPaymentConfirmation(handleSend, isSilent, scheduledAt);\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        chatId,\n        threadId,\n        queryId,\n        scheduledAt,\n        isSilent: isSilent || isSilentPosting,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(handleMessageSchedule, { gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(sendMessage, { messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule, { sticker, isSilent }, scheduledAt, currentMessageList!,\n        );\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        {\n          messageList: currentMessageList,\n          sticker,\n          isSilent,\n          shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n        },\n      );\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(handleMessageSchedule,\n          {\n            id: inlineResult.id,\n            queryId: inlineResult.queryId,\n            isSilent,\n          },\n          scheduledAt,\n          currentMessageList!);\n      });\n    } else {\n      handleActionWithPaymentConfirmation(sendInlineBotResult,\n        {\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          threadId,\n          chatId,\n          isSilent,\n        });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { poll },\n          scheduledAt,\n          currentMessageList,\n        );\n      });\n      closePollModal();\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        { messageList: currentMessageList, poll, isSilent: isSilentPosting },\n      );\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: chatId });\n  });\n\n  const handleToggleSilentPosting = useLastCallback(() => {\n    const newValue = !isSilentPosting;\n    updateChatSilentPosting({ chatId, isEnabled: newValue });\n\n    showNotification({\n      localId: 'silentPosting',\n      icon: newValue ? 'mute' : 'unmute',\n      message: lang(`ComposerSilentPosting${newValue ? 'Enabled' : 'Disabled'}Tootlip`),\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const hasText = useDerivedState(() => Boolean(getHtml()), [getHtml]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage\n    && messageListType === 'thread';\n  const isBotMenuButtonOpen = withBotMenuButton && !hasText && !activeVoiceRecording;\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n    || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n\n  const placeholder = useMemo(() => {\n    if (activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER) {\n      return '';\n    }\n\n    if (!isComposerBlocked) {\n      if (botKeyboardPlaceholder) return botKeyboardPlaceholder;\n      if (inputPlaceholder) return inputPlaceholder;\n      if (paidMessagesStars) {\n        return lang('ComposerPlaceholderPaidMessage', {\n          amount: formatStarsAsIcon(lang, paidMessagesStars, { asFont: true, className: 'placeholder-star-icon' }),\n        }, {\n          withNodes: true,\n        });\n      }\n\n      if (chat?.adminRights?.anonymous) {\n        return lang('ComposerPlaceholderAnonymous');\n      }\n\n      if (chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID) {\n        return replyToTopic\n          ? lang('ComposerPlaceholderTopic', { topic: replyToTopic.title })\n          : lang('ComposerPlaceholderTopicGeneral');\n      }\n      if (isChannel) {\n        return lang(isSilentPosting ? 'ComposerPlaceholderBroadcastSilent' : 'ComposerPlaceholderBroadcast');\n      }\n      return lang('ComposerPlaceholder');\n    }\n\n    if (isInStoryViewer) return lang('ComposerStoryPlaceholderLocked');\n\n    return lang('ComposerPlaceholderNoText');\n  }, [\n    activeVoiceRecording, botKeyboardPlaceholder, chat, inputPlaceholder, isChannel, isComposerBlocked,\n    isInStoryViewer, isSilentPosting, lang, replyToTopic, threadId, windowWidth, paidMessagesStars,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        handleSendWithConfirmation();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: oldLang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId, messageListType });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    handleActionWithPaymentConfirmation(sendMessage, { text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(sendSilent);\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(\n      handleMessageSchedule, {}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id,\n    );\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(handleMessageSchedule,\n          { sendCompressed, sendGrouped, isInvertedMedia },\n          scheduledAt,\n          currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      handleActionWithPaymentConfirmation(sendSilent, { sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => {\n    saveEffectInDraft({ chatId, threadId, effectId: undefined });\n  });\n\n  const handleStopEffect = useLastCallback(() => {\n    hideEffectInComposer({ });\n  });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSendWithConfirmation;\n    }\n  }, [mainButtonState, handleEditComplete, handleSendWithConfirmation]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  const shouldRenderPaidBadge = Boolean(paidMessagesStars && mainButtonState === MainButtonState.Send);\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={canSchedule && isInScheduledList}\n        canSchedule={canSchedule}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n        paidMessagesStars={paidMessagesStars}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        maxOptionsCount={pollMaxAnswers}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName(\n                    'bot-commands', 'composer-action-button',\n                  )}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && sendAsPeer && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={oldLang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    'composer-action-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsPeer}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium && !isAccountFrozen) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={placeholder}\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n            messageListType={messageListType}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              <Transition\n                className=\"composer-action-buttons-container\"\n                slideClassName=\"composer-action-buttons\"\n                activeKey={Number(hasText)}\n                direction=\"inverse\"\n                name=\"slideFadeAndroid\"\n              >\n                {!hasText && (\n                  <>\n                    {isChannel && (\n                      <Transition className=\"composer-action-button\" name=\"reveal\" activeKey={Number(isSilentPosting)}>\n                        <Button\n                          round\n                          faded\n                          className=\"composer-action-button\"\n                          color=\"translucent\"\n                          onClick={handleToggleSilentPosting}\n                          ariaLabel={lang(\n                            isSilentPosting ? 'AriaComposerSilentPostingDisable' : 'AriaComposerSilentPostingEnable',\n                          )}\n                        >\n                          <Icon name={isSilentPosting ? 'mute' : 'unmute'} />\n                        </Button>\n                      </Transition>\n                    )}\n                    {withScheduledButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button scheduled-button\"\n                        color=\"translucent\"\n                        onClick={handleAllScheduledClick}\n                        ariaLabel={lang('AriaComposerOpenScheduled')}\n                      >\n                        <Icon name=\"schedule\" />\n                      </Button>\n                    )}\n                    {shouldShowGiftButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button\"\n                        color=\"translucent\"\n                        onClick={handleGiftClick}\n                      >\n                        <Icon name=\"gift\" />\n                      </Button>\n                    )}\n                    {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                      <ResponsiveHoverButton\n                        className={buildClassName('composer-action-button', isBotKeyboardOpen && 'activated')}\n                        round\n                        color=\"translucent\"\n                        onActivate={openBotKeyboard}\n                        ariaLabel={lang('AriaComposerBotKeyboard')}\n                      >\n                        <Icon name=\"bot-command\" />\n                      </ResponsiveHoverButton>\n                    )}\n                  </>\n                )}\n              </Transition>\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n              messageListType={messageListType}\n              paidMessagesStars={paidMessagesStars}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={oldLang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={oldLang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <Icon name=\"heart\" className={buildClassName(isSentStoryReactionHeart && 'story-reaction-heart')} />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={oldLang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <Icon name=\"send\" />\n        <Icon name=\"microphone-alt\" />\n        {onForward && <Icon name=\"forward\" />}\n        {isInMessageList && <Icon name=\"schedule\" />}\n        {isInMessageList && <Icon name=\"check\" />}\n        <Button\n          className={buildClassName('paidStarsBadge', shouldRenderPaidBadge && 'visible')}\n          nonInteractive\n          size=\"tiny\"\n          color=\"stars\"\n          pill\n          fluid\n        >\n          <div className=\"paidStarsBadgeText\">\n            <Icon name=\"star\" className={buildClassName('star-amount-icon', className)} />\n            <AnimatedCounter\n              ref={counterRef}\n              text={lang.number(starsForAllMessages)}\n            />\n          </div>\n        </Button>\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={canSchedule && isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n      <PaymentMessageConfirmDialog\n        isOpen={isPaymentMessageConfirmDialogOpen}\n        onClose={closeConfirmModalPayForMessage}\n        userName={chat ? getPeerTitle(lang, chat) : undefined}\n        messagePriceInStars={paidMessagesStars || 0}\n        messagesCount={messagesCount}\n        shouldAutoApprove={shouldPaidMessageAutoApprove}\n        setAutoApprove={setShouldPaidMessageAutoApprove}\n        confirmHandler={paymentMessageConfirmDialogHandler}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const appConfig = global.appConfig;\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const userFullInfo = isChatWithUser ? selectUserFullInfo(global, chatId) : undefined;\n    const paidMessagesStars = selectPeerPaidMessagesStars(global, chatId);\n\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const {\n      shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder, shouldPaidMessageAutoApprove,\n    } = global.settings.byKey;\n    const { language, shouldCollectDebugLogs } = selectSharedSettings(global);\n    const {\n      forwardMessages: { messageIds: forwardMessageIds },\n    } = selectTabState(global);\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = defaultSendAsId;\n    const sendAsPeer = sendAsId ? selectPeer(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !userFullInfo?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const isSilentPosting = chat && getChatNotifySettings(\n      chat,\n      selectNotifyDefaults(global),\n      selectNotifyException(global, chatId),\n    )?.isSilentPosting;\n\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n      && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    const maxMessageLength = global.config?.maxMessageLength || DEFAULT_MAX_MESSAGE_LENGTH;\n    const isForwarding = chatId === tabState.forwardMessages.toChatId;\n    const starsBalance = global.stars?.balance.amount || 0;\n    const isStarsBalanceModalOpen = Boolean(tabState.starsBalanceModal);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n    const isAppConfigLoaded = global.isAppConfigLoaded;\n    const insertingPeerIdMention = tabState.insertingPeerIdMention;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && (userFullInfo || chatFullInfo)?.hasScheduledMessages\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: userFullInfo ? (userFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: userFullInfo?.botInfo?.menuButton,\n      sendAsPeer,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview: selectTabState(global).webPagePreview,\n      isContactRequirePremium: userFullInfo?.isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n      maxMessageLength,\n      paidMessagesStars,\n      shouldPaidMessageAutoApprove,\n      isSilentPosting,\n      isPaymentMessageConfirmDialogOpen: tabState.isPaymentMessageConfirmDialogOpen,\n      starsBalance,\n      isStarsBalanceModalOpen,\n      shouldDisplayGiftsButton: userFullInfo?.shouldDisplayGiftsButton,\n      disallowedGifts: userFullInfo?.disallowedGifts,\n      isAccountFrozen,\n      isAppConfigLoaded,\n      insertingPeerIdMention,\n      pollMaxAnswers: appConfig?.pollMaxAnswers,\n    };\n  },\n)(Composer));\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n  shouldSendInHighQuality,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n  shouldSendInHighQuality?: boolean;\n}) {\n  const lang = useLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file,\n          { shouldSendAsSpoiler: isSpoiler || undefined, shouldSendInHighQuality })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[]) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) =>\n        buildAttachment(file.name, file, { shouldSendInHighQuality })));\n      handleSetAttachments(newAttachments);\n    }\n  });\n\n  const handleUpdateAttachmentsQuality = useLastCallback(async () => {\n    const newAttachments = await Promise.all(attachments.map((attachment) =>\n      buildAttachment(attachment.filename, attachment.blob, { shouldSendInHighQuality })));\n    handleSetAttachments(newAttachments);\n  });\n\n  useEffect(() => {\n    handleUpdateAttachmentsQuality();\n  }, [shouldSendInHighQuality]);\n\n  return {\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  const recordButtonRef = useRef<HTMLButtonElement>();\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { isUserId } from '../../../util/entities/ids';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): StateProps => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","import {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst NO_SHINY_TYPES = new Set<ApiMediaArea['type']>(['channelPost', 'uniqueGift']);\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, openUniqueGiftBySlug, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element.clientWidth);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n      case 'uniqueGift': {\n        openUniqueGiftBySlug({ slug: mediaArea.slug });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url':\n          case 'uniqueGift': {\n            const isShiny = isActive && !NO_SHINY_TYPES.has(mediaArea.type);\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport cycleRestrict from '../util/cycleRestrict';\nimport { preloadImage } from '../util/files';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\nimport useLastCallback from './useLastCallback';\n\nconst RADIUS_RATIO = 0.1; // Use 10% of the smallest dimension as the blur radius\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  const blurThumb = useLastCallback(async (canvas: HTMLCanvasElement, uri: string) => {\n    const image = await preloadImage(uri);\n    if (!image) {\n      return;\n    }\n\n    requestMutation(() => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      offscreenRef.current = canvas.transferControlToOffscreen();\n\n      const radius = Math.ceil(Math.min(image.width, image.height) * RADIUS_RATIO);\n\n      requestMediaWorker({\n        name: 'offscreen-canvas:blurThumb',\n        args: [offscreenRef.current, uri, radius],\n        transferables: [offscreenRef.current],\n      }, workerIndex);\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    blurThumb(canvas, thumbData);\n  }, [blurThumb, isDisabled, thumbData]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useCallback, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import type { ApiLimitType } from '../../api/types';\nimport type { GlobalState } from '../types';\n\nimport { DEFAULT_LIMITS } from '../../config';\nimport { selectIsCurrentUserPremium } from './users';\n\nexport function selectCurrentLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) {\n    return DEFAULT_LIMITS[limit][0];\n  }\n\n  const isPremium = selectIsCurrentUserPremium(global);\n  const { limits } = appConfig;\n\n  // When there are new limits when updating a layer, until we get a new configuration, we must use the default values\n  const value = limits[limit]?.[isPremium ? 1 : 0] ?? DEFAULT_LIMITS[limit][isPremium ? 1 : 0];\n  if (limit === 'dialogFilters') return value + 1; // Server does not count \"All\" as folder, but we need to\n  return value;\n}\n\nexport function selectPremiumLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) return DEFAULT_LIMITS[limit][1];\n\n  const { limits } = appConfig;\n\n  return limits[limit][1];\n}\n","import type { ElementRef, FC } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ThemeKey } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ThemeKey;\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  const seekerRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isPlaying) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && formatMediaDuration(duration * playProgress, duration)}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <Icon name={isDownloading ? 'close' : 'arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: ElementRef<HTMLDivElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio.size * progress)} / ` : undefined}\n          {getFileSizeString(audio.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: ElementRef<HTMLDivElement>,\n  waveformCanvasRef: ElementRef<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <Icon\n              name={(isTranscribed || isTranscriptionError) ? 'down' : 'transcribe'}\n              className={buildClassName(\n                'transcribe-icon',\n                (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n              )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media.duration) : formatMediaDuration(media.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ThemeKey,\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: ElementRef<HTMLDivElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import type { ElementRef } from '../lib/teact/teact';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { IS_SAFARI } from '../util/browser/windowEnvironment';\nimport { makeProgressiveLoader } from '../util/progressiveLoader';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: ElementRef<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/browser/windowEnvironment';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n} from '../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { isUserId } from '../../util/entities/ids';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  const videoRef = useRef<HTMLVideoElement>();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPeerPhotos, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectPeerPhotos,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n  isForMonoforum?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    emojiStatusSticker?: ApiSticker;\n    emojiStatusSlug?: string;\n    profilePhotos?: ApiPeerPhotos;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\nconst STATUS_UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  emojiStatusSticker,\n  emojiStatusSlug,\n  profilePhotos,\n  peerId,\n  isForMonoforum,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n    openUniqueGiftBySlug,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useIntervalForceUpdate(user ? STATUS_UPDATE_INTERVAL : undefined);\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (oldLang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (emojiStatusSlug) {\n      openUniqueGiftBySlug({ slug: emojiStatusSlug });\n      return;\n    }\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={oldLang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? oldLang('Chat.Title.Topic', messagesCount, 'i') : oldLang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (isForMonoforum) {\n      return (\n        <span className={buildClassName(styles.status, 'status')} dir=\"auto\">\n          {lang('MonoforumStatus')}\n        </span>\n      );\n    }\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(oldLang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{oldLang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">\n        {\n          isChatChannel(chat!)\n            ? oldLang('Subscribers', chat!.membersCount ?? 0, 'i')\n            : oldLang('Members', chat!.membersCount ?? 0, 'i')\n        }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo')}\n      dir={oldLang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && profilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {oldLang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && profilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={profilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {oldLang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={oldLang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={oldLang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={oldLang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={oldLang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={oldLang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n    const emojiStatusSlug = emojiStatus?.type === 'collectible' ? emojiStatus.slug : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      emojiStatusSticker,\n      emojiStatusSlug,\n      profilePhotos,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <Icon name=\"story-expired\" className={styles.expiredIcon} />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n    ApiChannelStatistics |\n    ApiGroupStatistics |\n    ApiPostStatistics |\n    ApiBoostStatistics |\n    ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative\n          ? `-${formatIntegerCompact(lang, Math.abs(change))}`\n          : `+${formatIntegerCompact(lang, change)}`}\n        {percentage && (\n          <>\n            {' '}\n            (\n            {percentage}\n            %)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}\n          <span className={styles.decimalPart}>\n            .\n            {decimalTonPart}\n          </span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ $\n          {integerUsdPart}\n          <span className={styles.decimalUsdPart}>\n            .\n            {decimalUsdPart}\n          </span>\n        </span>\n        <h3 className={styles.tableHeading}>{oldLang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = statistics as ApiGroupStatistics;\n  const { balances, usdRate } = statistics as ApiChannelMonetizationStatistics;\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(oldLang, period.minDate * 1000)}\n            {' '}\n            —\n            {formatFullDate(oldLang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}\n                      %\n                    </span>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(lang, field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type React from '../../lib/teact/teact';\nimport { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport buildClassName from '../../util/buildClassName';\nimport { isUserId } from '../../util/entities/ids';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  const ref = useRef<HTMLDivElement>();\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getPeerTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  const ref = useRef<HTMLDivElement>();\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import type {\n  ElementRef } from '../../../../lib/teact/teact';\nimport {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: ElementRef<HTMLDivElement>,\n  sharedCanvasRef: ElementRef<HTMLCanvasElement>,\n  sharedCanvasHqRef: ElementRef<HTMLCanvasElement>,\n  absoluteContainerRef: ElementRef<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, undefined, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: ElementRef<HTMLCanvasElement>;\n  sharedCanvasHqRef: ElementRef<HTMLCanvasElement>;\n  absoluteContainerRef: ElementRef<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent } from 'react';\nimport type { ElementRef, FC, TeactNode } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  getIsHeavyAnimating,\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type {\n  IAnchorPosition, MessageListType, SharedSettings, ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce, fastRaf } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: ElementRef<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: TeactNode | string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: SharedSettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n  messageListType,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  let inputRef = useRef<HTMLDivElement>();\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const selectionTimeoutRef = useRef<number>();\n  const cloneRef = useRef<HTMLDivElement>();\n  const scrollerCloneRef = useRef<HTMLDivElement>();\n  const sharedCanvasRef = useRef<HTMLCanvasElement>();\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>();\n  const absoluteContainerRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    // Defer to avoid animation/layout conflicts during DOM updates\n    fastRaf(() => {\n      requestForcedReflow(() => {\n        const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n        const currentHeight = Number(scroller.style.height.replace('px', ''));\n        const clone = scrollerCloneRef.current!;\n        const { scrollHeight } = clone;\n        const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n        if (newHeight === currentHeight) {\n          return undefined;\n        }\n\n        const isOverflown = scrollHeight > maxInputHeight;\n\n        function exec() {\n          const transitionDuration = Math.round(\n            TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n          );\n          scroller.style.height = `${newHeight}px`;\n          scroller.style.transitionDuration = `${transitionDuration}ms`;\n          scroller.classList.toggle('overflown', isOverflown);\n        }\n\n        if (willSend) {\n          // Delay to next frame to sync with sending animation\n          requestMutation(exec);\n          return undefined;\n        } else {\n          return exec;\n        }\n      });\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId, messageListType });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n  const placeholderAriaLabel = typeof placeholder === 'string' ? placeholder : undefined;\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={oldLang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholderAriaLabel}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <Icon name=\"lock-badge\" className=\"placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {oldLang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = selectSharedSettings(global);\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { throttle } from '../../util/schedulers';\n\nconst THROTTLE_DELAY = 100;\n\nconst useMarkScrolled = ({\n  containerRef, selector,\n}: {\n  containerRef: ElementRef<HTMLDivElement>;\n  selector: string;\n}, deps: unknown[]) => {\n  useEffect(() => {\n    const elements = containerRef?.current?.querySelectorAll(selector);\n    if (!elements?.length) return undefined;\n\n    const handleScroll = throttle((event: Event) => {\n      const target = event.target as HTMLElement;\n      const isScrolled = target.scrollTop > 0;\n      requestMutation(() => {\n        target.classList.toggle('scrolled', isScrolled);\n      });\n    }, THROTTLE_DELAY);\n\n    elements.forEach((el) => el.addEventListener('scroll', handleScroll, { passive: true }));\n    // Trigger the scroll handler immediately to apply the current state\n    elements.forEach((el) => el.dispatchEvent(new Event('scroll', { bubbles: false })));\n\n    return () => {\n      elements.forEach((el) => el.removeEventListener('scroll', handleScroll));\n    };\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [containerRef, selector, ...deps]);\n};\n\nexport default useMarkScrolled;\n","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values<number>(orderDiffById);\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/browser/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: ElementRef<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getMessageMediaThumbDataUri,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const playerRef = useRef<HTMLVideoElement>();\n  const circleRef = useRef<SVGCircleElement>();\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n  const isMediaUnread = message.isMediaUnread;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isActivated) {\n      onReadMedia();\n    }\n  }, [isActivated, isMediaUnread, onReadMedia]);\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n    setCurrentTime(Math.floor(playerEl.currentTime));\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            defaultMuted\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <Icon name=\"download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div\n          className={buildClassName(\n            'message-media-duration', isMediaUnread && 'unread',\n          )}\n        >\n          {isActivated ? formatMediaDuration(currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","import type {\n  ElementRef } from '../lib/teact/teact';\nimport {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  const controllerRef = useRef<ReturnType<typeof register>>();\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: ElementRef<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import type { ElementRef, FC } from '../../../lib/teact/teact';\nimport {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  sponsorInfo?: string;\n  canReport?: boolean;\n  triggerRef: ElementRef<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredContextMenu: FC<OwnProps> = ({\n  isOpen,\n  sponsorInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  const menuRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = sponsorInfo || !shouldSkipAbout || canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredContextMenu);\n","import type { ElementRef, FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredContextMenu from './SponsoredContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  randomId: string;\n  sponsorInfo?: string;\n  additionalInfo?: string;\n  canReport?: boolean;\n  anchor: IAnchorPosition;\n  triggerRef: ElementRef<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  randomId,\n  sponsorInfo,\n  additionalInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsored,\n    hideSponsored,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({\n      randomId,\n      additionalInfo,\n      canReport,\n      sponsorInfo,\n    });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsored();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [sponsorInfo, additionalInfo].filter(Boolean).join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsored({ randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        canReport={canReport}\n        sponsorInfo={sponsorInfo}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { groupStatefulContent } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectSender,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport Icon from '../../common/icons/Icon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  lastMessageSender?: ApiPeer;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  isChatMuted,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed, notifySettings,\n  } = topic;\n  const isMuted = Boolean(notifySettings.mutedUntil || (notifySettings.mutedUntil === undefined && isChatMuted));\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    isChatMuted,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {Boolean(notifySettings.mutedUntil) && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <Icon name=\"lock-badge\" className={styles.closedIcon} />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { isOutgoing } = lastMessage || {};\n    const lastMessageSender = lastMessage && selectSender(global, lastMessage);\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    const isChatMuted = chat && getIsChatMuted(\n      chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id),\n    );\n\n    return {\n      chat,\n      lastMessage,\n      lastMessageSender,\n      typingStatus,\n      isChatMuted,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport { compact } from '../../../../util/iteratees';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  isChatMuted,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, notifySettings, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((isChatMuted && notifySettings.mutedUntil === undefined) || notifySettings.mutedUntil)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, isChatMuted, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const containerRef = useRef<HTMLDivElement>();\n  const scrollTopHandlerRef = useRef<HTMLDivElement>();\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: (e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      },\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { ElectronEvent } from '../../types/electron';\n\nimport { IS_IOS } from '../../util/browser/windowEnvironment';\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen<T extends HTMLElement>(elRef: ElementRef<T>, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: HTMLElement) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatTranslatedMessages } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  composerForwardSenders?: ApiPeer[];\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  composerForwardSenders,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = containedMedia && getMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const senderTitle = sender ? getPeerTitle(oldLang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n\n  const forwardSendersTitle = useMemo(() => {\n    if (!composerForwardSenders) return undefined;\n\n    const peerTitles = composerForwardSenders.map((peer) => getPeerTitle(lang, peer)).filter(Boolean);\n    return lang.conjunction(peerTitles);\n  }, [composerForwardSenders, lang]);\n\n  const senderChatTitle = senderChat ? getPeerTitle(oldLang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getPeerTitle(oldLang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        asPreview: true,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(oldLang, media.content, {});\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle && !forwardSendersTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <span className=\"embedded-sender-wrapper\">\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {!composerForwardSenders && senderTitle\n              && renderText(isReplyToQuote ? oldLang('ReplyToQuote', senderTitle) : senderTitle)}\n            {forwardSendersTitle && renderText(lang('ComposerTitleForwardFrom', {\n              users: forwardSendersTitle,\n            }, {\n              withNodes: true,\n              withMarkdown: true,\n            }))}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderForwardSender() {\n    return forwardSenderTitle && !areSendersSame && (\n      <span className=\"embedded-forward-sender-wrapper\">\n        <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n        <span className=\"forward-sender-title\">\n          {renderText(forwardSenderTitle)}\n        </span>\n      </span>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      peer={sender}\n      emojiIconClassName=\"EmbeddedMessage--background-icons\"\n      ref={ref}\n      shouldReset\n      noUserColors={noUserColors}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n        'no-selection',\n        composerForwardSenders && 'is-input-forward',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {renderForwardSender()}\n        </div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressiveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideos) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.target = '_blank';\n  link.rel = 'noopener noreferrer';\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","import { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  const anchorRef = useRef<HTMLDivElement>();\n  const ref = useRef<HTMLDivElement>();\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n"],"names":["Keys","memo","MessageOutgoingStatus","status","_jsx","className","children","Transition","name","activeKey","Icon","withGlobal","global","userId","chat","selectCurrentChat","user","selectUser","contactName","getUserFirstOrLastName","undefined","DeleteMemberModal","isOpen","onClose","deleteChatMember","getActions","lang","useOldLang","handleDeleteChatMember","useCallback","chatId","id","ConfirmDialog","title","textParts","renderText","confirmLabel","confirmHandler","confirmIsDestructive","IGNORE_TAGS","Set","handlers","createCallbackManager","useHotkeys","hotkeys","useEffect","entries","Object","addCallback","e","target","HTMLElement","has","tagName","shouldFireEvent","forEach","hotkey","handler","event","alt","ctrl","meta","mod","shift","key","altKey","ctrlKey","metaKey","shiftKey","pressedKey","Boolean","toLowerCase","code","replace","isExactHotkey","keys","split","map","part","trim","modifiers","includes","reservedKeys","find","parseHotkey","getHotkeyMatcher","document","documentElement","addEventListener","runCallbacks","THROTTLE","RE_ENDS_ON_EMOJI","RegExp","twemojiRegex","source","RE_ENDS_ON_EMOJI_IMG","EMOJI_IMG_REGEX","useCustomEmojiTooltip","isEnabled","getHtml","setHtml","getSelectionRange","inputRef","customEmojis","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","useFlag","extractLastEmojiThrottled","useThrottledResolver","html","collapsed","match","IS_EMOJI_SUPPORTED","htmlBeforeSelection","getHtmlBeforeSelection","current","getLastEmoji","useDerivedSignal","isActive","useDerivedState","hasCustomEmojis","length","lastEmoji","emoji","insertCustomEmoji","useLastCallback","inputEl","regexText","regex","count","newHtml","buildCustomEmojiHtml","repeat","htmlAfterSelection","innerHTML","substring","requestNextMutation","focusEditableElement","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","ConnectorClass","requestStates","Map","requestStatesByCallback","pendingPayloads","pendingTransferables","constructor","onUpdate","channel","destroy","init","args","this","postMessageOnTickEnd","type","request","messageData","transferables","restMessageData","messageId","generateUniqueId","payload","requestState","promise","Promise","resolve","reject","assign","withCallback","callback","pop","set","catch","finally","delete","cancelCallback","progressCallback","isCanceled","get","onMessage","data","payloads","update","error","response","callbackArgs","Error","message","push","postMessagesOnTickEnd","throttleWithTickEnd","postMessage","createConnector","worker","connector","handleMessage","removeEventListener","RE_USERNAME_SEARCH","useMentionTooltip","groupChatMembers","topInlineBotIds","currentUserId","useLang","filteredUsers","setFilteredUsers","useState","extractUsernameTagThrottled","prepareForRegExp","getUsernameTag","getWithInlineBots","startsWith","usernameTag","usersById","getGlobal","users","byId","memberIds","reduce","acc","member","filter","filteredIds","filterPeersByQuery","ids","unique","query","values","pickTruthy","insertMention","peer","forceFocus","insertAtEnd","hasUsername","getPeerTitle","mainUsername","getMainUsername","userFirstOrLastName","htmlToInsert","ApiMessageEntityTypes","MentionName","fixedHtmlBeforeSelection","cleanWebkitNewLines","atIndex","lastIndexOf","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","useOrderDiff","orderedIds","orderById","useMemo","i","prevOrderById","usePreviousDeprecated","prevChatId","orderDiffById","mapValues","order","getAnimationType","useChatAnimationType","OFFSET_X","REM","useOverlayPosition","anchorRef","overlayRef","isMirrored","isForMessageEffect","isDisabled","updatePosition","element","anchor","anchorRect","getBoundingClientRect","elementRect","windowWidth","window","innerWidth","requestMutation","anchorCenterY","top","height","anchorBottomY","bottom","y","style","left","right","messagesContainer","closest","passive","MAX_NESTING_PARENTS","isSelectionInsideInput","selectionRange","inputId","commonAncestorContainer","parentNode","iterations","parentElement","useForumPanelRender","isForumPanelOpen","shouldRenderForumPanelRef","useRef","isAnimationStartedRef","forceUpdate","useForceUpdate","useSyncEffect","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","WebPageUniqueGift","gift","observeIntersectionForLoading","observeIntersectionForPlaying","onClick","stickerRef","backdrop","model","pattern","getGiftAttributes","backgroundColors","centerColor","edgeColor","_jsxs","RadialPatternBackground","patternColor","patternIcon","sticker","ref","StickerView","containerRef","size","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","WebPage","noAvatars","canAutoLoad","canAutoPlay","inPreview","asForwarded","isDownloading","isProtected","isConnected","story","theme","backgroundEmojiId","shouldWarnAboutSvg","autoLoadFileMaxSizeMb","lastPlaybackTimestamp","isEditing","onMediaClick","onDocumentClick","onContainerClick","onAudioPlay","onCancelMediaTransfer","openUrl","openTelegramLink","webPage","getMessageWebPage","isMobile","useAppLayout","stickersRef","oldLang","handleMediaClick","handleContainerClick","handleOpenTelegramLink","url","storyData","stickers","useEnsureStory","peerId","hasCustomColor","isWithTextColor","documents","shouldUseTextColor","customColor","useDynamicColorListener","linkTimestamp","parsedLink","tryParseDeepLink","timestamp","siteName","displayUrl","description","photo","video","audio","mediaSize","isStory","isGift","quickButtonLangKey","getWebpageButtonLangKey","isEmoji","quickButtonTitle","truncatedDescription","trimText","isArticle","isSquarePhoto","width","calculateMediaDimensions","media","isOwn","isOutgoing","isInWebPage","isMediaInteractive","buildClassName","PeerColorWrapper","dir","isRtl","EmojiIconBackground","emojiDocumentId","BaseStory","isPreview","shouldSkipModal","SafeLink","text","Photo","observeIntersection","nonInteractive","onCancelUpload","Video","Audio","origin","AudioOrigin","Inline","onPlay","Document","shouldLoop","caption","Button","color","isRectangular","noForcedUpperCase","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","styles","root","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","rect","x","scrollX","scrollY","innerHeight","seed","Math","floor","Date","now","filterId","SNAP_EFFECT_ID","component","ghost","viewBox","createFilter","min","elementContainer","svg","jsxToHtml","foreignObject","querySelector","computedStyle","getComputedStyle","clone","cloneNode","Array","from","setProperty","getPropertyValue","appendChild","snapContainer","getElementById","removeChild","once","smallestSide","baseSeed","xmlns","SVG_NAMESPACE","baseFrequency","numOctaves","result","in","slope","intercept","attributeName","dur","fill","in2","operator","scale","xChannelSelector","yChannelSelector","getSingularPaidMedia","extendedMedia","singularMedia","duration","accumulate","list","initValue","accumulator","item","calculateContainerSize","layout","dimensions","sides","calculateAlbumLayout","album","ratios","messages","isSingleMessage","content","paidMedia","getMessageContent","getRatios","isPaidMedia","proportions","ratio","join","getProportions","averageRatio","getAverageRatio","albumCount","forceCalc","some","maxWidth","getAvailableWidth","params","minWidth","maxHeight","spacing","originalRatios","clamp","cropRatios","attempts","pushAttempt","lineCounts","heights","offset","currentCount","multiHeight","attemptCount","sum","slice","first","second","third","fourth","optimalAttempt","optimalDiff","lineCount","totalHeight","bad1","bad2","line","diff","abs","optimalCounts","optimalHeights","rowCount","index","row","colCount","lineHeight","round","col","layoutWithComplexLayouter","AlbumRectPart","layoutTwoTopBottom","layoutTwoLeftRightEqual","minimalWidth","secondWidth","max","firstWidth","layoutTwoLeftRight","layoutTwo","firstHeight","thirdHeight","secondHeight","rightWidth","leftWidth","layoutThreeLeftAndOther","layoutThreeTopAndOther","layoutThree","w","h0","h","w0","w2","w1","h1","layoutFourTopAndOther","h2","layoutFourLeftAndOther","layoutFour","containerStyle","initializationDeferred","Deferred","IS_TRANSLATION_SUPPORTED","setTimeout","Worker","URL","CHAT_STATS","throttledMakeChatDecision","throttle","updateChatDetectedLanguage","chatStats","messagesChecked","translatableCount","detectableCount","languageOccurrences","metadata","isTranslatable","detectedLanguage","language","occurrences","sort","a","b","QUICK_REACTION_AREA_WIDTH","QUICK_REACTION_AREA_HEIGHT","Number","GROUP_MESSAGE_HOVER_ATTRIBUTE","useOuterHandlers","selectMessage","isInSelectMode","canReply","onContextMenu","handleBeforeContextMenu","isContextMenuShown","quickReactionRef","shouldHandleMouseLeave","getIsMessageListReady","updateDraftReplyInfo","sendDefaultReaction","isQuickReactionVisible","markQuickReactionVisible","unmarkQuickReactionVisible","isSwiped","markSwiped","unmarkSwiped","doubleTapTimeoutRef","handleMouseMove","useThrottledCallback","quickReactionContainer","clientX","clientY","quickReactionX","quickReactionWidth","quickReactionY","quickReactionHeight","isVisibleX","isVisibleY","requestMeasure","IS_TOUCH_ENV","startedAt","captureEvents","selectorToPreventScroll","excludedClosestSelector","onSwipe","direction","SwipeDirection","Left","onRelease","replyToMsgId","handleMouseDown","preventMessageInputBlur","handleClick","clearInterval","IS_ANDROID","classList","contains","windowSize","getIsKeyboardVisible","handleTap","handleContextMenu","stopEvent","matches","preventDefault","handleDoubleClick","replyToPeerId","quoteText","quoteOffset","handleContentDoubleClick","stopPropagation","handleSendQuickReaction","handleMouseLeave","lastGroupElement","getLastElementInDocumentGroup","currentTarget","removeAttribute","handleDocumentGroupMouseLeave","handleDocumentGroupMouseEnter","setAttribute","nextElementSibling","renderPictogram","srcUrl","getPictogramDimensions","src","draggable","EmbeddedStory","sender","noUserColors","showNotification","isIntersecting","useIsIntersecting","isFullStory","isExpiredStory","isVideoStory","mediaBlobUrl","useMedia","getStoryMediaHash","mediaThumbnail","thumbnail","dataUri","pictogramUrl","senderTitle","handleFastClick","useFastClick","peerColor","shouldReset","onMouseDown","TOPIC_ICON_SIZE","TopicChip","topic","getTopicColorCssVariable","iconColor","TopicIcon","blankSrc","isClosed","withSelectControl","WrappedComponent","ownProps","clickArg","noSelectControls","selectIsInSelectMode","isSelected","selectIsMessageSelected","props","toggleMessageSelection","handleMessageSelect","withShift","newProps","dims","PhotoWithSelect","VideoWithSelect","selectTheme","activeDownloads","selectActiveDownloads","uploadsByKey","fileUploads","byMessageKey","Album","hasCustomAppendix","albumLayout","cancelUploadMedia","mainMessage","mediaCount","handlePaidMediaClick","handleAlbumMessageClick","handleCancelUpload","containerWidth","containerHeight","renderingPaidMedia","paidPhotoOrPreview","paidVideoOrPreview","getMessagePhoto","fileUpload","getMessageKey","uploadProgress","progress","selectCanAutoLoadMedia","selectCanAutoPlayMedia","shouldAffectAppendix","getMessageHtmlId","mediaType","getIsDownloading","SIZE","useAnimatedEmoji","soundId","activeEmojiInteractions","preferredSize","interactWithAnimatedEmoji","sendEmojiInteraction","sendWatchingEmojiInteraction","audioRef","soundMediaData","buildStyle","IS_ELECTRON","interactions","startedInteractions","sendInteractionBunch","play","pause","remove","safePlay","container","startSize","isReversed","performance","interactionMessageId","emoticon","customEmojiId","withEffects","effect","selectAnimatedEmojiEffect","selectAnimatedEmojiSound","noPlay","AnimatedCustomEmoji","getCustomEmojiSize","CustomEmoji","documentId","LIKE_STICKER_ID","isBig","withSharedAnimation","forceOnHeavyAnimation","selectAnimatedEmoji","AnimatedEmoji","forceLoadPreview","AnimatedIconFromSticker","quality","noLoad","forcePreview","forceAlways","CommentButton","isCustomShape","threadInfo","disabled","isLoading","asActionButton","openThread","openFrozenAccountModal","shouldRenderLoading","useAsyncRendering","originMessageId","messagesCount","lastMessageId","lastReadInboxMessageId","recentReplierIds","originChannelId","selectIsCurrentUserFrozen","isComments","recentRepliers","selectPeer","hasUnread","commentsText","s","AnimatedCounter","formatIntegerCompact","role","tabIndex","Avatar","Spinner","getContactName","contact","firstName","lastName","countryList","phoneCodes","phoneCodeList","Contact","openChat","openAddContactDialog","openChatWithInfo","phoneNumber","isRegistered","canAddContact","getCanAddContact","handleOpenChat","handleAddContact","copyTextToClipboard","emojiIconClassName","getUserFullName","formatPhoneNumberWithCode","_Fragment","isText","ripple","ContextMenuContainer","useModuleLoader","Bundles","Extra","COLOR","FactCheck","factCheck","isToggleDisabled","cutoutRef","isCollapsed","isCollapsible","setIsCollapsed","useCollapsibleLines","countryLocalized","countryCode","Intl","DisplayNames","of","canExpand","handleExpand","handleToggle","prev","renderTextWithEntities","entities","Separator","Game","canAutoLoadMedia","clickBotInlineButton","game","photoHash","getGamePreviewPhotoHash","videoHash","getGamePreviewVideoHash","photoBlobUrl","videoBlobUrl","handleGameClick","button","inlineButtons","Skeleton","playsInline","muted","disablePictureInPicture","autoPlay","loop","getMessageText","giveaway","selectChat","channelIds","selectForwardedSender","giftSticker","selectGiftStickerForDuration","months","Giveaway","isLoadingInfo","giveawayInfo","setGiveawayInfo","giveawayResults","isResults","untilDate","prizeDescription","stars","isOwnMessage","quantity","winnersCount","hasEnded","getServerTime","translatedNames","countries","isoToEmoji","handlePeerClick","channelId","handleShowInfoClick","async","callApi","handleCloseInfo","giveawayInfoTitle","AnimatedIconWithPreview","tgsUrl","LOCAL_TGS_URLS","PartyPopper","noLoop","winnerIds","PeerChip","forceShowSelf","withPeerColors","renderGiveawayResultsDescription","formatDateTimeToString","renderGiveawayDescription","isOnlyConfirm","isResultsInfo","chatTitle","isApiPeerChat","getChatTitle","endDate","formatDateAtTime","otherChannelsCount","otherChannelsString","isSeveral","firstKey","giveawayDuration","firstParagraph","additionalPrizes","secondKey","secondParagraph","activatedCount","isRefunded","isWinner","lastParagraph","disallowedCountry","adminDisallowedChatId","disallowedChat","chats","disallowedChatTitle","joinedTooEarlyDate","isParticipating","renderGiveawayInfo","InlineButtons","renderIcon","RE_TME_LINK","test","buttonTexts","texts","renderKeyboardButtonText","j","Invoice","forcedWidth","invoice","getMessageInvoice","amount","currency","isTest","photoUrl","getWebDocumentHash","withBlurredBackground","blurredBackgroundRef","useBlurredMediaThumbRef","useLayoutEffectWithPrevDeps","prevShouldAffectAppendix","contentEl","MESSAGE_CONTENT_SELECTOR","getCustomAppendixBg","then","appendixBg","CUSTOM_APPENDIX_ATTRIBUTE","crossOrigin","forceAspectRatio","formatCurrency","iconClassName","InvoiceMediaPreview","openInvoice","loadExtendedMedia","refreshExtendedMedia","useInterval","isExtendedMedia","MediaSpoiler","thumbDataUri","isVisible","spoiler","formatMediaDuration","buy","lock","formatCurrencyAsString","TIMER_CIRCUMFERENCE","TIMER_RADIUS","PI","MOVE_THRESHOLD","DEFAULT_MAP_CONFIG","zoom","PinSvg","cx","cy","r","d","Location","openMapModal","countdownRef","location","getMessageLocation","geo","serverTime","isExpired","isGeoLiveExpired","secondsBeforeEnd","date","period","point","setPoint","shouldRenderText","dpr","useDevicePixelRatio","mediaHash","buildStaticMapHash","prevMediaBlobUrl","mapBlobUrl","accuracyRadiusPx","accuracyRadius","lat","getMetersPerPixel","updateCountdown","countdownEl","svgEl","lastElementChild","timerEl","firstElementChild","timeLeft","strokeDashOffset","formatCountdownShort","textContent","renderPin","pinClassName","heading","getVenueColor","venueType","iconSrc","getVenueIconUrl","mapPin","useLayoutEffect","long","useTimeout","geoPoint","renderOverlay","address","formatLocationLastUpdate","editDate","transform","renderInfo","MessageMeta","outgoingStatus","signature","withReactionOffset","repliesThreadInfo","renderQuickReactionButton","noReplies","isTranslated","isPinned","withFullDate","effectEmoji","onTranslationClick","onEffectClick","onOpenThread","paidMessageStars","isActivated","markActivated","handleImportedClick","dateTitle","createDateTime","timeFormat","editDateTime","isEdited","forwardedDateTime","forwardInfo","savedDate","viewsTitle","viewsCount","number","pluralValue","forwardsCount","repliesTitle","time","formatTime","formatPastTimeShort","fullClassName","isImported","formatStarsAsIcon","asFont","containerClassName","onMouseEnter","isVideoProcessingPending","MessagePhoneCall","phoneCall","requestMasterAndRequestCall","isVideo","reason","isMissed","isCancelled","handleCall","formattedDuration","formatTimeDuration","timeFormatted","ARE_CALLS_SUPPORTED","ariaLabel","getCallMessageKey","PaidMediaOverlay","isClickable","isBought","buttonText","value","starsAmount","replaceWithTeact","STARS_ICON_PLACEHOLDER","StarIcon","fluid","pill","getPercentage","total","toFixed","PollOption","answer","voteResults","totalVoters","maxVotersCount","correctResults","shouldAnimate","option","correctAnswer","indexOf","showIcon","isChosen","answerPercent","votersCount","finalPercent","setFinalPercent","lineWidth","isAnimationDoesNotStart","lineStyle","getPollTypeString","summary","isPublic","closed","quiz","getReadableVotersCount","isQuiz","Poll","poll","onSendVote","loadMessage","openPollResults","requestConfetti","results","isSubmitting","setIsSubmitting","chosenOptions","setChosenOptions","wasSubmitted","setWasSubmitted","closePeriod","setClosePeriod","closeDate","timerCircleRef","hasVoted","canVote","canViewResult","isMultiple","multipleChoice","recentVoterIds","isCorrect","answers","label","hidden","chosen","add","timer","clearTimeout","recentVoters","handleRadioChange","handleCheckboxChange","options","handleVoteClick","handleViewResultsClick","showSolution","localId","solution","solutionEntities","containerSelector","question","AvatarList","peers","CheckboxGroup","selected","onChange","isScheduled","loadingOptions","isRound","RadioGroup","loadingOption","Sticker","shouldPlayEffect","withEffect","onStopEffect","openStickerSet","effectRef","stickerSetInfo","hasEffect","isPreloadedGlobally","getStickerMediaHash","IS_WEBM_SUPPORTED","canLoad","canPlay","mediaHashEffect","effectBlobUrl","ApiMediaFormat","BlobUrl","isPlayingEffect","startPlayingEffect","stopPlayingEffect","handleEffectEnded","shouldRenderEffect","openModal","action","actionText","isMemojiSticker","getStickerDimensions","fullMediaHash","fullMediaClassName","Portal","AnimatedSticker","isLowPriority","onEnded","selectPeerStory","connectionState","lastReadId","selectPeerStories","targetUser","isUnread","openStoryViewer","storyId","isSinglePeer","isSingleStory","isDeleted","isLoaded","imageHash","thumbUrl","isSelf","QUICK_REACTION_SIZE","EXTRA_SPACE_FOR_REACTIONS","focusedMessage","forwardMessages","activeReactions","loadingThread","selectTabState","withSenderName","withAvatar","threadId","messageListType","isLastInDocumentGroup","isFirstInGroup","viaBotId","transcriptionId","viaBusinessBotId","effectId","selectSharedSettings","isChatWithUser","isUserId","isChatWithSelf","selectIsChatWithSelf","isSystemBotChat","isSystemBot","isAnonymousForwards","isAnonymousForwardsChat","isChannel","isChatChannel","isGroup","isChatGroup","chatFullInfo","selectChatFullInfo","webPageStoryData","webPageStory","isForwarding","messageIds","forceSenderName","isAnonymousOwnMessage","canShowSender","selectSender","originSender","botSender","senderAdminMember","adminMembersById","isThreadTop","replyFrom","getMessageReplyInfo","storyReplyPeerId","storyReplyId","getStoryReplyInfo","shouldHideReply","replyMessage","selectReplyMessage","forwardHeader","replyMessageSender","selectSenderFromHeader","replyMessageForwardSender","replyMessageChat","isReplyPrivate","isChatPublic","isNotJoined","isRestricted","isReplyToTopicStart","replyStory","storySender","selectUploadProgress","isFocused","m","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","isResizingContainer","quote","focusedQuote","focusedQuoteOffset","scrollTargetPosition","middleSearch","selectCurrentMiddleSearch","highlight","isHashtag","singleEmoji","getMessageSingleRegularEmoji","animatedEmoji","animatedCustomEmoji","getMessageSingleCustomEmoji","every","selectCanReplyToMessage","downloadableMedia","getMessageDownloadableMedia","selectThreadInfo","commentsMessage","isInDocumentGroup","groupedId","isInAlbum","documentGroupFirstMessageId","selectMessageIdsByGroupId","reactionMessage","selectChatMessage","hasUnreadReaction","unreadReactions","hasTopicChip","MAIN_THREAD_ID","isForum","messageTopic","selectTopicFromMessage","chatTranslations","selectChatTranslations","requestedTranslationLanguage","selectRequestedMessageTranslationLanguage","requestedChatTranslationLanguage","selectRequestedChatTranslationLanguage","areTranslationsEnabled","settings","byKey","canTranslate","hasActiveReactions","isPremium","selectIsCurrentUserPremium","senderBoosts","boostsApplied","chatLevel","boostLevel","transcribeMinLevel","appConfig","groupTranscribeLevelMin","canTranscribeVoice","viaBusinessBot","availableEffectById","selectPollFromMessage","maxTimestamp","selectMessageTimestampableDuration","selectMessageLastPlaybackTimestamp","isAccountFrozen","selectIsMessageProtected","isChatProtected","selectIsChatProtected","isRepliesChat","isGroupSelected","selectIsDocumentGroupSelected","isPinnedList","canAutoPlayMedia","shouldLoopStickers","selectShouldLoopStickers","availableReactions","reactions","defaultReaction","isMessageLocal","selectDefaultReaction","isTranscribing","transcriptions","isPending","transcribedText","shouldDetectChatLanguage","selectShouldDetectChatLanguage","hasLinkedChat","linkedChatId","withAnimatedEffects","selectPerformanceSettingsValue","isLoadingComments","isCommentsInfo","loadingChatId","loadingMessageId","selectOutgoingStatus","tags","savedReactionTags","Message","observeIntersectionForBottom","noComments","appearanceOrder","isJustAdded","isLastInGroup","isFirstInDocumentGroup","isLastInList","memoFirstUnreadIdRef","onIntersectPinnedMessage","disableContextMenuHint","animateUnreadReaction","focusLastMessage","markMentionsRead","bottomMarkerRef","isTranscriptionHidden","setTranscriptionHidden","isPlayingSnapAnimation","setIsPlayingSnapAnimation","isPlayingDeleteAnimation","setIsPlayingDeleteAnimation","requestEffect","hideEffect","isTouchScreen","useOnIntersect","isContextMenuOpen","contextMenuAnchor","contextMenuTarget","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","noAppearanceAnimation","isShown","markShown","MESSAGE_APPEARANCE_DELAY","useShowTransition","noMountTransition","isTranscriptionError","useUnmountCleanup","viewportPinnedIdsToRemove","isLocal","hasMessageReply","isReplyToMessage","paidMediaPhoto","paidMediaVideo","voice","messageReplyInfo","storyReplyInfo","withVoiceTranscription","hasStoryReply","hasThread","getMessageCustomShape","hasAnimatedEmoji","hasReactions","areReactionsEmpty","isLinkedChannelPost","isMention","canShowSenderBoosts","isStoryMention","isRoundVideo","isAlbum","msg","isInDocumentGroupNotFirst","isInDocumentGroupNotLast","canShowActionButton","canForward","isForwardingAllowed","canFocus","isChannelPost","fromMessageId","hasFactCheck","hasForwardedCustomShape","hasSubheader","childMessageIds","messageSender","avatarPeer","messageColorPeer","senderPeer","hasTtl","hasMessageTtl","handleSenderClick","handleViaBotClick","handleReplyClick","handleDocumentClick","handleAudioPlay","handleAlbumMediaClick","handlePhotoMediaClick","handleVideoMediaClick","handleMetaClick","handleTranslationClick","handleOpenThread","handleReadMedia","handleVoteSend","handleGroupForward","handleForward","handleFocus","handleFocusForwarded","handleDocumentGroupSelectAll","handleTopicChipClick","handleStoryClick","isTranslatingChat","isSavedMessages","focusMessage","openMediaViewer","openAudioPlayer","markMessagesRead","sendPollVote","openForwardMenu","openChatLanguageModal","searchChatMediaMessages","replyToTopId","isQuote","channelPostId","focusMessageId","replyMessageId","noForumTopicPanel","MediaViewerOrigin","ScheduledInline","openMediaViewerWithPhotoOrVideo","withDynamicLoading","currentMediaMessageId","videoContent","webpageTimestamp","isGif","getMessageWebPagePhoto","albumMessageId","albumIndex","mediaIndex","ScheduledAlbum","fromChatId","originalChatId","savedFromPeerId","groupedChatId","selectWithGroupedId","useInnerHandlers","handleEffectClick","isPartialAlbumDelete","isDeleting","textMessage","hasMultipleCaptions","captionMessage","hasTextContent","hasMessageText","hasText","hasUnreadMention","isInvertedMedia","getIsReady","setLanguage","threshold","detectLanguage","useTextLanguage","LimitedMap","previousMetadata","processMessageMetadata","useDetectChatLanguage","shouldTranslate","isMessageTranslatable","isTranslationPending","translatedText","useMessageTranslation","previousTranslatedText","currentTranslatedText","isMediaWithCommentButton","withCommentButton","withQuickReactionButton","hasOutsideReactions","contentClassName","hasCommentCounter","hasCommentButton","hasActionButton","isGeoLiveActive","peerColorClass","isInvertibleMedia","classNames","MESSAGE_CONTENT_CLASS_NAME","isMedia","isMediaWithNoText","hasInlineKeyboard","isViaBot","hasFooter","emojiOnlyCount","EMOJI_SIZES","buildContentClassName","getPeerColorClass","withAppendix","emojiSize","paidMessageStarsInMeta","metaPosition","reactionsPosition","quickReactionPosition","useEnsureMessage","useFocusMessage","elementRef","viaBusinessBotTitle","getPeerFullTitle","canShowPostAuthor","senderId","postAuthorTitle","useMessageResizeObserver","bottomMarker","isElementInViewport","unreadMentionIds","extraPadding","sizeCalculations","calculatedWidth","contentWidth","reactionsMaxWidth","noMediaCorners","previewWidth","previewHeight","calculateDimensionsForMessageMedia","fromOwnMessage","MIN_MEDIA_WIDTH_WITH_TEXT","getMinMediaWidth","renderMessageText","isForAnimation","MessageText","messageOrStory","withTranslucentThumbs","canBeEmpty","ReactionStaticEmoji","reaction","renderReactionsAndMeta","Reactions","metaChildren","noRecentReactors","isCurrentUserPremium","renderInvertedMediaContent","textContentClass","footerClass","hasContentAfterText","isMetaInText","renderWebPage","renderInvertibleMediaContent","messageText","shouldRenderSenderName","renderForwardTitle","hiddenUserName","renderSenderName","shouldSkipRenderForwardTitle","shouldSkipRenderAdminTitle","senderEmojiStatus","emojiStatus","senderIsPremium","shouldRenderForwardAvatar","hasBotSenderUsername","senderColor","loopLimit","EMOJI_STATUS_LOOP_LIMIT","fakeType","FakeIcon","customTitle","isOwner","forwardAuthor","onCopy","onDoubleClick","onMouseMove","onMouseLeave","shouldReadMedia","EmbeddedMessage","replyInfo","senderChat","forwardSender","MessageEffect","shouldPlay","onStop","RoundVideo","onReadMedia","onHideTranscription","isTranscribed","canTranscribe","isSelectable","canDownload","Story","StoryMention","DotAnimation","renderContent","MessageAppendix","isOutside","targetHref","href","onCloseAnimationEnd","isSynced","userStatus","selectUserStatus","self","areMessagesLoaded","selectChatMessages","PrivateChatInfo","customPeer","typingStatus","avatarSize","statusIcon","withDots","withMediaViewer","withUsername","withStory","withFullInfo","withUpdatingStatus","emojiStatusSize","noStatusOrTyping","noEmojiStatus","noFake","noVerified","noRtl","isSavedDialog","adminMember","storyViewerOrigin","onEmojiStatusClick","iconElement","rightElement","loadFullUser","loadMoreProfilePhotos","hasAvatarMediaViewer","isPreload","useIntervalForceUpdate","handleAvatarViewerOpen","hasMedia","isAvatarView","ProfileAvatar","MiddleHeaderAvatar","storyViewerMode","FullNameTitle","withEmojiStatus","subtitleKey","TypingStatus","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","renderStatusOrTyping","RippleEffect","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","usePaidMessageConfirmation","starsForAllMessages","isStarsBalanceModeOpen","starsBalance","shouldPaidMessageAutoApprove","shouldAutoApprove","setAutoApprove","isWaitingStarsTopup","setIsWaitingStarsTopup","confirmPaymentHandlerRef","closeConfirmDialog","closePaymentMessageConfirmDialogOpen","handleStarsTopup","openStarsBalanceModal","topup","balanceNeeded","purpose","PAID_MESSAGES_PURPOSE","handleWithConfirmation","openPaymentMessageConfirmDialogOpen","dialogHandler","setPaidMessageAutoApprove","loadPeerStoriesByIds","loadStoryThrottled","throttled","storyIds","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","usePeerStoriesPolling","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","isUserBot","isSupport","usePrevDuringAnimation","timeoutRef","isCurrentPresent","isPrevPresent","ChatBadge","topics","isMuted","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","hasMiniApp","requestMainWebView","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeUnMuted","notifySettings","mutedUntil","isEveryUnreadMuted","hasUnreadMark","isSignal","handleOpenApp","extractCurrentThemeParams","botId","ShowTransition","isCustom","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","pinnedElement","miniAppButton","visiblePinnedElement","elements","formatUsername","username","asAbsoluteLink","TME_LINK_PREFIX","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","cancelMediaDownload","videoRef","isPaidPreview","localBlobUrl","blobUrl","isSpoilerShown","showSpoiler","hideSpoiler","isSpoiler","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isLoadAllowed","setIsLoadAllowed","shouldLoad","isPlayAllowed","setIsPlayAllowed","getVideoMediaHash","isFullMediaPreloaded","mediaLoader","mediaData","loadProgress","useMediaWithLoadProgress","getMediaFormat","fullMediaData","isPlayerReady","markPlayerReady","getMediaThumbUri","hasThumb","isInline","isUnsupported","useUnsupportedMedia","previewMediaHash","isPreviewPreloaded","canLoadPreview","previewBlobUrl","shouldHidePreview","previewRef","useMediaTransition","noThumb","thumbRef","downloadProgress","isUploading","isTransferring","transferProgress","getMediaTransferState","wasLoadDisabled","spinnerRef","shouldRender","shouldRenderSpinner","withShouldRender","playButtonRef","playProgress","setPlayProgress","handleTimeUpdate","currentTime","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","isAllowed","handleClickOnSpinner","componentClassName","MIN_MEDIA_HEIGHT","OptimizedVideo","defaultMuted","onTimeUpdate","onReady","withAnimation","ProgressSpinner","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","memoized","recentEmojiIds","limit","MEMO_EMPTY_ARRAY","prepareLibraryMemo","baseEmojiKeywords","emojiKeywords","emojis","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","keywords","concat","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","useEmojiTooltip","EDITABLE_INPUT_ID","setById","filteredEmojis","setFilteredEmojis","filteredCustomEmojis","setFilteredCustomEmojis","exec","default","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","insertEmoji","isForce","emojiHtml","messageInput","EDITABLE_INPUT_CSS_SELECTOR","emojiCode","newShouldAutoInsert","endsWith","isEmojiTooltipOpen","closeEmojiTooltip","CustomEmojiTooltip","SymbolMenu","SymbolMenuButton","canSendGifs","canSendStickers","isMessageComposer","isReady","isSymbolMenuOpen","idPrefix","isAttachmentModal","canSendPlainText","isSymbolMenuForced","forceDarkTheme","inputCssSelector","openSymbolMenu","closeSymbolMenu","onCustomEmojiSelect","onStickerSelect","onGifSelect","onRemoveSymbol","onEmojiSelect","closeBotCommandMenu","closeSendAsMenu","setStickerSearchQuery","setGifSearchQuery","addRecentEmoji","addRecentCustomEmoji","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","activeElement","blur","getTriggerElement","getRootElement","getMenuElement","getLayout","withPortal","ResponsiveHoverButton","onActivate","onLoad","onSearchOpen","ElectronEvent","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","bots","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","isTouched","folderId","omit","isChatList","useFoldersReducer","useReducer","ChatCallStatus","previewMessageId","selectChatLastMessageId","lastMessage","selectChatLastMessage","savedDialogSender","fromId","lastMessageSender","currentChatId","currentThreadId","selectCurrentMessageList","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","topicsInfo","selectTopicsInfo","lastMessageStory","monoforumChannel","selectMonoforumChannel","getIsChatMuted","selectNotifyDefaults","selectNotifyException","draft","selectDraft","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","lastMessageOutgoingStatus","withInterfaceAnimations","selectCanAnimateInterface","listedTopicIds","topicsById","Chat","orderDiff","animationType","offsetTop","onDragEnter","openSavedDialog","toggleChatInfo","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","isForumAsMessages","isMonoforum","renderSubtitle","useChatListEntry","statefulMediaContent","groupStatefulContent","getIsForumPanelClosed","useSelectorSignal","selectIsForumPanelClosed","force","shouldReplaceHistory","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","handleReport","contextActions","useChatContextActions","isOnline","hasShownClass","isAvatarOnlineShown","useShowTransitionDeprecated","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","ListItem","withPortalForMenu","asMessageBubble","withStoryGap","subscriptionUntil","StoryViewerOrigin","ChatList","isCallActive","isCallNotEmpty","monoforumBadgeClassName","LastMessageMeta","draftDate","hasMainMiniApp","DeleteChatModal","MuteChatModal","ChatFolderModal","ANIMATION_DURATION","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","animateOpening","isArchived","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","reverse","isLast","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","String","opacity","ghostRevealName","cb","createDelayedCallback","ANIMATION_END_DELAY","animateClosing","ribbon","querySelectorAll","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","canvas","getContext","drawImage","el","getAttribute","ms","timeout","clear","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH","isPhoto","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","isSmall","forcePlaceCaretAtEnd","selection","getSelection","range","createRange","lastChild","nodeValue","selectNodeContents","collapse","removeAllRanges","addRange","focus","MENU_CLOSE_TIMEOUT","closeTimeout","useMouseInside","menuCloseTimeout","isMouseInside","markMouseInside","WebLink","onMessageClick","linkData","link","getFirstLinkInMessage","domain","formattedDescription","renderMessageSummary","handleMessageClick","safeLinkContent","Media","Link","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","letterClassName","noLoopLimit","iconEmojiId","TopicDefaultIcon","topicId","onStart","onEnd","isLongPressActive","isPressed","timerId","start","canProcessEvent","touches","end","cancel","body","ELECTRON_WINDOW_DRAG_EVENT_START","onMouseUp","onTouchStart","onTouchEnd","extractorEl","createElement","insertHtmlInSelection","getRangeAt","rangeCount","deleteContents","fragment","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","setStart","cloneContents","caretRange","setEnd","endContainer","endOffset","toString","position","node","childNodes","nodeType","Node","TEXT_NODE","removeAllSelections","orderedPeerIds","archived","active","byPeerId","stories","storyViewer","isRibbonShown","isArchivedRibbonShown","chatsById","peerStories","canShow","toggleStoryRibbon","PREVIEW_AVATAR_COUNT","closeFriends","isCloseFriend","isRead","isForCloseFriends","preloadPeerIds","useStoryPreloader","beginHeavyAnimation","avatar","withStorySolid","forceFriendStorySolid","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","requestMediaWorker","MAX_WORKERS","navigator","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","ARCHIVE_CUSTOM_PEER","isCustomPeer","avatarIcon","customPeerAvatarColor","Archive","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","isMinimized","icon","actionExpand","actionHide","isHidden","compact","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","EmptyFolder","foldersDispatch","openSettingsScreen","handleEditFolder","screen","SettingsScreens","FoldersEditFolderFromChatList","FrozenAccountNotification","UnconfirmedSession","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","useResizeObserver","entry","borderBoxSize","blockSize","contentRect","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","hash","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","isMainList","openNextChat","openLeftColumnContent","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","shouldShowFrozenAccountNotification","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","frozenNotificationHeight","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","digit","isArchiveInList","contentKey","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleFrozenAccountNotificationClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","IS_SAFARI","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","scrollHeight","offsetHeight","deltaY","IS_IOS","useTopOverscroll","InfiniteScroll","items","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","onLoadMore","onDragLeave","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","Loading","useGetSelectionRange","inputSelector","getRange","setRange","useSignal","onSelectionChange","Element","DropTarget","isQuick","isGeneric","onFileSelect","svgRef","isHovered","markHovered","unmarkHovered","relatedTarget","toTarget","handleResize","baseVal","useEffectOnce","onDrop","rx","DropAreaState","DropArea","withQuick","onHide","editingMessage","updateAttachmentSettings","hideTimeoutRef","prevWithQuick","transitionClassNames","captureEscKeyListener","handleFilesDrop","dataTransfer","dt","files","folderFiles","getFilesFromDataTransferItems","newAttachment","buildAttachment","canReplaceMessageMedia","shouldCompress","handleQuickFilesDrop","fromTarget","shouldRenderQuick","onDragOver","handleDragOver","reducer","initialState","reducerRef","dispatch","NothingFound","smaller","withDate","datetime","onDateClick","downloadMedia","setSharedSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","fileName","extension","getDocumentExtension","wasIntersected","markIntersected","shouldDownload","documentHash","getDocumentMediaHash","hasPreview","getDocumentHasPreview","previewData","innerMediaType","handleDownload","originMessage","SVG_EXTENSIONS","handleSvgConfirm","handleDateClick","File","thumbnailDataUri","actionIcon","isDocumentVideo","Checkbox","checked","onCheck","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","getDate","setDate","getTime","shiftTimeRanges","ranges","shiftedRanges","startMinute","endMinute","last","DAYS","_","BusinessHours","businessHours","transitionRef","isExpanded","expand","isMyTime","showInMyTime","showInLocalTime","timezoneSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","handleAnimationStart","TO_SLIDE_CLASS_NAME","multiline","isStatic","narrow","withColorTransition","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","selectIsPremiumPurchaseBlocked","UserBirthday","birthday","isInSettings","openGiftModal","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setFullYear","setMonth","month","formatDateToString","getMonth","getAge","numbersForAge","numbers","byEmoji","effectSticker","randomEffect","random","effectHash","column","valueKey","canGiftPremium","handleOpenGiftModal","forUserId","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","birthdate","getFullYear","chatOrUserId","botAppPermissions","selectBotAppPermissions","userFullInfo","selectUserFullInfo","botVerification","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","isBotCanManageEmojiStatus","ChatExtra","updateChatMutedState","updateTopicMutedState","loadPeerStories","requestCollectibleInfo","toggleUserEmojiStatusPermission","toggleUserLocationPermission","usernames","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","useEffectWithPrevDeps","prevPeerId","locationMediaHash","locationBlobUrl","locationRightComponent","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","handleNotificationChange","manageEmojiStatusChange","handleLocationPermissionChange","isAccessGranted","geolocation","handleOpenSavedDialog","copy","entity","formattedNumber","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","shouldMarkBotTrusted","appTermsInfo","terms","withNodes","membersCount","ChatAnimationTypes","None","renderUsernames","allowSelection","Switcher","inactive","iconId","usernameList","otherUsernames","usernameLinks","idx","dataTransferItems","traverseFileTreePromise","isFile","itemFile","getAsFile","file","isDirectory","createReader","readEntries","entriesPromises","all","kind","webkitGetAsEntry","validateFiles","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","positionX","MenuItem","destructive","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","markChatMessagesRead","markChatUnread","openChatInNewTab","actionOpenInNewTab","togglePinned","actionPin","actionDelete","actionAddToFolder","actionMute","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","providerUrl","cos","str","prevHash","currVal","charCodeAt","PaymentMessageConfirmDialog","userName","messagePriceInStars","setShouldPaidMessageAutoApprove","confirmPaymentMessage","formatStarsAsText","totalAmount","withMarkdown","HeaderMenuContainer","isSuperGroup","isChatSuperGroup","selectLanguageCode","translationLanguage","selectTranslationLanguage","isPrivate","doNotTranslate","noMenu","bot","selectBot","fullInfo","isMainThread","isDiscussionThread","isRightColumnShown","selectIsRightColumnShown","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","canSearch","canCall","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","adminRights","manageCall","isCreator","isChatBasicGroup","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectCanTranslateChat","isTranslationDisabled","channelMonoforumId","linkedMonoforumId","detectedChatLanguage","HeaderActions","isForForum","canExpandActions","onTopicSearch","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","setSettingOption","unblockUser","setViewForumAsMessages","menuButtonRef","isMenuOpen","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","command","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","MenuSeparator","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","CLOSE_DURATION","RESIZE_THROTTLE","useHeaderPane","providedRef","withResizeObserver","onStateChange","setShouldRender","localRef","lastHeightRef","reset","handleUpdate","requestForcedReflow","currentHeight","applyAnimationState","noTransition","cumulativeHeight","shiftPx","apply","setExtraStyles","transition","dataset","isPanelOpen","path","filterUnits","dy","stdDeviation","EmojiTooltip","DEFAULT_HANDLERS","seekbackward","seekforward","previoustrack","nexttrack","stop","seekTo","registerMediaSession","mediaSession","updateMetadata","setMediaSessionHandlers","console","warn","setActionHandler","err","clearMediaSession","playbackState","setPositionState","setPlaybackState","buildMediaMetadata","artist","artwork","MediaMetadata","onlineCount","selectChatOnlineCount","selectTopic","selectThreadMessagesCount","GroupChatInfo","noAvatar","withChatType","realChat","withMonoforumStatus","loadFullChat","isTopic","isMin","shouldRestoreHeight","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","getPhotoMediaHash","withThumb","downloadButtonRef","shouldRenderDownloadButton","dimensionsStyle","fileSelector","openSystemFilesDialog","accept","noMultiple","onchange","click","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","spinnerClassNames","getColorFromExtension","sizeString","getFileSizeString","subtitle","getDocumentThumbnailDimensions","formatMediaDateTime","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","getOrderedTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","shouldTryLoadingStory","mediaContent","mediaHasPreview","getMessageSticker","getMessageMediaThumbDataUri","getMessageMediaHash","getMessageRoundVideo","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","asPreview","senderName","getMessageSenderName","renderSummary","Opacity","Move","messageSummary","MessageSummary","noEmoji","inChatList","getMessageIsSpoiler","getMessageVideo","tracks","currentTrackId","voiceQueue","musicQueue","playNext","trackId","isReverseOrder","currentTrack","onTrackChange","nextTrackId","findNextInQueue","audioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","onForcePlay","stopCurrentAudio","register","trackType","track","handleEvent","eventName","isSafariPatchInProgress","proxy","Proxy","createAudio","trackIdComparator","addTrackToQueue","paused","preventPlayAfterPatch","preload","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","prevSrc","setCurrentTime","fastSeek","setVolume","volume","setPlaybackRate","rate","playbackRate","toggleMuted","requestNextTrack","isFirst","requestPreviousTrack","shouldRemoveFromQueue","trackIdFilter","removeFromQueue","currentId","getTrackQueue","Search","chatAudio","makeTrackId","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","isPrivateChat","getPrivateChatUserId","isBot","canDeleteForAll","isBasicGroup","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","deleteChat","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","handleDeleteChat","handleLeaveChat","Modal","header","COLOR_REPLACE_PATTERN","AttachBotIcon","Text","iconSvg","mediaDataWithReplacedColors","doc","DOMParser","parseFromString","stroke","strokeWidth","outerHTML","AttachBotItem","isInSideMenu","canShowNew","onMenuOpened","onMenuClosed","callAttachBot","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","customIcon","shortName","isDisclaimerNeeded","Menu","autoClose","interval","MAX_STANDARD_QUALITY_IMG_SIZE","MAX_HIGH_QUALITY_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","blob","createObjectURL","mimeType","quick","shouldSendAsFile","shouldSendInHighQuality","SUPPORTED_PHOTO_CONTENT_TYPES","img","preloadImage","validateAspectRatio","maxQuickImgSize","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","SUPPORTED_VIDEO_CONTENT_TYPES","videoWidth","videoHeight","preloadVideo","createPosterForVideo","SUPPORTED_AUDIO_CONTENT_TYPES","performer","coverUrl","parseBlob","selectCover","fetchBlob","common","picture","format","cover","coverBlob","Blob","parseAudioMetadata","uniqueId","prepareAttachmentsToSend","attachments","shouldSendCompressed","attach","shouldSendAsSpoiler","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getSenderName","resetInput","applyIosAutoCapitalizationFix","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","headers","parseHtml","wrapNodeAnchor","wrapNodeInline","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","styledNode","nodeName","getCleanNode","newWrapper","createDocumentFragment","applyBlockStyles","nodes","filterNode","STYLE_TAG_REGEX","VALID_TARGET_IDS","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","handlePaste","clipboardData","input","pastedText","getData","pastedFormattedText","parseHtmlAsFormattedText","clipboardContent","filteredNodes","cleanNodes","getCleanDocument","DEBUG","textContents","getElementsByTagName","replaceWith","entityType","ignoreOnPaste","ENTITY_CLASS_BY_NODE_NAME","innerText","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","textToPaste","isWordDocument","shouldSetAttachments","newAttachments","canReplace","isUploadingDocumentSticker","isUploadingFileSticker","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","STARTS_ENDS_ON_EMOJI_IMG_REGEX","POLYFILL_OPTIONS","encoderPath","reuseWorker","BLOB_PARAMS","opusRecorderPromise","OpusRecorder","mediaRecorder","analyzerCallback","startMediaRecorder","pausedAt","chunks","waveform","ondataavailable","typedArray","releaseAnalyzer","recorder","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","Uint8Array","isDestroyed","tick","getByteFrequencyData","subscribeToAnalyzer","onstop","onerror","delayStop","AttachmentModal","AttachMenu","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","shouldCollectDebugLogs","onMenuOpen","onMenuClose","onPollCreate","canEditMedia","paidMessagesStars","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isPhotoOrVideo","getMessageWebPageVideo","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","validatedFiles","handleQuickSelect","CONTENT_TYPES_WITH_PREVIEW","handleDocumentSelect","handleSendLogs","getDebugLogs","DEBUG_LOG_FILENAME","isForAttachMenu","attachMenuPeerTypes","ariaControls","hasPopup","positionY","noCloseOnBackdrop","ariaLabelledBy","BotCommandMenu","BotKeyboardMenu","isKeyboardSingleUse","keyboardButtons","noCompact","BotMenuButton","textRef","textEl","scrollWidth","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","toChatId","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","forwardedMessages","selectEditingMessage","forwardSenders","selectSenderFromForwardedMessage","forwardedMessage","isSenderChannel","forwardsHaveCaptions","forward","isContextMenuDisabled","isReplyToDiscussion","forwardedMessagesCount","isInChangingRecipientMode","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","setEditingId","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","isShowingReply","isReplyWithQuote","senders","clearEmbedded","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","renderingSender","useCurrentOrPrev","innerClassName","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","ClosableEmbeddedMessage","isInComposer","composerForwardSenders","faded","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","attachmentSettings","webPagePreview","WebPagePreview","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","formattedTextWithLinkRef","isSmallerMedia","webPageMediaSize","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","getLink","hasMediaSizeOptions","hasLargeMedia","renderingWebPage","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","webPageWithoutPhoto","messageStub","MainButtonState","chatBot","isChatWithBot","selectPeerPaidMessagesStars","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","sendAsId","sendAsPeer","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isInScheduledList","canSendQuickReplies","isSilentPosting","getChatNotifySettings","areEffectsSupported","canPlayEffect","shouldPlayEffectInComposer","effectReactions","maxMessageLength","config","DEFAULT_MAX_MESSAGE_LENGTH","balance","isStarsBalanceModalOpen","starsBalanceModal","isAppConfigLoaded","insertingPeerIdMention","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isSelectModeActive","withScheduledButton","hasScheduledMessages","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","forEmoji","customEmojiForEmoji","topInlineBots","userIds","contentToBeScheduled","recentEmojis","inlineBots","byUsername","isInlineBotLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","canSendOneTimeMedia","stealthMode","quickReplyMessages","quickReplies","messagesById","isContactRequirePremium","isPaymentMessageConfirmDialogOpen","shouldDisplayGiftsButton","disallowedGifts","pollMaxAnswers","Composer","dropAreaState","inputPlaceholder","editableInputCssSelector","editableInputId","onDropHide","onFocus","onBlur","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","updateChatSilentPosting","updateInsertingPeerIdMention","counterRef","storyReactionRef","isMounted","setIsMounted","lastMessageSendTimeSeconds","prevDropAreaState","isInMessageList","isInStoryViewer","sendAsPeerIds","canShowSendAs","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","chatBotCommands","chatEmojiSetId","canSchedule","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","isChannelWithProfiles","areProfilesShown","isChatWithSendAs","isLinkedInDiscussion","hasGeo","shouldAnimateSendAsButtonRef","prevSendAsPeerIds","hasAttachments","nextText","canAttachEmbedLinks","canSendVoices","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","messagesInInput","closeConfirmModalPayForMessage","paymentMessageConfirmDialogHandler","handleActionWithPaymentConfirmation","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","inInputId","dispatchEvent","Event","bubbles","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","newValue","attachment","getAttachmentMediaType","shouldForce","handleUpdateAttachmentsQuality","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","isSendAsMenuOpen","openSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","boxShadow","shouldSendRecordingStatus","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isStickerTooltipOpen","closeStickerTooltip","loadStickersForEmoji","clearStickersForEmoji","getSingleEmoji","cleanHtml","parseEmojiOnlyString","hasStickers","useStickerTooltip","isInlineBotTooltipOpen","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","getPlainText","parseBotQuery","prevUsername","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","getCommand","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","prevThreadId","prevDraft","customEmojiIds","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","prevEditedMessage","prevReplyingToId","shouldSetNoWebPage","edited","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","areAllGiftsDisallowed","shouldShowGiftButton","showCustomEmojiPremiumNotification","notificationNumber","initialSection","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","handleEmbeddedClear","validateTextLength","maxLength","extraLength","textParams","hasErrorKey","checkSlowMode","nowSeconds","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","canSendAttachments","attachmentsToSend","sendAttachments","sendCompressed","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSendCore","currentAttachments","webPageUrl","handleSend","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","handleSendWithConfirmation","handleClickBotMenu","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","queryId","restArgs","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","canUpdateStickerSetsOrder","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","textLength","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","handleGiftClick","handleToggleSilentPosting","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholder","anonymous","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","sendButtonAriaLabel","handleToggleReaction","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","shouldRenderPaidBadge","QuickFile","ReactionSelector","allAvailableReactions","onToggleReaction","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onSendWhenOnline","shouldBeAnonymous","maxOptionsCount","selectedSendAsId","onInsertUserName","onSelectResult","MessageInput","customEmojiPrefix","isStoryInput","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onSuppressedFocus","slideClassName","formatVoiceRecordDuration","ReactionAnimatedEmoji","withEffectOnly","getReactionKey","allowDisabledClick","noFastClick","CustomSendMenu","onSendSchedule","onRemoveEffect","hasCurrentEffect","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","effectSize","shouldPause","formatTemperature","temperatureC","restrictedEmoji","selectRestrictedEmoji","MediaAreaWeather","backgroundColor","convertToRGBA","textColor","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","withTranslucentThumb","STORY_ASPECT_RATIO","NO_SHINY_TYPES","prepareStyle","mediaWidth","rotation","radius","coordinates","pixelRadius","pixelWidth","pixelHeight","MediaAreaOverlay","isStoryPlaying","openUniqueGiftBySlug","closeStoryViewer","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","slug","handleMediaAreaClick","lastCallback","onBeforeUnload","RADIUS_RATIO","lastWorkerIndex","thumbData","canvasRef","workerIndex","cycleRestrict","offscreenRef","blurThumb","uri","image","transferControlToOffscreen","ceil","useOffscreenCanvasBlur","groupCall","selectChatGroupCall","isMasterTab","groupCalls","activeGroupCallId","participantsCount","GroupCallTopPane","onPaneStateChange","requestMasterAndJoinGroupCall","handleJoinGroupCall","participants","fetchedParticipants","renderingParticipantCount","renderingFetchedParticipants","isRendering","resolver","deps","msOrSchedulerFn","noFirst","setValue","useThrottledSignal","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","DEFAULT_LIMITS","limits","selectPremiumLimit","TINY_SCREEN_WIDTH_MQL","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderAudio","isPlaying","bufferedRanges","seekerRef","showProgress","showSeekline","renderSeekline","renderVoice","waveformCanvasRef","isMediaUnread","onClickTranscribe","ry","OneTimeModal","onPause","transcribeAudio","openOneTimeMediaModal","contentAudio","getMessageWebPageAudio","mediaSource","isVoice","isSeeking","setIsActivated","coverHash","getMediaHash","coverBlobUrl","isInOneTimeModal","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","playPause","useAudioPlayer","getMediaDuration","reversePlayProgress","isReverse","spikes","peak","MIN_SPIKES","MAX_SPIKES","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","val","interpolateArray","encoded5bit","bitsCount","valuesCount","bitsData","l","byteIndex","bitShift","lastByteIndex","lastBitShift","lastValue","decodeWaveform","fillStyle","progressFillStyle","ctx","globalAlpha","spikeHeight","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","MouseEvent","targetTouches","handleStartSeek","handleStopSeek","handleTranscribe","renderFirstLine","renderSecondLine","onCapture","onDrag","SharedMedia","buttonClassNames","renderWithTitle","backgroundImage","AnimatedIcon","Flame","transparent","withColor","noCross","rotationOffset","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","onSourceOpen","sourceBuffer","addSourceBuffer","loader","makeProgressiveLoader","next","done","readyState","endOfStream","appendBuffer","unloadVideo","checkIfStreamingSupported","buffer","ManagedMediaSource","MediaSource","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaFormat","delay","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","Progressive","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","ProfilePhoto","canPlayVideo","isDeletedUser","isChatWithRepliesBot","canHaveMedia","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getProfilePhotoMediaHash","getVideoProfilePhotoMediaHash","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","specialIcon","userFullName","getFirstLetters","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","emojiStatusSticker","emojiStatusSlug","ProfileInfo","isForMonoforum","openPremiumModal","openPrivacySettingsNoticeModal","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","currentIndex","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","Right","totalPhotosLength","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","renderPhotoTabs","personalPhoto","fallbackPhoto","canCopyTitle","isReadDateRestrictedByMe","renderStatus","imgBlobUrl","mediaUrl","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","adminId","selectCanInviteToActiveGroupCall","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","isToncoin","renderOverviewItemValue","change","percentage","isChangeNegative","renderBalanceCell","usdRate","integerTonPart","decimalTonPart","integerUsdPart","decimalUsdPart","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","toggleStoriesHidden","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","isClosing","closing","useHorizontalScroll","StoryRibbonButton","AbsoluteVideo","videoUrl","load","recalculatePositionAndSize","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","colorFilter","useColorFilter","playersById","clearPlayers","player","synchronizeElements","playerIdsToClear","playerId","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","isLottie","hexToRgb","lottie","ensureRLottie","coords","g","removeView","setSharedCanvasCoords","absoluteVideo","createPlayer","animation","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","fastRaf","scroller","newHeight","isOverflown","transitionDuration","log","toggle","htmlRef","focusInput","getIsHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","placeholderAriaLabel","onKeyDown","isComposing","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","anchorPosition","useMarkScrolled","selector","isScrolled","orderDiffs","numberOfUp","numberOfDown","Infinity","typingUser","typingUserName","hasSpoiler","decoding","shouldUseDraft","CustomSend","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","stopPrevious","playerRef","circleRef","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","playerEl","stopPlaying","capturePlaying","togglePlaying","isPriority","originalDuration","onInit","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","mediaHandlers","closeAudioPlayer","skipTime","seekOffset","seekTime","makeMediaHandlers","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","prevShouldPlay","playIfPresent","setTime","audioProxy","SponsoredContextMenu","sponsorInfo","canReport","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","SponsoredMessageContextMenuContainer","randomId","additionalInfo","onItemClick","openAboutAdsModal","reportSponsored","hideSponsored","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","handleReportSponsoredMessage","ICON_SIZE","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","selectTopics","isChatMuted","canDelete","selectCanDeleteTopic","Topic","deleteTopic","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","canToggleClosed","getCanManageTopic","canTogglePinned","actionUnreadMark","actionCloseTopic","useTopicContextActions","ForumPanel","onOpenAnimationStart","scrollTopHandlerRef","setIsScrolled","handleClose","handleToggleChatInfo","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","waitForTransitionEnd","onTransitionEnd","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","renderTopics","GENERAL_TOPIC_ID","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeElectronListener","electron","on","FULLSCREEN_CHANGE","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","NBSP","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","useThumbnail","replyForwardInfo","forwardSendersTitle","peerTitles","conjunction","senderChatTitle","forwardSenderTitle","areSendersSame","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isReplyToQuote","renderSender","isFullVideo","shouldRenderVideo","freezeWhenClosed","preloadedStories","canPreload","aroundStoryId","isArray","mediaHashes","isStream","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","head","autoplay","disableRemotePlayback","preloadProgressive","preloadHashes","preloadIds","findIdsAroundCurrentId","currentStoryId","altVideos","getPreloadMediaHashes","dependencies","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","rel","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","fullSize","startPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","handleEnded","effectClassName"],"sourceRoot":""}