{"version":3,"file":"1241.a4c42fdd9f644e319b23.js","mappings":"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/L,EAAS+L,kCAC5C5nB,gBACA8jB,2BACA+D,yBAA0BpI,GAAcoI,yBACxCC,gBAAiBrI,GAAcqI,gBAC/B9D,mBACAE,qBACAC,0BACA4D,eAAgBtxB,EAAUsxB,kBAtLZhlC,EA1jEwBilC,EAC1C/7B,OACAq4B,gBACA2D,gBACA5F,oBACAmC,yBACA0D,UACA/I,WACArR,iBACA5pB,SACA6oB,YACA1L,WACA+f,sBACArT,mBACAmH,SACAhyB,QACA08B,gBACAoC,gBACAX,2BACAlK,wBACAmK,yBACAhC,iBACAnJ,kBACAuO,aACAiC,iBACAhC,sBACAE,sBACAkC,wBACAc,4BACA7S,gBACAyO,cACAC,oBACAxM,0BACAiO,aACAC,iBACA5E,wBACAyE,0BACAkD,oBACApD,uBACAM,oBACAG,uBACAp2B,mBACAC,iBACAqxB,eACAoG,gBACAnB,wBACA3F,yBACAC,4BACAI,qBACAC,iBACAsF,gBACAE,cACAE,sBACAE,eACAtF,cACAD,YACAc,gBACAX,kBACAE,uBACAqF,iBACA7Y,cACAgZ,sBACAxK,sBACArO,SACA6T,YACAtB,+BACAkI,4BACAC,mBACA9yB,WACA9S,aACA2hC,sBACAC,gBACA4C,iBACAE,yBACAvZ,0BACAiU,qBACAyF,eACAD,uBACAG,sBACAC,gBACAnF,uBACArG,kBACAH,aACA6L,2BACA3Z,qBACAkV,UACAE,mBACAT,uBACAE,iBACAE,oBACAO,oBACAf,mBACAqF,qCACA5nB,gBACA8jB,2BACAgE,mBACA9D,mBACAE,qBACAC,0BACA4D,kBACAO,cACAC,WACAC,UACAC,iBAEA,MAAM,YACJC,GAAW,WACXC,GAAU,WACVC,GAAU,cACVC,GAAa,eACbC,GAAc,kBACdC,GAAiB,mBACjBC,GAAkB,qBAClBC,GAAoB,WACpBC,GAAU,eACVC,GAAc,oBACdC,GAAmB,WACnBC,GAAU,uBACVC,GAAsB,cACtBC,GAAa,qBACbC,GAAoB,iBACpBtkB,GAAgB,oCAChBukB,GAAmC,wBACnCC,GAAuB,cACvBC,GAAa,oBACbC,GAAmB,kBACnBC,GAAiB,YACj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","sources":["webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/components/common/SensitiveContentConfirmModal.tsx","webpack://telegram-t/./src/components/common/SensitiveContentConfirmModal.module.scss?c6aa","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/hooks/usePaidMessageConfirmation.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useLoadLinkPreview.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ToDoListModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.module.scss?90e3","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/media/useMessageMediaHash.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/FrozenAccountNotification.tsx","webpack://telegram-t/./src/components/left/main/FrozenAccountNotification.module.scss?c59a","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.tsx","webpack://telegram-t/./src/components/common/PaymentMessageConfirmDialog.module.scss?1d52","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/hooks/useHeaderPane.tsx","webpack://telegram-t/./src/components/middle/message/MessageAppendix.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/hooks/schedulers/useIntervalForceUpdate.ts","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/useScrollNotch.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/components/right/statistics/helpers/isGraph.ts","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredContextMenuContainer.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/components/middle/message/helpers/getSingularPaidMedia.ts","webpack://telegram-t/./src/components/middle/message/helpers/calculateAlbumLayout.ts","webpack://telegram-t/./src/util/languageDetection.ts","webpack://telegram-t/./src/components/middle/message/hooks/useDetectChatLanguage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOuterHandlers.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStory.tsx","webpack://telegram-t/./src/components/common/TopicChip.tsx","webpack://telegram-t/./src/components/common/TopicChip.module.scss?5208","webpack://telegram-t/./src/components/middle/message/hocs/withSelectControl.tsx","webpack://telegram-t/./src/components/middle/message/Album.tsx","webpack://telegram-t/./src/components/common/hooks/useAnimatedEmoji.ts","webpack://telegram-t/./src/components/middle/message/AnimatedCustomEmoji.tsx","webpack://telegram-t/./src/components/middle/message/AnimatedEmoji.tsx","webpack://telegram-t/./src/components/middle/message/CommentButton.tsx","webpack://telegram-t/./src/components/middle/message/Contact.module.scss?fec1","webpack://telegram-t/./src/components/middle/message/Contact.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/FactCheck.module.scss?3842","webpack://telegram-t/./src/components/middle/message/FactCheck.tsx","webpack://telegram-t/./src/components/middle/message/Game.tsx","webpack://telegram-t/./src/components/middle/message/Giveaway.module.scss?9b0c","webpack://telegram-t/./src/components/middle/message/Giveaway.tsx","webpack://telegram-t/./src/components/middle/message/InlineButtons.tsx","webpack://telegram-t/./src/components/middle/message/Invoice.tsx","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.module.scss?19f6","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.tsx","webpack://telegram-t/./src/components/middle/message/Location.tsx","webpack://telegram-t/./src/components/middle/message/MessageMeta.tsx","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.module.scss?15a3","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.tsx","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.module.scss?e3d6","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.tsx","webpack://telegram-t/./src/components/middle/message/PollOption.tsx","webpack://telegram-t/./src/components/middle/message/Poll.tsx","webpack://telegram-t/./src/components/middle/message/Sticker.module.scss?30d0","webpack://telegram-t/./src/components/middle/message/Sticker.tsx","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/Story.tsx","webpack://telegram-t/./src/components/middle/message/StoryMention.tsx","webpack://telegram-t/./src/components/middle/message/TodoList.tsx","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.module.scss?8703","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/Message.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useInnerHandlers.ts","webpack://telegram-t/./src/hooks/useTextLanguage.ts","webpack://telegram-t/./src/components/middle/message/helpers/buildContentClassName.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/progressiveLoader.ts","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: ElementRef<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        const emoji = IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1];\n        if (emoji) {\n          loadCustomEmojiForEmoji({\n            emoji,\n          });\n        }\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\nexport type ApiUpdate = { type: string } & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: AnyToVoidFunction;\n  reject: AnyToVoidFunction;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise = new Promise<any>((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiPeer, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getMainUsername } from '../../../../global/helpers';\nimport { filterPeersByQuery, getPeerTitle } from '../../../../global/helpers/peers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: ElementRef<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const lang = useLang();\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterPeersByQuery({\n      ids: unique([\n        ...((getWithInlineBots() && topInlineBotIds) || []),\n        ...(memberIds || []),\n      ]),\n      query: filter,\n      type: 'user',\n    });\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((\n    peer: ApiPeer,\n    forceFocus = false,\n    insertAtEnd = false,\n  ) => {\n    if (!peer.hasUsername && !getPeerTitle(lang, peer)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(peer);\n    const userFirstOrLastName = getPeerTitle(lang, peer) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${peer.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = insertAtEnd ? fixedHtmlBeforeSelection.length\n      : fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n}: {\n  anchorRef: ElementRef<HTMLDivElement>;\n  overlayRef: ElementRef<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport { VERIFY_AGE_MIN_DEFAULT } from '../../config';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './SensitiveContentConfirmModal.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  shouldAlwaysShow: boolean;\n  onAlwaysShowChanged: (value: boolean) => void;\n  confirmHandler: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  verifyAgeMin: number;\n};\n\nconst SensitiveContentConfirmModal = ({\n  isOpen,\n  onClose,\n  shouldAlwaysShow,\n  onAlwaysShowChanged,\n  confirmHandler,\n  verifyAgeMin,\n}: OwnProps & StateProps) => {\n  const lang = useLang();\n\n  return (\n    <ConfirmDialog\n      title={lang('TitleSensitiveModal', { years: verifyAgeMin })}\n      confirmLabel={lang('ButtonSensitiveView')}\n      isOpen={isOpen}\n      onClose={onClose}\n      confirmHandler={confirmHandler}\n    >\n      {lang('TextSensitiveModal')}\n      <Checkbox\n        className={styles.checkBox}\n        label={lang('ButtonSensitiveAlways', { years: verifyAgeMin })}\n        checked={shouldAlwaysShow}\n        onCheck={onAlwaysShowChanged}\n      />\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const appConfig = global.appConfig;\n  const verifyAgeMin = appConfig.verifyAgeMin;\n\n  return {\n    verifyAgeMin: verifyAgeMin || VERIFY_AGE_MIN_DEFAULT,\n  };\n})(SensitiveContentConfirmModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"checkBox\":\"mYXi2mIC\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID, SVG_NAMESPACE } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport jsxToHtml from '../../../util/element/jsxToHtml';\nimport generateUniqueId from '../../../util/generateUniqueId';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const component = (\n    <svg\n      className={styles.ghost}\n      width={width}\n      height={height}\n      style={`left: ${x}px; top: ${y}px;`}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <defs>\n        {createFilter(filterId, Math.min(width, height), seed)}\n      </defs>\n      <g filter={`url(#${filterId})`}>\n        <foreignObject className={styles.elementContainer} width={width} height={height} />\n      </g>\n    </svg>\n  );\n\n  const svg = jsxToHtml(component)[0] as HTMLElement;\n  const foreignObject = svg.querySelector('foreignObject')!;\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(id: string, smallestSide: number, baseSeed: number = 42) {\n  return (\n    <filter\n      xmlns={SVG_NAMESPACE}\n      id={id}\n      x=\"-150%\"\n      y=\"-150%\"\n      width=\"400%\"\n      height=\"400%\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.5\" numOctaves=\"1\" result=\"dustNoise\" seed={baseSeed} />\n      <feComponentTransfer in=\"dustNoise\" result=\"dustNoiseMask\">\n        <feFuncA type=\"linear\" slope=\"5\" intercept=\"0\">\n          <animate attributeName=\"slope\" values=\"5; 2; 1; 0\" dur={`${DURATION}ms`} fill=\"freeze\" />\n        </feFuncA>\n      </feComponentTransfer>\n      <feComposite in=\"SourceGraphic\" in2=\"dustNoiseMask\" operator=\"in\" result=\"dustySource\" />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"0.015\"\n        numOctaves=\"1\"\n        result=\"displacementNoise1\"\n        seed={baseSeed + 1}\n      />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"1\"\n        numOctaves=\"2\"\n        result=\"displacementNoise2\"\n        seed={baseSeed + 2}\n      />\n      <feMerge result=\"combinedNoise\">\n        <feMergeNode in=\"displacementNoise1\" />\n        <feMergeNode in=\"displacementNoise2\" />\n      </feMerge>\n      <feDisplacementMap in=\"dustySource\" in2=\"combinedNoise\" scale=\"0\" xChannelSelector=\"R\" yChannelSelector=\"G\">\n        <animate attributeName=\"scale\" values={`0; ${smallestSide * 3}`} dur={`${DURATION}ms`} fill=\"freeze\" />\n      </feDisplacementMap>\n    </filter>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  const hasAvatarMediaViewer = withMediaViewer && !isSavedMessages;\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  useIntervalForceUpdate(UPDATE_INTERVAL);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={hasAvatarMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport { PAID_MESSAGES_PURPOSE } from '../../../../config';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePaidMessageConfirmation(\n  starsForAllMessages: number,\n  isStarsBalanceModeOpen: boolean,\n  starsBalance: number,\n) {\n  const {\n    shouldPaidMessageAutoApprove,\n  } = getGlobal().settings.byKey;\n\n  const [shouldAutoApprove,\n    setAutoApprove] = useState(Boolean(shouldPaidMessageAutoApprove));\n  const [isWaitingStarsTopup, setIsWaitingStarsTopup] = useState(false);\n  const confirmPaymentHandlerRef = useRef<NoneToVoidFunction | undefined>(undefined);\n\n  const closeConfirmDialog = useLastCallback(() => {\n    getActions().closePaymentMessageConfirmDialogOpen();\n  });\n\n  useEffect(() => {\n    if (isWaitingStarsTopup && !isStarsBalanceModeOpen) {\n      setIsWaitingStarsTopup(false);\n\n      if (starsBalance > starsForAllMessages) {\n        confirmPaymentHandlerRef?.current?.();\n      }\n    }\n  }, [isWaitingStarsTopup, isStarsBalanceModeOpen, starsBalance, starsForAllMessages]);\n\n  const handleStarsTopup = useLastCallback(() => {\n    getActions().openStarsBalanceModal({\n      topup: {\n        balanceNeeded: starsForAllMessages,\n        purpose: PAID_MESSAGES_PURPOSE,\n      },\n    });\n    setIsWaitingStarsTopup(true);\n  });\n\n  const dialogHandler = useLastCallback(() => {\n    if (starsForAllMessages > starsBalance) {\n      handleStarsTopup();\n    } else {\n      confirmPaymentHandlerRef?.current?.();\n    }\n    getActions().closePaymentMessageConfirmDialogOpen();\n    if (shouldAutoApprove) getActions().setPaidMessageAutoApprove();\n  });\n\n  const handleWithConfirmation = <T extends (...args: any[]) => void>(\n    handler: T,\n    ...args: Parameters<T>\n  ) => {\n    if (starsForAllMessages) {\n      confirmPaymentHandlerRef.current = () => handler(...args);\n      if (!shouldPaidMessageAutoApprove) {\n        getActions().openPaymentMessageConfirmDialogOpen();\n        return;\n      }\n\n      if (starsForAllMessages > starsBalance) {\n        handleStarsTopup();\n        return;\n      }\n    }\n\n    handler(...args);\n  };\n\n  return {\n    closeConfirmDialog,\n    handleWithConfirmation,\n    dialogHandler,\n    shouldAutoApprove,\n    setAutoApprove,\n  };\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { IS_IOS } from '../../../../util/browser/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../../hooks/useLang';\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst VALID_TARGET_IDS = new Set([EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID]);\nconst CLOSEST_CONTENT_EDITABLE_SELECTOR = 'div[contenteditable]';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = (e.target as HTMLElement)?.closest(CLOSEST_CONTENT_EDITABLE_SELECTOR);\n      if (!input || !VALID_TARGET_IDS.has(input.id)) {\n        return;\n      }\n\n      e.preventDefault();\n\n      // Some extensions can trigger paste into their panels without focus\n      if (document.activeElement !== input) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text');\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && newAttachments?.length > 1) {\n        showNotification({\n          message: lang('MediaReplaceInvalidError', undefined, { pluralValue: newAttachments.length }),\n        });\n        return;\n      }\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: 1 }) });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({\n            message: lang('MediaReplaceInvalidError', undefined, { pluralValue: newAttachments.length }),\n          });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiMessage } from '../../../../api/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE, EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport {\n  requestMeasure, requestNextMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n}: {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n        shouldKeepSuggestedPost: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n    const shouldUpdateSuggestedPost = draft?.suggestedPostInfo && !prevDraft?.suggestedPostInfo;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched && !shouldUpdateSuggestedPost) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n    if (shouldUpdateSuggestedPost) {\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    }\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({\n        chatId,\n        messageIds: [editedMessage.id],\n        isSchedule: type === 'scheduled',\n      });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect, useRef } from '@teact';\nimport { getActions } from '../../../../global';\n\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport {\n  type ApiFormattedText,\n  type ApiMessageEntityTextUrl,\n  ApiMessageEntityTypes,\n} from '../../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../../config';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nexport default function useLoadLinkPreview({\n  getHtml,\n  chatId,\n  threadId,\n}: {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n}) {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n  } = getActions();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1])\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: (volume: number) => void) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: (volume: number) => void) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { MessageListType, ThemeKey, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n} from '../../../global/helpers';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canAttachToDoLists: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ThemeKey;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  paidMessagesStars?: number;\n  onFileSelect: (files: File[]) => void;\n  onPollCreate: NoneToVoidFunction;\n  onTodoListCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n};\n\nconst AttachMenu = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canAttachToDoLists,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  canEditMedia,\n  editingMessage,\n  messageListType,\n  paidMessagesStars,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  onTodoListCreate,\n}: OwnProps) => {\n  const {\n    updateAttachmentSettings,\n  } = getActions();\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    updateAttachmentSettings({ shouldCompress: true });\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    updateAttachmentSettings({ shouldCompress: false });\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId\n          && bot.attachMenuPeerTypes && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>\n            {lang(messageListType === 'scheduled' && paidMessagesStars\n              ? 'DescriptionScheduledPaidMediaNotAllowed'\n              : 'DescriptionRestrictedMedia')}\n          </MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {oldLang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {oldLang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {oldLang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{oldLang('Poll')}</MenuItem>\n        )}\n        {canAttachToDoLists && !editingMessage && (\n          <MenuItem icon=\"select\" onClick={onTodoListCreate}>{lang('TitleToDoList')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n\n                onClick={() => clickBotInlineButton({ chatId: message.chatId, messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  const textRef = useRef<HTMLSpanElement>();\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('composer-action-button bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <Icon name=\"webapp\" className={buildClassName('bot-menu-icon', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiInputSuggestedPostInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport { selectIsMediaNsfw } from '../../../global/selectors/media';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { unique } from '../../../util/iteratees';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  suggestedPostInfo?: ApiInputSuggestedPostInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n  forwardMessageIds?: number[];\n  fromChatId?: string;\n  isMediaNsfw?: boolean;\n};\n\ntype OwnProps = {\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  onClear?: () => void;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  suggestedPostInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n  forwardMessageIds,\n  fromChatId,\n  isMediaNsfw,\n  onClear,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    resetDraftSuggestedPostInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n    openSuggestMessageModal,\n  } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n  const isShowingSuggestedPost = Boolean(suggestedPostInfo) && !shouldForceShowEditing;\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const selectSenderFromForwardedMessage = useLastCallback((forwardedMessage: ApiMessage) => {\n    const global = getGlobal();\n    sender = selectForwardedSender(global, forwardedMessage);\n    if (!sender) {\n      sender = selectSender(global, forwardedMessage);\n    }\n    return sender;\n  });\n\n  const forwardSenders = useMemo(() => {\n    if (!isForwarding) return undefined;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(getGlobal(), fromChatId!, id))\n      .filter(Boolean);\n    const senders = forwardedMessages?.map((m) => selectSenderFromForwardedMessage(m)).filter(Boolean);\n    return senders ? unique(senders) : undefined;\n  }, [isForwarding, forwardMessageIds, fromChatId]);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (forwardSenders && isForwarding) return true;\n    if (isShowingSuggestedPost) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (isShowingSuggestedPost) {\n      resetDraftSuggestedPostInfo();\n      resetDraftReplyInfo();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    if (suggestedPostInfo) {\n      openSuggestMessageModal({ chatId });\n      return;\n    }\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isShowingSuggestedPost) {\n      return 'cash-circle';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply, isShowingSuggestedPost]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          suggestedPostInfo={suggestedPostInfo}\n          isMediaNsfw={isMediaNsfw}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          composerForwardSenders={forwardSenders}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const suggestedPostInfo = draft?.suggestedPostInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    const selectSenderFromForwardedMessage = (forwardedMessage: ApiMessage) => {\n      sender = selectForwardedSender(global, forwardedMessage);\n      if (!sender) {\n        sender = selectSender(global, forwardedMessage);\n      }\n      return sender;\n    };\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      let forwardSenders = forwardedMessages?.map((m) => selectSenderFromForwardedMessage(m)).filter(Boolean);\n      forwardSenders = forwardSenders ? unique(forwardSenders) : undefined;\n      sender = forwardSenders?.length === 1 ? forwardSenders?.[0] : undefined;\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    const isMediaNsfw = message && selectIsMediaNsfw(global, message);\n\n    return {\n      replyInfo,\n      suggestedPostInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n      forwardMessageIds,\n      fromChatId,\n      isMediaNsfw,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ToDoListModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ToDoListModalAsync: FC<OwnProps> = (props) => {\n  const { modal } = props;\n  const ToDoListModal = useModuleLoader(Bundles.Extra, 'ToDoListModal', !modal);\n\n  return ToDoListModal ? <ToDoListModal {...props} /> : undefined;\n};\n\nexport default ToDoListModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O3di3ULC\",\"no-page-transitions\":\"UDdgVrUQ\",\"noPageTransitions\":\"UDdgVrUQ\",\"select-mode-active\":\"Y5TInySi\",\"selectModeActive\":\"Y5TInySi\",\"middle-column-footer\":\"XlGyc4tC\",\"middleColumnFooter\":\"XlGyc4tC\",\"no-message-composer-animations\":\"eDMArdYq\",\"noMessageComposerAnimations\":\"eDMArdYq\",\"ComposerEmbeddedMessage\":\"z4RvByc2\",\"composerEmbeddedMessage\":\"z4RvByc2\",\"inner\":\"m3DBx9f5\",\"contextMenu\":\"zqTOc7LU\",\"clear\":\"yhxytYkd\",\"left-icon\":\"vFWsMwfP\",\"leftIcon\":\"vFWsMwfP\",\"preview\":\"otSxF62k\",\"previewText\":\"itmZe2qi\",\"previewImageContainer\":\"VvwZOug9\",\"previewImage\":\"b0A9Zfoa\",\"siteName\":\"ER149gdz\",\"siteDescription\":\"FSYSqC60\",\"interactive\":\"G5_7x_Hn\"};","import { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiWebPage,\n  ApiWebPageFull,\n  ApiWebPagePending,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThreadId, WebPageMediaSize } from '../../../types';\n\nimport {\n  getMediaHash,\n  getWebPageAudio,\n  getWebPageDocument,\n  getWebPagePhoto,\n  getWebPageVideo,\n} from '../../../global/helpers';\nimport { selectNoWebPage, selectTabState, selectWebPage } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useThumbnail from '../../../hooks/media/useThumbnail';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\n\nimport styles from './WebPagePreview.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPageFull | ApiWebPagePending;\n  noWebPage?: boolean;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst WebPagePreview = ({\n  chatId,\n  threadId,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  attachmentSettings,\n  isEditing,\n}: OwnProps & StateProps) => {\n  const {\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useLang();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && !noWebPage && !isDisabled);\n  }, [isDisabled, noWebPage, webPagePreview]);\n  const { shouldRender } = useShowTransition({ isOpen: isShown, ref, withShouldRender: true });\n\n  const hasMediaSizeOptions = webPagePreview?.webpageType === 'full' && webPagePreview.hasLargeMedia;\n\n  const prevWebPageRef = useRef<ApiWebPage | undefined>(webPagePreview);\n\n  if (webPagePreview && webPagePreview !== prevWebPageRef.current) {\n    prevWebPageRef.current = webPagePreview;\n  }\n\n  const renderingWebPage = webPagePreview || prevWebPageRef.current;\n\n  const isFullWebPage = renderingWebPage?.webpageType === 'full';\n\n  const thumbnailUrl = useThumbnail(isFullWebPage ? { content: renderingWebPage } : undefined);\n  const previewMedia = getWebPagePhoto(renderingWebPage) || getWebPageVideo(renderingWebPage)\n    || getWebPageAudio(renderingWebPage) || getWebPageDocument(renderingWebPage);\n  const previewMediaHash = previewMedia && getMediaHash(previewMedia, 'pictogram');\n  const previewMediaUrl = useMedia(previewMediaHash);\n\n  const { shouldRender: shouldRenderPreviewMedia, ref: previewMediaRef } = useShowTransition<HTMLImageElement>({\n    isOpen: Boolean(previewMediaUrl),\n    withShouldRender: true,\n    noCloseTransition: true,\n  });\n\n  const hasPreviewMedia = Boolean(previewMediaUrl || shouldRenderPreviewMedia);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide, handleBeforeContextMenu,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector(`.${styles.contextMenu} .bubble`),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className={styles.contextMenu}\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('ContextMoveTextUp')}\n              </MenuItem>\n            ) : (\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang('ContextMoveTextDown')}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ContextLinkLargerMedia')}\n              </MenuItem>\n            ) : (\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang('ContextLinkSmallerMedia')}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ContextLinkRemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        !isEditing && styles.interactive,\n      )}\n      ref={ref}\n    >\n      <div className={styles.inner}>\n        <div className={styles.leftIcon} onClick={handlePreviewClick}>\n          <Icon name=\"link\" />\n        </div>\n        {renderingWebPage && renderingWebPage.webpageType !== 'empty' && (\n          <PeerColorWrapper\n            noUserColors\n            className={styles.preview}\n            onContextMenu={handleContextMenu}\n            onMouseDown={handleBeforeContextMenu}\n            onClick={handlePreviewClick}\n          >\n            {hasPreviewMedia && (\n              <div className={styles.previewImageContainer}>\n                {thumbnailUrl && (\n                  <img src={thumbnailUrl} alt=\"\" className={styles.previewImage} />\n                )}\n                {shouldRenderPreviewMedia && (\n                  <img ref={previewMediaRef} src={previewMediaUrl} alt=\"\" className={styles.previewImage} />\n                )}\n              </div>\n            )}\n            <div className={styles.previewText}>\n              <span className={styles.siteName}>\n                {isFullWebPage\n                  ? (renderingWebPage.siteName || renderingWebPage.url)\n                  : lang('Loading')}\n              </span>\n              <span className={styles.siteDescription}>\n                {isFullWebPage\n                  ? (renderingWebPage.description || lang(getMediaTypeKey(renderingWebPage)))\n                  : renderingWebPage.url}\n              </span>\n            </div>\n          </PeerColorWrapper>\n        )}\n        <Button\n          className={styles.clear}\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('AccLinkRemovePreview')}\n          onClick={handleClearWebpagePreview}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nfunction getMediaTypeKey(webPage: ApiWebPageFull) {\n  if (webPage.photo) return 'AttachPhoto';\n  if (webPage.video) return 'AttachVideo';\n  if (webPage.audio) return 'AttachMusic';\n  if (webPage.document) return 'AttachDocument';\n  if (webPage.story) return 'AttachStory';\n  return 'LinkPreview';\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const tabState = selectTabState(global);\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n\n    const webPagePreview = tabState.webPagePreviewId ? selectWebPage(global, tabState.webPagePreviewId) : undefined;\n\n    return {\n      webPagePreview: webPagePreview?.webpageType === 'empty' ? undefined : webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiDisallowedGifts,\n  ApiDraft,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewMediaTodo,\n  ApiNewPoll,\n  ApiPeer,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  GlobalState, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition,\n  InlineBotSettings,\n  MessageList,\n  MessageListType,\n  ThemeKey,\n  ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n  STARS_CURRENCY_CODE,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatPublic,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n} from '../../global/helpers';\nimport { getChatNotifySettings } from '../../global/helpers/notifications';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectNoWebPage,\n  selectPeer,\n  selectPeerPaidMessagesStars,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n  selectWebPage,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport { selectSharedSettings } from '../../global/selectors/sharedState';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport { isUserId } from '../../util/entities/ids';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { formatStarsAsIcon } from '../../util/localization/format';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport windowSize from '../../util/windowSize';\nimport { DEFAULT_MAX_MESSAGE_LENGTH } from '../../limits';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevious from '../../hooks/usePrevious';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useLoadLinkPreview from '../middle/composer/hooks/useLoadLinkPreview';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport usePaidMessageConfirmation from '../middle/composer/hooks/usePaidMessageConfirmation';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport ToDoListModal from '../middle/composer/ToDoListModal.async';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport AnimatedCounter from './AnimatedCounter';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport PaymentMessageConfirmDialog from './PaymentMessageConfirmDialog';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: TeactNode | string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    shouldDisplayGiftsButton?: boolean;\n    isForwarding?: boolean;\n    isReplying?: boolean;\n    hasSuggestedPost?: boolean;\n    forwardedMessagesCount?: number;\n    pollModal: TabState['pollModal'];\n    todoListModal: TabState['todoListModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsPeer?: ApiPeer;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ThemeKey;\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    paidMessagesStars?: number;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n    maxMessageLength: number;\n    shouldPaidMessageAutoApprove?: boolean;\n    isSilentPosting?: boolean;\n    isPaymentMessageConfirmDialogOpen: boolean;\n    starsBalance: number;\n    isStarsBalanceModalOpen: boolean;\n    disallowedGifts?: ApiDisallowedGifts;\n    isAccountFrozen?: boolean;\n    isAppConfigLoaded?: boolean;\n    insertingPeerIdMention?: string;\n    pollMaxAnswers?: number;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  shouldDisplayGiftsButton,\n  isForwarding,\n  isReplying,\n  hasSuggestedPost,\n  forwardedMessagesCount,\n  pollModal,\n  todoListModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsPeer,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  paidMessagesStars,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n  maxMessageLength,\n  isSilentPosting,\n  isPaymentMessageConfirmDialogOpen,\n  starsBalance,\n  isStarsBalanceModalOpen,\n  disallowedGifts,\n  isAccountFrozen,\n  isAppConfigLoaded,\n  insertingPeerIdMention,\n  pollMaxAnswers,\n  onDropHide,\n  onFocus,\n  onBlur,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    openPollModal,\n    closePollModal,\n    openTodoListModal,\n    closeTodoListModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    openGiftModal,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n    updateChatSilentPosting,\n    updateInsertingPeerIdMention,\n    updateDraftSuggestedPostInfo,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const inputRef = useRef<HTMLDivElement>();\n  const counterRef = useRef<HTMLSpanElement>();\n\n  const storyReactionRef = useRef<HTMLButtonElement>();\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = Boolean(sendAsPeerIds?.length);\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const isMonoforum = chat?.isMonoforum;\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const canSchedule = !paidMessagesStars && !isMonoforum;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (isAppConfigLoaded && chatId && isReady && !isInStoryViewer && !isMonoforum) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer, isAppConfigLoaded, isMonoforum]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    const isChatWithSendAs = chat && isChatSuperGroup(chat)\n      && Boolean(isChatPublic(chat) || chat.isLinkedInDiscussion || chat.hasGeo);\n    if (!sendAsPeerIds && isReady && (isChatWithSendAs || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks, canAttachToDoLists,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat,\n      chatFullInfo,\n      isChatWithBot,\n      isChatWithSelf,\n      isInStoryViewer,\n      paidMessagesStars,\n      isInScheduledList),\n    [chat, chatFullInfo, isChatWithBot, isChatWithSelf, isInStoryViewer, paidMessagesStars, isInScheduledList],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const messagesCount = useDerivedState(() => {\n    if (hasAttachments) return attachments.length;\n    const messagesInInput = (getHtml() || hasAttachments) ? 1 : 0;\n    if (!isForwarding || !forwardedMessagesCount) return messagesInInput || 1;\n    return forwardedMessagesCount + messagesInInput;\n  }, [getHtml, hasAttachments, attachments, isForwarding, forwardedMessagesCount]);\n  const starsForAllMessages = paidMessagesStars ? messagesCount * paidMessagesStars : 0;\n\n  const {\n    closeConfirmDialog: closeConfirmModalPayForMessage,\n    dialogHandler: paymentMessageConfirmDialogHandler,\n    shouldAutoApprove: shouldPaidMessageAutoApprove,\n    setAutoApprove: setShouldPaidMessageAutoApprove,\n    handleWithConfirmation: handleActionWithPaymentConfirmation,\n  } = usePaidMessageConfirmation(starsForAllMessages, isStarsBalanceModalOpen, starsBalance);\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = (renderText(text, ['escape_html', 'emoji_html', 'br_html']) as string[])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n    shouldSendInHighQuality: attachmentSettings.shouldSendInHighQuality,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  useEffect(() => {\n    if (!insertingPeerIdMention) return;\n    const peer = selectPeer(getGlobal(), insertingPeerIdMention);\n    if (peer) {\n      insertMention(peer, true, true);\n    }\n    updateInsertingPeerIdMention({ peerId: undefined });\n  }, [insertingPeerIdMention, insertMention]);\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft) || (!hasSuggestedPost && isMonoforum),\n  });\n\n  useLoadLinkPreview({\n    chatId,\n    threadId,\n    getHtml,\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const areAllGiftsDisallowed = useMemo(() => {\n    if (!disallowedGifts) {\n      return undefined;\n    }\n    return Object.values(disallowedGifts).every(Boolean);\n  }, [disallowedGifts]);\n\n  const shouldShowGiftButton = Boolean(!isChatWithSelf && shouldDisplayGiftsButton && !areAllGiftsDisallowed);\n  const shouldShowSuggestedPostButton = isMonoforum && !editingMessage\n    && !isForwarding && !isReplying && !draft?.suggestedPostInfo;\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: oldLang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: oldLang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : maxMessageLength;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: oldLang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const canSendAttachments = (attachmentsToSend: ApiAttachment[]): boolean => {\n    if (!currentMessageList && !storyId) {\n      return false;\n    }\n\n    const { text } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return false;\n    }\n    if (!validateTextLength(text, true)) return false;\n    if (!checkSlowMode()) return false;\n\n    return true;\n  };\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n    isSilent = isSilent || isSilentPosting;\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      if (editingMessage) {\n        sendAttachments({\n          attachments,\n          sendCompressed,\n          sendGrouped,\n          isInvertedMedia,\n        });\n        return;\n      }\n\n      handleActionWithPaymentConfirmation(sendAttachments, {\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    if (canSendAttachments(attachments)) {\n      sendAttachments({\n        attachments,\n        sendCompressed,\n        sendGrouped,\n        isSilent,\n        scheduledAt,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendCore = useLastCallback(\n    (currentAttachments: ApiAttachment[], isSilent = false, scheduledAt?: number) => {\n      const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n      if (currentAttachments.length) {\n        if (canSendAttachments(currentAttachments)) {\n          sendAttachments({\n            attachments: currentAttachments,\n            scheduledAt,\n            isSilent,\n          });\n        }\n        return;\n      }\n\n      if (!text && !isForwarding) {\n        return;\n      }\n\n      if (!validateTextLength(text)) return;\n\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const effectId = effect?.id;\n\n      if (text || isForwarding) {\n        if (!checkSlowMode()) return;\n\n        const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n        if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n        sendMessage({\n          messageList: currentMessageList,\n          text,\n          entities,\n          scheduledAt,\n          isSilent,\n          shouldUpdateStickerSetOrder,\n          isInvertedMedia,\n          effectId,\n          webPageMediaSize: attachmentSettings.webPageMediaSize,\n          webPageUrl: hasWebPagePreview ? webPagePreview.url : undefined,\n          isForwarding,\n        });\n      }\n\n      lastMessageSendTimeSeconds.current = getServerTime();\n      clearDraft({\n        chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n      });\n\n      if (IS_IOS && messageInput && messageInput === document.activeElement) {\n        applyIosAutoCapitalizationFix(messageInput);\n      }\n\n      // Wait until message animation starts\n      requestMeasure(() => {\n        resetComposer();\n      });\n    },\n  );\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    handleSendCore(currentAttachments, isSilent, scheduledAt);\n  });\n\n  const handleSendWithConfirmation = useLastCallback((isSilent = false, scheduledAt?: number) => {\n    handleActionWithPaymentConfirmation(handleSend, isSilent, scheduledAt);\n  });\n\n  const handleTodoListCreate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('SubscribeToTelegramPremiumForCreateToDo'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'todo' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n      return;\n    }\n\n    openTodoListModal({ chatId });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        chatId,\n        threadId,\n        queryId,\n        scheduledAt,\n        isSilent: isSilent || isSilentPosting,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(handleMessageSchedule, { gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(sendMessage, { messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule, { sticker, isSilent }, scheduledAt, currentMessageList!,\n        );\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        {\n          messageList: currentMessageList,\n          sticker,\n          isSilent,\n          shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n        },\n      );\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(handleMessageSchedule,\n          {\n            id: inlineResult.id,\n            queryId: inlineResult.queryId,\n            isSilent,\n          },\n          scheduledAt,\n          currentMessageList!);\n      });\n    } else {\n      handleActionWithPaymentConfirmation(sendInlineBotResult,\n        {\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          threadId,\n          chatId,\n          isSilent,\n        });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { poll },\n          scheduledAt,\n          currentMessageList,\n        );\n      });\n      closePollModal();\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        { messageList: currentMessageList, poll, isSilent: isSilentPosting },\n      );\n      closePollModal();\n    }\n  });\n\n  const handleToDoListSend = useLastCallback((todo: ApiNewMediaTodo) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(\n          handleMessageSchedule,\n          { todo },\n          scheduledAt,\n          currentMessageList,\n        );\n      });\n    } else {\n      handleActionWithPaymentConfirmation(\n        sendMessage,\n        { messageList: currentMessageList, todo, isSilent: isSilentPosting },\n      );\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: chatId });\n  });\n  const handleSuggestPostClick = useLastCallback(() => {\n    updateDraftSuggestedPostInfo({\n      price: { currency: STARS_CURRENCY_CODE, amount: 0, nanos: 0 },\n    });\n  });\n\n  const handleToggleSilentPosting = useLastCallback(() => {\n    const newValue = !isSilentPosting;\n    updateChatSilentPosting({ chatId, isEnabled: newValue });\n\n    showNotification({\n      localId: 'silentPosting',\n      icon: newValue ? 'mute' : 'unmute',\n      message: lang(`ComposerSilentPosting${newValue ? 'Enabled' : 'Disabled'}Tootlip`),\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const hasText = useDerivedState(() => Boolean(getHtml()), [getHtml]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage\n    && messageListType === 'thread';\n  const isBotMenuButtonOpen = withBotMenuButton && !hasText && !activeVoiceRecording;\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n    || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n\n  const placeholder = useMemo(() => {\n    if (activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER) {\n      return '';\n    }\n\n    if (!isComposerBlocked) {\n      if (botKeyboardPlaceholder) return botKeyboardPlaceholder;\n      if (inputPlaceholder) return inputPlaceholder;\n      if (paidMessagesStars) {\n        return lang('ComposerPlaceholderPaidMessage', {\n          amount: formatStarsAsIcon(lang, paidMessagesStars, { asFont: true, className: 'placeholder-star-icon' }),\n        }, {\n          withNodes: true,\n        });\n      }\n\n      if (isReplying && hasSuggestedPost) {\n        return lang('ComposerPlaceholderCaption');\n      }\n\n      if (chat?.adminRights?.anonymous) {\n        return lang('ComposerPlaceholderAnonymous');\n      }\n\n      if (chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID) {\n        return replyToTopic\n          ? lang('ComposerPlaceholderTopic', { topic: replyToTopic.title })\n          : lang('ComposerPlaceholderTopicGeneral');\n      }\n      if (isChannel) {\n        return lang(isSilentPosting ? 'ComposerPlaceholderBroadcastSilent' : 'ComposerPlaceholderBroadcast');\n      }\n      return lang('ComposerPlaceholder');\n    }\n\n    if (isInStoryViewer) return lang('ComposerStoryPlaceholderLocked');\n\n    return lang('ComposerPlaceholderNoText');\n  }, [\n    activeVoiceRecording, botKeyboardPlaceholder, chat, inputPlaceholder, isChannel, isComposerBlocked,\n    isInStoryViewer, isSilentPosting, lang, replyToTopic, isReplying, threadId, windowWidth, paidMessagesStars,\n    hasSuggestedPost,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        handleSendWithConfirmation();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: oldLang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId, messageListType });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    handleActionWithPaymentConfirmation(sendMessage, { text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(sendSilent);\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleActionWithPaymentConfirmation(\n      handleMessageSchedule, {}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id,\n    );\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleActionWithPaymentConfirmation(handleMessageSchedule,\n          { sendCompressed, sendGrouped, isInvertedMedia },\n          scheduledAt,\n          currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      handleActionWithPaymentConfirmation(sendSilent, { sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => {\n    saveEffectInDraft({ chatId, threadId, effectId: undefined });\n  });\n\n  const handleStopEffect = useLastCallback(() => {\n    hideEffectInComposer({ });\n  });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSendWithConfirmation;\n    }\n  }, [mainButtonState, handleEditComplete, handleSendWithConfirmation]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  const shouldRenderPaidBadge = Boolean(paidMessagesStars && mainButtonState === MainButtonState.Send);\n  const prevShouldRenderPaidBadge = usePrevious(shouldRenderPaidBadge);\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={canSchedule && isInScheduledList}\n        canSchedule={canSchedule}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n        paidMessagesStars={paidMessagesStars}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        maxOptionsCount={pollMaxAnswers}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <ToDoListModal\n        modal={todoListModal}\n        onClear={closeTodoListModal}\n        onSend={handleToDoListSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              isDisabled={!canAttachEmbedLinks || hasAttachments || !hasText}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName(\n                    'bot-commands', 'composer-action-button',\n                  )}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && sendAsPeer && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={oldLang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    'composer-action-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsPeer}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium && !isAccountFrozen) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={placeholder}\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n            messageListType={messageListType}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              <Transition\n                className=\"composer-action-buttons-container\"\n                slideClassName=\"composer-action-buttons\"\n                activeKey={Number(hasText)}\n                direction=\"inverse\"\n                name=\"slideFadeAndroid\"\n              >\n                {!hasText && (\n                  <>\n                    {isChannel && (\n                      <Transition className=\"composer-action-button\" name=\"reveal\" activeKey={Number(isSilentPosting)}>\n                        <Button\n                          round\n                          faded\n                          className=\"composer-action-button\"\n                          color=\"translucent\"\n                          onClick={handleToggleSilentPosting}\n                          ariaLabel={lang(\n                            isSilentPosting ? 'AriaComposerSilentPostingDisable' : 'AriaComposerSilentPostingEnable',\n                          )}\n                        >\n                          <Icon name={isSilentPosting ? 'mute' : 'unmute'} />\n                        </Button>\n                      </Transition>\n                    )}\n                    {withScheduledButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button scheduled-button\"\n                        color=\"translucent\"\n                        onClick={handleAllScheduledClick}\n                        ariaLabel={lang('AriaComposerOpenScheduled')}\n                      >\n                        <Icon name=\"schedule\" />\n                      </Button>\n                    )}\n                    {shouldShowGiftButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button\"\n                        color=\"translucent\"\n                        onClick={handleGiftClick}\n                      >\n                        <Icon name=\"gift\" />\n                      </Button>\n                    )}\n                    {shouldShowSuggestedPostButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button\"\n                        color=\"translucent\"\n                        onClick={handleSuggestPostClick}\n                      >\n                        <Icon name=\"cash-circle\" />\n                      </Button>\n                    )}\n                    {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                      <ResponsiveHoverButton\n                        className={buildClassName('composer-action-button', isBotKeyboardOpen && 'activated')}\n                        round\n                        color=\"translucent\"\n                        onActivate={openBotKeyboard}\n                        ariaLabel={lang('AriaComposerBotKeyboard')}\n                      >\n                        <Icon name=\"bot-command\" />\n                      </ResponsiveHoverButton>\n                    )}\n                  </>\n                )}\n              </Transition>\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canAttachToDoLists={canAttachToDoLists}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              onTodoListCreate={handleTodoListCreate}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n              messageListType={messageListType}\n              paidMessagesStars={paidMessagesStars}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={oldLang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={oldLang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <Icon name=\"heart\" className={buildClassName(isSentStoryReactionHeart && 'story-reaction-heart')} />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={oldLang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <Icon name=\"send\" />\n        <Icon name=\"microphone-alt\" />\n        {onForward && <Icon name=\"forward\" />}\n        {isInMessageList && <Icon name=\"schedule\" />}\n        {isInMessageList && <Icon name=\"check\" />}\n        <Button\n          className={buildClassName(\n            'paidStarsBadge',\n            shouldRenderPaidBadge && 'visible',\n            prevShouldRenderPaidBadge && !shouldRenderPaidBadge && 'hiding',\n            !prevShouldRenderPaidBadge && !shouldRenderPaidBadge && 'hidden',\n          )}\n          nonInteractive\n          size=\"tiny\"\n          color=\"stars\"\n          pill\n          fluid\n        >\n          <div className=\"paidStarsBadgeText\">\n            <Icon name=\"star\" className={buildClassName('star-amount-icon', className)} />\n            <AnimatedCounter\n              ref={counterRef}\n              text={lang.number(starsForAllMessages)}\n            />\n          </div>\n        </Button>\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={canSchedule && isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n      <PaymentMessageConfirmDialog\n        isOpen={isPaymentMessageConfirmDialogOpen}\n        onClose={closeConfirmModalPayForMessage}\n        userName={chat ? getPeerTitle(lang, chat) : undefined}\n        messagePriceInStars={paidMessagesStars || 0}\n        messagesCount={messagesCount}\n        shouldAutoApprove={shouldPaidMessageAutoApprove}\n        setAutoApprove={setShouldPaidMessageAutoApprove}\n        confirmHandler={paymentMessageConfirmDialogHandler}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const appConfig = global.appConfig;\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const userFullInfo = isChatWithUser ? selectUserFullInfo(global, chatId) : undefined;\n    const paidMessagesStars = selectPeerPaidMessagesStars(global, chatId);\n\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const {\n      shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder, shouldPaidMessageAutoApprove,\n    } = global.settings.byKey;\n    const { language, shouldCollectDebugLogs } = selectSharedSettings(global);\n    const {\n      forwardMessages: { messageIds: forwardMessageIds },\n    } = selectTabState(global);\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = defaultSendAsId;\n    const sendAsPeer = sendAsId ? selectPeer(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !userFullInfo?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const isSilentPosting = chat && getChatNotifySettings(\n      chat,\n      selectNotifyDefaults(global),\n      selectNotifyException(global, chatId),\n    )?.isSilentPosting;\n\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n      && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    const maxMessageLength = global.config?.maxMessageLength || DEFAULT_MAX_MESSAGE_LENGTH;\n    const isForwarding = chatId === tabState.forwardMessages.toChatId;\n    const isReplying = Boolean(draft?.replyInfo);\n    const hasSuggestedPost = Boolean(draft?.suggestedPostInfo);\n    const starsBalance = global.stars?.balance.amount || 0;\n    const isStarsBalanceModalOpen = Boolean(tabState.starsBalanceModal);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n    const isAppConfigLoaded = global.isAppConfigLoaded;\n    const insertingPeerIdMention = tabState.insertingPeerIdMention;\n\n    const webPagePreview = tabState.webPagePreviewId ? selectWebPage(global, tabState.webPagePreviewId) : undefined;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && (userFullInfo || chatFullInfo)?.hasScheduledMessages\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding,\n      isReplying,\n      hasSuggestedPost,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      pollModal: tabState.pollModal,\n      todoListModal: tabState.todoListModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: userFullInfo ? (userFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: userFullInfo?.botInfo?.menuButton,\n      sendAsPeer,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview,\n      isContactRequirePremium: userFullInfo?.isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n      maxMessageLength,\n      paidMessagesStars,\n      shouldPaidMessageAutoApprove,\n      isSilentPosting,\n      isPaymentMessageConfirmDialogOpen: tabState.isPaymentMessageConfirmDialogOpen,\n      starsBalance,\n      isStarsBalanceModalOpen,\n      shouldDisplayGiftsButton: userFullInfo?.shouldDisplayGiftsButton,\n      disallowedGifts: userFullInfo?.disallowedGifts,\n      isAccountFrozen,\n      isAppConfigLoaded,\n      insertingPeerIdMention,\n      pollMaxAnswers: appConfig.pollMaxAnswers,\n    };\n  },\n)(Composer));\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n  shouldSendInHighQuality,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n  shouldSendInHighQuality?: boolean;\n}) {\n  const lang = useLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file,\n          { shouldSendAsSpoiler: isSpoiler || undefined, shouldSendInHighQuality })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[]) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) =>\n        buildAttachment(file.name, file, { shouldSendInHighQuality })));\n      handleSetAttachments(newAttachments);\n    }\n  });\n\n  const handleUpdateAttachmentsQuality = useLastCallback(async () => {\n    const newAttachments = await Promise.all(attachments.map((attachment) =>\n      buildAttachment(attachment.filename, attachment.blob, { shouldSendInHighQuality })));\n    handleSetAttachments(newAttachments);\n  });\n\n  useEffect(() => {\n    handleUpdateAttachmentsQuality();\n  }, [shouldSendInHighQuality]);\n\n  return {\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  const recordButtonRef = useRef<HTMLButtonElement>();\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot } from '../../global/helpers';\nimport { selectIsChatRestricted, selectPeer, selectUserStatus } from '../../global/selectors';\nimport { isUserId } from '../../util/entities/ids';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        const isRestricted = selectIsChatRestricted(global, chat.id);\n        return isChatChannel(chat) && !isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { getServerTime } from '../../../util/serverTime';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  hasMiniApp?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n  isSelected?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n  hasMiniApp,\n  isSelected,\n}) => {\n  const { requestMainWebView } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => {\n    if (!isForum) {\n      return (topic || chat).unreadCount;\n    }\n\n    return topicsWithUnread?.length;\n  }, [chat, topic, topicsWithUnread, isForum]);\n\n  const shouldBeUnMuted = useMemo(() => {\n    if (!isForum) {\n      return !isMuted || topic?.notifySettings.mutedUntil === 0;\n    }\n\n    if (isMuted) {\n      return topicsWithUnread?.some((acc) => acc.notifySettings.mutedUntil === 0);\n    }\n\n    const isEveryUnreadMuted = topicsWithUnread?.every((acc) => (\n      acc.notifySettings.mutedUntil && acc.notifySettings.mutedUntil > getServerTime()\n    ));\n\n    return !isEveryUnreadMuted;\n  }, [isForum, isMuted, topicsWithUnread, topic?.notifySettings.mutedUntil]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened || hasMiniApp,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    !shouldBeUnMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chat.id,\n      peerId: chat.id,\n      theme,\n    });\n  });\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', !shouldBeUnMuted && 'muted')}>\n        <Icon name=\"heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <Icon name=\"mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', !shouldBeUnMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(lang, unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <Icon name=\"pinned-chat\" />\n      </div>\n    );\n\n    const miniAppButton = hasMiniApp && (\n      <Button\n        color={isSelected ? 'secondary' : 'primary'}\n        className=\"ChatBadge miniapp\"\n        pill\n        size=\"tiny\"\n        onClick={handleOpenApp}\n      >\n        {oldLang('BotOpen')}\n      </Button>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    // Show only if empty or have pinned icon\n    if (hasMiniApp && (elements.length === 0 || visiblePinnedElement)) return miniAppButton;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import type React from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport SensitiveContentConfirmModal from '../../common/SensitiveContentConfirmModal';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  lastPlaybackTimestamp?: number;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  isMediaNsfw?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\ntype StateProps = {\n  needsAgeVerification?: boolean;\n};\n\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  lastPlaybackTimestamp,\n  clickArg,\n  isMediaNsfw,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n  onCancelUpload,\n  needsAgeVerification,\n}: OwnProps<T> & StateProps) => {\n  const { cancelMediaDownload, updateContentSettings, openAgeVerificationModal } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const videoRef = useRef<HTMLVideoElement>();\n  const [isNsfwModalOpen, openNsfwModal, closeNsfwModal] = useFlag();\n  const [shouldAlwaysShowNsfw, setShouldAlwaysShowNsfw] = useState(false);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const shouldShowSpoiler = isPaidPreview || video.isSpoiler || isMediaNsfw;\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(shouldShowSpoiler);\n\n  useEffect(() => {\n    if (shouldShowSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [shouldShowSpoiler]);\n\n  const handleNsfwConfirm = useLastCallback(() => {\n    closeNsfwModal();\n    hideSpoiler();\n\n    if (shouldAlwaysShowNsfw) {\n      updateContentSettings({ isSensitiveEnabled: true });\n    }\n  });\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const shouldHidePreview = isPlayerReady && !isUnsupported;\n  const { ref: previewRef } = useMediaTransition<HTMLImageElement>({\n    hasMediaData: Boolean((hasThumb || previewBlobUrl) && !shouldHidePreview),\n  });\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition({ ref: thumbRef, hasMediaData: !noThumb });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) && !isUnsupported\n    ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      if (isMediaNsfw) {\n        if (needsAgeVerification) {\n          openAgeVerificationModal();\n          return;\n        }\n        openNsfwModal();\n        return;\n      }\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          defaultMuted\n          muted\n          loop\n          playsInline\n          disablePictureInPicture\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <Icon ref={playButtonRef} name=\"large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        isNsfw={isMediaNsfw}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <Icon name=\"download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <Icon name=\"message-failed\" className=\"playback-failed\" />}\n        </div>\n      )}\n      {Boolean(lastPlaybackTimestamp) && (\n        <div\n          className=\"message-media-last-progress\"\n          style={`--_progress: ${Math.floor((lastPlaybackTimestamp / duration) * 100)}%`}\n        />\n      )}\n      <SensitiveContentConfirmModal\n        isOpen={isNsfwModalOpen}\n        onClose={closeNsfwModal}\n        shouldAlwaysShow={shouldAlwaysShowNsfw}\n        onAlwaysShowChanged={setShouldAlwaysShowNsfw}\n        confirmHandler={handleNsfwConfirm}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const appConfig = global.appConfig;\n  const needsAgeVerification = appConfig.needAgeVideoVerification;\n\n  return {\n    needsAgeVerification,\n  };\n})(Video));\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule> | undefined;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string'\n        ? renderText(emoji, ['emoji_html'])[0] as string\n        : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  const triggerRef = useRef<HTMLDivElement>();\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'composer-action-button mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <Icon name=\"smile\" />\n          <Icon name=\"keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('composer-action-button symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <Icon name=\"smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_AVAILABLE = 'update-available',\n  DEEPLINK = 'deeplink',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_WINDOW_BUTTONS_POSITION = 'set-window-buttons-position',\n  SET_IS_AUTO_UPDATE_ENABLED = 'set-is-auto-update-enabled',\n  GET_IS_AUTO_UPDATE_ENABLED = 'get-is-auto-update-enabled',\n  SET_IS_TRAY_ICON_ENABLED = 'set-is-tray-icon-enabled',\n  GET_IS_TRAY_ICON_ENABLED = 'get-is-tray-icon-enabled',\n  RESTORE_LOCAL_STORAGE = 'restore-local-storage',\n}\n\nexport type WindowButtonsPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setWindowButtonsPosition: (position: WindowButtonsPosition) => Promise<void>;\n  /**\n   * @deprecated Use `setWindowButtonsPosition` instead\n   */\n  setTrafficLightPosition: (position: WindowButtonsPosition) => Promise<void>;\n  setIsAutoUpdateEnabled: (value: boolean) => Promise<void>;\n  getIsAutoUpdateEnabled: () => Promise<boolean>;\n  setIsTrayIconEnabled: (value: boolean) => Promise<void>;\n  getIsTrayIconEnabled: () => Promise<boolean>;\n  restoreLocalStorage: () => Promise<void>;\n\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: { text: '' },\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n): FoldersState => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: { text: action.payload },\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : { text: getSuggestedFolderName(state.includeFilters) },\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiDraft,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  groupStatefulContent,\n  isUserOnline,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsCurrentUserFrozen,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectMonoforumChannel,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectSender,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { createLocationHash } from '../../../util/routing';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  monoforumChannel?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n  isAccountFrozen?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  monoforumChannel,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n  isAccountFrozen,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n    openFrozenAccountModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages, isMonoforum } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n    topics,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={isMonoforum ? monoforumChannel : peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          asMessageBubble={isMonoforum}\n          withStory={!user?.isSelf && !isMonoforum}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n            isSelected={isSelected}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={isMonoforum ? monoforumChannel! : peer}\n            isMonoforum={isMonoforum}\n            monoforumBadgeClassName=\"monoforum-badge\"\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              hasMiniApp={user?.hasMainMiniApp}\n              topics={topics}\n              isSelected={isSelected}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { isOutgoing, forwardInfo } = lastMessage || {};\n    const savedDialogSender = isSavedDialog && forwardInfo?.fromId ? selectPeer(global, forwardInfo.fromId) : undefined;\n    const messageSender = lastMessage ? selectSender(global, lastMessage) : undefined;\n    const lastMessageSender = savedDialogSender || messageSender;\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const userStatus = selectUserStatus(global, chatId);\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const monoforumChannel = selectMonoforumChannel(global, chatId);\n\n    return {\n      chat,\n      isMuted: getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id)),\n      lastMessageSender,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n      isAccountFrozen,\n      monoforumChannel,\n    };\n  },\n)(Chat));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks = new Set<NoneToVoidFunction>();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: String(zIndex),\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: String(zIndex),\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n\n            callbacks.delete(cb);\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: String(zIndex),\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: String(zIndex),\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar.classList.remove('animating');\n          });\n\n          callbacks.delete(cb);\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n}: {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { MediaContainer, SizeTarget } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { getMessageMediaHash } from '../../global/helpers/messageMedia';\nimport useSelector from '../data/useSelector';\n\nfunction selectWebPagesById(global: GlobalState) {\n  return global.messages.webPageById;\n}\n\nexport default function useMessageMediaHash(message: MediaContainer | undefined, target: SizeTarget) {\n  const webPagesById = useSelector(selectWebPagesById);\n  if (!message) return undefined;\n\n  const webPageId = message.content.webPage?.id;\n  const webPage = webPageId ? webPagesById[webPageId] : undefined;\n\n  return getMessageMediaHash(message, { webPage }, target);\n}\n","import { IS_TOUCH_ENV } from './browser/windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/browser/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n} from '../../global/helpers';\nimport { selectWebPageFromMessage } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype StateProps = {\n  webPage?: ApiWebPage;\n};\n\nconst WebLink = ({\n  message, webPage, senderTitle, isProtected, observeIntersection, onMessageClick,\n}: OwnProps & StateProps) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = webPage;\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message)?.text !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (linkData?.webpageType !== 'full') {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    message,\n  }): StateProps => {\n    const webPage = selectWebPageFromMessage(global, message);\n\n    return {\n      webPage,\n    };\n  },\n)(WebLink));\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import { useEffect, useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nimport { ELECTRON_WINDOW_DRAG_EVENT_START } from '../config';\nimport useLastCallback from './useLastCallback';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useLastCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  });\n\n  const end = useLastCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    cancel();\n  });\n\n  const cancel = useLastCallback(() => {\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  });\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  useEffect(() => {\n    document.body.addEventListener(ELECTRON_WINDOW_DRAG_EVENT_START, cancel);\n\n    return () => {\n      document.body.removeEventListener(ELECTRON_WINDOW_DRAG_EVENT_START, cancel);\n    };\n  }, []);\n\n  return {\n    onMouseDown: start,\n    onMouseUp: end,\n    onMouseLeave: end,\n    onTouchStart: start,\n    onTouchEnd: end,\n  };\n}\n\nexport default useLongPress;\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","import {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import type { ThemeKey } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ThemeKey,\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\nconst ARCHIVE_CUSTOM_PEER: CustomPeer = {\n  isCustomPeer: true,\n  title: 'Archived Chats',\n  avatarIcon: 'archive-filled',\n  customPeerAvatarColor: '#9EAAB5',\n};\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('ContextArchiveCollapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('ContextArchiveExpand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('ContextArchiveToMenu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <Icon name=\"archive-filled\" className={styles.icon} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <Avatar peer={ARCHIVE_CUSTOM_PEER} />\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(lang, archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch,\n}) => {\n  const { openSettingsScreen } = getActions();\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    openSettingsScreen({ screen: SettingsScreens.FoldersEditFolderFromChatList });\n  }, [chatFolder, foldersDispatch]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          isRtl={lang.isRtl}\n        >\n          <Icon name=\"settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","import { memo } from '../../../lib/teact/teact';\n\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './FrozenAccountNotification.module.scss';\n\ntype OwnProps = {\n  onClick: () => void;\n};\n\nconst FrozenAccountNotification = ({ onClick }: OwnProps) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={styles.root}\n      onClick={onClick}\n    >\n      <div className={styles.title}>{lang('TitleFrozenAccount')}</div>\n      <div className={styles.subtitle}>{lang('SubtitleFrozenAccount')}</div>\n    </div>\n  );\n};\n\nexport default memo(FrozenAccountNotification);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"fOmerTkM\",\"title\":\"URLYINJA\",\"subtitle\":\"mCFsx7Tv\"};","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange }: OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport { IS_APP, IS_MAC_OS } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport FrozenAccountNotification from './FrozenAccountNotification';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  isAccountFrozen?: boolean;\n  isMainList?: boolean;\n  foldersDispatch?: FolderEditDispatch;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  isAccountFrozen,\n  isMainList,\n  foldersDispatch,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n    openFrozenAccountModal,\n    openLeftColumnContent,\n  } = getActions();\n  const containerRef = useRef<HTMLDivElement>();\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n  const shouldShowFrozenAccountNotification = isAccountFrozen && isAllFolder;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n  const frozenNotificationHeight = shouldShowFrozenAccountNotification ? 68 : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return !isAccountFrozen && isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions, isAccountFrozen]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          if (isMainList) openLeftColumnContent({ contentKey: LeftColumnContent.Archived });\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, openChat, openNextChat, orderedIds, shouldDisplayArchive, isMainList,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    openLeftColumnContent({ contentKey: LeftColumnContent.Archived });\n    closeForumPanel();\n  });\n\n  const handleFrozenAccountNotificationClick = useLastCallback(() => {\n    openFrozenAccountModal();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + frozenNotificationHeight\n        + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + frozenNotificationHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldShowFrozenAccountNotification && (\n        <FrozenAccountNotification\n          key=\"frozen\"\n          onClick={handleFrozenAccountNotificationClick}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { IS_IOS, IS_SAFARI } from '../../util/browser/windowEnvironment';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: ElementRef<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  const overscrollTriggerRef = useRef<HTMLDivElement>();\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const ref = useRef<HTMLDivElement>();\n  const svgRef = useRef<SVGSVGElement>();\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <Icon name={isQuick ? 'photo' : 'document'} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  editingMessage?: ApiMessage | undefined;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[]) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea = ({\n  isOpen, withQuick, editingMessage, onHide, onFileSelect,\n}: OwnProps) => {\n  const lang = useLang();\n  const { showNotification, updateAttachmentSettings } = getActions();\n  const hideTimeoutRef = useRef<number>();\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    if (editingMessage) {\n      if (files.length > 1) {\n        showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n        return;\n      }\n\n      if (files.length === 1) {\n        const newAttachment = await buildAttachment(files[0].name, files[0]);\n        const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n        if (!canReplace) {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n          return;\n        }\n      }\n    }\n\n    onHide();\n    updateAttachmentSettings({ shouldCompress: withQuick ? false : undefined });\n    onFileSelect(files);\n  });\n\n  const handleQuickFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      const files = Array.from(dt.files);\n      if (editingMessage) {\n        if (files.length > 1) {\n          showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n          return;\n        }\n        if (files.length === 1) {\n          const newAttachment = await buildAttachment(files[0].name, files[0]);\n          const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n          if (!canReplace) {\n            showNotification({ message: lang('MediaReplaceInvalidError', undefined, { pluralValue: files.length }) });\n            return;\n          }\n        }\n      }\n\n      onHide();\n      updateAttachmentSettings({ shouldCompress: true });\n      onFileSelect(files);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement).matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { LOCAL_TGS_PREVIEW_URLS, LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n  withSticker?: boolean;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description, withSticker }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName(\n      'NothingFound',\n      transitionClassNames,\n      description && 'with-description',\n      withSticker && 'with-sticker')}\n    >\n      {withSticker && (\n        <AnimatedIconWithPreview\n          className=\"sticker\"\n          size={120}\n          tgsUrl={LOCAL_TGS_URLS.DuckNothingFound}\n          previewUrl={LOCAL_TGS_PREVIEW_URLS.DuckNothingFound}\n          nonInteractive\n          noLoop={false}\n        />\n      )}\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { isIpRevealingMedia } from '../../util/media/ipRevealingMedia';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutFiles?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutFiles,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSharedSettingOption } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n  const [isFileIpDialogOpen, openFileIpDialog, closeFileIpDialog] = useFlag();\n  const [shouldNotWarnAboutFiles, setShouldNotWarnAboutFiles] = useState(false);\n\n  const { fileName, size, timestamp, mimeType } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const shouldForceDownload = document.innerMediaType === 'photo' && !document.mediaSize?.fromDocumentAttribute;\n\n  const withMediaViewer = onMediaClick && document.innerMediaType && !shouldForceDownload;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick();\n      return;\n    }\n\n    if (isIpRevealingMedia({ mimeType, extension }) && shouldWarnAboutFiles) {\n      openFileIpDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleFileIpConfirm = useLastCallback(() => {\n    setSharedSettingOption({ shouldWarnAboutFiles: !shouldNotWarnAboutFiles });\n    closeFileIpDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isFileIpDialogOpen}\n        onClose={closeFileIpDialog}\n        confirmHandler={handleFileIpConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutFiles}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutFiles}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import type React from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  const transitionRef = useRef<HTMLDivElement>();\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(lang(valueKey, [formattedDate, age], undefined, age))}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"botVerificationSection\":\"RWFu5ENh\",\"sectionInfo\":\"IrqRJFxm\",\"botVerificationIcon\":\"b32hsSPS\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiBotVerification,\n  ApiChat,\n  ApiCountryCode,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUsername,\n} from '../../../api/types';\nimport type { BotAppPermissions } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectBotAppPermissions,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatRestricted,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport CustomEmoji from '../CustomEmoji';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n  isBotCanManageEmojiStatus?: boolean;\n  botAppPermissions?: BotAppPermissions;\n  botVerification?: ApiBotVerification;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst BOT_VERIFICATION_ICON_SIZE = 16;\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n  isBotCanManageEmojiStatus,\n  botAppPermissions,\n  botVerification,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n    toggleUserEmojiStatusPermission,\n    toggleUserLocationPermission,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    if (isTopicInfo) {\n      updateTopicMutedState({\n        chatId: chatId!,\n        topicId: topicId!,\n        isMuted: !isMuted,\n      });\n    } else {\n      updateChatMutedState({ chatId: chatId!, isMuted: !isMuted });\n    }\n  });\n\n  const manageEmojiStatusChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserEmojiStatusPermission({ botId: user.id, isEnabled: !isBotCanManageEmojiStatus });\n  });\n\n  const handleLocationPermissionChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserLocationPermission({ botId: user.id, isAccessGranted: !botAppPermissions?.geolocation });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  const isRestricted = chatId ? selectIsChatRestricted(getGlobal(), chatId) : false;\n  if (isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%'))\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      {hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" narrow ripple onClick={handleNotificationChange}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={!isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n      {userFullInfo && 'isBotAccessEmojiGranted' in userFullInfo && (\n        <ListItem icon=\"user\" narrow ripple onClick={manageEmojiStatusChange}>\n          <span>{oldLang('BotProfilePermissionEmojiStatus')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionEmojiStatus')}\n            checked={isBotCanManageEmojiStatus}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botAppPermissions?.geolocation !== undefined && (\n        <ListItem icon=\"location\" narrow ripple onClick={handleLocationPermissionChange}>\n          <span>{oldLang('BotProfilePermissionLocation')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionLocation')}\n            checked={botAppPermissions?.geolocation}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botVerification && (\n        <div className={styles.botVerificationSection}>\n          <CustomEmoji\n            className={styles.botVerificationIcon}\n            documentId={botVerification.iconId}\n            size={BOT_VERIFICATION_ICON_SIZE}\n          />\n          {botVerification.description}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const botAppPermissions = chatOrUserId ? selectBotAppPermissions(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const botVerification = userFullInfo?.botVerification || chatFullInfo?.botVerification;\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      botAppPermissions,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n      isBotCanManageEmojiStatus: userFullInfo?.isBotCanManageEmojiStatus,\n      botVerification,\n    };\n  },\n)(ChatExtra));\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          disabled={isDisabled}\n          onClick={handleShare}\n          className={styles.share}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\",\"share\":\"Sbagy_Tm\"};","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiChat, ApiTopic, ApiUser } from '../api/types';\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n} from '../global/helpers';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/browser/windowEnvironment';\nimport { isUserId } from '../util/entities/ids';\nimport { compact } from '../util/iteratees';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  topics,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  topics?: Record<number, ApiTopic>;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChat');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('ChannelLeave');\n    }\n\n    return lang('GroupLeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      markChatMessagesRead,\n      markChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? lang('ChatListOpenInNewWindow') : lang('ChatListOpenInNewTab'),\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('ChatListUnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('ChatListPinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatListContextAddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatsUnmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatsMute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (\n      chat.unreadCount || chat.hasUnreadMark || Object.values(topics || {}).some(({ unreadCount }) => unreadCount)\n    ) ? {\n        title: lang('ChatListContextMaskAsRead'),\n        icon: 'readchats',\n        handler: () => markChatMessagesRead({ id: chat.id }),\n      } : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('ChatListContextMaskAsUnread'), icon: 'unread', handler: () => markChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeerReport'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview, topics,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","import type { FC, StateHookSetter } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport { formatStarsAsText } from '../../util/localization/format';\n\nimport useLang from '../../hooks/useLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport styles from './PaymentMessageConfirmDialog.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n  userName?: string;\n  messagePriceInStars: number;\n  messagesCount: number;\n  shouldAutoApprove: boolean;\n  setAutoApprove: StateHookSetter<boolean>;\n  confirmHandler: NoneToVoidFunction;\n};\n\nconst PaymentMessageConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  userName,\n  messagePriceInStars,\n  messagesCount,\n  shouldAutoApprove: shouldPaidMessageAutoApprove,\n  setAutoApprove: setShouldPaidMessageAutoApprove,\n  confirmHandler,\n}) => {\n  const lang = useLang();\n\n  const confirmPaymentMessage = lang('ConfirmationModalPaymentForMessage', {\n    user: userName,\n    amount: formatStarsAsText(lang, messagePriceInStars),\n    totalAmount: formatStarsAsText(lang, messagePriceInStars * messagesCount),\n    count: messagesCount,\n  }, {\n    withMarkdown: true,\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  const confirmLabel = lang('PayForMessage', { count: messagesCount }, {\n    withNodes: true,\n    pluralValue: messagesCount,\n  });\n\n  return (\n    <ConfirmDialog\n      title={lang('TitleConfirmPayment')}\n      confirmLabel={confirmLabel}\n      isOpen={isOpen}\n      onClose={onClose}\n      confirmHandler={confirmHandler}\n    >\n      {confirmPaymentMessage}\n      <Checkbox\n        className={styles.checkBox}\n        label={lang('DoNotAskAgain')}\n        checked={shouldPaidMessageAutoApprove}\n        onCheck={setShouldPaidMessageAutoApprove}\n      />\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(PaymentMessageConfirmDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"checkBox\":\"eScpikxM\"};","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { IAnchorPosition, MessageListType, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatRestricted,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/browser/windowEnvironment';\nimport { isUserId } from '../../util/entities/ids';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  channelMonoforumId?: string;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n  isAccountFrozen?: boolean;\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  channelMonoforumId,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  isAccountFrozen,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n    openFrozenAccountModal,\n  } = getActions();\n  const menuButtonRef = useRef<HTMLButtonElement>();\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    if (isAccountFrozen) {\n      openFrozenAccountModal();\n      return;\n    }\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  }, [language, lang]);\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <Icon name=\"language\" />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"smaller\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <Icon name=\"search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <Icon name=\"phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <Icon name=\"user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <Icon name=\"more\" />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          channelMonoforumId={channelMonoforumId}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    const isRestricted = selectIsChatRestricted(global, chatId);\n    if (!chat || isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined && !chat.isMonoforum,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat))) && !chat.isMonoforum;\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread && !chat.isMonoforum\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel) && !chat.isMonoforum;\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const channelMonoforumId = isChatChannel(chat) ? chat.linkedMonoforumId : undefined;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n      isAccountFrozen,\n      channelMonoforumId,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","import type {\n  ElementRef } from '../../../lib/teact/teact';\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n}: {\n  ref?: ElementRef<RefType>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  const localRef = useRef<RefType>();\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n    onStateChange?.({\n      height: 0,\n      isOpen: false,\n    });\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","interface OwnProps {\n  isOwn?: boolean;\n}\n\nfunction MessageAppendix({ isOwn }: OwnProps) {\n  const path = isOwn\n    ? 'M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z'\n    : 'M3 17h6V0c-.193 2.84-.876 5.767-2.05 8.782-.904 2.325-2.446 4.485-4.625 6.48A1 1 0 003 17z';\n  return (\n    <svg width=\"9\" height=\"20\" className=\"svg-appendix\">\n      <defs>\n        <filter x=\"-50%\" y=\"-14.7%\" width=\"200%\" height=\"141.2%\" filterUnits=\"objectBoundingBox\" id=\"messageAppendix\">\n          <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n          <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n          <feColorMatrix\n            values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n            in=\"shadowBlurOuter1\"\n          />\n        </filter>\n      </defs>\n      <g fill=\"none\" fill-rule=\"evenodd\">\n        <path d={path} fill=\"#000\" filter=\"url(#messageAppendix)\" />\n        <path d={path} fill={isOwn ? '#EEFFDE' : 'FFF'} className=\"corner\" />\n      </g>\n    </svg>\n  );\n}\n\nexport default MessageAppendix;\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectIsChatRestricted,\n  selectMonoforumChannel,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  withMonoforumStatus?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  threadInfo?: ApiThreadInfo;\n  topic?: ApiTopic;\n  onlineCount?: number;\n  areMessagesLoaded: boolean;\n  messagesCount?: number;\n  self?: ApiUser;\n  monoforumChannel?: ApiChat;\n};\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat: realChat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  withMonoforumStatus,\n  monoforumChannel,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const chat = !withMonoforumStatus && monoforumChannel ? monoforumChannel : realChat;\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin } = chat || {};\n  const isRestricted = selectIsChatRestricted(getGlobal(), chatId!);\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={oldLang('Updating')} />\n      );\n    }\n\n    if (withMonoforumStatus) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          {lang('MonoforumStatus')}\n        </span>\n      );\n    }\n\n    if (realChat?.isMonoforum) {\n      return undefined;\n    }\n\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && oldLang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{oldLang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(oldLang, chat);\n    const onlineStatus = onlineCount ? `, ${oldLang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && oldLang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            asMessageBubble={Boolean(monoforumChannel)}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              isMonoforum={!withMonoforumStatus && Boolean(monoforumChannel)}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n    const monoforumChannel = selectMonoforumChannel(global, chatId);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n      monoforumChannel,\n    };\n  },\n)(GroupChatInfo));\n","import type React from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ThemeKey } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport SensitiveContentConfirmModal from '../../common/SensitiveContentConfirmModal';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ThemeKey;\n  className?: string;\n  clickArg?: T;\n  isMediaNsfw?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\ntype StateProps = {\n  needsAgeVerification?: boolean;\n};\n\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  isMediaNsfw,\n  observeIntersection,\n  onClick,\n  onCancelUpload,\n  needsAgeVerification,\n}: OwnProps<T> & StateProps) => {\n  const ref = useRef<HTMLDivElement>();\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const prevMediaData = usePrevious(mediaData);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const { ref: fullMediaRef, shouldRender: shouldRenderFullMedia } = useMediaTransition<HTMLImageElement>({\n    hasMediaData: Boolean(fullMediaData),\n    withShouldRender: true,\n  });\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition({ ref: thumbRef, hasMediaData: !noThumb });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const { updateContentSettings, openAgeVerificationModal } = getActions();\n  const [isNsfwModalOpen, openNsfwModal, closeNsfwModal] = useFlag();\n  const [shouldAlwaysShowNsfw, setShouldAlwaysShowNsfw] = useState(false);\n\n  const shouldShowSpoiler = isPaidPreview || photo.isSpoiler || isMediaNsfw;\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(shouldShowSpoiler);\n\n  useEffect(() => {\n    if (shouldShowSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [shouldShowSpoiler]);\n\n  const handleNsfwConfirm = useLastCallback(() => {\n    closeNsfwModal();\n    hideSpoiler();\n\n    if (shouldAlwaysShowNsfw) {\n      updateContentSettings({ isSensitiveEnabled: true });\n    }\n  });\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      if (isMediaNsfw) {\n        if (needsAgeVerification) {\n          openAgeVerificationModal();\n          return;\n        }\n        openNsfwModal();\n        return;\n      }\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRenderFullMedia && (\n        <img\n          ref={fullMediaRef}\n          src={fullMediaData || prevMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <Icon ref={downloadButtonRef} name=\"download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n        isNsfw={isMediaNsfw}\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">\n          {Math.round(transferProgress * 100)}\n          %\n        </span>\n      )}\n      <SensitiveContentConfirmModal\n        isOpen={isNsfwModalOpen}\n        onClose={closeNsfwModal}\n        shouldAlwaysShow={shouldAlwaysShowNsfw}\n        onAlwaysShowChanged={setShouldAlwaysShowNsfw}\n        confirmHandler={handleNsfwConfirm}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const appConfig = global.appConfig;\n  const needsAgeVerification = appConfig.needAgeVideoVerification;\n\n  return {\n    needsAgeVerification,\n  };\n})(Photo));\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","import type { ElementRef, FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Icon from './icons/Icon';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: ElementRef<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  let elementRef = useRef<HTMLDivElement>();\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <Icon\n            name={actionIcon || 'download'}\n            className={buildClassName('action-icon', shouldSpinnerRender && 'hidden')}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  const lastMessageRef = useRef<HTMLDivElement>();\n  const mainColumnRef = useRef<HTMLDivElement>();\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import {\n  useCallback, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getMessageIsSpoiler,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n} from '../../../../global/helpers';\nimport { getMessageSenderName } from '../../../../global/helpers/peers';\nimport buildClassName from '../../../../util/buildClassName';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useMessageMediaHash from '../../../../hooks/media/useMessageMediaHash';\nimport useThumbnail from '../../../../hooks/media/useThumbnail';\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport Icon from '../../../common/icons/Icon';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  lastMessageTopic,\n  lastMessageSender,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const oldLang = useOldLang();\n  const ref = useRef<HTMLDivElement>();\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const thumbDataUri = useThumbnail(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? thumbDataUri : undefined;\n  const mediaHash = useMessageMediaHash(mediaContent, 'micro');\n  const mediaBlobUrl = useMedia(mediaHasPreview ? mediaHash : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n      && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{oldLang('Draft')}</span>\n          <span className=\"last-message-summary\" dir=\"auto\">\n            {renderTextWithEntities({\n              text: draft.text?.text || '',\n              entities: draft.text?.entities,\n              asPreview: true,\n              withTranslucentThumbs: true,\n            })}\n          </span>\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    const senderName = lastMessageSender\n      ? getMessageSenderName(oldLang, chatId, lastMessageSender)\n      : undefined;\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<Icon name=\"share-filled\" className=\"chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<Icon name=\"story-reply\" className=\"chat-prefix-icon\" />)}\n        <span className=\"last-message-summary\" dir=\"auto\">\n          {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </span>\n      </p>\n    );\n  }, [\n    chat, chatId, draft, isRoundVideo, isTopic, oldLang, lastMessage, lastMessageSender, lastMessageTopic,\n    mediaBlobUrl, mediaThumbnail, observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { IS_SAFARI } from './browser/windowEnvironment';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport { isUserId } from '../../util/entities/ids';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n    deleteChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useLastCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  });\n\n  const handleDeleteAndStop = useLastCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  });\n\n  const handleDeleteChat = useLastCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      if (chat.isCreator) {\n        deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n        deleteChat({ chatId: chat.id });\n      } else {\n        deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n        deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      }\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  });\n\n  const handleLeaveChat = useLastCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else if (isBasicGroup && chat.isCreator) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n    } else {\n      handleDeleteChat();\n    }\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ThemeKey;\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ThemeKey, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ThemeKey;\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import useForceUpdate from '../useForceUpdate';\nimport useInterval from './useInterval';\n\nexport default function useIntervalForceUpdate(interval?: number) {\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, interval, true);\n}\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_STANDARD_QUALITY_IMG_SIZE = 1280; // px\nconst MAX_HIGH_QUALITY_IMG_SIZE = 2560;\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n  const shouldSendInHighQuality = options?.shouldSendInHighQuality;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const maxQuickImgSize = shouldSendInHighQuality ? MAX_HIGH_QUALITY_IMG_SIZE : MAX_STANDARD_QUALITY_IMG_SIZE;\n    const shouldShrink = Math.max(width, height) > maxQuickImgSize;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? maxQuickImgSize / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          ...options,\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width, height, duration };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blob,\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","import { fetchBlob } from './files';\n\ntype AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { parseBlob, selectCover } = await import('music-metadata');\n  const blob = await fetchBlob(url);\n  const metadata = await parseBlob(blob);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  isChatGroup,\n} from '../../../../global/helpers';\nimport { getPeerTitle } from '../../../../global/helpers/peers';\nimport { isUserId } from '../../../../util/entities/ids';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getPeerTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { isUserId } from '../../../util/entities/ids';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): StateProps => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","import {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst NO_SHINY_TYPES = new Set<ApiMediaArea['type']>(['channelPost', 'uniqueGift']);\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, openUniqueGiftBySlug, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element.clientWidth);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n      case 'uniqueGift': {\n        openUniqueGiftBySlug({ slug: mediaArea.slug });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url':\n          case 'uniqueGift': {\n            const isShiny = isActive && !NO_SHINY_TYPES.has(mediaArea.type);\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import type { ElementRef } from '@teact';\nimport { useEffect, useLayoutEffect } from '@teact';\nimport { addExtraClass, removeExtraClass, toggleExtraClass } from '@teact/teact-dom.ts';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom.ts';\nimport { throttle } from '../util/schedulers.ts';\n\nconst THROTTLE_DELAY = 100;\n\nconst useScrollNotch = ({\n  containerRef,\n  selector,\n}: {\n  containerRef: ElementRef<HTMLDivElement>;\n  selector: string;\n}, deps: unknown[]) => {\n  useLayoutEffect(() => {\n    const elements = containerRef.current?.querySelectorAll<HTMLElement>(selector);\n    if (!elements?.length) return undefined;\n\n    const handleScroll = throttle((event: Event) => {\n      const target = event.target as HTMLElement;\n      const isScrolled = target.scrollTop > 0;\n\n      requestMutation(() => {\n        toggleExtraClass(target, 'scrolled', isScrolled);\n      });\n    }, THROTTLE_DELAY);\n\n    elements.forEach((el) => {\n      addExtraClass(el, 'with-notch');\n      el.addEventListener('scroll', handleScroll, { passive: true });\n    });\n\n    return () => {\n      elements.forEach((el) => {\n        el.removeEventListener('scroll', handleScroll);\n        removeExtraClass(el, 'with-notch');\n      });\n    };\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [containerRef, selector, ...deps]);\n\n  useEffect(() => {\n    const elements = containerRef.current?.querySelectorAll<HTMLElement>(selector);\n    if (!elements?.length) return undefined;\n\n    elements.forEach((el) => {\n      const isScrolled = el.scrollTop > 0;\n      requestMutation(() => {\n        toggleExtraClass(el, 'scrolled', isScrolled);\n      });\n    });\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [containerRef, selector, ...deps]);\n};\n\nexport default useScrollNotch;\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport cycleRestrict from '../util/cycleRestrict';\nimport { preloadImage } from '../util/files';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\nimport useLastCallback from './useLastCallback';\n\nconst RADIUS_RATIO = 0.1; // Use 10% of the smallest dimension as the blur radius\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  const blurThumb = useLastCallback(async (canvas: HTMLCanvasElement, uri: string) => {\n    const image = await preloadImage(uri);\n    if (!image) {\n      return;\n    }\n\n    requestMutation(() => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      offscreenRef.current = canvas.transferControlToOffscreen();\n\n      const radius = Math.ceil(Math.min(image.width, image.height) * RADIUS_RATIO);\n\n      requestMediaWorker({\n        name: 'offscreen-canvas:blurThumb',\n        args: [offscreenRef.current, uri, radius],\n        transferables: [offscreenRef.current],\n      }, workerIndex);\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    blurThumb(canvas, thumbData);\n  }, [blurThumb, isDisabled, thumbData]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useCallback, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import type { ElementRef } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n  ApiWebPage,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ThemeKey } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { selectWebPageFromMessage } from '../../global/selectors';\nimport { selectMessageMediaDuration } from '../../global/selectors/media';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ThemeKey;\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\ntype StateProps = {\n  mediaDuration?: number;\n  webPage?: ApiWebPage;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  webPage,\n  mediaDuration,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}: OwnProps & StateProps) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getWebPageAudio(webPage);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  const seekerRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    mediaDuration!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isPlaying) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && formatMediaDuration(duration * playProgress, duration)}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <Icon name={isDownloading ? 'close' : 'arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: ElementRef<HTMLDivElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio.size * progress)} / ` : undefined}\n          {getFileSizeString(audio.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: ElementRef<HTMLDivElement>,\n  waveformCanvasRef: ElementRef<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <Icon\n              name={(isTranscribed || isTranscriptionError) ? 'down' : 'transcribe'}\n              className={buildClassName(\n                'transcribe-icon',\n                (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n              )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media.duration) : formatMediaDuration(media.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ThemeKey,\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  const canvasRef = useRef<HTMLCanvasElement>();\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: ElementRef<HTMLDivElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    message,\n  }): StateProps => {\n    const webPage = selectWebPageFromMessage(global, message);\n    const mediaDuration = selectMessageMediaDuration(global, message);\n\n    return {\n      webPage,\n      mediaDuration,\n    };\n  },\n)(Audio));\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import type { ElementRef } from '../lib/teact/teact';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { IS_SAFARI } from '../util/browser/windowEnvironment';\nimport { makeProgressiveLoader } from '../util/progressiveLoader';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: ElementRef<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/browser/windowEnvironment';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n} from '../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { isUserId } from '../../util/entities/ids';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  const videoRef = useRef<HTMLVideoElement>();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPeerPhotos, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { AnimationLevel } from '../../types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectPeerPhotos,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport { selectSharedSettings } from '../../global/selectors/sharedState.ts';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { resolveTransitionName } from '../../util/resolveTransitionName.ts';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n  isForMonoforum?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    animationLevel: AnimationLevel;\n    emojiStatusSticker?: ApiSticker;\n    emojiStatusSlug?: string;\n    profilePhotos?: ApiPeerPhotos;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\nconst STATUS_UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  animationLevel,\n  emojiStatusSticker,\n  emojiStatusSlug,\n  profilePhotos,\n  peerId,\n  isForMonoforum,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n    openUniqueGiftBySlug,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useIntervalForceUpdate(user ? STATUS_UPDATE_INTERVAL : undefined);\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (emojiStatusSlug) {\n      openUniqueGiftBySlug({ slug: emojiStatusSlug });\n      return;\n    }\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={oldLang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? oldLang('Chat.Title.Topic', messagesCount, 'i') : oldLang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (isForMonoforum) {\n      return (\n        <span className={buildClassName(styles.status, 'status')} dir=\"auto\">\n          {lang('MonoforumStatus')}\n        </span>\n      );\n    }\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(oldLang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{oldLang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">\n        {\n          isChatChannel(chat!)\n            ? oldLang('Subscribers', chat!.membersCount ?? 0, 'i')\n            : oldLang('Members', chat!.membersCount ?? 0, 'i')\n        }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo')}\n      dir={oldLang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && profilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {oldLang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && profilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={profilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {oldLang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition\n          activeKey={currentPhotoIndex}\n          name={resolveTransitionName('slide', animationLevel, !hasSlideAnimation, oldLang.isRtl)}\n        >\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={oldLang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={oldLang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={oldLang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={oldLang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={oldLang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n    const { animationLevel } = selectSharedSettings(global);\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n    const emojiStatusSlug = emojiStatus?.type === 'collectible' ? emojiStatus.slug : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      animationLevel,\n      emojiStatusSticker,\n      emojiStatusSlug,\n      profilePhotos,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nconst DEFAULT_VALUE = 0;\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n    ApiChannelStatistics |\n    ApiGroupStatistics |\n    ApiPostStatistics |\n    ApiBoostStatistics |\n    ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative\n          ? `-${formatIntegerCompact(lang, Math.abs(change))}`\n          : `+${formatIntegerCompact(lang, change)}`}\n        {percentage && (\n          <>\n            {' '}\n            (\n            {percentage}\n            %)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}\n          <span className={styles.decimalPart}>\n            .\n            {decimalTonPart}\n          </span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ $\n          {integerUsdPart}\n          <span className={styles.decimalUsdPart}>\n            .\n            {decimalUsdPart}\n          </span>\n        </span>\n        <h3 className={styles.tableHeading}>{oldLang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = statistics as ApiGroupStatistics;\n  const { balances, usdRate } = statistics as ApiChannelMonetizationStatistics;\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(oldLang, period.minDate * 1000)}\n            {' '}\n            —\n            {formatFullDate(oldLang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)?.[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈ ' : ''}${formatInteger(field ?? DEFAULT_VALUE)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                const part = field?.part ?? DEFAULT_VALUE;\n                const percentage = field?.percentage ?? DEFAULT_VALUE;\n\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈ ' : ''}${formatInteger(part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {percentage}\n                      %\n                    </span>\n                    <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(lang, field?.current ?? DEFAULT_VALUE)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{oldLang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { TypeStatisticsGraph } from '../../../../api/types';\n\nexport function isGraph(obj: unknown): obj is TypeStatisticsGraph {\n  // eslint-disable-next-line no-null/no-null\n  return typeof obj === 'object' && obj !== null && 'graphType' in obj;\n}\n","import type React from '../../lib/teact/teact';\nimport { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport buildClassName from '../../util/buildClassName';\nimport { isUserId } from '../../util/entities/ids';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  const ref = useRef<HTMLDivElement>();\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getPeerTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  const ref = useRef<HTMLDivElement>();\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import type {\n  ElementRef } from '../../../../lib/teact/teact';\nimport {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: ElementRef<HTMLDivElement>,\n  sharedCanvasRef: ElementRef<HTMLCanvasElement>,\n  sharedCanvasHqRef: ElementRef<HTMLCanvasElement>,\n  absoluteContainerRef: ElementRef<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, undefined, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: ElementRef<HTMLCanvasElement>;\n  sharedCanvasHqRef: ElementRef<HTMLCanvasElement>;\n  absoluteContainerRef: ElementRef<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent } from 'react';\nimport type { ElementRef, FC, TeactNode } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  getIsHeavyAnimating,\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { SharedSettings } from '../../../global/types';\nimport type {\n  IAnchorPosition, MessageListType, ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce, fastRaf } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: ElementRef<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: TeactNode | string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: SharedSettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n  messageListType,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  let inputRef = useRef<HTMLDivElement>();\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const selectionTimeoutRef = useRef<number>();\n  const cloneRef = useRef<HTMLDivElement>();\n  const scrollerCloneRef = useRef<HTMLDivElement>();\n  const sharedCanvasRef = useRef<HTMLCanvasElement>();\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>();\n  const absoluteContainerRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    // Defer to avoid animation/layout conflicts during DOM updates\n    fastRaf(() => {\n      requestForcedReflow(() => {\n        const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n        const currentHeight = Number(scroller.style.height.replace('px', ''));\n        const clone = scrollerCloneRef.current!;\n        const { scrollHeight } = clone;\n        const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n        if (newHeight === currentHeight) {\n          return undefined;\n        }\n\n        const isOverflown = scrollHeight > maxInputHeight;\n\n        function exec() {\n          const transitionDuration = Math.round(\n            TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n          );\n          scroller.style.height = `${newHeight}px`;\n          scroller.style.transitionDuration = `${transitionDuration}ms`;\n          scroller.classList.toggle('overflown', isOverflown);\n        }\n\n        if (willSend) {\n          // Delay to next frame to sync with sending animation\n          requestMutation(exec);\n          return undefined;\n        } else {\n          return exec;\n        }\n      });\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId, messageListType });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n  const placeholderAriaLabel = typeof placeholder === 'string' ? placeholder : undefined;\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={oldLang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholderAriaLabel}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <Icon name=\"lock-badge\" className=\"placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {oldLang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = selectSharedSettings(global);\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values<number>(orderDiffById);\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useMessageMediaHash from '../../hooks/media/useMessageMediaHash';\nimport useThumbnail from '../../hooks/media/useThumbnail';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = useThumbnail(message);\n  const mediaHash = useMessageMediaHash(message, 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/browser/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: ElementRef<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport useThumbnail from '../../../hooks/media/useThumbnail';\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const playerRef = useRef<HTMLVideoElement>();\n  const circleRef = useRef<SVGCircleElement>();\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n  const isMediaUnread = message.isMediaUnread;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const thumbDataUri = useThumbnail(message);\n  const hasThumb = Boolean(thumbDataUri);\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition({ hasMediaData: !noThumb, ref: thumbRef });\n\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isActivated) {\n      onReadMedia();\n    }\n  }, [isActivated, isMediaUnread, onReadMedia]);\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n    setCurrentTime(Math.floor(playerEl.currentTime));\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            defaultMuted\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <Icon name=\"download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div\n          className={buildClassName(\n            'message-media-duration', isMediaUnread && 'unread',\n          )}\n        >\n          {isActivated ? formatMediaDuration(currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","import type {\n  ElementRef } from '../lib/teact/teact';\nimport {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  const controllerRef = useRef<ReturnType<typeof register>>();\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: ElementRef<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import type { ElementRef, FC } from '../../../lib/teact/teact';\nimport {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  sponsorInfo?: string;\n  canReport?: boolean;\n  triggerRef: ElementRef<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredContextMenu: FC<OwnProps> = ({\n  isOpen,\n  sponsorInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  const menuRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = sponsorInfo || !shouldSkipAbout || canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredContextMenu);\n","import type { ElementRef, FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredContextMenu from './SponsoredContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  randomId: string;\n  sponsorInfo?: string;\n  additionalInfo?: string;\n  canReport?: boolean;\n  anchor: IAnchorPosition;\n  triggerRef: ElementRef<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  randomId,\n  sponsorInfo,\n  additionalInfo,\n  canReport,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsored,\n    hideSponsored,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({\n      randomId,\n      additionalInfo,\n      canReport,\n      sponsorInfo,\n    });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsored();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [sponsorInfo, additionalInfo].filter(Boolean).join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsored({ randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        canReport={canReport}\n        sponsorInfo={sponsorInfo}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { groupStatefulContent } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectSender,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n} from '../../../global/selectors';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport Icon from '../../common/icons/Icon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  lastMessageSender?: ApiPeer;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  isChatMuted,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed, notifySettings,\n  } = topic;\n  const isMuted = Boolean(notifySettings.mutedUntil || (notifySettings.mutedUntil === undefined && isChatMuted));\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    isChatMuted,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {Boolean(notifySettings.mutedUntil) && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <Icon name=\"lock-badge\" className={styles.closedIcon} />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { isOutgoing } = lastMessage || {};\n    const lastMessageSender = lastMessage && selectSender(global, lastMessage);\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    const isChatMuted = chat && getIsChatMuted(\n      chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id),\n    );\n\n    return {\n      chat,\n      lastMessage,\n      lastMessageSender,\n      typingStatus,\n      isChatMuted,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/browser/windowEnvironment';\nimport { compact } from '../../../../util/iteratees';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  isChatMuted,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, notifySettings, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((isChatMuted && notifySettings.mutedUntil === undefined) || notifySettings.mutedUntil)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, isChatMuted, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const containerRef = useRef<HTMLDivElement>();\n  const scrollTopHandlerRef = useRef<HTMLDivElement>();\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: (e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      },\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import type { ElementRef } from '../../lib/teact/teact';\nimport { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { ElectronEvent } from '../../types/electron';\n\nimport { IS_IOS } from '../../util/browser/windowEnvironment';\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen<T extends HTMLElement>(elRef: ElementRef<T>, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: HTMLElement) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","import type { ApiPaidMedia } from '../../../../api/types';\n\nexport default function getSingularPaidMedia(media?: ApiPaidMedia) {\n  if (!media || media.extendedMedia.length !== 1) {\n    return {\n      photo: undefined,\n      video: undefined,\n    };\n  }\n\n  const singularMedia = media.extendedMedia[0];\n  const isPreview = 'mediaType' in singularMedia;\n  const photo = isPreview ? (!singularMedia.duration ? singularMedia : undefined) : singularMedia.photo;\n  const video = isPreview ? (singularMedia.duration ? singularMedia : undefined) : singularMedia.video;\n\n  return { photo, video };\n}\n","// Based on\n// https://github.com/telegramdesktop/tdesktop/blob/dev/Telegram/SourceFiles/ui/grouped_layout.cpp\n// https://github.com/overtake/TelegramSwift/blob/master/Telegram-Mac/GroupedLayout.swift#L83\n\nimport type { ApiDimensions, ApiMessage } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { getMessageContent } from '../../../../global/helpers';\nimport { clamp } from '../../../../util/math';\nimport { getAvailableWidth } from '../../../common/helpers/mediaDimensions';\nimport { calculateMediaDimensions } from './mediaDimensions';\n\nexport const AlbumRectPart = {\n  None: 0,\n  Top: 1,\n  Right: 2,\n  Bottom: 4,\n  Left: 8,\n};\n\ntype IAttempt = {\n  lineCounts: number[];\n  heights: number[];\n};\nexport type IMediaDimensions = {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n};\ntype IMediaLayout = {\n  dimensions: IMediaDimensions;\n  sides: number;\n};\ntype ILayoutParams = {\n  ratios: number[];\n  proportions: string;\n  averageRatio: number;\n  maxWidth: number;\n  minWidth: number;\n  maxHeight: number;\n  spacing: number;\n};\nexport type IAlbumLayout = {\n  layout: IMediaLayout[];\n  containerStyle: ApiDimensions;\n};\n\nfunction getRatios(messages: ApiMessage[], isSingleMessage?: boolean, isMobile?: boolean) {\n  const isOutgoing = messages[0].isOutgoing;\n  const allMedia = (isSingleMessage\n    ? messages[0].content.paidMedia!.extendedMedia.map((media) => (\n      'mediaType' in media ? media : (media.photo || media.video)\n    ))\n    : messages.map((message) => (\n      getMessageContent(message).photo || getMessageContent(message).video\n    ))\n  ).filter(Boolean);\n  return allMedia.map(\n    (media) => {\n      const dimensions = calculateMediaDimensions({\n        media,\n        isOwn: isOutgoing,\n        isMobile,\n      }) as ApiDimensions;\n\n      return dimensions.width / dimensions.height;\n    },\n  );\n}\n\nfunction getProportions(ratios: number[]) {\n  return ratios.map((ratio) => (ratio > 1.2 ? 'w' : (ratio < 0.8 ? 'n' : 'q'))).join('');\n}\n\nfunction getAverageRatio(ratios: number[]) {\n  return ratios.reduce((result, ratio) => ratio + result, 1) / ratios.length;\n}\n\nfunction accumulate(list: number[], initValue: number) {\n  return list.reduce((accumulator, item) => accumulator + item, initValue);\n}\n\nfunction cropRatios(ratios: number[], averageRatio: number) {\n  return ratios.map((ratio) => {\n    return (averageRatio > 1.1 ? clamp(ratio, 1, 2.75) : clamp(ratio, 0.6667, 1));\n  });\n}\n\nfunction calculateContainerSize(layout: IMediaLayout[]) {\n  const styles: ApiDimensions = { width: 0, height: 0 };\n  layout.forEach(({\n    dimensions,\n    sides,\n  }) => {\n    if (sides & AlbumRectPart.Right) {\n      styles.width = dimensions.width + dimensions.x;\n    }\n    if (sides & AlbumRectPart.Bottom) {\n      styles.height = dimensions.height + dimensions.y;\n    }\n  });\n\n  return styles;\n}\n\nexport function calculateAlbumLayout(\n  isOwn: boolean,\n  noAvatars: boolean,\n  album: IAlbum,\n  isMobile?: boolean,\n): IAlbumLayout {\n  const spacing = 2;\n  const ratios = getRatios(album.messages, album.isPaidMedia, isMobile);\n  const proportions = getProportions(ratios);\n  const averageRatio = getAverageRatio(ratios);\n  const albumCount = ratios.length;\n  const forceCalc = ratios.some((ratio) => ratio > 2);\n  const maxWidth = getAvailableWidth(isOwn, false, noAvatars, isMobile);\n  const maxHeight = maxWidth;\n\n  let layout;\n\n  const params = {\n    ratios,\n    proportions,\n    averageRatio,\n    maxWidth,\n    minWidth: 100,\n    maxHeight,\n    spacing,\n  };\n\n  if (albumCount >= 5 || forceCalc) {\n    layout = layoutWithComplexLayouter(params);\n  } else if (albumCount === 2) {\n    layout = layoutTwo(params);\n  } else if (albumCount === 3) {\n    layout = layoutThree(params);\n  } else {\n    layout = layoutFour(params);\n  }\n\n  return {\n    layout,\n    containerStyle: calculateContainerSize(layout),\n  };\n}\n\nfunction layoutWithComplexLayouter({\n  ratios: originalRatios,\n  averageRatio,\n  maxWidth,\n  minWidth,\n  spacing,\n  maxHeight = (4 * maxWidth) / 3,\n}: ILayoutParams) {\n  const ratios = cropRatios(originalRatios, averageRatio);\n  const count = originalRatios.length;\n  const result = new Array(count);\n  const attempts: IAttempt[] = [];\n\n  const multiHeight = (offset: number, attemptCount: number) => {\n    const attemptRatios = ratios.slice(offset, offset + attemptCount);\n    const sum = accumulate(attemptRatios, 0);\n\n    return (maxWidth - (attemptCount - 1) * spacing) / sum;\n  };\n\n  const pushAttempt = (lineCounts: number[]) => {\n    const heights: number[] = [];\n    let offset = 0;\n    lineCounts.forEach((currentCount) => {\n      heights.push(multiHeight(offset, currentCount));\n      offset += currentCount;\n    });\n\n    attempts.push({\n      lineCounts,\n      heights,\n    });\n  };\n\n  for (let first = 1; first !== count; ++first) {\n    const second = count - first;\n    if (first <= 3 && second <= 3) {\n      pushAttempt([first, second]);\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      const third = count - first - second;\n      if (first <= 3 && second <= (averageRatio < 0.85 ? 4 : 3) && third <= 3) {\n        pushAttempt([first, second, third]);\n      }\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      for (let third = 1; third !== count - first - second; ++third) {\n        const fourth = count - first - second - third;\n        if (first <= 3 && second <= 3 && third <= 3 && fourth <= 4) {\n          pushAttempt([first, second, third, fourth]);\n        }\n      }\n    }\n  }\n\n  let optimalAttempt: IAttempt | undefined;\n  let optimalDiff = 0;\n  for (let i = 0; i < attempts.length; i++) {\n    const {\n      heights,\n      lineCounts,\n    } = attempts[i];\n    const lineCount = lineCounts.length;\n    const totalHeight = accumulate(heights, 0) + spacing * (lineCount - 1);\n    const minLineHeight = Math.min(...heights);\n    const bad1 = minLineHeight < minWidth ? 1.5 : 1;\n    const bad2 = (() => {\n      for (let line = 1; line !== lineCount; ++line) {\n        if (lineCounts[line - 1] > lineCounts[line]) {\n          return 1.5;\n        }\n      }\n\n      return 1;\n    })();\n    const diff = Math.abs(totalHeight - maxHeight) * bad1 * bad2;\n\n    if (!optimalAttempt || diff < optimalDiff) {\n      optimalAttempt = attempts[i];\n      optimalDiff = diff;\n    }\n  }\n\n  const optimalCounts = optimalAttempt!.lineCounts;\n  const optimalHeights = optimalAttempt!.heights;\n  const rowCount = optimalCounts.length;\n  let index = 0;\n  let y = 0;\n  for (let row = 0; row !== rowCount; ++row) {\n    const colCount = optimalCounts[row];\n    const lineHeight = optimalHeights[row];\n    const height = Math.round(lineHeight);\n    let x = 0;\n\n    for (let col = 0; col !== colCount; ++col) {\n      const sides = AlbumRectPart.None\n        | (row === 0 ? AlbumRectPart.Top : AlbumRectPart.None)\n        | (row === rowCount - 1 ? AlbumRectPart.Bottom : AlbumRectPart.None)\n        | (col === 0 ? AlbumRectPart.Left : AlbumRectPart.None)\n        | (col === colCount - 1 ? AlbumRectPart.Right : AlbumRectPart.None);\n      const ratio = ratios[index];\n      const width = col === colCount - 1 ? maxWidth - x : Math.round(ratio * lineHeight);\n      result[index] = {\n        dimensions: {\n          x,\n          y,\n          width,\n          height,\n        },\n        sides,\n      };\n      x += width + spacing;\n      ++index;\n    }\n    y += height + spacing;\n  }\n\n  return result;\n}\n\nfunction layoutTwo(params: ILayoutParams) {\n  const {\n    ratios,\n    proportions,\n    averageRatio,\n  } = params;\n  return proportions === 'ww' && averageRatio > 1.4 && ratios[1] - ratios[0] < 0.2\n    ? layoutTwoTopBottom(params)\n    : proportions === 'ww' || proportions === 'qq'\n      ? layoutTwoLeftRightEqual(params)\n      : layoutTwoLeftRight(params);\n}\n\nfunction layoutTwoTopBottom(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const height = Math.round(Math.min(maxWidth / ratios[0], Math.min(maxWidth / ratios[1], (maxHeight - spacing) / 2)));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: height + spacing,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutTwoLeftRightEqual(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const width = (maxWidth - spacing) / 2;\n  const height = Math.round(Math.min(width / ratios[0], Math.min(width / ratios[1], maxHeight)));\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: width + spacing,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutTwoLeftRight(params: ILayoutParams) {\n  const {\n    ratios,\n    minWidth,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const minimalWidth = Math.round(1.5 * minWidth);\n  const secondWidth = Math.min(\n    Math.round(\n      Math.max(\n        0.4 * (maxWidth - spacing),\n        (maxWidth - spacing) / ratios[0] / (1 / ratios[0] + 1 / ratios[1]),\n      ),\n    ),\n    maxWidth - spacing - minimalWidth,\n  );\n  const firstWidth = maxWidth - secondWidth - spacing;\n  const height = Math.min(maxHeight, Math.round(Math.min(firstWidth / ratios[0], secondWidth / ratios[1])));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: firstWidth + spacing,\n      y: 0,\n      width: secondWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutThree(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'n'\n    ? layoutThreeLeftAndOther(params)\n    : layoutThreeTopAndOther(params);\n}\n\nfunction layoutThreeLeftAndOther(params: ILayoutParams) {\n  const {\n    maxHeight,\n    spacing,\n    ratios,\n    maxWidth,\n    minWidth,\n  } = params;\n  const firstHeight = maxHeight;\n  const thirdHeight = Math.round(\n    Math.min(\n      (maxHeight - spacing) / 2,\n      (ratios[1] * (maxWidth - spacing)) / (ratios[2] + ratios[1]),\n    ),\n  );\n  const secondHeight = firstHeight - thirdHeight - spacing;\n  const rightWidth = Math.max(\n    minWidth,\n    Math.round(\n      Math.min(\n        (maxWidth - spacing) / 2,\n        Math.min(\n          thirdHeight * ratios[2],\n          secondHeight * ratios[1],\n        ),\n      ),\n    ),\n  );\n  const leftWidth = Math.min(Math.round(firstHeight * ratios[0]), maxWidth - spacing - rightWidth);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: leftWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: 0,\n      width: rightWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: secondHeight + spacing,\n      width: rightWidth,\n      height: thirdHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutThreeTopAndOther(params: ILayoutParams) {\n  const {\n    maxWidth,\n    ratios,\n    maxHeight,\n    spacing,\n  } = params;\n  const firstWidth = maxWidth;\n  const firstHeight = Math.round(Math.min(firstWidth / ratios[0], 0.66 * (maxHeight - spacing)));\n  const secondWidth = (maxWidth - spacing) / 2;\n  const secondHeight = Math.min(\n    maxHeight - firstHeight - spacing,\n    Math.round(Math.min(\n      secondWidth / ratios[1],\n      secondWidth / ratios[2],\n    )),\n  );\n  const thirdWidth = firstWidth - secondWidth - spacing;\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: firstHeight + spacing,\n      width: secondWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: secondWidth + spacing,\n      y: firstHeight + spacing,\n      width: thirdWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutFour(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'w'\n    ? layoutFourTopAndOther(params)\n    : layoutFourLeftAndOther(params);\n}\n\nfunction layoutFourTopAndOther({\n  maxWidth,\n  ratios,\n  spacing,\n  maxHeight,\n  minWidth,\n}: ILayoutParams) {\n  const w = maxWidth;\n  const h0 = Math.round(Math.min(w / ratios[0], 0.66 * (maxHeight - spacing)));\n  const h = Math.round((maxWidth - 2 * spacing) / (ratios[1] + ratios[2] + ratios[3]));\n  const w0 = Math.max(minWidth, Math.round(Math.min(0.4 * (maxWidth - 2 * spacing), h * ratios[1])));\n  const w2 = Math.round(Math.max(Math.max(minWidth, 0.33 * (maxWidth - 2 * spacing)), h * ratios[3]));\n  const w1 = w - w0 - w2 - 2 * spacing;\n  const h1 = Math.min(maxHeight - h0 - spacing, h);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w,\n      height: h0,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: h0 + spacing,\n      width: w0,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing + w1 + spacing,\n      y: h0 + spacing,\n      width: w2,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutFourLeftAndOther({\n  maxHeight,\n  ratios,\n  maxWidth,\n  spacing,\n  minWidth,\n}: ILayoutParams) {\n  const h = maxHeight;\n  const w0 = Math.round(Math.min(h * ratios[0], 0.6 * (maxWidth - spacing)));\n  const w = Math.round((maxHeight - 2 * spacing) / (1 / ratios[1] + 1 / ratios[2] + 1 / ratios[3]));\n  const h0 = Math.round(w / ratios[1]);\n  const h1 = Math.round(w / ratios[2]);\n  const h2 = h - h0 - h1 - 2 * spacing;\n  const w1 = Math.max(minWidth, Math.min(maxWidth - w0 - spacing, w));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w0,\n      height: h,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: 0,\n      width: w1,\n      height: h0,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + h1 + 2 * spacing,\n      width: w1,\n      height: h2,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n","import type { FastTextApi } from '../lib/fasttextweb/fasttext.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TRANSLATION_SUPPORTED } from './browser/windowEnvironment';\n\nimport Deferred from './Deferred';\nimport { createConnector } from './PostMessageConnector';\n\nconst WORKER_INIT_DELAY = 4000;\n\nconst DEFAULT_THRESHOLD = 0.2;\nconst DEFAULT_LABELS_COUNT = 5;\n\nlet worker: Connector<FastTextApi> | undefined;\nconst initializationDeferred = new Deferred();\n\nif (IS_TRANSLATION_SUPPORTED) {\n  setTimeout(initWorker, WORKER_INIT_DELAY);\n}\n\nfunction initWorker() {\n  if (!worker) {\n    worker = createConnector<FastTextApi>(\n      new Worker(new URL('../lib/fasttextweb/fasttext.worker.ts', import.meta.url)),\n    );\n    initializationDeferred.resolve();\n  }\n}\n\nexport async function detectLanguage(text: string, threshold = DEFAULT_THRESHOLD) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguage', args: [text, threshold] });\n  return result;\n}\n\nexport async function detectLanguageProbability(\n  text: string, labelsCount = DEFAULT_LABELS_COUNT, threshold = DEFAULT_THRESHOLD,\n) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguageProbability', args: [text, labelsCount, threshold] });\n  return result;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport LimitedMap from '../../../../util/primitives/LimitedMap';\nimport { throttle } from '../../../../util/schedulers';\n\n// https://github.com/DrKLO/Telegram/blob/dfd74f809e97d1ecad9672fc7388cb0223a95dfc/TMessagesProj/src/main/java/org/telegram/messenger/TranslateController.java#L35\nconst MIN_MESSAGES_CHECKED = 8;\nconst MIN_TRANSLATABLE_RATIO = 0.3;\nconst MIN_DETECTABLE_RATIO = 0.6;\n\nconst THROTTLE_DELAY = 1000;\nconst MESSAGES_LIMIT = 150;\n\ntype MessageMetadata = {\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage: string | undefined;\n};\n\nconst CHAT_STATS = new Map<string, LimitedMap<number, MessageMetadata>>();\n\nexport default function useDetectChatLanguage(\n  message: ApiMessage, detectedLanguage?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>,\n) {\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    const isTranslatable = Boolean(message.content.text?.text.length);\n    processMessageMetadata({\n      chatId: message.chatId,\n      id: message.id,\n      isTranslatable,\n      detectedLanguage,\n    });\n  }, [message, detectedLanguage, isDisabled, getIsReady]);\n}\n\nconst throttledMakeChatDecision = throttle(makeChatDecision, THROTTLE_DELAY);\n\nfunction processMessageMetadata({\n  chatId, id, isTranslatable, detectedLanguage,\n}: {\n  chatId: string;\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage?: string;\n}) {\n  const chatStats = CHAT_STATS.get(chatId) || new LimitedMap<number, MessageMetadata>(MESSAGES_LIMIT);\n\n  const previousMetadata = chatStats.get(id);\n  if (previousMetadata && previousMetadata.detectedLanguage === detectedLanguage\n    && previousMetadata.isTranslatable === isTranslatable\n  ) {\n    return;\n  }\n\n  chatStats.set(id, {\n    id,\n    isTranslatable,\n    detectedLanguage,\n  });\n\n  CHAT_STATS.set(chatId, chatStats);\n\n  throttledMakeChatDecision(chatId);\n}\n\nfunction makeChatDecision(chatId: string) {\n  const { updateChatDetectedLanguage } = getActions();\n  const chatStats = CHAT_STATS.get(chatId);\n  if (!chatStats) {\n    return;\n  }\n\n  const messagesChecked = chatStats.size;\n  if (messagesChecked < MIN_MESSAGES_CHECKED) {\n    return;\n  }\n\n  let translatableCount = 0;\n  let detectableCount = 0;\n  const languageOccurrences = new Map<string, number>();\n\n  for (const metadata of chatStats.values()) {\n    if (metadata.isTranslatable) {\n      translatableCount++;\n    }\n\n    if (metadata.detectedLanguage) {\n      detectableCount++;\n    }\n\n    const language = metadata.detectedLanguage;\n    if (language) {\n      const occurrences = languageOccurrences.get(language) || 0;\n      languageOccurrences.set(language, occurrences + 1);\n    }\n  }\n\n  const translatableRatio = translatableCount / messagesChecked;\n  const detectableRatio = detectableCount / translatableCount;\n\n  if (translatableRatio < MIN_TRANSLATABLE_RATIO || detectableRatio < MIN_DETECTABLE_RATIO) {\n    return;\n  }\n\n  const mostFrequentLanguage = Array.from(languageOccurrences.entries())\n    .sort(([, a], [, b]) => b - a)[0][0];\n\n  updateChatDetectedLanguage({\n    chatId,\n    detectedLanguage: mostFrequentLanguage,\n  });\n}\n","import type React from '../../../../lib/teact/teact';\nimport type { ElementRef } from '../../../../lib/teact/teact';\nimport { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { IS_ANDROID, IS_TOUCH_ENV } from '../../../../util/browser/windowEnvironment';\nimport { captureEvents, SwipeDirection } from '../../../../util/captureEvents';\nimport stopEvent from '../../../../util/stopEvent';\nimport windowSize from '../../../../util/windowSize';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { preventMessageInputBlur } from '../../helpers/preventMessageInputBlur';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\n\nconst ANDROID_KEYBOARD_HIDE_DELAY_MS = 350;\nconst SWIPE_ANIMATION_DURATION = 150;\nconst QUICK_REACTION_DOUBLE_TAP_DELAY = 200;\nconst QUICK_REACTION_AREA_WIDTH = 3 * REM;\nconst QUICK_REACTION_AREA_HEIGHT = Number(REM);\nconst GROUP_MESSAGE_HOVER_ATTRIBUTE = 'data-is-document-group-hover';\n\nexport default function useOuterHandlers(\n  selectMessage: (e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void,\n  containerRef: ElementRef<HTMLDivElement>,\n  messageId: number,\n  isInSelectMode: boolean,\n  canReply: boolean,\n  isProtected: boolean,\n  onContextMenu: (e: React.MouseEvent) => void,\n  handleBeforeContextMenu: (e: React.MouseEvent) => void,\n  chatId: string,\n  isContextMenuShown: boolean,\n  quickReactionRef: ElementRef<HTMLDivElement>,\n  shouldHandleMouseLeave: boolean,\n  getIsMessageListReady?: Signal<boolean>,\n) {\n  const { updateDraftReplyInfo, sendDefaultReaction } = getActions();\n\n  const [isQuickReactionVisible, markQuickReactionVisible, unmarkQuickReactionVisible] = useFlag();\n  const [isSwiped, markSwiped, unmarkSwiped] = useFlag();\n  const doubleTapTimeoutRef = useRef<NodeJS.Timeout>();\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  }\n\n  const handleMouseMove = useThrottledCallback((e: React.MouseEvent) => {\n    const quickReactionContainer = quickReactionRef.current;\n    if (!quickReactionContainer) return;\n\n    const { clientX, clientY } = e;\n    const {\n      x: quickReactionX, width: quickReactionWidth, y: quickReactionY, height: quickReactionHeight,\n    } = quickReactionContainer.getBoundingClientRect();\n    const x = quickReactionX + quickReactionWidth / 2;\n    const y = quickReactionY + quickReactionHeight / 2;\n\n    const isVisibleX = Math.abs(x - clientX) < QUICK_REACTION_AREA_WIDTH;\n    const isVisibleY = Math.abs(y - clientY) < QUICK_REACTION_AREA_HEIGHT;\n    if (isVisibleX && isVisibleY) {\n      markQuickReactionVisible();\n    } else {\n      unmarkQuickReactionVisible();\n    }\n  }, [quickReactionRef], requestMeasure);\n\n  function handleSendQuickReaction(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleTap(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      const target = e.target as HTMLDivElement;\n      if (!target.classList.contains('text-content') && !target.classList.contains('Message')) {\n        return;\n      }\n\n      if (windowSize.getIsKeyboardVisible()) {\n        setTimeout(() => {\n          onContextMenu(e);\n        }, ANDROID_KEYBOARD_HIDE_DELAY_MS);\n      } else {\n        onContextMenu(e);\n      }\n    }\n  }\n\n  function handleDoubleTap() {\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleClick(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (isInSelectMode) {\n      selectMessage(e);\n      return;\n    }\n\n    if (!IS_TOUCH_ENV) return;\n\n    if (doubleTapTimeoutRef.current) {\n      clearInterval(doubleTapTimeoutRef.current);\n      doubleTapTimeoutRef.current = undefined;\n      handleDoubleTap();\n      return;\n    }\n\n    doubleTapTimeoutRef.current = setTimeout(() => {\n      doubleTapTimeoutRef.current = undefined;\n      handleTap(e);\n    }, QUICK_REACTION_DOUBLE_TAP_DELAY);\n  }\n\n  function handleContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      if ((e.target as HTMLElement).matches('a[href]') || isContextMenuShown) {\n        return;\n      }\n\n      e.preventDefault();\n      selectMessage();\n    } else {\n      onContextMenu(e);\n    }\n  }\n\n  function handleContainerDoubleClick() {\n    if (IS_TOUCH_ENV || !canReply) return;\n\n    updateDraftReplyInfo({\n      replyToMsgId: messageId, replyToPeerId: undefined, quoteText: undefined, quoteOffset: undefined,\n    });\n  }\n\n  function stopPropagation(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n  }\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV || isInSelectMode || !canReply || isContextMenuShown || !getIsMessageListReady?.()) {\n      return undefined;\n    }\n\n    let startedAt: number | undefined;\n    return captureEvents(containerRef.current!, {\n      selectorToPreventScroll: '.MessageList',\n      excludedClosestSelector: '.no-word-wrap',\n      onSwipe: (e, direction) => {\n        if (direction === SwipeDirection.Left) {\n          if (!startedAt) {\n            startedAt = Date.now();\n          }\n\n          markSwiped();\n\n          return true;\n        }\n\n        return false;\n      },\n      onRelease: () => {\n        if (!startedAt || !canReply) {\n          return;\n        }\n\n        updateDraftReplyInfo({ replyToMsgId: messageId });\n\n        setTimeout(unmarkSwiped, Math.max(0, SWIPE_ANIMATION_DURATION - (Date.now() - startedAt)));\n        startedAt = undefined;\n      },\n    });\n  }, [\n    containerRef, isInSelectMode, messageId, markSwiped, unmarkSwiped, canReply, isContextMenuShown,\n    getIsMessageListReady,\n  ]);\n\n  function handleMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n    // Because `mousemove` event is throttled, we need to also throttle `mouseleave` event,\n    // so the order of events is preserved\n    requestMeasure(unmarkQuickReactionVisible);\n    if (shouldHandleMouseLeave) handleDocumentGroupMouseLeave(e);\n  }\n\n  return {\n    handleMouseDown: !isInSelectMode ? handleMouseDown : undefined,\n    handleClick,\n    handleContextMenu: !isInSelectMode ? handleContextMenu : (isProtected ? stopEvent : undefined),\n    handleDoubleClick: !isInSelectMode ? handleContainerDoubleClick : undefined,\n    handleContentDoubleClick: !IS_TOUCH_ENV ? stopPropagation : undefined,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  };\n}\n\nfunction handleDocumentGroupMouseEnter(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.setAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE, '');\n  }\n}\n\nfunction handleDocumentGroupMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.removeAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE);\n  }\n}\n\nfunction getLastElementInDocumentGroup(element: Element) {\n  let current: Element | null = element;\n\n  do {\n    current = current.nextElementSibling;\n  } while (current && !current.classList.contains('last-in-document-group'));\n\n  return current;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport {\n  getStoryMediaHash,\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  story?: ApiTypeStory;\n  sender?: ApiPeer;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\n\nconst EmbeddedStory: FC<OwnProps> = ({\n  story,\n  sender,\n  noUserColors,\n  isProtected,\n  observeIntersectionForLoading,\n  onClick,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const ref = useRef<HTMLDivElement>();\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isFullStory = story && 'content' in story;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const isVideoStory = isFullStory && Boolean(story.content.video);\n  const title = isFullStory ? 'Story' : (isExpiredStory ? 'ExpiredStory' : 'Loading');\n\n  const mediaBlobUrl = useMedia(isFullStory && getStoryMediaHash(story, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = isVideoStory ? story.content.video!.thumbnail?.dataUri : undefined;\n  const pictogramUrl = mediaBlobUrl || mediaThumbnail;\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : undefined;\n  const handleFastClick = useLastCallback(() => {\n    if (story && !isExpiredStory) {\n      onClick();\n    } else {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(handleFastClick);\n\n  return (\n    <PeerColorWrapper\n      ref={ref}\n      peerColor={sender?.color}\n      noUserColors={noUserColors}\n      shouldReset\n      className={buildClassName(\n        'EmbeddedMessage',\n        pictogramUrl && 'with-thumb',\n      )}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {pictogramUrl && renderPictogram(pictogramUrl, isProtected)}\n      <div className=\"message-text with-message-color\">\n        <p className=\"embedded-text-wrapper\">\n          {isExpiredStory && (\n            <Icon name=\"story-expired\" className=\"embedded-origin-icon\" />\n          )}\n          {isFullStory && (\n            <Icon name=\"story-reply\" className=\"embedded-origin-icon\" />\n          )}\n          {lang(title)}\n        </p>\n        <div className=\"message-title\">{renderText(senderTitle || NBSP)}</div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  srcUrl: string,\n  isProtected?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  return (\n    <div className=\"embedded-thumb\">\n      <img\n        src={srcUrl}\n        width={width}\n        height={height}\n        alt=\"\"\n        className=\"pictogram\"\n        draggable={false}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedStory;\n","import type { FC } from '../../lib/teact/teact';\nimport { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getTopicColorCssVariable } from '../../util/forumColors';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\n\nimport styles from './TopicChip.module.scss';\n\nimport blankSrc from '../../assets/blank.png';\n\ntype OwnProps = {\n  topic?: ApiTopic;\n  className?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst TOPIC_ICON_SIZE = 1.125 * REM;\n\nconst TopicChip: FC<OwnProps> = ({\n  topic,\n  className,\n  onClick,\n}) => {\n  const lang = useOldLang();\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={`--topic-button-accent-color: var(${getTopicColorCssVariable(topic?.iconColor)})`}\n      onClick={onClick}\n    >\n      {topic\n        ? <TopicIcon topic={topic} size={TOPIC_ICON_SIZE} />\n        : <img src={blankSrc} alt=\"\" draggable={false} />}\n      {topic?.title ? renderText(topic.title) : lang('Loading')}\n      {topic?.isClosed && <Icon name=\"lock\" />}\n      <Icon name=\"next\" />\n    </div>\n  );\n};\n\nexport default memo(TopicChip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"JldIqqof\"};","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { OwnProps as PhotoProps } from '../Photo';\nimport type { OwnProps as VideoProps } from '../Video';\n\nimport {\n  selectIsInSelectMode,\n  selectIsMessageSelected,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Icon from '../../../common/icons/Icon';\n\ntype OwnProps<T> =\n  (PhotoProps<T> | VideoProps<T>) & {\n    clickArg: number;\n    noSelectControls?: boolean;\n  };\n\ntype StateProps = {\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n};\n\nexport default function withSelectControl(WrappedComponent: FC) {\n  const ComponentWithSelectControl = <T,>(props: OwnProps<T> & StateProps) => {\n    const {\n      isInSelectMode,\n      isSelected,\n      dimensions,\n      clickArg,\n    } = props;\n    const { toggleMessageSelection } = getActions();\n\n    const handleMessageSelect = useLastCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n      e.stopPropagation();\n      toggleMessageSelection({ messageId: clickArg, withShift: e?.shiftKey });\n    });\n\n    const newProps = useMemo(() => {\n      const { dimensions: dims, onClick } = props;\n      return {\n        ...props,\n        isInSelectMode,\n        isSelected,\n        dimensions: {\n          ...dims,\n          x: 0,\n          y: 0,\n        },\n        onClick: isInSelectMode ? undefined : onClick,\n      };\n    }, [props, isInSelectMode, isSelected]);\n\n    return (\n      <div\n        className={buildClassName('album-item-select-wrapper', isSelected && 'is-selected')}\n        style={dimensions ? `left: ${dimensions.x}px; top: ${dimensions.y}px;` : ''}\n        onClick={isInSelectMode ? handleMessageSelect : undefined}\n      >\n        {isInSelectMode && (\n          <div className=\"message-select-control\">\n            {isSelected && (\n              <Icon name=\"select\" />\n            )}\n          </div>\n        )}\n        {}\n        <WrappedComponent {...newProps} />\n      </div>\n    );\n  };\n\n  return memo(withGlobal<OwnProps<unknown>>(\n    (global, ownProps) => {\n      const { clickArg, noSelectControls } = ownProps;\n      return {\n        isInSelectMode: !noSelectControls && selectIsInSelectMode(global),\n        isSelected: !noSelectControls && selectIsMessageSelected(global, clickArg),\n      };\n    },\n  )(ComponentWithSelectControl)) as typeof ComponentWithSelectControl;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IAlbum, ThemeKey } from '../../../types';\nimport type { IAlbumLayout } from './helpers/calculateAlbumLayout';\n\nimport {\n  getIsDownloading, getMessageContent, getMessageHtmlId, getMessagePhoto,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectTheme,\n} from '../../../global/selectors';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { AlbumRectPart } from './helpers/calculateAlbumLayout';\nimport withSelectControl from './hocs/withSelectControl';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './Album.scss';\n\nconst PhotoWithSelect = withSelectControl(Photo);\nconst VideoWithSelect = withSelectControl(Video);\n\ntype OwnProps = {\n  album: IAlbum;\n  observeIntersection: ObserveFn;\n  hasCustomAppendix?: boolean;\n  isOwn: boolean;\n  isProtected?: boolean;\n  albumLayout: IAlbumLayout;\n  onMediaClick: (messageId: number, index?: number) => void;\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n  uploadsByKey: GlobalState['fileUploads']['byMessageKey'];\n  activeDownloads: TabState['activeDownloads'];\n};\n\nconst Album: FC<OwnProps & StateProps> = ({\n  album,\n  observeIntersection,\n  hasCustomAppendix,\n  isOwn,\n  isProtected,\n  albumLayout,\n  onMediaClick,\n  uploadsByKey,\n  activeDownloads,\n  theme,\n}) => {\n  const { cancelUploadMedia } = getActions();\n\n  const { content: { paidMedia } } = album.mainMessage;\n\n  const mediaCount = album.isPaidMedia ? paidMedia!.extendedMedia.length : album.messages.length;\n\n  const handlePaidMediaClick = useLastCallback((index: number) => {\n    onMediaClick(album.mainMessage.id, index);\n  });\n\n  const handleAlbumMessageClick = useLastCallback((messageId: number) => {\n    onMediaClick(messageId);\n  });\n\n  const handleCancelUpload = useLastCallback((messageId: number) => {\n    cancelUploadMedia({ chatId: album.mainMessage.chatId, messageId });\n  });\n\n  const messages = useMemo(() => {\n    if (album.isPaidMedia) {\n      return album.mainMessage.content.paidMedia!.extendedMedia.map(() => album.mainMessage);\n    }\n\n    return album.messages;\n  }, [album]);\n\n  function renderAlbumMessage(message: ApiMessage, index: number) {\n    const renderingPaidMedia = album.isPaidMedia ? message.content.paidMedia?.extendedMedia[index] : undefined;\n    const paidPhotoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.photo;\n    const paidVideoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.video;\n    const photo = paidPhotoOrPreview || getMessagePhoto(message);\n    const video = paidVideoOrPreview || getMessageContent(message).video;\n\n    const fileUpload = uploadsByKey[getMessageKey(message)];\n    const uploadProgress = fileUpload?.progress;\n    const { dimensions, sides } = albumLayout.layout[index];\n\n    // Ignoring global updates is a known drawback here\n    const canAutoLoad = selectCanAutoLoadMedia(getGlobal(), message);\n    const canAutoPlay = selectCanAutoPlayMedia(getGlobal(), message);\n\n    if (photo) {\n      const shouldAffectAppendix = hasCustomAppendix && (\n\n        (isOwn ? index === mediaCount - 1 : Boolean(sides & AlbumRectPart.Left && sides & AlbumRectPart.Bottom))\n      );\n\n      return (\n        <PhotoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id, album.isPaidMedia ? index : undefined)}`}\n          photo={photo}\n          isOwn={isOwn}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          shouldAffectAppendix={shouldAffectAppendix}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={photo.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, photo)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    } else if (video) {\n      return (\n        <VideoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id)}`}\n          video={video}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          canAutoPlay={canAutoPlay}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={video.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, video)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    }\n\n    return undefined;\n  }\n\n  const { width: containerWidth, height: containerHeight } = albumLayout.containerStyle;\n\n  return (\n    <div\n      className=\"Album\"\n      style={`width: ${containerWidth}px; height: ${containerHeight}px;`}\n    >\n      {messages.map(renderAlbumMessage)}\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const activeDownloads = selectActiveDownloads(global);\n\n    return {\n      theme,\n      uploadsByKey: global.fileUploads.byMessageKey,\n      activeDownloads,\n    };\n  },\n)(Album);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport { IS_ELECTRON } from '../../../util/browser/windowEnvironment';\nimport buildStyle from '../../../util/buildStyle';\nimport safePlay from '../../../util/safePlay';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\n\nconst SIZE = 7 * REM;\nconst INTERACTION_BUNCH_TIME = 1000;\nconst MS_DIVIDER = 1000;\nconst TIME_DEFAULT = 0;\n\nexport default function useAnimatedEmoji(\n  chatId?: string,\n  messageId?: number,\n  soundId?: string,\n  activeEmojiInteractions?: ActiveEmojiInteraction[],\n  isOwn?: boolean,\n  emoji?: string,\n  preferredSize?: number,\n) {\n  const {\n    interactWithAnimatedEmoji, sendEmojiInteraction, sendWatchingEmojiInteraction,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const audioRef = useRef<HTMLAudioElement | undefined>();\n\n  const soundMediaData = useMedia(soundId ? `document${soundId}` : undefined, !soundId);\n\n  const size = preferredSize || SIZE;\n  const style = buildStyle(`width: ${size}px`, `height: ${size}px`, emoji && !IS_ELECTRON && 'cursor: pointer');\n\n  const interactions = useRef<number[] | undefined>(undefined);\n  const startedInteractions = useRef<number | undefined>(undefined);\n  const sendInteractionBunch = useLastCallback(() => {\n    const container = ref.current;\n\n    if (!container) return;\n\n    sendEmojiInteraction({\n      chatId: chatId!,\n      messageId: messageId!,\n      emoji: emoji!,\n      interactions: interactions.current!,\n    });\n    startedInteractions.current = undefined;\n    interactions.current = undefined;\n  });\n\n  const play = useLastCallback(() => {\n    const audio = audioRef.current;\n    if (soundMediaData) {\n      if (audio) {\n        audio.pause();\n        audio.remove();\n      }\n      audioRef.current = new Audio();\n      audioRef.current.src = soundMediaData;\n      safePlay(audioRef.current);\n      audioRef.current.addEventListener('ended', () => {\n        audioRef.current = undefined;\n      }, { once: true });\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    play();\n\n    const container = ref.current;\n\n    if (!emoji || !container || !messageId || !chatId) {\n      return;\n    }\n\n    const { x, y } = container.getBoundingClientRect();\n\n    interactWithAnimatedEmoji({\n      emoji,\n      x,\n      y,\n      startSize: size,\n      isReversed: !isOwn,\n    });\n\n    if (!interactions.current) {\n      interactions.current = [];\n      startedInteractions.current = performance.now();\n      setTimeout(sendInteractionBunch, INTERACTION_BUNCH_TIME);\n    }\n\n    interactions.current.push(startedInteractions.current\n      ? (performance.now() - startedInteractions.current) / MS_DIVIDER\n      : TIME_DEFAULT);\n  });\n\n  // Set an end anchor for remote activated interaction\n  useEffect(() => {\n    const container = ref.current;\n\n    if (!container || !activeEmojiInteractions) return;\n\n    activeEmojiInteractions.forEach(({\n      id,\n      startSize,\n      messageId: interactionMessageId,\n    }) => {\n      if (startSize || messageId !== interactionMessageId) {\n        return;\n      }\n\n      const { x, y } = container.getBoundingClientRect();\n\n      sendWatchingEmojiInteraction({\n        id,\n        chatId: chatId!,\n        emoticon: emoji!,\n        startSize: size,\n        x,\n        y,\n        isReversed: !isOwn,\n      });\n      play();\n    });\n  }, [activeEmojiInteractions, chatId, emoji, isOwn, messageId, play, sendWatchingEmojiInteraction, size]);\n\n  return {\n    ref,\n    size,\n    style,\n    handleClick,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n  selectCanPlayAnimatedEmojis,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\n\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  customEmojiId: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  observeIntersection?: ObserveFn;\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n  noPlay?: boolean;\n}\n\nconst AnimatedCustomEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  customEmojiId,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n  noPlay,\n  observeIntersection,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(\n    chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji, getCustomEmojiSize(1),\n  );\n\n  return (\n    <CustomEmoji\n      ref={ref}\n      documentId={customEmojiId}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      size={size}\n      isBig\n      noPlay={noPlay}\n      withSharedAnimation\n      forceOnHeavyAnimation={Boolean(effect && activeEmojiInteractions?.length)}\n      observeIntersectionForLoading={observeIntersection}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { customEmojiId, withEffects }) => {\n  const sticker = global.customEmojis.byId[customEmojiId];\n\n  return {\n    sticker,\n    effect: sticker?.emoji && withEffects ? selectAnimatedEmojiEffect(global, sticker.emoji) : undefined,\n    soundId: sticker?.emoji && selectAnimatedEmojiSound(global, sticker.emoji),\n    noPlay: !selectCanPlayAnimatedEmojis(global),\n  };\n})(AnimatedCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmoji,\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\n\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  emoji: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n}\n\nconst QUALITY = 1;\n\nconst AnimatedEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  observeIntersection,\n  forceLoadPreview,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji);\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  return (\n    <AnimatedIconFromSticker\n      sticker={sticker}\n      size={size}\n      quality={QUALITY}\n      noLoad={!isIntersecting}\n      forcePreview={forceLoadPreview}\n      play={isIntersecting}\n      forceAlways\n      ref={ref}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { emoji, withEffects }) => {\n  return {\n    sticker: selectAnimatedEmoji(global, emoji),\n    effect: withEffects ? selectAnimatedEmojiEffect(global, emoji) : undefined,\n    soundId: selectAnimatedEmojiSound(global, emoji),\n  };\n})(AnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiCommentsInfo } from '../../../api/types';\n\nimport { selectIsCurrentUserFrozen, selectPeer } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Spinner from '../../ui/Spinner';\n\nimport './CommentButton.scss';\n\ntype OwnProps = {\n  threadInfo: ApiCommentsInfo;\n  disabled?: boolean;\n  isLoading?: boolean;\n  isCustomShape?: boolean;\n  asActionButton?: boolean;\n};\n\nconst SHOW_LOADER_DELAY = 450;\n\nconst CommentButton: FC<OwnProps> = ({\n  isCustomShape,\n  threadInfo,\n  disabled,\n  isLoading,\n  asActionButton,\n}) => {\n  const { openThread, openFrozenAccountModal } = getActions();\n\n  const shouldRenderLoading = useAsyncRendering([isLoading], SHOW_LOADER_DELAY);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const {\n    originMessageId, chatId, messagesCount, lastMessageId, lastReadInboxMessageId, recentReplierIds, originChannelId,\n  } = threadInfo;\n\n  const handleClick = useLastCallback(() => {\n    const global = getGlobal();\n    if (selectIsCurrentUserFrozen(global)) {\n      openFrozenAccountModal();\n      return;\n    }\n    openThread({\n      isComments: true, chatId, originMessageId, originChannelId,\n    });\n  });\n\n  const recentRepliers = useMemo(() => {\n    if (!recentReplierIds?.length) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on chats and users, so we avoid them\n    const global = getGlobal();\n\n    return recentReplierIds.map((peerId) => {\n      return selectPeer(global, peerId);\n    }).filter(Boolean);\n  }, [recentReplierIds]);\n\n  if (messagesCount === undefined) {\n    return undefined;\n  }\n\n  function renderRecentRepliers() {\n    return (\n      Boolean(recentRepliers?.length) && (\n        <div className=\"recent-repliers\" dir={oldLang.isRtl ? 'rtl' : 'ltr'}>\n          {recentRepliers.map((peer) => (\n            <Avatar\n              key={peer.id}\n              size=\"small\"\n              peer={peer}\n            />\n          ))}\n        </div>\n      )\n    );\n  }\n\n  const hasUnread = Boolean(lastReadInboxMessageId && lastMessageId && lastReadInboxMessageId < lastMessageId);\n\n  const commentsText = messagesCount ? (oldLang('CommentsCount', '%COMMENTS_COUNT%', undefined, messagesCount))\n    .split('%')\n    .map((s) => {\n      return (s === 'COMMENTS_COUNT' ? <AnimatedCounter text={formatIntegerCompact(lang, messagesCount)} /> : s);\n    })\n    : undefined;\n\n  return (\n    <div\n      data-cnt={formatIntegerCompact(lang, messagesCount)}\n      className={buildClassName(\n        'CommentButton',\n        hasUnread && 'has-unread',\n        disabled && 'disabled',\n        isCustomShape && 'CommentButton-custom-shape',\n        isLoading && 'loading',\n        asActionButton && 'as-action-button',\n      )}\n      dir={oldLang.isRtl ? 'rtl' : 'ltr'}\n      onClick={handleClick}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <Icon\n        name=\"comments-sticker\"\n        className={buildClassName(\n          'CommentButton_icon-comments',\n          isLoading && shouldRenderLoading && 'CommentButton_hidden',\n        )}\n      />\n      {!recentRepliers?.length && <Icon name=\"comments\" />}\n      {renderRecentRepliers()}\n      <div className=\"label\" dir=\"auto\">\n        {messagesCount ? commentsText : oldLang('LeaveAComment')}\n      </div>\n      <div className=\"CommentButton_right\">\n        {isLoading && (\n          <Spinner\n            className={buildClassName(\n              'CommentButton_loading',\n              !shouldRenderLoading && 'CommentButton_hidden',\n            )}\n            color={isCustomShape ? 'white' : 'blue'}\n          />\n        )}\n        <Icon\n          name=\"next\"\n          className={buildClassName(\n            'CommentButton_icon-open',\n            isLoading && shouldRenderLoading && 'CommentButton_hidden',\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(CommentButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AAHWWWvU\",\"info-container\":\"tpDpg82n\",\"infoContainer\":\"tpDpg82n\",\"info\":\"fpYynE5s\",\"name\":\"_PNTJc_V\",\"phone\":\"JP_3wes8\",\"divider\":\"_OSJcuqH\",\"buttons\":\"Blui4M4G\",\"button\":\"ReDHhQHm\",\"disabled\":\"XAeKpuIZ\",\"emoji-icon-background\":\"SjZYi3sJ\",\"emojiIconBackground\":\"SjZYi3sJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiContact, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { getCanAddContact, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\n\nimport styles from './Contact.module.scss';\n\ntype OwnProps = {\n  contact: ApiContact;\n  noUserColors?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst UNREGISTERED_CONTACT_ID = '0';\n\nconst Contact: FC<OwnProps & StateProps> = ({\n  contact, user, phoneCodeList, noUserColors,\n}) => {\n  const lang = useOldLang();\n  const {\n    openChat, openAddContactDialog, showNotification, openChatWithInfo,\n  } = getActions();\n\n  const { phoneNumber, userId } = contact;\n  const isRegistered = userId !== UNREGISTERED_CONTACT_ID;\n  const canAddContact = isRegistered && user && getCanAddContact(user);\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: userId });\n  });\n\n  const handleAddContact = useLastCallback(() => {\n    openAddContactDialog({ userId: user?.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (user) {\n      openChatWithInfo({ id: userId });\n    } else {\n      copyTextToClipboard(phoneNumber);\n      showNotification({ message: lang('PhoneCopied') });\n    }\n  });\n\n  return (\n    <PeerColorWrapper\n      noUserColors={noUserColors}\n      peer={user}\n      emojiIconClassName={styles.emojiIconBackground}\n      className={styles.root}\n    >\n      <div className={styles.infoContainer} onClick={handleClick}>\n        <Avatar size=\"medium\" peer={user} text={getContactName(contact)} />\n        <div className={styles.info}>\n          <div className={styles.name}>\n            {user ? getUserFullName(user) : getContactName(contact)}\n          </div>\n          <div className={styles.phone}>\n            {formatPhoneNumberWithCode(phoneCodeList, phoneNumber)}\n          </div>\n        </div>\n      </div>\n      {isRegistered && (\n        <>\n          <div className={styles.divider} />\n          <div className={styles.buttons}>\n            <Button\n              isText\n              color=\"translucent\"\n              ripple\n              size=\"tiny\"\n              onClick={handleOpenChat}\n              className={styles.button}\n            >\n              {lang('SharedContactMessage')}\n            </Button>\n            {canAddContact && (\n              <Button\n                isText\n                color=\"translucent\"\n                ripple\n                size=\"tiny\"\n                onClick={handleAddContact}\n                className={styles.button}\n              >\n                {lang('SharedContactAdd')}\n              </Button>\n            )}\n          </div>\n        </>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nfunction getContactName(contact: ApiContact) {\n  if (contact.firstName && contact.lastName) {\n    return `${contact.firstName} ${contact.lastName}`;\n  }\n\n  if (contact.firstName) {\n    return contact.firstName;\n  }\n\n  if (contact.lastName) {\n    return contact.lastName;\n  }\n\n  return '';\n}\n\nexport default withGlobal<OwnProps>((global, { contact }): StateProps => {\n  const {\n    countryList: { phoneCodes: phoneCodeList },\n  } = global;\n  const user = selectUser(global, contact.userId);\n\n  return {\n    user,\n    phoneCodeList,\n  };\n})(Contact);\n","import type { FC } from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HMB5LgeX\",\"title\":\"vZnCPl3t\",\"content\":\"k_dGolcu\",\"separator\":\"qRaSs5iA\",\"footnote\":\"EDmr0wJG\",\"collapsed\":\"hYzpXwTM\",\"cutoutWrapper\":\"nfCzKu78\",\"collapseIcon\":\"mxPizZpR\",\"clickable\":\"Cj2cLczd\"};","import { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiFactCheck } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useCollapsibleLines from '../../../hooks/element/useCollapsibleLines';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Separator from '../../ui/Separator';\n\nimport styles from './FactCheck.module.scss';\n\ntype OwnProps = {\n  factCheck: ApiFactCheck;\n  isToggleDisabled?: boolean;\n};\n\nconst COLOR = {\n  color: 0,\n};\nconst MAX_LINES = 4;\n\nconst FactCheck = ({ factCheck, isToggleDisabled }: OwnProps) => {\n  const lang = useOldLang();\n\n  const ref = useRef<HTMLDivElement>();\n  const cutoutRef = useRef<HTMLDivElement>();\n  const {\n    isCollapsed, isCollapsible, setIsCollapsed,\n  } = useCollapsibleLines(ref, MAX_LINES, cutoutRef);\n\n  const countryLocalized = useMemo(() => {\n    if (!factCheck.countryCode || !lang.code) return undefined;\n\n    const displayNames = new Intl.DisplayNames([lang.code], { type: 'region' });\n    return displayNames.of(factCheck.countryCode);\n  }, [factCheck.countryCode, lang.code]);\n\n  const canExpand = !isToggleDisabled && isCollapsed;\n\n  const handleExpand = useLastCallback(() => {\n    setIsCollapsed(false);\n  });\n\n  const handleToggle = useLastCallback(() => {\n    setIsCollapsed((prev) => !prev);\n  });\n\n  if (!factCheck.text) {\n    return undefined;\n  }\n\n  return (\n    <PeerColorWrapper peerColor={COLOR} className={styles.root} onClick={canExpand ? handleExpand : undefined}>\n      <div\n        ref={cutoutRef}\n        className={buildClassName(styles.cutoutWrapper, isCollapsed && styles.collapsed)}\n      >\n        <div className={styles.title}>{lang('FactCheck')}</div>\n        <div ref={ref} className={styles.content}>\n          {renderTextWithEntities({\n            text: factCheck.text.text,\n            entities: factCheck.text.entities,\n          })}\n        </div>\n        <Separator className={styles.separator} />\n        <div className={styles.footnote}>{lang('FactCheckFooter', countryLocalized)}</div>\n      </div>\n      {isCollapsible && (\n        <div\n          className={buildClassName(styles.collapseIcon, !isToggleDisabled && styles.clickable)}\n          onClick={!isToggleDisabled ? handleToggle : undefined}\n          aria-hidden\n        >\n          <Icon name={isCollapsed ? 'down' : 'up'} />\n        </div>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(FactCheck);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getGamePreviewPhotoHash, getGamePreviewVideoHash, getMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Game.scss';\n\nconst DEFAULT_PREVIEW_DIMENSIONS = {\n  width: 480,\n  height: 270,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  canAutoLoadMedia?: boolean;\n};\n\nconst Game: FC<OwnProps> = ({\n  message,\n  canAutoLoadMedia,\n}) => {\n  const { clickBotInlineButton } = getActions();\n  const game = message.content.game!;\n  const {\n    title, description,\n  } = game;\n\n  const photoHash = getGamePreviewPhotoHash(game);\n  const videoHash = getGamePreviewVideoHash(game);\n  const photoBlobUrl = useMedia(photoHash, !canAutoLoadMedia);\n  const videoBlobUrl = useMedia(videoHash, !canAutoLoadMedia);\n\n  const handleGameClick = () => {\n    clickBotInlineButton({\n      chatId: message.chatId,\n      messageId: message.id,\n      button: message.inlineButtons![0][0],\n    });\n  };\n\n  return (\n    <div className=\"Game\">\n      <div\n        className=\"preview\"\n        style={`width: ${DEFAULT_PREVIEW_DIMENSIONS.width}px; height: ${DEFAULT_PREVIEW_DIMENSIONS.height}px`}\n        onClick={handleGameClick}\n      >\n        {!photoBlobUrl && !videoBlobUrl && (\n          <Skeleton className=\"skeleton preview-content\" />\n        )}\n        {photoBlobUrl && (\n          <img\n            className=\"preview-content\"\n            src={photoBlobUrl}\n            alt={title}\n            draggable={false}\n          />\n        )}\n        {videoBlobUrl && (\n          <video\n            className=\"preview-content\"\n            playsInline\n            muted\n            disablePictureInPicture\n            autoPlay\n            loop\n            src={videoBlobUrl}\n          />\n        )}\n      </div>\n      <div className=\"title\">{title}</div>\n      {!getMessageText(message) && <div className=\"description\">{description}</div>}\n    </div>\n  );\n};\n\nexport default memo(Game);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CbpKtOey\",\"title\":\"ogvcv3mr\",\"sticker\":\"hjjKhvVv\",\"resultSticker\":\"JEiR48jJ\",\"count\":\"n_QCMv_A\",\"section\":\"MSFa9BPf\",\"description\":\"HfZ6SuLI\",\"peers\":\"rPyyNYxK\",\"peer\":\"FV70u896\",\"button\":\"jMBw7STU\",\"result\":\"ZQ4aVVkI\",\"separator\":\"ao0x1YnS\"};","import {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiGiveaway, ApiGiveawayInfo, ApiGiveawayResults, ApiMessage, ApiPeer, ApiSticker,\n} from '../../../api/types';\n\nimport {\n  getChatTitle, getUserFullName, isOwnMessage,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectForwardedSender,\n  selectGiftStickerForDuration,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateAtTime, formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { isoToEmoji } from '../../../util/emoji/emoji';\nimport { getServerTime } from '../../../util/serverTime';\nimport { callApi } from '../../../api/gramjs';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Separator from '../../ui/Separator';\n\nimport styles from './Giveaway.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  sender?: ApiPeer;\n  giftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst NBSP = '\\u00A0';\nconst GIFT_STICKER_SIZE = 175;\nconst RESULT_STICKER_SIZE = 150;\n\nconst Giveaway = ({\n  chat,\n  sender,\n  message,\n  canPlayAnimatedEmojis,\n  giftSticker,\n}: OwnProps & StateProps) => {\n  const { openChat } = getActions();\n\n  const isLoadingInfo = useRef(false);\n  const [giveawayInfo, setGiveawayInfo] = useState<ApiGiveawayInfo | undefined>();\n\n  const lang = useOldLang();\n  const { giveaway, giveawayResults } = message.content;\n  const isResults = Boolean(giveawayResults);\n  const {\n    months, untilDate, prizeDescription, stars,\n  } = (giveaway || giveawayResults)!;\n\n  const isOwn = isOwnMessage(message);\n\n  const quantity = isResults ? giveawayResults.winnersCount : giveaway!.quantity;\n\n  const hasEnded = getServerTime() > untilDate;\n\n  const countryList = useMemo(() => {\n    if (isResults) return undefined;\n    const translatedNames = new Intl.DisplayNames([lang.code!, 'en'].filter(Boolean), { type: 'region' });\n    return giveaway?.countries?.map((countryCode) => (\n      `${isoToEmoji(countryCode)}${NBSP}${translatedNames.of(countryCode)}`\n    )).join(', ');\n  }, [giveaway, isResults, lang.code]);\n\n  const handlePeerClick = useLastCallback((channelId: string) => {\n    openChat({ id: channelId });\n  });\n\n  const handleShowInfoClick = useLastCallback(async () => {\n    if (isLoadingInfo.current) return;\n\n    isLoadingInfo.current = true;\n    const result = await callApi('fetchGiveawayInfo', {\n      peer: chat,\n      messageId: message.id,\n    });\n    setGiveawayInfo(result);\n    isLoadingInfo.current = false;\n  });\n\n  const handleCloseInfo = useLastCallback(() => {\n    setGiveawayInfo(undefined);\n  });\n\n  const giveawayInfoTitle = useMemo(() => {\n    if (!giveawayInfo) return undefined;\n    return lang(giveawayInfo.type === 'results' ? 'BoostingGiveawayEnd' : 'BoostingGiveAwayAbout');\n  }, [giveawayInfo, lang]);\n\n  function renderGiveawayDescription(media: ApiGiveaway) {\n    const channelIds = media.channelIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayPrizes'), ['simple_markdown'])}\n          </strong>\n          {prizeDescription && (\n            <>\n              <p className={styles.description}>\n                {renderText(\n                  lang('BoostingGiveawayMsgPrizes', [quantity, prizeDescription], undefined, quantity),\n                  ['simple_markdown'],\n                )}\n              </p>\n              <Separator>{lang('BoostingGiveawayMsgWithDivider')}</Separator>\n            </>\n          )}\n          <p className={styles.description}>\n            {message?.content?.giveaway?.stars ? (\n              <>\n                {renderText(\n                  lang('Chat.Giveaway.Message.Stars.PrizeText', lang('Stars', message?.content?.giveaway?.stars)),\n                  ['simple_markdown'],\n                )}\n                <br />\n                {renderText(lang('AmongWinners', quantity), ['simple_markdown'])}\n              </>\n            ) : (\n              <>\n                {renderText(lang('Chat.Giveaway.Info.Subscriptions', quantity), ['simple_markdown'])}\n                <br />\n                {renderText(lang(\n                  'ActionGiftPremiumSubtitle',\n                  lang('Chat.Giveaway.Info.Months', months),\n                ), ['simple_markdown'])}\n              </>\n            )}\n          </p>\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayMsgParticipants'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayMsgAllSubsPlural', channelIds.length), ['simple_markdown'])}\n          </p>\n          <div className={styles.peers}>\n            {channelIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n          {countryList && (\n            <span>{renderText(lang('Chat.Giveaway.Message.CountriesFrom', countryList))}</span>\n          )}\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingWinnersDate'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {formatDateTimeToString(untilDate * 1000, lang.code, true)}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayResultsDescription(media: ApiGiveawayResults) {\n    const winnerIds = media.winnerIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersSelected'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersTitle', winnerIds.length), ['simple_markdown'])}\n          </p>\n          <strong className={styles.title}>\n            {lang('lng_prizes_results_winners')}\n          </strong>\n          <div className={styles.peers}>\n            {winnerIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <p className={styles.description}>\n            {lang('BoostingGiveawayResultsMsgAllWinnersReceivedLinks')}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayInfo() {\n    if (!sender || !giveawayInfo) return undefined;\n    const isResultsInfo = giveawayInfo.type === 'results';\n\n    const chatTitle = isApiPeerChat(sender) ? getChatTitle(lang, sender) : getUserFullName(sender);\n    const endDate = formatDateAtTime(lang, untilDate * 1000);\n    const otherChannelsCount = giveaway?.channelIds ? giveaway.channelIds.length - 1 : 0;\n    const otherChannelsString = lang('Chat.Giveaway.Info.OtherChannels', otherChannelsCount);\n    const isSeveral = otherChannelsCount > 0;\n\n    const firstKey = isResultsInfo ? 'BoostingGiveawayHowItWorksTextEnd' : 'BoostingGiveawayHowItWorksText';\n    const giveawayDuration = isResultsInfo ? lang('Chat.Giveaway.Info.Months', months) : lang('Stars', stars, 'i');\n    const firstParagraph = lang(firstKey, [chatTitle, quantity, giveawayDuration], undefined, quantity);\n\n    const additionalPrizes = prizeDescription\n      ? lang('BoostingGiveawayHowItWorksIncludeText', [chatTitle, quantity, prizeDescription], undefined, quantity)\n      : undefined;\n\n    let secondKey = '';\n    if (isResultsInfo) {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveralEnd' : 'BoostingGiveawayHowItWorksSubTextEnd';\n    } else {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveral' : 'BoostingGiveawayHowItWorksSubText';\n    }\n    let secondParagraph = lang(secondKey, [endDate, quantity, chatTitle, otherChannelsCount], undefined, quantity);\n    if (isResultsInfo && giveawayInfo.activatedCount) {\n      secondParagraph += ` ${lang('BoostingGiveawayUsedLinksPlural', giveawayInfo.activatedCount)}`;\n    }\n\n    let result = '';\n\n    if (isResultsInfo) {\n      if (giveawayInfo.isRefunded) {\n        result = lang('BoostingGiveawayCanceledByPayment');\n      } else {\n        result = lang(giveawayInfo.isWinner ? 'BoostingGiveawayYouWon' : 'BoostingGiveawayYouNotWon');\n      }\n    }\n\n    let lastParagraph = '';\n    if (isResultsInfo) {\n      // Nothing\n    } else if (giveawayInfo.disallowedCountry) {\n      lastParagraph = lang('BoostingGiveawayNotEligibleCountry');\n    } else if (giveawayInfo.adminDisallowedChatId) {\n      // Since rerenders are not expected, we can use the global state directly\n      const chatsById = getGlobal().chats.byId;\n      const disallowedChat = chatsById[giveawayInfo.adminDisallowedChatId];\n      const disallowedChatTitle = disallowedChat && getChatTitle(lang, disallowedChat);\n      lastParagraph = lang('BoostingGiveawayNotEligibleAdmin', disallowedChatTitle);\n    } else if (giveawayInfo.joinedTooEarlyDate) {\n      const joinedTooEarlyDate = formatDateAtTime(lang, giveawayInfo.joinedTooEarlyDate * 1000);\n      lastParagraph = lang('BoostingGiveawayNotEligible', joinedTooEarlyDate);\n    } else if (giveawayInfo.isParticipating) {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.ParticipatingMany', [chatTitle, otherChannelsCount])\n        : lang('Chat.Giveaway.Info.Participating', chatTitle);\n    } else {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.NotQualifiedMany', [chatTitle, otherChannelsString, endDate])\n        : lang('Chat.Giveaway.Info.NotQualified', [chatTitle, endDate]);\n    }\n\n    return (\n      <>\n        {result && (\n          <p className={styles.result}>\n            {renderText(result, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(firstParagraph, ['simple_markdown'])}\n        </p>\n        {additionalPrizes && (\n          <p>\n            {renderText(additionalPrizes, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(secondParagraph, ['simple_markdown'])}\n        </p>\n        {lastParagraph && (\n          <p>\n            {renderText(lastParagraph, ['simple_markdown'])}\n          </p>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.sticker, isResults && styles.resultSticker)}>\n        {isResults ? (\n          <AnimatedIconWithPreview\n            size={RESULT_STICKER_SIZE}\n            tgsUrl={LOCAL_TGS_URLS.PartyPopper}\n            nonInteractive\n            noLoop\n          />\n        ) : (\n          <AnimatedIconFromSticker\n            sticker={giftSticker}\n            play={canPlayAnimatedEmojis && hasEnded}\n            noLoop\n            nonInteractive\n            size={GIFT_STICKER_SIZE}\n          />\n        )}\n        <span className={styles.count}>\n          {`x${quantity}`}\n        </span>\n      </div>\n      {isResults ? renderGiveawayResultsDescription(giveawayResults) : renderGiveawayDescription(giveaway!)}\n      <Button\n        className={styles.button}\n        color=\"adaptive\"\n        onClick={handleShowInfoClick}\n      >\n        {lang('BoostingHowItWork')}\n      </Button>\n      <ConfirmDialog\n        isOpen={Boolean(giveawayInfo)}\n        isOnlyConfirm\n        title={giveawayInfoTitle}\n        confirmHandler={handleCloseInfo}\n        onClose={handleCloseInfo}\n      >\n        {renderGiveawayInfo()}\n      </ConfirmDialog>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message }): StateProps => {\n    const { giveaway } = message.content;\n    const chat = selectChat(global, message.chatId)!;\n    const sender = (giveaway?.channelIds[0] ? selectChat(global, giveaway.channelIds[0]) : undefined)\n      || selectForwardedSender(global, message) || chat;\n\n    const sticker = giveaway && selectGiftStickerForDuration(global, giveaway.months);\n\n    return {\n      chat,\n      sender,\n      giftSticker: sticker,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(Giveaway));\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton, ApiMessage } from '../../../api/types';\nimport type { ActionPayloads } from '../../../global/types';\n\nimport { RE_TME_LINK } from '../../../config';\nimport renderKeyboardButtonText from '../composer/helpers/renderKeyboardButtonText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport './InlineButtons.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  onClick: (payload: ActionPayloads['clickBotInlineButton']) => void;\n};\n\nconst InlineButtons: FC<OwnProps> = ({ message, onClick }) => {\n  const lang = useOldLang();\n\n  const renderIcon = (button: ApiKeyboardButton) => {\n    const { type } = button;\n    switch (type) {\n      case 'url': {\n        if (!RE_TME_LINK.test(button.url)) {\n          return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n        }\n        break;\n      }\n      case 'urlAuth':\n        return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n      case 'buy':\n      case 'receipt':\n        return <Icon className=\"corner-icon\" name=\"card\" />;\n      case 'switchBotInline':\n        return <Icon className=\"corner-icon\" name=\"share-filled\" />;\n      case 'webView':\n      case 'simpleWebView':\n        return <Icon className=\"corner-icon\" name=\"webapp\" />;\n      case 'copy':\n        return <Icon className=\"corner-icon\" name=\"copy\" />;\n      case 'suggestedMessage':\n        if (button.buttonType === 'suggestChanges') {\n          return <Icon className=\"left-icon\" name=\"edit\" />;\n        }\n        if (button.buttonType === 'approve') {\n          return <Icon className=\"left-icon\" name=\"check\" />;\n        }\n        if (button.buttonType === 'decline') {\n          return <Icon className=\"left-icon\" name=\"close\" />;\n        }\n        break;\n    }\n    return undefined;\n  };\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message.inlineButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n    return texts;\n  }, [lang, message.inlineButtons]);\n\n  return (\n    <div className=\"InlineButtons\">\n      {message.inlineButtons!.map((row, i) => (\n        <div className=\"row\">\n          {row.map((button, j) => (\n            <Button\n              size=\"tiny\"\n              ripple\n              disabled={button.type === 'unsupported' || (button.type === 'suggestedMessage' && button.disabled)}\n\n              onClick={() => onClick({ chatId: message.chatId, messageId: message.id, button })}\n            >\n              {renderIcon(button)}\n              <span className=\"inline-button-text\">\n                {buttonTexts[i][j]}\n              </span>\n            </Button>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(InlineButtons);\n","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageInvoice, getWebDocumentHash } from '../../../global/helpers';\nimport buildStyle from '../../../util/buildStyle';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\n\nimport useLang from '../../../hooks/useLang';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Invoice.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldAffectAppendix?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n  forcedWidth?: number;\n};\n\nconst Invoice: FC<OwnProps> = ({\n  message,\n  shouldAffectAppendix,\n  isInSelectMode,\n  isSelected,\n  theme,\n  forcedWidth,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const invoice = getMessageInvoice(message);\n\n  const {\n    title,\n    description,\n    amount,\n    currency,\n    isTest,\n    photo,\n  } = invoice!;\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n  const withBlurredBackground = Boolean(forcedWidth);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photoUrl, !withBlurredBackground);\n  const messageId = message.id;\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    if (photoUrl) {\n      const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n      getCustomAppendixBg(photoUrl, false, messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    }\n  }, [shouldAffectAppendix, photoUrl, isInSelectMode, isSelected, theme, messageId]);\n\n  const width = forcedWidth || photo?.dimensions?.width;\n\n  const style = buildStyle(\n    photo?.dimensions && `width: ${width}px`,\n    photo?.dimensions && `aspect-ratio: ${photo.dimensions.width} / ${photo.dimensions.height}`,\n    Boolean(!photo?.dimensions && forcedWidth) && `width: ${forcedWidth}px`,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className=\"Invoice\"\n    >\n      {title && (\n        <p className=\"title\">{renderText(title)}</p>\n      )}\n      {description && (\n        <div className=\"info\">{renderText(description, ['emoji', 'br'])}</div>\n      )}\n      <div className={`description ${photo ? 'has-image' : ''}`}>\n        {Boolean(photo) && (\n          <div className=\"invoice-image-container\">\n            {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n            {photoUrl && (\n              <img\n                className=\"invoice-image\"\n                src={photoUrl}\n                alt=\"\"\n                style={style}\n                crossOrigin=\"anonymous\"\n                draggable={false}\n              />\n            )}\n            {!photoUrl && photo && (\n              <Skeleton\n                width={width}\n                height={photo.dimensions?.height}\n                forceAspectRatio\n              />\n            )}\n          </div>\n        )}\n        <p className=\"description-text\">\n          {formatCurrency(lang, amount, currency, { iconClassName: 'invoice-currency-icon' })}\n          {isTest && <span className=\"test-invoice\">{oldLang('PaymentTestInvoice')}</span>}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Invoice);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dCK8GQ_8\",\"duration\":\"CWT8ZMwV\",\"buy\":\"C38zhCDM\",\"spoiler\":\"CG55VZP1\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getMessageInvoice } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './InvoiceMediaPreview.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  isConnected: boolean;\n};\n\nconst POLLING_INTERVAL = 30000;\n\nconst InvoiceMediaPreview: FC<OwnProps> = ({\n  message,\n  isConnected,\n}) => {\n  const { openInvoice, loadExtendedMedia } = getActions();\n  const lang = useOldLang();\n  const invoice = getMessageInvoice(message);\n\n  const { chatId, id } = message;\n\n  const refreshExtendedMedia = useLastCallback(() => {\n    loadExtendedMedia({ chatId, ids: [id] });\n  });\n\n  useInterval(refreshExtendedMedia, isConnected ? POLLING_INTERVAL : undefined);\n\n  const {\n    amount,\n    currency,\n    extendedMedia,\n  } = invoice!;\n\n  const {\n    width, height, thumbnail, duration,\n  } = extendedMedia!;\n\n  const handleClick = useLastCallback(() => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId: id,\n      isExtendedMedia: true,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, 'media-inner')}\n      onClick={handleClick}\n    >\n      <MediaSpoiler\n        thumbDataUri={thumbnail?.dataUri}\n        width={width}\n        height={height}\n        isVisible\n        className={styles.spoiler}\n      />\n      {Boolean(duration) && <div className={styles.duration}>{formatMediaDuration(duration)}</div>}\n      <div className={styles.buy}>\n        <Icon name=\"lock\" className={styles.lock} />\n        {lang('Checkout.PayPrice', formatCurrencyAsString(amount, currency))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(InvoiceMediaPreview);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  buildStaticMapHash,\n  getMessageLocation,\n  isGeoLiveExpired,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCountdownShort, formatLocationLastUpdate } from '../../../util/dates/dateFormat';\nimport {\n  getMetersPerPixel, getVenueColor, getVenueIconUrl,\n} from '../../../util/map';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../common/Avatar';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Location.scss';\n\nimport mapPin from '../../../assets/map-pin.svg';\n\nconst TIMER_RADIUS = 12;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst MOVE_THRESHOLD = 0.0001; // ~11m\nconst DEFAULT_MAP_CONFIG = {\n  width: 400,\n  height: 300,\n  zoom: 16,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  peer?: ApiPeer;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ThemeKey;\n};\n\nconst Location: FC<OwnProps> = ({\n  message,\n  peer,\n}) => {\n  const { openMapModal } = getActions();\n  const ref = useRef<HTMLDivElement>();\n  const countdownRef = useRef<HTMLDivElement>();\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  const location = getMessageLocation(message)!;\n  const { mediaType, geo } = location;\n\n  const serverTime = getServerTime();\n  const isExpired = isGeoLiveExpired(message);\n  const secondsBeforeEnd = (mediaType === 'geoLive' && !isExpired) ? message.date + location.period - serverTime\n    : undefined;\n\n  const [point, setPoint] = useState(geo);\n\n  const shouldRenderText = mediaType === 'venue' || (mediaType === 'geoLive' && !isExpired);\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n\n  const mediaHash = buildStaticMapHash(point, width, height, zoom, dpr);\n  const mediaBlobUrl = useMedia(mediaHash);\n  const prevMediaBlobUrl = usePreviousDeprecated(mediaBlobUrl, true);\n  const mapBlobUrl = mediaBlobUrl || prevMediaBlobUrl;\n\n  const accuracyRadiusPx = useMemo(() => {\n    if (mediaType !== 'geoLive' || !point.accuracyRadius) {\n      return 0;\n    }\n\n    const { lat, accuracyRadius } = point;\n    return accuracyRadius / getMetersPerPixel(lat, zoom);\n  }, [mediaType, point, zoom]);\n\n  const handleClick = () => {\n    openMapModal({ geoPoint: point, zoom });\n  };\n\n  const updateCountdown = useLastCallback((countdownEl: HTMLDivElement) => {\n    if (mediaType !== 'geoLive') return;\n    const svgEl = countdownEl.lastElementChild!;\n    const timerEl = countdownEl.firstElementChild!;\n\n    const timeLeft = message.date + location.period - getServerTime();\n    const strokeDashOffset = (1 - timeLeft / location.period) * TIMER_CIRCUMFERENCE;\n    const text = formatCountdownShort(lang, timeLeft * 1000);\n    timerEl.textContent = text;\n    svgEl.firstElementChild!.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  });\n\n  useLayoutEffect(() => {\n    if (countdownRef.current) {\n      updateCountdown(countdownRef.current);\n    }\n  }, [updateCountdown]);\n\n  useEffect(() => {\n    // Prevent map refetching for slight location changes\n    if (Math.abs(geo.lat - point.lat) < MOVE_THRESHOLD && Math.abs(geo.long - point.long) < MOVE_THRESHOLD) {\n      if (point.accuracyRadius !== geo.accuracyRadius) {\n        setPoint({\n          ...point,\n          accuracyRadius: geo.accuracyRadius,\n        });\n      }\n      return;\n    }\n    setPoint(geo);\n  }, [geo, point]);\n\n  useTimeout(() => {\n    forceUpdate();\n  }, !isExpired ? (secondsBeforeEnd || 0) * 1000 : undefined);\n\n  useInterval(() => {\n    requestMutation(() => {\n      const countdownEl = countdownRef.current;\n      if (countdownEl) {\n        updateCountdown(countdownEl);\n      }\n    });\n  }, secondsBeforeEnd ? 1000 : undefined);\n\n  function renderInfo() {\n    if (!shouldRenderText) return undefined;\n    if (mediaType === 'venue') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">\n            {location.title}\n          </div>\n          <div className=\"location-info-subtitle\">\n            {location.address}\n          </div>\n        </div>\n      );\n    }\n    if (mediaType === 'geoLive') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">{lang('AttachLiveLocation')}</div>\n          <div className=\"location-info-subtitle\">\n            {formatLocationLastUpdate(lang, serverTime, message.editDate)}\n          </div>\n          {!isExpired && (\n            <div className=\"geo-countdown\" ref={countdownRef}>\n              <span className=\"geo-countdown-text\" />\n              <svg width=\"32px\" height=\"32px\">\n                <circle\n                  cx=\"16\"\n                  cy=\"16\"\n                  r={TIMER_RADIUS}\n                  className=\"geo-countdown-progress\"\n                  transform=\"rotate(-90, 16, 16)\"\n                  stroke-dasharray={TIMER_CIRCUMFERENCE}\n                  stroke-dashoffset=\"0\"\n                />\n              </svg>\n            </div>\n          )}\n        </div>\n      );\n    }\n    return undefined;\n  }\n\n  function renderMap() {\n    if (!mapBlobUrl) return <Skeleton width={width} height={height} />;\n    return (\n      <img\n        className=\"full-media map\"\n        src={mapBlobUrl}\n        alt=\"Location on a map\"\n        draggable={false}\n        style={`width: ${DEFAULT_MAP_CONFIG.width}px; height: ${DEFAULT_MAP_CONFIG.height}px;`}\n      />\n    );\n  }\n\n  function renderPin() {\n    const pinClassName = buildClassName(\n      'pin',\n      mediaType,\n      isExpired && 'expired',\n    );\n    if (mediaType === 'geoLive') {\n      return (\n        <div className={pinClassName}>\n          <PinSvg />\n          <Avatar peer={peer} className=\"location-avatar\" />\n          {location.heading !== undefined && (\n            <div className=\"direction\" style={`--direction: ${location.heading}deg`} />\n          )}\n        </div>\n      );\n    }\n\n    if (mediaType === 'venue') {\n      const color = getVenueColor(location.venueType);\n      const iconSrc = getVenueIconUrl(location.venueType);\n      if (iconSrc) {\n        return (\n          <div className={pinClassName} style={`--pin-color: ${color}`}>\n            <PinSvg />\n            <img src={iconSrc} draggable={false} className=\"venue-icon\" alt=\"\" />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <img className={pinClassName} draggable={false} src={mapPin} alt=\"\" />\n    );\n  }\n\n  function renderOverlay() {\n    if (!mapBlobUrl) return undefined;\n\n    return (\n      <>\n        {Boolean(accuracyRadiusPx) && !isExpired && (\n          <div\n            className=\"location-accuracy\"\n            style={`width: ${accuracyRadiusPx * 2}px; height: ${accuracyRadiusPx * 2}px`}\n          />\n        )}\n        {renderPin()}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className=\"Location media-inner interactive\"\n      onClick={handleClick}\n    >\n      <div className=\"map-wrapper\">\n        {renderMap()}\n        {renderOverlay()}\n      </div>\n      {renderInfo()}\n    </div>\n  );\n};\n\nfunction PinSvg() {\n  return (\n    <svg className=\"round-pin\" style=\"enable-background:new 0 0 64 64\" viewBox=\"0 0 64 64\">\n      <circle cx=\"32\" cy=\"32\" r=\"24.5\" />\n      <path d=\"M32 8c13.23 0 24 10.77 24 24S45.23 56 32 56 8 45.23 8 32 18.77 8 32 8m0-1C18.19 7 7 18.19 7 32s11.19 25 25 25 25-11.19 25-25S45.81 7 32 7z\" />\n      <path d=\"m29.38 57.67-1.98-1.59 3.02-1.66L32 51.54l1.58 2.88 3.02 1.66-1.91 1.53L32 60.73z\" />\n      <path d=\"m32 52.58 1.07 1.95.14.26.26.14 2.24 1.22-1.33 1.06-.07.06-.06.07L32 59.96l-2.24-2.61-.06-.07-.07-.06-1.33-1.06 2.24-1.22.26-.14.14-.26L32 52.58m0-2.08-1.94 3.56L26.5 56l2.5 2 3 3.5 3-3.5 2.5-2-3.56-1.94L32 50.5z\" />\n    </svg>\n  );\n}\n\nexport default memo(Location);\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiMessage, ApiMessageOutgoingStatus, ApiThreadInfo,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString, formatPastTimeShort, formatTime } from '../../../util/dates/dateFormat';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport MessageOutgoingStatus from '../../common/MessageOutgoingStatus';\n\nimport './MessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  withReactionOffset?: boolean;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  signature?: string;\n  availableReactions?: ApiAvailableReaction[];\n  noReplies?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  isTranslated?: boolean;\n  isPinned?: boolean;\n  withFullDate?: boolean;\n  effectEmoji?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onTranslationClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onEffectClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  renderQuickReactionButton?: () => TeactNode | undefined;\n  onOpenThread: NoneToVoidFunction;\n  paidMessageStars?: number;\n};\n\nconst MessageMeta: FC<OwnProps> = ({\n  message,\n  outgoingStatus,\n  signature,\n  withReactionOffset,\n  repliesThreadInfo,\n  renderQuickReactionButton,\n  noReplies,\n  isTranslated,\n  isPinned,\n  withFullDate,\n  effectEmoji,\n  onClick,\n  onTranslationClick,\n  onEffectClick,\n  onOpenThread,\n  paidMessageStars,\n}) => {\n  const { showNotification } = getActions();\n\n  const [isActivated, markActivated] = useFlag();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function handleImportedClick(e: React.MouseEvent) {\n    e.stopPropagation();\n\n    showNotification({\n      message: {\n        key: 'ImportedInfo',\n      },\n    });\n  }\n\n  function handleOpenThread(e: React.MouseEvent) {\n    e.stopPropagation();\n    onOpenThread();\n  }\n\n  const dateTitle = useMemo(() => {\n    if (!isActivated) return undefined;\n    const createDateTime = formatDateTimeToString(message.date * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const editDateTime = message.isEdited\n      && formatDateTimeToString(message.editDate! * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const forwardedDateTime = message.forwardInfo\n      && formatDateTimeToString(\n        (message.forwardInfo.savedDate || message.forwardInfo.date) * 1000,\n        oldLang.code,\n        undefined,\n        oldLang.timeFormat,\n      );\n\n    let text = createDateTime;\n    if (editDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipEditedDate', { date: editDateTime });\n    }\n    if (forwardedDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipForwardedDate', { date: forwardedDateTime });\n    }\n\n    return text;\n    // We need to listen to timeformat change\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [isActivated, oldLang, message, oldLang.timeFormat]);\n\n  const viewsTitle = useMemo(() => {\n    if (!message.viewsCount) return undefined;\n    let text = lang('MessageTooltipViews', {\n      count: lang.number(message.viewsCount),\n    }, { pluralValue: message.viewsCount });\n    if (message.forwardsCount) {\n      text += '\\n';\n      text += lang('MessageTooltipForwards', {\n        count: lang.number(message.forwardsCount),\n      }, { pluralValue: message.forwardsCount });\n    }\n\n    return text;\n  }, [lang, message.forwardsCount, message.viewsCount]);\n\n  const repliesTitle = useMemo(() => {\n    const count = repliesThreadInfo?.messagesCount;\n    if (!count) return undefined;\n    return lang('MessageTooltipReplies', { count }, { pluralValue: count });\n  }, [lang, repliesThreadInfo]);\n\n  const date = useMemo(() => {\n    const time = formatTime(oldLang, message.date * 1000);\n    if (!withFullDate) {\n      return time;\n    }\n\n    return formatPastTimeShort(oldLang, (message.forwardInfo?.date || message.date) * 1000, true);\n  }, [oldLang, message.date, message.forwardInfo?.date, withFullDate]);\n\n  const fullClassName = buildClassName(\n    'MessageMeta',\n    withReactionOffset && 'reactions-offset',\n    message.forwardInfo?.isImported && 'is-imported',\n  );\n\n  return (\n    <span\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n      onClick={onClick}\n      data-ignore-on-paste\n    >\n      {effectEmoji && (\n        <span className=\"message-effect-icon\" onClick={onEffectClick}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {isTranslated && (\n        <Icon name=\"language\" className=\"message-translated\" onClick={onTranslationClick} />\n      )}\n      {Boolean(message.viewsCount) && (\n        <>\n          <span className=\"message-views\" title={viewsTitle}>\n            {formatIntegerCompact(lang, message.viewsCount)}\n          </span>\n          <Icon name=\"channelviews\" />\n        </>\n      )}\n      {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n        <span onClick={handleOpenThread} className=\"message-replies-wrapper\" title={repliesTitle}>\n          <span className=\"message-replies\">\n            <AnimatedCounter text={formatIntegerCompact(lang, repliesThreadInfo.messagesCount)} />\n          </span>\n          <Icon name=\"reply-filled\" />\n        </span>\n      )}\n      {isPinned && (\n        <Icon name=\"pinned-message\" className=\"message-pinned\" />\n      )}\n      {signature && (\n        <span className=\"message-signature\">{renderText(signature)}</span>\n      )}\n      {Boolean(paidMessageStars) && (\n        <span className=\"message-price\">\n          {\n            formatStarsAsIcon(lang, paidMessageStars, {\n              asFont: true,\n              className: 'message-price-star-icon',\n              containerClassName: 'message-price-stars-container',\n            })\n          }\n        </span>\n      )}\n      <span className=\"message-time\" title={dateTitle} onMouseEnter={markActivated}>\n        {message.forwardInfo?.isImported && (\n          <>\n            <span className=\"message-imported\" onClick={handleImportedClick}>\n              {formatDateTimeToString(message.forwardInfo.date * 1000, lang.code, true)}\n            </span>\n            <span className=\"message-imported\" onClick={handleImportedClick}>{lang('MessageMetaImported')}</span>\n          </>\n        )}\n        {message.isEdited && `${lang('MessageMetaEdited')} `}\n        {message.isVideoProcessingPending && `${lang('MessageMetaApproximate')} `}\n        {date}\n      </span>\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      {renderQuickReactionButton && renderQuickReactionButton()}\n    </span>\n  );\n};\n\nexport default memo(MessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wqsZyy8u\",\"button\":\"NGmo4ADz\",\"info\":\"iFn6m6hd\",\"reason\":\"l8QfocIQ\",\"arrow\":\"ONmpzmUS\",\"incoming\":\"BfgDXljM\",\"missed\":\"Alra_BWu\",\"canceled\":\"J7xsuCAm\",\"meta\":\"rF5tkx92\",\"duration\":\"kKPKwFzu\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ApiMessageActionPhoneCall } from '../../../api/types/messageActions';\n\nimport { ARE_CALLS_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatTimeDuration } from '../../../util/dates/dateFormat';\nimport { getCallMessageKey } from './helpers/messageActions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MessagePhoneCall.module.scss';\n\ntype OwnProps = {\n  phoneCall: ApiMessageActionPhoneCall;\n  message: ApiMessage;\n  chatId: string;\n};\n\nconst MessagePhoneCall: FC<OwnProps> = ({\n  phoneCall,\n  message,\n  chatId,\n}) => {\n  const { requestMasterAndRequestCall } = getActions();\n\n  const lang = useOldLang();\n  const {\n    isVideo, reason, duration,\n  } = phoneCall;\n  const isOutgoing = message.isOutgoing;\n  const isMissed = reason === 'missed';\n  const isCancelled = reason === 'busy' || duration === undefined;\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ isVideo, userId: chatId });\n  });\n\n  const formattedDuration = useMemo(() => {\n    return phoneCall.duration ? formatTimeDuration(lang, phoneCall.duration) : undefined;\n  }, [lang, phoneCall.duration]);\n\n  const timeFormatted = formatTime(lang, message.date * 1000);\n  return (\n    <div className={styles.root}>\n      <Button\n        size=\"smaller\"\n        color=\"translucent\"\n        round\n        ripple\n        onClick={handleCall}\n        className={styles.button}\n        disabled={!ARE_CALLS_SUPPORTED}\n        ariaLabel={lang(isOutgoing ? 'CallAgain' : 'CallBack')}\n      >\n        <Icon name={isVideo ? 'video-outlined' : 'phone'} />\n      </Button>\n      <div className={styles.info}>\n        <div className={styles.reason}>{lang(getCallMessageKey(phoneCall, message.isOutgoing))}</div>\n        <div className={styles.meta}>\n          <Icon\n            name=\"arrow-right\"\n            className={buildClassName(\n              styles.arrow,\n              isMissed && styles.missed,\n              isCancelled && styles.canceled,\n              !isOutgoing && styles.incoming,\n            )}\n          />\n          <span className={styles.duration}>\n            {formattedDuration ? lang('CallMessageWithDuration', [timeFormatted, formattedDuration]) : timeFormatted}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MessagePhoneCall);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mVaSjZRJ\",\"buyButton\":\"GnKGu6D9\",\"boughtStatus\":\"IGXW5hWr\",\"star\":\"ywiOugiH\",\"buttonText\":\"gLaaVQXr\"};","import type React from '../../../lib/teact/teact';\nimport { memo, type TeactNode, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPaidMedia } from '../../../api/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { replaceWithTeact } from '../../../util/replaceWithTeact';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './PaidMediaOverlay.module.scss';\n\ntype OwnProps = {\n  paidMedia: ApiPaidMedia;\n  chatId: string;\n  messageId: number;\n  isOutgoing?: boolean;\n  children?: TeactNode;\n};\n\nconst PaidMediaOverlay = ({\n  paidMedia,\n  chatId,\n  messageId,\n  isOutgoing,\n  children,\n}: OwnProps) => {\n  const { openInvoice } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isClickable = !paidMedia.isBought;\n\n  const buttonText = useMemo(() => {\n    const value = oldLang('UnlockPaidContent', paidMedia.starsAmount);\n\n    return replaceWithTeact(\n      value, STARS_ICON_PLACEHOLDER, <StarIcon className={styles.star} type=\"gold\" size=\"adaptive\" />,\n    );\n  }, [oldLang, paidMedia]);\n\n  const handleClick = useLastCallback((e: React.MouseEvent) => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId,\n    });\n    stopEvent(e);\n  });\n\n  return (\n    <div\n      className={styles.root}\n      onClick={isClickable ? handleClick : undefined}\n    >\n      {children}\n      {isClickable && (\n        <Button\n          className={styles.buyButton}\n          color=\"dark\"\n          size=\"tiny\"\n          fluid\n          pill\n        >\n          <span className={styles.buttonText}>{buttonText}</span>\n        </Button>\n      )}\n      {paidMedia.isBought && (\n        <div className={buildClassName('message-paid-media-status', styles.boughtStatus)}>\n          {isOutgoing\n            ? formatStarsAsIcon(lang, paidMedia.starsAmount)\n            : oldLang('Chat.PaidMedia.Purchased')}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(PaidMediaOverlay);\n","import type { FC } from '../../../lib/teact/teact';\nimport {\n  useEffect,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiPollAnswer, ApiPollResult } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './PollOption.scss';\n\ntype OwnProps = {\n  answer: ApiPollAnswer;\n  voteResults?: ApiPollResult[];\n  totalVoters?: number;\n  maxVotersCount?: number;\n  correctResults: string[];\n  shouldAnimate: boolean;\n};\n\nconst PollOption: FC<OwnProps> = ({\n  answer,\n  voteResults,\n  totalVoters,\n  maxVotersCount,\n  correctResults,\n  shouldAnimate,\n}) => {\n  const lang = useLang();\n  const result = voteResults && voteResults.find((r) => r.option === answer.option);\n  const correctAnswer = correctResults.length === 0 || correctResults.indexOf(answer.option) !== -1;\n  const showIcon = (correctResults.length > 0 && correctAnswer) || (result?.isChosen);\n  const answerPercent = result ? getPercentage(result.votersCount, totalVoters || 0) : 0;\n  const [finalPercent, setFinalPercent] = useState(shouldAnimate ? 0 : answerPercent);\n  const lineWidth = result ? getPercentage(result.votersCount, maxVotersCount || 0) : 0;\n  const isAnimationDoesNotStart = finalPercent !== answerPercent;\n\n  useEffect(() => {\n    if (shouldAnimate) {\n      setFinalPercent(answerPercent);\n    }\n  }, [shouldAnimate, answerPercent]);\n\n  if (!voteResults || !result) {\n    return undefined;\n  }\n\n  const lineStyle = `width: ${lineWidth}%; transform:scaleX(${isAnimationDoesNotStart ? 0 : 1})`;\n\n  return (\n    <div className=\"PollOption\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className={`poll-option-share ${answerPercent === '100' ? 'limit-width' : ''}`}>\n        {answerPercent}\n        %\n        {showIcon && (\n          <span className={buildClassName(\n            'poll-option-chosen',\n            !correctAnswer && 'wrong',\n            shouldAnimate && 'animate',\n          )}\n          >\n            <Icon name={correctAnswer ? 'check' : 'close'} className=\"poll-option-icon\" />\n          </span>\n        )}\n      </div>\n      <div className=\"poll-option-right\">\n        <div className=\"poll-option-text\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: answer.text.text,\n            entities: answer.text.entities,\n          })}\n        </div>\n        <div className={buildClassName('poll-option-answer', showIcon && !correctAnswer && 'wrong')}>\n          {shouldAnimate && (\n            <svg\n              className=\"poll-line\"\n              style={!isAnimationDoesNotStart ? 'stroke-dasharray: 100% 200%; stroke-dashoffset: -44' : ''}\n            >\n              <path d=\"M4.47 5.33v13.6a9 9 0 009 9h13\" />\n            </svg>\n          )}\n          <div\n            className=\"poll-option-line\"\n            style={lineStyle}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default PollOption;\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPoll, ApiPollAnswer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { selectPeer } from '../../../global/selectors';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getServerTime } from '../../../util/serverTime';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PollOption from './PollOption';\n\nimport './Poll.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  poll: ApiPoll;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onSendVote: (options: string[]) => void;\n};\n\nconst SOLUTION_CONTAINER_ID = '#middle-column-portals';\nconst SOLUTION_DURATION = 5000;\nconst TIMER_RADIUS = 6;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst TIMER_UPDATE_INTERVAL = 1000;\nconst NBSP = '\\u00A0';\n\nconst Poll: FC<OwnProps> = ({\n  message,\n  poll,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onSendVote,\n}) => {\n  const {\n    loadMessage, openPollResults, requestConfetti, showNotification,\n  } = getActions();\n\n  const { id: messageId, chatId } = message;\n  const { summary, results } = poll;\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [chosenOptions, setChosenOptions] = useState<string[]>([]);\n  const [wasSubmitted, setWasSubmitted] = useState<boolean>(false);\n  const [closePeriod, setClosePeriod] = useState<number>(\n    !summary.closed && summary.closeDate && summary.closeDate > 0\n      ? Math.min(summary.closeDate - getServerTime(), summary.closePeriod!)\n      : 0,\n  );\n  const countdownRef = useRef<HTMLDivElement>();\n  const timerCircleRef = useRef<SVGCircleElement>();\n  const { results: voteResults, totalVoters } = results;\n  const hasVoted = voteResults && voteResults.some((r) => r.isChosen);\n  const canVote = !summary.closed && !hasVoted;\n  const canViewResult = !canVote && summary.isPublic && Number(results.totalVoters) > 0;\n  const isMultiple = canVote && summary.multipleChoice;\n  const recentVoterIds = results.recentVoterIds;\n  const maxVotersCount = voteResults ? Math.max(...voteResults.map((r) => r.votersCount)) : totalVoters;\n  const correctResults = useMemo(() => {\n    return voteResults?.filter((r) => r.isCorrect).map((r) => r.option) || [];\n  }, [voteResults]);\n  const answers = useMemo(() => summary.answers.map((a) => ({\n    label: renderTextWithEntities({\n      text: a.text.text,\n      entities: a.text.entities,\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    }),\n    value: a.option,\n    hidden: Boolean(summary.quiz && summary.closePeriod && closePeriod <= 0),\n  })), [\n    closePeriod, observeIntersectionForLoading, observeIntersectionForPlaying,\n    summary.answers, summary.closePeriod, summary.quiz,\n  ]);\n\n  useEffect(() => {\n    const chosen = poll.results.results?.find((result) => result.isChosen);\n    if (isSubmitting && chosen) {\n      if (chosen.isCorrect) {\n        requestConfetti({});\n      }\n      setIsSubmitting(false);\n    }\n  }, [isSubmitting, poll.results.results, requestConfetti]);\n\n  useLayoutEffect(() => {\n    if (closePeriod > 0) {\n      setTimeout(() => setClosePeriod(closePeriod - 1), TIMER_UPDATE_INTERVAL);\n    }\n    if (!timerCircleRef.current) return;\n\n    if (closePeriod <= 5) {\n      countdownRef.current!.classList.add('hurry-up');\n    }\n\n    const strokeDashOffset = ((summary.closePeriod! - closePeriod) / summary.closePeriod!) * TIMER_CIRCUMFERENCE;\n    timerCircleRef.current.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  }, [closePeriod, summary.closePeriod]);\n\n  useEffect(() => {\n    if (summary.quiz && (closePeriod <= 0 || (hasVoted && !summary.closed))) {\n      loadMessage({ chatId, messageId });\n    }\n  }, [chatId, closePeriod, hasVoted, loadMessage, messageId, summary.closed, summary.quiz]);\n\n  // If the client time is not synchronized, the poll must be updated after the closePeriod time has expired.\n  useEffect(() => {\n    let timer: number | undefined;\n\n    if (summary.quiz && !summary.closed && summary.closePeriod && summary.closePeriod > 0) {\n      timer = window.setTimeout(() => {\n        loadMessage({ chatId, messageId });\n      }, summary.closePeriod * 1000);\n    }\n\n    return () => {\n      if (timer) {\n        window.clearTimeout(timer);\n      }\n    };\n  }, [canVote, chatId, loadMessage, messageId, summary.closePeriod, summary.closed, summary.quiz]);\n\n  const recentVoters = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const global = getGlobal();\n    return recentVoterIds ? recentVoterIds.reduce((result: ApiPeer[], id) => {\n      const peer = selectPeer(global, id);\n      if (peer) {\n        result.push(peer);\n      }\n\n      return result;\n    }, []) : [];\n  }, [recentVoterIds]);\n\n  const handleRadioChange = useLastCallback((option: string) => {\n    setChosenOptions([option]);\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote([option]);\n  });\n\n  const handleCheckboxChange = useLastCallback((options: string[]) => {\n    setChosenOptions(options);\n  });\n\n  const handleVoteClick = useLastCallback(() => {\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote(chosenOptions);\n  });\n\n  const handleViewResultsClick = useLastCallback(() => {\n    openPollResults({ chatId, messageId });\n  });\n\n  const showSolution = useLastCallback(() => {\n    showNotification({\n      localId: getMessageKey(message),\n      message: renderTextWithEntities({ text: poll.results.solution!, entities: poll.results.solutionEntities }),\n      duration: SOLUTION_DURATION,\n      containerSelector: SOLUTION_CONTAINER_ID,\n    });\n  });\n\n  // Show the solution to quiz if the answer was incorrect\n  useEffect(() => {\n    if (wasSubmitted && hasVoted && summary.quiz && results.results && poll.results.solution) {\n      const correctResult = results.results.find((r) => r.isChosen && r.isCorrect);\n      if (!correctResult) {\n        showSolution();\n      }\n    }\n  }, [hasVoted, wasSubmitted, results.results, summary.quiz, poll.results.solution]);\n\n  const lang = useOldLang();\n\n  function renderResultOption(answer: ApiPollAnswer) {\n    return (\n      <PollOption\n        key={answer.option}\n        shouldAnimate={wasSubmitted || !canVote}\n        answer={answer}\n        voteResults={voteResults}\n        totalVoters={totalVoters}\n        maxVotersCount={maxVotersCount}\n        correctResults={correctResults}\n      />\n    );\n  }\n\n  function renderRecentVoters() {\n    return (\n      recentVoters.length > 0 && (\n        <div className=\"poll-recent-voters\">\n          <AvatarList\n            size=\"micro\"\n            peers={recentVoters}\n          />\n        </div>\n      )\n    );\n  }\n\n  return (\n    <div className=\"Poll\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"poll-question\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n          observeIntersectionForLoading,\n          observeIntersectionForPlaying,\n        })}\n      </div>\n      <div className=\"poll-type\">\n        {lang(getPollTypeString(summary))}\n        {renderRecentVoters()}\n        {closePeriod > 0 && canVote && (\n          <div ref={countdownRef} className=\"poll-countdown\">\n            <span>{formatMediaDuration(closePeriod)}</span>\n            <svg width=\"16px\" height=\"16px\">\n              <circle\n                ref={timerCircleRef}\n                cx=\"8\"\n                cy=\"8\"\n                r={TIMER_RADIUS}\n                className=\"poll-countdown-progress\"\n                transform=\"rotate(-90, 8, 8)\"\n                stroke-dasharray={TIMER_CIRCUMFERENCE}\n                stroke-dashoffset=\"0\"\n              />\n            </svg>\n          </div>\n        )}\n        {summary.quiz && poll.results.solution && !canVote && (\n          <Button\n            round\n            size=\"tiny\"\n            color=\"translucent\"\n            className=\"poll-quiz-help\"\n            onClick={showSolution}\n            ariaLabel=\"Show Solution\"\n          >\n            <Icon name=\"lamp\" />\n          </Button>\n        )}\n      </div>\n      {canVote && (\n        <div\n          className=\"poll-answers\"\n          onClick={stopPropagation}\n        >\n          {isMultiple\n            ? (\n              <CheckboxGroup\n                options={answers}\n                selected={chosenOptions}\n                onChange={handleCheckboxChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOptions={isSubmitting ? chosenOptions : undefined}\n                isRound\n              />\n            )\n            : (\n              <RadioGroup\n                name={`poll-${messageId}`}\n                options={answers}\n                onChange={handleRadioChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOption={isSubmitting ? chosenOptions[0] : undefined}\n              />\n            )}\n        </div>\n      )}\n      {!canVote && (\n        <div className=\"poll-results\">\n          {summary.answers.map(renderResultOption)}\n        </div>\n      )}\n      {!canViewResult && !isMultiple && (\n        <div className=\"poll-voters-count\">{getReadableVotersCount(lang, summary.quiz, results.totalVoters)}</div>\n      )}\n      {isMultiple && (\n        <Button\n          isText\n          disabled={chosenOptions.length === 0}\n          size=\"tiny\"\n          onClick={handleVoteClick}\n        >\n          {lang('PollSubmitVotes')}\n        </Button>\n      )}\n      {canViewResult && (\n        <Button\n          isText\n          size=\"tiny\"\n          onClick={handleViewResultsClick}\n        >\n          {lang('PollViewResults')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nfunction getPollTypeString(summary: ApiPoll['summary']) {\n  // When we just created the poll, some properties don't exist.\n  if (typeof summary.isPublic === 'undefined') {\n    return NBSP;\n  }\n\n  if (summary.closed) {\n    return 'FinalResults';\n  }\n\n  if (summary.quiz) {\n    return summary.isPublic ? 'QuizPoll' : 'AnonymousQuizPoll';\n  }\n\n  return summary.isPublic ? 'PublicPoll' : 'AnonymousPoll';\n}\n\nfunction getReadableVotersCount(lang: OldLangFn, isQuiz: true | undefined, count?: number) {\n  if (!count) {\n    return lang(isQuiz ? 'Chat.Quiz.TotalVotesEmpty' : 'Chat.Poll.TotalVotesResultEmpty');\n  }\n\n  return lang(isQuiz ? 'Answer' : 'Vote', count, 'i');\n}\n\nfunction stopPropagation(e: React.MouseEvent<HTMLDivElement>) {\n  e.stopPropagation();\n}\n\nexport default memo(Poll);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FPceNkgD\",\"inactive\":\"hruUWBuj\",\"mirrored\":\"GydRBA08\",\"effect\":\"WMMaWlOL\"};","import type { FC } from '../../../lib/teact/teact';\nimport { memo, useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getMediaThumbUri, getStickerMediaHash } from '../../../global/helpers';\nimport { IS_WEBM_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { getStickerDimensions } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport SensitiveContentConfirmModal from '../../common/SensitiveContentConfirmModal';\nimport StickerView from '../../common/StickerView';\nimport Portal from '../../ui/Portal';\n\nimport styles from './Sticker.module.scss';\n\n// https://github.com/telegramdesktop/tdesktop/blob/master/Telegram/SourceFiles/history/view/media/history_view_sticker.cpp#L42\nconst EFFECT_SIZE_MULTIPLIER = 1 + 0.245 * 2;\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldLoop?: boolean;\n  shouldPlayEffect?: boolean;\n  withEffect?: boolean;\n  isMediaNsfw?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForPlaying: ObserveFn;\n  onStopEffect?: VoidFunction;\n};\n\ntype StateProps = {\n  needsAgeVerification?: boolean;\n};\n\nconst Sticker: FC<OwnProps & StateProps> = ({\n  message,\n  shouldLoop,\n  shouldPlayEffect,\n  withEffect,\n  isMediaNsfw,\n  onStopEffect,\n  observeIntersection,\n  observeIntersectionForPlaying,\n  needsAgeVerification,\n}) => {\n  const { showNotification, openStickerSet, updateContentSettings, openAgeVerificationModal } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const ref = useRef<HTMLDivElement>();\n\n  const effectRef = useRef<HTMLDivElement>();\n\n  const sticker = message.content.sticker!;\n  const { stickerSetInfo, isVideo, hasEffect } = sticker;\n  const isMirrored = !message.isOutgoing;\n\n  const [isNsfwModalOpen, openNsfwModal, closeNsfwModal] = useFlag();\n  const [shouldAlwaysShowNsfw, setShouldAlwaysShowNsfw] = useState(false);\n\n  const shouldShowSpoiler = isMediaNsfw;\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(shouldShowSpoiler);\n\n  useEffect(() => {\n    if (shouldShowSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [shouldShowSpoiler]);\n\n  const handleNsfwConfirm = useLastCallback(() => {\n    closeNsfwModal();\n    hideSpoiler();\n\n    if (shouldAlwaysShowNsfw) {\n      updateContentSettings({ isSensitiveEnabled: true });\n    }\n  });\n\n  const mediaHash = sticker.isPreloadedGlobally ? undefined : (\n    getStickerMediaHash(sticker, isVideo && !IS_WEBM_SUPPORTED ? 'pictogram' : 'inline')\n  );\n\n  const canLoad = useIsIntersecting(ref, observeIntersection);\n  const canPlay = useIsIntersecting(ref, observeIntersectionForPlaying);\n  const mediaHashEffect = `sticker${sticker.id}?size=f`;\n  const effectBlobUrl = useMedia(\n    mediaHashEffect,\n    !canLoad || !hasEffect || !withEffect,\n    ApiMediaFormat.BlobUrl,\n  );\n  const [isPlayingEffect, startPlayingEffect, stopPlayingEffect] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(sticker);\n\n  const handleEffectEnded = useLastCallback(() => {\n    stopPlayingEffect();\n    onStopEffect?.();\n  });\n\n  useEffect(() => {\n    if (hasEffect && withEffect && canPlay && shouldPlayEffect) {\n      startPlayingEffect();\n    }\n  }, [hasEffect, canPlay, shouldPlayEffect, startPlayingEffect, withEffect]);\n\n  const shouldRenderEffect = hasEffect && withEffect && effectBlobUrl && isPlayingEffect;\n  useOverlayPosition({\n    anchorRef: ref,\n    overlayRef: effectRef,\n    isMirrored,\n    isDisabled: !shouldRenderEffect,\n  });\n\n  const openModal = useLastCallback(() => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isSpoilerShown) {\n      if (isMediaNsfw) {\n        if (needsAgeVerification) {\n          openAgeVerificationModal();\n          return;\n        }\n        openNsfwModal();\n        return;\n      }\n      hideSpoiler();\n      return;\n    }\n\n    if (hasEffect) {\n      if (isPlayingEffect || !withEffect) {\n        showNotification({\n          message: lang('PremiumStickerTooltip'),\n          action: {\n            action: 'openStickerSet',\n            payload: {\n              stickerSetInfo: sticker.stickerSetInfo,\n            },\n          },\n          actionText: lang('ViewAction'),\n        });\n        return;\n      } else if (withEffect) {\n        startPlayingEffect();\n        return;\n      }\n    }\n    openModal();\n  });\n\n  const isMemojiSticker = 'isMissing' in stickerSetInfo;\n  const { width, height } = getStickerDimensions(sticker, isMobile);\n  const className = buildClassName(\n    'media-inner',\n    styles.root,\n    isMemojiSticker && styles.inactive,\n    hasEffect && isMirrored && styles.mirrored,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      style={`width: ${width}px; height: ${height}px;`}\n      onClick={!isMemojiSticker ? handleClick : undefined}\n    >\n      <StickerView\n        containerRef={ref}\n        sticker={sticker}\n        fullMediaHash={mediaHash}\n        fullMediaClassName=\"full-media\"\n        size={width}\n        shouldLoop={shouldLoop}\n        noLoad={!canLoad}\n        noPlay={!canPlay}\n        withSharedAnimation\n      />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n        isNsfw={isMediaNsfw}\n      />\n      {shouldRenderEffect && (\n        <Portal>\n          <AnimatedSticker\n            ref={effectRef}\n            key={mediaHashEffect}\n            className={buildClassName(styles.effect, isMirrored && styles.mirrored)}\n            tgsUrl={effectBlobUrl}\n            size={width * EFFECT_SIZE_MULTIPLIER}\n            play\n            isLowPriority\n            noLoop\n            onEnded={handleEffectEnded}\n          />\n        </Portal>\n      )}\n      <SensitiveContentConfirmModal\n        isOpen={isNsfwModalOpen}\n        onClose={closeNsfwModal}\n        shouldAlwaysShow={shouldAlwaysShowNsfw}\n        onAlwaysShowChanged={setShouldAlwaysShowNsfw}\n        confirmHandler={handleNsfwConfirm}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const appConfig = global.appConfig;\n  const needsAgeVerification = appConfig.needAgeVideoVerification;\n\n  return {\n    needsAgeVerification,\n  };\n})(Sticker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <Icon name=\"story-expired\" className={styles.expiredIcon} />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiTypeStory,\n} from '../../../api/types';\n\nimport { selectPeerStory } from '../../../global/selectors';\n\nimport BaseStory from './BaseStory';\n\ninterface OwnProps {\n  message: ApiMessage;\n  isProtected?: boolean;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  isConnected?: boolean;\n}\n\nfunction Story({\n  message, story, isProtected, isConnected,\n}: OwnProps & StateProps) {\n  const { storyData } = message.content;\n\n  return (\n    <BaseStory\n      story={story || storyData}\n      isProtected={isProtected}\n      isConnected={isConnected}\n    />\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const { id, peerId } = message.content.storyData!;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    isConnected: global.connectionState === 'connectionStateReady',\n  };\n})(Story));\n","import { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiTypeStory, ApiUser,\n} from '../../../api/types';\n\nimport { getStoryMediaHash, getUserFirstOrLastName } from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport {\n  selectPeer,\n  selectPeerStories,\n  selectPeerStory,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\ninterface OwnProps {\n  message: ApiMessage;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  peer?: ApiPeer;\n  targetUser?: ApiUser;\n  isUnread?: boolean;\n}\n\nfunction StoryMention({\n  message, story, peer, isUnread, targetUser,\n}: OwnProps & StateProps) {\n  const { openStoryViewer } = getActions();\n\n  const lang = useOldLang();\n\n  const { storyData } = message.content;\n\n  const handleClick = useLastCallback(() => {\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  const isDeleted = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded\n    ? getStoryMediaHash(story, 'pictogram')\n    : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  useEnsureStory(storyData!.peerId, storyData!.id, story);\n\n  function getTitle() {\n    if (peer && 'isSelf' in peer && peer.isSelf) {\n      return isDeleted\n        ? lang('ExpiredStoryMentioned', getUserFirstOrLastName(targetUser))\n        : lang('StoryYouMentionedTitle', getUserFirstOrLastName(targetUser));\n    }\n\n    return isDeleted\n      ? lang('ExpiredStoryMention')\n      : lang('StoryMentionedTitle', getPeerTitle(lang, peer!));\n  }\n\n  return (\n    <div\n      className={buildClassName('action-message-story-mention', isUnread && 'is-unread', isLoaded && 'with-preview')}\n      tabIndex={0}\n      role=\"button\"\n      onClick={isLoaded ? handleClick : undefined}\n    >\n      {isLoaded && (\n        <span className=\"story-media-wrapper\">\n          {thumbUrl && (\n            <img src={thumbUrl} alt=\"\" className=\"story-media\" />\n          )}\n        </span>\n      )}\n\n      <span className=\"story-title\">{renderText(getTitle(), ['emoji', 'simple_markdown'])}</span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const { id, peerId } = message.content.storyData!;\n  const lastReadId = selectPeerStories(global, peerId)?.lastReadId;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    peer: selectPeer(global, peerId),\n    targetUser: selectUser(global, message.chatId),\n    isUnread: Boolean(lastReadId && lastReadId < id),\n  };\n})(StoryMention));\n","import {\n  memo, useLayoutEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiMediaTodo,\n  ApiMessage,\n  ApiPeer,\n} from '../../../api/types';\n\nimport { getPeerFullTitle, getPeerTitle } from '../../../global/helpers/peers';\nimport { selectIsCurrentUserPremium, selectSender, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\n\nimport './TodoList.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  todoList: ApiMediaTodo;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  isCurrentUserPremium: boolean;\n  isSynced?: boolean;\n};\n\nconst TodoList = ({\n  message,\n  todoList,\n  sender,\n  isCurrentUserPremium,\n  isSynced,\n}: OwnProps & StateProps) => {\n  const { toggleTodoCompleted, showNotification, requestConfetti } = getActions();\n  const { todo, completions } = todoList;\n  const { title, items, othersCanComplete } = todo;\n  const [completedTasks, setCompletedTasks] = useState<string[]>([]);\n  const completedTasksSet = useMemo(() => new Set(completedTasks), [completedTasks]);\n\n  const canToggle = !message.isScheduled && isCurrentUserPremium && isSynced;\n\n  useLayoutEffect(() => {\n    const completedIds = completions?.map((c) => c.itemId.toString()) || [];\n    setCompletedTasks(completedIds);\n  }, [completions]);\n\n  const lang = useLang();\n\n  const handleTaskLabelClick = useLastCallback((e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (!isCurrentUserPremium) {\n      showNotification({\n        message: lang('SubscribeToTelegramPremiumForToggleTask'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'todo' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n      return;\n    }\n  });\n\n  const handleTaskToggle = useLastCallback((newCompletedTasks: string[]) => {\n    const newCompletedId = newCompletedTasks.find((id) => !completedTasksSet.has(id));\n    const newIncompletedId = Array.from(completedTasksSet).find((id) => !newCompletedTasks.includes(id));\n\n    toggleTodoCompleted({\n      chatId: message.chatId,\n      messageId: message.id,\n      completedIds: newCompletedId ? [Number(newCompletedId)] : [],\n      incompletedIds: newIncompletedId ? [Number(newIncompletedId)] : [],\n    });\n\n    if (newCompletedTasks.length === items.length) {\n      requestConfetti({});\n    }\n  });\n  const isReadOnly = Boolean(message.forwardInfo) || (!othersCanComplete && !message.isOutgoing);\n  const isOutgoing = message.isOutgoing;\n\n  const tasks = useMemo(() => items.map((task) => {\n    const user = !othersCanComplete ? undefined : selectUser(getGlobal(),\n      completions?.find((c) => c.itemId === task.id)?.completedBy || '');\n    const subLabel = user ? getPeerFullTitle(lang, user) : undefined;\n    return {\n      label: renderTextWithEntities(task.title),\n      value: task.id.toString(),\n      user,\n      subLabel,\n    };\n  }), [items, othersCanComplete, completions, lang]);\n\n  const renderCheckBoxGroup = () => {\n    return (\n      <CheckboxGroup\n        options={tasks}\n        selected={completedTasks}\n        onChange={handleTaskToggle}\n        onClickLabel={!isCurrentUserPremium ? handleTaskLabelClick : undefined}\n        disabled={!canToggle}\n        isRound\n      />\n    );\n  };\n\n  const renderReadOnlyTodoList = () => {\n    return (\n      <div className=\"todo-list-items\">\n        {tasks.map((task) => (\n          <div\n            key={task.value}\n            className=\"todo-list-readonly-item\"\n          >\n            <div className=\"todo-readonly-item-checkbox\">\n              {completedTasksSet.has(task.value)\n                ? <Icon name=\"check\" />\n                : <div className=\"todo-item-bullet-point\" />}\n            </div>\n            <div\n              className={buildClassName(\n                'readonly-item-label',\n                completedTasksSet.has(task.value) && 'completed-label',\n              )}\n            >\n              {task.label}\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  const renderTodoListType = () => {\n    if (message.forwardInfo) {\n      return lang('TitleToDoList');\n    }\n\n    if (othersCanComplete) {\n      return lang('TitleGroupToDoList');\n    }\n\n    if (isOutgoing) {\n      return lang('TitleYourToDoList');\n    }\n\n    if (sender) {\n      return lang('TitleUserToDoList', { peer: getPeerTitle(lang, sender) }, { withNodes: true });\n    }\n\n    return lang('TitleToDoList');\n  };\n\n  return (\n    <div className=\"todo-list\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"todo-list-header\">\n        <div className=\"todo-list-title\">\n          {renderTextWithEntities(title)}\n        </div>\n        <div className=\"list-type\">\n          {renderTodoListType()}\n        </div>\n      </div>\n\n      <div className=\"todo-list-items\">\n        {isReadOnly ? renderReadOnlyTodoList() : renderCheckBoxGroup()}\n      </div>\n      <div className=\"completed-tasks-count\">\n        <AnimatedCounter text={\n          lang('DescriptionCompletedToDoTasks', {\n            number: completedTasks.length,\n            count: tasks.length,\n          })\n        }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const sender = selectSender(global, message);\n  return {\n    sender,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    isSynced: global.isSynced,\n  };\n},\n)(TodoList));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LaOdPURl\",\"backgroundWrapper\":\"zDnMa37m\",\"background\":\"EdXfeKWY\",\"stickerWrapper\":\"o_DYZEMV\"};","import { memo, useRef } from '@teact';\n\nimport type { ApiStarGiftUnique } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/browser/windowEnvironment.ts';\nimport buildClassName from '../../../util/buildClassName.ts';\nimport { getGiftAttributes } from '../../common/helpers/gifts';\n\nimport useFlag from '../../../hooks/useFlag.ts';\nimport { type ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport StickerView from '../../common/StickerView';\n\nimport styles from './WebPageUniqueGift.module.scss';\n\ntype OwnProps = {\n  gift: ApiStarGiftUnique;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst WebPageUniqueGift = ({\n  gift,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}: OwnProps) => {\n  const stickerRef = useRef<HTMLDivElement>();\n  const {\n    backdrop, model, pattern,\n  } = getGiftAttributes(gift)!;\n\n  const [isHover, markHover, unmarkHover] = useFlag();\n\n  const backgroundColors = [backdrop!.centerColor, backdrop!.edgeColor];\n\n  return (\n    <div\n      className={buildClassName('interactive-gift', styles.root)}\n      onClick={onClick}\n      onMouseEnter={!IS_TOUCH_ENV ? markHover : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? unmarkHover : undefined}\n    >\n      <div className={styles.backgroundWrapper}>\n        <RadialPatternBackground\n          className={styles.background}\n          backgroundColors={backgroundColors}\n          patternColor={backdrop!.patternColor}\n          patternIcon={pattern!.sticker}\n        />\n      </div>\n      <div ref={stickerRef} className={styles.stickerWrapper}>\n        <StickerView\n          containerRef={stickerRef}\n          sticker={model!.sticker}\n          size={STAR_GIFT_STICKER_SIZE}\n          shouldLoop={isHover}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n          observeIntersectionForLoading={observeIntersectionForLoading}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WebPageUniqueGift);\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiMessageWebPage, ApiTypeStory, ApiWebPage, ApiWebPageFull } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ThemeKey, type WebPageMediaSize } from '../../../types';\n\nimport { getPhotoFullDimensions } from '../../../global/helpers';\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { tryParseDeepLink } from '../../../util/deepLinkParser';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { getWebpageButtonLangKey } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\nimport WebPageUniqueGift from './WebPageUniqueGift';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst WEBPAGE_GIFT_TYPE = 'telegram_nft';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  messageWebPage: ApiMessageWebPage;\n  webPage: ApiWebPage;\n  message?: ApiMessage;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ThemeKey;\n  story?: ApiTypeStory;\n  shouldWarnAboutFiles?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  lastPlaybackTimestamp?: number;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onDocumentClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n};\ntype StateProps = {\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst WebPage: FC<OwnProps & StateProps> = ({\n  messageWebPage,\n  webPage,\n  message,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutFiles,\n  autoLoadFileMaxSizeMb,\n  lastPlaybackTimestamp,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onMediaClick,\n  onDocumentClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n}) => {\n  const { openUrl, openTelegramLink } = getActions();\n  const stickersRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const fullWebPage = webPage?.webpageType === 'full' ? webPage : undefined;\n\n  const { story: storyData, stickers } = fullWebPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, undefined, !hasCustomColor);\n\n  const linkTimestamp = useMemo(() => {\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage?.url);\n    if (!parsedLink || !('timestamp' in parsedLink)) return undefined;\n    return parsedLink.timestamp;\n  }, [webPage?.url]);\n\n  if (webPage?.webpageType !== 'full') return undefined;\n\n  const handleOpenTelegramLink = useLastCallback(() => {\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n  } = webPage;\n  const { mediaSize } = messageWebPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isGift = type === WEBPAGE_GIFT_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n\n  const resultType = stickers?.isEmoji ? 'telegram_emojiset' : type;\n  const quickButtonLangKey = !isExpiredStory ? getWebpageButtonLangKey(resultType) : undefined;\n  const quickButtonTitle = quickButtonLangKey && lang(quickButtonLangKey);\n\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    isSquarePhoto = getIsSmallPhoto(webPage, mediaSize);\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonTitle && 'with-quick-button',\n    isGift && 'with-gift',\n  );\n\n  function renderQuickButton(caption: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        noForcedUpperCase\n        onClick={handleOpenTelegramLink}\n      >\n        {caption}\n      </Button>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={oldLang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName(\n        'WebPage--content',\n        isStory && 'is-story',\n        isGift && 'is-gift',\n      )}\n      >\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {isGift && (\n          <WebPageUniqueGift\n            gift={webPage.gift!}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onClick={handleOpenTelegramLink}\n          />\n        )}\n        {isArticle && (\n          <div\n            className={buildClassName('WebPage-text', 'WebPage-text_interactive')}\n            onClick={() => openUrl({ url, shouldSkipModal: messageWebPage.isSafe })}\n          >\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && !isGift && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {photo && !isGift && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message?.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {video && (\n          <Video\n            video={video}\n            isOwn={message?.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            lastPlaybackTimestamp={lastPlaybackTimestamp || linkTimestamp}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {audio && (\n          <Audio\n            theme={theme}\n            message={message!}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={onDocumentClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutFiles={shouldWarnAboutFiles}\n          />\n        )}\n        {stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      {quickButtonTitle && renderQuickButton(quickButtonTitle)}\n    </PeerColorWrapper>\n  );\n};\n\nfunction getIsSmallPhoto(webPage: ApiWebPageFull, mediaSize?: WebPageMediaSize) {\n  if (!webPage?.photo) return false;\n  if (mediaSize === 'small') return true;\n  if (mediaSize === 'large') return false;\n\n  const { width, height } = getPhotoFullDimensions(webPage.photo) || {};\n  if (!width || !height) return false;\n\n  return width === height && !webPage.hasLargeMedia;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(WebPage));\n","import type { RegularLangKey } from '../../../../types/language';\n\n// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonLangKey(type?: string): RegularLangKey | undefined {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'ViewButtonRequestJoin';\n    case 'telegram_message':\n      return 'ViewButtonMessage';\n    case 'telegram_bot':\n      return 'ViewButtonBot';\n    case 'telegram_voicechat':\n      return 'ViewButtonVoiceChat';\n    case 'telegram_livestream':\n      return 'ViewButtonVoiceChatChannel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'ViewButtonGroup';\n    case 'telegram_channel':\n      return 'ViewButtonChannel';\n    case 'telegram_user':\n      return 'ViewButtonUser';\n    case 'telegram_botapp':\n      return 'ViewButtonBotApp';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'ViewButtonStory';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'ViewButtonBoost';\n    case 'telegram_stickerset':\n      return 'ViewButtonStickerset';\n    case 'telegram_emojiset':\n      return 'ViewButtonEmojiset';\n    case 'telegram_nft':\n      return 'ViewButtonGiftUnique';\n    default:\n      return undefined;\n  }\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatMember,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n  ApiThreadInfo,\n  ApiTopic,\n  ApiTypeStory,\n  ApiUser,\n  ApiWebPage,\n} from '../../../api/types';\nimport type { ActionPayloads } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ActiveEmojiInteraction,\n  ChatTranslatedMessages,\n  FocusDirection,\n  IAlbum,\n  MessageListType,\n  ScrollTargetPosition,\n  ThemeKey,\n  ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport type { OnIntersectPinnedMessage } from '../hooks/usePinnedMessage';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { EMOJI_STATUS_LOOP_LIMIT, MESSAGE_APPEARANCE_DELAY } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getIsDownloading,\n  getMainUsername,\n  getMessageContent,\n  getMessageCustomShape,\n  getMessageHtmlId,\n  getMessageSingleCustomEmoji,\n  getMessageSingleRegularEmoji,\n  getMessageWebPage,\n  hasMessageText,\n  hasMessageTtl,\n  isAnonymousForwardsChat,\n  isAnonymousOwnMessage,\n  isChatChannel,\n  isChatGroup,\n  isChatPublic,\n  isGeoLiveExpired,\n  isMessageLocal,\n  isMessageTranslatable,\n  isOwnMessage,\n  isReplyToMessage,\n  isSystemBot,\n} from '../../../global/helpers';\nimport { getPeerFullTitle } from '../../../global/helpers/peers';\nimport { getMessageReplyInfo, getStoryReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectActiveDownloads,\n  selectAnimatedEmoji,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectCanReplyToMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatTranslations,\n  selectCurrentMiddleSearch,\n  selectDefaultReaction,\n  selectForwardedSender,\n  selectFullWebPageFromMessage,\n  selectIsChatProtected,\n  selectIsChatRestricted,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectIsCurrentUserPremium,\n  selectIsDocumentGroupSelected,\n  selectIsInSelectMode,\n  selectIsMessageFocused,\n  selectIsMessageProtected,\n  selectIsMessageSelected,\n  selectMessageIdsByGroupId,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectPollFromMessage,\n  selectReplyMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectSender,\n  selectSenderFromHeader,\n  selectShouldDetectChatLanguage,\n  selectShouldLoopStickers,\n  selectTabState,\n  selectTheme,\n  selectThreadInfo,\n  selectTopicFromMessage,\n  selectUploadProgress,\n  selectUser,\n} from '../../../global/selectors';\nimport {\n  selectIsMediaNsfw,\n  selectMessageDownloadableMedia,\n  selectMessageLastPlaybackTimestamp,\n  selectMessageTimestampableDuration,\n} from '../../../global/selectors/media';\nimport { selectSharedSettings } from '../../../global/selectors/sharedState';\nimport { IS_ANDROID, IS_ELECTRON, IS_TRANSLATION_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport buildClassName from '../../../util/buildClassName';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getServerTime } from '../../../util/serverTime';\nimport stopEvent from '../../../util/stopEvent';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport { calculateDimensionsForMessageMedia, getStickerDimensions, REM } from '../../common/helpers/mediaDimensions';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\nimport renderText from '../../common/helpers/renderText';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\nimport { buildContentClassName } from './helpers/buildContentClassName';\nimport { calculateAlbumLayout } from './helpers/calculateAlbumLayout';\nimport getSingularPaidMedia from './helpers/getSingularPaidMedia';\nimport { calculateMediaDimensions, getMinMediaWidth, MIN_MEDIA_WIDTH_WITH_TEXT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useFlag from '../../../hooks/useFlag';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useMessageResizeObserver from '../../../hooks/useResizeMessageObserver';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useTextLanguage from '../../../hooks/useTextLanguage';\nimport useDetectChatLanguage from './hooks/useDetectChatLanguage';\nimport useFocusMessage from './hooks/useFocusMessage';\nimport useInnerHandlers from './hooks/useInnerHandlers';\nimport useMessageTranslation from './hooks/useMessageTranslation';\nimport useOuterHandlers from './hooks/useOuterHandlers';\n\nimport Audio from '../../common/Audio';\nimport Avatar from '../../common/Avatar';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Document from '../../common/Document';\nimport DotAnimation from '../../common/DotAnimation';\nimport EmbeddedMessage from '../../common/embedded/EmbeddedMessage';\nimport EmbeddedStory from '../../common/embedded/EmbeddedStory';\nimport FakeIcon from '../../common/FakeIcon';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport MessageText from '../../common/MessageText';\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport TopicChip from '../../common/TopicChip';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\nimport Album from './Album';\nimport AnimatedCustomEmoji from './AnimatedCustomEmoji';\nimport AnimatedEmoji from './AnimatedEmoji';\nimport CommentButton from './CommentButton';\nimport Contact from './Contact';\nimport ContextMenuContainer from './ContextMenuContainer.async';\nimport FactCheck from './FactCheck';\nimport Game from './Game';\nimport Giveaway from './Giveaway';\nimport InlineButtons from './InlineButtons';\nimport Invoice from './Invoice';\nimport InvoiceMediaPreview from './InvoiceMediaPreview';\nimport Location from './Location';\nimport MessageAppendix from './MessageAppendix';\nimport MessageEffect from './MessageEffect';\nimport MessageMeta from './MessageMeta';\nimport MessagePhoneCall from './MessagePhoneCall';\nimport PaidMediaOverlay from './PaidMediaOverlay';\nimport Photo from './Photo';\nimport Poll from './Poll';\nimport Reactions from './reactions/Reactions';\nimport RoundVideo from './RoundVideo';\nimport Sticker from './Sticker';\nimport Story from './Story';\nimport StoryMention from './StoryMention';\nimport TodoList from './TodoList';\nimport Video from './Video';\nimport WebPage from './WebPage';\n\nimport './Message.scss';\n\ntype MessagePositionProperties = {\n  isFirstInGroup: boolean;\n  isLastInGroup: boolean;\n  isFirstInDocumentGroup: boolean;\n  isLastInDocumentGroup: boolean;\n  isLastInList: boolean;\n};\n\ntype OwnProps =\n  {\n    message: ApiMessage;\n    album?: IAlbum;\n    noAvatars?: boolean;\n    withAvatar?: boolean;\n    withSenderName?: boolean;\n    threadId: ThreadId;\n    messageListType: MessageListType;\n    noComments: boolean;\n    noReplies: boolean;\n    appearanceOrder: number;\n    isJustAdded: boolean;\n    memoFirstUnreadIdRef?: { current: number | undefined };\n    getIsMessageListReady?: Signal<boolean>;\n    observeIntersectionForBottom?: ObserveFn;\n    observeIntersectionForLoading?: ObserveFn;\n    observeIntersectionForPlaying?: ObserveFn;\n    onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n  }\n  & MessagePositionProperties;\n\ntype StateProps = {\n  theme: ThemeKey;\n  forceSenderName?: boolean;\n  sender?: ApiPeer;\n  canShowSender: boolean;\n  originSender?: ApiPeer;\n  botSender?: ApiUser;\n  isThreadTop?: boolean;\n  shouldHideReply?: boolean;\n  replyMessage?: ApiMessage;\n  replyMessageSender?: ApiPeer;\n  replyMessageForwardSender?: ApiPeer;\n  replyMessageChat?: ApiChat;\n  isReplyPrivate?: boolean;\n  replyStory?: ApiTypeStory;\n  storySender?: ApiPeer;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  uploadProgress?: number;\n  isInDocumentGroup: boolean;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  focusedQuote?: string;\n  focusedQuoteOffset?: number;\n  noFocusHighlight?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n  isResizingContainer?: boolean;\n  isForwarding?: boolean;\n  isChatWithSelf?: boolean;\n  isRepliesChat?: boolean;\n  isAnonymousForwards?: boolean;\n  isChannel?: boolean;\n  isGroup?: boolean;\n  canReply?: boolean;\n  highlight?: string;\n  animatedEmoji?: string;\n  animatedCustomEmoji?: string;\n  hasActiveReactions?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  isGroupSelected?: boolean;\n  isDownloading?: boolean;\n  threadId?: ThreadId;\n  isPinnedList?: boolean;\n  isPinned?: boolean;\n  canAutoLoadMedia?: boolean;\n  canAutoPlayMedia?: boolean;\n  hasLinkedChat?: boolean;\n  shouldLoopStickers?: boolean;\n  autoLoadFileMaxSizeMb: number;\n  repliesThreadInfo?: ApiThreadInfo;\n  reactionMessage?: ApiMessage;\n  availableReactions?: ApiAvailableReaction[];\n  defaultReaction?: ApiReaction;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  hasUnreadReaction?: boolean;\n  isTranscribing?: boolean;\n  transcribedText?: string;\n  isTranscriptionError?: boolean;\n  isPremium: boolean;\n  senderAdminMember?: ApiChatMember;\n  messageTopic?: ApiTopic;\n  hasTopicChip?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  areTranslationsEnabled?: boolean;\n  shouldDetectChatLanguage?: boolean;\n  requestedTranslationLanguage?: string;\n  requestedChatTranslationLanguage?: string;\n  withAnimatedEffects?: boolean;\n  webPageStory?: ApiTypeStory;\n  isConnected: boolean;\n  isLoadingComments?: boolean;\n  shouldWarnAboutFiles?: boolean;\n  senderBoosts?: number;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  canTranscribeVoice?: boolean;\n  viaBusinessBot?: ApiUser;\n  effect?: ApiAvailableEffect;\n  poll?: ApiPoll;\n  webPage?: ApiWebPage;\n  maxTimestamp?: number;\n  lastPlaybackTimestamp?: number;\n  paidMessageStars?: number;\n  isChatWithUser?: boolean;\n  isAccountFrozen?: boolean;\n  minFutureTime?: number;\n  isMediaNsfw?: boolean;\n  isReplyMediaNsfw?: boolean;\n};\n\ntype MetaPosition =\n  'in-text'\n  | 'standalone'\n  | 'none';\ntype ReactionsPosition =\n  'inside'\n  | 'outside'\n  | 'none';\ntype QuickReactionPosition =\n  'in-content'\n  | 'in-meta';\n\nconst NBSP = '\\u00A0';\nconst NO_MEDIA_CORNERS_THRESHOLD = 18;\nconst QUICK_REACTION_SIZE = 1.75 * REM;\nconst EXTRA_SPACE_FOR_REACTIONS = 2.25 * REM;\nconst MAX_REASON_LENGTH = 200;\n\nconst Message: FC<OwnProps & StateProps> = ({\n  message,\n  observeIntersectionForBottom,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  album,\n  noAvatars,\n  withAvatar,\n  withSenderName,\n  noComments,\n  noReplies,\n  appearanceOrder,\n  isJustAdded,\n  isFirstInGroup,\n  isPremium,\n  isLastInGroup,\n  isFirstInDocumentGroup,\n  isLastInDocumentGroup,\n  isTranscribing,\n  transcribedText,\n  isLastInList,\n  theme,\n  forceSenderName,\n  sender,\n  canShowSender,\n  originSender,\n  botSender,\n  isThreadTop,\n  shouldHideReply,\n  replyMessage,\n  replyMessageSender,\n  replyMessageForwardSender,\n  replyMessageChat,\n  replyStory,\n  isReplyPrivate,\n  storySender,\n  outgoingStatus,\n  uploadProgress,\n  isInDocumentGroup,\n  isLoadingComments,\n  isProtected,\n  isChatProtected,\n  isFocused,\n  focusDirection,\n  focusedQuote,\n  focusedQuoteOffset,\n  noFocusHighlight,\n  scrollTargetPosition,\n  isResizingContainer,\n  isForwarding,\n  isChatWithSelf,\n  isRepliesChat,\n  isAnonymousForwards,\n  isChannel,\n  isGroup,\n  canReply,\n  highlight,\n  animatedEmoji,\n  animatedCustomEmoji,\n  hasActiveReactions,\n  hasLinkedChat,\n  isInSelectMode,\n  isSelected,\n  isGroupSelected,\n  threadId,\n  reactionMessage,\n  availableReactions,\n  defaultReaction,\n  activeEmojiInteractions,\n  messageListType,\n  isPinnedList,\n  isPinned,\n  isDownloading,\n  canAutoLoadMedia,\n  canAutoPlayMedia,\n  shouldLoopStickers,\n  autoLoadFileMaxSizeMb,\n  repliesThreadInfo,\n  hasUnreadReaction,\n  memoFirstUnreadIdRef,\n  senderAdminMember,\n  messageTopic,\n  hasTopicChip,\n  chatTranslations,\n  areTranslationsEnabled,\n  shouldDetectChatLanguage,\n  requestedTranslationLanguage,\n  requestedChatTranslationLanguage,\n  withAnimatedEffects,\n  webPageStory,\n  isConnected,\n  getIsMessageListReady,\n  shouldWarnAboutFiles,\n  senderBoosts,\n  tags,\n  canTranscribeVoice,\n  viaBusinessBot,\n  effect,\n  poll,\n  maxTimestamp,\n  lastPlaybackTimestamp,\n  isMediaNsfw,\n  isReplyMediaNsfw,\n  paidMessageStars,\n  isChatWithUser,\n  isAccountFrozen,\n  minFutureTime,\n  webPage,\n  onIntersectPinnedMessage,\n}) => {\n  const {\n    toggleMessageSelection,\n    clickBotInlineButton,\n    clickSuggestedMessageButton,\n    rejectSuggestedPost,\n    openSuggestedPostApprovalModal,\n    disableContextMenuHint,\n    animateUnreadReaction,\n    focusLastMessage,\n    markMentionsRead,\n  } = getActions();\n\n  const ref = useRef<HTMLDivElement>();\n  const bottomMarkerRef = useRef<HTMLDivElement>();\n  const quickReactionRef = useRef<HTMLDivElement>();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [isTranscriptionHidden, setTranscriptionHidden] = useState(false);\n  const [isPlayingSnapAnimation, setIsPlayingSnapAnimation] = useState(false);\n  const [isPlayingDeleteAnimation, setIsPlayingDeleteAnimation] = useState(false);\n  const [shouldPlayEffect, requestEffect, hideEffect] = useFlag();\n  const [isDeclineDialogOpen, openDeclineDialog, closeDeclineDialog] = useFlag();\n  const [declineReason, setDeclineReason] = useState('');\n  const { isMobile, isTouchScreen } = useAppLayout();\n\n  useOnIntersect(bottomMarkerRef, observeIntersectionForBottom);\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    contextMenuTarget,\n    handleBeforeContextMenu,\n    handleContextMenu: onContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(\n    ref,\n    (isTouchScreen && isInSelectMode) || isAccountFrozen,\n    !IS_ELECTRON,\n    IS_ANDROID,\n    getIsMessageListReady,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      disableContextMenuHint();\n    }\n  }, [isContextMenuOpen, disableContextMenuHint]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * MESSAGE_APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  useShowTransition({\n    ref,\n    isOpen: isShown || isJustAdded,\n    noMountTransition: noAppearanceAnimation && !isJustAdded,\n    className: false,\n  });\n\n  const {\n    id: messageId, chatId, forwardInfo, viaBotId, isTranscriptionError, factCheck,\n  } = message;\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      const id = album ? album.mainMessage.id : messageId;\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [id] });\n    }\n  });\n\n  const isLocal = isMessageLocal(message);\n  const isOwn = isOwnMessage(message);\n  const isScheduled = messageListType === 'scheduled' || message.isScheduled;\n  const hasMessageReply = isReplyToMessage(message) && !shouldHideReply;\n\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo, audio,\n    voice, document, sticker, contact,\n    invoice, location,\n    action, game, storyData, giveaway,\n    giveawayResults, todo,\n  } = getMessageContent(message);\n\n  const messageReplyInfo = getMessageReplyInfo(message);\n  const storyReplyInfo = getStoryReplyInfo(message);\n\n  const withVoiceTranscription = Boolean(!isTranscriptionHidden && (isTranscriptionError || transcribedText));\n\n  const hasStoryReply = Boolean(storyReplyInfo);\n  const hasThread = Boolean(repliesThreadInfo) && messageListType === 'thread';\n  const isCustomShape = !withVoiceTranscription && getMessageCustomShape(message);\n  const hasAnimatedEmoji = isCustomShape && (animatedEmoji || animatedCustomEmoji);\n  const hasReactions = reactionMessage?.reactions && !areReactionsEmpty(reactionMessage.reactions);\n  const asForwarded = (\n    forwardInfo\n    && (!isChatWithSelf || isScheduled)\n    && !isRepliesChat\n    && !forwardInfo.isLinkedChannelPost\n    && !isAnonymousForwards\n    && !botSender\n  ) || Boolean(storyData && !storyData.isMention);\n  const canShowSenderBoosts = Boolean(senderBoosts) && !asForwarded && isFirstInGroup;\n  const isStoryMention = storyData?.isMention;\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isAlbum = Boolean(album)\n    && (\n      (album.isPaidMedia && paidMedia!.extendedMedia.length > 1)\n      || album.messages.length > 1\n    ) && !album.messages.some((msg) => Object.keys(msg.content).length === 0);\n  const isInDocumentGroupNotFirst = isInDocumentGroup && !isFirstInDocumentGroup;\n  const isInDocumentGroupNotLast = isInDocumentGroup && !isLastInDocumentGroup;\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n  const canShowActionButton = (\n    !(isContextMenuShown || isInSelectMode || isForwarding)\n    && !isInDocumentGroupNotLast\n    && !isStoryMention\n    && !((sticker || hasAnimatedEmoji) && asForwarded)\n  );\n  const canForward = isChannel && !isScheduled && message.isForwardingAllowed\n    && !isChatProtected;\n  const canFocus = Boolean(isPinnedList\n    || (forwardInfo\n      && (forwardInfo.isChannelPost || isChatWithSelf || isRepliesChat || isAnonymousForwards)\n      && forwardInfo.fromMessageId\n    ));\n\n  const hasFactCheck = Boolean(factCheck?.text);\n\n  const hasForwardedCustomShape = asForwarded && isCustomShape;\n  const hasSubheader = hasTopicChip || hasMessageReply || hasStoryReply || hasForwardedCustomShape;\n\n  const selectMessage = useLastCallback((e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => {\n    if (isAccountFrozen) return;\n    toggleMessageSelection({\n      messageId,\n      groupedId,\n      ...(e?.shiftKey && { withShift: true }),\n      ...(isAlbum && { childMessageIds: album.messages.map(({ id }) => id) }),\n    });\n  });\n\n  const messageSender = canShowSender ? sender : undefined;\n\n  const shouldPreferOriginSender = forwardInfo\n    && (isChatWithSelf || isRepliesChat || isAnonymousForwards || !messageSender);\n  const avatarPeer = shouldPreferOriginSender ? originSender : messageSender;\n\n  const messageColorPeer = asForwarded ? originSender : sender;\n  const noUserColors = isOwn && !isCustomShape;\n\n  const senderPeer = (forwardInfo || storyData) ? originSender : messageSender;\n  const hasTtl = hasMessageTtl(message);\n\n  const {\n    handleMouseDown,\n    handleClick,\n    handleContextMenu,\n    handleDoubleClick,\n    handleContentDoubleClick,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  } = useOuterHandlers(\n    selectMessage,\n    ref,\n    messageId,\n    Boolean(isInSelectMode),\n    Boolean(canReply),\n    Boolean(isProtected),\n    onContextMenu,\n    handleBeforeContextMenu,\n    chatId,\n    isContextMenuShown,\n    quickReactionRef,\n    isInDocumentGroupNotLast,\n    getIsMessageListReady,\n  );\n\n  const {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleMediaClick,\n    handleDocumentClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll,\n    handleTopicChipClick,\n    handleStoryClick,\n  } = useInnerHandlers({\n    lang: oldLang,\n    selectMessage,\n    message,\n    webPage,\n    chatId,\n    threadId,\n    isInDocumentGroup,\n    asForwarded,\n    isScheduled,\n    album,\n    avatarPeer,\n    senderPeer,\n    botSender,\n    messageTopic,\n    isTranslatingChat: Boolean(requestedChatTranslationLanguage),\n    story: replyStory && 'content' in replyStory ? replyStory : undefined,\n    isReplyPrivate,\n    isRepliesChat,\n    isSavedMessages: isChatWithSelf,\n    lastPlaybackTimestamp,\n  });\n\n  const handleEffectClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    requestEffect();\n  });\n\n  useEffect(() => {\n    if (!isLastInList) {\n      return;\n    }\n\n    if (withVoiceTranscription && transcribedText) {\n      focusLastMessage();\n    }\n  }, [focusLastMessage, isLastInList, transcribedText, withVoiceTranscription]);\n\n  useEffect(() => {\n    const element = ref.current;\n    const isPartialAlbumDelete = message.isInAlbum && album?.messages.some((msg) => !msg.isDeleting);\n    if (message.isDeleting && element && !isPartialAlbumDelete) {\n      if (animateSnap(element)) {\n        setIsPlayingSnapAnimation(true);\n      } else {\n        setIsPlayingDeleteAnimation(true);\n      }\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- Only start animation on `isDeleting` change\n  }, [message.isDeleting]);\n\n  const textMessage = album?.hasMultipleCaptions ? undefined : (album?.captionMessage || message);\n  const hasTextContent = textMessage && hasMessageText(textMessage);\n  const hasText = hasTextContent || hasFactCheck;\n\n  const containerClassName = buildClassName(\n    'Message message-list-item',\n    isFirstInGroup && 'first-in-group',\n    isProtected && 'hide-on-print',\n    isProtected && !hasTextContent ? 'is-protected' : 'allow-selection',\n    isLastInGroup && 'last-in-group',\n    isFirstInDocumentGroup && 'first-in-document-group',\n    isLastInDocumentGroup && 'last-in-document-group',\n    isLastInList && 'last-in-list',\n    isOwn && 'own',\n    Boolean(message.viewsCount) && 'has-views',\n    message.isEdited && 'was-edited',\n    hasMessageReply && 'has-reply',\n    isContextMenuOpen && 'has-menu-open',\n    isFocused && !noFocusHighlight && 'focused',\n    isForwarding && 'is-forwarding',\n    isPlayingDeleteAnimation && 'is-deleting',\n    isPlayingSnapAnimation && 'is-dissolving',\n    isInDocumentGroup && 'is-in-document-group',\n    isAlbum && 'is-album',\n    message.hasUnreadMention && 'has-unread-mention',\n    isSelected && 'is-selected',\n    isInSelectMode && 'is-in-selection-mode',\n    isThreadTop && !withAvatar && 'is-thread-top',\n    Boolean(message.inlineButtons) && 'has-inline-buttons',\n    isSwiped && 'is-swiped',\n    isJustAdded && 'is-just-added',\n    (hasActiveReactions || shouldPlayEffect) && 'has-active-effect',\n    isStoryMention && 'is-story-mention',\n    !canShowActionButton && 'no-action-button',\n  );\n\n  const text = textMessage && getMessageContent(textMessage).text;\n  const isInvertedMedia = Boolean(message.isInvertedMedia);\n\n  const { replyToMsgId, replyToPeerId } = messageReplyInfo || {};\n  const { peerId: storyReplyPeerId, storyId: storyReplyId } = storyReplyInfo || {};\n\n  useEffect(() => {\n    if ((sticker?.hasEffect || effect) && ((\n      memoFirstUnreadIdRef?.current && messageId >= memoFirstUnreadIdRef.current\n    ) || isLocal)) {\n      requestEffect();\n    }\n  }, [effect, isLocal, memoFirstUnreadIdRef, messageId, sticker?.hasEffect]);\n\n  const detectedLanguage = useTextLanguage(\n    text?.text,\n    !(areTranslationsEnabled && shouldDetectChatLanguage),\n    getIsMessageListReady,\n  );\n  useDetectChatLanguage(message, detectedLanguage, !shouldDetectChatLanguage, getIsMessageListReady);\n\n  const shouldTranslate = isMessageTranslatable(message, !requestedChatTranslationLanguage);\n  const { isPending: isTranslationPending, translatedText } = useMessageTranslation(\n    chatTranslations, chatId, shouldTranslate ? messageId : undefined, requestedTranslationLanguage,\n  );\n  // Used to display previous result while new one is loading\n  const previousTranslatedText = usePreviousDeprecated(translatedText, Boolean(shouldTranslate));\n\n  const currentTranslatedText = translatedText || previousTranslatedText;\n\n  const phoneCall = action?.type === 'phoneCall' ? action : undefined;\n\n  const isMediaWithCommentButton = (repliesThreadInfo || (hasLinkedChat && isChannel && isLocal))\n    && !isInDocumentGroupNotLast\n    && messageListType === 'thread'\n    && !noComments;\n  const withCommentButton = repliesThreadInfo?.isCommentsInfo\n    && !isInDocumentGroupNotLast && messageListType === 'thread'\n    && !noComments;\n  const withQuickReactionButton = !isTouchScreen && !phoneCall && !isInSelectMode && defaultReaction\n    && !isInDocumentGroupNotLast && !isStoryMention && !hasTtl && !isAccountFrozen;\n\n  const hasOutsideReactions = !withVoiceTranscription && hasReactions\n    && (isCustomShape || ((photo || video || storyData || (location?.mediaType === 'geo')) && !hasText));\n\n  const contentClassName = buildContentClassName(message, album, {\n    poll,\n    webPage,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread: hasThread && !noComments,\n    forceSenderName,\n    hasCommentCounter: hasThread && repliesThreadInfo.messagesCount > 0,\n    hasCommentButton: withCommentButton,\n    hasActionButton: canForward || canFocus,\n    hasReactions,\n    isGeoLiveActive: location?.mediaType === 'geoLive' && !isGeoLiveExpired(message),\n    withVoiceTranscription,\n    peerColorClass: getPeerColorClass(messageColorPeer, noUserColors, true),\n    hasOutsideReactions,\n  });\n\n  const withAppendix = contentClassName.includes('has-appendix');\n  const emojiSize = getCustomEmojiSize(message.emojiOnlyCount);\n\n  const paidMessageStarsInMeta = !isChatWithUser\n    ? (isAlbum && paidMessageStars ? album.messages.length * paidMessageStars : paidMessageStars)\n    : undefined;\n\n  let metaPosition!: MetaPosition;\n  if (phoneCall) {\n    metaPosition = 'none';\n  } else if (isInDocumentGroupNotLast) {\n    metaPosition = 'none';\n  } else if (hasText && !webPage && !emojiSize && !isInvertedMedia) {\n    metaPosition = 'in-text';\n  } else if (isInvertedMedia && !emojiSize && (hasFactCheck || webPage)) {\n    metaPosition = 'in-text';\n  } else {\n    metaPosition = 'standalone';\n  }\n\n  let reactionsPosition!: ReactionsPosition;\n  if (hasReactions) {\n    if (hasOutsideReactions) {\n      reactionsPosition = 'outside';\n    } else if (asForwarded) {\n      metaPosition = 'standalone';\n      reactionsPosition = 'inside';\n    } else {\n      reactionsPosition = 'inside';\n    }\n  } else {\n    reactionsPosition = 'none';\n  }\n\n  const quickReactionPosition: QuickReactionPosition = isCustomShape ? 'in-meta' : 'in-content';\n\n  useEnsureMessage(\n    replyToPeerId || chatId,\n    replyToMsgId,\n    replyMessage,\n    message.id,\n    shouldHideReply || isReplyPrivate,\n  );\n\n  useEnsureStory(\n    storyReplyPeerId || chatId,\n    storyReplyId,\n    replyStory,\n  );\n\n  useFocusMessage({\n    elementRef: ref,\n    chatId,\n    isFocused,\n    focusDirection,\n    noFocusHighlight,\n    isResizingContainer,\n    isJustAdded,\n    isQuote: Boolean(focusedQuote),\n    scrollTargetPosition,\n  });\n\n  const viaBusinessBotTitle = viaBusinessBot ? getPeerFullTitle(oldLang, viaBusinessBot) : undefined;\n\n  const canShowPostAuthor = !message.senderId;\n  const signature = viaBusinessBotTitle || (canShowPostAuthor && message.postAuthorTitle)\n    || ((asForwarded || isChatWithSelf) && forwardInfo?.postAuthorTitle)\n    || undefined;\n\n  useMessageResizeObserver(ref, isLastInList);\n\n  useEffect(() => {\n    const bottomMarker = bottomMarkerRef.current;\n    if (!bottomMarker || !isElementInViewport(bottomMarker)) return;\n\n    if (hasUnreadReaction) {\n      animateUnreadReaction({ messageIds: [messageId] });\n    }\n\n    let unreadMentionIds: number[] = [];\n    if (message.hasUnreadMention) {\n      unreadMentionIds = [messageId];\n    }\n\n    if (album) {\n      unreadMentionIds = album.messages.filter((msg) => msg.hasUnreadMention).map((msg) => msg.id);\n    }\n\n    if (unreadMentionIds.length) {\n      markMentionsRead({ chatId, messageIds: unreadMentionIds });\n    }\n  }, [hasUnreadReaction, album, chatId, messageId, animateUnreadReaction, message.hasUnreadMention]);\n\n  const albumLayout = useMemo(() => {\n    return isAlbum\n      ? calculateAlbumLayout(isOwn, Boolean(noAvatars), album, isMobile)\n      : undefined;\n  }, [isAlbum, isOwn, noAvatars, album, isMobile]);\n\n  const extraPadding = asForwarded && !isCustomShape ? 28 : 0;\n\n  const sizeCalculations = useMemo(() => {\n    let calculatedWidth;\n    let contentWidth: number | undefined;\n    let noMediaCorners = false;\n    let style = '';\n    let reactionsMaxWidth;\n\n    if (!isAlbum && (photo || video || invoice?.extendedMedia)) {\n      let width: number | undefined;\n      if (photo || video) {\n        const media = (photo || video);\n        if (media && !isRoundVideo) {\n          width = calculateMediaDimensions({\n            media,\n            isOwn,\n            asForwarded,\n            noAvatars,\n            isMobile,\n          }).width;\n        }\n      } else if (invoice?.extendedMedia && (\n        invoice.extendedMedia.width && invoice.extendedMedia.height\n      )) {\n        const { width: previewWidth, height: previewHeight } = invoice.extendedMedia;\n        width = calculateDimensionsForMessageMedia({\n          width: previewWidth,\n          height: previewHeight,\n          fromOwnMessage: isOwn,\n          asForwarded,\n          noAvatars,\n          isMobile,\n        }).width;\n      }\n\n      if (width) {\n        if (width < MIN_MEDIA_WIDTH_WITH_TEXT) {\n          contentWidth = width;\n        }\n        calculatedWidth = Math.max(getMinMediaWidth(text?.text, isMediaWithCommentButton), width);\n        if (!asForwarded && invoice?.extendedMedia && calculatedWidth - width > NO_MEDIA_CORNERS_THRESHOLD) {\n          noMediaCorners = true;\n        }\n      }\n    } else if (albumLayout) {\n      calculatedWidth = Math.max(\n        getMinMediaWidth(text?.text, isMediaWithCommentButton), albumLayout.containerStyle.width,\n      );\n      if (calculatedWidth - albumLayout.containerStyle.width > NO_MEDIA_CORNERS_THRESHOLD) {\n        noMediaCorners = true;\n      }\n    }\n\n    if (calculatedWidth) {\n      style = `width: ${calculatedWidth}px`;\n      reactionsMaxWidth = calculatedWidth + EXTRA_SPACE_FOR_REACTIONS;\n    } else if (sticker && !hasSubheader) {\n      const { width } = getStickerDimensions(sticker, isMobile);\n      style = `width: ${width + extraPadding}px`;\n      reactionsMaxWidth = width + EXTRA_SPACE_FOR_REACTIONS;\n    }\n\n    return {\n      contentWidth, noMediaCorners, style, reactionsMaxWidth,\n    };\n  }, [\n    albumLayout, asForwarded, extraPadding, hasSubheader, invoice?.extendedMedia, isAlbum, isMediaWithCommentButton,\n    isMobile, isOwn, noAvatars, photo, sticker, text?.text, video, isRoundVideo,\n  ]);\n\n  const {\n    contentWidth, noMediaCorners, style, reactionsMaxWidth,\n  } = sizeCalculations;\n\n  function renderMessageText(isForAnimation?: boolean) {\n    if (!textMessage) return undefined;\n    return (\n      <MessageText\n        messageOrStory={textMessage}\n        translatedText={requestedTranslationLanguage ? currentTranslatedText : undefined}\n        isForAnimation={isForAnimation}\n        focusedQuote={focusedQuote}\n        focusedQuoteOffset={focusedQuoteOffset}\n        emojiSize={emojiSize}\n        highlight={highlight}\n        isProtected={isProtected}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        withTranslucentThumbs={isCustomShape}\n        isInSelectMode={isInSelectMode}\n        canBeEmpty={hasFactCheck}\n        maxTimestamp={maxTimestamp}\n        threadId={threadId}\n      />\n    );\n  }\n\n  const renderQuickReactionButton = useCallback(() => {\n    if (!defaultReaction) return undefined;\n\n    return (\n      <div\n        className={buildClassName(\n          'quick-reaction',\n          'no-selection',\n          isQuickReactionVisible && !hasActiveReactions && 'visible',\n        )}\n        onClick={handleSendQuickReaction}\n        ref={quickReactionRef}\n      >\n        <ReactionStaticEmoji\n          reaction={defaultReaction}\n          size={QUICK_REACTION_SIZE}\n          availableReactions={availableReactions}\n          observeIntersection={observeIntersectionForPlaying}\n        />\n      </div>\n    );\n  }, [\n    hasActiveReactions, availableReactions, defaultReaction, handleSendQuickReaction, isQuickReactionVisible,\n    observeIntersectionForPlaying,\n  ]);\n\n  function renderReactionsAndMeta() {\n    const meta = (\n      <MessageMeta\n        message={message}\n        isPinned={isPinned}\n        withFullDate={isChatWithSelf && !isOwn}\n        noReplies={noReplies}\n        repliesThreadInfo={repliesThreadInfo}\n        outgoingStatus={outgoingStatus}\n        signature={signature}\n        withReactionOffset={reactionsPosition === 'inside'}\n        renderQuickReactionButton={\n          withQuickReactionButton && quickReactionPosition === 'in-meta' ? renderQuickReactionButton : undefined\n        }\n        availableReactions={availableReactions}\n        isTranslated={Boolean(requestedTranslationLanguage ? currentTranslatedText : undefined)}\n        effectEmoji={effect?.emoticon}\n        onClick={handleMetaClick}\n        onEffectClick={handleEffectClick}\n        onTranslationClick={handleTranslationClick}\n        onOpenThread={handleOpenThread}\n        paidMessageStars={paidMessageStarsInMeta}\n      />\n    );\n\n    if (reactionsPosition !== 'inside') {\n      return meta;\n    }\n\n    return (\n      <Reactions\n        message={reactionMessage!}\n        threadId={threadId}\n        metaChildren={meta}\n        observeIntersection={observeIntersectionForPlaying}\n        noRecentReactors={isChannel}\n        tags={tags}\n        isCurrentUserPremium={isPremium}\n        isAccountFrozen={isAccountFrozen}\n      />\n    );\n  }\n\n  function renderContent() {\n    const className = buildClassName(\n      'content-inner',\n      asForwarded && 'forwarded-message',\n      hasForwardedCustomShape && 'forwarded-custom-shape',\n      hasSubheader && 'with-subheader',\n      noMediaCorners && 'no-media-corners',\n    );\n    const hasCustomAppendix = isLastInGroup\n      && (!hasText || (isInvertedMedia && !hasFactCheck && !hasReactions)) && !withCommentButton;\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n    const shouldReadMedia = !hasTtl || !isOwn || isChatWithSelf;\n\n    return (\n      <div className={className} onDoubleClick={handleContentDoubleClick} dir=\"auto\">\n        {!asForwarded && shouldRenderSenderName() && renderSenderName()}\n        {hasSubheader && (\n          <div className=\"message-subheader\">\n            {hasTopicChip && (\n              <TopicChip\n                topic={messageTopic}\n                onClick={handleTopicChipClick}\n                className=\"message-topic\"\n              />\n            )}\n            {hasForwardedCustomShape && (\n              <div className=\"forward-custom-shape-subheader\">\n                <div className=\"message-title\">\n                  {renderForwardTitle()}\n                </div>\n                {renderSenderName(true, true)}\n              </div>\n            )}\n            {hasMessageReply && (\n              <EmbeddedMessage\n                message={replyMessage}\n                replyInfo={messageReplyInfo}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                sender={replyMessageSender}\n                senderChat={replyMessageChat}\n                forwardSender={replyMessageForwardSender}\n                chatTranslations={chatTranslations}\n                isMediaNsfw={isReplyMediaNsfw}\n                requestedChatTranslationLanguage={requestedChatTranslationLanguage}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                observeIntersectionForPlaying={observeIntersectionForPlaying}\n                onClick={handleReplyClick}\n              />\n            )}\n            {hasStoryReply && (\n              <EmbeddedStory\n                story={replyStory}\n                sender={storySender}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                onClick={handleStoryClick}\n              />\n            )}\n          </div>\n        )}\n        {sticker && observeIntersectionForLoading && observeIntersectionForPlaying && (\n          <Sticker\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            shouldLoop={shouldLoopStickers}\n            shouldPlayEffect={shouldPlayEffect}\n            withEffect={withAnimatedEffects}\n            isMediaNsfw={isMediaNsfw}\n            onStopEffect={hideEffect}\n          />\n        )}\n        {hasAnimatedEmoji && animatedCustomEmoji && (\n          <AnimatedCustomEmoji\n            customEmojiId={animatedCustomEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {hasAnimatedEmoji && animatedEmoji && (\n          <AnimatedEmoji\n            emoji={animatedEmoji}\n            withEffects={withAnimatedEffects && isChatWithUser && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {withAnimatedEffects && effect && !isLocal && (\n          <MessageEffect\n            shouldPlay={shouldPlayEffect}\n            messageId={message.id}\n            isMirrored={!message.isOutgoing}\n            effect={effect}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onStop={hideEffect}\n          />\n        )}\n        {phoneCall && (\n          <MessagePhoneCall\n            message={message}\n            phoneCall={phoneCall}\n            chatId={chatId}\n          />\n        )}\n        {!isAlbum && isRoundVideo && !withVoiceTranscription && (\n          <RoundVideo\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            isDownloading={isDownloading}\n            onReadMedia={shouldReadMedia ? handleReadMedia : undefined}\n            onHideTranscription={setTranscriptionHidden}\n            isTranscriptionError={isTranscriptionError}\n            isTranscribed={Boolean(transcribedText)}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribing={isTranscribing}\n          />\n        )}\n        {(audio || voice || withVoiceTranscription) && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            noAvatars={noAvatars}\n            onPlay={handleAudioPlay}\n            onReadMedia={voice && shouldReadMedia ? handleReadMedia : undefined}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            isTranscribing={isTranscribing}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribed={Boolean(transcribedText)}\n            isTranscriptionError={isTranscriptionError}\n            canDownload={!isProtected}\n            onHideTranscription={setTranscriptionHidden}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n          />\n        )}\n        {document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            onMediaClick={handleDocumentClick}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            shouldWarnAboutFiles={shouldWarnAboutFiles}\n          />\n        )}\n        {storyData && !isStoryMention && (\n          <Story\n            message={message}\n            isProtected={isProtected}\n          />\n        )}\n        {isStoryMention && <StoryMention message={message} />}\n        {contact && (\n          <Contact contact={contact} noUserColors={isOwn} />\n        )}\n        {poll && (\n          <Poll message={message} poll={poll} onSendVote={handleVoteSend} />\n        )}\n        {todo && (\n          <TodoList message={message} todoList={todo} />\n        )}\n        {(giveaway || giveawayResults) && (\n          <Giveaway message={message} />\n        )}\n        {game && (\n          <Game\n            message={message}\n            canAutoLoadMedia={canAutoLoadMedia}\n          />\n        )}\n        {invoice?.extendedMedia && (\n          <InvoiceMediaPreview\n            message={message}\n            isConnected={isConnected}\n          />\n        )}\n\n        {withVoiceTranscription && (\n          <p\n            className={buildClassName(\n              'transcription',\n              !isTranscriptionHidden && isTranscriptionError && 'transcription-error',\n            )}\n            dir=\"auto\"\n          >\n            {(isTranscriptionError ? oldLang('NoWordsRecognized') : (\n              isTranscribing && transcribedText ? <DotAnimation content={transcribedText} /> : transcribedText\n            ))}\n          </p>\n        )}\n\n        {isInvertedMedia && renderInvertedMediaContent(hasCustomAppendix)}\n\n        {!isInvertedMedia && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {hasText && !hasAnimatedEmoji && (\n              <div className={textContentClass} dir=\"auto\">\n                {renderMessageText()}\n                {isTranslationPending && (\n                  <div className=\"translation-animation\">\n                    <div className=\"text-loading\">\n                      {renderMessageText(true)}\n                    </div>\n                  </div>\n                )}\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {metaPosition === 'in-text' && renderReactionsAndMeta()}\n              </div>\n            )}\n            {renderWebPage()}\n          </>\n        )}\n\n        {invoice && !invoice.extendedMedia && (\n          <Invoice\n            message={message}\n            shouldAffectAppendix={hasCustomAppendix && !hasReactions}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            forcedWidth={contentWidth}\n          />\n        )}\n        {location && (\n          <Location\n            message={message}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            peer={sender}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderInvertedMediaContent(hasCustomAppendix: boolean) {\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n    );\n    const footerClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n\n    const hasMediaAfterText = isAlbum || (!isAlbum && photo) || (!isAlbum && video && !isRoundVideo);\n    const hasContentAfterText = hasMediaAfterText || (!hasAnimatedEmoji && hasFactCheck);\n    const isMetaInText = metaPosition === 'in-text';\n\n    return (\n      <>\n        {renderWebPage()}\n        {hasText && !hasAnimatedEmoji && (\n          <div className={textContentClass} dir=\"auto\">\n            {renderMessageText()}\n            {isTranslationPending && (\n              <div className=\"translation-animation\">\n                <div className=\"text-loading\">\n                  {renderMessageText(true)}\n                </div>\n              </div>\n            )}\n            {!hasContentAfterText && isMetaInText && renderReactionsAndMeta()}\n          </div>\n        )}\n\n        {hasContentAfterText && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {!hasAnimatedEmoji && (\n              <div className={footerClass} dir=\"auto\">\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {isMetaInText && renderReactionsAndMeta()}\n              </div>\n            )}\n          </>\n        )}\n\n      </>\n    );\n  }\n\n  function renderWebPage() {\n    const messageWebPage = getMessageWebPage(message);\n    if (!messageWebPage || !webPage) return undefined;\n    return (\n      <WebPage\n        messageWebPage={messageWebPage}\n        webPage={webPage}\n        message={message}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        noAvatars={noAvatars}\n        canAutoLoad={canAutoLoadMedia}\n        canAutoPlay={canAutoPlayMedia}\n        asForwarded={asForwarded}\n        isDownloading={isDownloading}\n        isProtected={isProtected}\n        theme={theme}\n        story={webPageStory}\n        isConnected={isConnected}\n        lastPlaybackTimestamp={lastPlaybackTimestamp}\n        backgroundEmojiId={messageColorPeer?.color?.backgroundEmojiId}\n        shouldWarnAboutFiles={shouldWarnAboutFiles}\n        autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n        onAudioPlay={handleAudioPlay}\n        onMediaClick={handleMediaClick}\n        onDocumentClick={handleDocumentClick}\n        onCancelMediaTransfer={handleCancelUpload}\n      />\n    );\n  }\n\n  function renderInvertibleMediaContent(hasCustomAppendix: boolean) {\n    const content = (\n      <>\n        {isAlbum && observeIntersectionForLoading && (\n          <Album\n            album={album}\n            albumLayout={albumLayout!}\n            observeIntersection={observeIntersectionForLoading}\n            isOwn={isOwn}\n            isProtected={isProtected}\n            hasCustomAppendix={hasCustomAppendix}\n            onMediaClick={handleAlbumMediaClick}\n          />\n        )}\n        {!isAlbum && photo && (\n          <Photo\n            messageText={text?.text}\n            photo={photo}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            uploadProgress={uploadProgress}\n            shouldAffectAppendix={hasCustomAppendix}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            theme={theme}\n            isMediaNsfw={isMediaNsfw}\n            forcedWidth={contentWidth}\n            onClick={handlePhotoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n        {!isAlbum && video && !isRoundVideo && (\n          <Video\n            video={video}\n            isOwn={isOwn}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            forcedWidth={contentWidth}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            canAutoPlay={canAutoPlayMedia}\n            uploadProgress={uploadProgress}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            isMediaNsfw={isMediaNsfw}\n            lastPlaybackTimestamp={lastPlaybackTimestamp}\n            onClick={handleVideoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n      </>\n    );\n\n    if (paidMedia) {\n      return (\n        <PaidMediaOverlay chatId={chatId} messageId={messageId} paidMedia={paidMedia} isOutgoing={isOwn}>\n          {content}\n        </PaidMediaOverlay>\n      );\n    }\n\n    return content;\n  }\n\n  function shouldRenderSenderName() {\n    const media = photo || video || location || paidMedia;\n    return !(isCustomShape && !viaBotId) && (\n      (withSenderName && (!media || hasTopicChip)) || asForwarded || viaBotId || forceSenderName\n    ) && !isInDocumentGroupNotFirst && !(hasMessageReply && isCustomShape);\n  }\n\n  function renderForwardTitle() {\n    return (\n      <span className=\"forward-title-container\">\n        {asForwarded && (\n          <Icon name={forwardInfo?.hiddenUserName ? 'forward' : 'share-filled'} />\n        )}\n        {asForwarded && (\n          <span className=\"forward-title\">\n            {oldLang('ForwardedFrom')}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  const handleSuggestedMessageButton = useLastCallback((payload: ActionPayloads['clickBotInlineButton']) => {\n    if (payload.button.type !== 'suggestedMessage') return;\n    if (payload.button.buttonType === 'approve') {\n      openSuggestedPostApprovalModal({\n        chatId,\n        messageId: message.id,\n      });\n      return;\n    }\n\n    if (payload.button.buttonType === 'decline') {\n      openDeclineDialog();\n      return;\n    }\n\n    clickSuggestedMessageButton({\n      ...payload,\n      button: payload.button,\n    });\n  });\n\n  const handleDeclineReasonChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setDeclineReason(e.target.value);\n  });\n\n  const handleDeclineConfirm = useLastCallback(() => {\n    rejectSuggestedPost({\n      chatId,\n      messageId: message.id,\n      rejectComment: declineReason.trim() || undefined,\n    });\n    closeDeclineDialog();\n    setDeclineReason('');\n  });\n\n  function renderSenderName(\n    shouldSkipRenderForwardTitle: boolean = false, shouldSkipRenderAdminTitle: boolean = false,\n  ) {\n    let senderTitle;\n    let senderColor;\n    if (senderPeer && !(isCustomShape && viaBotId)) {\n      senderTitle = getPeerFullTitle(oldLang, senderPeer);\n    } else if (forwardInfo?.hiddenUserName) {\n      senderTitle = forwardInfo.hiddenUserName;\n    } else if (storyData && originSender) {\n      senderTitle = getPeerFullTitle(oldLang, originSender);\n    }\n    const senderEmojiStatus = senderPeer && 'emojiStatus' in senderPeer && senderPeer.emojiStatus;\n    const senderIsPremium = senderPeer && 'isPremium' in senderPeer && senderPeer.isPremium;\n\n    const shouldRenderForwardAvatar = asForwarded && senderPeer;\n    const hasBotSenderUsername = botSender?.hasUsername;\n    return (\n      <div className=\"message-title\" dir=\"ltr\">\n        {(senderTitle || asForwarded) ? (\n          <span\n            className={buildClassName(\n              'message-title-name-container',\n              forwardInfo?.hiddenUserName ? 'sender-hidden' : 'interactive',\n              senderColor,\n            )}\n            dir=\"ltr\"\n          >\n            {!shouldSkipRenderForwardTitle && renderForwardTitle()}\n            <span className=\"message-title-name\">\n              {storyData && <Icon name=\"play-story\" />}\n              {shouldRenderForwardAvatar && (\n                <Avatar\n                  className=\"forward-avatar\"\n                  peer={senderPeer}\n                  size=\"micro\"\n                />\n              )}\n              <span\n                className=\"sender-title\"\n                onClick={handleSenderClick}\n              >\n                {senderTitle ? renderText(senderTitle) : (asForwarded ? NBSP : undefined)}\n              </span>\n              {!asForwarded && senderEmojiStatus && (\n                <CustomEmoji\n                  documentId={senderEmojiStatus.documentId}\n                  className=\"no-selection\"\n                  loopLimit={EMOJI_STATUS_LOOP_LIMIT}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                />\n              )}\n              {!asForwarded && !senderEmojiStatus && senderIsPremium && <StarIcon />}\n              {senderPeer?.fakeType && <FakeIcon fakeType={senderPeer.fakeType} />}\n            </span>\n          </span>\n        ) : !botSender ? (\n          NBSP\n        ) : undefined}\n        {botSender?.hasUsername && (\n          <span className=\"interactive\">\n            <span className=\"via\">{oldLang('ViaBot')}</span>\n            <span\n              className=\"sender-title\"\n              onClick={handleViaBotClick}\n            >\n              {renderText(`@${getMainUsername(botSender)}`)}\n            </span>\n          </span>\n        )}\n        <div className=\"title-spacer\" />\n        {!shouldSkipRenderAdminTitle && !hasBotSenderUsername ? (forwardInfo?.isLinkedChannelPost ? (\n          <span className=\"admin-title\" dir=\"auto\">{oldLang('DiscussChannel')}</span>\n        ) : message.postAuthorTitle && isGroup && !asForwarded ? (\n          <span className=\"admin-title\" dir=\"auto\">{message.postAuthorTitle}</span>\n        ) : senderAdminMember && !asForwarded && !viaBotId ? (\n          <span className=\"admin-title\" dir=\"auto\">\n            {senderAdminMember.customTitle || oldLang(\n              senderAdminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin',\n            )}\n          </span>\n        ) : undefined) : undefined}\n        {canShowSenderBoosts && (\n          <span className=\"sender-boosts\" aria-hidden>\n            <Icon name={senderBoosts > 1 ? 'boosts' : 'boost'} />\n            {senderBoosts > 1 ? senderBoosts : undefined}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  const forwardAuthor = isGroup && asForwarded ? message.postAuthorTitle : undefined;\n  const shouldRenderSuggestedPostButtons = message.suggestedPostInfo\n    && !message.isOutgoing && !message.suggestedPostInfo.isAccepted && !message.suggestedPostInfo.isRejected;\n\n  const isSuggestedPostExpired = useMemo(() => {\n    if (!message.suggestedPostInfo?.scheduleDate || !minFutureTime) return false;\n    const now = getServerTime();\n    return message.suggestedPostInfo.scheduleDate <= now + minFutureTime;\n  }, [message.suggestedPostInfo, minFutureTime]);\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={containerClassName}\n      data-message-id={messageId}\n      onCopy={isProtected ? stopEvent : undefined}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n      onDoubleClick={handleDoubleClick}\n      onMouseEnter={isInDocumentGroupNotLast ? handleDocumentGroupMouseEnter : undefined}\n      onMouseMove={withQuickReactionButton ? handleMouseMove : undefined}\n      onMouseLeave={(withQuickReactionButton || isInDocumentGroupNotLast) ? handleMouseLeave : undefined}\n    >\n      <div\n        ref={bottomMarkerRef}\n        className=\"bottom-marker\"\n        data-message-id={messageId}\n        data-last-message-id={album ? album.messages[album.messages.length - 1].id : undefined}\n        data-album-main-id={album ? album.mainMessage.id : undefined}\n        data-has-unread-mention={message.hasUnreadMention || undefined}\n        data-has-unread-reaction={hasUnreadReaction || undefined}\n        data-is-pinned={isPinned || undefined}\n        data-should-update-views={message.viewsCount !== undefined}\n      />\n      {!isInDocumentGroup && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {isLastInDocumentGroup && (\n        <div\n          className={buildClassName(\n            'message-select-control group-select no-selection', isGroupSelected && 'is-selected',\n          )}\n          onClick={handleDocumentGroupSelectAll}\n        >\n          {isGroupSelected && (\n            <Icon name=\"select\" />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName('message-content-wrapper',\n          contentClassName.includes('text') && 'can-select-text',\n          contentClassName.includes('giveaway') && 'giveaway-result-content')}\n      >\n        <div\n          className={contentClassName}\n          style={style}\n          dir=\"auto\"\n        >\n          {asForwarded && !isInDocumentGroupNotFirst && (\n            <>\n              {shouldRenderSenderName() && renderSenderName()}\n              {forwardAuthor && <span className=\"admin-title\" dir=\"auto\">{forwardAuthor}</span>}\n            </>\n          )}\n          {renderContent()}\n          {!isInDocumentGroupNotLast && metaPosition === 'standalone' && !isStoryMention && renderReactionsAndMeta()}\n          {canShowActionButton && (\n            <div className={buildClassName(\n              'message-action-buttons',\n              isLoadingComments && 'message-action-buttons-shown',\n            )}\n            >\n              {withCommentButton && isCustomShape && (\n                <CommentButton\n                  threadInfo={repliesThreadInfo}\n                  disabled={noComments}\n                  isLoading={isLoadingComments}\n                  isCustomShape\n                  asActionButton\n                />\n              )}\n              {canForward && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel={oldLang('lng_context_forward_msg')}\n                  onClick={isLastInDocumentGroup ? handleGroupForward : handleForward}\n                >\n                  <Icon name=\"share-filled\" />\n                </Button>\n              )}\n              {canFocus && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel=\"Focus message\"\n                  onClick={isPinnedList ? handleFocus : handleFocusForwarded}\n                >\n                  <Icon name=\"arrow-right\" />\n                </Button>\n              )}\n            </div>\n          )}\n          {withCommentButton && !(canShowActionButton && isCustomShape) && (\n            <CommentButton\n              threadInfo={repliesThreadInfo}\n              disabled={noComments}\n              isLoading={isLoadingComments}\n            />\n          )}\n          {withAppendix && <MessageAppendix isOwn={isOwn} />}\n          {withQuickReactionButton && quickReactionPosition === 'in-content' && renderQuickReactionButton()}\n        </div>\n        {message.inlineButtons && (\n          <InlineButtons message={message} onClick={clickBotInlineButton} />\n        )}\n        {shouldRenderSuggestedPostButtons && (\n          <InlineButtons\n            message={{\n              ...message,\n              inlineButtons: [\n                [\n                  {\n                    type: 'suggestedMessage',\n                    buttonType: 'decline',\n                    text: lang('SuggestedPostDecline'),\n                  },\n                  {\n                    type: 'suggestedMessage',\n                    buttonType: 'approve',\n                    text: lang('SuggestedPostApprove'),\n                    disabled: isSuggestedPostExpired,\n                  },\n                ],\n                [\n                  {\n                    type: 'suggestedMessage',\n                    buttonType: 'suggestChanges',\n                    text: lang('SuggestedPostSuggestChanges'),\n                  },\n                ],\n              ],\n            }}\n            onClick={handleSuggestedMessageButton}\n          />\n        )}\n        {reactionsPosition === 'outside' && !isStoryMention && (\n          <Reactions\n            message={reactionMessage!}\n            threadId={threadId}\n            isOutside\n            isCurrentUserPremium={isPremium}\n            maxWidth={reactionsMaxWidth}\n            observeIntersection={observeIntersectionForPlaying}\n            noRecentReactors={isChannel}\n            tags={tags}\n            isAccountFrozen={isAccountFrozen}\n          />\n        )}\n      </div>\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          targetHref={contextMenuTarget?.matches('a[href]') ? (contextMenuTarget as HTMLAnchorElement).href : undefined}\n          message={message}\n          album={album}\n          messageListType={messageListType}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          repliesThreadInfo={repliesThreadInfo}\n          noReplies={noReplies}\n          detectedLanguage={detectedLanguage}\n        />\n      )}\n      {isDeclineDialogOpen && (\n        <ConfirmDialog\n          isOpen={isDeclineDialogOpen}\n          onClose={closeDeclineDialog}\n          title={lang('SuggestedPostDecline')}\n          confirmLabel={lang('SuggestedPostDecline')}\n          confirmHandler={handleDeclineConfirm}\n          confirmIsDestructive\n        >\n          <div className=\"decline-dialog-question\">\n            {renderText(lang('DeclinePostDialogQuestion', {\n              sender: sender ? getPeerFullTitle(oldLang, sender) : '',\n            }, { withNodes: true, withMarkdown: true }))}\n          </div>\n          <InputText\n            placeholder={lang('DeclineReasonPlaceholder')}\n            value={declineReason}\n            onChange={handleDeclineReasonChange}\n            maxLength={MAX_REASON_LENGTH}\n          />\n        </ConfirmDialog>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): StateProps => {\n    const {\n      focusedMessage, forwardMessages, activeReactions, activeEmojiInteractions,\n      loadingThread,\n    } = selectTabState(global);\n    const {\n      message, album, withSenderName, withAvatar, threadId, messageListType, isLastInDocumentGroup, isFirstInGroup,\n    } = ownProps;\n    const {\n      id, chatId, viaBotId, isOutgoing, forwardInfo, transcriptionId, isPinned, viaBusinessBotId, effectId,\n      paidMessageStars,\n    } = message;\n\n    const webPage = selectFullWebPageFromMessage(global, message);\n\n    const { shouldWarnAboutFiles } = selectSharedSettings(global);\n    const isChatWithUser = isUserId(chatId);\n\n    const chat = selectChat(global, chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isSystemBotChat = isSystemBot(chatId);\n    const isAnonymousForwards = isAnonymousForwardsChat(chatId);\n    const isChannel = chat && isChatChannel(chat);\n    const isGroup = chat && isChatGroup(chat);\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const webPageStoryData = webPage?.story;\n    const webPageStory = webPageStoryData\n      ? selectPeerStory(global, webPageStoryData.peerId, webPageStoryData.id)\n      : undefined;\n\n    const isForwarding = forwardMessages.messageIds && forwardMessages.messageIds.includes(id);\n    const forceSenderName = !isChatWithSelf && isAnonymousOwnMessage(message);\n    const canShowSender = withSenderName || withAvatar || forceSenderName;\n    const sender = selectSender(global, message);\n    const originSender = selectForwardedSender(global, message);\n    const botSender = viaBotId ? selectUser(global, viaBotId) : undefined;\n    const senderAdminMember = sender?.id && isGroup\n      ? chatFullInfo?.adminMembersById?.[sender?.id]\n      : undefined;\n\n    const isThreadTop = message.id === threadId;\n\n    const { replyToMsgId, replyToPeerId, replyFrom } = getMessageReplyInfo(message) || {};\n    const { peerId: storyReplyPeerId, storyId: storyReplyId } = getStoryReplyInfo(message) || {};\n\n    const shouldHideReply = replyToMsgId && replyToMsgId === threadId;\n    const replyMessage = selectReplyMessage(global, message);\n    const forwardHeader = forwardInfo || replyFrom;\n    const replyMessageSender = replyMessage ? selectSender(global, replyMessage)\n      : forwardHeader && !isSystemBotChat && !isAnonymousForwards\n        ? selectSenderFromHeader(global, forwardHeader) : undefined;\n    const replyMessageForwardSender = replyMessage && selectForwardedSender(global, replyMessage);\n    const replyMessageChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n    const isReplyPrivate = !isSystemBotChat && !isAnonymousForwards && replyMessageChat\n      && !isChatPublic(replyMessageChat)\n      && (replyMessageChat.isNotJoined || selectIsChatRestricted(global, replyMessageChat.id));\n    const isReplyToTopicStart = replyMessage?.content.action?.type === 'topicCreate';\n    const replyStory = storyReplyId && storyReplyPeerId\n      ? selectPeerStory(global, storyReplyPeerId, storyReplyId)\n      : undefined;\n    const storySender = storyReplyPeerId ? selectPeer(global, storyReplyPeerId) : undefined;\n\n    const uploadProgress = selectUploadProgress(global, message);\n    const isFocused = messageListType === 'thread' && (\n      album\n        ? album.messages.some((m) => selectIsMessageFocused(global, m, threadId))\n        : selectIsMessageFocused(global, message, threadId)\n    );\n\n    const {\n      direction: focusDirection, noHighlight: noFocusHighlight, isResizingContainer,\n      quote: focusedQuote, quoteOffset: focusedQuoteOffset, scrollTargetPosition,\n    } = (isFocused && focusedMessage) || {};\n\n    const middleSearch = selectCurrentMiddleSearch(global);\n    const highlight = middleSearch?.results?.query\n      && `${middleSearch.isHashtag ? '#' : ''}${middleSearch.results.query}`;\n\n    const singleEmoji = getMessageSingleRegularEmoji(message);\n    const animatedEmoji = singleEmoji && selectAnimatedEmoji(global, singleEmoji) ? singleEmoji : undefined;\n    const animatedCustomEmoji = getMessageSingleCustomEmoji(message);\n\n    let isSelected: boolean;\n    if (album?.messages) {\n      isSelected = album.messages.every(({ id: messageId }) => selectIsMessageSelected(global, messageId));\n    } else {\n      isSelected = selectIsMessageSelected(global, id);\n    }\n\n    const canReply = messageListType === 'thread' && selectCanReplyToMessage(global, message, threadId);\n    const activeDownloads = selectActiveDownloads(global);\n    const downloadableMedia = selectMessageDownloadableMedia(global, message);\n    const isDownloading = downloadableMedia && getIsDownloading(activeDownloads, downloadableMedia);\n\n    const repliesThreadInfo = selectThreadInfo(global, chatId, album?.commentsMessage?.id || id);\n\n    const isInDocumentGroup = Boolean(message.groupedId) && !message.isInAlbum;\n    const documentGroupFirstMessageId = isInDocumentGroup\n      ? selectMessageIdsByGroupId(global, chatId, message.groupedId!)![0]\n      : undefined;\n    const reactionMessage = isInDocumentGroup ? (\n      isLastInDocumentGroup ? selectChatMessage(global, chatId, documentGroupFirstMessageId!) : undefined\n    ) : message;\n\n    const hasUnreadReaction = chat?.unreadReactions?.includes(message.id);\n\n    const hasTopicChip = threadId === MAIN_THREAD_ID && chat?.isForum && isFirstInGroup;\n    const messageTopic = hasTopicChip ? selectTopicFromMessage(global, message) : undefined;\n\n    const chatTranslations = selectChatTranslations(global, chatId);\n\n    const requestedTranslationLanguage = selectRequestedMessageTranslationLanguage(global, chatId, message.id);\n    const requestedChatTranslationLanguage = selectRequestedChatTranslationLanguage(global, chatId);\n\n    const areTranslationsEnabled = IS_TRANSLATION_SUPPORTED && global.settings.byKey.canTranslate\n      && !requestedChatTranslationLanguage; // Stop separate language detection if chat translation is requested\n\n    const isConnected = global.connectionState === 'connectionStateReady';\n\n    const hasActiveReactions = Boolean(reactionMessage && activeReactions[getMessageKey(reactionMessage)]?.length);\n\n    const isPremium = selectIsCurrentUserPremium(global);\n    const senderBoosts = sender && selectIsChatWithSelf(global, sender.id)\n      ? (chatFullInfo?.boostsApplied ?? message.senderBoosts) : message.senderBoosts;\n\n    const chatLevel = chat?.boostLevel || 0;\n    const transcribeMinLevel = global.appConfig.groupTranscribeLevelMin;\n    const canTranscribeVoice = isPremium || Boolean(transcribeMinLevel && chatLevel >= transcribeMinLevel);\n\n    const viaBusinessBot = viaBusinessBotId ? selectUser(global, viaBusinessBotId) : undefined;\n\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n\n    const poll = selectPollFromMessage(global, message);\n\n    const maxTimestamp = selectMessageTimestampableDuration(global, message);\n\n    const lastPlaybackTimestamp = selectMessageLastPlaybackTimestamp(global, chatId, message.id);\n    const isAccountFrozen = selectIsCurrentUserFrozen(global);\n\n    const minFutureTime = global.appConfig.starsSuggestedPostFutureMin;\n\n    const isMediaNsfw = selectIsMediaNsfw(global, message);\n    const isReplyMediaNsfw = replyMessage && selectIsMediaNsfw(global, replyMessage);\n\n    return {\n      theme: selectTheme(global),\n      forceSenderName,\n      sender,\n      canShowSender,\n      originSender,\n      botSender,\n      shouldHideReply: shouldHideReply || isReplyToTopicStart,\n      isThreadTop,\n      replyMessage,\n      replyMessageSender,\n      replyMessageForwardSender,\n      replyMessageChat,\n      replyStory,\n      isReplyPrivate,\n      storySender,\n      isInDocumentGroup,\n      isProtected: selectIsMessageProtected(global, message),\n      isChatProtected: selectIsChatProtected(global, chatId),\n      isFocused,\n      isForwarding,\n      reactionMessage,\n      isChatWithSelf,\n      isRepliesChat: isSystemBotChat,\n      isAnonymousForwards,\n      isChannel,\n      isGroup,\n      canReply,\n      highlight,\n      animatedEmoji,\n      animatedCustomEmoji,\n      isInSelectMode: selectIsInSelectMode(global),\n      isSelected,\n      isGroupSelected: (\n        Boolean(message.groupedId)\n        && !message.isInAlbum\n        && selectIsDocumentGroupSelected(global, chatId, message.groupedId)\n      ),\n      threadId,\n      isDownloading,\n      isPinnedList: messageListType === 'pinned',\n      isPinned,\n      canAutoLoadMedia: selectCanAutoLoadMedia(global, message),\n      canAutoPlayMedia: selectCanAutoPlayMedia(global, message),\n      autoLoadFileMaxSizeMb: global.settings.byKey.autoLoadFileMaxSizeMb,\n      shouldLoopStickers: selectShouldLoopStickers(global),\n      repliesThreadInfo,\n      availableReactions: global.reactions.availableReactions,\n      defaultReaction: isMessageLocal(message) || messageListType === 'scheduled'\n        ? undefined : selectDefaultReaction(global, chatId),\n      hasActiveReactions,\n      activeEmojiInteractions,\n      hasUnreadReaction,\n      isTranscribing: transcriptionId !== undefined && global.transcriptions[transcriptionId]?.isPending,\n      transcribedText: transcriptionId !== undefined ? global.transcriptions[transcriptionId]?.text : undefined,\n      isPremium,\n      senderAdminMember,\n      messageTopic,\n      hasTopicChip,\n      chatTranslations,\n      areTranslationsEnabled,\n      shouldDetectChatLanguage: selectShouldDetectChatLanguage(global, chatId),\n      requestedTranslationLanguage,\n      requestedChatTranslationLanguage,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      withAnimatedEffects: selectPerformanceSettingsValue(global, 'stickerEffects'),\n      webPageStory,\n      isConnected,\n      isLoadingComments: repliesThreadInfo?.isCommentsInfo\n        && loadingThread?.loadingChatId === repliesThreadInfo?.originChannelId\n        && loadingThread?.loadingMessageId === repliesThreadInfo?.originMessageId,\n      shouldWarnAboutFiles,\n      ...(isOutgoing && { outgoingStatus: selectOutgoingStatus(global, message, messageListType === 'scheduled') }),\n      ...(typeof uploadProgress === 'number' && { uploadProgress }),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n        isResizingContainer,\n        focusedQuote,\n        focusedQuoteOffset,\n        scrollTargetPosition,\n      }),\n      senderBoosts,\n      tags: global.savedReactionTags?.byKey,\n      canTranscribeVoice,\n      viaBusinessBot,\n      minFutureTime,\n      effect,\n      poll,\n      maxTimestamp,\n      lastPlaybackTimestamp,\n      paidMessageStars,\n      isChatWithUser,\n      isAccountFrozen,\n      isMediaNsfw,\n      isReplyMediaNsfw,\n      webPage,\n    };\n  },\n)(Message));\n","import { getActions } from '../../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiStory, ApiTopic, ApiUser,\n  ApiWebPage,\n} from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IAlbum, ThreadId } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\nimport { MediaViewerOrigin } from '../../../../types';\n\nimport { getMessagePhoto, getWebPagePhoto, getWebPageVideo } from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport { tryParseDeepLink } from '../../../../util/deepLinkParser';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useInnerHandlers({\n  lang,\n  selectMessage,\n  message,\n  webPage,\n  chatId,\n  threadId,\n  isInDocumentGroup,\n  asForwarded,\n  isScheduled,\n  album,\n  senderPeer,\n  botSender,\n  messageTopic,\n  isTranslatingChat,\n  story,\n  isReplyPrivate,\n  isRepliesChat,\n  isSavedMessages,\n  lastPlaybackTimestamp,\n}: {\n  lang: OldLangFn;\n  selectMessage: (e: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void;\n  message: ApiMessage;\n  webPage?: ApiWebPage;\n  chatId: string;\n  threadId: ThreadId;\n  isInDocumentGroup: boolean;\n  asForwarded?: boolean;\n  isScheduled?: boolean;\n  album?: IAlbum;\n  avatarPeer?: ApiPeer;\n  senderPeer?: ApiPeer;\n  botSender?: ApiUser;\n  messageTopic?: ApiTopic;\n  isTranslatingChat?: boolean;\n  story?: ApiStory;\n  isReplyPrivate?: boolean;\n  isRepliesChat?: boolean;\n  isSavedMessages?: boolean;\n  lastPlaybackTimestamp?: number;\n}) {\n  const {\n    openChat, showNotification, focusMessage, openMediaViewer, openAudioPlayer,\n    markMessagesRead, cancelUploadMedia, sendPollVote, openForwardMenu,\n    openChatLanguageModal, openThread, openStoryViewer, searchChatMediaMessages,\n  } = getActions();\n\n  const {\n    id: messageId, forwardInfo, groupedId, content: { paidMedia, video },\n  } = message;\n\n  const {\n    replyToMsgId, replyToPeerId, replyToTopId, isQuote, quoteText, quoteOffset,\n  } = getMessageReplyInfo(message) || {};\n\n  const handleSenderClick = useLastCallback(() => {\n    if (!senderPeer) {\n      showNotification({ message: lang('HidAccount') });\n\n      return;\n    }\n\n    if (asForwarded && forwardInfo?.channelPostId) {\n      focusMessage({ chatId: senderPeer.id, messageId: forwardInfo.channelPostId });\n    } else {\n      openChat({ id: senderPeer.id });\n    }\n  });\n\n  const handleViaBotClick = useLastCallback(() => {\n    if (!botSender) {\n      return;\n    }\n\n    openChat({ id: botSender.id });\n  });\n\n  const handleReplyClick = useLastCallback((): void => {\n    if (!replyToMsgId || isReplyPrivate) {\n      showNotification({\n        message: isQuote ? lang('QuotePrivate') : lang('ReplyPrivate'),\n      });\n      return;\n    }\n\n    if (isRepliesChat && replyToPeerId && replyToTopId) {\n      openThread({\n        isComments: true,\n        originChannelId: replyToPeerId,\n        originMessageId: replyToTopId,\n        focusMessageId: replyToMsgId,\n      });\n      return;\n    }\n\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: isRepliesChat ? replyToTopId : threadId, // Open comments from Replies bot, otherwise, keep current thread\n      messageId: replyToMsgId,\n      replyMessageId: replyToPeerId ? undefined : messageId,\n      noForumTopicPanel: !replyToPeerId, // Open topic panel for cross-chat replies\n      ...(isQuote && { quote: quoteText?.text, quoteOffset }),\n    });\n  });\n\n  const handleDocumentClick = useLastCallback((): void => {\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n    });\n  });\n\n  const openMediaViewerWithPhotoOrVideo = useLastCallback((withDynamicLoading: boolean): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n    if (withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    }\n\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage.url);\n\n    const videoContent = video || getWebPageVideo(webPage);\n    const webpageTimestamp = parsedLink && 'timestamp' in parsedLink ? parsedLink.timestamp : undefined;\n\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n      timestamp: lastPlaybackTimestamp || videoContent?.timestamp || webpageTimestamp,\n      withDynamicLoading,\n    });\n  });\n  const handlePhotoMediaClick = useLastCallback((): void => {\n    const withDynamicLoading = !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n  const handleVideoMediaClick = useLastCallback(() => {\n    const isGif = message.content?.video?.isGif;\n    const withDynamicLoading = !isGif && !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n\n  const handleMediaClick = useLastCallback((): void => {\n    const photo = getMessagePhoto(message) || getWebPagePhoto(webPage);\n    if (photo) {\n      handlePhotoMediaClick();\n    }\n\n    handleVideoMediaClick();\n  });\n\n  const handleAudioPlay = useLastCallback((): void => {\n    openAudioPlayer({ chatId, messageId });\n  });\n\n  const handleAlbumMediaClick = useLastCallback((albumMessageId: number, albumIndex?: number): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n\n    searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId: albumMessageId,\n      mediaIndex: albumIndex,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledAlbum : MediaViewerOrigin.Album,\n      withDynamicLoading: !paidMedia,\n    });\n  });\n\n  const handleReadMedia = useLastCallback((): void => {\n    markMessagesRead({ messageIds: [messageId] });\n  });\n\n  const handleCancelUpload = useLastCallback(() => {\n    cancelUploadMedia({ chatId, messageId });\n  });\n\n  const handleVoteSend = useLastCallback((options: string[]) => {\n    sendPollVote({ chatId, messageId, options });\n  });\n\n  const handleGroupForward = useLastCallback(() => {\n    openForwardMenu({ fromChatId: chatId, groupedId });\n  });\n\n  const handleForward = useLastCallback(() => {\n    if (album && album.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: chatId, messageIds: [messageId] });\n    }\n  });\n\n  const handleFocus = useLastCallback(() => {\n    focusMessage({\n      chatId, threadId: MAIN_THREAD_ID, messageId,\n    });\n  });\n\n  const handleFocusForwarded = useLastCallback(() => {\n    const originalChatId = (isSavedMessages && forwardInfo!.savedFromPeerId) || forwardInfo!.fromChatId!;\n\n    if (isInDocumentGroup) {\n      focusMessage({\n        chatId: originalChatId, groupedId, groupedChatId: chatId, messageId: forwardInfo!.fromMessageId!,\n      });\n      return;\n    }\n\n    if (replyToPeerId && replyToTopId) {\n      if (isRepliesChat) {\n        openThread({\n          isComments: true,\n          originChannelId: replyToPeerId,\n          originMessageId: replyToTopId,\n          focusMessageId: forwardInfo!.fromMessageId!,\n        });\n      } else {\n        focusMessage({\n          chatId: replyToPeerId,\n          threadId: replyToTopId,\n          messageId: forwardInfo!.fromMessageId!,\n        });\n      }\n    } else {\n      focusMessage({\n        chatId: originalChatId, messageId: forwardInfo!.fromMessageId!,\n      });\n    }\n  });\n\n  const selectWithGroupedId = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    selectMessage(e, groupedId);\n  });\n\n  const handleTranslationClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    openChatLanguageModal({ chatId, messageId: !isTranslatingChat ? messageId : undefined });\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n  });\n\n  const handleTopicChipClick = useLastCallback(() => {\n    if (!messageTopic) return;\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: messageTopic.id,\n      messageId,\n    });\n  });\n\n  const handleStoryClick = useLastCallback(() => {\n    if (!story) return;\n    openStoryViewer({\n      peerId: story.peerId,\n      storyId: story.id,\n      isSingleStory: true,\n    });\n  });\n\n  return {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleDocumentClick,\n    handleMediaClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick: selectWithGroupedId,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll: selectWithGroupedId,\n    handleTopicChipClick,\n    handleStoryClick,\n  };\n}\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport { detectLanguage } from '../util/languageDetection';\n\nexport default function useTextLanguage(text?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>) {\n  const [language, setLanguage] = useState<string | undefined>();\n\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    if (text) {\n      detectLanguage(text).then(setLanguage);\n    } else {\n      setLanguage(undefined);\n    }\n  }, [isDisabled, text, getIsReady]);\n\n  return language;\n}\n","import type { ApiMessage, ApiPoll, ApiWebPage } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { EMOJI_SIZES, MESSAGE_CONTENT_CLASS_NAME } from '../../../../config';\nimport { getMessageContent } from '../../../../global/helpers';\nimport getSingularPaidMedia from './getSingularPaidMedia';\n\nexport function buildContentClassName(\n  message: ApiMessage,\n  album?: IAlbum,\n  {\n    poll,\n    webPage,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread,\n    forceSenderName,\n    hasCommentCounter,\n    hasCommentButton,\n    hasActionButton,\n    hasReactions,\n    isGeoLiveActive,\n    withVoiceTranscription,\n    peerColorClass,\n    hasOutsideReactions,\n  }: {\n    poll?: ApiPoll;\n    webPage?: ApiWebPage;\n    hasSubheader?: boolean;\n    isCustomShape?: boolean | number;\n    isLastInGroup?: boolean;\n    asForwarded?: boolean;\n    hasThread?: boolean;\n    forceSenderName?: boolean;\n    hasCommentCounter?: boolean;\n    hasCommentButton?: boolean;\n    hasActionButton?: boolean;\n    hasReactions?: boolean;\n    isGeoLiveActive?: boolean;\n    withVoiceTranscription?: boolean;\n    peerColorClass?: string;\n    hasOutsideReactions?: boolean;\n  } = {},\n) {\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const content = getMessageContent(message);\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo,\n    audio, voice, document, contact, location, invoice, storyData,\n    giveaway, giveawayResults,\n  } = content;\n  const text = album?.hasMultipleCaptions ? undefined : getMessageContent(album?.captionMessage || message).text;\n  const hasFactCheck = Boolean(message.factCheck?.text);\n\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isInvertedMedia = message.isInvertedMedia;\n  const isInvertibleMedia = photo || (video && !isRoundVideo) || album || webPage;\n\n  const classNames = [MESSAGE_CONTENT_CLASS_NAME];\n  const isMedia = storyData || photo || video || location || invoice?.extendedMedia || paidMedia;\n  const hasText = text || location?.mediaType === 'venue' || isGeoLiveActive || hasFactCheck;\n  const isMediaWithNoText = isMedia && !hasText;\n  const hasInlineKeyboard = Boolean(message.inlineButtons);\n  const isViaBot = Boolean(message.viaBotId);\n\n  const hasFooter = (() => {\n    if (isInvertedMedia && isInvertibleMedia) {\n      if (hasReactions && !hasOutsideReactions) return true;\n      if (hasFactCheck) return true;\n      if (webPage && hasText) return true;\n      return false;\n    }\n    return hasText;\n  })();\n\n  if (peerColorClass) {\n    classNames.push(peerColorClass);\n  }\n\n  if (!isMedia && message.emojiOnlyCount) {\n    classNames.push('emoji-only');\n    if (message.emojiOnlyCount <= EMOJI_SIZES) {\n      classNames.push(`emoji-only-${message.emojiOnlyCount}`);\n    }\n  } else if (hasText) {\n    classNames.push('text');\n  } else {\n    classNames.push('no-text');\n  }\n\n  if (!Object.keys(content).length) {\n    classNames.push('unsupported');\n  }\n\n  if (hasActionButton) {\n    classNames.push('has-action-button');\n  }\n\n  if (isCustomShape) {\n    classNames.push('custom-shape');\n\n    if (isRoundVideo) {\n      classNames.push('round');\n    }\n\n    if (hasCommentCounter) {\n      classNames.push('has-comment-counter');\n    }\n  }\n  if (isMedia && !withVoiceTranscription) {\n    classNames.push('media');\n  } else if (video) {\n    classNames.push('video');\n  } else if (audio) {\n    classNames.push('audio');\n  } else if (voice) {\n    classNames.push('voice');\n    if (withVoiceTranscription) {\n      classNames.push('with-voice-transcription');\n    }\n  } else if (document) {\n    classNames.push('document');\n  } else if (contact) {\n    classNames.push('contact');\n  } else if (poll) {\n    classNames.push('poll');\n  } else if (giveaway || giveawayResults) {\n    classNames.push('giveaway');\n  } else if (webPage?.webpageType === 'full') {\n    classNames.push('web-page');\n\n    if (webPage.photo || webPage.video) {\n      classNames.push('media');\n    }\n\n    if (webPage.document) {\n      classNames.push('document');\n    }\n\n    if (webPage.gift) {\n      classNames.push('gift');\n    }\n  }\n\n  if (invoice && !invoice.extendedMedia) {\n    classNames.push('invoice');\n  }\n\n  if (invoice && invoice.photo) {\n    classNames.push('has-photo');\n  }\n\n  if (storyData) {\n    classNames.push('story');\n  }\n\n  if (asForwarded) {\n    classNames.push('is-forwarded');\n  }\n\n  if (hasSubheader) {\n    classNames.push('has-subheader');\n  }\n\n  if (hasThread) {\n    classNames.push('has-replies');\n  }\n\n  if (hasReactions) {\n    classNames.push('has-reactions');\n  }\n\n  if (hasOutsideReactions) {\n    classNames.push('has-outside-reactions');\n  }\n\n  if (isViaBot) {\n    classNames.push('is-via-bot');\n  }\n\n  if (forceSenderName) {\n    classNames.push('force-sender-name');\n  }\n\n  if (!isCustomShape) {\n    classNames.push('has-shadow');\n\n    if (isMedia && hasThread) {\n      classNames.push('has-background');\n    }\n\n    if (hasSubheader || asForwarded || isViaBot || !isMediaWithNoText\n      || forceSenderName || hasFactCheck || withVoiceTranscription) {\n      classNames.push('has-solid-background');\n    }\n\n    if (hasFactCheck) {\n      classNames.push('has-fact-check');\n    }\n\n    if (isLastInGroup && !hasInlineKeyboard && (photo || !isMediaWithNoText || hasCommentButton)) {\n      classNames.push('has-appendix');\n    }\n  }\n\n  if (isInvertibleMedia && isInvertedMedia) {\n    classNames.push('is-inverted-media');\n  }\n\n  if (hasFooter) {\n    classNames.push('has-footer');\n  } else {\n    classNames.push('no-footer');\n  }\n\n  return classNames.join(' ');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport type React from '../../../lib/teact/teact';\nimport { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiInputSuggestedPostInfo,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatTranslatedMessages } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED, TON_CURRENCY_CODE } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageRoundVideo,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatScheduledDateTime } from '../../../util/dates/dateFormat';\nimport { isUserId } from '../../../util/entities/ids';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { formatStarsAsIcon, formatTonAsIcon } from '../../../util/localization/format';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport useMessageMediaHash from '../../../hooks/media/useMessageMediaHash';\nimport useThumbnail from '../../../hooks/media/useThumbnail';\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  suggestedPostInfo?: ApiInputSuggestedPostInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  composerForwardSenders?: ApiPeer[];\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  isMediaNsfw?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  suggestedPostInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  composerForwardSenders,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  isMediaNsfw,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = useMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia)) || isMediaNsfw;\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const senderTitle = sender ? getPeerTitle(oldLang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n\n  const forwardSendersTitle = useMemo(() => {\n    if (!composerForwardSenders) return undefined;\n\n    const peerTitles = composerForwardSenders.map((peer) => getPeerTitle(lang, peer)).filter(Boolean);\n    return lang.conjunction(peerTitles);\n  }, [composerForwardSenders, lang]);\n\n  const senderChatTitle = senderChat ? getPeerTitle(oldLang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getPeerTitle(oldLang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    const isFree = !(suggestedPostInfo?.price?.amount);\n    if (suggestedPostInfo) {\n      if (isFree && !suggestedPostInfo.scheduleDate) {\n        return lang('ComposerEmbeddedMessageSuggestedPostDescription');\n      }\n      const priceText = suggestedPostInfo.price\n        ? (suggestedPostInfo.price.currency === TON_CURRENCY_CODE\n          ? formatTonAsIcon(lang, suggestedPostInfo.price.amount, {\n            className: 'suggested-price-ton-icon',\n            shouldConvertFromNanos: true,\n          })\n          : formatStarsAsIcon(lang, suggestedPostInfo.price.amount, {\n            className: 'suggested-price-star-icon',\n          }))\n        : '';\n      const scheduleText = suggestedPostInfo.scheduleDate\n        ? formatScheduledDateTime(suggestedPostInfo.scheduleDate, lang, oldLang)\n        : '';\n      if (priceText && !scheduleText) {\n        return (\n          <span className=\"suggested-post-price-wrapper\">\n            {\n              lang('TitleSuggestedPostAmountForAnyTime',\n                { amount: priceText },\n                {\n                  withNodes: true,\n                  withMarkdown: true,\n                })\n            }\n          </span>\n        );\n      }\n      return (\n        <span className=\"suggested-post-price-wrapper\">\n          {priceText}\n          {scheduleText ? ` • ${scheduleText}` : ''}\n        </span>\n      );\n    }\n\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        asPreview: true,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(oldLang, media.content, {});\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (suggestedPostInfo && replyInfo) {\n      return lang('TitleSuggestedChanges');\n    }\n\n    if (suggestedPostInfo) {\n      return lang('ComposerEmbeddedMessageSuggestedPostTitle');\n    }\n\n    if (!senderTitle && !forwardSendersTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <span className=\"embedded-sender-wrapper\">\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {!composerForwardSenders && senderTitle\n              && renderText(isReplyToQuote ? oldLang('ReplyToQuote', senderTitle) : senderTitle)}\n            {forwardSendersTitle && renderText(lang('ComposerTitleForwardFrom', {\n              users: forwardSendersTitle,\n            }, {\n              withNodes: true,\n              withMarkdown: true,\n            }))}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderForwardSender() {\n    return forwardSenderTitle && !areSendersSame && (\n      <span className=\"embedded-forward-sender-wrapper\">\n        <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n        <span className=\"forward-sender-title\">\n          {renderText(forwardSenderTitle)}\n        </span>\n      </span>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      peer={sender}\n      emojiIconClassName=\"EmbeddedMessage--background-icons\"\n      ref={ref}\n      shouldReset\n      noUserColors={noUserColors}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n        'no-selection',\n        composerForwardSenders && 'is-input-forward',\n        suggestedPostInfo && 'is-suggested-post',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {renderForwardSender()}\n        </div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressiveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideos) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.target = '_blank';\n  link.rel = 'noopener noreferrer';\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","import { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  const anchorRef = useRef<HTMLDivElement>();\n  const ref = useRef<HTMLDivElement>();\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import type { FC } from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n"],"names":["Keys","memo","MessageOutgoingStatus","status","_jsx","className","children","Transition","name","activeKey","Icon","withGlobal","global","userId","chat","selectCurrentChat","user","selectUser","contactName","getUserFirstOrLastName","undefined","DeleteMemberModal","isOpen","onClose","deleteChatMember","getActions","lang","useOldLang","handleDeleteChatMember","useCallback","chatId","id","ConfirmDialog","title","textParts","renderText","confirmLabel","confirmHandler","confirmIsDestructive","IGNORE_TAGS","Set","handlers","createCallbackManager","useHotkeys","hotkeys","useEffect","entries","Object","addCallback","e","target","HTMLElement","has","tagName","shouldFireEvent","forEach","hotkey","handler","event","alt","ctrl","meta","mod","shift","key","altKey","ctrlKey","metaKey","shiftKey","pressedKey","Boolean","toLowerCase","code","replace","isExactHotkey","keys","split","map","part","trim","modifiers","includes","reservedKeys","find","parseHotkey","getHotkeyMatcher","document","documentElement","addEventListener","runCallbacks","THROTTLE","RE_ENDS_ON_EMOJI","RegExp","twemojiRegex","source","RE_ENDS_ON_EMOJI_IMG","EMOJI_IMG_REGEX","useCustomEmojiTooltip","isEnabled","getHtml","setHtml","getSelectionRange","inputRef","customEmojis","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","useFlag","extractLastEmojiThrottled","useThrottledResolver","html","collapsed","match","IS_EMOJI_SUPPORTED","htmlBeforeSelection","getHtmlBeforeSelection","current","getLastEmoji","useDerivedSignal","isActive","useDerivedState","hasCustomEmojis","length","lastEmoji","emoji","insertCustomEmoji","useLastCallback","inputEl","regexText","regex","count","newHtml","buildCustomEmojiHtml","repeat","htmlAfterSelection","innerHTML","substring","requestNextMutation","focusEditableElement","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","ConnectorClass","requestStates","Map","requestStatesByCallback","pendingPayloads","pendingTransferables","constructor","onUpdate","channel","destroy","init","args","this","postMessageOnTickEnd","type","request","messageData","transferables","restMessageData","messageId","generateUniqueId","payload","requestState","promise","Promise","resolve","reject","assign","withCallback","callback","pop","set","catch","finally","delete","cancelCallback","progressCallback","isCanceled","get","onMessage","data","payloads","update","error","response","callbackArgs","Error","message","push","postMessagesOnTickEnd","throttleWithTickEnd","postMessage","createConnector","worker","connector","handleMessage","removeEventListener","props","CustomSend","useModuleLoader","Bundles","Extra","RE_USERNAME_SEARCH","useMentionTooltip","groupChatMembers","topInlineBotIds","currentUserId","useLang","filteredUsers","setFilteredUsers","useState","extractUsernameTagThrottled","prepareForRegExp","getUsernameTag","getWithInlineBots","startsWith","usernameTag","usersById","getGlobal","users","byId","memberIds","reduce","acc","member","filter","filteredIds","filterPeersByQuery","ids","unique","query","values","pickTruthy","insertMention","peer","forceFocus","insertAtEnd","hasUsername","getPeerTitle","mainUsername","getMainUsername","userFirstOrLastName","htmlToInsert","ApiMessageEntityTypes","MentionName","fixedHtmlBeforeSelection","cleanWebkitNewLines","atIndex","lastIndexOf","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isMentionTooltipOpen","closeMentionTooltip","mentionFilteredUsers","useOrderDiff","orderedIds","orderById","useMemo","i","prevOrderById","usePreviousDeprecated","prevChatId","orderDiffById","mapValues","order","getAnimationType","useChatAnimationType","OFFSET_X","REM","useOverlayPosition","anchorRef","overlayRef","isMirrored","isForMessageEffect","isDisabled","updatePosition","element","anchor","anchorRect","getBoundingClientRect","elementRect","windowWidth","window","innerWidth","requestMutation","anchorCenterY","top","height","anchorBottomY","bottom","y","style","left","right","messagesContainer","closest","passive","MAX_NESTING_PARENTS","isSelectionInsideInput","selectionRange","inputId","commonAncestorContainer","parentNode","iterations","parentElement","useForumPanelRender","isForumPanelOpen","shouldRenderForumPanelRef","useRef","isAnimationStartedRef","forceUpdate","useForceUpdate","useSyncEffect","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","verifyAgeMin","appConfig","VERIFY_AGE_MIN_DEFAULT","SensitiveContentConfirmModal","shouldAlwaysShow","onAlwaysShowChanged","_jsxs","years","Checkbox","label","checked","onCheck","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","styles","root","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","rect","x","scrollX","scrollY","width","innerHeight","seed","Math","floor","Date","now","filterId","SNAP_EFFECT_ID","component","ghost","viewBox","createFilter","min","elementContainer","svg","jsxToHtml","foreignObject","querySelector","computedStyle","getComputedStyle","clone","cloneNode","Array","from","setProperty","getPropertyValue","appendChild","snapContainer","getElementById","removeChild","once","smallestSide","baseSeed","xmlns","SVG_NAMESPACE","baseFrequency","numOctaves","result","in","slope","intercept","attributeName","dur","fill","in2","operator","scale","xChannelSelector","yChannelSelector","forceShowSelf","isSynced","userStatus","selectUserStatus","isSavedMessages","isSelf","self","areMessagesLoaded","selectChatMessages","PrivateChatInfo","customPeer","typingStatus","avatarSize","statusIcon","withDots","withMediaViewer","withUsername","withStory","withFullInfo","withUpdatingStatus","emojiStatusSize","noStatusOrTyping","noEmojiStatus","noFake","noVerified","noRtl","isSavedDialog","adminMember","ripple","storyViewerOrigin","onEmojiStatusClick","iconElement","rightElement","loadFullUser","openMediaViewer","loadMoreProfilePhotos","hasAvatarMediaViewer","peerId","isPreload","useIntervalForceUpdate","handleAvatarViewerOpen","hasMedia","stopPropagation","isAvatarView","mediaIndex","origin","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","customTitle","isOwner","buildClassName","dir","isRtl","Avatar","size","storyViewerMode","onClick","FullNameTitle","withEmojiStatus","DotAnimation","content","subtitleKey","TypingStatus","isSystemBot","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","renderStatusOrTyping","RippleEffect","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","usePaidMessageConfirmation","starsForAllMessages","isStarsBalanceModeOpen","starsBalance","shouldPaidMessageAutoApprove","settings","byKey","shouldAutoApprove","setAutoApprove","isWaitingStarsTopup","setIsWaitingStarsTopup","confirmPaymentHandlerRef","closeConfirmDialog","closePaymentMessageConfirmDialogOpen","handleStarsTopup","openStarsBalanceModal","topup","balanceNeeded","purpose","PAID_MESSAGES_PURPOSE","handleWithConfirmation","openPaymentMessageConfirmDialogOpen","dialogHandler","setPaidMessageAutoApprove","storyId","story","loadPeerStoriesByIds","loadStoryThrottled","throttled","throttle","storyIds","resetInput","applyIosAutoCapitalizationFix","focus","IS_IOS","createElement","classList","add","body","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","headers","parseHtml","DOMParser","parseFromString","wrapNodeAnchor","node","href","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","VALID_TARGET_IDS","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","handlePaste","async","clipboardData","input","preventDefault","activeElement","pastedText","getData","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","filteredNodes","cleanNodes","getCleanDocument","err","DEBUG","console","textContents","querySelectorAll","getElementsByTagName","removeAttribute","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","getFilesFromDataTransferItems","slice","textToPaste","entities","text","isWordDocument","hasText","shouldSetAttachments","newAttachments","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","pluralValue","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","RE_LINK","RE_LINK_TEMPLATE","STARTS_ENDS_ON_EMOJI_IMG_REGEX","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","opusRecorderPromise","OpusRecorder","mediaRecorder","default","start","analyzerCallback","startMediaRecorder","startedAt","pausedAt","chunks","waveform","ondataavailable","typedArray","releaseAnalyzer","recorder","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","Uint8Array","isDestroyed","tick","getByteFrequencyData","volume","cb","requestMeasure","subscribeToAnalyzer","stop","onstop","blob","Blob","duration","round","onerror","delayStop","max","setTimeout","pause","AttachmentModal","AttachMenu","threadId","isButtonVisible","canAttachMedia","canAttachPolls","canAttachToDoLists","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","theme","shouldCollectDebugLogs","canEditMedia","editingMessage","messageListType","paidMessagesStars","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","onTodoListCreate","updateAttachmentSettings","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","validatedFiles","validateFiles","handleQuickSelect","shouldCompress","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","oldLang","ResponsiveHoverButton","color","onActivate","ariaLabel","ariaControls","hasPopup","disabled","Menu","autoClose","positionX","positionY","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","_Fragment","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","selectCurrentMessageList","selectChatMessage","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","button","renderKeyboardButtonText","noCompact","j","Button","BotMenuButton","textRef","textEl","scrollWidth","composerEl","removeProperty","ref","ChatCommandTooltip","shouldForceShowEditing","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","selectTabState","editingId","selectEditingScheduledId","selectEditingId","shouldAnimate","selectCanAnimateInterface","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","suggestedPostInfo","replyToPeerId","senderChat","selectChat","sender","selectEditingMessage","replyToMsgId","selectSender","forwardSenders","m","selectSenderFromForwardedMessage","forwardedMessage","selectForwardedSender","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","isContextMenuDisabled","storyData","isReplyToDiscussion","isMediaNsfw","selectIsMediaNsfw","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","resetDraftSuggestedPostInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","openSuggestMessageModal","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShowingSuggestedPost","senders","isShown","shouldRender","transitionClassNames","useShowTransitionDeprecated","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","renderingSender","useCurrentOrPrev","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","composerForwardSenders","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","modal","ToDoListModal","tabState","noWebPage","selectNoWebPage","attachmentSettings","webPagePreview","webPagePreviewId","selectWebPage","webpageType","WebPagePreview","isEditing","toggleMessageWebPage","isInvertedMedia","isSmallerMedia","webPageMediaSize","useShowTransition","withShouldRender","hasMediaSizeOptions","hasLargeMedia","prevWebPageRef","renderingWebPage","isFullWebPage","thumbnailUrl","useThumbnail","previewMedia","getWebPagePhoto","getWebPageVideo","getWebPageAudio","getWebPageDocument","previewMediaHash","getMediaHash","previewMediaUrl","useMedia","shouldRenderPreviewMedia","previewMediaRef","noCloseTransition","hasPreviewMedia","handleClearWebpagePreview","handleBeforeContextMenu","handlePreviewClick","updateIsInvertedMedia","value","updateIsLargerMedia","PeerColorWrapper","noUserColors","onMouseDown","src","siteName","url","description","webPage","photo","video","audio","MainButtonState","isMobile","chatBot","selectBot","isChatWithBot","isChatWithUser","isUserId","userFullInfo","selectUserFullInfo","selectPeerPaidMessagesStars","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","language","selectSharedSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","sendAsId","sendAsPeer","selectPeer","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","isSilentPosting","getChatNotifySettings","selectNotifyDefaults","selectNotifyException","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","maxMessageLength","config","DEFAULT_MAX_MESSAGE_LENGTH","isReplying","hasSuggestedPost","stars","balance","amount","isStarsBalanceModalOpen","starsBalanceModal","isAccountFrozen","selectIsCurrentUserFrozen","isAppConfigLoaded","insertingPeerIdMention","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","hasScheduledMessages","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","todoListModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","selectTheme","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","isContactRequirePremium","isPaymentMessageConfirmDialogOpen","shouldDisplayGiftsButton","disallowedGifts","pollMaxAnswers","Composer","dropAreaState","isReady","inputPlaceholder","editableInputCssSelector","editableInputId","onDropHide","onFocus","onBlur","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","openTodoListModal","closeTodoListModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","openGiftModal","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","updateChatSilentPosting","updateInsertingPeerIdMention","updateDraftSuggestedPostInfo","counterRef","storyReactionRef","useSignal","isMounted","setIsMounted","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","windowSize","isInMessageList","isInStoryViewer","sendAsPeerIds","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","isMonoforum","emojiSet","members","chatBotCommands","chatEmojiSetId","canSchedule","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatWithSendAs","isChatSuperGroup","isChatPublic","isLinkedInDiscussion","hasGeo","shouldAnimateSendAsButtonRef","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","messagesCount","messagesInInput","closeConfirmModalPayForMessage","paymentMessageConfirmDialogHandler","setShouldPaidMessageAutoApprove","handleActionWithPaymentConfirmation","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","inInputId","selection","getSelection","messageInput","rangeCount","getRangeAt","insertHtmlInSelection","dispatchEvent","Event","bubbles","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","shouldSendInHighQuality","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","limit","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","handleUpdateAttachmentsQuality","filename","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","loadStickersForEmoji","clearStickersForEmoji","getSingleEmoji","cleanHtml","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","getCommand","command","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","shouldKeepSuggestedPost","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","shouldUpdateSuggestedPost","EDITABLE_INPUT_CSS_SELECTOR","customEmojiIds","entity","documentId","useLayoutEffect","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","loadWebPagePreview","clearWebPagePreview","formattedTextWithLinkRef","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","getLink","link","useLoadLinkPreview","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","shouldSetNoWebPage","edited","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","areAllGiftsDisallowed","every","shouldShowGiftButton","shouldShowSuggestedPostButton","showCustomEmojiPremiumNotification","notificationNumber","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","formatMediaDuration","isSlowMode","blur","canSendAttachments","attachmentsToSend","sendAttachments","sendCompressed","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSendCore","currentAttachments","webPageUrl","handleSend","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","voice","handleSendWithConfirmation","handleTodoListCreate","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","queryId","restArgs","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","sticker","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","handleToDoListSend","todo","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","handleGiftClick","forUserId","handleSuggestPostClick","price","currency","STARS_CURRENCY_CODE","nanos","handleToggleSilentPosting","localId","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholder","formatStarsAsIcon","asFont","withNodes","adminRights","anonymous","topic","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","fullClassName","handleToggleReaction","reaction","emoticon","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","shouldRenderPaidBadge","prevShouldRenderPaidBadge","usePrevious","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","isQuiz","shouldBeAnonymous","maxOptionsCount","selectedSendAsId","onInsertUserName","filterUnits","dy","stdDeviation","d","onSelectResult","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onSuppressedFocus","Spinner","slideClassName","direction","formatVoiceRecordDuration","CustomEmojiTooltip","EmojiTooltip","emojis","ReactionAnimatedEmoji","withEffectOnly","getReactionKey","allowDisabledClick","noFastClick","nonInteractive","pill","fluid","AnimatedCounter","number","MessageEffect","shouldPlay","onStop","CustomSendMenu","onSendSchedule","onRemoveEffect","withEffects","hasCurrentEffect","PaymentMessageConfirmDialog","userName","messagePriceInStars","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","usePeerStoriesPolling","peers","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","isUserBot","isSupport","isRestricted","selectIsChatRestricted","usePrevDuringAnimation","prev","timeoutRef","isCurrentPresent","isPrevPresent","clearTimeout","ChatBadge","topics","isPinned","isMuted","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","hasMiniApp","isSelected","requestMainWebView","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeUnMuted","notifySettings","mutedUntil","isEveryUnreadMuted","hasUnreadMark","isSignal","isUnread","handleOpenApp","extractCurrentThemeParams","ShowTransition","isCustom","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","formatIntegerCompact","pinnedElement","miniAppButton","visiblePinnedElement","elements","renderContent","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","needsAgeVerification","needAgeVideoVerification","Video","isOwn","isInWebPage","noAvatars","canAutoLoad","canAutoPlay","uploadProgress","forcedWidth","dimensions","asForwarded","isDownloading","isProtected","lastPlaybackTimestamp","clickArg","observeIntersectionForLoading","observeIntersectionForPlaying","onCancelUpload","cancelMediaDownload","updateContentSettings","openAgeVerificationModal","videoRef","isNsfwModalOpen","openNsfwModal","closeNsfwModal","shouldAlwaysShowNsfw","setShouldAlwaysShowNsfw","isPaidPreview","mediaType","localBlobUrl","blobUrl","shouldShowSpoiler","isSpoilerShown","showSpoiler","hideSpoiler","handleNsfwConfirm","isSensitiveEnabled","isIntersectingForLoading","useIsIntersecting","isIntersectingForPlaying","wasIntersectedRef","useAppLayout","isLoadAllowed","setIsLoadAllowed","shouldLoad","isPlayAllowed","setIsPlayAllowed","fullMediaHash","getVideoMediaHash","isFullMediaPreloaded","mediaLoader","mediaData","loadProgress","useMediaWithLoadProgress","getMediaFormat","fullMediaData","isPlayerReady","markPlayerReady","thumbDataUri","getMediaThumbUri","hasThumb","withBlurredBackground","isInline","isUnsupported","useUnsupportedMedia","isPreviewPreloaded","canLoadPreview","previewBlobUrl","shouldHidePreview","previewRef","useMediaTransition","hasMediaData","noThumb","thumbRef","useBlurredMediaThumbRef","blurredBackgroundRef","downloadProgress","isUploading","isTransferring","transferProgress","getMediaTransferState","wasLoadDisabled","spinnerRef","shouldRenderSpinner","noMountTransition","playButtonRef","playProgress","setPlayProgress","handleTimeUpdate","currentTarget","currentTime","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","handleClick","isFromSpinner","isAllowed","media","handleClickOnSpinner","componentClassName","MIN_MEDIA_HEIGHT","OptimizedVideo","canPlay","defaultMuted","muted","loop","playsInline","disablePictureInPicture","draggable","onTimeUpdate","onReady","MediaSpoiler","isVisible","withAnimation","isNsfw","ProgressSpinner","progress","isGif","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","prepareLibraryMemo","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","sort","flat","matchedNames","setById","setFilteredEmojis","setFilteredCustomEmojis","exec","uncompressEmoji","ensureEmojiData","then","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","emojiHtml","emojiCode","newShouldAutoInsert","endsWith","test","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","withPortal","onLoad","onSearchOpen","ElectronEvent","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","folderId","omit","isChatList","useFoldersReducer","useReducer","ChatCallStatus","isPreview","previewMessageId","lastMessageId","selectChatLastMessageId","lastMessage","selectChatLastMessage","isOutgoing","savedDialogSender","fromId","messageSender","lastMessageSender","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","topicsInfo","selectTopicsInfo","lastMessageStory","monoforumChannel","selectMonoforumChannel","getIsChatMuted","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","listedTopicIds","topicsById","Chat","orderDiff","animationType","observeIntersection","offsetTop","onDragEnter","openChat","openSavedDialog","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","openFrozenAccountModal","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","useEnsureMessage","renderSubtitle","useChatListEntry","statefulMediaContent","groupStatefulContent","getIsForumPanelClosed","useSelectorSignal","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","handleReport","contextActions","useChatContextActions","isIntersecting","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","ListItem","withPortalForMenu","asMessageBubble","withStoryGap","subscriptionUntil","StoryViewerOrigin","ChatList","StarIcon","isCallActive","isCallNotEmpty","monoforumBadgeClassName","LastMessageMeta","outgoingStatus","draftDate","date","hasMainMiniApp","DeleteChatModal","MuteChatModal","ChatFolderModal","ANIMATION_DURATION","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","animateOpening","isArchived","cancelDelayedCallbacks","container","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","reverse","index","isLast","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","String","opacity","transform","ghostRevealName","createDelayedCallback","contains","ANIMATION_END_DELAY","animateClosing","ribbon","ribbonStyles","sourceEl","oncontextmenu","stopEvent","sourceCanvas","canvas","getContext","drawImage","ms","timeout","clear","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","calculateMediaDimensions","messageText","isPhoto","isVideo","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","isSmall","selectWebPagesById","messages","webPageById","useMessageMediaHash","webPagesById","useSelector","webPageId","getMessageMediaHash","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","collapse","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","selectWebPageFromMessage","WebLink","senderTitle","onMessageClick","linkData","getFirstLinkInMessage","domain","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","Link","SafeLink","formatPastTimeShort","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","TopicIcon","letterClassName","noLoopLimit","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","topicId","onStart","onEnd","threshold","isLongPressActive","isPressed","timerId","canProcessEvent","touches","end","cancel","useUnmountCleanup","ELECTRON_WINDOW_DRAG_EVENT_START","onMouseUp","onTouchStart","onTouchEnd","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","cloneContents","caretRange","endContainer","endOffset","Node","TEXT_NODE","removeAllSelections","orderedPeerIds","archived","active","byPeerId","isRibbonShown","isArchivedRibbonShown","chatsById","chats","peerStories","canShow","toggleStoryRibbon","PREVIEW_AVATAR_COUNT","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","useStoryPreloader","beginHeavyAnimation","avatar","withStorySolid","forceFriendStorySolid","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","getCustomAppendixBg","requestMediaWorker","MAX_WORKERS","navigator","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","Worker","ARCHIVE_CUSTOM_PEER","isCustomPeer","avatarIcon","customPeerAvatarColor","Archive","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","getChatTitle","unread","actionMinimize","isMinimized","actionExpand","actionHide","isHidden","compact","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","openSettingsScreen","handleEditFolder","screen","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","FrozenAccountNotification","UnconfirmedSession","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","useResizeObserver","entry","borderBoxSize","blockSize","contentRect","firstUnconfirmed","a","b","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","hash","isConfirmed","handleReject","isText","RESERVED_HOTKEYS","canDisplayArchive","isMainList","openNextChat","openLeftColumnContent","containerRef","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","shouldShowFrozenAccountNotification","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","frozenNotificationHeight","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","digit","isArchiveInList","contentKey","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleFrozenAccountNotificationClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","clientX","clientY","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","scrollHeight","offsetHeight","deltaY","useTopOverscroll","InfiniteScroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onLoadMore","onDragLeave","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","Loading","inputSelector","getRange","setRange","onSelectionChange","Element","DropTarget","isQuick","isGeneric","svgRef","isHovered","markHovered","unmarkHovered","relatedTarget","toTarget","handleResize","baseVal","useEffectOnce","onDrop","rx","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","matches","shouldRenderQuick","Portal","containerSelector","onDragOver","handleDragOver","reducer","initialState","reducerRef","dispatch","NothingFound","withSticker","AnimatedIconWithPreview","tgsUrl","LOCAL_TGS_URLS","DuckNothingFound","previewUrl","LOCAL_TGS_PREVIEW_URLS","noLoop","Document","smaller","autoLoadFileMaxSizeMb","withDate","datetime","isSelectable","shouldWarnAboutFiles","onMediaClick","onDateClick","downloadMedia","setSharedSettingOption","isFileIpDialogOpen","openFileIpDialog","closeFileIpDialog","shouldNotWarnAboutFiles","setShouldNotWarnAboutFiles","fileName","timestamp","mimeType","extension","getDocumentExtension","wasIntersected","markIntersected","shouldDownload","documentHash","getDocumentMediaHash","isLoaded","hasPreview","getDocumentHasPreview","previewData","shouldForceDownload","innerMediaType","mediaSize","fromDocumentAttribute","handleDownload","originMessage","isIpRevealingMedia","handleFileIpConfirm","handleDateClick","thumbnailDataUri","actionIcon","isDocumentVideo","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shiftedRanges","startMinute","endMinute","last","DAYS","_","BusinessHours","businessHours","transitionRef","isExpanded","expand","isMyTime","showInMyTime","showInLocalTime","timezoneSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","handleAnimationStart","TO_SLIDE_CLASS_NAME","iconClassName","multiline","isStatic","narrow","withColorTransition","role","tabIndex","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","UserBirthday","birthday","isInSettings","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","getMonth","getAge","numbersForAge","numbers","byEmoji","effectSticker","randomEffect","random","getStickerMediaHash","ApiMediaFormat","BlobUrl","effectHash","column","valueKey","canGiftPremium","isPremium","handleOpenGiftModal","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","StickerView","forceAlways","shouldLoop","birthdate","DEFAULT_MAP_CONFIG","zoom","chatOrUserId","countryList","phoneCodes","phoneCodeList","botAppPermissions","selectBotAppPermissions","botVerification","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","isBotCanManageEmojiStatus","ChatExtra","updateChatMutedState","updateTopicMutedState","loadPeerStories","openMapModal","requestCollectibleInfo","toggleUserEmojiStatusPermission","toggleUserLocationPermission","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","prevPeerId","dpr","useDevicePixelRatio","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","copyTextToClipboard","geoPoint","handleNotificationChange","manageEmojiStatusChange","handleLocationPermissionChange","isAccessGranted","geolocation","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","shouldMarkBotTrusted","appTermsInfo","terms","membersCount","ChatAnimationTypes","renderUsernames","allowSelection","Switcher","inactive","iconId","usernameList","otherUsernames","usernameLinks","s","idx","dataTransferItems","traverseFileTreePromise","item","itemFile","getAsFile","isDirectory","createReader","readEntries","entriesPromises","kind","webkitGetAsEntry","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","markChatMessagesRead","markChatUnread","openChatInNewTab","actionOpenInNewTab","IS_ELECTRON","togglePinned","actionPin","actionDelete","actionAddToFolder","actionMute","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isChatGroup","isInFolder","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","PI","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","confirmPaymentMessage","formatStarsAsText","totalAmount","withMarkdown","HeaderMenuContainer","isSuperGroup","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","isAnonymousForwardsChat","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","isCreator","isChatBasicGroup","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","channelMonoforumId","linkedMonoforumId","detectedChatLanguage","detectedLanguage","HeaderActions","isForForum","canExpandActions","onTopicSearch","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","setSettingOption","unblockUser","setViewForumAsMessages","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","buttonText","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","CLOSE_DURATION","RESIZE_THROTTLE","useHeaderPane","providedRef","withResizeObserver","onStateChange","setShouldRender","localRef","lastHeightRef","reset","handleUpdate","requestForcedReflow","currentHeight","useThrottledCallback","applyAnimationState","list","noTransition","cumulativeHeight","shiftPx","apply","setExtraStyles","transition","isPanelOpen","path","DEFAULT_HANDLERS","play","seekbackward","seekforward","previoustrack","nexttrack","seekTo","registerMediaSession","metadata","mediaSession","updateMetadata","setMediaSessionHandlers","warn","setActionHandler","clearMediaSession","playbackState","setPositionState","setPlaybackState","buildMediaMetadata","artist","album","artwork","MediaMetadata","TOPIC_ICON_SIZE","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","selectTopic","selectThreadMessagesCount","GroupChatInfo","noAvatar","withChatType","realChat","withMonoforumStatus","loadFullChat","isTopic","isMin","shouldRestoreHeight","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","Photo","isInSelectMode","shouldAffectAppendix","getPhotoMediaHash","prevMediaData","fullMediaRef","shouldRenderFullMedia","withThumb","downloadButtonRef","shouldRenderDownloadButton","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","appendixBg","dimensionsStyle","fileSelector","accept","noMultiple","onchange","click","elementRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","spinnerClassNames","getColorFromExtension","sizeString","getFileSizeString","subtitle","getDocumentThumbnailDimensions","formatMediaDateTime","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","getOrderedTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleMouseDown","handleOpenTopicMouseDown","useFastClick","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","shouldTryLoadingStory","useEnsureStory","mediaContent","mediaHasPreview","getMessageSticker","mediaThumbnail","mediaHash","mediaBlobUrl","isRoundVideo","getMessageRoundVideo","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","renderTextWithEntities","asPreview","withTranslucentThumbs","senderName","getMessageSenderName","renderSummary","Opacity","Move","messageSummary","MessageSummary","noEmoji","inChatList","getMessageIsSpoiler","tracks","currentTrackId","voiceQueue","musicQueue","playNext","trackId","isReverseOrder","currentTrack","onTrackChange","nextTrackId","findNextInQueue","audioPlayer","AudioOrigin","Inline","openAudioPlayer","parseMessageKey","splitTrackId","messageKey","nextTrack","onForcePlay","safePlay","stopCurrentAudio","register","trackType","track","Audio","handleEvent","eventName","isSafariPatchInProgress","proxy","Proxy","createAudio","trackIdComparator","addTrackToQueue","paused","preventPlayAfterPatch","preload","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","prevSrc","setCurrentTime","time","fastSeek","setVolume","setPlaybackRate","rate","playbackRate","toggleMuted","requestNextTrack","isFirst","requestPreviousTrack","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","currentId","getTrackQueue","Search","chatAudio","makeTrackId","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","isPrivateChat","getPrivateChatUserId","isBot","canDeleteForAll","isBasicGroup","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","deleteChat","chatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","handleDeleteChat","handleLeaveChat","Modal","header","COLOR_REPLACE_PATTERN","AttachBotIcon","isTouchScreen","Text","iconSvg","mediaDataWithReplacedColors","doc","stroke","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","shortName","isDisclaimerNeeded","interval","MAX_STANDARD_QUALITY_IMG_SIZE","MAX_HIGH_QUALITY_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","options","createObjectURL","quick","shouldSendAsFile","img","preloadImage","validateAspectRatio","maxQuickImgSize","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","performer","coverUrl","parseBlob","selectCover","fetchBlob","common","picture","format","cover","coverBlob","parseAudioMetadata","uniqueId","shouldSendCompressed","attach","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getSenderName","senderId","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","r","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","buildStyle","effectSize","shouldPause","formatTemperature","temperatureC","ownProps","restrictedEmoji","selectRestrictedEmoji","MediaAreaWeather","backgroundColor","convertToRGBA","textColor","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","noPlay","withTranslucentThumb","STORY_ASPECT_RATIO","NO_SHINY_TYPES","prepareStyle","mediaWidth","rotation","radius","coordinates","pixelRadius","pixelWidth","pixelHeight","MediaAreaOverlay","isStoryPlaying","openUniqueGiftBySlug","closeStoryViewer","openUrl","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","channelId","slug","handleMediaAreaClick","lastCallback","onBeforeUnload","useScrollNotch","selector","deps","isScrolled","toggleExtraClass","addExtraClass","removeExtraClass","RADIUS_RATIO","lastWorkerIndex","thumbData","canvasRef","workerIndex","cycleRestrict","offscreenRef","blurThumb","uri","image","transferControlToOffscreen","ceil","useOffscreenCanvasBlur","groupCall","selectChatGroupCall","isMasterTab","groupCalls","activeGroupCallId","participantsCount","GroupCallTopPane","onPaneStateChange","requestMasterAndJoinGroupCall","handleJoinGroupCall","participants","fetchedParticipants","renderingParticipantCount","renderingFetchedParticipants","isRendering","AvatarList","resolver","msOrSchedulerFn","noFirst","setValue","useThrottledSignal","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","PENDING_TRANSLATIONS","useMessageTranslation","chatTranslations","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","translatedText","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","TINY_SCREEN_WIDTH_MQL","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderAudio","isPlaying","bufferedRanges","seekerRef","showProgress","showSeekline","renderSeekline","renderVoice","waveformCanvasRef","isMediaUnread","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","onClickTranscribe","onHideTranscription","ry","OneTimeModal","mediaDuration","selectMessageMediaDuration","canDownload","canTranscribe","autoPlay","onPlay","onPause","onReadMedia","transcribeAudio","openOneTimeMediaModal","contentAudio","mediaSource","isVoice","isSeeking","isActivated","setIsActivated","coverHash","coverBlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","playPause","useAudioPlayer","isMessageLocal","reversePlayProgress","isOwnMessage","isReverse","withAvatar","spikes","peak","MIN_SPIKES","MAX_SPIKES","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","val","interpolateArray","encoded5bit","bitsCount","valuesCount","bitsData","l","byteIndex","bitShift","lastByteIndex","lastBitShift","lastValue","decodeWaveform","fillStyle","progressFillStyle","ctx","globalAlpha","spikeHeight","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","MouseEvent","targetTouches","handleStartSeek","handleStopSeek","handleTranscribe","renderFirstLine","renderSecondLine","captureEvents","onCapture","onRelease","onDrag","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","backgroundImage","AnimatedIcon","Flame","transparent","withColor","noCross","rotationOffset","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","onSourceOpen","sourceBuffer","addSourceBuffer","loader","makeProgressiveLoader","next","done","readyState","endOfStream","appendBuffer","unloadVideo","checkIfStreamingSupported","buffer","ManagedMediaSource","MediaSource","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","noLoad","mediaFormat","delay","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","Progressive","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","ProfilePhoto","canPlayVideo","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","canHaveMedia","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","thumbnail","dataUri","blurredThumbCanvasRef","specialIcon","userFullName","getUserFullName","getFirstLetters","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","animationLevel","emojiStatus","emojiStatusSticker","emojiStatusSlug","ProfileInfo","isForMonoforum","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","currentPhotoIndex","setCurrentPhotoIndex","currentIndex","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","selectorToPreventScroll","onSwipe","SwipeDirection","Right","Left","totalPhotosLength","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","renderPhotoTabs","personalPhoto","fallbackPhoto","resolveTransitionName","canCopyTitle","isSystemBotChat","isReadDateRestrictedByMe","renderStatus","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","phoneCall","adminId","selectCanInviteToActiveGroupCall","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","isToncoin","renderOverviewItemValue","change","percentage","isChangeNegative","renderBalanceCell","usdRate","integerTonPart","decimalTonPart","toFixed","integerUsdPart","decimalUsdPart","period","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","isGraph","obj","openChatWithInfo","openStoryViewer","toggleStoriesHidden","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","isClosing","hidden","closing","useHorizontalScroll","StoryRibbonButton","AbsoluteVideo","videoUrl","load","recalculatePositionAndSize","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","customColor","useDynamicColorListener","colorFilter","useColorFilter","playersById","clearPlayers","player","synchronizeElements","playerIdsToClear","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","isLottie","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","createPlayer","animation","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","fastRaf","scroller","newHeight","isOverflown","transitionDuration","log","toggle","htmlRef","focusInput","getIsHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","placeholderAriaLabel","onChange","onKeyDown","isComposing","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","anchorPosition","orderDiffs","numberOfUp","numberOfDown","Infinity","typingUser","typingUserName","hasSpoiler","getMessageHtmlId","decoding","shouldUseDraft","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","stopPrevious","RoundVideo","playerRef","circleRef","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","playerEl","strokeDashOffset","stopPlaying","capturePlaying","togglePlaying","isPriority","onEnded","cx","cy","replaceWithTeact","STARS_ICON_PLACEHOLDER","originalDuration","onInit","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","mediaHandlers","closeAudioPlayer","skipTime","seekOffset","seekTime","makeMediaHandlers","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","prevShouldPlay","playIfPresent","setTime","audioProxy","SponsoredContextMenu","sponsorInfo","canReport","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","SponsoredMessageContextMenuContainer","randomId","additionalInfo","onItemClick","openAboutAdsModal","reportSponsored","hideSponsored","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","handleReportSponsoredMessage","ICON_SIZE","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","lastReadInboxMessageId","selectTopics","isChatMuted","canDelete","selectCanDeleteTopic","Topic","deleteTopic","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","canToggleClosed","getCanManageTopic","canTogglePinned","actionUnreadMark","actionCloseTopic","useTopicContextActions","ForumPanel","onOpenAnimationStart","scrollTopHandlerRef","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","waitForTransitionEnd","onTransitionEnd","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","renderTopics","GENERAL_TOPIC_ID","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeElectronListener","electron","on","FULLSCREEN_CHANGE","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","getSingularPaidMedia","extendedMedia","singularMedia","accumulate","initValue","accumulator","calculateContainerSize","layout","sides","calculateAlbumLayout","ratios","isSingleMessage","allMedia","paidMedia","getMessageContent","getRatios","isPaidMedia","proportions","ratio","getProportions","averageRatio","getAverageRatio","albumCount","forceCalc","maxWidth","getAvailableWidth","params","minWidth","spacing","originalRatios","clamp","cropRatios","attempts","pushAttempt","lineCounts","heights","currentCount","multiHeight","attemptCount","sum","first","second","third","fourth","optimalAttempt","optimalDiff","lineCount","totalHeight","bad1","bad2","line","optimalCounts","optimalHeights","rowCount","colCount","lineHeight","col","layoutWithComplexLayouter","AlbumRectPart","layoutTwoTopBottom","layoutTwoLeftRightEqual","minimalWidth","secondWidth","firstWidth","layoutTwoLeftRight","layoutTwo","firstHeight","thirdHeight","secondHeight","rightWidth","leftWidth","layoutThreeLeftAndOther","layoutThreeTopAndOther","layoutThree","w","h0","w0","w2","w1","h1","layoutFourTopAndOther","h2","layoutFourLeftAndOther","layoutFour","containerStyle","initializationDeferred","Deferred","IS_TRANSLATION_SUPPORTED","CHAT_STATS","throttledMakeChatDecision","updateChatDetectedLanguage","chatStats","messagesChecked","translatableCount","detectableCount","languageOccurrences","isTranslatable","occurrences","QUICK_REACTION_AREA_WIDTH","QUICK_REACTION_AREA_HEIGHT","GROUP_MESSAGE_HOVER_ATTRIBUTE","useOuterHandlers","selectMessage","canReply","isContextMenuShown","quickReactionRef","shouldHandleMouseLeave","getIsMessageListReady","sendDefaultReaction","isQuickReactionVisible","markQuickReactionVisible","unmarkQuickReactionVisible","isSwiped","markSwiped","unmarkSwiped","doubleTapTimeoutRef","handleMouseMove","quickReactionContainer","quickReactionX","quickReactionWidth","quickReactionY","quickReactionHeight","isVisibleX","isVisibleY","excludedClosestSelector","preventMessageInputBlur","clearInterval","getIsKeyboardVisible","handleTap","handleDoubleClick","quoteOffset","handleContentDoubleClick","handleSendQuickReaction","lastGroupElement","getLastElementInDocumentGroup","handleDocumentGroupMouseLeave","handleDocumentGroupMouseEnter","nextElementSibling","renderPictogram","srcUrl","getPictogramDimensions","EmbeddedStory","isFullStory","isExpiredStory","isVideoStory","getStoryMediaHash","pictogramUrl","handleFastClick","peerColor","shouldReset","TopicChip","getTopicColorCssVariable","blankSrc","withSelectControl","WrappedComponent","noSelectControls","selectIsMessageSelected","toggleMessageSelection","handleMessageSelect","withShift","newProps","dims","PhotoWithSelect","VideoWithSelect","activeDownloads","selectActiveDownloads","uploadsByKey","fileUploads","byMessageKey","Album","hasCustomAppendix","albumLayout","cancelUploadMedia","mainMessage","mediaCount","handlePaidMediaClick","handleAlbumMessageClick","handleCancelUpload","containerWidth","containerHeight","renderingPaidMedia","paidPhotoOrPreview","paidVideoOrPreview","fileUpload","getMessageKey","selectCanAutoLoadMedia","selectCanAutoPlayMedia","getIsDownloading","useAnimatedEmoji","soundId","activeEmojiInteractions","preferredSize","interactWithAnimatedEmoji","sendEmojiInteraction","sendWatchingEmojiInteraction","audioRef","soundMediaData","interactions","startedInteractions","sendInteractionBunch","startSize","isReversed","performance","interactionMessageId","customEmojiId","selectAnimatedEmojiEffect","selectAnimatedEmojiSound","AnimatedCustomEmoji","getCustomEmojiSize","LIKE_STICKER_ID","isBig","withSharedAnimation","AnimatedEmoji","forceLoadPreview","quality","forcePreview","CommentButton","isCustomShape","asActionButton","shouldRenderLoading","useAsyncRendering","originMessageId","recentReplierIds","originChannelId","isComments","recentRepliers","hasUnread","commentsText","getContactName","contact","firstName","lastName","Contact","openAddContactDialog","isRegistered","canAddContact","getCanAddContact","handleAddContact","emojiIconClassName","ContextMenuContainer","COLOR","FactCheck","factCheck","isToggleDisabled","cutoutRef","isCollapsible","setIsCollapsed","useCollapsibleLines","countryLocalized","countryCode","canExpand","handleExpand","handleToggle","Separator","Game","canAutoLoadMedia","game","getGamePreviewPhotoHash","getGamePreviewVideoHash","videoBlobUrl","handleGameClick","inlineButtons","giveaway","channelIds","giftSticker","selectGiftStickerForDuration","months","Giveaway","isLoadingInfo","giveawayInfo","setGiveawayInfo","giveawayResults","isResults","untilDate","prizeDescription","quantity","winnersCount","hasEnded","translatedNames","countries","isoToEmoji","handlePeerClick","handleShowInfoClick","callApi","handleCloseInfo","giveawayInfoTitle","PartyPopper","winnerIds","PeerChip","withPeerColors","renderGiveawayResultsDescription","formatDateTimeToString","renderGiveawayDescription","isOnlyConfirm","isResultsInfo","isApiPeerChat","endDate","formatDateAtTime","otherChannelsCount","otherChannelsString","isSeveral","firstKey","giveawayDuration","firstParagraph","additionalPrizes","secondKey","secondParagraph","activatedCount","isRefunded","isWinner","lastParagraph","disallowedCountry","adminDisallowedChatId","disallowedChat","disallowedChatTitle","joinedTooEarlyDate","isParticipating","renderGiveawayInfo","InlineButtons","renderIcon","RE_TME_LINK","buttonType","Invoice","invoice","getMessageInvoice","isTest","photoUrl","getWebDocumentHash","crossOrigin","forceAspectRatio","formatCurrency","InvoiceMediaPreview","isConnected","openInvoice","loadExtendedMedia","refreshExtendedMedia","isExtendedMedia","spoiler","buy","lock","formatCurrencyAsString","TIMER_CIRCUMFERENCE","TIMER_RADIUS","MOVE_THRESHOLD","PinSvg","Location","countdownRef","location","getMessageLocation","serverTime","isExpired","isGeoLiveExpired","secondsBeforeEnd","setPoint","shouldRenderText","prevMediaBlobUrl","mapBlobUrl","accuracyRadiusPx","accuracyRadius","updateCountdown","countdownEl","svgEl","lastElementChild","timerEl","firstElementChild","timeLeft","formatCountdownShort","renderPin","pinClassName","heading","venueType","iconSrc","mapPin","renderOverlay","formatLocationLastUpdate","editDate","renderInfo","MessageMeta","signature","withReactionOffset","repliesThreadInfo","renderQuickReactionButton","noReplies","isTranslated","withFullDate","onTranslationClick","onEffectClick","onOpenThread","paidMessageStars","markActivated","handleImportedClick","dateTitle","createDateTime","timeFormat","editDateTime","isEdited","forwardedDateTime","savedDate","viewsTitle","viewsCount","forwardsCount","repliesTitle","isImported","containerClassName","isVideoProcessingPending","MessagePhoneCall","reason","isMissed","isCancelled","handleCall","formattedDuration","formatTimeDuration","timeFormatted","getCallMessageKey","PaidMediaOverlay","isClickable","isBought","starsAmount","getPercentage","total","PollOption","answer","voteResults","totalVoters","maxVotersCount","correctResults","option","correctAnswer","showIcon","isChosen","answerPercent","votersCount","finalPercent","setFinalPercent","lineWidth","isAnimationDoesNotStart","lineStyle","getPollTypeString","summary","isPublic","closed","quiz","getReadableVotersCount","Poll","onSendVote","loadMessage","openPollResults","isSubmitting","setIsSubmitting","chosenOptions","setChosenOptions","wasSubmitted","setWasSubmitted","closePeriod","setClosePeriod","closeDate","timerCircleRef","hasVoted","canVote","canViewResult","isMultiple","multipleChoice","recentVoterIds","isCorrect","answers","chosen","timer","recentVoters","handleRadioChange","handleCheckboxChange","handleVoteClick","handleViewResultsClick","showSolution","solution","solutionEntities","question","CheckboxGroup","selected","loadingOptions","isRound","RadioGroup","loadingOption","Sticker","withEffect","onStopEffect","effectRef","hasEffect","IS_WEBM_SUPPORTED","canLoad","mediaHashEffect","effectBlobUrl","isPlayingEffect","startPlayingEffect","stopPlayingEffect","handleEffectEnded","shouldRenderEffect","openModal","isMemojiSticker","getStickerDimensions","fullMediaClassName","AnimatedSticker","imageHash","imgBlobUrl","isSinglePeer","isSingleStory","connectionState","BaseStory","selectPeerStories","targetUser","thumbUrl","TodoList","todoList","toggleTodoCompleted","completions","othersCanComplete","completedTasks","setCompletedTasks","completedTasksSet","canToggle","completedIds","itemId","handleTaskLabelClick","handleTaskToggle","newCompletedTasks","newCompletedId","newIncompletedId","incompletedIds","isReadOnly","tasks","task","completedBy","subLabel","getPeerFullTitle","onClickLabel","WebPageUniqueGift","gift","stickerRef","backdrop","model","pattern","getGiftAttributes","isHover","markHover","unmarkHover","backgroundColors","centerColor","edgeColor","RadialPatternBackground","patternColor","patternIcon","WebPage","messageWebPage","backgroundEmojiId","onDocumentClick","onContainerClick","onAudioPlay","onCancelMediaTransfer","openTelegramLink","stickersRef","handleMediaClick","handleContainerClick","fullWebPage","hasCustomColor","isWithTextColor","documents","linkTimestamp","handleOpenTelegramLink","isStory","isGift","quickButtonLangKey","getWebpageButtonLangKey","isEmoji","quickButtonTitle","isArticle","isSquarePhoto","getPhotoFullDimensions","getIsSmallPhoto","isMediaInteractive","EmojiIconBackground","emojiDocumentId","shouldSkipModal","isSafe","caption","isRectangular","noForcedUpperCase","QUICK_REACTION_SIZE","EXTRA_SPACE_FOR_REACTIONS","focusedMessage","activeReactions","loadingThread","withSenderName","isLastInDocumentGroup","isFirstInGroup","viaBotId","transcriptionId","viaBusinessBotId","selectFullWebPageFromMessage","isGroup","webPageStoryData","webPageStory","forceSenderName","isAnonymousOwnMessage","canShowSender","originSender","botSender","senderAdminMember","adminMembersById","isThreadTop","replyFrom","getMessageReplyInfo","storyReplyPeerId","storyReplyId","getStoryReplyInfo","shouldHideReply","replyMessage","selectReplyMessage","forwardHeader","replyMessageSender","selectSenderFromHeader","replyMessageForwardSender","replyMessageChat","isReplyPrivate","replyStory","storySender","selectUploadProgress","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","isResizingContainer","quote","focusedQuote","focusedQuoteOffset","scrollTargetPosition","middleSearch","selectCurrentMiddleSearch","highlight","isHashtag","getMessageSingleRegularEmoji","animatedCustomEmoji","getMessageSingleCustomEmoji","selectCanReplyToMessage","downloadableMedia","selectMessageDownloadableMedia","commentsMessage","isInDocumentGroup","documentGroupFirstMessageId","selectMessageIdsByGroupId","reactionMessage","hasUnreadReaction","unreadReactions","hasTopicChip","messageTopic","selectChatTranslations","requestedTranslationLanguage","selectRequestedMessageTranslationLanguage","requestedChatTranslationLanguage","areTranslationsEnabled","hasActiveReactions","senderBoosts","boostsApplied","chatLevel","boostLevel","transcribeMinLevel","groupTranscribeLevelMin","canTranscribeVoice","viaBusinessBot","selectPollFromMessage","maxTimestamp","selectMessageTimestampableDuration","selectMessageLastPlaybackTimestamp","minFutureTime","starsSuggestedPostFutureMin","isReplyMediaNsfw","selectIsMessageProtected","isChatProtected","selectIsChatProtected","isGroupSelected","selectIsDocumentGroupSelected","isPinnedList","canAutoPlayMedia","shouldLoopStickers","selectShouldLoopStickers","defaultReaction","selectDefaultReaction","transcriptions","transcribedText","shouldDetectChatLanguage","selectShouldDetectChatLanguage","hasLinkedChat","linkedChatId","withAnimatedEffects","isLoadingComments","isCommentsInfo","loadingChatId","loadingMessageId","tags","savedReactionTags","Message","observeIntersectionForBottom","noComments","appearanceOrder","isJustAdded","isLastInGroup","isFirstInDocumentGroup","isLastInList","memoFirstUnreadIdRef","onIntersectPinnedMessage","clickSuggestedMessageButton","rejectSuggestedPost","openSuggestedPostApprovalModal","disableContextMenuHint","animateUnreadReaction","markMentionsRead","bottomMarkerRef","setTranscriptionHidden","isPlayingSnapAnimation","setIsPlayingSnapAnimation","isPlayingDeleteAnimation","setIsPlayingDeleteAnimation","requestEffect","hideEffect","isDeclineDialogOpen","openDeclineDialog","closeDeclineDialog","declineReason","setDeclineReason","contextMenuTarget","noAppearanceAnimation","markShown","MESSAGE_APPEARANCE_DELAY","viewportPinnedIdsToRemove","hasMessageReply","isReplyToMessage","paidMediaPhoto","paidMediaVideo","messageReplyInfo","storyReplyInfo","withVoiceTranscription","hasStoryReply","hasThread","getMessageCustomShape","hasAnimatedEmoji","hasReactions","areReactionsEmpty","isLinkedChannelPost","isMention","canShowSenderBoosts","isStoryMention","isAlbum","msg","isInDocumentGroupNotFirst","isInDocumentGroupNotLast","canShowActionButton","canForward","isForwardingAllowed","canFocus","fromMessageId","hasFactCheck","hasForwardedCustomShape","hasSubheader","childMessageIds","avatarPeer","messageColorPeer","senderPeer","handleSenderClick","handleViaBotClick","handleReplyClick","handleDocumentClick","handleAudioPlay","handleAlbumMediaClick","handlePhotoMediaClick","handleVideoMediaClick","handleMetaClick","handleTranslationClick","handleOpenThread","handleReadMedia","handleVoteSend","handleGroupForward","handleForward","handleFocus","handleFocusForwarded","handleDocumentGroupSelectAll","handleTopicChipClick","handleStoryClick","isTranslatingChat","markMessagesRead","sendPollVote","openForwardMenu","searchChatMediaMessages","replyToTopId","isQuote","channelPostId","focusMessageId","replyMessageId","ScheduledInline","openMediaViewerWithPhotoOrVideo","withDynamicLoading","currentMediaMessageId","videoContent","webpageTimestamp","albumMessageId","albumIndex","ScheduledAlbum","originalChatId","savedFromPeerId","groupedChatId","selectWithGroupedId","useInnerHandlers","handleEffectClick","isPartialAlbumDelete","isDeleting","textMessage","hasMultipleCaptions","captionMessage","hasTextContent","hasMessageText","hasUnreadMention","getIsReady","setLanguage","detectLanguage","useTextLanguage","LimitedMap","previousMetadata","processMessageMetadata","useDetectChatLanguage","shouldTranslate","isMessageTranslatable","isTranslationPending","previousTranslatedText","currentTranslatedText","isMediaWithCommentButton","withCommentButton","withQuickReactionButton","hasOutsideReactions","hasCommentCounter","hasActionButton","isGeoLiveActive","peerColorClass","isInvertibleMedia","classNames","MESSAGE_CONTENT_CLASS_NAME","isMedia","isMediaWithNoText","hasInlineKeyboard","isViaBot","hasFooter","emojiOnlyCount","EMOJI_SIZES","buildContentClassName","withAppendix","emojiSize","paidMessageStarsInMeta","metaPosition","reactionsPosition","quickReactionPosition","useFocusMessage","viaBusinessBotTitle","canShowPostAuthor","postAuthorTitle","useMessageResizeObserver","bottomMarker","isElementInViewport","unreadMentionIds","extraPadding","sizeCalculations","calculatedWidth","contentWidth","reactionsMaxWidth","noMediaCorners","previewWidth","previewHeight","calculateDimensionsForMessageMedia","fromOwnMessage","renderMessageText","isForAnimation","MessageText","messageOrStory","canBeEmpty","ReactionStaticEmoji","renderReactionsAndMeta","Reactions","metaChildren","noRecentReactors","renderInvertedMediaContent","textContentClass","footerClass","hasContentAfterText","isMetaInText","renderWebPage","renderInvertibleMediaContent","getMessageWebPage","shouldRenderSenderName","renderForwardTitle","handleSuggestedMessageButton","handleDeclineReasonChange","handleDeclineConfirm","rejectComment","renderSenderName","shouldSkipRenderForwardTitle","shouldSkipRenderAdminTitle","senderEmojiStatus","senderIsPremium","shouldRenderForwardAvatar","hasBotSenderUsername","senderColor","EMOJI_STATUS_LOOP_LIMIT","fakeType","FakeIcon","forwardAuthor","shouldRenderSuggestedPostButtons","isAccepted","isRejected","isSuggestedPostExpired","scheduleDate","onCopy","onDoubleClick","onMouseMove","shouldReadMedia","EmbeddedMessage","forwardSender","Story","StoryMention","MessageAppendix","isOutside","targetHref","InputText","NBSP","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","replyForwardInfo","forwardSendersTitle","peerTitles","conjunction","senderChatTitle","forwardSenderTitle","areSendersSame","priceText","TON_CURRENCY_CODE","formatTonAsIcon","shouldConvertFromNanos","scheduleText","formatScheduledDateTime","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","renderTextContent","isReplyToQuote","renderSender","isFullVideo","shouldRenderVideo","freezeWhenClosed","preloadedStories","canPreload","aroundStoryId","isArray","mediaHashes","isStream","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","head","autoplay","disableRemotePlayback","preloadProgressive","preloadHashes","preloadIds","findIdsAroundCurrentId","currentStoryId","altVideos","getPreloadMediaHashes","dependencies","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","rel","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","fullSize","startPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","handleEnded","effectClassName"],"sourceRoot":""}