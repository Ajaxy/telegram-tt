{"version":3,"file":"7405.2a893454f043b109502f.js","mappings":"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","sources":["webpack://telegram-t/./src/hooks/useImageLoader.ts","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx","webpack://telegram-t/./src/util/directInputManager.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/util/events/getPointerPosition.ts","webpack://telegram-t/./src/util/trapFocus.ts","webpack://telegram-t/./src/components/common/TrackingMonkey.tsx","webpack://telegram-t/./src/components/auth/AuthCode.tsx","webpack://telegram-t/./src/components/auth/AuthPassword.tsx","webpack://telegram-t/./src/components/auth/AuthRegister.tsx","webpack://telegram-t/./src/hooks/useLayoutEffectWithPrevDeps.ts","webpack://telegram-t/./src/global/helpers/payments.ts","webpack://telegram-t/./src/util/hoc/freezeWhenClosed.ts"],"sourcesContent":["import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { preloadImage } from '../util/files';\nimport useAsync from './useAsync';\n\nexport type UseImageLoaderResult = {\n  image?: HTMLImageElement;\n};\n\nexport default function useImageLoader(file?: Blob): UseImageLoaderResult {\n  const urlRef = useRef<string | undefined>();\n\n  const { result: image } = useAsync(() => {\n    if (!file) {\n      return Promise.resolve(undefined);\n    }\n\n    if (urlRef.current) {\n      URL.revokeObjectURL(urlRef.current);\n    }\n\n    const url = URL.createObjectURL(file);\n    urlRef.current = url;\n\n    return preloadImage(url);\n  }, [file]);\n\n  useEffect(() => {\n    return () => {\n      if (urlRef.current) {\n        URL.revokeObjectURL(urlRef.current);\n        urlRef.current = undefined;\n      }\n    };\n  }, []);\n\n  return { image };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useCallback } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","let counter = 0;\n\nexport function disableDirectTextInput() {\n  counter += 1;\n}\n\nexport function enableDirectTextInput() {\n  counter -= 1;\n}\n\nexport function getIsDirectTextInputDisabled() {\n  return counter > 0;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  const inputRef = useRef<HTMLInputElement>();\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <Icon name={isPasswordVisible ? 'eye' : 'eye-crossed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button size=\"smaller\" type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","export default function getPointerPosition(e: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent) {\n  if ('touches' in e) {\n    return {\n      x: e.touches[0].clientX,\n      y: e.touches[0].clientY,\n    };\n  }\n\n  return {\n    x: e.clientX,\n    y: e.clientY,\n  };\n}\n","export default function trapFocus(element: HTMLElement) {\n  function handleKeyDown(e: KeyboardEvent) {\n    if (e.key !== 'Tab') {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    const focusableElements = Array.from(\n      element.querySelectorAll<HTMLElement>('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'),\n    );\n    if (!focusableElements.length) {\n      return;\n    }\n\n    const currentFocusedIndex = focusableElements.findIndex((em) => em.isSameNode(document.activeElement));\n    let newFocusedIndex = 0;\n    if (currentFocusedIndex >= 0) {\n      if (e.shiftKey) {\n        newFocusedIndex = currentFocusedIndex > 0\n          ? currentFocusedIndex - 1\n          : focusableElements.length - 1;\n      } else {\n        newFocusedIndex = currentFocusedIndex < focusableElements.length - 1\n          ? currentFocusedIndex + 1\n          : 0;\n      }\n    }\n\n    focusableElements[newFocusedIndex].focus();\n  }\n\n  document.addEventListener('keydown', handleKeyDown, false);\n\n  return () => {\n    document.removeEventListener('keydown', handleKeyDown, false);\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useCallback, useState } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  code: string;\n  codeLength: number;\n  trackingDirection: number;\n  isTracking: boolean;\n  isBig?: boolean;\n};\n\nconst TRACKING_START_FRAME = 15;\nconst TRACKING_END_FRAME = 180;\n\nconst TrackingMonkey: FC<OwnProps> = ({\n  code,\n  codeLength,\n  trackingDirection,\n  isTracking,\n  isBig,\n}) => {\n  const [isFirstMonkeyLoaded, setIsFirstMonkeyLoaded] = useState(false);\n  const { isMobile } = useAppLayout();\n  const trackningFramesPerSymbol = (TRACKING_END_FRAME - TRACKING_START_FRAME) / codeLength;\n  const stickerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  const handleFirstMonkeyLoad = useCallback(() => setIsFirstMonkeyLoaded(true), []);\n\n  function getTrackingFrames(): [number, number] {\n    const startFrame = (code && code.length > 1) || trackingDirection < 0\n      ? TRACKING_START_FRAME + trackningFramesPerSymbol * (code.length - 1)\n      : 0;\n    const endFrame = code.length === codeLength\n      ? TRACKING_END_FRAME\n      : TRACKING_START_FRAME + trackningFramesPerSymbol * code.length;\n\n    if (trackingDirection < 1) {\n      return [\n        endFrame,\n        startFrame,\n      ];\n    }\n\n    return [\n      startFrame,\n      endFrame,\n    ];\n  }\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stickerSize}\n        className={isTracking ? 'hidden' : undefined}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyIdle}\n        play={!isTracking}\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stickerSize}\n        className={!isTracking ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyTracking}\n        playSegment={isTracking ? getTrackingFrames() : undefined}\n        speed={2}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(TrackingMonkey);\n","import type { FormEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\n\nimport { IS_TOUCH_ENV } from '../../util/browser/windowEnvironment';\nimport { pick } from '../../util/iteratees';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\n\nimport Icon from '../common/icons/Icon';\nimport TrackingMonkey from '../common/TrackingMonkey';\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\n\ntype StateProps = Pick<GlobalState, 'authPhoneNumber' | 'authIsCodeViaApp' | 'authIsLoading' | 'authErrorKey'>;\n\nconst CODE_LENGTH = 5;\n\nconst AuthCode: FC<StateProps> = ({\n  authPhoneNumber,\n  authIsCodeViaApp,\n  authIsLoading,\n  authErrorKey,\n}) => {\n  const {\n    setAuthCode,\n    returnToAuthPhoneNumber,\n    clearAuthErrorKey,\n  } = getActions();\n\n  const lang = useLang();\n  const inputRef = useRef<HTMLInputElement>();\n\n  const [code, setCode] = useState<string>('');\n  const [isTracking, setIsTracking] = useState(false);\n  const [trackingDirection, setTrackingDirection] = useState(1);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, []);\n\n  useHistoryBack({\n    isActive: true,\n    onBack: returnToAuthPhoneNumber,\n  });\n\n  const onCodeChange = useCallback((e: FormEvent<HTMLInputElement>) => {\n    if (authErrorKey) {\n      clearAuthErrorKey();\n    }\n\n    const { currentTarget: target } = e;\n    target.value = target.value.replace(/[^\\d]+/, '').substr(0, CODE_LENGTH);\n\n    if (target.value === code) {\n      return;\n    }\n\n    setCode(target.value);\n\n    if (!isTracking) {\n      setIsTracking(true);\n    } else if (!target.value.length) {\n      setIsTracking(false);\n    }\n\n    if (code && code.length > target.value.length) {\n      setTrackingDirection(-1);\n    } else {\n      setTrackingDirection(1);\n    }\n\n    if (target.value.length === CODE_LENGTH) {\n      setAuthCode({ code: target.value });\n    }\n  }, [authErrorKey, code, isTracking, setAuthCode]);\n\n  function handleReturnToAuthPhoneNumber() {\n    returnToAuthPhoneNumber();\n  }\n\n  return (\n    <div id=\"auth-code-form\" className=\"custom-scroll\">\n      <div className=\"auth-form\">\n        <TrackingMonkey\n          code={code}\n          codeLength={CODE_LENGTH}\n          isTracking={isTracking}\n          trackingDirection={trackingDirection}\n        />\n        <h1>\n          {authPhoneNumber}\n          <div\n            className=\"auth-number-edit div-button\"\n            onClick={handleReturnToAuthPhoneNumber}\n            role=\"button\"\n            tabIndex={0}\n            title={lang('WrongNumber')}\n            aria-label={lang('WrongNumber')}\n          >\n            <Icon name=\"edit\" />\n          </div>\n        </h1>\n        <p className=\"note\">\n          {lang(authIsCodeViaApp ? 'SentAppCode' : 'LoginJustSentSms', undefined, {\n            withNodes: true,\n            withMarkdown: true,\n          })}\n        </p>\n        <InputText\n          ref={inputRef}\n          id=\"sign-in-code\"\n          label={lang('Code')}\n          onInput={onCodeChange}\n          value={code}\n          error={authErrorKey && lang.withRegular(authErrorKey)}\n          autoComplete=\"off\"\n          inputMode=\"numeric\"\n        />\n        {authIsLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['authPhoneNumber', 'authIsCodeViaApp', 'authIsLoading', 'authErrorKey']),\n)(AuthCode));\n","import type { FC } from '../../lib/teact/teact';\nimport { memo, useCallback, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\n\nimport { pick } from '../../util/iteratees';\n\nimport useLang from '../../hooks/useLang';\n\nimport PasswordForm from '../common/PasswordForm';\nimport MonkeyPassword from '../common/PasswordMonkey';\n\ntype StateProps = Pick<GlobalState, 'authIsLoading' | 'authErrorKey' | 'authHint'>;\n\nconst AuthPassword: FC<StateProps> = ({\n  authIsLoading, authErrorKey, authHint,\n}) => {\n  const { setAuthPassword, clearAuthErrorKey } = getActions();\n\n  const lang = useLang();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleChangePasswordVisibility = useCallback((isVisible) => {\n    setShowPassword(isVisible);\n  }, []);\n\n  const handleSubmit = useCallback((password: string) => {\n    setAuthPassword({ password });\n  }, [setAuthPassword]);\n\n  return (\n    <div id=\"auth-password-form\" className=\"custom-scroll\">\n      <div className=\"auth-form\">\n        <MonkeyPassword isPasswordVisible={showPassword} />\n        <h1>{lang('LoginHeaderPassword')}</h1>\n        <p className=\"note\">{lang('LoginEnterPasswordDescription')}</p>\n        <PasswordForm\n          clearError={clearAuthErrorKey}\n          error={authErrorKey && lang.withRegular(authErrorKey)}\n          hint={authHint}\n          isLoading={authIsLoading}\n          isPasswordVisible={showPassword}\n          onChangePasswordVisibility={handleChangePasswordVisibility}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['authIsLoading', 'authErrorKey', 'authHint']),\n)(AuthPassword));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport type React from '../../lib/teact/teact';\nimport { memo, useCallback, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\n\nimport { pick } from '../../util/iteratees';\n\nimport useLang from '../../hooks/useLang';\n\nimport AvatarEditable from '../ui/AvatarEditable';\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\n\ntype StateProps = Pick<GlobalState, 'authIsLoading' | 'authErrorKey'>;\n\nconst AuthRegister: FC<StateProps> = ({\n  authIsLoading, authErrorKey,\n}) => {\n  const { signUp, clearAuthErrorKey, uploadProfilePhoto } = getActions();\n\n  const lang = useLang();\n  const [isButtonShown, setIsButtonShown] = useState(false);\n  const [croppedFile, setCroppedFile] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n\n  const handleFirstNameChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    if (authErrorKey) {\n      clearAuthErrorKey();\n    }\n\n    const { target } = event;\n\n    setFirstName(target.value);\n    setIsButtonShown(target.value.length > 0);\n  }, [authErrorKey]);\n\n  const handleLastNameChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n\n    setLastName(target.value);\n  }, []);\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    signUp({ firstName, lastName });\n\n    if (croppedFile) {\n      uploadProfilePhoto({ file: croppedFile });\n    }\n  }\n\n  return (\n    <div id=\"auth-registration-form\" className=\"custom-scroll\">\n      <div className=\"auth-form\">\n        <form action=\"\" method=\"post\" onSubmit={handleSubmit}>\n          <AvatarEditable onChange={setCroppedFile} />\n          <h2>{lang('YourName')}</h2>\n          <p className=\"note\">{lang('LoginRegisterDesc')}</p>\n          <InputText\n            id=\"registration-first-name\"\n            label={lang('LoginRegisterFirstNamePlaceholder')}\n            onChange={handleFirstNameChange}\n            value={firstName}\n            error={authErrorKey && lang.withRegular(authErrorKey)}\n            autoComplete=\"given-name\"\n          />\n          <InputText\n            id=\"registration-last-name\"\n            label={lang('LoginRegisterLastNamePlaceholder')}\n            onChange={handleLastNameChange}\n            value={lastName}\n            autoComplete=\"family-name\"\n          />\n          {isButtonShown && (\n            <Button size=\"smaller\" type=\"submit\" ripple isLoading={authIsLoading}>{lang('Next')}</Button>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['authIsLoading', 'authErrorKey']),\n)(AuthRegister));\n","import { useLayoutEffect, useRef } from '../lib/teact/teact';\n\nconst useLayoutEffectWithPrevDeps = <const T extends readonly any[]>(\n  cb: (args: T | readonly []) => void, dependencies: T, debugKey?: string,\n) => {\n  const prevDepsRef = useRef<T>();\n\n  return useLayoutEffect(() => {\n    const prevDeps = prevDepsRef.current;\n    prevDepsRef.current = dependencies;\n\n    return cb(prevDeps || []);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies, debugKey);\n};\n\nexport default useLayoutEffectWithPrevDeps;\n","import type {\n  ApiInputInvoice,\n  ApiInputSavedStarGift,\n  ApiMessage,\n  ApiRequestInputInvoice,\n  ApiRequestInputSavedStarGift,\n  ApiStarsAmount,\n  ApiStarsTransaction,\n  ApiStarsTransactionPeer,\n  ApiStarsTransactionPeerPeer,\n} from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { LangFn } from '../../util/localization';\nimport type { GlobalState } from '../types';\n\nimport arePropsShallowEqual from '../../util/arePropsShallowEqual';\nimport { selectChat, selectPeer, selectUser } from '../selectors';\n\nexport function getRequestInputInvoice<T extends GlobalState>(\n  global: T, inputInvoice: ApiInputInvoice,\n): ApiRequestInputInvoice | undefined {\n  if (inputInvoice.type === 'slug') return inputInvoice;\n\n  if (inputInvoice.type === 'stargiftResale') {\n    const {\n      slug,\n      peerId,\n    } = inputInvoice;\n    const peer = selectPeer(global, peerId);\n\n    if (!peer) return undefined;\n\n    return {\n      type: 'stargiftResale',\n      slug,\n      peer,\n    };\n  }\n\n  if (inputInvoice.type === 'stargift') {\n    const {\n      peerId, shouldHideName, giftId, message, shouldUpgrade,\n    } = inputInvoice;\n    const peer = selectPeer(global, peerId);\n\n    if (!peer) return undefined;\n\n    return {\n      type: 'stargift',\n      peer,\n      shouldHideName,\n      giftId,\n      message,\n      shouldUpgrade,\n    };\n  }\n\n  if (inputInvoice.type === 'starsgift') {\n    const {\n      userId, stars, amount, currency,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'starsgift',\n        user,\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stars') {\n    const {\n      stars, amount, currency,\n    } = inputInvoice;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'stars',\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'chatInviteSubscription') {\n    const { hash } = inputInvoice;\n\n    return {\n      type: 'chatInviteSubscription',\n      hash,\n    };\n  }\n\n  if (inputInvoice.type === 'message') {\n    const chat = selectChat(global, inputInvoice.chatId);\n    if (!chat) {\n      return undefined;\n    }\n    return {\n      type: 'message',\n      chat,\n      messageId: inputInvoice.messageId,\n    };\n  }\n\n  if (inputInvoice.type === 'premiumGiftStars') {\n    const {\n      months, userId, message,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'premiumGiftStars',\n      months,\n      message,\n      user,\n    };\n  }\n\n  if (inputInvoice.type === 'giftcode') {\n    const {\n      userIds, boostChannelId, amount, currency, option, message,\n    } = inputInvoice;\n    const users = userIds.map((id) => selectUser(global, id)).filter(Boolean);\n    const boostChannel = boostChannelId ? selectChat(global, boostChannelId) : undefined;\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giftcode',\n        amount,\n        currency,\n        users,\n        boostChannel,\n        message,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'starsgiveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription, stars, users,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'starsgiveaway',\n      purpose: {\n        type: 'starsgiveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n        stars,\n        users,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'giveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, option, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stargiftUpgrade') {\n    const { inputSavedGift, shouldKeepOriginalDetails } = inputInvoice;\n    const savedGift = getRequestInputSavedStarGift(global, inputSavedGift);\n    if (!savedGift) return undefined;\n\n    return {\n      type: 'stargiftUpgrade',\n      inputSavedGift: savedGift,\n      shouldKeepOriginalDetails,\n    };\n  }\n\n  if (inputInvoice.type === 'stargiftTransfer') {\n    const { inputSavedGift, recipientId } = inputInvoice;\n    const savedGift = getRequestInputSavedStarGift(global, inputSavedGift);\n    const peer = selectPeer(global, recipientId);\n    if (!savedGift || !peer) return undefined;\n\n    return {\n      type: 'stargiftTransfer',\n      inputSavedGift: savedGift,\n      recipient: peer,\n    };\n  }\n\n  return undefined;\n}\n\nexport function getRequestInputSavedStarGift<T extends GlobalState>(\n  global: T, inputGift: ApiInputSavedStarGift,\n): ApiRequestInputSavedStarGift | undefined {\n  if (inputGift.type === 'user') return inputGift;\n\n  if (inputGift.type === 'chat') {\n    const chat = selectChat(global, inputGift.chatId);\n    if (!chat) return undefined;\n\n    return {\n      type: 'chat',\n      chat,\n      savedId: inputGift.savedId,\n    };\n  }\n\n  return undefined;\n}\n\nexport function buildStarsTransactionCustomPeer(\n  peer: Exclude<ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer>,\n): CustomPeer {\n  if (peer.type === 'appStore') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.AppleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.AppleTopUp.Subtitle',\n      peerColorId: 5,\n    };\n  }\n\n  if (peer.type === 'playMarket') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.GoogleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.GoogleTopUp.Subtitle',\n      peerColorId: 3,\n    };\n  }\n\n  if (peer.type === 'fragment') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.FragmentTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.FragmentTopUp.Subtitle',\n      customPeerAvatarColor: '#000000',\n    };\n  }\n\n  if (peer.type === 'premiumBot') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Subtitle',\n      peerColorId: 1,\n      withPremiumGradient: true,\n    };\n  }\n\n  if (peer.type === 'ads') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramAds.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramAds.Subtitle',\n      peerColorId: 2,\n    };\n  }\n\n  if (peer.type === 'api') {\n    return {\n      avatarIcon: 'bots',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramBotApi.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramBotApi.Subtitle',\n      peerColorId: 4,\n    };\n  }\n\n  return {\n    avatarIcon: 'star',\n    isCustomPeer: true,\n    titleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    subtitleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    peerColorId: 0,\n  };\n}\n\nexport function formatStarsTransactionAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  const amount = starsAmount.amount + starsAmount.nanos / 1e9;\n  if (amount < 0) {\n    return `- ${lang.number(Math.abs(amount))}`;\n  }\n\n  return `+ ${lang.number(amount)}`;\n}\n\nexport function formatStarsAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  return lang.number(starsAmount.amount + starsAmount.nanos / 1e9);\n}\n\nexport function getStarsTransactionFromGift(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'giftStars') return undefined;\n\n  const { transactionId, stars } = action;\n\n  return {\n    id: transactionId,\n    stars: {\n      amount: stars,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: message.isOutgoing ? message.chatId : (message.senderId || message.chatId),\n    },\n    date: message.date,\n    isGift: true,\n    isMyGift: message.isOutgoing || undefined,\n  };\n}\n\nexport function getPrizeStarsTransactionFromGiveaway(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'prizeStars') return undefined;\n\n  const { transactionId, stars, boostPeerId } = action;\n\n  return {\n    id: transactionId,\n    stars: {\n      amount: stars,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: boostPeerId,\n    },\n    date: message.date,\n    giveawayPostId: message.id,\n  };\n}\n\nexport function areInputSavedGiftsEqual(one: ApiInputSavedStarGift, two: ApiInputSavedStarGift) {\n  return arePropsShallowEqual(one, two);\n}\n","import { type FC, type Props, useRef } from '../../lib/teact/teact';\n\ntype InjectProps<T extends FC, P extends Props> = FC<Parameters<T>[0] & P>;\n\ntype OwnProps = {\n  ignoreFreeze?: boolean;\n};\n\nexport default function freezeWhenClosed<T extends FC>(Component: T): InjectProps<T, OwnProps> {\n  function ComponentWrapper(props: Props) {\n    const newProps = useRef(props);\n\n    if (props.ignoreFreeze) return Component(props);\n\n    if (props.isOpen) {\n      newProps.current = props;\n    } else {\n      newProps.current = {\n        ...newProps.current,\n        isOpen: false,\n      };\n    }\n\n    return Component(newProps.current);\n  }\n\n  return ComponentWrapper as T;\n}\n"],"names":["useImageLoader","file","urlRef","useRef","result","image","useAsync","Promise","resolve","undefined","current","URL","revokeObjectURL","url","createObjectURL","preloadImage","useEffect","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","memo","PasswordMonkey","isPasswordVisible","isBig","isFirstMonkeyLoaded","markFirstMonkeyLoaded","useFlag","isPeekShown","markPeekShown","isMobile","useAppLayout","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","useTimeout","handleFirstMonkeyLoad","useCallback","_jsxs","id","className","children","_jsx","AnimatedSticker","size","STICKER_SIZE_TWO_FA","tgsUrl","LOCAL_TGS_URLS","MonkeyClose","playSegment","noLoop","onLoad","MonkeyPeek","counter","disableDirectTextInput","enableDirectTextInput","getIsDirectTextInputDisabled","callback","delay","savedCallback","useLastCallback","setTimeout","clearTimeout","PasswordForm","isLoading","error","hint","placeholder","submitLabel","description","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","lang","useOldLang","password","setPassword","useState","canSubmit","setCanSubmit","focusDelayTimeoutMs","IS_TOUCH_ENV","focus","requestMutation","select","action","event","preventDefault","stopEvent","autoComplete","buildClassName","dir","isRtl","type","tabIndex","ref","value","onChange","e","target","length","MIN_PASSWORD_LENGTH","maxLength","onClick","role","title","Icon","name","Button","ripple","disabled","getPointerPosition","x","touches","clientX","y","clientY","trapFocus","element","handleKeyDown","key","stopPropagation","focusableElements","Array","from","querySelectorAll","currentFocusedIndex","findIndex","em","isSameNode","document","activeElement","newFocusedIndex","shiftKey","addEventListener","removeEventListener","TrackingMonkey","code","codeLength","trackingDirection","isTracking","setIsFirstMonkeyLoaded","trackningFramesPerSymbol","stickerSize","MonkeyIdle","play","MonkeyTracking","startFrame","endFrame","getTrackingFrames","speed","withGlobal","global","pick","AuthCode","authPhoneNumber","authIsCodeViaApp","authIsLoading","authErrorKey","setAuthCode","returnToAuthPhoneNumber","clearAuthErrorKey","getActions","useLang","setCode","setIsTracking","setTrackingDirection","useHistoryBack","isActive","onBack","onCodeChange","currentTarget","replace","substr","withNodes","withMarkdown","InputText","label","onInput","withRegular","inputMode","Loading","AuthPassword","authHint","setAuthPassword","showPassword","setShowPassword","handleChangePasswordVisibility","isVisible","handleSubmit","MonkeyPassword","AuthRegister","signUp","uploadProfilePhoto","isButtonShown","setIsButtonShown","croppedFile","setCroppedFile","firstName","setFirstName","lastName","setLastName","handleFirstNameChange","handleLastNameChange","method","AvatarEditable","useLayoutEffectWithPrevDeps","cb","dependencies","debugKey","prevDepsRef","useLayoutEffect","prevDeps","getRequestInputInvoice","inputInvoice","slug","peerId","peer","selectPeer","shouldHideName","giftId","message","shouldUpgrade","userId","stars","amount","currency","user","selectUser","purpose","hash","chat","selectChat","chatId","messageId","months","userIds","boostChannelId","option","users","map","filter","Boolean","boostChannel","additionalChannelIds","untilDate","areWinnersVisible","countries","isOnlyForNewSubscribers","prizeDescription","additionalChannels","inputSavedGift","shouldKeepOriginalDetails","savedGift","getRequestInputSavedStarGift","recipientId","recipient","inputGift","savedId","buildStarsTransactionCustomPeer","avatarIcon","isCustomPeer","titleKey","subtitleKey","peerColorId","customPeerAvatarColor","withPremiumGradient","formatStarsTransactionAmount","starsAmount","nanos","number","Math","abs","formatStarsAmount","getStarsTransactionFromGift","content","transactionId","isOutgoing","senderId","date","isGift","isMyGift","getPrizeStarsTransactionFromGiveaway","boostPeerId","giveawayPostId","areInputSavedGiftsEqual","one","two","arePropsShallowEqual","freezeWhenClosed","Component","props","newProps","ignoreFreeze","isOpen"],"sourceRoot":""}