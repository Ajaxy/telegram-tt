{"version":3,"file":"2356.f19763f4ad22be0bce00.js","mappings":"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","sources":["webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/PeerChip.module.scss?346e","webpack://telegram-t/./src/components/common/PeerChip.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/helpers/gifts.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/components/common/pickers/PeerPicker.tsx","webpack://telegram-t/./src/components/common/pickers/PickerItem.module.scss?49ce","webpack://telegram-t/./src/components/common/pickers/PickerItem.tsx","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.module.scss?0cfb","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.tsx","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getSelectionAsFormattedText.ts","webpack://telegram-t/./src/components/common/PinMessageModal.async.tsx","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/components/middle/message/TimeMenuItem.module.scss?e6ff","webpack://telegram-t/./src/components/middle/message/LastEditTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/helpers/isSelectionRangeInsideMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/common/reactions/PaidReactionEmoji.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.tsx","webpack://telegram-t/./src/components/middle/message/reactions/Reactions.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/global/helpers/payments.ts","webpack://telegram-t/./src/global/helpers/peers.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useCustomBackground.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/usePrevious.ts","webpack://telegram-t/./src/hooks/useResizeMessageObserver.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/objects/customPeer.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/util/visibility/getOffsetToContainer.ts","webpack://telegram-t/./src/util/visibility/isElementInViewport.ts","webpack://telegram-t/./src/components/common/pickers/PickerStyles.module.scss?c0e4","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { throttleWithTickEnd } from '../../util/schedulers';\n\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n  isDisabled?: boolean;\n  ref?: React.RefObject<HTMLSpanElement>;\n};\n\nconst ANIMATION_TIME = 200;\nconst MAX_SIMULTANEOUS_ANIMATIONS = 10;\n\nlet scheduledAnimationsCounter = 0;\n\nconst resetCounterOnTickEnd = throttleWithTickEnd(() => {\n  scheduledAnimationsCounter = 0;\n});\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n  isDisabled,\n  ref,\n}) => {\n  const { isRtl } = useLang();\n\n  const prevText = usePreviousDeprecated(text);\n  const forceUpdate = useForceUpdate();\n\n  const shouldAnimate = scheduleAnimation(\n    !isDisabled && selectCanAnimateInterface(getGlobal()) && prevText !== undefined && prevText !== text,\n  );\n\n  const characters = useMemo(() => {\n    return shouldAnimate ? renderAnimatedCharacters(text, prevText) : text;\n  }, [shouldAnimate, prevText, text]);\n\n  useEffect(() => {\n    if (!shouldAnimate) return undefined;\n\n    const timeoutId = window.setTimeout(() => {\n      forceUpdate();\n    }, ANIMATION_TIME);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [shouldAnimate, text]);\n\n  return (\n    <span ref={ref} className={buildClassName(className, !isDisabled && styles.root)} dir={isRtl ? 'rtl' : undefined}>\n      {characters}\n    </span>\n  );\n};\n\nexport default memo(AnimatedCounter);\n\nfunction scheduleAnimation(condition: boolean) {\n  if (!condition || scheduledAnimationsCounter >= MAX_SIMULTANEOUS_ANIMATIONS) return false;\n\n  if (scheduledAnimationsCounter === 0) {\n    resetCounterOnTickEnd();\n  }\n\n  scheduledAnimationsCounter++;\n\n  return true;\n}\n\nfunction renderAnimatedCharacters(text: string, prevText?: string) {\n  const elements: React.ReactNode[] = [];\n  const textLength = text.length;\n  const prevTextLength = prevText?.length ?? 0;\n\n  for (let i = 0; i <= textLength; i++) {\n    const charIndex = textLength - i;\n    const prevTextCharIndex = prevTextLength - i;\n\n    if (prevText && prevTextCharIndex >= 0 && text[charIndex] !== prevText[prevTextCharIndex]) {\n      elements.unshift(\n        <div className={styles.characterContainer}>\n          <div className={styles.character}>{text[charIndex] ?? ''}</div>\n          <div className={styles.characterOld}>{prevText[prevTextCharIndex]}</div>\n          <div className={styles.characterNew}>{text[charIndex] ?? ''}</div>\n        </div>,\n      );\n    } else {\n      elements.unshift(<span>{text[charIndex] ?? ''}</span>);\n    }\n  }\n\n  return elements;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerMediaHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && getStickerMediaHash(sticker, 'full');\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerMediaHash(sticker, 'preview') : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransitionDeprecated(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransitionDeprecated(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar, { AVATAR_SIZES } from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n\n  const pxSize = typeof size === 'number' ? size : AVATAR_SIZES[size];\n\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={`--_size: ${pxSize}px;`}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const el = ref.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    requestMutation(() => {\n      el.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n    });\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={styles.canvas}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <Icon name={isPasswordVisible ? 'eye' : 'eye-crossed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button size=\"smaller\" type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_Lq6_4e5\",\"minimized\":\"UhOZvxvs\",\"closeable\":\"uvvgSFUJ\",\"remove\":\"xVPG2UTy\",\"nonDestructive\":\"fAk5yEeV\",\"notClickable\":\"P8r3OoaX\",\"avatar\":\"La8BQ9yr\",\"iconWrapper\":\"NtoGLT22\",\"icon\":\"f91Ad80i\",\"name\":\"XPVuH29G\",\"squareAvatar\":\"JIHfTUVn\"};","import type { TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getPeerTitle } from '../../global/helpers';\nimport { isApiPeerChat } from '../../global/helpers/peers';\nimport { selectPeer, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerChip.module.scss';\n\ntype OwnProps<T = undefined> = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  peerId?: string;\n  // eslint-disable-next-line react/no-unused-prop-types\n  forceShowSelf?: boolean;\n  customPeer?: CustomPeer;\n  mockPeer?: ApiPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  isCloseNonDestructive?: boolean;\n  className?: string;\n  withPeerColors?: boolean;\n  withEmojiStatus?: boolean;\n  clickArg?: T;\n  onClick?: (arg: T) => void;\n  itemClassName?: string;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  isSavedMessages?: boolean;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PeerChip = <T,>({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  isCloseNonDestructive,\n  clickArg,\n  peer,\n  mockPeer,\n  customPeer,\n  className,\n  isSavedMessages,\n  withPeerColors,\n  withEmojiStatus,\n  onClick,\n  itemClassName,\n}: OwnProps<T> & StateProps) => {\n  const lang = useOldLang();\n\n  const apiPeer = mockPeer || peer;\n  const anyPeer = customPeer || apiPeer;\n\n  const chat = apiPeer && isApiPeerChat(apiPeer) ? apiPeer : undefined;\n\n  let iconElement: TeactNode | undefined;\n  let titleElement: TeactNode | undefined;\n  let titleText: string | undefined;\n\n  if (icon && title) {\n    iconElement = (\n      <div className={styles.iconWrapper}>\n        <Icon name={icon} style={styles.icon} />\n      </div>\n    );\n\n    titleElement = title;\n  } else if (anyPeer) {\n    iconElement = (\n      <Avatar\n        className={styles.avatar}\n        peer={anyPeer}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    titleText = getPeerTitle(lang, anyPeer) || title;\n    titleElement = title || (\n      <FullNameTitle peer={anyPeer} isSavedMessages={isSavedMessages} withEmojiStatus={withEmojiStatus} />\n    );\n  }\n\n  const fullClassName = buildClassName(\n    styles.root,\n    (chat?.isForum || customPeer?.isAvatarSquare) && styles.squareAvatar,\n    isMinimized && styles.minimized,\n    canClose && styles.closeable,\n    isCloseNonDestructive && styles.nonDestructive,\n    !onClick && styles.notClickable,\n    withPeerColors && getPeerColorClass(customPeer || peer),\n    className,\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick?.(clickArg!)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className={buildClassName(styles.name, itemClassName)} dir=\"auto\">\n          {titleElement}\n        </div>\n      )}\n      {canClose && (\n        <div className={styles.remove}>\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const peer = selectPeer(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      peer,\n      isSavedMessages,\n    };\n  },\n)(PeerChip)) as typeof PeerChip;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\",\"primary\":\"Zi0w7QJ3\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\n\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  isPrimary?: boolean;\n  className?: string;\n};\n\nconst PremiumProgress: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  isPrimary,\n  className,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const floatingBadgeRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const parentContainerRef = useRef<HTMLDivElement>(null);\n\n  const [shiftX, setShiftX] = useState(0);\n  const [tailPosition, setTailPosition] = useState(0);\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeRef.current && parentContainerRef.current && progress !== undefined) {\n      const badgeWidth = floatingBadgeRef.current.offsetWidth;\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const minShift = badgeWidth / 2;\n      const maxShift = parentWidth - badgeWidth / 2;\n      const currentShift = progress * parentWidth;\n      const safeShift = Math.max(minShift, Math.min(currentShift, maxShift));\n\n      setShiftX(safeShift / parentWidth);\n\n      let newTailPosition;\n      if (currentShift < minShift) {\n        newTailPosition = (progress * parentWidth) / (minShift * 2);\n      } else if (currentShift > maxShift) {\n        const progressMapped = (progress - (maxShift / parentWidth)) / (1 - maxShift / parentWidth);\n        newTailPosition = 0.5 + (progressMapped * 0.4);\n      } else {\n        newTailPosition = 0.5;\n      }\n      setTailPosition(newTailPosition);\n    }\n  };\n\n  useEffect(updateBadgePosition, [progress]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        isPrimary && styles.primary,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n        `--shift-x: ${shiftX}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumProgress);\n","import type {\n  ApiFormattedText,\n  ApiStarGift,\n  ApiStarGiftAttribute,\n  ApiStarGiftAttributeBackdrop,\n  ApiStarGiftAttributeModel,\n  ApiStarGiftAttributeOriginalDetails,\n  ApiStarGiftAttributePattern,\n  ApiSticker,\n} from '../../../api/types';\n\nexport type GiftAttributes = {\n  model?: ApiStarGiftAttributeModel;\n  originalDetails?: ApiStarGiftAttributeOriginalDetails;\n  pattern?: ApiStarGiftAttributePattern;\n  backdrop?: ApiStarGiftAttributeBackdrop;\n};\n\nexport function getStickerFromGift(gift: ApiStarGift): ApiSticker | undefined {\n  if (gift.type === 'starGift') {\n    return gift.sticker;\n  }\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model')?.sticker;\n}\n\nexport function getTotalGiftAvailability(gift: ApiStarGift): number | undefined {\n  if (gift.type === 'starGift') {\n    return gift.availabilityTotal;\n  }\n\n  return gift.totalCount;\n}\n\nexport function getGiftMessage(gift: ApiStarGift): ApiFormattedText | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => attr.type === 'model')?.message;\n}\n\nexport function getGiftAttributes(gift: ApiStarGift): GiftAttributes | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return getGiftAttributesFromList(gift.attributes);\n}\n\nexport function getGiftAttributesFromList(attributes: ApiStarGiftAttribute[]) {\n  const model = attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model');\n  const backdrop = attributes.find((attr): attr is ApiStarGiftAttributeBackdrop => attr.type === 'backdrop');\n  const pattern = attributes.find((attr): attr is ApiStarGiftAttributePattern => attr.type === 'pattern');\n  const originalDetails = attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => (\n    attr.type === 'originalDetails'\n  ));\n\n  return {\n    model,\n    originalDetails,\n    pattern,\n    backdrop,\n  };\n}\n","import { getGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiSponsoredMessage } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\nimport type { TextPart, ThreadId } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageStatefulContent,\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  asPreview,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n  threadId,\n  maxTimestamp,\n} : {\n  message: ApiMessage | ApiSponsoredMessage;\n  highlight?: string;\n  emojiSize?: number;\n  asPreview?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n  threadId?: ThreadId;\n  maxTimestamp?: number;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message)?.text;\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    asPreview,\n    isProtected,\n    forcePlayback,\n    messageId: 'id' in message ? message.id : undefined,\n    chatId: message.chatId,\n    threadId,\n    maxTimestamp,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: OldLangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const global = getGlobal();\n  const statefulContent = getMessageStatefulContent(global, message);\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, statefulContent, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, asPreview: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, statefulContent, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n  currentUserId?: string,\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n\n  return orderBy(chatIds, (id) => {\n    if (id === currentUserId) {\n      return Infinity;\n    }\n\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\n\nimport { DEBUG } from '../../../config';\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getGroupStatus, getUserStatus, isUserOnline } from '../../../global/helpers';\nimport { getPeerTypeKey, isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport PeerChip from '../PeerChip';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\ntype SingleModeProps<CategoryType extends string> = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedId?: string;\n  selectedIds?: never; // Help TS to throw an error if this is passed\n  selectedCategory?: CategoryType;\n  selectedCategories?: never;\n  onSelectedCategoryChange?: (category: CategoryType) => void;\n  onSelectedIdChange?: (id: string) => void;\n};\n\ntype MultipleModeProps<CategoryType extends string> = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedId?: never;\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  selectedCategory?: never;\n  selectedCategories?: CategoryType[];\n  onSelectedCategoriesChange?: (categories: CategoryType[]) => void;\n  onSelectedIdsChange?: (Ids: string[]) => void;\n};\n\ntype OwnProps<CategoryType extends string> = {\n  className?: string;\n  categories?: UniqueCustomPeer<CategoryType>[];\n  itemIds: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  categoryPlaceholderKey?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  itemClassName?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  withStatus?: boolean;\n  withPeerTypes?: boolean;\n  withPeerUsernames?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps<CategoryType> | MultipleModeProps<CategoryType>);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst ITEM_CLASS_NAME = 'PeerPickerItem';\n\nconst PeerPicker = <CategoryType extends string = CustomPeerType>({\n  className,\n  categories,\n  itemIds,\n  categoryPlaceholderKey,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  itemClassName,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  itemInputType,\n  withStatus,\n  withPeerTypes,\n  withPeerUsernames,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps<CategoryType>) => {\n  const lang = useOldLang();\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedIds = allowMultiple ? optionalProps.lockedSelectedIds : undefined;\n  const lockedUnselectedIds = allowMultiple ? optionalProps.lockedUnselectedIds : undefined;\n  const selectedCategories = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedCategories;\n    }\n\n    return optionalProps.selectedCategory ? [optionalProps.selectedCategory] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedCategory, optionalProps.selectedCategories]);\n\n  const selectedIds = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedIds;\n    }\n\n    return optionalProps.selectedId ? [optionalProps.selectedId] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedId, optionalProps.selectedIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (allowMultiple && categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      optionalProps.onSelectedCategoriesChange?.(newSelectedCategories);\n\n      return;\n    }\n\n    if (allowMultiple) {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      optionalProps.onSelectedIdsChange?.(newSelectedIds);\n\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      optionalProps.onSelectedCategoryChange?.(categoriesByType[id].type);\n      return;\n    }\n\n    optionalProps.onSelectedIdChange?.(id);\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemIds, Boolean(filterValue),\n  );\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const global = getGlobal();\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const peer = !isCategory ? selectPeer(global, id) : undefined;\n\n    const peerOrCategory = peer || category;\n    if (!peerOrCategory) {\n      if (DEBUG) return <div key={id}>No peer or category with ID {id}</div>;\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? (peer.isSelf && !forceShowSelf) : undefined;\n\n    const isAlwaysUnselected = lockedUnselectedIdsSet.has(id);\n    const isAlwaysSelected = lockedSelectedIdsSet.has(id);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      return undefined;\n    }\n\n    function getSubtitle() {\n      if (isAlwaysUnselected) return [lockedUnselectedSubtitle];\n      if (!peer) return undefined;\n\n      if (withPeerUsernames) {\n        const username = peer.usernames?.[0]?.username;\n        if (username) {\n          return [`@${username}`];\n        }\n      }\n\n      if (withStatus) {\n        if (isApiPeerChat(peer)) {\n          return [getGroupStatus(lang, peer)];\n        }\n\n        const userStatus = selectUserStatus(global, peer.id);\n        return [\n          getUserStatus(lang, peer, userStatus),\n          buildClassName(isUserOnline(peer, userStatus, true) && styles.onlineStatus),\n        ];\n      }\n\n      if (withPeerTypes) {\n        const langKey = getPeerTypeKey(peer);\n        return langKey && [lang(langKey)];\n      }\n\n      return undefined;\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={<FullNameTitle peer={peerOrCategory} />}\n        avatarElement={(\n          <Avatar\n            peer={peer || category}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        inputPosition=\"end\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(id, isAlwaysSelected))}\n      />\n    );\n  }, [\n    categoriesByType, forceShowSelf, isViewOnly, itemClassName, itemInputType, lang, lockedSelectedIdsSet,\n    lockedUnselectedIdsSet, lockedUnselectedSubtitle, onDisabledClick, selectedCategories, selectedIds,\n    withPeerTypes, withStatus, withPeerUsernames,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    if (!categories?.length) return undefined;\n    return (\n      <div key=\"categories\">\n        {categoryPlaceholderKey && <div className={styles.pickerCategoryTitle}>{lang(categoryPlaceholderKey)}</div>}\n        {categories?.map((category) => renderItem(category.type, true))}\n        <div className={styles.pickerCategoryTitle}>{lang('FilterChats')}</div>\n      </div>\n    );\n  }, [categories, categoryPlaceholderKey, lang, renderItem]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PeerChip\n              className={styles.peerChip}\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportIds}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className={styles.noResults}>{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(PeerPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OHkx_W75\",\"clickable\":\"VUSwo4t5\",\"separator\":\"P53DrbWA\",\"disabled\":\"tvZeVJPh\",\"title\":\"JSSC0N8V\",\"subtitle\":\"OYmzCSp2\",\"withAvatar\":\"dMT9byM6\",\"multiline\":\"neXqB2_A\",\"input\":\"kmjqObdP\",\"startInput\":\"F0Hv3EQm\",\"endInput\":\"iqGhSQGm\",\"avatarElement\":\"dnAaRPCo\"};","import React, { type TeactNode } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_IOS } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RippleEffect from '../../ui/RippleEffect';\n\nimport styles from './PickerItem.module.scss';\n\ntype OwnProps = {\n  title: TeactNode;\n  subtitle?: TeactNode;\n  avatarElement?: TeactNode;\n  inputElement?: TeactNode;\n  inputPosition?: 'start' | 'end';\n  disabled?: boolean;\n  inactive?: boolean;\n  ripple?: boolean;\n  className?: string;\n  titleClassName?: string;\n  subtitleClassName?: string;\n  style?: string;\n  onClick?: NoneToVoidFunction;\n  onDisabledClick?: NoneToVoidFunction;\n};\n\nconst PickerItem = ({\n  title,\n  subtitle,\n  avatarElement,\n  inputElement,\n  inputPosition = 'start',\n  disabled,\n  inactive,\n  ripple,\n  className,\n  titleClassName,\n  subtitleClassName,\n  style,\n  onClick,\n  onDisabledClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const isClickable = !inactive && !disabled;\n  const handleClick = useLastCallback(() => {\n    if (inactive) return;\n\n    if (disabled) {\n      onDisabledClick?.();\n      return;\n    }\n\n    onClick?.();\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        subtitle && styles.multiline,\n        disabled && styles.disabled,\n        isClickable && styles.clickable,\n        avatarElement && styles.withAvatar,\n        className,\n      )}\n      onClick={handleClick}\n      style={style}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role={isClickable ? 'button' : undefined}\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n      tabIndex={isClickable ? 0 : undefined}\n    >\n      {!disabled && !inactive && ripple && <RippleEffect />}\n      {inputElement && (\n        <div className={buildClassName(\n          styles.input,\n          inputPosition === 'end' ? styles.endInput : styles.startInput,\n        )}\n        >\n          {inputElement}\n        </div>\n      )}\n      {avatarElement && (\n        <div className={styles.avatarElement}>\n          {avatarElement}\n        </div>\n      )}\n      <div className={buildClassName(styles.title, titleClassName)}>\n        {title}\n      </div>\n      {subtitle && (\n        <div className={buildClassName(styles.subtitle, subtitleClassName)}>\n          {subtitle}\n        </div>\n      )}\n      {!inputElement && IS_IOS && (\n        <div className={styles.separator} />\n      )}\n    </div>\n  );\n};\n\nexport default PickerItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Af3tYFMg\",\"canvas\":\"GbpiDSS_\"};","import React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { preloadImage } from '../../../util/files';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport styles from './RadialPatternBackground.module.scss';\n\ntype OwnProps = {\n  backgroundColors: string[];\n  patternColor?: string;\n  patternIcon?: ApiSticker;\n  className?: string;\n  clearBottomSector?: boolean;\n};\n\nconst RINGS = 3;\nconst BASE_RING_ITEM_COUNT = 8;\nconst RING_INCREMENT = 0.5;\nconst CENTER_EMPTINESS = 0.05;\nconst MAX_RADIUS = 0.4;\nconst BASE_ICON_SIZE = 20;\n\nconst MIN_SIZE = 250;\n\nconst RadialPatternBackground = ({\n  backgroundColors,\n  patternColor,\n  patternIcon,\n  clearBottomSector,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const [getContainerSize, setContainerSize] = useSignal({ width: 0, height: 0 });\n\n  const dpr = useDevicePixelRatio();\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const previewMediaHash = patternIcon && getStickerMediaHash(patternIcon, 'preview');\n  const previewUrl = useMedia(previewMediaHash);\n\n  useEffect(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  const patternPositions = useMemo(() => {\n    const coordinates: { x: number; y: number; sizeFactor: number }[] = [];\n    for (let ring = 1; ring <= RINGS; ring++) {\n      const ringItemCount = Math.floor(BASE_RING_ITEM_COUNT * (1 + (ring - 1) * RING_INCREMENT));\n      const ringProgress = ring / RINGS;\n      const ringRadius = CENTER_EMPTINESS + (MAX_RADIUS - CENTER_EMPTINESS) * ringProgress;\n\n      const angleShift = ring % 2 === 0 ? Math.PI / ringItemCount : 0;\n\n      for (let i = 0; i < ringItemCount; i++) {\n        const angle = (i / ringItemCount) * Math.PI * 2 + angleShift;\n\n        if (clearBottomSector && angle > Math.PI * 0.45 && angle < Math.PI * 0.55) {\n          continue;\n        }\n\n        // Slightly oval\n        const xOffset = ringRadius * 1.71 * Math.cos(angle);\n        const yOffset = ringRadius * Math.sin(angle);\n\n        const x = 0.5 + xOffset;\n        const y = 0.5 + yOffset;\n\n        const sizeFactor = 1.4 - ringProgress * Math.random();\n\n        coordinates.push({\n          x, y, sizeFactor,\n        });\n      }\n    }\n    return coordinates;\n  }, [clearBottomSector]);\n\n  useResizeObserver(containerRef, (entry) => {\n    setContainerSize({\n      width: entry.contentRect.width,\n      height: entry.contentRect.height,\n    });\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      setContainerSize({\n        width: container.clientWidth,\n        height: container.clientHeight,\n      });\n    }\n  }, [setContainerSize]);\n\n  const draw = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage) return;\n    const ctx = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n    if (!width || !height) return;\n\n    ctx.save();\n    patternPositions.forEach(({\n      x, y, sizeFactor,\n    }) => {\n      const centerShift = (width - Math.max(width, MIN_SIZE * dpr)) / 2; // Shift coords if canvas is smaller than `MIN_SIZE`\n      const renderX = x * Math.max(width, MIN_SIZE * dpr) + centerShift;\n      const renderY = y * Math.max(height, MIN_SIZE * dpr) + centerShift;\n\n      const size = BASE_ICON_SIZE * dpr * sizeFactor * (centerShift ? 0.8 : 1);\n\n      ctx.drawImage(emojiImage, renderX - size / 2, renderY - size / 2, size, size);\n    });\n    ctx.restore();\n\n    if (patternColor) {\n      ctx.save();\n      ctx.fillStyle = patternColor;\n      ctx.globalCompositeOperation = 'source-atop';\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    const radialGradient = ctx.createRadialGradient(width / 2, height / 2, 0, width / 2, height / 2, width / 2);\n    radialGradient.addColorStop(0, '#FFFFFF77');\n    radialGradient.addColorStop(1, '#FFFFFF');\n\n    // Alpha mask\n    ctx.save();\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.fillStyle = radialGradient;\n    ctx.fillRect(0, 0, width, height);\n    ctx.restore();\n  });\n\n  useEffect(() => {\n    draw();\n  }, [emojiImage]);\n\n  useEffect(() => {\n    const { width, height } = getContainerSize();\n    const canvas = canvasRef.current!;\n    if (!width || !height) {\n      return;\n    }\n\n    const maxSide = Math.max(width, height);\n    requestMutation(() => {\n      canvas.width = maxSide * dpr;\n      canvas.height = maxSide * dpr;\n\n      draw();\n    });\n  }, [getContainerSize, dpr]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(\n        `--_bg-1: ${backgroundColors[0]}`,\n        `--_bg-2: ${backgroundColors[1] || backgroundColors[0]}`,\n      )}\n    >\n      <canvas className={styles.canvas} ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(RadialPatternBackground);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatusType, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatusType;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId, true);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { getStickerHashById, isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\nimport ReactionStaticEmoji from './ReactionStaticEmoji';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = reaction.type === 'custom';\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && getStickerHashById(centerIconId);\n  const mediaHashEffect = effectId && getStickerHashById(effectId);\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon);\n  const mediaDataEffect = useMedia(mediaHashEffect);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransitionDeprecated(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          noVideoOnMobile\n          loopLimit={loopLimit}\n          observeIntersectionForPlaying={observeIntersection}\n          forceAlways\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n          forceAlways\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            onEnded={handleEnded}\n            forceAlways\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport CustomEmoji from '../CustomEmoji';\nimport Icon from '../icons/Icon';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaHash = staticIconId ? `document${staticIconId}` : undefined;\n  const mediaData = useMedia(mediaHash);\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  const shouldApplySizeFix = reaction.type === 'emoji' && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && reaction.type === 'emoji' && reaction.emoticon === '❤';\n\n  if (reaction.type === 'custom') {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <Icon name=\"heart\" className=\"ReactionStaticEmoji\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ApiFormattedText } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\nconst ALLOWED_QUOTE_ENTITIES = new Set([\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Underline,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n  ApiMessageEntityTypes.CustomEmoji,\n]);\n\nexport function getSelectionAsFormattedText(range: Range) {\n  const html = getSelectionAsHtml(range);\n  const formattedText = parseHtmlAsFormattedText(html, false, true);\n\n  return stripEntitiesForQuote(formattedText);\n}\n\nfunction getSelectionAsHtml(range: Range) {\n  const clonedSelection = range.cloneContents();\n  div.appendChild(clonedSelection);\n\n  const html = wrapHtmlWithMarkupTags(range, div.innerHTML);\n  div.innerHTML = '';\n\n  return html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ') // Convert nbsp's to spaces\n    .replace(/\\u00a0/gi, ' ');\n}\n\nfunction stripEntitiesForQuote(text: ApiFormattedText): ApiFormattedText {\n  if (!text.entities) return text;\n\n  const entities = text.entities.filter((entity) => ALLOWED_QUOTE_ENTITIES.has(entity.type as ApiMessageEntityTypes));\n  return { ...text, entities: entities.length ? entities : undefined };\n}\n\nfunction wrapHtmlWithMarkupTags(range: Range, html: string) {\n  const container = range.commonAncestorContainer;\n  if (container.nodeType === Node.ELEMENT_NODE && (container as Element).classList.contains('text-content')) {\n    return html;\n  }\n  let currentElement = range.commonAncestorContainer.parentElement;\n  while (currentElement && !currentElement.classList.contains('text-content')) {\n    const tag = currentElement.tagName.toLowerCase();\n    const entityType = currentElement.dataset.entityType;\n    html = `<${tag} ${entityType ? `data-entity-type=\"${entityType}\"` : ''}>${html}</${tag}>`;\n    currentElement = currentElement.parentElement;\n  }\n\n  return html;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './PinMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst PinMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PinMessageModal = useModuleLoader(Bundles.Extra, 'PinMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PinMessageModal ? <PinMessageModal {...props} /> : undefined;\n};\n\nexport default PinMessageModalAsync;\n","import type { ApiMessage, StatefulMediaContent } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport {\n  getMessageContact,\n  getMessageHtmlId,\n  getMessagePhoto,\n  getMessageText,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  getPhotoMediaHash,\n  hasMediaLocalBlobUrl,\n} from '../../../../global/helpers';\nimport { getMessageTextWithSpoilers } from '../../../../global/helpers/messageSummary';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { IS_SAFARI } from '../../../../util/windowEnvironment';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  statefulContent: StatefulMediaContent | undefined,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getMessageWebPageVideo(message) ? getMessageWebPagePhoto(message) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = photo ? getPhotoMediaHash(photo, 'full') : undefined;\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMediaLocalBlobUrl(photo))\n    && CLIPBOARD_ITEM_SUPPORTED && !IS_SAFARI;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo!.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n      && checkMessageHasSelection(message)\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else if (hasSelection) {\n          document.execCommand('copy');\n        } else {\n          const clipboardText = renderMessageText(\n            { message, shouldRenderAsHtml: true },\n          );\n          if (clipboardText) {\n            copyHtmlToClipboard(\n              clipboardText.join(''),\n              getMessageTextWithSpoilers(message, statefulContent)!,\n            );\n          }\n        }\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: onCopyLink,\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\nfunction checkMessageHasSelection(message: ApiMessage): boolean {\n  const selection = window.getSelection();\n  const selectionParentNode = (selection?.anchorNode?.parentNode as HTMLElement);\n  const selectedMessageElement = selectionParentNode?.closest<HTMLDivElement>('.Message.message-list-item');\n  return getMessageHtmlId(message.id) === selectedMessageElement?.id;\n}\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"C3LVl_JT\",\"get\":\"bmxij_dk\",\"skeleton\":\"cd1ZZeSy\",\"transition\":\"mg4sBQ9n\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\nfunction LastEditTimeMenuItem({\n  message,\n}: OwnProps) {\n  const lang = useOldLang();\n  const { editDate } = message;\n  const shouldRenderSkeleton = !editDate;\n\n  return (\n    <MenuItem icon=\"clock-edit\" className={styles.item}>\n      {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : Boolean(editDate)\n        && lang('Chat.PrivateMessageEditTimestamp.Date', formatDateAtTime(lang, editDate * 1000))}\n    </MenuItem>\n  );\n}\n\nexport default memo(LastEditTimeMenuItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Transition from '../../ui/Transition';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  closeContextMenu: NoneToVoidFunction;\n};\n\nfunction ReadTimeMenuItem({\n  message, shouldRenderShowWhen, canLoadReadDate, closeContextMenu,\n}: OwnProps) {\n  const { openPrivacySettingsNoticeModal } = getActions();\n  const lang = useOldLang();\n  const { readDate } = message;\n  const shouldRenderSkeleton = canLoadReadDate && !readDate && !shouldRenderShowWhen;\n\n  const handleOpenModal = () => {\n    closeContextMenu();\n    openPrivacySettingsNoticeModal({ chatId: message.chatId, isReadDate: true });\n  };\n\n  return (\n    <MenuItem icon=\"message-read\" className={styles.item}>\n      <Transition name=\"fade\" activeKey={shouldRenderSkeleton ? 1 : 2} className={styles.transition}>\n        {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : (\n          <>\n            {Boolean(readDate) && lang('PmReadAt', formatDateAtTime(lang, readDate * 1000))}\n            {!readDate && shouldRenderShowWhen && (\n              <div>\n                {lang('PmRead')}\n                <span className={styles.get} onClick={handleOpenModal}>\n                  {lang('PmReadShowWhen')}\n                </span>\n              </div>\n            )}\n          </>\n        )}\n      </Transition>\n    </MenuItem>\n  );\n}\n\nexport default memo(ReadTimeMenuItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiTypeStory,\n  ApiUser,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport {\n  getUserFullName,\n  groupStatefulContent,\n  isUserId,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { disableScrolling } from '../../../util/scrollLock';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport LastEditTimeMenuItem from './LastEditTimeMenuItem';\nimport ReactionSelector from './reactions/ReactionSelector';\nimport ReadTimeMenuItem from './ReadTimeMenuItem';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage;\n  poll?: ApiPoll;\n  story?: ApiTypeStory;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  isWithPaidReaction?: boolean;\n  reactionsLimit?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canQuote?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  isInSavedMessages?: boolean;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  onReply?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n  userFullName?: string;\n  canGift?: boolean;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  message,\n  poll,\n  story,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  isWithPaidReaction,\n  reactionsLimit,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canQuote,\n  canEdit,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canForward,\n  canReport,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  isInSavedMessages,\n  shouldRenderShowWhen,\n  canLoadReadDate,\n  onReply,\n  onOpenThread,\n  onEdit,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onFaveSticker,\n  onReport,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onCopyMessages,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n  userFullName,\n  canGift,\n}) => {\n  const {\n    showNotification, openStickerSet, openCustomEmojiSets, loadStickers, openGiftModal,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollableRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const areReactionsPossible = message.areReactionsPossible;\n  const withReactions = (canShowReactionList && !noReactions) || areReactionsPossible;\n  const isEdited = ('isEdited' in message) && message.isEdited;\n  const seenByDates = message.seenByDates;\n  const isPremiumGift = message.content.action?.type === 'giftPremium';\n  const isGiftCode = message.content.action?.type === 'giftCode';\n  const isStarGift = message.content.action?.type === 'starGift';\n  const isStarGiftUnique = message.content.action?.type === 'starGiftUnique';\n  const shouldShowGiftButton = isUserId(message.chatId)\n    && canGift && (isPremiumGift || isGiftCode || isStarGift || isStarGiftUnique);\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: message.chatId });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  useEffect(() => {\n    if (customEmojiSets?.length) {\n      customEmojiSets.map((customEmojiSet) => {\n        return loadStickers({\n          stickerSetInfo: {\n            id: customEmojiSet.id,\n            accessHash: customEmojiSet.accessHash,\n          },\n        });\n      });\n    }\n  }, [customEmojiSets, openCustomEmojiSets]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = getMessageCopyOptions(\n    message,\n    groupStatefulContent({ poll, story }),\n    targetHref,\n    canCopy,\n    handleAfterCopy,\n    canCopyLink ? onCopyLink : undefined,\n    onCopyMessages,\n    onCopyNumber,\n  );\n\n  const getTriggerElement = useLastCallback(() => {\n    return document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${message.id}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const middleColumn = document.getElementById('MiddleColumn')!;\n    const middleColumnComputedStyle = getComputedStyle(middleColumn);\n    const headerToolsHeight = parseFloat(middleColumnComputedStyle.getPropertyValue('--middle-header-panes-height'));\n    const extraHeightPinned = headerToolsHeight || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  useEffect(() => {\n    return disableScrolling(scrollableRef.current, '.ReactionPicker');\n  }, [isOpen]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      withMaxHeight\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          defaultTagReactions={defaultTagReactions}\n          currentReactions={message.reactions?.results}\n          reactionsLimit={reactionsLimit}\n          onToggleReaction={onToggleReaction!}\n          onSendPaidReaction={onSendPaidReaction}\n          onShowPaidReactionModal={onShowPaidReactionModal}\n          isWithPaidReaction={isWithPaidReaction}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        ref={scrollableRef}\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowGiftButton\n          && (\n            <MenuItem icon=\"gift\" onClick={handleGiftClick}>\n              {message?.isOutgoing ? lang('SendAnotherGift')\n                : lang('Conversation.ContextMenuSendGiftTo', userFullName)}\n            </MenuItem>\n          )}\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{lang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{lang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && (\n          <MenuItem icon=\"reply\" onClick={onReply}>\n            {lang(canQuote ? 'lng_context_quote_and_reply' : 'Reply')}\n          </MenuItem>\n        )}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {lang('Conversation.ContextViewReplies', repliesThreadInfo!.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{lang('Edit')}</MenuItem>}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{lang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{lang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{lang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && <MenuItem icon=\"language\" onClick={onShowOriginal}>{lang('ShowOriginalButton')}</MenuItem>}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{lang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem\n            key={option.label}\n            icon={option.icon}\n            onClick={option.handler}\n            withPreventDefaultOnMouseDown\n          >{lang(option.label)}\n          </MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{lang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{lang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{lang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{lang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{lang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? lang('lng_context_cancel_download') : lang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{lang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{lang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{lang('lng_context_report_msg')}</MenuItem>}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{lang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator size=\"thick\" />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'])}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {(canShowSeenBy || canShowReactionsCount) && (\n          <>\n            <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n            <MenuItem\n              icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n              onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n              disabled={!canShowReactionsCount && !seenByDatesCount}\n            >\n              <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n                <span className=\"MessageContextMenu--seen-by-label\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {canShowReactionsCount && message.reactors?.count ? (\n                    canShowSeenBy && seenByDatesCount\n                      ? lang(\n                        'Chat.OutgoingContextMixedReactionCount',\n                        [message.reactors.count, seenByDatesCount],\n                      )\n                      : lang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                  ) : (\n                    seenByDatesCount === 1 && seenByRecentPeers\n                      ? renderText(\n                        isUserId(seenByRecentPeers[0].id)\n                          ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                          : (seenByRecentPeers[0] as ApiChat).title,\n                      ) : (\n                        seenByDatesCount\n                          ? lang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                          : lang('Conversation.ContextMenuNoViews')\n                      )\n                  )}\n                </span>\n              </span>\n              <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n            </MenuItem>\n          </>\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen || isEdited) && (\n          <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen) && (\n          <ReadTimeMenuItem\n            canLoadReadDate={canLoadReadDate}\n            shouldRenderShowWhen={shouldRenderShowWhen}\n            message={message}\n            closeContextMenu={onClose}\n          />\n        )}\n        {isEdited && (\n          <LastEditTimeMenuItem\n            message={message}\n          />\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiStickerSetInfo,\n  ApiThreadInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type {\n  ActiveDownloads,\n  IAlbum,\n  IAnchorPosition,\n  MessageListType,\n  ThreadId,\n} from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getCanPostInChat,\n  getIsDownloading,\n  getMessageDownloadableMedia,\n  getMessageVideo,\n  getUserFullName,\n  hasMessageTtl,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserId,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectBot,\n  selectCanForwardMessage,\n  selectCanGift,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectCanTranslateMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsMessageUnread,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageTranslations,\n  selectPeerStory,\n  selectPollFromMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getSelectionAsFormattedText } from './helpers/getSelectionAsFormattedText';\nimport { isSelectionRangeInsideMessage } from './helpers/isSelectionRangeInsideMessage';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport PinMessageModal from '../../common/PinMessageModal.async';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  className?: string;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  threadId?: ThreadId;\n  poll?: ApiPoll;\n  story?: ApiTypeStory;\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  isMessageTranslated?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  canLoadReadDate?: boolean;\n  shouldRenderShowWhen?: boolean;\n  activeDownloads: ActiveDownloads;\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  reactionsLimit?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  isInSavedMessages?: boolean;\n  isChannel?: boolean;\n  canReplyInChat?: boolean;\n  isWithPaidReaction?: boolean;\n  userFullName?: string;\n  canGift?: boolean;\n};\n\nconst selection = window.getSelection();\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  threadId,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  poll,\n  story,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canShowReactionsCount,\n  chat,\n  canReport,\n  canShowReactionList,\n  canEdit,\n  enabledReactions,\n  reactionsLimit,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  canLoadReadDate,\n  shouldRenderShowWhen,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  isMessageTranslated,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  isInSavedMessages,\n  canReplyInChat,\n  isWithPaidReaction,\n  userFullName,\n  canGift,\n  className,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openThread,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    openReplyMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMedia,\n    cancelMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n    openPremiumModal,\n    loadOutboxReadDate,\n    copyMessageLink,\n    openDeleteMessageModal,\n    addLocalPaidReaction,\n    openPaidReactionModal,\n    reportMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { ref: containerRef } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    className: false,\n  });\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n  const [canQuoteSelection, setCanQuoteSelection] = useState(false);\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canLoadReadDate && isOpen) {\n      loadOutboxReadDate({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canLoadReadDate, isOpen, message.chatId, message.id, message.readDate]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    if (album) {\n      return album.messages.some((msg) => {\n        const downloadableMedia = getMessageDownloadableMedia(msg);\n        if (!downloadableMedia) return false;\n        return getIsDownloading(activeDownloads, downloadableMedia);\n      });\n    }\n\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    if (!downloadableMedia) return false;\n    return getIsDownloading(activeDownloads, downloadableMedia);\n  }, [activeDownloads, album, message]);\n\n  const selectionRange = canReply && selection?.rangeCount ? selection.getRangeAt(0) : undefined;\n\n  useEffect(() => {\n    if (isMessageTranslated) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const isMessageTextSelected = selectionRange\n      && !selectionRange.collapsed\n      && Boolean(message.content.text?.text)\n      && isSelectionRangeInsideMessage(selectionRange);\n\n    if (!isMessageTextSelected) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const selectionText = getSelectionAsFormattedText(selectionRange);\n\n    const messageText = message.content.text!.text!.replace(/\\u00A0/g, ' ');\n\n    setCanQuoteSelection(\n      selectionText.text.trim().length > 0\n      && messageText.includes(selectionText.text),\n    );\n  }, [\n    selectionRange, selectionRange?.collapsed, selectionRange?.startOffset, selectionRange?.endOffset,\n    isMessageTranslated, message.content.text,\n  ]);\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    closeMenu();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    openDeleteMessageModal({\n      chatId: message.chatId,\n      messageIds,\n      isSchedule: messageListType === 'scheduled',\n    });\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    const quoteText = canQuoteSelection && selectionRange ? getSelectionAsFormattedText(selectionRange) : undefined;\n    if (!canReplyInChat) {\n      openReplyMenu({ fromChatId: message.chatId, messageId: message.id, quoteText });\n    } else {\n      updateDraftReplyInfo({\n        replyToMsgId: message.id,\n        quoteText,\n        replyToPeerId: undefined,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    setEditingId({ messageId: message.id });\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ chatId: message.chatId, messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyMessageLink({\n      chatId: message.chatId,\n      messageId: message.id,\n      shouldIncludeThread: threadId !== MAIN_THREAD_ID,\n      shouldIncludeGrouped: true, // TODO: Provide correct value when ability to target specific message is added\n    });\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    (album?.messages || [message]).forEach((msg) => {\n      const downloadableMedia = getMessageDownloadableMedia(msg);\n      if (!downloadableMedia) return;\n\n      if (isDownloading) {\n        cancelMediaDownload({ media: downloadableMedia });\n      } else {\n        downloadMedia({ media: downloadableMedia, originMessage: msg });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isInSavedMessages && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n    } else {\n      toggleReaction({\n        chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleSendPaidReaction = useLastCallback(() => {\n    addLocalPaidReaction({\n      chatId: message.chatId, messageId: message.id, count: 1,\n    });\n    closeMenu();\n  });\n\n  const handlePaidReactionModalOpen = useLastCallback(() => {\n    openPaidReactionModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    setIsMenuOpen(false);\n    onClose();\n    reportMessages({\n      chatId: chat.id, messageIds: reportMessageIds,\n    });\n  });\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div ref={containerRef} className={buildClassName('ContextMenuContainer', className)}>\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        defaultTagReactions={defaultTagReactions}\n        isWithPaidReaction={isWithPaidReaction}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        reactionsLimit={reactionsLimit}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canQuote={canQuoteSelection}\n        canDelete={canDelete}\n        canPin={canPin}\n        canReport={canReport}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        shouldRenderShowWhen={shouldRenderShowWhen}\n        canLoadReadDate={canLoadReadDate}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        isInSavedMessages={isInSavedMessages}\n        noReplies={noReplies}\n        poll={poll}\n        story={story}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onEdit={handleEdit}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onSendPaidReaction={handleSendPaidReaction}\n        onShowPaidReactionModal={handlePaidReactionModalOpen}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n        userFullName={userFullName}\n        canGift={canGift}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={lang('lng_polls_stop_warning')}\n        confirmLabel={lang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n\n    const { defaultTags, topReactions, availableReactions } = global.reactions;\n\n    const activeDownloads = selectActiveDownloads(global);\n    const chat = selectChat(global, message.chatId);\n    const isPrivate = chat && isUserId(chat.id);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n    const user = selectUser(global, message.chatId);\n    const userFullName = user && getUserFullName(user);\n\n    const {\n      seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions, readDateExpiresAt,\n    } = global.appConfig || {};\n\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n\n    const {\n      noOptions,\n      canReplyGlobally,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const canForward = selectCanForwardMessage(global, message);\n\n    const userStatus = isPrivate ? selectUserStatus(global, chat.id) : undefined;\n    const isOwn = isOwnMessage(message);\n    const chatBot = chat && selectBot(global, chat.id);\n    const isBot = Boolean(chatBot);\n    const isMessageUnread = selectIsMessageUnread(global, message);\n    const canLoadReadDate = Boolean(\n      isPrivate\n      && isOwn\n      && !isBot\n      && !isMessageUnread\n      && readDateExpiresAt\n      && message.date > Date.now() / 1000 - readDateExpiresAt\n      && !userStatus?.isReadDateRestricted\n      && messageListType !== 'scheduled',\n    );\n    const shouldRenderShowWhen = Boolean(\n      canLoadReadDate && isPrivate && selectUserStatus(global, chat.id)?.isReadDateRestrictedByMe,\n    );\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n\n    const threadInfo = threadId && selectThreadInfo(global, message.chatId, threadId);\n    const isMessageThread = Boolean(threadInfo && !threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = threadId ? selectTopic(global, message.chatId, threadId) : undefined;\n\n    const canSendText = chat && !isUserRightBanned(chat, 'sendPlain', chatFullInfo);\n\n    const canReplyInChat = chat && threadId ? getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n     && canSendText : false;\n\n    const isLocal = isMessageLocal(message);\n    const hasTtl = hasMessageTtl(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && !isMessageUnread\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation && selectCanTranslateMessage(global, message, detectedLanguage);\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n\n    const isInSavedMessages = selectIsChatWithSelf(global, message.chatId);\n\n    const poll = selectPollFromMessage(global, message);\n    const storyData = message.content.storyData;\n    const story = storyData ? selectPeerStory(global, storyData.peerId, storyData.id) : undefined;\n\n    const canGift = selectCanGift(global, message.chatId);\n\n    return {\n      threadId,\n      chat,\n      availableReactions,\n      topReactions,\n      defaultTagReactions: defaultTags,\n      noOptions,\n      canReport,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReplyGlobally,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canEdit: !isPinned && canEdit,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: (canCopyNumber || (!isProtected && canCopy)),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      canLoadReadDate,\n      shouldRenderShowWhen,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      reactionsLimit,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction\n        && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID && !hasTtl,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      isMessageTranslated: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      isInSavedMessages,\n      isChannel,\n      canReplyInChat,\n      isWithPaidReaction: chatFullInfo?.isPaidReactionAvailable,\n      poll,\n      story,\n      userFullName,\n      canGift,\n    };\n  },\n)(ContextMenuContainer));\n","export function isSelectionRangeInsideMessage(range: Range) {\n  const ancestor = range.commonAncestorContainer;\n  const el = ancestor.nodeType === Node.TEXT_NODE\n    ? ancestor.parentNode! as Element\n    : ancestor as Element;\n\n  return Boolean(el.closest('.message-content-wrapper .text-content'))\n    && !(Boolean(el.closest('.EmbeddedMessage')) || Boolean(el.closest('.WebPage')));\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection, ScrollTargetPosition } from '../../../../types';\n\nimport { SCROLL_MAX_DISTANCE } from '../../../../config';\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = SCROLL_MAX_DISTANCE;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage({\n  elementRef,\n  chatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  isResizingContainer,\n  isJustAdded,\n  isQuote,\n  scrollTargetPosition,\n}: {\n  elementRef: { current: HTMLDivElement | null };\n  chatId: string;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  isResizingContainer?: boolean;\n  isJustAdded?: boolean;\n  isQuote?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n}) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n      const scrollPosition = scrollTargetPosition || isToBottom ? 'end' : 'centerOrTop';\n\n      const exec = () => {\n        const maxDistance = focusDirection !== undefined\n          ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined;\n\n        const result = animateScroll({\n          container: messagesContainer,\n          element: elementRef.current!,\n          position: scrollPosition,\n          margin: FOCUS_MARGIN,\n          maxDistance,\n          forceDirection: focusDirection,\n          forceNormalContainerHeight: isResizingContainer,\n          shouldReturnMutationFn: true,\n        });\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote, scrollTargetPosition,\n  ]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji, ApiReactionPaid } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiReactionPaid;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const handleClick = useLastCallback(() => {\n    if (reaction.type === 'paid') {\n      onSendPaidReaction?.();\n      return;\n    }\n\n    onToggleReaction(reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onShowPaidReactionModal?.();\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onShowPaidReactionModal, handleContextMenuHide, isContextMenuOpen]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && reaction.type !== 'paid' && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      ref={ref}\n      style={style}\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {reaction.type === 'paid' ? (\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.StarReaction}\n          size={REACTION_SIZE}\n          noLoop={false}\n        />\n      ) : (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          size={REACTION_SIZE}\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiReaction,\n  ApiReactionCount,\n  ApiReactionCustomEmoji,\n  ApiReactionPaid,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype RenderableReactions = (ApiAvailableReaction | ApiReactionCustomEmoji | ApiReactionPaid)[];\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  isWithPaidReaction?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  isWithPaidReaction,\n  onClose,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions: RenderableReactions = reactions?.map((reaction) => {\n      const isCustomReaction = reaction.type === 'custom';\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n         && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    const sortedReactions = sortReactions(filteredReactions, topReactions);\n    if (isWithPaidReaction) {\n      sortedReactions.unshift({ type: 'paid' });\n    }\n    return sortedReactions;\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions, isWithPaidReaction,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  onSendPaidReaction={onSendPaidReaction}\n                  onShowPaidReactionModal={onShowPaidReactionModal}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiReaction, ApiReactionPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_ANDROID, IS_IOS } from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport AnimatedIcon from '../AnimatedIcon';\nimport StarIcon from '../icons/StarIcon';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReactionPaid;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  localAmount?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst EFFECT_SIZE = 6.5 * REM;\nconst MAX_EFFECT_COUNT = (IS_IOS || IS_ANDROID) ? 2 : 5;\nconst QUALITY = (IS_IOS || IS_ANDROID) ? 2 : 3;\n\nconst PaidReactionEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  localAmount,\n  withEffects,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const effectRef = useRef<HTMLDivElement>(null);\n\n  const [effectsIds, setEffectsIds] = useState<number[]>([]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction,\n  );\n  const canAddMoreEffects = effectsIds.length < MAX_EFFECT_COUNT;\n\n  useEffectWithPrevDeps(([prevLocalAmount]) => {\n    if (!shouldPlayEffect) {\n      setEffectsIds([]);\n      return;\n    }\n\n    if (!localAmount || localAmount <= (prevLocalAmount || 0)) {\n      return;\n    }\n\n    if (canAddMoreEffects) {\n      setEffectsIds((prev) => [...prev, Date.now()]);\n    }\n  }, [localAmount, canAddMoreEffects, shouldPlayEffect]);\n\n  const {\n    shouldRender: shouldRenderEffect,\n  } = useShowTransition({\n    ref: effectRef,\n    noMountTransition: true,\n    isOpen: shouldPlayEffect,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  const handleEnded = useLastCallback(() => {\n    const newEffectsIds = effectsIds.slice(1);\n    setEffectsIds(newEffectsIds);\n    if (!newEffectsIds.length) {\n      stopActiveReaction({ containerId, reaction });\n    }\n  });\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref} teactFastList>\n      <StarIcon key=\"icon\" type=\"gold\" size=\"adaptive\" style={`width: ${size}px; height: ${size}px`} />\n      {shouldRenderEffect && effectsIds.map((id) => (\n        <AnimatedIcon\n          key={id}\n          ref={effectRef}\n          className={styles.effect}\n          size={effectSize}\n          tgsUrl={LOCAL_TGS_URLS.StarReactionEffect}\n          play={isIntersecting}\n          noLoop\n          forceAlways\n          nonInteractive\n          quality={QUALITY}\n          onEnded={handleEnded}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      withEffects,\n    };\n  },\n)(PaidReactionEmoji));\n","import React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiPeer, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { isReactionChosen } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../../util/textFormat';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useShowTransition from '../../../../hooks/useShowTransition';\n\nimport AnimatedCounter from '../../../common/AnimatedCounter';\nimport AvatarList from '../../../common/AvatarList';\nimport PaidReactionEmoji from '../../../common/reactions/PaidReactionEmoji';\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport Sparkles from '../../../common/Sparkles';\nimport Button from '../../../ui/Button';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst MAX_SCALE = 3;\n\ntype OwnProps = {\n  chatId: string;\n  messageId: number;\n  reaction: ApiReactionCount;\n  containerId: string;\n  isOwnMessage?: boolean;\n  recentReactors?: ApiPeer[];\n  className?: string;\n  chosenClassName?: string;\n  isOutside?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onPaidClick?: (count: number) => void;\n};\n\nfunction selectStarsState(global: GlobalState) {\n  return global.stars;\n}\n\nconst ReactionButton = ({\n  reaction,\n  containerId,\n  isOwnMessage,\n  recentReactors,\n  className,\n  chosenClassName,\n  chatId,\n  messageId,\n  isOutside,\n  observeIntersection,\n  onClick,\n  onPaidClick,\n}: OwnProps) => {\n  const {\n    openStarsBalanceModal,\n    resetLocalPaidReactions,\n    openPaidReactionModal,\n    requestWave,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const counterRef = useRef<HTMLSpanElement>(null);\n  const animationRef = useRef<Animation>();\n\n  const isPaid = reaction.reaction.type === 'paid';\n\n  const starsState = useSelector(selectStarsState);\n  const areStarsLoaded = Boolean(starsState);\n\n  const handlePaidClick = useLastCallback((count = 1) => {\n    onPaidClick?.(count);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (reaction.reaction.type === 'paid') {\n      e.stopPropagation(); // Prevent default message double click behavior\n      handlePaidClick();\n\n      return;\n    }\n\n    onClick?.(reaction.reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      openPaidReactionModal({\n        chatId,\n        messageId,\n      });\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, isContextMenuOpen, chatId, messageId]);\n\n  useEffectWithPrevDeps(([prevReaction]) => {\n    const amount = reaction.localAmount;\n    const button = ref.current;\n    if (!amount || !button || amount === prevReaction?.localAmount) return;\n\n    if (areStarsLoaded && amount > starsState.balance.amount) {\n      openStarsBalanceModal({\n        originReaction: {\n          chatId,\n          messageId,\n          amount,\n        },\n      });\n      resetLocalPaidReactions({\n        chatId,\n        messageId,\n      });\n      return;\n    }\n\n    if (reaction.localAmount) {\n      const { left, top } = button.getBoundingClientRect();\n      const startX = left + button.offsetWidth / 2;\n      const startY = top + button.offsetHeight / 2;\n      requestWave({ startX, startY });\n    }\n\n    const currentScale = Number(getComputedStyle(button).scale) || 1;\n    animationRef.current?.cancel();\n    // Animate scaling by 20%, and then returning to 1\n    animationRef.current = button.animate([\n      { scale: currentScale },\n      { scale: Math.min(currentScale * 1.2, MAX_SCALE), offset: 0.2 },\n      { scale: 1 },\n    ], {\n      duration: 500 * currentScale,\n      easing: 'ease-out',\n    });\n  }, [reaction, starsState?.balance, areStarsLoaded, chatId, messageId]);\n\n  const prevAmount = usePrevious(reaction.localAmount);\n\n  const {\n    shouldRender: shouldRenderPaidCounter,\n  } = useShowTransition({\n    isOpen: Boolean(reaction.localAmount),\n    ref: counterRef,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        isOwnMessage && styles.own,\n        isPaid && styles.paid,\n        isOutside && styles.outside,\n        isReactionChosen(reaction) && styles.chosen,\n        isReactionChosen(reaction) && chosenClassName,\n        className,\n      )}\n      size=\"tiny\"\n      ref={ref}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      onClick={handleClick}\n    >\n      {reaction.reaction.type === 'paid' ? (\n        <>\n          <Sparkles preset=\"button\" />\n          <PaidReactionEmoji\n            className={styles.animatedEmoji}\n            containerId={containerId}\n            reaction={reaction.reaction}\n            size={REACTION_SIZE}\n            localAmount={reaction.localAmount}\n            observeIntersection={observeIntersection}\n          />\n          {shouldRenderPaidCounter && (\n            <AnimatedCounter\n              ref={counterRef}\n              text={`+${formatIntegerCompact(reaction.localAmount || prevAmount!)}`}\n              className={styles.paidCounter}\n            />\n          )}\n        </>\n      ) : (\n        <ReactionAnimatedEmoji\n          className={styles.animatedEmoji}\n          containerId={containerId}\n          reaction={reaction.reaction}\n          size={REACTION_SIZE}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {recentReactors?.length ? (\n        <AvatarList size=\"mini\" peers={recentReactors} />\n      ) : (\n        <AnimatedCounter\n          text={formatIntegerCompact(reaction.count + (reaction.localAmount || 0))}\n          className={styles.counter}\n        />\n      )}\n    </Button>\n  );\n};\n\nexport default memo(ReactionButton);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport type {\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { ThreadId } from '../../../../types';\n\nimport { getReactionKey, isReactionChosen } from '../../../../global/helpers';\nimport { selectPeer } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { getMessageKey } from '../../../../util/keys/messageKey';\n\nimport useEffectOnce from '../../../../hooks/useEffectOnce';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionButton from './ReactionButton';\nimport SavedTagButton from './SavedTagButton';\n\nimport './Reactions.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  isOutside?: boolean;\n  maxWidth?: number;\n  metaChildren?: React.ReactNode;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  isCurrentUserPremium?: boolean;\n  observeIntersection?: ObserveFn;\n  noRecentReactors?: boolean;\n};\n\nconst MAX_RECENT_AVATARS = 3;\nconst PAID_SEND_DELAY = 5000;\n\nconst Reactions: FC<OwnProps> = ({\n  message,\n  threadId,\n  isOutside,\n  maxWidth,\n  metaChildren,\n  observeIntersection,\n  noRecentReactors,\n  isCurrentUserPremium,\n  tags,\n}) => {\n  const {\n    toggleReaction,\n    addLocalPaidReaction,\n    updateMiddleSearch,\n    performMiddleSearch,\n    openPremiumModal,\n    resetLocalPaidReactions,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const { results, areTags, recentReactions } = message.reactions!;\n  const withServiceReactions = Boolean(message.areReactionsPossible && message.reactions);\n\n  const totalCount = useMemo(() => (\n    results.reduce((acc, reaction) => acc + reaction.count, 0)\n  ), [results]);\n\n  const recentReactorsByReactionKey = useMemo(() => {\n    const global = getGlobal();\n\n    return recentReactions?.reduce((acc, recentReaction) => {\n      const { reaction, peerId } = recentReaction;\n      const key = getReactionKey(reaction);\n      const peer = selectPeer(global, peerId);\n\n      if (!peer) return acc;\n\n      const peers = acc[key] || [];\n      peers.push(peer);\n      acc[key] = peers;\n      return acc;\n    }, {} as Record<ApiReactionKey, ApiPeer[]>);\n  }, [recentReactions]);\n\n  const props = useMemo(() => {\n    const messageKey = getMessageKey(message);\n    return results.map((reaction) => {\n      const reactionKey = getReactionKey(reaction.reaction);\n      const recentReactors = recentReactorsByReactionKey?.[reactionKey];\n      const shouldHideRecentReactors = totalCount > MAX_RECENT_AVATARS || noRecentReactors;\n      const tag = areTags ? tags?.[reactionKey] : undefined;\n\n      return {\n        reaction,\n        reactionKey,\n        messageKey,\n        recentReactors: !shouldHideRecentReactors ? recentReactors : undefined,\n        isChosen: isReactionChosen(reaction),\n        tag,\n      };\n    });\n  }, [message, noRecentReactors, recentReactorsByReactionKey, results, areTags, tags, totalCount]);\n\n  const handleClick = useLastCallback((reaction: ApiReaction) => {\n    if (areTags) {\n      if (!isCurrentUserPremium) {\n        openPremiumModal({\n          initialSection: 'saved_tags',\n        });\n        return;\n      }\n\n      updateMiddleSearch({ chatId: message.chatId, threadId, update: { savedTag: reaction } });\n      performMiddleSearch({ chatId: message.chatId, threadId });\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  const paidLocalCount = useMemo(() => results.find((r) => r.reaction.type === 'paid')?.localAmount || 0, [results]);\n\n  const handlePaidClick = useLastCallback((count: number) => {\n    addLocalPaidReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      count,\n    });\n  });\n\n  useEffect(() => {\n    if (!paidLocalCount) return;\n\n    showNotification({\n      localId: getMessageKey(message),\n      title: lang('StarsSentTitle'),\n      message: lang('StarsSentText', paidLocalCount),\n      actionText: lang('StarsSentUndo'),\n      cacheBreaker: paidLocalCount.toString(),\n      action: {\n        action: 'resetLocalPaidReactions',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      dismissAction: {\n        action: 'sendPaidReaction',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      duration: PAID_SEND_DELAY,\n      shouldShowTimer: true,\n      disableClickDismiss: true,\n      icon: 'star',\n    });\n  }, [lang, message, paidLocalCount]);\n\n  const handleRemoveReaction = useLastCallback((reaction: ApiReaction) => {\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  // Reset paid reactions on unmount\n  useEffectOnce(() => () => {\n    resetLocalPaidReactions({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        'Reactions',\n        isOutside && 'is-outside',\n        withServiceReactions && 'is-service',\n      )}\n      style={maxWidth ? `max-width: ${maxWidth}px` : undefined}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {props.map(({\n        reaction, recentReactors, messageKey, reactionKey, isChosen, tag,\n      }) => (\n        areTags ? (\n          <SavedTagButton\n            key={reactionKey}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            isChosen={isChosen}\n            reaction={reaction.reaction as ApiReaction}\n            tag={tag}\n            withContextMenu={isCurrentUserPremium}\n            onClick={handleClick}\n            onRemove={handleRemoveReaction}\n            observeIntersection={observeIntersection}\n          />\n        ) : (\n          <ReactionButton\n            key={reactionKey}\n            chatId={message.chatId}\n            messageId={message.id}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            recentReactors={recentReactors}\n            isOutside={isOutside}\n            reaction={reaction}\n            onClick={handleClick}\n            onPaidClick={handlePaidClick}\n            observeIntersection={observeIntersection}\n          />\n        )\n      ))}\n      {metaChildren}\n    </div>\n  );\n};\n\nexport default memo(Reactions);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu, undefined, undefined, undefined, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true, shouldAvoidNegativePosition: true }));\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuAnchor && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import type {\n  ApiInputInvoice,\n  ApiInputSavedStarGift,\n  ApiMessage,\n  ApiRequestInputInvoice,\n  ApiRequestInputSavedStarGift,\n  ApiStarsAmount,\n  ApiStarsTransaction,\n  ApiStarsTransactionPeer,\n  ApiStarsTransactionPeerPeer,\n} from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { LangFn } from '../../util/localization';\nimport type { GlobalState } from '../types';\n\nimport arePropsShallowEqual from '../../util/arePropsShallowEqual';\nimport { selectChat, selectPeer, selectUser } from '../selectors';\n\nexport function getRequestInputInvoice<T extends GlobalState>(\n  global: T, inputInvoice: ApiInputInvoice,\n): ApiRequestInputInvoice | undefined {\n  if (inputInvoice.type === 'slug') return inputInvoice;\n\n  if (inputInvoice.type === 'stargift') {\n    const {\n      peerId, shouldHideName, giftId, message, shouldUpgrade,\n    } = inputInvoice;\n    const peer = selectPeer(global, peerId);\n\n    if (!peer) return undefined;\n\n    return {\n      type: 'stargift',\n      peer,\n      shouldHideName,\n      giftId,\n      message,\n      shouldUpgrade,\n    };\n  }\n\n  if (inputInvoice.type === 'starsgift') {\n    const {\n      userId, stars, amount, currency,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'starsgift',\n        user,\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stars') {\n    const {\n      stars, amount, currency,\n    } = inputInvoice;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'stars',\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'chatInviteSubscription') {\n    const { hash } = inputInvoice;\n\n    return {\n      type: 'chatInviteSubscription',\n      hash,\n    };\n  }\n\n  if (inputInvoice.type === 'message') {\n    const chat = selectChat(global, inputInvoice.chatId);\n    if (!chat) {\n      return undefined;\n    }\n    return {\n      type: 'message',\n      chat,\n      messageId: inputInvoice.messageId,\n    };\n  }\n\n  if (inputInvoice.type === 'giftcode') {\n    const {\n      userIds, boostChannelId, amount, currency, option, message,\n    } = inputInvoice;\n    const users = userIds.map((id) => selectUser(global, id)).filter(Boolean);\n    const boostChannel = boostChannelId ? selectChat(global, boostChannelId) : undefined;\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giftcode',\n        amount,\n        currency,\n        users,\n        boostChannel,\n        message,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'starsgiveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription, stars, users,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'starsgiveaway',\n      purpose: {\n        type: 'starsgiveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n        stars,\n        users,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'giveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, option, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stargiftUpgrade') {\n    const { inputSavedGift, shouldKeepOriginalDetails } = inputInvoice;\n    const savedGift = getRequestInputSavedStarGift(global, inputSavedGift);\n    if (!savedGift) return undefined;\n\n    return {\n      type: 'stargiftUpgrade',\n      inputSavedGift: savedGift,\n      shouldKeepOriginalDetails,\n    };\n  }\n\n  if (inputInvoice.type === 'stargiftTransfer') {\n    const { inputSavedGift, recipientId } = inputInvoice;\n    const savedGift = getRequestInputSavedStarGift(global, inputSavedGift);\n    const peer = selectPeer(global, recipientId);\n    if (!savedGift || !peer) return undefined;\n\n    return {\n      type: 'stargiftTransfer',\n      inputSavedGift: savedGift,\n      recipient: peer,\n    };\n  }\n\n  return undefined;\n}\n\nexport function getRequestInputSavedStarGift<T extends GlobalState>(\n  global: T, inputGift: ApiInputSavedStarGift,\n): ApiRequestInputSavedStarGift | undefined {\n  if (inputGift.type === 'user') return inputGift;\n\n  if (inputGift.type === 'chat') {\n    const chat = selectChat(global, inputGift.chatId);\n    if (!chat) return undefined;\n\n    return {\n      type: 'chat',\n      chat,\n      savedId: inputGift.savedId,\n    };\n  }\n\n  return undefined;\n}\n\nexport function buildStarsTransactionCustomPeer(\n  peer: Exclude<ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer>,\n): CustomPeer {\n  if (peer.type === 'appStore') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.AppleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.AppleTopUp.Subtitle',\n      peerColorId: 5,\n    };\n  }\n\n  if (peer.type === 'playMarket') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.GoogleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.GoogleTopUp.Subtitle',\n      peerColorId: 3,\n    };\n  }\n\n  if (peer.type === 'fragment') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.FragmentTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.FragmentTopUp.Subtitle',\n      customPeerAvatarColor: '#000000',\n    };\n  }\n\n  if (peer.type === 'premiumBot') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Subtitle',\n      peerColorId: 1,\n      withPremiumGradient: true,\n    };\n  }\n\n  if (peer.type === 'ads') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramAds.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramAds.Subtitle',\n      peerColorId: 2,\n    };\n  }\n\n  if (peer.type === 'api') {\n    return {\n      avatarIcon: 'bots',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramBotApi.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramBotApi.Subtitle',\n      peerColorId: 4,\n    };\n  }\n\n  return {\n    avatarIcon: 'star',\n    isCustomPeer: true,\n    titleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    subtitleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    peerColorId: 0,\n  };\n}\n\nexport function formatStarsTransactionAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  const amount = starsAmount.amount + starsAmount.nanos / 1e9;\n  if (amount < 0) {\n    return `- ${lang.number(Math.abs(amount))}`;\n  }\n\n  return `+ ${lang.number(amount)}`;\n}\n\nexport function formatStarsAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  return lang.number(starsAmount.amount + starsAmount.nanos / 1e9);\n}\n\nexport function getStarsTransactionFromGift(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'giftStars') return undefined;\n\n  const { transactionId, stars } = action;\n\n  return {\n    id: transactionId,\n    stars: {\n      amount: stars,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: message.isOutgoing ? message.chatId : (message.senderId || message.chatId),\n    },\n    date: message.date,\n    isGift: true,\n    isMyGift: message.isOutgoing || undefined,\n  };\n}\n\nexport function getPrizeStarsTransactionFromGiveaway(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'prizeStars') return undefined;\n\n  const { transactionId, stars, boostPeerId } = action;\n\n  return {\n    id: transactionId,\n    stars: {\n      amount: stars,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: boostPeerId,\n    },\n    date: message.date,\n    giveawayPostId: message.id,\n  };\n}\n\nexport function areInputSavedGiftsEqual(one: ApiInputSavedStarGift, two: ApiInputSavedStarGift) {\n  return arePropsShallowEqual(one, two);\n}\n","import type { ApiChat, ApiPeer, ApiUser } from '../../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../config';\nimport { getTranslationFn } from '../../util/localization';\nimport { prepareSearchWordsForNeedle } from '../../util/searchWords';\nimport { selectChat, selectPeer, selectUser } from '../selectors';\nimport { getGlobal } from '..';\nimport { getChatTitle } from './chats';\nimport { getPeerFullTitle } from './messages';\n\nexport function isApiPeerChat(peer: ApiPeer): peer is ApiChat {\n  return 'title' in peer;\n}\n\nexport function isApiPeerUser(peer: ApiPeer): peer is ApiUser {\n  return !isApiPeerChat(peer);\n}\n\nexport function filterPeersByQuery({\n  ids,\n  query,\n  type = 'peer',\n} : {\n  ids: string[];\n  query: string | undefined;\n  type?: 'chat' | 'user' | 'peer';\n}) {\n  if (!query) {\n    return ids;\n  }\n  const global = getGlobal();\n  const lang = getTranslationFn();\n\n  const searchWords = prepareSearchWordsForNeedle(query);\n\n  const selectorFn = type === 'chat' ? selectChat : type === 'user' ? selectUser : selectPeer;\n\n  return ids.filter((id) => {\n    const peer = selectorFn(global, id);\n    if (!peer) {\n      return false;\n    }\n\n    const localizedTitle = isApiPeerChat(peer)\n      ? getChatTitle(lang, peer)\n      : id === global.currentUserId ? lang('SavedMessages') : undefined;\n    const isFoundInLocalized = localizedTitle ? searchWords(localizedTitle) : undefined;\n\n    const name = getPeerFullTitle(lang, peer);\n\n    return isFoundInLocalized\n      || (name && searchWords(name))\n      || Boolean(peer.usernames?.find(({ username }) => searchWords(username)));\n  });\n}\n\nexport function getPeerTypeKey(peer: ApiPeer) {\n  if (isApiPeerChat(peer)) {\n    if (peer.type === 'chatTypeBasicGroup' || peer.type === 'chatTypeSuperGroup') {\n      return 'ChatList.PeerTypeGroup';\n    }\n\n    if (peer.type === 'chatTypeChannel') {\n      return 'ChatList.PeerTypeChannel';\n    }\n\n    if (peer.type === 'chatTypePrivate') {\n      return 'ChatList.PeerTypeNonContact';\n    }\n\n    return undefined;\n  }\n\n  if (peer.id === SERVICE_NOTIFICATIONS_USER_ID) {\n    return 'ServiceNotifications';\n  }\n\n  if (peer.isSupport) {\n    return 'SupportStatus';\n  }\n\n  if (peer.type && peer.type === 'userTypeBot') {\n    return 'ChatList.PeerTypeBot';\n  }\n\n  if (peer.isContact) {\n    return 'ChatList.PeerTypeContact';\n  }\n\n  return 'ChatList.PeerTypeNonContactUser';\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useEffect, useState } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ThemeKey } from '../types';\n\nimport { CUSTOM_BG_CACHE_NAME, DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../config';\nimport * as cacheApi from '../util/cacheApi';\nimport { preloadImage } from '../util/files';\n\nconst useCustomBackground = (theme: ThemeKey, settingValue?: string) => {\n  const { setThemeSettings } = getActions();\n  const [value, setValue] = useState(settingValue);\n\n  useEffect(() => {\n    if (!settingValue) {\n      return;\n    }\n\n    if (settingValue.startsWith('#')) {\n      setValue(settingValue);\n    } else {\n      cacheApi.fetch(CUSTOM_BG_CACHE_NAME, theme, cacheApi.Type.Blob)\n        .then((blob) => {\n          const url = URL.createObjectURL(blob);\n          preloadImage(url)\n            .then(() => {\n              setValue(`url(${url})`);\n            });\n        })\n        .catch(() => {\n          setThemeSettings({\n            theme,\n            background: undefined,\n            backgroundColor: undefined,\n            isBlurred: true,\n            patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n          });\n        });\n    }\n  }, [settingValue, theme]);\n\n  return settingValue ? value : undefined;\n};\n\nexport default useCustomBackground;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useRef } from '../lib/teact/teact';\n\n// This is not render-dependent and will never allow previous to match current\nexport default function usePrevious<T extends any>(current: T) {\n  const prevRef = useRef<T>();\n  const lastRef = useRef<T>();\n\n  if (lastRef.current !== current) {\n    prevRef.current = lastRef.current;\n  }\n\n  lastRef.current = current;\n\n  return prevRef.current;\n}\n","import { beginHeavyAnimation, useRef } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport { isAnimatingScroll } from '../util/animateScroll';\nimport useLastCallback from './useLastCallback';\nimport useResizeObserver from './useResizeObserver';\nimport useThrottledCallback from './useThrottledCallback';\n\nconst BOTTOM_FOCUS_SCROLL_THRESHOLD = 5;\nconst THROTTLE_MS = 300;\nconst RESIZE_ANIMATION_DURATION = 400;\n\nfunction useMessageResizeObserver(\n  ref: React.RefObject<HTMLElement> | undefined,\n  shouldFocusOnResize = false,\n) {\n  const {\n    focusLastMessage,\n  } = getActions();\n  const messageHeightRef = useRef(0);\n\n  const handleResize = useLastCallback(\n    (entry) => {\n      const lastHeight = messageHeightRef.current;\n\n      const newHeight = entry.contentRect.height;\n      messageHeightRef.current = newHeight;\n\n      if (isAnimatingScroll() || !lastHeight || newHeight <= lastHeight) return;\n\n      const container = entry.target.closest('.MessageList');\n      if (!container) return;\n\n      beginHeavyAnimation(RESIZE_ANIMATION_DURATION);\n\n      const resizeDiff = newHeight - lastHeight;\n      const { offsetHeight, scrollHeight, scrollTop } = container;\n      const currentScrollBottom = Math.round(scrollHeight - scrollTop - offsetHeight);\n      const previousScrollBottom = currentScrollBottom - resizeDiff;\n\n      if (previousScrollBottom <= BOTTOM_FOCUS_SCROLL_THRESHOLD) {\n        focusLastMessage();\n      }\n    },\n  );\n\n  const throttledResize = useThrottledCallback(handleResize, [handleResize], THROTTLE_MS, false);\n\n  useResizeObserver(ref, throttledResize, !shouldFocusOnResize);\n}\n\nexport default useMessageResizeObserver;\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      function cleanup() {\n        container.style.scrollSnapType = '';\n        delete container.dataset.scrollId;\n        stopById.delete(id);\n      }\n\n      animate(() => {\n        if (isStopped) {\n          cleanup();\n          return false;\n        }\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          cleanup();\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { beginHeavyAnimation } from '../lib/teact/teact';\nimport { getGlobal } from '../global';\n\nimport type { ScrollTargetPosition } from '../types';\nimport { FocusDirection } from '../types';\n\nimport {\n  SCROLL_MAX_DISTANCE,\n  SCROLL_MAX_DURATION,\n  SCROLL_MIN_DURATION,\n  SCROLL_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport getOffsetToContainer from './visibility/getOffsetToContainer';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nexport type AnimateScrollArgs = {\n  container: HTMLElement;\n  element: HTMLElement;\n  position: ScrollTargetPosition;\n  margin?: number;\n  maxDistance?: number;\n  forceDirection?: FocusDirection;\n  forceDuration?: number;\n  forceNormalContainerHeight?: boolean;\n  shouldReturnMutationFn?: boolean;\n};\n\nlet isAnimating = false;\nlet currentArgs: AnimateScrollArgs | undefined;\nlet onHeavyAnimationEnd: NoneToVoidFunction | undefined;\n\nexport default function animateScroll(args: AnimateScrollArgs) {\n  currentArgs = args;\n  const mutate = createMutateFunction(args);\n\n  if (args.shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(currentArgs!));\n  });\n}\n\nfunction createMutateFunction(args: AnimateScrollArgs) {\n  const {\n    container,\n    element,\n    position,\n    margin = 0,\n    maxDistance = SCROLL_MAX_DISTANCE,\n    forceDirection,\n    forceNormalContainerHeight,\n  } = args;\n\n  let forceDuration = args.forceDuration;\n\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const elementTop = getOffsetToContainer(element, container).top;\n\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    const transition = absPath <= SCROLL_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      SCROLL_MIN_DURATION\n      + (absPath / SCROLL_MAX_DISTANCE) * (SCROLL_MAX_DURATION - SCROLL_MIN_DURATION)\n    );\n    const startAt = Date.now();\n\n    isAnimating = true;\n\n    const prevOnHeavyAnimationEnd = onHeavyAnimationEnd;\n    onHeavyAnimationEnd = beginHeavyAnimation(undefined, true);\n    prevOnHeavyAnimationEnd?.();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n\n        onHeavyAnimationEnd?.();\n        onHeavyAnimationEnd = undefined;\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nexport function cancelScrollBlockingAnimation() {\n  onHeavyAnimationEnd!();\n  onHeavyAnimationEnd = undefined;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = SCROLL_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6);\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\nconst LUMA_THRESHOLD = 128;\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n// https://stackoverflow.com/a/64090995\nexport function hsl2rgb([h, s, l]: [number, number, number]): [number, number, number] {\n  let a = s * Math.min(l, 1 - l);\n  let f = (n: number, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  const rgb = hsl2rgb([hue * 360, saturation, value]);\n  const hex = rgb2hex(rgb.map((c) => Math.floor(c * 255)) as [number, number, number]);\n  return `#${hex}66`;\n}\n\n/* eslint-disable no-bitwise */\nexport const convertToRGBA = (color: number): string => {\n  const alpha = (color >> 24) & 0xff;\n  const red = (color >> 16) & 0xff;\n  const green = (color >> 8) & 0xff;\n  const blue = color & 0xff;\n\n  const alphaFloat = alpha / 255;\n  return `rgba(${red}, ${green}, ${blue}, ${alphaFloat})`;\n};\n\nexport const numberToHexColor = (color: number): string => {\n  return `#${color.toString(16).padStart(6, '0')}`;\n};\n\nexport const getTextColor = (color: number): string => {\n  const r = (color >> 16) & 0xff;\n  const g = (color >> 8) & 0xff;\n  const b = color & 0xff;\n  const luma = getColorLuma([r, g, b]);\n  return luma > LUMA_THRESHOLD ? 'black' : 'white';\n};\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_INCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'contacts',\n    titleKey: 'FilterContacts',\n    avatarIcon: 'user',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n  {\n    isCustomPeer: true,\n    type: 'nonContacts',\n    titleKey: 'FilterNonContacts',\n    avatarIcon: 'non-contacts',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'groups',\n    titleKey: 'FilterGroups',\n    avatarIcon: 'group',\n    isAvatarSquare: true,\n    peerColorId: 3,\n  },\n  {\n    isCustomPeer: true,\n    type: 'channels',\n    titleKey: 'FilterChannels',\n    avatarIcon: 'channel',\n    isAvatarSquare: true,\n    peerColorId: 1,\n  },\n  {\n    isCustomPeer: true,\n    type: 'bots',\n    titleKey: 'FilterBots',\n    avatarIcon: 'bots',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n];\n\nexport const CUSTOM_PEER_EXCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'excludeMuted',\n    titleKey: 'FilterMuted',\n    avatarIcon: 'mute',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeRead',\n    titleKey: 'FilterRead',\n    avatarIcon: 'readchats',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeArchived',\n    titleKey: 'FilterArchived',\n    avatarIcon: 'archive',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n];\n\nexport const CUSTOM_PEER_HIDDEN: UniqueCustomPeer<'hidden'> = {\n  isCustomPeer: true,\n  type: 'hidden',\n  titleKey: 'StarsTransactionHidden',\n  avatarIcon: 'author-hidden',\n  peerColorId: 4,\n};\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Timestamp) {\n    const timestamp = Number((node as HTMLElement).dataset.timestamp);\n    if (Number.isNaN(timestamp)) {\n      return {\n        index,\n        entity: undefined,\n      };\n    }\n\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        timestamp,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n\n  return enableScrolling;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","export default function getOffsetToContainer(element: HTMLElement, container: HTMLElement) {\n  let offsetTop = 0;\n  let offsetLeft = 0;\n\n  let current: HTMLElement | null = element;\n\n  while (current && current !== container && !current.contains(container)) {\n    offsetTop += current.offsetTop;\n    offsetLeft += current.offsetLeft;\n\n    current = current.offsetParent as HTMLElement;\n  }\n\n  return { top: offsetTop, left: offsetLeft };\n}\n","import windowSize from '../windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"YmM5biTv\",\"header\":\"S7WFT2bv\",\"pickerCategoryTitle\":\"YK1300x2\",\"peerChip\":\"gsKPBPoK\",\"pickerList\":\"yLCbiItq\",\"padded\":\"bXzIGw8s\",\"noResults\":\"dXWKD0ve\",\"onlineStatus\":\"d5GDOYh9\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"paid\":\"N3lcrsh8\",\"outside\":\"Hqw10FGl\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\",\"paidCounter\":\"CW4UO1n3\"};"],"names":["scheduledAnimationsCounter","resetCounterOnTickEnd","throttleWithTickEnd","memo","AnimatedCounter","text","className","isDisabled","ref","isRtl","useLang","prevText","usePreviousDeprecated","forceUpdate","useForceUpdate","shouldAnimate","selectCanAnimateInterface","getGlobal","undefined","characters","useMemo","elements","textLength","length","prevTextLength","i","charIndex","prevTextCharIndex","unshift","React","createElement","renderAnimatedCharacters","useEffect","timeoutId","window","setTimeout","clearTimeout","buildClassName","dir","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","getStickerMediaHash","previewBlobUrl","useMedia","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","useFlag","Boolean","thumbClassNames","useMediaTransitionDeprecated","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","size","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","AvatarList","peers","limit","badgeText","lang","useOldLang","pxSize","AVATAR_SIZES","renderingBadgeText","slice","map","peer","Avatar","MediaSpoiler","isVisible","withAnimation","width","height","useRef","shouldRender","transitionClassNames","useShowTransitionDeprecated","canvasRef","useCanvasBlur","handleClick","e","current","el","rect","currentTarget","getBoundingClientRect","x","clientX","left","y","clientY","top","shiftX","shiftY","requestMutation","setAttribute","onClick","PasswordForm","isLoading","isPasswordVisible","error","hint","placeholder","submitLabel","description","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","isMobile","useAppLayout","password","setPassword","useState","canSubmit","setCanSubmit","focusDelayTimeoutMs","useTimeout","IS_TOUCH_ENV","focus","select","action","event","preventDefault","stopEvent","autoComplete","type","id","tabIndex","value","onChange","target","MIN_PASSWORD_LENGTH","maxLength","role","title","Icon","name","Button","ripple","disabled","withGlobal","global","peerId","forceShowSelf","selectPeer","user","selectUser","isSavedMessages","isSelf","PeerChip","icon","isMinimized","canClose","isCloseNonDestructive","clickArg","mockPeer","customPeer","withPeerColors","withEmojiStatus","itemClassName","apiPeer","anyPeer","chat","isApiPeerChat","iconElement","titleElement","titleText","getPeerTitle","FullNameTitle","fullClassName","isForum","isAvatarSquare","getPeerColorClass","PremiumProgress","leftText","rightText","floatingBadgeText","floatingBadgeIcon","progress","isPrimary","floatingBadgeRef","parentContainerRef","setShiftX","tailPosition","setTailPosition","updateBadgePosition","badgeWidth","offsetWidth","parentWidth","minShift","maxShift","currentShift","safeShift","Math","max","min","newTailPosition","useResizeObserver","hasFloatingBadge","isProgressFull","viewBox","fill","d","getStickerFromGift","gift","attributes","find","attr","getTotalGiftAvailability","availabilityTotal","totalCount","getGiftAttributes","model","backdrop","pattern","originalDetails","getGiftAttributesFromList","renderMessageText","message","highlight","emojiSize","asPreview","truncateLength","isProtected","forcePlayback","shouldRenderAsHtml","isForMediaViewer","threadId","maxTimestamp","entities","content","contentNotSupportedText","getMessageText","trimText","messageKey","getMessageKey","renderTextWithEntities","containerId","messageId","chatId","renderMessageSummary","noEmoji","TRUNCATED_SUMMARY_LENGTH","statefulContent","getMessageStatefulContent","hasSpoilers","some","ApiMessageEntityTypes","Spoiler","hasCustomEmoji","CustomEmoji","getMessageSummaryText","renderText","emoji","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","Array","isArray","filter","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","currentUserId","orderBy","Infinity","selectChat","priority","lastMessage","selectChatLastMessage","date","isVerified","includes","Date","now","indexOf","ITEM_CLASS_NAME","PeerPicker","categories","itemIds","categoryPlaceholderKey","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","lockedUnselectedSubtitle","isViewOnly","itemInputType","withStatus","withPeerTypes","withPeerUsernames","withDefaultPadding","onFilterChange","onDisabledClick","onLoadMore","optionalProps","allowMultiple","lockedSelectedIds","lockedUnselectedIds","selectedCategories","selectedCategory","MEMO_EMPTY_ARRAY","selectedIds","selectedId","shouldMinimize","requestMeasure","lockedSelectedIdsSet","lockedUnselectedIdsSet","unlockedSelectedIds","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","forEach","push","concat","handleItemClick","categoryType","newSelectedCategories","splice","onSelectedCategoriesChange","newSelectedIds","onSelectedIdsChange","onSelectedCategoryChange","onSelectedIdChange","handleFilterChange","viewportIds","getMore","useInfiniteScroll","renderItem","useCallback","isCategory","category","peerOrCategory","DEBUG","key","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","subtitle","subtitleClassName","username","usernames","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","onlineStatus","langKey","getPeerTypeKey","getSubtitle","PickerItem","avatarElement","inactive","inputElement","Radio","checked","onlyInput","Checkbox","inputPosition","beforeChildren","pickerCategoryTitle","container","header","peerChip","InputText","InfiniteScroll","pickerList","padded","items","itemSelector","Loading","noResults","titleClassName","isClickable","RippleEffect","IS_IOS","RadialPatternBackground","backgroundColors","patternColor","patternIcon","clearBottomSector","containerRef","getContainerSize","setContainerSize","useSignal","dpr","useDevicePixelRatio","emojiImage","setEmojiImage","previewMediaHash","preloadImage","then","patternPositions","coordinates","ring","ringItemCount","floor","ringProgress","ringRadius","angleShift","PI","angle","cos","sin","sizeFactor","random","entry","contentRect","clientWidth","clientHeight","draw","canvas","ctx","getContext","save","centerShift","renderX","renderY","drawImage","restore","fillStyle","globalCompositeOperation","fillRect","radialGradient","createRadialGradient","addColorStop","maxSide","CustomEmojiEffect","reaction","isLottie","particleSize","onEnded","stickerHash","getStickerHashById","documentId","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","from","generateRandomDropPath","path","withSharedAnimation","onAnimationEnd","alt","ICON_SIZE","REM","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","reactions","activeReactions","selectTabState","withEffects","selectPerformanceSettingsValue","availableReactions","genericEffects","ReactionAnimatedEmoji","effectSize","withEffectOnly","shouldPause","shouldLoop","loopLimit","observeIntersection","stopActiveReaction","getActions","isCustom","availableReaction","r","isSameReaction","centerIconId","centerIcon","customEmoji","useCustomEmoji","assignedEffectId","aroundAnimation","assignedId","available","emoticon","effectId","stickers","isIntersecting","useIsIntersecting","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayEffect","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","root","animating","ReactionStaticEmoji","noPlay","noVideoOnMobile","observeIntersectionForPlaying","forceAlways","AnimatedSticker","animatedIcon","roundToNearestEven","play","noLoop","Fragment","effect","withIconHeart","staticIconId","staticIcon","mediaHash","mediaData","shouldApplySizeFix","shouldReplaceWithHeartIcon","blankUrl","div","document","ALLOWED_QUOTE_ENTITIES","Bold","Italic","Underline","Strike","getSelectionAsFormattedText","range","html","clonedSelection","cloneContents","appendChild","commonAncestorContainer","nodeType","Node","ELEMENT_NODE","classList","contains","currentElement","parentElement","tag","tagName","toLowerCase","entityType","dataset","wrapHtmlWithMarkupTags","innerHTML","replace","getSelectionAsHtml","entity","stripEntitiesForQuote","parseHtmlAsFormattedText","isOpen","PinMessageModal","useModuleLoader","Bundles","Extra","getCopyLabel","hasSelection","editDate","shouldRenderSkeleton","MenuItem","Skeleton","formatDateAtTime","shouldRenderShowWhen","canLoadReadDate","closeContextMenu","openPrivacySettingsNoticeModal","readDate","Transition","activeKey","handleOpenModal","isReadDate","MessageContextMenu","isReactionPickerOpen","topReactions","defaultTagReactions","poll","story","isPrivate","isCurrentUserPremium","enabledReactions","isWithPaidReaction","reactionsLimit","anchor","targetHref","canSendNow","canReschedule","canBuyPremium","canReply","canQuote","canEdit","noReplies","canPin","canUnpin","canDelete","canForward","canReport","canFaveSticker","canUnfaveSticker","canCopy","canCopyLink","canSelect","canDownload","canSaveGif","canRevote","canClosePoll","canTranslate","canShowOriginal","canSelectLanguage","isDownloading","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","customEmojiSets","canPlayAnimatedEmojis","isInSavedMessages","onReply","onOpenThread","onEdit","onPin","onUnpin","onForward","onDelete","onFaveSticker","onReport","onUnfaveSticker","onSelect","onSend","onReschedule","onClose","onCloseAnimationEnd","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onToggleReaction","onSendPaidReaction","onShowPaidReactionModal","onCopyMessages","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","userFullName","canGift","showNotification","openStickerSet","openCustomEmojiSets","loadStickers","openGiftModal","menuRef","scrollableRef","noReactions","areReactionsPossible","withReactions","isEdited","seenByDates","isPremiumGift","isGiftCode","isStarGift","isStarGiftUnique","shouldShowGiftButton","isUserId","areItemsHidden","hideItems","isReady","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","Object","keys","handleAfterCopy","handleGiftClick","forUserId","customEmojiSet","stickerSetInfo","accessHash","handleOpenCustomEmojiSets","shortName","setIds","set","copyOptions","href","afterEffect","options","photo","getMessagePhoto","getMessageWebPageVideo","getMessageWebPagePhoto","contact","getMessageContact","getPhotoMediaHash","canImageBeCopied","hasMediaLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","IS_SAFARI","selection","getSelection","label","handler","Promise","resolve","mediaLoader","blobUrl","copyImageToClipboard","copyTextToClipboard","anchorNode","parentNode","closest","toString","selectionParentNode","selectedMessageElement","getMessageHtmlId","checkMessageHasSelection","messageIds","getMessageIdsForSelectedText","execCommand","clipboardText","copyHtmlToClipboard","join","getMessageTextWithSpoilers","getMessageCopyOptions","groupStatefulContent","getTriggerElement","querySelector","getRootElement","getMenuElement","getLayout","extraHeightAudioPlayer","offsetHeight","middleColumn","getElementById","middleColumnComputedStyle","getComputedStyle","extraHeightPinned","parseFloat","getPropertyValue","extraPaddingX","extraTopPadding","extraMarginTop","shouldAvoidNegativePosition","menuElMinWidth","disableScrolling","handleOpenMessageReactionPicker","position","Menu","withMaxHeight","ReactionSelector","allAvailableReactions","currentReactions","results","onShowMore","isOutgoing","messagesCount","option","withPreventDefaultOnMouseDown","destructive","MenuSeparator","inline","withWrap","reactors","count","getUserFullName","ReadTimeMenuItem","LastEditTimeMenuItem","messageListType","detectedLanguage","selectCurrentMessageList","defaultTags","activeDownloads","selectActiveDownloads","chatFullInfo","selectChatFullInfo","seenByExpiresAt","seenByMaxChatMembers","maxUniqueReactions","readDateExpiresAt","appConfig","noOptions","canReplyGlobally","selectAllowedMessageActionsSlow","selectCanForwardMessage","isOwn","isOwnMessage","chatBot","selectBot","isBot","isMessageUnread","selectIsMessageUnread","isReadDateRestricted","isReadDateRestrictedByMe","isPinned","isScheduled","isChannel","isChatChannel","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","topic","selectTopic","canSendText","isUserRightBanned","canReplyInChat","getCanPostInChat","isLocal","isMessageLocal","hasTtl","hasMessageTtl","isChatGroup","membersCount","isAction","isActionMessage","areReactionsEmpty","canSeeList","selectIsMessageProtected","canCopyNumber","selectIsCurrentUserPremium","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","selectStickerSet","every","translationRequestLanguage","selectRequestedMessageTranslationLanguage","hasTranslation","selectMessageTranslations","selectCanTranslateMessage","isChatTranslated","selectRequestedChatTranslationLanguage","selectIsChatWithSelf","selectPollFromMessage","storyData","selectPeerStory","selectCanGift","isForbidden","hasFullInfo","SERVICE_NOTIFICATIONS_USER_ID","selectIsPremiumPurchaseBlocked","canScheduleUntilOnline","selectCanScheduleUntilOnline","isMessageTranslated","selectCanPlayAnimatedEmojis","selectIsReactionPickerOpen","isPaidReactionAvailable","ContextMenuContainer","album","openThread","updateDraftReplyInfo","setEditingId","pinMessage","openForwardMenu","openReplyMenu","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","downloadMedia","cancelMediaDownload","loadSeenBy","openSeenByModal","openReactorListModal","loadFullChat","loadReactors","copyMessagesByIds","saveGif","cancelPollVote","closePoll","toggleReaction","requestMessageTranslation","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","openPremiumModal","loadOutboxReadDate","copyMessageLink","openDeleteMessageModal","addLocalPaidReaction","openPaidReactionModal","reportMessages","useShowTransition","isMenuOpen","setIsMenuOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","canQuoteSelection","setCanQuoteSelection","requestCalendar","calendar","useSchedule","chatsById","chats","byId","usersById","users","recentReactions","uniqueReactors","PREVIEW_AVATAR_COUNT","messages","msg","downloadableMedia","getMessageDownloadableMedia","getIsDownloading","selectionRange","rangeCount","getRangeAt","collapsed","ancestor","TEXT_NODE","isSelectionRangeInsideMessage","selectionText","messageText","trim","startOffset","endOffset","closeMenu","handleDelete","isSchedule","closePinModal","handleReply","quoteText","replyToMsgId","replyToPeerId","fromChatId","handleOpenThread","handleEdit","handlePin","handleUnpin","isUnpin","handleForward","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","params","childMessageIds","withShift","handleScheduledMessageSend","handleRescheduleMessage","scheduledAt","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","shouldIncludeThread","MAIN_THREAD_ID","shouldIncludeGrouped","handleCopyNumber","phoneNumber","handleDownloadClick","media","originMessage","handleSaveGif","video","getMessageVideo","gif","handleToggleReaction","initialSection","shouldAddToRecent","handleSendPaidReaction","handlePaidReactionModalOpen","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","handleReport","scheduledMaxDate","setFullYear","getFullYear","ConfirmDialog","confirmLabel","confirmHandler","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","SCROLL_MAX_DISTANCE","FOCUS_MARGIN","useFocusMessage","elementRef","isFocused","focusDirection","noFocusHighlight","isResizingContainer","isJustAdded","isQuote","scrollTargetPosition","isRelocatedRef","useLayoutEffect","isRelocated","messagesContainer","isToBottom","scrollPosition","exec","maxDistance","result","animateScroll","element","margin","forceDirection","forceNormalContainerHeight","shouldReturnMutationFn","firstQuote","addExtraClass","requestForcedReflow","REACTION_SIZE","ReactionSelectorCustomReaction","chosen","noAppearAnimation","isContextMenuOpen","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","onMouseDown","onContextMenu","LOCAL_TGS_URLS","StarReaction","ReactionSelectorReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","isActivated","activate","deactivate","onMouseEnter","cn","createClassNameBuilder","isInStoryViewer","isForEffects","effectReactions","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","sortedReactions","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","handleOpenPremiumModal","hintText","parts","split","Link","getReactionKey","color","MAX_EFFECT_COUNT","IS_ANDROID","QUALITY","PaidReactionEmoji","localAmount","effectRef","effectsIds","setEffectsIds","canAddMoreEffects","useEffectWithPrevDeps","prevLocalAmount","prev","noMountTransition","withShouldRender","newEffectsIds","teactFastList","StarIcon","StarReactionEffect","nonInteractive","quality","selectStarsState","stars","ReactionButton","recentReactors","chosenClassName","isOutside","onPaidClick","openStarsBalanceModal","resetLocalPaidReactions","requestWave","counterRef","animationRef","isPaid","starsState","useSelector","areStarsLoaded","handlePaidClick","stopPropagation","prevReaction","amount","button","balance","originReaction","startX","startY","currentScale","Number","scale","cancel","animate","offset","duration","easing","prevAmount","usePrevious","shouldRenderPaidCounter","own","paid","outside","isReactionChosen","Sparkles","preset","animatedEmoji","formatIntegerCompact","paidCounter","counter","Reactions","maxWidth","metaChildren","noRecentReactors","tags","updateMiddleSearch","performMiddleSearch","areTags","withServiceReactions","reduce","acc","recentReactorsByReactionKey","recentReaction","reactionKey","shouldHideRecentReactors","isChosen","update","savedTag","paidLocalCount","localId","actionText","cacheBreaker","payload","dismissAction","shouldShowTimer","disableClickDismiss","handleRemoveReaction","useEffectOnce","SavedTagButton","withContextMenu","onRemove","PromptDialog","submitText","initialValue","setText","handleTextChange","handleSubmit","Modal","isSlim","teactExperimentControlled","isText","withCount","editSavedReactionTag","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","hasText","handleRemoveClick","handleRenameTag","newTitle","contextMenuAnchor","body","withPortal","tagText","tail","tailFill","autoClose","getRequestInputInvoice","inputInvoice","shouldHideName","giftId","shouldUpgrade","userId","currency","purpose","hash","userIds","boostChannelId","boostChannel","additionalChannelIds","untilDate","areWinnersVisible","countries","isOnlyForNewSubscribers","prizeDescription","additionalChannels","inputSavedGift","shouldKeepOriginalDetails","savedGift","getRequestInputSavedStarGift","recipientId","recipient","inputGift","savedId","buildStarsTransactionCustomPeer","avatarIcon","isCustomPeer","titleKey","subtitleKey","peerColorId","customPeerAvatarColor","withPremiumGradient","formatStarsTransactionAmount","starsAmount","nanos","number","abs","formatStarsAmount","getStarsTransactionFromGift","transactionId","senderId","isGift","isMyGift","getPrizeStarsTransactionFromGiveaway","boostPeerId","giveawayPostId","areInputSavedGiftsEqual","one","two","arePropsShallowEqual","isApiPeerUser","filterPeersByQuery","ids","query","getTranslationFn","searchWords","prepareSearchWordsForNeedle","selectorFn","localizedTitle","getChatTitle","isFoundInLocalized","getPeerFullTitle","isSupport","isContact","callback","delay","savedCallback","RADIUS","ITERATIONS","withRaf","radius","preferredWidth","preferredHeight","isStarted","useSyncEffect","img","Image","processBlur","alpha","IS_CANVAS_FILTER_SUPPORTED","fastBlur","onload","useCustomBackground","theme","settingValue","setThemeSettings","setValue","startsWith","cacheApi","CUSTOM_BG_CACHE_NAME","Blob","blob","url","URL","createObjectURL","catch","background","backgroundColor","isBlurred","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","useEnsureMessage","replyOriginForId","loadMessage","useFolderManagerForOrderedIds","folderId","addOrderedIdsCallback","getOrderedIds","useFolderManagerForUnreadCounters","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useHorizontalScroll","shouldPreventDefault","handleScroll","deltaX","scrollLeft","deltaY","addEventListener","passive","removeEventListener","prevRef","lastRef","shouldFocusOnResize","focusLastMessage","messageHeightRef","handleResize","lastHeight","newHeight","isAnimatingScroll","beginHeavyAnimation","resizeDiff","scrollHeight","scrollTop","round","throttledResize","useThrottledCallback","useRunDebounced","ms","noFirst","noLast","deps","useDebouncedCallback","cb","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","handleMessageSchedule","isWhenOnline","getTime","getServerTimeOffset","handleMessageScheduleUntilOnline","SCHEDULED_WHEN_ONLINE","handleCloseCalendar","whenScheduled","scheduledDefaultDate","setSeconds","setMilliseconds","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","DEFAULT_DURATION","stopById","Map","animateHorizontalScroll","getAttribute","containerWidth","scrollWidth","scrollId","remainingPath","get","isStopped","scrollSnapType","startAt","cleanup","delete","t","currentPath","transition","currentArgs","onHeavyAnimationEnd","isAnimating","args","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","forceDuration","FocusDirection","Static","elementHeight","currentScrollTop","containerHeight","elementTop","getOffsetToContainer","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","SCROLL_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","SCROLL_MIN_DURATION","SCROLL_MAX_DURATION","prevOnHeavyAnimationEnd","animateSingle","newScrollTop","cancelScrollBlockingAnimation","hex2rgb","param","parseInt","substring","rgb2hex","p0","p1","p2","rgb2hsb","g","b","h","s","v","hsb2rgb","f","p","q","async","getAverageColor","defaultRGB","data","rgb","context","image","naturalHeight","naturalWidth","getImageData","blockSize","getColorLuma","rgbColor","getPatternColor","hue","saturation","l","a","n","k","hsl2rgb","c","convertToRGBA","getTextColor","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","node","querySelectorAll","messageEl","firstChild","removeChild","pop","CUSTOM_PEER_PREMIUM","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","CUSTOM_PEER_HIDDEN","ENTITY_CLASS_BY_NODE_NAME","B","STRONG","I","EM","INS","U","S","STRIKE","DEL","CODE","Code","PRE","Pre","BLOCKQUOTE","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","fragment","parsedHtml","IS_EMOJI_SUPPORTED","parseMarkdown","RegExp","RE_LINK_TEMPLATE","_","link","parseMarkdownLinks","fixImageContent","innerText","textIndex","recursionDeepness","addEntity","COMMENT_NODE","index","rawText","HTMLElement","nodeName","MentionName","Url","Email","Phone","textContent","TextUrl","getEntityTypeFromNode","rawIndex","language","Timestamp","timestamp","isNaN","getEntityDataFromNode","hasChildNodes","childNodes","replaceWith","scrollLockEl","excludedClosestSelector","IGNORED_KEYS","ArrowDown","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","preventDefaultForScrollKeys","isTextBox","_excludedClosestSelector","onkeydown","enableScrolling","offsetTop","offsetLeft","offsetParent","isElementInViewport","display","windowHeight","windowSize"],"sourceRoot":""}