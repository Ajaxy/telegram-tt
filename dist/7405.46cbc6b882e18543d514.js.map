{"version":3,"file":"7405.46cbc6b882e18543d514.js","mappings":"2SAoBA,MA8DA,GAAeA,EAAAA,EAAAA,KA3DsBC,EACnCC,OACAC,aACAC,oBACAC,aACAC,YAEA,MAAOC,EAAqBC,IAA0BC,EAAAA,EAAAA,KAAS,IACzD,SAAEC,IAAaC,EAAAA,EAAAA,MACfC,EAA2B,IAA8CT,EACzEU,EAAcH,EAAWI,EAAAA,IAA2BC,EAAAA,IAEpDC,GAAwBC,EAAAA,EAAAA,KAAY,IAAMT,GAAuB,IAAO,IAuB9E,OACEU,EAAAA,GAAAC,cAAA,OAAKC,GAAG,SAASC,UAAWf,EAAQ,MAAQ,KACxCC,GACAW,EAAAA,GAAAC,cAAA,OAAKE,UAAU,mBAEjBH,EAAAA,GAAAC,cAACG,EAAAA,EAAe,CACdC,KAAMjB,EAAQkB,EAAAA,IAAsBX,EACpCQ,UAAWhB,EAAa,cAAWoB,EACnCC,OAAQC,EAAAA,EAAeC,WACvBC,MAAOxB,EACPyB,OAAQd,IAEVE,EAAAA,GAAAC,cAACG,EAAAA,EAAe,CACdC,KAAMjB,EAAQkB,EAAAA,IAAsBX,EACpCQ,UAAYhB,EAAwB,QAAX,SACzBqB,OAAQC,EAAAA,EAAeI,eACvBC,YAAa3B,EArCnB,WACE,MAAM4B,EAAc/B,GAAQA,EAAKgC,OAAS,GAAM9B,EAAoB,EAlB3C,GAmBEQ,GAA4BV,EAAKgC,OAAS,GACjE,EACEC,EAAWjC,EAAKgC,SAAW/B,EApBV,IADE,GAuBES,EAA2BV,EAAKgC,OAE3D,OAAI9B,EAAoB,EACf,CACL+B,EACAF,GAIG,CACLA,EACAE,EAEJ,CAkBgCC,QAAsBX,EAChDY,MAAO,EACPC,QAAM,IAEJ,I,0BCxDV,MAgHA,GAAetC,EAAAA,EAAAA,KAAKuC,EAAAA,EAAAA,KACjBC,IAAuBC,EAAAA,EAAAA,IAAKD,EAAQ,CAAC,kBAAmB,mBAAoB,gBAAiB,kBAD5ED,EA9GaG,EAC/BC,kBACAC,mBACAC,gBACAC,mBAEA,MAAM,YACJC,EAAW,wBACXC,EAAuB,kBACvBC,IACEC,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KAEPC,GAAWC,EAAAA,EAAAA,IAAyB,OAEnCpD,EAAMqD,IAAW9C,EAAAA,EAAAA,IAAiB,KAClCJ,EAAYmD,IAAiB/C,EAAAA,EAAAA,KAAS,IACtCL,EAAmBqD,IAAwBhD,EAAAA,EAAAA,IAAS,IAE3DiD,EAAAA,EAAAA,KAAU,KACHC,EAAAA,IACHN,EAASO,QAASC,OACpB,GACC,KAEHC,EAAAA,EAAAA,GAAe,CACbC,UAAU,EACVC,OAAQhB,IAGV,MAAMiB,GAAehD,EAAAA,EAAAA,KAAaiD,IAC5BpB,GACFG,IAGF,MAAQkB,cAAeC,GAAWF,EAClCE,EAAOC,MAAQD,EAAOC,MAAMC,QAAQ,SAAU,IAAIC,OAAO,EAvCzC,GAyCZH,EAAOC,QAAUnE,IAIrBqD,EAAQa,EAAOC,OAEVhE,EAEO+D,EAAOC,MAAMnC,QACvBsB,GAAc,GAFdA,GAAc,GAKZtD,GAAQA,EAAKgC,OAASkC,EAAOC,MAAMnC,OACrCuB,GAAsB,GAEtBA,EAAqB,GAxDP,IA2DZW,EAAOC,MAAMnC,QACfa,EAAY,CAAE7C,KAAMkE,EAAOC,QAC7B,GACC,CAACvB,EAAc5C,EAAMG,EAAY0C,IAMpC,OACE7B,EAAAA,GAAAC,cAAA,OAAKC,GAAG,iBAAiBC,UAAU,iBACjCH,EAAAA,GAAAC,cAAA,OAAKE,UAAU,aACbH,EAAAA,GAAAC,cAAClB,EAAc,CACbC,KAAMA,EACNC,WAzEU,EA0EVE,WAAYA,EACZD,kBAAmBA,IAErBc,EAAAA,GAAAC,cAAA,UACGwB,EACDzB,EAAAA,GAAAC,cAAA,OACEE,UAAU,8BACVmD,QAjBV,WACExB,GACF,EAgBUyB,KAAK,SACLC,SAAU,EACVC,MAAOxB,EAAK,eACZ,aAAYA,EAAK,gBAEjBjC,EAAAA,GAAAC,cAACyD,EAAAA,EAAI,CAACC,KAAK,WAGf3D,EAAAA,GAAAC,cAAA,KAAGE,UAAU,QACV8B,EAAKP,EAAmB,cAAgB,wBAAoBnB,EAAW,CACtEqD,WAAW,EACXC,cAAc,KAGlB7D,EAAAA,GAAAC,cAAC6D,EAAAA,EAAS,CACRC,IAAK5B,EACLjC,GAAG,eACH8D,MAAO/B,EAAK,QACZgC,QAASlB,EACTI,MAAOnE,EACPkF,MAAOtC,GAAgBK,EAAKkC,YAAYvC,GACxCwC,aAAa,MACbC,UAAU,YAEX1C,GAAiB3B,EAAAA,GAAAC,cAACqE,EAAAA,EAAO,OAExB,K,yBCnHV,MAoCA,GAAexF,EAAAA,EAAAA,KAAKuC,EAAAA,EAAAA,KACjBC,IAAuBC,EAAAA,EAAAA,IAAKD,EAAQ,CAAC,gBAAiB,eAAgB,cADrDD,EApCiBkD,EACnC5C,gBAAeC,eAAc4C,eAE7B,MAAM,gBAAEC,EAAe,kBAAE1C,IAAsBC,EAAAA,EAAAA,MAEzCC,GAAOC,EAAAA,EAAAA,MACNwC,EAAcC,IAAmBpF,EAAAA,EAAAA,KAAS,GAE3CqF,GAAiC7E,EAAAA,EAAAA,KAAa8E,IAClDF,EAAgBE,EAAU,GACzB,IAEGC,GAAe/E,EAAAA,EAAAA,KAAagF,IAChCN,EAAgB,CAAEM,YAAW,GAC5B,CAACN,IAEJ,OACEzE,EAAAA,GAAAC,cAAA,OAAKC,GAAG,qBAAqBC,UAAU,iBACrCH,EAAAA,GAAAC,cAAA,OAAKE,UAAU,aACbH,EAAAA,GAAAC,cAAC+E,EAAAA,EAAc,CAACC,kBAAmBP,IACnC1E,EAAAA,GAAAC,cAAA,UAAKgC,EAAK,wBACVjC,EAAAA,GAAAC,cAAA,KAAGE,UAAU,QAAQ8B,EAAK,kCAC1BjC,EAAAA,GAAAC,cAACiF,EAAAA,EAAY,CACXC,WAAYpD,EACZmC,MAAOtC,GAAgBK,EAAKkC,YAAYvC,GACxCwD,KAAMZ,EACNa,UAAW1D,EACXsD,kBAAmBP,EACnBY,2BAA4BV,EAC5BW,SAAUT,KAGV,K,0BC9BV,MAqEA,GAAehG,EAAAA,EAAAA,KAAKuC,EAAAA,EAAAA,KACjBC,IAAuBC,EAAAA,EAAAA,IAAKD,EAAQ,CAAC,gBAAiB,kBADrCD,EArEiBmE,EACnC7D,gBAAeC,mBAEf,MAAM,OAAE6D,EAAM,kBAAE1D,EAAiB,mBAAE2D,IAAuB1D,EAAAA,EAAAA,MAEpDC,GAAOC,EAAAA,EAAAA,MACNyD,EAAeC,IAAoBrG,EAAAA,EAAAA,KAAS,IAC5CsG,EAAaC,IAAkBvG,EAAAA,EAAAA,OAC/BwG,EAAWC,IAAgBzG,EAAAA,EAAAA,IAAS,KACpC0G,EAAUC,IAAe3G,EAAAA,EAAAA,IAAS,IAEnC4G,GAAwBpG,EAAAA,EAAAA,KAAaqG,IACrCxE,GACFG,IAGF,MAAM,OAAEmB,GAAWkD,EAEnBJ,EAAa9C,EAAOC,OACpByC,EAAiB1C,EAAOC,MAAMnC,OAAS,EAAE,GACxC,CAACY,IAEEyE,GAAuBtG,EAAAA,EAAAA,KAAaqG,IACxC,MAAM,OAAElD,GAAWkD,EAEnBF,EAAYhD,EAAOC,MAAM,GACxB,IAYH,OACEnD,EAAAA,GAAAC,cAAA,OAAKC,GAAG,yBAAyBC,UAAU,iBACzCH,EAAAA,GAAAC,cAAA,OAAKE,UAAU,aACbH,EAAAA,GAAAC,cAAA,QAAMqG,OAAO,GAAGC,OAAO,OAAOhB,SAbpC,SAAsBa,GACpBA,EAAMI,iBAENf,EAAO,CAAEM,YAAWE,aAEhBJ,GACFH,EAAmB,CAAEe,KAAMZ,GAE/B,GAMQ7F,EAAAA,GAAAC,cAACyG,EAAAA,EAAc,CAACC,SAAUb,IAC1B9F,EAAAA,GAAAC,cAAA,UAAKgC,EAAK,aACVjC,EAAAA,GAAAC,cAAA,KAAGE,UAAU,QAAQ8B,EAAK,sBAC1BjC,EAAAA,GAAAC,cAAC6D,EAAAA,EAAS,CACR5D,GAAG,0BACH8D,MAAO/B,EAAK,qCACZ0E,SAAUR,EACVhD,MAAO4C,EACP7B,MAAOtC,GAAgBK,EAAKkC,YAAYvC,GACxCwC,aAAa,eAEfpE,EAAAA,GAAAC,cAAC6D,EAAAA,EAAS,CACR5D,GAAG,yBACH8D,MAAO/B,EAAK,oCACZ0E,SAAUN,EACVlD,MAAO8C,EACP7B,aAAa,gBAEduB,GACC3F,EAAAA,GAAAC,cAAC2G,EAAAA,EAAM,CAACvG,KAAK,UAAUwG,KAAK,SAASC,QAAM,EAACzB,UAAW1D,GAAgBM,EAAK,WAI9E,I,gKC7CV,MAgIA,GAAenD,EAAAA,EAAAA,KAhIoBoG,EACjCG,aAAY,EACZJ,oBACAf,QACAkB,OACA2B,cAAc,WACdC,cAAc,OACdC,cACAC,mBACAC,mBACAC,gCAA+B,EAC/BC,YAAW,EACXlC,aACAG,6BACAgC,gBACA/B,eAGA,MAAMpD,GAAWC,EAAAA,EAAAA,IAAyB,MACpCH,GAAOsF,EAAAA,EAAAA,MAEP,SAAE/H,IAAaC,EAAAA,EAAAA,OACdsF,EAAUyC,IAAejI,EAAAA,EAAAA,IAAS,KAClCkI,EAAWC,IAAgBnI,EAAAA,EAAAA,KAAS,GACrCoI,EAAsBnI,EAAW,IAAM,IAgE7C,OA9DAgD,EAAAA,EAAAA,KAAU,KACJ2E,GACFK,EAAY,GACd,GACC,CAACL,KAEJS,EAAAA,EAAAA,IAAW,KACJnF,EAAAA,IACHN,EAASO,QAASC,OACpB,GACCgF,IAEHnF,EAAAA,EAAAA,KAAU,KACJ0B,IACF2D,EAAAA,EAAAA,KAAgB,KACd1F,EAASO,QAASC,QAClBR,EAASO,QAASoF,QAAQ,GAE9B,GACC,CAAC5D,IA4CFlE,EAAAA,GAAAC,cAAA,QAAMqG,OAAO,GAAGf,SAAUA,EAzB5B,SAAsBa,GACpBA,EAAMI,iBAEFnB,GAIAoC,GACFlC,EAAUR,EAEd,EAesDgD,EAAAA,EAAW3D,aAAa,OAC1EpE,EAAAA,GAAAC,cAAA,OACEE,WAAW6H,EAAAA,EAAAA,GAAe,6BAA8BjD,GAAY,UAAWb,GAAS,SACxF+D,IAAKhG,EAAKiG,MAAQ,WAAQ3H,GAEzB6G,GAhBHpH,EAAAA,GAAAC,cAAA,SACE4G,KAAK,WACL3G,GAAG,mBACHkE,aAAa,MACbjE,UAAU,kBACVqD,UAAW,IAYXxD,EAAAA,GAAAC,cAAA,SACE8D,IAAK5B,EACLhC,UAAU,eACV0G,KAAM5B,EAAoB,OAAS,WACnC/E,GAAG,mBACHiD,MAAO4B,GAAY,GACnBX,aAAcgD,EAA+B,gBAAkB,mBAC/DT,SAvDR,SAA0B3D,GACpBkB,GACFiB,IAGF,MAAM,OAAEjC,GAAWF,EACnBwE,EAAYtE,EAAOC,OACnBuE,EAAaxE,EAAOC,MAAMnC,QAAUmH,EAAAA,KAChCb,GACFA,EAAcpE,EAAOC,MAEzB,EA6CQiF,UAAW,IACXH,IAAI,SAENjI,EAAAA,GAAAC,cAAA,aAAQiE,GAASkB,GAAQ2B,GACzB/G,EAAAA,GAAAC,cAAA,OACEE,UAAU,6BACVmD,QAjDR,WACEgC,GAA4BL,EAC9B,EAgDQ1B,KAAK,SACLC,SAAU,EACVC,MAAM,6BACN,aAAW,8BAEXzD,EAAAA,GAAAC,cAACyD,EAAAA,EAAI,CAACC,KAAMsB,EAAoB,MAAQ,iBAG3CgC,GAAejH,EAAAA,GAAAC,cAAA,KAAGE,UAAU,eAAe8G,GAC3C1B,IAAakC,GAAaP,IACzBlH,EAAAA,GAAAC,cAAC2G,EAAAA,EAAM,CAACvG,KAAK,UAAUwG,KAAK,SAASC,QAASO,EAAUhC,UAAWA,EAAWgD,UAAWZ,GACtFT,GAGA,G,mHC9IX,MACMsB,EAAuC,CAAC,EAAG,IAC3CC,EAAwC,CAAC,EAAG,IAC5CC,EAAsC,CAAC,GAAI,GAoCjD,GAAe1J,EAAAA,EAAAA,KAlCsB2J,EAAGxD,oBAAmB7F,YACzD,MAAOC,EAAqBqJ,IAAyBC,EAAAA,EAAAA,IAAQ,IACtDC,EAAaC,IAAiBF,EAAAA,EAAAA,IAAQ,IACvC,SAAEnJ,IAAaC,EAAAA,EAAAA,MAEfqJ,EAAatJ,EAAWI,EAAAA,IAA2BC,EAAAA,KAEzD+H,EAAAA,EAAAA,GAAWiB,EAZkB,KAa7B,MAAM/I,GAAwBC,EAAAA,EAAAA,IAAY2I,EAAuB,CAACA,IAElE,OACE1I,EAAAA,GAAAC,cAAA,OAAKC,GAAG,SAASC,UAAWf,EAAQ,MAAQ,KACxCC,GACAW,EAAAA,GAAAC,cAAA,OAAKE,UAAU,mBAEjBH,EAAAA,GAAAC,cAACG,EAAAA,EAAe,CACdC,KAAMjB,EAAQkB,EAAAA,IAAsBwI,EACpC3I,UAAWyI,EAAc,SAAW,QACpCpI,OAAQC,EAAAA,EAAesI,YACvBjI,YAAawH,EACblH,QAAM,EACNR,OAAQd,IAEVE,EAAAA,GAAAC,cAACG,EAAAA,EAAe,CACdC,KAAMjB,EAAQkB,EAAAA,IAAsBwI,EACpC3I,UAAWyI,EAAc,QAAU,SACnCpI,OAAQC,EAAAA,EAAeuI,WACvBlI,YAAamE,EAAoBsD,EAAsBC,EACvDpH,QAAM,IAEJ,G,6DCrCV,QAbA,SAAoB6H,EAA8BC,GAChD,MAAMC,GAAgBC,EAAAA,EAAAA,GAAgBH,IAEtCzG,EAAAA,EAAAA,KAAU,KACR,GAAqB,iBAAV0G,EACT,OAGF,MAAMhJ,EAAKmJ,YAAW,IAAMF,KAAiBD,GAC7C,MAAO,IAAMI,aAAapJ,EAAG,GAC5B,CAACgJ,GACN,C,kDCbA,MAcA,EAdoCK,CAClCC,EAAqCC,EAAiBC,KAEtD,MAAMC,GAAcvH,EAAAA,EAAAA,MAEpB,OAAOwH,EAAAA,EAAAA,KAAgB,KACrB,MAAMC,EAAWF,EAAYjH,QAG7B,OAFAiH,EAAYjH,QAAU+G,EAEfD,EAAGK,GAAY,GAAG,GAExBJ,EAAcC,EAAS,C,sDCb5B,IAAII,EAAU,EAEP,SAASC,IACdD,GAAW,CACb,CAEO,SAASE,IACdF,GAAW,CACb,CAEO,SAASG,IACd,OAAOH,EAAU,CACnB,C,kDCVe,SAASI,EAA+BC,GAgBrD,OAfA,SAA0BC,GACxB,MAAMC,GAAWjI,EAAAA,EAAAA,IAAOgI,GAWxB,OATIA,EAAME,OACRD,EAAS3H,QAAU0H,EAEnBC,EAAS3H,QAAU,IACd2H,EAAS3H,QACZ4H,QAAQ,GAILH,EAAUE,EAAS3H,QAC5B,CAGF,C,kBCnBe,SAAS6H,EAAUC,GAChC,SAASC,EAAczH,GACrB,GAAc,QAAVA,EAAE0H,IACJ,OAGF1H,EAAEwD,iBACFxD,EAAE2H,kBAEF,MAAMC,EAAoBC,MAAMC,KAC9BN,EAAQO,iBAAiB,6EAE3B,IAAKH,EAAkB5J,OACrB,OAGF,MAAMgK,EAAsBJ,EAAkBK,WAAWC,GAAOA,EAAGC,WAAWC,SAASC,iBACvF,IAAIC,EAAkB,EAClBN,GAAuB,IAEvBM,EADEtI,EAAEuI,SACcP,EAAsB,EACpCA,EAAsB,EACtBJ,EAAkB5J,OAAS,EAEbgK,EAAsBJ,EAAkB5J,OAAS,EAC/DgK,EAAsB,EACtB,GAIRJ,EAAkBU,GAAiB3I,OACrC,CAIA,OAFAyI,SAASI,iBAAiB,UAAWf,GAAe,GAE7C,KACLW,SAASK,oBAAoB,UAAWhB,GAAe,EAAM,CAEjE,C","sources":["webpack://telegram-t/./src/components/common/TrackingMonkey.tsx","webpack://telegram-t/./src/components/auth/AuthCode.tsx","webpack://telegram-t/./src/components/auth/AuthPassword.tsx","webpack://telegram-t/./src/components/auth/AuthRegister.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/hooks/useLayoutEffectWithPrevDeps.ts","webpack://telegram-t/./src/util/directInputManager.ts","webpack://telegram-t/./src/util/hoc/freezeWhenClosed.ts","webpack://telegram-t/./src/util/trapFocus.ts"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useAppLayout from '../../hooks/useAppLayout';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  code: string;\n  codeLength: number;\n  trackingDirection: number;\n  isTracking: boolean;\n  isBig?: boolean;\n};\n\nconst TRACKING_START_FRAME = 15;\nconst TRACKING_END_FRAME = 180;\n\nconst TrackingMonkey: FC<OwnProps> = ({\n  code,\n  codeLength,\n  trackingDirection,\n  isTracking,\n  isBig,\n}) => {\n  const [isFirstMonkeyLoaded, setIsFirstMonkeyLoaded] = useState(false);\n  const { isMobile } = useAppLayout();\n  const trackningFramesPerSymbol = (TRACKING_END_FRAME - TRACKING_START_FRAME) / codeLength;\n  const stickerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  const handleFirstMonkeyLoad = useCallback(() => setIsFirstMonkeyLoaded(true), []);\n\n  function getTrackingFrames(): [number, number] {\n    const startFrame = (code && code.length > 1) || trackingDirection < 0\n      ? TRACKING_START_FRAME + trackningFramesPerSymbol * (code.length - 1)\n      : 0;\n    const endFrame = code.length === codeLength\n      ? TRACKING_END_FRAME\n      : TRACKING_START_FRAME + trackningFramesPerSymbol * code.length;\n\n    if (trackingDirection < 1) {\n      return [\n        endFrame,\n        startFrame,\n      ];\n    }\n\n    return [\n      startFrame,\n      endFrame,\n    ];\n  }\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stickerSize}\n        className={isTracking ? 'hidden' : undefined}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyIdle}\n        play={!isTracking}\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stickerSize}\n        className={!isTracking ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyTracking}\n        playSegment={isTracking ? getTrackingFrames() : undefined}\n        speed={2}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(TrackingMonkey);\n","import type { FormEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\n\nimport { pick } from '../../util/iteratees';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLang from '../../hooks/useLang';\n\nimport Icon from '../common/icons/Icon';\nimport TrackingMonkey from '../common/TrackingMonkey';\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\n\ntype StateProps = Pick<GlobalState, 'authPhoneNumber' | 'authIsCodeViaApp' | 'authIsLoading' | 'authErrorKey'>;\n\nconst CODE_LENGTH = 5;\n\nconst AuthCode: FC<StateProps> = ({\n  authPhoneNumber,\n  authIsCodeViaApp,\n  authIsLoading,\n  authErrorKey,\n}) => {\n  const {\n    setAuthCode,\n    returnToAuthPhoneNumber,\n    clearAuthErrorKey,\n  } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [code, setCode] = useState<string>('');\n  const [isTracking, setIsTracking] = useState(false);\n  const [trackingDirection, setTrackingDirection] = useState(1);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, []);\n\n  useHistoryBack({\n    isActive: true,\n    onBack: returnToAuthPhoneNumber,\n  });\n\n  const onCodeChange = useCallback((e: FormEvent<HTMLInputElement>) => {\n    if (authErrorKey) {\n      clearAuthErrorKey();\n    }\n\n    const { currentTarget: target } = e;\n    target.value = target.value.replace(/[^\\d]+/, '').substr(0, CODE_LENGTH);\n\n    if (target.value === code) {\n      return;\n    }\n\n    setCode(target.value);\n\n    if (!isTracking) {\n      setIsTracking(true);\n    } else if (!target.value.length) {\n      setIsTracking(false);\n    }\n\n    if (code && code.length > target.value.length) {\n      setTrackingDirection(-1);\n    } else {\n      setTrackingDirection(1);\n    }\n\n    if (target.value.length === CODE_LENGTH) {\n      setAuthCode({ code: target.value });\n    }\n  }, [authErrorKey, code, isTracking, setAuthCode]);\n\n  function handleReturnToAuthPhoneNumber() {\n    returnToAuthPhoneNumber();\n  }\n\n  return (\n    <div id=\"auth-code-form\" className=\"custom-scroll\">\n      <div className=\"auth-form\">\n        <TrackingMonkey\n          code={code}\n          codeLength={CODE_LENGTH}\n          isTracking={isTracking}\n          trackingDirection={trackingDirection}\n        />\n        <h1>\n          {authPhoneNumber}\n          <div\n            className=\"auth-number-edit div-button\"\n            onClick={handleReturnToAuthPhoneNumber}\n            role=\"button\"\n            tabIndex={0}\n            title={lang('WrongNumber')}\n            aria-label={lang('WrongNumber')}\n          >\n            <Icon name=\"edit\" />\n          </div>\n        </h1>\n        <p className=\"note\">\n          {lang(authIsCodeViaApp ? 'SentAppCode' : 'LoginJustSentSms', undefined, {\n            withNodes: true,\n            withMarkdown: true,\n          })}\n        </p>\n        <InputText\n          ref={inputRef}\n          id=\"sign-in-code\"\n          label={lang('Code')}\n          onInput={onCodeChange}\n          value={code}\n          error={authErrorKey && lang.withRegular(authErrorKey)}\n          autoComplete=\"off\"\n          inputMode=\"numeric\"\n        />\n        {authIsLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['authPhoneNumber', 'authIsCodeViaApp', 'authIsLoading', 'authErrorKey']),\n)(AuthCode));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\n\nimport { pick } from '../../util/iteratees';\n\nimport useLang from '../../hooks/useLang';\n\nimport PasswordForm from '../common/PasswordForm';\nimport MonkeyPassword from '../common/PasswordMonkey';\n\ntype StateProps = Pick<GlobalState, 'authIsLoading' | 'authErrorKey' | 'authHint'>;\n\nconst AuthPassword: FC<StateProps> = ({\n  authIsLoading, authErrorKey, authHint,\n}) => {\n  const { setAuthPassword, clearAuthErrorKey } = getActions();\n\n  const lang = useLang();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleChangePasswordVisibility = useCallback((isVisible) => {\n    setShowPassword(isVisible);\n  }, []);\n\n  const handleSubmit = useCallback((password: string) => {\n    setAuthPassword({ password });\n  }, [setAuthPassword]);\n\n  return (\n    <div id=\"auth-password-form\" className=\"custom-scroll\">\n      <div className=\"auth-form\">\n        <MonkeyPassword isPasswordVisible={showPassword} />\n        <h1>{lang('LoginHeaderPassword')}</h1>\n        <p className=\"note\">{lang('LoginEnterPasswordDescription')}</p>\n        <PasswordForm\n          clearError={clearAuthErrorKey}\n          error={authErrorKey && lang.withRegular(authErrorKey)}\n          hint={authHint}\n          isLoading={authIsLoading}\n          isPasswordVisible={showPassword}\n          onChangePasswordVisibility={handleChangePasswordVisibility}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['authIsLoading', 'authErrorKey', 'authHint']),\n)(AuthPassword));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\n\nimport { pick } from '../../util/iteratees';\n\nimport useLang from '../../hooks/useLang';\n\nimport AvatarEditable from '../ui/AvatarEditable';\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\n\ntype StateProps = Pick<GlobalState, 'authIsLoading' | 'authErrorKey'>;\n\nconst AuthRegister: FC<StateProps> = ({\n  authIsLoading, authErrorKey,\n}) => {\n  const { signUp, clearAuthErrorKey, uploadProfilePhoto } = getActions();\n\n  const lang = useLang();\n  const [isButtonShown, setIsButtonShown] = useState(false);\n  const [croppedFile, setCroppedFile] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n\n  const handleFirstNameChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    if (authErrorKey) {\n      clearAuthErrorKey();\n    }\n\n    const { target } = event;\n\n    setFirstName(target.value);\n    setIsButtonShown(target.value.length > 0);\n  }, [authErrorKey]);\n\n  const handleLastNameChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n\n    setLastName(target.value);\n  }, []);\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    signUp({ firstName, lastName });\n\n    if (croppedFile) {\n      uploadProfilePhoto({ file: croppedFile });\n    }\n  }\n\n  return (\n    <div id=\"auth-registration-form\" className=\"custom-scroll\">\n      <div className=\"auth-form\">\n        <form action=\"\" method=\"post\" onSubmit={handleSubmit}>\n          <AvatarEditable onChange={setCroppedFile} />\n          <h2>{lang('YourName')}</h2>\n          <p className=\"note\">{lang('LoginRegisterDesc')}</p>\n          <InputText\n            id=\"registration-first-name\"\n            label={lang('LoginRegisterFirstNamePlaceholder')}\n            onChange={handleFirstNameChange}\n            value={firstName}\n            error={authErrorKey && lang.withRegular(authErrorKey)}\n            autoComplete=\"given-name\"\n          />\n          <InputText\n            id=\"registration-last-name\"\n            label={lang('LoginRegisterLastNamePlaceholder')}\n            onChange={handleLastNameChange}\n            value={lastName}\n            autoComplete=\"family-name\"\n          />\n          {isButtonShown && (\n            <Button size=\"smaller\" type=\"submit\" ripple isLoading={authIsLoading}>{lang('Next')}</Button>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(global, ['authIsLoading', 'authErrorKey']),\n)(AuthRegister));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <Icon name={isPasswordVisible ? 'eye' : 'eye-closed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button size=\"smaller\" type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import { useLayoutEffect, useRef } from '../lib/teact/teact';\n\nconst useLayoutEffectWithPrevDeps = <const T extends readonly any[]>(\n  cb: (args: T | readonly []) => void, dependencies: T, debugKey?: string,\n) => {\n  const prevDepsRef = useRef<T>();\n\n  return useLayoutEffect(() => {\n    const prevDeps = prevDepsRef.current;\n    prevDepsRef.current = dependencies;\n\n    return cb(prevDeps || []);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies, debugKey);\n};\n\nexport default useLayoutEffectWithPrevDeps;\n","let counter = 0;\n\nexport function disableDirectTextInput() {\n  counter += 1;\n}\n\nexport function enableDirectTextInput() {\n  counter -= 1;\n}\n\nexport function getIsDirectTextInputDisabled() {\n  return counter > 0;\n}\n","import { type FC, type Props, useRef } from '../../lib/teact/teact';\n\nexport default function freezeWhenClosed<T extends FC>(Component: T) {\n  function ComponentWrapper(props: Props) {\n    const newProps = useRef(props);\n\n    if (props.isOpen) {\n      newProps.current = props;\n    } else {\n      newProps.current = {\n        ...newProps.current,\n        isOpen: false,\n      };\n    }\n\n    return Component(newProps.current);\n  }\n\n  return ComponentWrapper as T;\n}\n","export default function trapFocus(element: HTMLElement) {\n  function handleKeyDown(e: KeyboardEvent) {\n    if (e.key !== 'Tab') {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    const focusableElements = Array.from(\n      element.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'),\n    ) as HTMLElement[];\n    if (!focusableElements.length) {\n      return;\n    }\n\n    const currentFocusedIndex = focusableElements.findIndex((em) => em.isSameNode(document.activeElement));\n    let newFocusedIndex = 0;\n    if (currentFocusedIndex >= 0) {\n      if (e.shiftKey) {\n        newFocusedIndex = currentFocusedIndex > 0\n          ? currentFocusedIndex - 1\n          : focusableElements.length - 1;\n      } else {\n        newFocusedIndex = currentFocusedIndex < focusableElements.length - 1\n          ? currentFocusedIndex + 1\n          : 0;\n      }\n    }\n\n    focusableElements[newFocusedIndex].focus();\n  }\n\n  document.addEventListener('keydown', handleKeyDown, false);\n\n  return () => {\n    document.removeEventListener('keydown', handleKeyDown, false);\n  };\n}\n"],"names":["memo","TrackingMonkey","code","codeLength","trackingDirection","isTracking","isBig","isFirstMonkeyLoaded","setIsFirstMonkeyLoaded","useState","isMobile","useAppLayout","trackningFramesPerSymbol","stickerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","handleFirstMonkeyLoad","useCallback","React","createElement","id","className","AnimatedSticker","size","STICKER_SIZE_TWO_FA","undefined","tgsUrl","LOCAL_TGS_URLS","MonkeyIdle","play","onLoad","MonkeyTracking","playSegment","startFrame","length","endFrame","getTrackingFrames","speed","noLoop","withGlobal","global","pick","AuthCode","authPhoneNumber","authIsCodeViaApp","authIsLoading","authErrorKey","setAuthCode","returnToAuthPhoneNumber","clearAuthErrorKey","getActions","lang","useLang","inputRef","useRef","setCode","setIsTracking","setTrackingDirection","useEffect","IS_TOUCH_ENV","current","focus","useHistoryBack","isActive","onBack","onCodeChange","e","currentTarget","target","value","replace","substr","onClick","role","tabIndex","title","Icon","name","withNodes","withMarkdown","InputText","ref","label","onInput","error","withRegular","autoComplete","inputMode","Loading","AuthPassword","authHint","setAuthPassword","showPassword","setShowPassword","handleChangePasswordVisibility","isVisible","handleSubmit","password","MonkeyPassword","isPasswordVisible","PasswordForm","clearError","hint","isLoading","onChangePasswordVisibility","onSubmit","AuthRegister","signUp","uploadProfilePhoto","isButtonShown","setIsButtonShown","croppedFile","setCroppedFile","firstName","setFirstName","lastName","setLastName","handleFirstNameChange","event","handleLastNameChange","action","method","preventDefault","file","AvatarEditable","onChange","Button","type","ripple","placeholder","submitLabel","description","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","onInputChange","useOldLang","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","useTimeout","requestMutation","select","stopEvent","buildClassName","dir","isRtl","MIN_PASSWORD_LENGTH","maxLength","disabled","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","PasswordMonkey","markFirstMonkeyLoaded","useFlag","isPeekShown","markPeekShown","stikerSize","MonkeyClose","MonkeyPeek","callback","delay","savedCallback","useLastCallback","setTimeout","clearTimeout","useLayoutEffectWithPrevDeps","cb","dependencies","debugKey","prevDepsRef","useLayoutEffect","prevDeps","counter","disableDirectTextInput","enableDirectTextInput","getIsDirectTextInputDisabled","freezeWhenClosed","Component","props","newProps","isOpen","trapFocus","element","handleKeyDown","key","stopPropagation","focusableElements","Array","from","querySelectorAll","currentFocusedIndex","findIndex","em","isSameNode","document","activeElement","newFocusedIndex","shiftKey","addEventListener","removeEventListener"],"sourceRoot":""}