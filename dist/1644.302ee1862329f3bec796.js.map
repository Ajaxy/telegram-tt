{"version":3,"file":"1644.302ee1862329f3bec796.js","mappings":"yOAgCA,MA2FA,GAAeA,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GAAUC,aACT,MAAMC,GAAOC,EAAAA,EAAAA,KAAWH,EAAQC,GAC1BG,GAAYC,EAAAA,EAAAA,IAAoBL,EAAQC,GAG9C,MAAO,CACLG,YACAE,WAJwBC,EAAAA,EAAAA,KAAeP,GAAQQ,YAAcR,EAAOS,WAAWC,uBAAoBC,KAInEP,GAAWQ,IAAMC,QAC/CT,EACIA,EAAUU,kBAAoB,GAAKV,EAAUW,SAC7Cb,GAAQA,EAAKc,gBAAkBd,EAAKe,cAE3C,GAbelB,EAzFgCmB,EAClDjB,SACAK,WACAa,YACAf,YACAgB,wBAEA,MAAM,8BACJC,EAA6B,4BAC7BC,IACEC,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KAEPC,GAAsBC,EAAAA,EAAAA,KAAY,KACtCN,EAA8B,CAC5BpB,UACA,GACD,CAACoB,EAA+BpB,IAE7B2B,EAAexB,GAAWwB,aAE1BC,GAAsBC,EAAAA,EAAAA,KAAQ,KAClC,IAAKF,EACH,MAAO,GAIT,MAAMG,GAAYC,EAAAA,EAAAA,MAAYC,MAAMC,KAC9BC,GAAYH,EAAAA,EAAAA,MAAYI,MAAMF,KAEpC,OAAOG,OAAOC,OAAOV,GAClBW,MAAM,EAlCiB,GAmCvBC,KAAI,EAAG5B,QAASmB,EAAUnB,IAAOuB,EAAUvB,KAC3C6B,OAAO5B,QAAQ,GACjB,CAACe,KAEJc,EAAAA,EAAAA,KAAU,KACR,GAAKtC,GAAWQ,KACXN,IAAYF,EAAUW,UAO3B,OALAO,EAA4B,CAC1BV,GAAIR,EAAUQ,GACd+B,YAAY,IAGP,KACLrB,EAA4B,CAC1BV,GAAIR,EAAUQ,GACd+B,YAAY,GACZ,CACH,GACA,CAACvC,GAAWQ,GAAIR,GAAWW,SAAUT,EAAUgB,IAElD,MAAMsB,GAA4BC,EAAAA,EAAAA,GAAiBzC,GAAWU,mBAAmB,GAC3EgC,GAA+BD,EAAAA,EAAAA,GAAiBhB,GAAqB,GAErEkB,EAAclC,QAAQT,GAAaE,IAEnC,IAAE0C,EAAG,aAAEC,IAAiBC,EAAAA,EAAAA,GAAc,CAC1CC,OAAQJ,EACRK,cAAehC,IAGjB,GAAK6B,EAEL,OACEI,EAAAA,GAAAC,cAAA,OACEN,IAAKA,EACL7B,WAAWoC,EAAAA,EAAAA,GACT,mBACApC,GAEFqC,QAAS9B,GAET2B,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,QACbkC,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,SAASK,EAAK,uBAC9B6B,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,gBAAgBK,EAAK,eAAgBoB,GAA6B,EAAG,OAEtF/B,QAAQiC,GAA8BW,SACrCJ,EAAAA,GAAAC,cAACI,EAAAA,EAAU,CAACC,KAAK,QAAQC,MAAOd,EAA8B3B,UAAU,YAE1EkC,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAACC,OAAK,EAAC3C,UAAU,QACrBK,EAAK,iBAEJ,I,6TCxCH,MAAMuC,EAAwBC,OAAOC,WAAW,sBAC1CC,EAAoCF,OAAOC,WAAW,sBA+lBnE,SAASE,EACPC,EACAC,EACAC,GAEA,OACEjB,EAAAA,GAAAC,cAAA,OACEnC,UAAU,WACV6B,IAAKsB,GAEJD,EAAe7B,KAAI,EAAG+B,QAAOC,SAC5BnB,EAAAA,GAAAC,cAAA,OACEnC,UAAU,6BACVsD,MAAQ,SAAgB,IAARF,cAAwB,IAAY,IAANC,SAGlDnB,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,0BACdkC,EAAAA,GAAAC,cAAA,KACEnC,UAAU,+BACVsD,MAAQ,yBAAuC,IAAfL,SAGpCf,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,kBACdkC,EAAAA,GAAAC,cAAA,KACEnC,UAAU,uBACVsD,MAAQ,yBAAuC,IAAfL,SAK1C,CAEA,SAAetE,EAAAA,EAAAA,KA1nBa4E,EAC1BC,QACAC,UACAC,cACAC,iBACAC,SACAC,OACAC,YACA9D,YACA+D,eACAC,aACAC,gBACAC,iBACAC,wBACAC,gBACAC,uBACAC,cACAC,gBACAC,WACAC,sBACAC,SACAC,UACAC,cACAC,iBACAC,kBAEA,MAAM,oBACJC,EAAmB,cAAEC,EAAa,gBAAEC,GAAe,sBAAEC,KACnD9E,EAAAA,EAAAA,OAGF+E,SACEC,MAAOC,GAAY,MAAEC,GAAK,MAAEC,IAC7B,cAAEC,IACD/B,EACE2B,GAAQC,KAAgBI,EAAAA,EAAAA,IAAuBhC,GAC/CiC,GAASJ,IAASC,IAASH,GAC3BO,GAAeL,IAASC,GACxBK,GAAUlG,QAAQ4F,IAASC,IAC3BM,IAAYC,EAAAA,EAAAA,KAAgB,GAE5B3C,IAAY2C,EAAAA,EAAAA,IAAuB,MACnCzF,IAAOC,EAAAA,EAAAA,MACP,MAAEyF,IAAU1F,IAEZ,SAAE2F,KAAaC,EAAAA,EAAAA,OACdC,GAAaC,KAAkBC,EAAAA,EAAAA,KAAS,GACzCC,GAAaH,KAjDL,EAkDRI,IAAYC,EAAAA,EAAAA,IAAab,GAAO,aAChCc,IAAeC,EAAAA,EAAAA,GAASH,IAAW,EAAOI,EAAAA,GAAeC,SACzDC,IAASC,EAAAA,EAAAA,IAAcpD,GACvBqD,GAAmBlD,IAAWmD,EAAAA,GAAYC,aAC1CC,GAAYrB,GAAWgB,GAAS,eAAiB,QAAW,QAE5DM,IAAYT,EAAAA,EAAAA,IAChBF,EAAAA,EAAAA,IAAab,GAAO,WACnBW,IACDc,EAAAA,EAAAA,IAAezB,GAAO,YAGhB0B,aAAcC,KAAqBC,EAAAA,EAAAA,IACzCf,EAAAA,EAAAA,IAAab,GAAO,aACnBzB,GACDkD,EAAAA,EAAAA,IAAezB,GAAO,aAGlB6B,IAAkBC,EAAAA,EAAAA,IAAgB,KACtCrB,IAAe,GACfzB,IAASjB,EAAQhE,GAAIgE,EAAQ3E,OAAO,IAGhC2I,IAAoBD,EAAAA,EAAAA,IAAgB,KACxCrB,IAAe,EAAM,KAGjB,WACJuB,GAAU,eAAExE,GAAc,kBAAEyE,GAAiB,eAAEC,KAC7CC,EAAAA,EAAAA,KAEEC,GAAUhB,IACV,UACJiB,GAAS,aAAE9E,GAAY,UAAE+E,GAAS,eAAEC,GAAc,SAAEC,KAClDC,EAAAA,EAAAA,IACFC,EAAAA,EAAAA,IAAY3E,IACZ4E,EAAAA,EAAAA,IAAiB5E,GACjBwD,GACAC,GACAS,QACAnI,EACAoI,GACAlI,QAAQwG,IAAe1B,GACvB+C,GACAE,IACAa,EAAAA,EAAAA,IAAe7E,IAAYmD,QAC3BpH,EACAmF,EACAmD,GACAlB,KAAWE,IAGPyB,GAAsB,EAAItF,GAC1BuF,IAAQC,EAAAA,EAAAA,IAAahF,GACrBiF,GAAY9B,IAAUE,GAEtB6B,GAwbR,SACEnF,EACAkC,EACAzC,EAAe,EACfuF,GAAQ,EACRI,GAAa,EACb5C,GAAW,EACX0C,GAAY,GAGZ,MAAMG,GAAY/C,EAAAA,EAAAA,IAA0B,OAEpCgD,KAAMC,EAAM,KAAEC,IAASrI,EAAAA,EAAAA,KAAQ,KACrC,IAAK+E,EACH,OAGF,MAAM,SAAEuD,EAAQ,SAAEf,GAAaxC,EAC/B,IAAKuD,EACH,MAAO,CACLH,KAAM,IAAII,MAAMC,KAAKC,IAAIlB,ECnoBQ,KDmoB8BmB,KAAK,GACpEL,KAAM,GAIV,MAAM,WAAEM,EAAU,WAAEC,GAtKxB,SAAiCvD,EAAoB4C,GACnD,MAAO,CACLU,WAAYtD,EAAYpD,EAAsB4G,QAAU,GAAK,GAAM,GACnED,WAAYvD,EACPpD,EAAsB4G,QACrB,GACCZ,GAAc7F,EAAkCyG,QAAU,GAAK,GAClE,GAER,CA6JuCC,CAAwBzD,EAAU4C,GAC/Dc,EAAiBP,KAAKC,IAAIlB,EA9jBT,GA8jBwC,GACzDyB,EAAcR,KAAKxG,MAAM2G,GAAcC,EAAaD,GAAcI,GAGxE,OEjnBG,SAA0BZ,EAAgBc,GAC/C,IAAIZ,EAAO,EACX,MAAMa,EAAU,IAAIX,MAAMU,GACpBE,EAAehB,EAAKxG,OAASsH,EAC7BG,EAAajB,EAAK,GAClBkB,EAAclB,EAAKA,EAAKxG,OAAS,GACvC,IAAK,IAAI2H,EAAI,EAAGA,EAAIL,EAAUK,IAAK,CACjC,MAAMC,EAAMf,KAAKgB,MAAMF,EAAIH,GACrBM,IAAQtB,EAAKoB,EAAM,IAAMH,IAAejB,EAAKoB,IAAQH,IAAejB,EAAKoB,EAAM,IAAMF,IAAgB,EAC3GH,EAAQI,GAAKG,EACTpB,EAAOoB,IACTpB,EAAOoB,EAEX,CACA,MAAO,CAAEtB,KAAMe,EAASb,OAC1B,CFkmBWqB,CEhpBJ,SAAwBC,GAC7B,MAAMC,EAAiC,EAArBD,EAAYhI,OACxBkI,EAAcrB,KAAKgB,MAAMI,EAAY,GAC3C,IAAKC,EACH,MAAO,GAWT,MAAMC,EAASvB,MAAMsB,GACfE,EAAWJ,EACjB,IAAK,IAAIL,EAAI,EAAGU,EAAIH,EAAc,EAAGP,IAAMU,IAAKV,EAAG,CACjD,MAAMW,EAAYzB,KAAKgB,MAAW,EAAJF,EAAS,GACjCY,EAAW1B,KAAKgB,MAAW,EAAJF,EAAS,GAChCa,EAAQJ,EAASE,IAAcF,EAASE,EAAY,IAAM,GAChEH,EAAOR,GAAOa,GAASD,EAAY,EACrC,CACA,MAAME,EAAgB5B,KAAKgB,MAA2B,GAAnBK,EAAc,GAAU,GACrDQ,EAAe7B,KAAKgB,MAA2B,GAAnBK,EAAc,GAAU,GACpDS,EAAYP,EAASK,IAAkBL,EAASK,EAAgB,IAAM,GAG5E,OAFAN,EAAOD,EAAc,GAAMS,GAAaD,EAAgB,GAEjDP,CACT,CFinB4BS,CAAe,IAAIC,WAAWlC,IAEbU,EAAY,GACpD,CAAC3D,EAAUN,EAAOkD,KAAgB,CAAC,EAwBtC,OAtBAwC,EAAAA,EAAAA,KAAgB,KACd,MAAMC,EAASxC,EAAUyC,QAEpBD,GAAWtC,QAAmBvJ,IAATwJ,GC7oBvB,SACLqC,EACAtC,EACAwC,GACA,KACEvC,EAAI,UAAEwC,EAAS,kBAAEC,IAGnB,MAAMC,EAZW,EAYH3C,EAAOzG,OAGrB+I,EAAOK,MAAgB,EAARA,EACfL,EAAOM,OAASA,GAChBN,EAAO/H,MAAMoI,MAAS,GAAEA,MACxBL,EAAO/H,MAAMqI,OAAU,OAEvB,MAAMC,EAAMP,EAAOQ,WAAW,MAC9BD,EAAIE,MAAM,EAAG,GAEb/C,EAAOgD,SAAQ,CAACC,EAAM/B,KACpB2B,EAAIK,YAAehC,EAAIlB,EAAOzG,QAAUiJ,EAAY,GAAM,EAC1DK,EAAIJ,UAAYD,EAAWtB,EAAIlB,EAAOzG,OAASmJ,EAAoBD,EACnE,MAAMU,EAAc/C,KAAKgD,IAAI,EAAaH,EAAO7C,KAAKgD,IAAI,EAAGnD,GAxBlD,KA8Bf,SACE4C,EAA+BQ,EAAWC,EAAWX,EAAeC,EAAgBW,GANhBC,EAQxD,EAAID,IACdA,EAASZ,GAEPC,EAAS,EAAIW,IACfA,EAASX,EAAS,GAGpBC,EAAIY,YACJZ,EAAIa,OAAOL,EAAIE,EAAQD,GACvBT,EAAIc,MAAMN,EAjB0DG,EAiB/CF,EAAGD,EAjB4CG,EAiBjCF,EAAIV,EAAQW,GAC/CV,EAAIc,MAAMN,EAlB0DG,EAkB/CF,EAAIV,EAAQS,EAAGC,EAAIV,EAAQW,GAChDV,EAAIc,MAAMN,EAAGC,EAAIV,EAAQS,EAAGC,EAAGC,GAC/BV,EAAIc,MAAMN,EAAGC,EAAGD,EApBoDG,EAoBzCF,EAAGC,GAC9BV,EAAIe,WACN,CAtBIC,CAAiBhB,EA3BF,EA2BO3B,GAzBX,GAyBqCiC,GAAe,EA5B/C,EA4B+DA,EA1B9D,GA2BjBN,EAAIvC,MAAM,GAEd,CD+nBIwD,CAAexB,EAAQtC,EAAQL,EAAY,EAAIzF,EAAeA,EAAc,CAC1E+F,OACAwC,UALgBhD,EAJa,SAAVhF,EAAmB,UAAY,UADxB,SAAVA,EAAmB,UAAY,UAW/CiI,kBALwBjD,EAHa,SAAVhF,EAAmB,UAAY,UADxB,SAAVA,EAAmB,UAAY,WAUvD,GACD,CAACgF,EAAOQ,EAAM/F,EAAc8F,EAAQvF,EAAOkF,IAEvCG,CACT,CAhf4BiE,CACxBtJ,EACAmC,IACCH,IAAkBgD,IAAUE,GAAiBzF,GAAJ,EAC1CuF,IACC1E,EACDkC,GACA0C,IAGIqE,GAAehF,IAAc9E,GAAe,GAAKA,GAAe,GAEtE1B,EAAAA,EAAAA,KAAU,KACR4E,GAAe4B,GAAU,GACxB,CAACA,KAEJ,MAAMiF,GAAsB9G,KAAgBwB,IAEtC,YACJuF,GAAW,eAAEC,GAAc,iBAAEC,KAC3BC,EAAAA,EAAAA,IACFzJ,GAAkB0D,GAClB2F,IAAuB/I,OACJzE,IAAnBmE,IAIA7B,aAAcuL,GACdC,qBAAsBC,KACpBC,EAAAA,EAAAA,GAA4BN,IAE1BO,GAAoBJ,KAAwBL,IAAuBC,IAEnES,IAAoBlG,EAAAA,EAAAA,IAAgB,KACxC,GAAIyF,GACFpI,UADF,CAKA,GAAI+B,GAGF,OAFA1B,GAAsB,CAAEzB,iBACxBmB,MAIGmD,IACHrD,IAASjB,EAAQhE,GAAIgE,EAAQ3E,SAG/BsB,EAAAA,EAAAA,MAAauN,qBAAqB,CAAE/J,WACpCuC,IAAgBD,IAChB8B,IAdA,CAcW,KAGbzG,EAAAA,EAAAA,KAAU,KACJqD,GAAeY,IAAiBuC,IAClCnD,GACF,GACC,CAACmD,GAAWvC,GAAeZ,IAE9B,MAAMgJ,IAAsBpG,EAAAA,EAAAA,IAAgB,KACtCvD,EACFc,EAAoB,CAAEW,WAEtBV,EAAc,CAAEU,SAAOmI,cAAepK,GACxC,IAGIqK,IAAatG,EAAAA,EAAAA,IAAiBuG,IAClC,GAAIlI,GAAUyF,SAAWnI,GAAUmI,QAAS,CAC1C,MAAM,MAAEI,EAAK,KAAEsC,GAAS7K,GAAUmI,QAAQ2C,wBACpCC,EAAUH,aAAaI,WAAaJ,EAAEG,QAAUH,EAAEK,cAAc,GAAGF,QACzEH,EAAEM,kBAEFpG,GAAekB,KAAKgD,IAAIhD,KAAKC,IAAIlB,KAAagG,EAAUF,GAAQtC,GAAQxD,GAAW,IAAM,MAC3F,KAGIoG,IAAkB9G,EAAAA,EAAAA,IAAiBuG,IACnCA,aAAaI,YAA2B,IAAbJ,EAAEQ,SACjC1I,GAAUyF,SAAU,EACpBwC,GAAWC,GAAE,IAGTS,IAAiBhH,EAAAA,EAAAA,IAAgB,KACrC3B,GAAUyF,SAAU,CAAK,IAGrBmD,IAAkBjH,EAAAA,EAAAA,IAAgB,KACtC1C,EAAarB,EAAQ,IAGjBiL,IAAmBlH,EAAAA,EAAAA,IAAgB,KACvCvC,GAAgB,CAAEnG,OAAQ2E,EAAQ3E,OAAQ6P,UAAWlL,EAAQhE,IAAK,IAapE,SAASmP,KACP,GAAIhJ,GACF,OAAOlC,GAAe,QAGxB,MAAM,MAAEmL,EAAK,SAAEC,GAAa1J,GAE5B,OAAOyJ,GAASC,CAClB,EAlBAvN,EAAAA,EAAAA,KAAU,KACR,GAAK4B,GAAUmI,SAAYyB,KAAgBjG,GAC3C,OAAOiI,EAAAA,EAAAA,IAAc5L,GAAUmI,QAAS,CACtC0D,UAAWV,GACXW,UAAWT,GACXnM,QAASmM,GACTU,OAAQpB,IACR,GACD,CAACf,GAAcuB,GAAiBR,GAAYU,GAAgB1H,KAkC/D,MAAMqI,IAAgB/M,EAAAA,EAAAA,GACpB,QACApC,EACA8G,IAAoB,kBACpBlD,IAAWmD,EAAAA,GAAYqI,QAAU,SACjC5G,IAAS5E,IAAWmD,EAAAA,GAAYqI,QAAU,OACzCxL,IAAWmD,EAAAA,GAAYsI,QAAUzL,IAAWmD,EAAAA,GAAYuI,cAAgB,SACzEtL,GAAc,qBAGVuL,GAAmB,CAAC,uBACtB9B,GACF8B,GAAiBC,KAAK,WAEtBD,GAAiBC,KAAKzH,GAAY,QAAU,QAG9C,MAAM0H,IAAmBrN,EAAAA,EAAAA,GAAe,UAAW2K,IAAgB,iBAEnE,SAAS2C,KACP,OACExN,EAAAA,GAAAC,cAAA,OAAKnC,UAAWyP,IACdvN,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,eACbkC,EAAAA,GAAAC,cAAA,KAAGnC,UAAU,QAAQ2P,IAAI,OAAOd,MAAOD,OAAoBgB,EAAAA,EAAAA,GAAWhB,OAEtE1M,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,gBACZN,QAAQmE,IACP3B,EAAAA,GAAAC,cAAC0N,EAAAA,EAAI,CACH7P,UAAU,OACVqC,QAASoM,KAERqB,EAAAA,EAAAA,IAAoBzP,GAAa,IAAPwD,MAMlCkJ,IACC7K,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,qBAAqB2P,IAAK5J,GAAQ,WAAQvG,GACvD0C,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,yBAAyB2P,IAAI,QAC1C1M,GAAe,GAAM,IAAE8M,EAAAA,EAAAA,IAAoB7H,GAAWjF,GAAciF,OAEtElF,EAAeC,GAAcC,GAAgBC,MAGhD4J,IAnER,WACE,GAAInH,GACF,OACE1D,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,OAAO2P,IAAK5J,GAAQ,WAAQvG,IACxCuQ,EAAAA,EAAAA,KAAqBzK,IAASC,IAAQ2C,WAK7C,MAAM,UAAE8H,GAAc5K,GAEtB,OACElD,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,OAAO2P,IAAK5J,GAAQ,WAAQvG,IACxCuQ,EAAAA,EAAAA,IAAoB7H,IACrBhG,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,UAAS,KACxBgQ,GAAa9N,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,YAAY6O,MAAOmB,IAAYJ,EAAAA,EAAAA,GAAWI,IACvEA,GAAatM,GAAexB,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,UAAS,KACrD0D,GAAexB,EAAAA,GAAAC,cAAA,QAAM0M,MAAOnL,IAAckM,EAAAA,EAAAA,GAAWlM,IAG5D,CA+CwBuM,GAGxB,CAoCA,OACE/N,EAAAA,GAAAC,cAAA,OAAKnC,UAAWmP,GAAeQ,IAAKtP,GAAK0F,MAAQ,MAAQ,OACtDhC,GACC7B,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,uCACZgE,GAAc9B,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,YApC9BjO,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,MAAkBmN,KAChCrN,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLC,OAAK,EACLyN,QAASpK,GACTxD,KAAK,UACLxC,UAAU,cACVqQ,MAAO7J,GAAe,oBAAsB,UAC5C8J,UAAWvI,GAAY,cAAgB,aACvC1F,QAASqL,GACT3H,MAAO1F,GAAK0F,MACZwK,gBAAiB/J,GACjBgK,eAAgB1J,KAEdA,IAAoB5E,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,UAC/BrJ,IAAoB5E,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,UAChCrJ,IACC5E,EAAAA,GAAAC,cAACsO,EAAAA,EAAY,CACXzQ,UAAU,QACV0Q,OAAQC,EAAAA,EAAeC,MACvBJ,gBAAc,EACdK,QAAQ,EACRrO,KAAM,MAIXoE,KAAWE,IACV5E,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,eAcd9C,IACCnL,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GAAe,gBAAiBmL,GAAmBE,IAAqB,gBACtFvL,EAAAA,GAAAC,cAAC2O,EAAAA,EAAe,CACdvF,SAAU4B,GACV4D,aAAW,EACXC,WAAS,EACTxO,KAAK,IACLH,QAASoL,GAAoBC,QAAoBlO,EACjDyR,SAAUxD,MAIf3G,KAAqBuG,IACpBnL,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GAAe,kBAC7BF,EAAAA,GAAAC,cAAC2O,EAAAA,EAAe,CACdvF,SAAUtI,GACV8N,aAAW,EACXvO,KAAK,IACLyO,SAAO,EACPC,eAAgB,EAAI,KAIzB9L,IAASd,IAAgB2I,IACxB/K,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLC,OAAK,EACLH,KAAK,OACLxC,UAAU,kBACVsQ,UAAWrM,EAAgB,kBAAoB,WAC/C5B,QAASuL,IAET1L,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAMlM,EAAgB,QAAU,gBAGzCL,IAAWmD,EAAAA,GAAYsI,QAAUK,KACjC9L,IAAWmD,EAAAA,GAAYsI,QAAUjK,IA6CxC,SACE/E,EACA+E,EACA8C,EACAH,EACA9E,EACAC,EACAC,EACAgO,EACAtN,EACA0H,EACAkD,GAEA,MAAM,MACJI,EAAK,UAAEmB,EAAS,SAAElB,GAChB1J,EACEgM,EAAerJ,GAAc9E,EAAe,GAAKA,EAAe,GAChE,MAAE8C,GAAU1F,EAElB,OACE6B,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,WACbkC,EAAAA,GAAAC,cAAA,KAAGnC,UAAU,QAAQ2P,IAAI,OAAOd,MAAOA,IAAQe,EAAAA,EAAAA,GAAWf,GAASC,IAClEsC,GACClP,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,OAAO2P,IAAK5J,EAAQ,WAAQvG,GACzC0C,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,yBAAyB2P,IAAI,SAC1CI,EAAAA,EAAAA,IAAoB7H,EAAWjF,EAAciF,IAE/ClF,EAAeC,EAAcC,EAAgBC,KAGhDiO,GAAgBD,GAChBjP,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,OAAO2P,IAAK5J,EAAQ,WAAQvG,GACxC+L,EAAY,IAAE8F,EAAAA,EAAAA,IAAkBjM,EAAO5C,KAAO+I,aAAiB/L,GAAW6R,EAAAA,EAAAA,IAAkBjM,EAAO5C,QAGtG4O,IAAiBD,GACjBjP,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,OAAO2P,IAAK5J,EAAQ,WAAQvG,GACzC0C,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,WAAW2P,IAAI,SAAQI,EAAAA,EAAAA,IAAoB7H,IAC1D8H,GACC9N,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACEpP,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,UAAS,KACzBkC,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,YAAY2P,IAAI,OAAOd,MAAOmB,IAAYJ,EAAAA,EAAAA,GAAWI,KAGxEtQ,QAAQmE,IACP3B,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACEpP,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,UAAS,KACzBkC,EAAAA,GAAAC,cAAC0N,EAAAA,EAAI,CAAC7P,UAAU,OAAOqC,QAASoM,IAC7B8C,EAAAA,EAAAA,IAAoBlR,EAAa,IAAPwD,GAAa,MAQxD,CArGiD2N,CACzCnR,GACA+E,GACA8C,GACAH,GACA9E,GACAC,GACAC,GACCc,GAAiBgJ,GAClBpJ,EACAsJ,GACArI,EAAc2J,QAAkBjP,GAEjCoE,IAAWmD,EAAAA,GAAYuI,aAAe3J,IAAe+J,MACpD9L,IAAWmD,EAAAA,GAAYqI,QAAUtI,IAAoB1C,IAAkBuB,IAyF/E,SACED,EACAvC,EACAwF,EACA1F,EACAuC,EACAtB,EACAC,EACAC,EACAC,EACAoN,EACAhN,EACAb,GAEA,OACE1B,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,WACbkC,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,oBACbkC,EAAAA,GAAAC,cAAA,OACEnC,UAAU,WACV0R,WAAW,EACX7P,IAAKsB,GAELjB,EAAAA,GAAAC,cAAA,UAAQN,IAAK8G,KAEd8I,GAECvP,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAACL,QAASA,MACV+B,GAAiBC,IAAyBI,EAC7CA,GAAqBN,GACXD,GACVuN,GACF,GAGAvP,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CACHC,KAAO/L,GAAiBC,EAAwB,OAAS,aACzDrE,WAAWoC,EAAAA,EAAAA,GACT,mBACCgC,GAAiBC,KAA0BF,GAAyB,sBAGxED,GACChC,EAAAA,GAAAC,cAAA,OAAKwP,QAAQ,YAAY3R,UAAU,eACjCkC,EAAAA,GAAAC,cAAA,QACEnC,UAAU,eACVqJ,KAAK,cACLqC,MAAM,KACNC,OAAO,KACP,eAAa,IACb,kBAAgB,QAChBiG,GAAG,IACHC,GAAG,IACHC,OAAO,QACP,oBAAkB,IAClB,mBAAiB,aAO7B5P,EAAAA,GAAAC,cAAA,KACEnC,WAAWoC,EAAAA,EAAAA,GAAe,iBAAkBwB,IAAWmD,EAAAA,GAAYC,cAAgBxB,GAAiB,UACpGmK,IAAI,QAEc,IAAjB1M,GAAuC,IAAjBA,GACnB8M,EAAAA,EAAAA,IAAoBrK,EAAOwC,WAAY6H,EAAAA,EAAAA,IAAoBrK,EAAOwC,SAAWjF,IAIzF,CA9JQ8O,CACEpM,GACAxC,GACAwF,GACA/B,GAAS2B,GAAsBtF,GAC/BuC,GACAtB,EACAC,EACAC,EACAC,EACAE,EAAgBmK,QAAmBlP,EACnCiF,EACAb,GAGA,G,+QGleV,IAAIoO,EASW,SAASC,EAA8BC,GACpDF,EAAWG,QACXD,EAAQC,OACV,CAVIC,EAAAA,KACFJ,EAAaK,SAASlQ,cAAc,SACpC6P,EAAWM,UAAUC,IAAI,kCACzBF,SAASG,KAAKC,YAAYT,I,sRCI5B,MAAMU,EAAa,sB,eCPnB,MAAMC,EAA0B,0BAE1BC,GAAe,CACnBC,KAAM,MACNC,OAAQ,SACRC,UAAW,YACXC,cAAe,eACfC,YAAa,QACbC,UAAW,OAGPC,GAAW,CACfC,OAAQ,IACRP,KAAM,SACNC,OAAQ,KACRC,UAAW,IACXM,WAAY,aACZL,cAAe,MACfC,YAAa,MACbC,UAAW,OAGPI,GAAU,CACd,KACA,KACA,KACA,KACA,KACA,MAGF,SAASC,GAAUC,GAIjB,OAHe,IAAIC,WACAC,gBAAgBF,EAAM,aAE9BhB,IACb,CAEA,SAASmB,GAAeC,EAAYC,GAClC,MAAMC,EAASzB,SAASlQ,cAAcgR,GAASC,QAI/C,OAHAU,EAAOD,KAAOA,EACdC,EAAOrB,YAAYmB,EAAKG,WAAU,IAE3BD,CACT,CAEA,SAASE,GAAeJ,EAAYtQ,GAClC,MAAM2Q,EAAK5B,SAASlQ,cAAcmB,GAGlC,OAFA2Q,EAAGxB,YAAYmB,EAAKG,WAAU,IAEvBE,CACT,CAEA,SAASC,GAASC,EAAoB1J,GACpC,IAAI2J,EAAU3J,EAAOsJ,WAAU,GAC/B,OAAKI,GAGDA,EAAM7Q,OAAS6Q,EAAM7Q,MAAM+Q,aAAezB,GAAaC,OACzDuB,EAAUJ,GAAeI,EAASjB,GAASN,OAEzCsB,EAAM7Q,OAAS6Q,EAAM7Q,MAAMgR,YAAc1B,GAAaE,SACxDsB,EAAUJ,GAAeI,EAASjB,GAASL,SAEzCqB,EAAM7Q,OAAS6Q,EAAM7Q,MAAMiR,iBAAmB3B,GAAaG,YAC7DqB,EAAUJ,GAAeI,EAASjB,GAASJ,YAEzCoB,EAAM7Q,OAAS6Q,EAAM7Q,MAAMiR,iBAAmB3B,GAAaI,gBAC7DoB,EAAUJ,GAAeI,EAASjB,GAASH,gBAEzCmB,EAAM7Q,OAAS6Q,EAAM7Q,MAAMkR,gBAAkB5B,GAAaK,cAC5DmB,EAAUJ,GAAeI,EAASjB,GAASF,cAEzCkB,EAAM7Q,OAAS6Q,EAAM7Q,MAAMkR,gBAAkB5B,GAAaM,YAC5DkB,EAAUJ,GAAeI,EAASjB,GAASD,YAGtCkB,GArBEA,CAsBX,CAiBA,SAASK,GAAkBC,GACzB,MAAMd,EAAOc,EAAMX,WAAU,GAC7B,IAAIK,EAAU/B,SAASsC,eAAef,EAAKgB,aAAe,IACtDC,EAAajB,EAQjB,MAPsB,MAAlBA,EAAKkB,WACPV,EAAUT,GAAeS,EAAUR,EAA2BC,MAC1D,UAAWD,EAAKmB,WAAW,IAAMrV,QAAQkU,EAAKmB,WAAW,GAAGzR,SAC9DuR,EAAajB,EAAKmB,WAAW,KAGjCX,EAAUF,GAASW,EAA2BT,GACvCA,CACT,CAEA,SAASY,GAAapB,GACpB,GAAIA,EAAKmB,aAAenB,EAAKmB,WAAWzS,QAAU,GAAuB,OAAlBsR,EAAKkB,UAAuC,OAAlBlB,EAAKkB,UAAoB,CACxG,IAAIG,EACAb,EAAU/B,SAASsC,eAAef,EAAKgB,aAAe,IAC1D,GAAsB,OAAlBhB,EAAKkB,UAAuC,OAAlBlB,EAAKkB,UAAuC,OAAlBlB,EAAKkB,SAAmB,CAC9EG,EAAa5C,SAASlQ,cAAcyR,EAAKkB,UACzCV,EAAU/B,SAAS6C,yBACnB,MAAMC,EAAQ,GACd,IAAK,IAAIlL,EAAI,EAAGA,EAAI2J,EAAKmB,WAAWzS,OAAQ2H,IAC1CkL,EAAM3F,QAAQwF,GAAapB,EAAKmB,WAAW9K,KAE7CkL,EAAM9T,KAAK4I,GAAkBmK,EAAQ3B,YAAYxI,IACnD,MAA+C,IAApCqJ,GAAQ8B,QAAQxB,EAAKkB,WAC9BG,EAAa5C,SAASlQ,cAAcyR,EAAKkB,UACzCV,EAAUK,GAAkBb,EAAKmB,WAAW,KACjB,MAAlBnB,EAAKkB,UACdG,EAAa5C,SAASlQ,cAAc,KACpCiS,EA9CN,SAA0BM,GACxB,MAAMd,EAAOc,EAAMX,WAAU,GAC7B,IAAIK,EAAU/B,SAASsC,eAAef,EAAKgB,aAAe,IACtDC,EAAaxC,SAASsC,eAAe,IASzC,MARI,UAAWf,EAAKmB,WAAW,IAAMrV,QAAQkU,EAAKmB,WAAW,GAAGzR,SAC9DuR,EAAajB,EAAKmB,WAAW,IAE3BnB,EAAKmB,WAAW,IAAsC,MAAhCnB,EAAKmB,WAAW,GAAGD,WAC3CV,EAAUT,GAAeS,EAAQL,WAAU,GAAQH,EAAKmB,WAAW,GAAyBlB,MAC5FgB,EAAajB,EAAKmB,WAAW,GAAGA,WAAW,IAE7CX,EAAUF,GAASW,EAA2BT,GACvCA,CACT,CAiCgBiB,CAAiBzB,IACA,OAAlBA,EAAKkB,SACdV,EAAUR,GAEVqB,EAAa5C,SAASlQ,cAAc,QACpCiS,EAAUK,GAAkBb,IAE9B,OAAIqB,GACFA,EAAWxC,YAAY2B,GAChB,CAACa,IAGH,CAACrB,EAAKG,WAAU,GACzB,CAEA,GAAIH,EAAKmB,WAAY,CACnB,MAAMO,EAAQ,GACd,IAAK,IAAIrL,EAAI,EAAGA,EAAI2J,EAAKmB,WAAWzS,OAAQ2H,IAC1CqL,EAAM9F,QAAQwF,GAAapB,EAAKmB,WAAW9K,KAE7C,OAAOqL,CACT,CAEA,MAAO,CAAC1B,EACV,CAEA,SAAS2B,GAAW3B,GAClB,OAAyB,IAAlBA,EAAK4B,QACd,CCxJA,MAAMC,GAAkB,0B,gBCYxB,MAIMC,GAAmB,IAAIC,IAAI,CAACC,EAAAA,IAAmBC,EAAAA,IAAyBC,EAAAA,MAyH9E,GAtH0BC,CACxB5W,EACA6W,EACAC,EACAC,EACAC,EACAC,EACAC,KAEA,MAAM,iBAAEC,IAAqBlW,EAAAA,EAAAA,MACvBC,GAAOC,EAAAA,EAAAA,MAEbiB,EAAAA,EAAAA,KAAU,KACR,GAAKpC,EAgGL,OAFAkT,SAASkE,iBAAiB,QAASC,GAAa,GAEzC,KACLnE,SAASoE,oBAAoB,QAASD,GAAa,EAAM,EA7F3DE,eAAeF,EAAYzI,GACzB,IAAKA,EAAE4I,cACL,OAGF,MAAMC,EAAS7I,EAAE8I,QAAwBC,QAxBL,wBAyBpC,IAAKF,IAAUlB,GAAiBqB,IAAIH,EAAMnX,IACxC,OAMF,GAHAsO,EAAEiJ,iBAGE3E,SAAS4E,gBAAkBL,EAC7B,OAGF,MAAMM,EAAanJ,EAAE4I,cAAcQ,QAAQ,QACrC3D,EAAOzF,EAAE4I,cAAcQ,QAAQ,aAErC,IAAIC,EAAsB5D,GAAO6D,EAAAA,EAAAA,IDtDhC,SAA2B7D,GAChC,IAAI8D,EAAWjF,SAASlQ,cAAc,OACtC,IACEqR,GDsKkC+D,ECtKb/D,GDuKDgE,MAAM7E,GAlB9B,SAA0B+B,GACxB,MAAMlC,EAAOH,SAASlQ,cAAc,QAC9BmT,EAAQZ,EAAMK,WACd0C,EAAgBvO,MAAMwO,KAAKpC,GAAOhU,OAAOiU,IACzCoC,EAAa,GAEnB,IAAK,MAAM/D,KAAQ6D,EACjBE,EAAWnI,QAAQwF,GAAapB,IAGlC,IAAK,IAAI3J,EAAI,EAAGA,EAAI0N,EAAWrV,OAAQ2H,IACrCuI,EAAKC,YAAYkF,EAAW1N,GAAG8J,WAAU,IAG3C,OAAOvB,CACT,CAOSoF,CAAiBrE,GAAUgE,EAAiBM,QAAQ,eAAgB,MAAMC,UAHxEvE,GAAUgE,EAAiBM,QAAQ,eAAgB,KAAKC,SCvKjE,CAAE,MAAOC,GACHC,EAAAA,KAEFC,QAAQC,MAAMH,EAElB,CDgKa,IAAuBR,EC/JpCD,EAASQ,UAAYtE,EAAKqE,QAAQ,UAAW,KAAKA,QAAQpC,GAAiB,IAE3E,MAAM0C,EAAeb,EAASc,iBAAiC,iBAoC/D,OAnCID,EAAa7V,SACfgV,EAAWa,EAAaA,EAAa7V,OAAS,IAGhD4G,MAAMwO,KAAKJ,EAASe,qBAAqB,MAAMtM,SAAS6H,IACtD,GAAMA,aAAgB0E,YAoBtB,OAhBA1E,EAAK2E,gBAAgB,SAGA,OAAjB3E,EAAK4E,SAAkB5E,EAAK6E,YAAY,MACvB,MAAjB7E,EAAK4E,SAAiB5E,EAAKnB,YAAYJ,SAASsC,eAAe,OAC9C,QAAjBf,EAAK4E,SAAsB5E,EAAK8E,QAAQC,YAAY/E,EAAK6E,YAAY7E,EAAKgF,aAAa,QAAU,IAEjGhF,EAAK8E,QAAQG,eAAejF,EAAKkF,SAEjCC,EAAAA,GAA0BnF,EAAK4E,UACjC5E,EAAKoF,aAAa,mBAAoBD,EAAAA,GAA0BnF,EAAK4E,UAGlE5E,EAAK8E,QAAQC,YAAc/E,EAAKgB,cAAgBhB,EAAKqF,WAAWrF,EAAK6E,YAAY7E,EAAKgB,aAEvFhB,EAAK8E,QAAQQ,KAAKtF,EAAKoF,aAAa,MAAOpF,EAAK8E,QAAQQ,KACpDtF,EAAK8E,QAAQC,YACnB,KAAKQ,EAAAA,GAAsBC,YACzBxF,EAAK6E,YAAY7E,EAAKgB,aAAe,IACrC,MACF,KAAKuE,EAAAA,GAAsBE,YACzBzF,EAAKgB,YAAchB,EAAK8E,QAAQQ,KAAO,QAxBzCtF,EAAKkF,QA0BP,IAGKxB,EAASQ,UAAUwB,SAC5B,CCMQC,CAAkB/F,QAAOhU,GAAW,QAClCA,EAEA4X,IAAuBoC,EAAAA,EAAAA,IAAoBpC,IAAwBhB,IACrEgB,GAAsBqC,EAAAA,EAAAA,IAAiBrC,GACvCf,OAGF,MAAM,MAAElB,GAAUpH,EAAE4I,cACpB,IAAI+C,EAA4B,GAShC,GAPIvE,EAAM7S,OAAS,IACjBoX,QAAcC,EAAAA,GAAAA,GAA8BxE,GACxCgB,IACFuD,EAAQA,GAAOtY,MAAM,EAAG,MAIvBsY,GAAOpX,SAAW4U,EACrB,OAGF,MAAM0C,EAAcxC,GAAqByC,UAAUvX,OAAS8U,EAAsB,CAAE0C,KAAM5C,GAE1F,IAAI6C,GAAiB,EACrB,IAGEA,EAxEmB,2CAsEJ,IAAItG,WACWC,gBAAgBF,EAxEpC,aAyEsBwG,gBAC7BpB,aAxEmB,UAyExB,CAAE,MAAOb,GACP,CAGF,MAAMkC,EAAUL,GAAeA,EAAYE,KAC3C,IAAII,EAAuBR,GAAOpX,SAAWyX,EAE7C,MAAMI,EAAiBT,QAAcU,QAAQC,IAAIX,EAAMrY,KAAKiZ,IAASC,EAAAA,EAAAA,GAAgBD,EAAKnK,KAAMmK,MAAU,GACpGE,EAAcrE,GAAiBgE,GAAgB7X,SAChDmY,EAAAA,EAAAA,IAAuBtE,EAAegE,EAAe,KAAQza,QAAQua,GACpES,GAA6BC,EAAAA,EAAAA,IAAuBR,EAAe,IACnES,EAAYzE,GAAiBA,GAAe0E,UAE9C1E,GAAiBuE,EACnBpE,EAAiB,CAAE7S,QAASpD,EAAKua,EAAY,6BAA+B,kCAI1EA,IACFV,EAAuBM,EAClBN,IAMHA,GACFjE,EAAeE,EAAgBgE,EAAkBW,GAAgBA,EAAYC,OAAOZ,IAGlFF,IACEC,EACFhE,EAAY0D,GAEZ5D,EAA0B4D,EAAahD,GAAOnX,MAb9C6W,EAAiB,CAAE7S,QAASpD,EAAK,+BAgBvC,CAMC,GACA,CACD2V,EAA2BG,EAAeF,EAAgB9W,EAAUiX,EACpEC,EAAuBH,EAAa7V,GACpC,E,+DCtHJ,IAAI2a,IAAW,EAUf,MCVMC,GAAe,IAAItF,IAAY,CAACwD,EAAAA,GAAsB+B,QAAS/B,EAAAA,GAAsBgC,M,4BCR3F,MACMC,GAA0B,2CAC1BC,GAAe,4CACfC,GAAiB,CACrBC,SAAU,GACVC,MAAO,GACPC,aAAa,EACbC,gBAAiB,IAGbC,GAAStJ,SAASlQ,cAAc,OA2EtC,MAAMyZ,IAAsBC,EAAAA,GAAAA,IAAS,CAACN,EAAkBC,EAAeC,KAAyB,CAC9FF,WACAC,QACAC,cACAC,gBAAiBH,EAASO,kB,uCCvF5B,MACMC,GAAiC,IAAIC,OAAQ,IAAGC,EAAAA,IAAgBC,UAAW,K,gBCXjF,MAEMC,GAAmB,CAAEC,YAFP,IAAIC,IAAI,cAAyDxI,KAE7CyI,aAAa,GAC/CC,GAAc,CAAEC,KAAM,aAI5B,IAAIC,GACAC,GACAC,GAEGjG,eAAekG,KAOpB,OANKH,KACHA,GAAsB,qCACtBC,UAAsBD,IAAqBI,QAC3CF,GAAgB,IAAID,GAAaP,KAG5BM,EACT,CAEO/F,eAAetT,GAAM0Z,SA6C5BpG,uBACQkG,WACAD,GAAcvZ,OACtB,CA/CQ2Z,GAEN,MAAMC,EAAYC,KAAKC,MACvB,IAAIC,EACJ,MAAMC,EAAuB,GACvBnU,EAAqB,GAE3B0T,GAAcU,gBAAmBC,IAC/BF,EAAO5N,KAAK8N,EAAW,EAGzB,MAAMC,EAsCR,SAA6BC,EAAyBC,GACpD,MAAMvB,EAASsB,EAASE,WAClBC,EAAWzB,EAAO0B,QAAQC,iBAChCF,EAASG,QAtEM,GAuEf5B,EAAO6B,QAAQJ,GAEf,MAAMK,EAAaL,EAASM,kBACtBC,EAAY,IAAI/S,WAAW6S,GACjC,IAAIG,GAAc,EAoBlB,OAlBA,SAASC,IACP,GAAID,EACF,OAGFR,EAASU,qBAAqBH,GAE9B,MAEMI,EAFMJ,EAAUK,QAAO,CAACC,EAAKlT,IAAYkT,EAAMlT,GAAS,GAC1C0S,EACE,IAzDoCM,KAC1DrV,EAASuG,KAAc,IAAT8O,GACdxB,EAAiBwB,EAAO,EAyDxBb,CAAGa,EAvFY,GAuFU,EAAIA,IAE7BG,EAAAA,EAAAA,IAAeL,EACjB,CAEAA,GAEO,KACLD,GAAc,CAAI,CAEtB,CArE0BO,CAAoB/B,IAK5C,MAAO,CACLgC,KAAMA,IAAM,IAAIvE,SAAgB,CAACwE,EAASC,KACxClC,GAAcmC,OAAS,KACrBF,EAAQ,CACNG,KAAM,IAAIC,KAAK5B,EAAQb,IACvBrU,SAAUiB,KAAKxG,QAAQwa,GAAYF,KAAKC,OAASF,GAAa,KAC9D/T,YACA,EAEJ0T,GAAcsC,QAAUJ,EAExB,MAAMK,EAAY/V,KAAKgD,IAAI,EAAG6Q,EAhDT,IAgD0CC,KAAKC,OACpEiC,YAAW,KACTxC,GAAcgC,OACdpB,GAAiB,GAChB2B,EAAU,IAEfE,MAAOA,KACL,MAAMF,EAAY/V,KAAKgD,IAAI,EAAG6Q,EAvDT,IAuD0CC,KAAKC,OACpEiC,YAAW,KACTxC,GAAcyC,QACdjC,EAAWF,KAAKC,MAChBK,GAAiB,GAChB2B,EAAU,EAGnB,C,4BC7DA,MAQA,GAR4CG,IAC1C,MAAM,YAAEvE,GAAgBuE,EAClBC,GAAkBC,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,mBAAoB3E,EAAYxY,QAGvF,OAAOgd,EAAkBpd,EAAAA,GAAAC,cAACmd,EAAoBD,QAAY7f,CAAS,E,gHCkDrE,MAyMA,IAAeb,EAAAA,EAAAA,KAzMkB+gB,EAC/B5gB,SACA6gB,WACAC,kBACAC,iBACAC,iBACAC,gBACAC,gBACAC,mBACAC,gBACAC,aACAC,WACAC,cACA7c,QACA8c,yBACAC,eACAC,aACAC,cACAC,eACAC,eACAC,qBAEA,MAAOC,EAAkBC,EAAgBC,IAAmBC,EAAAA,EAAAA,MACrDC,EAAkBC,EAAkBC,IAAmBC,EAAAA,GAAAA,GAAeP,EAAkBE,GAEzFM,EAAuBtB,GAAiBC,EACxCsB,EAAsBvB,GAAiBC,GAEtCuB,EAAyBC,EAA2BC,IAA+BT,EAAAA,EAAAA,KACpFU,EAAab,GAAoBU,EAEjCI,EAAiBf,GAAkBA,GAAgB/F,WACpDnb,SAAQkiB,EAAAA,EAAAA,IAAgBhB,KAAmBiB,EAAAA,EAAAA,IAAuBjB,IAChElhB,SAAQoiB,EAAAA,EAAAA,IAAgBlB,KAAmBmB,EAAAA,EAAAA,IAAuBnB,KACnEoB,EAASpB,GAAkBA,GAAgB/F,WAAanb,SAAQuiB,EAAAA,EAAAA,IAAgBrB,KACjFsB,EAAAA,EAAAA,IAAgBtB,KAAmBuB,EAAAA,EAAAA,IAAmBvB,KAE3Drf,EAAAA,EAAAA,KAAU,KACJsf,GACFM,GACF,GACC,CAACN,EAAkBM,KAEtB5f,EAAAA,EAAAA,KAAU,KACJmgB,EACFlB,IAEAC,GACF,GACC,CAACiB,EAAYjB,EAAaD,IAE7B,MAAM4B,GAAyB5a,EAAAA,EAAAA,IAAgB,KACzCqZ,EACFE,IAEAD,GACF,IAGIuB,GAAmB7a,EAAAA,EAAAA,IAAgB,CAACuG,EAAUuU,KAClD,MAAM,MAAE5I,GAAU3L,EAAE8I,OACd0L,GAAiBC,EAAAA,GAAAA,IAAc9I,GAEjC6I,GAAgBjgB,QAClBie,EAAagC,EAAgBD,EAC/B,IAGIG,GAAoBjb,EAAAA,EAAAA,IAAgB,MACxCkb,EAAAA,GAAAA,GACExZ,MAAMwO,KAAK2J,EAAuBsB,EAAAA,IAChC5C,EAAgB6C,EAAAA,IAAgCC,EAAAA,KAC/CC,KAAK,MACP/U,GAAMsU,EAAiBtU,GAAG,IAC5B,IAGGgV,GAAuBvb,EAAAA,EAAAA,IAAgB,MAC3Ckb,EAAAA,GAAAA,IAAuBzC,GAAoBC,EACvChX,MAAMwO,KAAKsL,EAAAA,KAA+BF,KAAK,KAC/C,KACE/U,GAAMsU,EAAiBtU,GAAG,IAAO,IAGnCkV,GAAiBzb,EAAAA,EAAAA,IAAgB,KACrC,MAAM8S,EAAO,IAAI4I,KAAK,EAACC,EAAAA,GAAAA,OAAiBC,EAAAA,IAAoB,CAAE5G,KAAM,eACpE+D,EAAa,CAACjG,GAAM,IAGhB+I,GAAO1iB,EAAAA,EAAAA,KAAQ,IACZwf,EACHjf,OAAOC,OAAOgf,GAAY7e,QAAQgiB,MAC7BlD,IAAakD,EAAIC,qBACL,SAAbnD,GAAuBkD,EAAI7jB,KAAOX,IACjCwkB,EAAIE,sBAAuBF,EAAIE,oBAAoBC,SAAS,UAG1DH,EAAIE,oBAAqBC,SAASrD,WAEzC5gB,GACH,CAAC2gB,EAAYrhB,EAAQshB,IAElB/f,GAAOC,EAAAA,EAAAA,KAEb,GAAKsf,EAIL,OACE1d,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,cAEX4gB,GAAkBD,EAChBze,EAAAA,GAAAC,cAACuhB,GAAAA,EAAqB,CACpBjkB,GAAG,sBACHO,WAAWoC,EAAAA,EAAAA,GAAe,4CAA6Cye,GAAoB,aAC3Fle,OAAK,EACL0N,MAAM,cACNsT,WAAYvB,EACZ9R,UAAU,wBACVsT,aAAa,wBACbC,UAAQ,GAER3hB,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,aAGbjO,EAAAA,GAAAC,cAACuhB,GAAAA,EAAqB,CACpBjkB,GAAG,qBACHqkB,SAAUpkB,QAAQkhB,GAClB5gB,WAAWoC,EAAAA,EAAAA,GAAe,4CAA6Cye,GAAoB,aAC3Fle,OAAK,EACL0N,MAAM,cACNsT,WAAYvB,EACZ9R,UAAU,oBACVsT,aAAa,uBACbC,UAAQ,GAER3hB,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,YAIjBjO,EAAAA,GAAAC,cAAC4hB,GAAAA,EAAI,CACHtkB,GAAG,uBACHuC,OAAQ0f,EACRsC,WAAS,EACTC,UAAU,QACVC,UAAU,SACVC,QAASpD,EACT/gB,UAAU,yBACVokB,oBAAqBrD,EACrBsD,aAAeC,EAAAA,QAAkC9kB,EAAnByhB,EAC9BsD,aAAeD,EAAAA,QAAkC9kB,EAAnB0hB,EAC9BsD,mBAAoBF,EAAAA,GACpBG,eAAe,uBAMb5E,GACA3d,EAAAA,GAAAC,cAACuiB,GAAAA,EAAQ,CAAC1kB,UAAU,iBAAiB8jB,UAAQ,GAAC,uDAE/CjE,GACC3d,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACGgQ,IAAwBU,GACvB9f,EAAAA,GAAAC,cAACuiB,GAAAA,EAAQ,CAACC,KAAK,QAAQtiB,QAASogB,GAC7BpiB,EAAKghB,EAAuB,8BACxBtB,EAAgB,4BAA8B,+BAGpDE,GAAoBC,KAAmByB,GAEtCzf,EAAAA,GAAAC,cAACuiB,GAAAA,EAAQ,CAACC,KAAK,WAAWtiB,QAAS0gB,GAChC1iB,GAAM4f,GAAoBC,EAAgB,4BAA8B,mBAG9ED,GAAoBK,GACnBpe,EAAAA,GAAAC,cAACuiB,GAAAA,EAAQ,CAACC,KAAK,MAAMtiB,QAAS4gB,GAC3B5iB,EAAK,mBAKbyf,IAAmBc,GAClB1e,EAAAA,GAAAC,cAACuiB,GAAAA,EAAQ,CAACC,KAAK,OAAOtiB,QAASqe,GAAergB,EAAK,UAGnDugB,IAAmBD,IAAiBN,GAAegD,GAAMhiB,KAAKiiB,GAC9DphB,EAAAA,GAAAC,cAACyiB,GAAAA,EAAa,CACZtB,IAAKA,EACLxkB,OAAQA,EACR6gB,SAAUA,EACVnc,MAAOA,EACPqhB,aAAcrD,EACdsD,aAAcrD,OAIhB,ICpPV,GAR2CpC,IACzC,MAAM,OAAErd,GAAWqd,EACb0F,GAAiBxF,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,kBAAmBzd,GAGzE,OAAO+iB,EAAiB7iB,EAAAA,GAAAC,cAAC4iB,EAAmB1F,QAAY7f,CAAS,E,4BCcnE,MAwDA,IAAeb,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GAAU8P,gBACT,MAAM,OAAE7P,IAAWkmB,EAAAA,EAAAA,KAAyBnmB,IAAW,CAAC,EACxD,OAAKC,EAIE,CAAE2E,SAASwhB,EAAAA,EAAAA,KAAkBpmB,EAAQC,EAAQ6P,IAH3C,CAAC,CAGsD,GAPhD/P,EAxD+BsmB,EACjDljB,SAAQyB,UAAS0gB,cAEjB,MAAM,qBAAEgB,IAAyB/kB,EAAAA,EAAAA,MAE3BC,GAAOC,EAAAA,EAAAA,MAEN2gB,EAAkBC,IAAoBE,EAAAA,GAAAA,GAAepf,EAAQmiB,IAC9D,oBAAEiB,GAAwB3hB,GAAW,CAAC,EAEtC4hB,GAAc1kB,EAAAA,EAAAA,KAAQ,KAC1B,MAAM2kB,EAAuB,GAK7B,OAJA7hB,GAAS8hB,gBAAiBxZ,SAASyZ,IACjCF,EAAM9V,KAAKgW,EAAInkB,KAAKkN,IAAWkX,EAAAA,GAAAA,GAAyBplB,EAAMkO,KAAS,IAGlE+W,CAAK,GACX,CAACjlB,EAAMoD,GAAS8hB,kBAEnB,GAAK9hB,GAAYA,EAAQ8hB,gBAIzB,OACErjB,EAAAA,GAAAC,cAAC4hB,GAAAA,EAAI,CACH/hB,OAAQA,EACRgiB,UAAWoB,EACXnB,UAAU,QACVC,UAAU,SACVC,QAASA,EACTnkB,UAAU,kBACVokB,oBAAqBD,EACrBE,aAAeC,EAAAA,QAAkC9kB,EAAnByhB,EAC9BsD,aAAeD,EAAAA,QAAkC9kB,EAAnB0hB,EAC9BwE,WAAS,GAETxjB,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,yBACZyD,EAAQ8hB,gBAAgBlkB,KAAI,CAACmkB,EAAKvb,IACjC/H,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,OACZwlB,EAAInkB,KAAI,CAACkN,EAAQoX,IAChBzjB,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACL0N,QAAM,EACN0T,SAA0B,gBAAhBvV,EAAOiO,KAEjBna,QAASA,IAAM8iB,EAAqB,CAAErmB,OAAQ2E,EAAQ3E,OAAQ6P,UAAWlL,EAAQhE,GAAI8O,YAEpF8W,IAAcpb,GAAG0b,UAMvB,KCnBX,IAAehnB,EAAAA,EAAAA,KA7CqBinB,EAClC5jB,SACAK,UACAyX,OACA+L,iBAGA,MAAMC,GAAUhgB,EAAAA,EAAAA,IAAwB,MAuBxC,OArBAvE,EAAAA,EAAAA,KAAU,KACR,MAAMwkB,EAASD,EAAQxa,QACvB,IAAKya,EAAQ,OAEb,MAAMra,EAAQqa,EAAOC,YAAc,EAEhBD,EAAOjP,QAAQ,aACvBxT,MAAM2iB,YAAY,wBAA0B,GAAEva,MAAU,GAClE,CAAC1J,EAAQ8X,KAEZvY,EAAAA,EAAAA,KAAU,KACR,MAAMwkB,EAASD,EAAQxa,QACvB,IAAKya,EAAQ,OAEb,MAAMG,EAAaH,EAAOjP,QAAQ,aAElC,MAAO,KACLoP,EAAW5iB,MAAM6iB,eAAe,wBAAwB,CACzD,GACA,IAGDjkB,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACL1C,WAAWoC,EAAAA,EAAAA,GAAe,kCAAmCJ,GAAU,QACvEW,OAAK,EACL0N,MAAM,cACNyT,SAAU+B,EACVxjB,QAASA,EACTiO,UAAU,6BAEVpO,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,SAASnQ,WAAWoC,EAAAA,EAAAA,GAAe,gBAAiBJ,GAAU,UACzEE,EAAAA,GAAAC,cAAA,QAAMN,IAAKikB,EAAS9lB,UAAU,kBAAiB4P,EAAAA,EAAAA,GAAWkK,IACnD,ICxCb,GAR+CuF,IAC7C,MAAM,OAAErd,GAAWqd,EACb+G,GAAqB7G,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,sBAAuBzd,GAGjF,OAAOokB,EAAqBlkB,EAAAA,GAAAC,cAACikB,EAAuB/G,QAAY7f,CAAS,E,qCC6D3E,MAqTA,IAAeb,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GACCwnB,yBAAwBvnB,SAAQ6gB,WAAU2G,sBAE1C,MACEC,iBAAiB,WACfC,EAAU,SAAEC,EAAUC,WAAYC,EAAiB,UAAEC,EAAS,WAAEC,GAElEC,yBAA0BC,EAAY,+BACtCC,IACE5nB,EAAAA,EAAAA,KAAeP,GAEbooB,EAAgC,cAApBX,GACdY,EAAAA,EAAAA,KAAyBroB,EAAQC,IACjCqoB,EAAAA,EAAAA,KAAgBtoB,EAAQC,EAAQ6gB,GAC9ByH,GAAgBC,EAAAA,EAAAA,KAA0BxoB,KAAYmoB,EACtDM,EAAeb,IAAa3nB,EAC5ByoB,EAAoBZ,GAAmBtlB,KAAK5B,IAAOwlB,EAAAA,EAAAA,KAAkBpmB,EAAQ2nB,EAAa/mB,KAE1F+nB,GAAQC,EAAAA,EAAAA,KAAY5oB,EAAQC,EAAQ6gB,GACpC+H,EAAYF,GAAOE,UACnBC,EAAgBD,GAAWC,cAC3BC,EAAaD,GAAgB3oB,EAAAA,EAAAA,KAAWH,EAAQ8oB,QAAiBnoB,EAEvE,IAAIiE,EASAokB,EAEJ,GAVIZ,EACFxjB,GAAUqkB,EAAAA,EAAAA,KAAqBjpB,EAAQC,EAAQ6gB,EAAU2G,GAChDgB,GAA8C,IAA9BX,EAAmBrkB,OAC5CmB,EAAU8jB,IAAoB,GACrBG,IAAcrB,IACvB5iB,GAAUwhB,EAAAA,EAAAA,KAAkBpmB,EAAQ6oB,EAAUC,eAAiB7oB,EAAQ4oB,EAAUK,eAK/Ed,GAAaxjB,EACfokB,GAASG,EAAAA,EAAAA,KAAanpB,EAAQ4E,QACzB,GAAI6jB,EACL7jB,IACFokB,GAASI,EAAAA,EAAAA,KAAsBppB,EAAQ4E,GAClCokB,IACHA,GAASG,EAAAA,EAAAA,KAAanpB,EAAQ4E,KAG7BokB,IACHA,GAASK,EAAAA,EAAAA,KAAWrpB,EAAQ2nB,SAEzB,GAAIkB,GAAajkB,IAAY4iB,EAAwB,CAC1D,MAAM,YAAE8B,GAAgB1kB,EAClB2kB,GAAiBC,EAAAA,EAAAA,KAAqBxpB,EAAQC,GAChDqpB,IAAgBA,EAAYG,eAAiBF,KAC/CP,GAASI,EAAAA,EAAAA,KAAsBppB,EAAQ4E,IAGpCokB,GAAYM,GAAaI,iBAAkB7oB,QAAQgoB,EAAUc,aAChEX,GAASG,EAAAA,EAAAA,KAAanpB,EAAQ4E,GAElC,CAEA,MAAM1E,EAAO8oB,IAAU7oB,EAAAA,EAAAA,KAAWH,EAAQgpB,EAAOpoB,IAC3CgpB,EAAkB1pB,IAAQ2pB,EAAAA,EAAAA,IAAc3pB,GAExC4pB,EAAuBpB,GAAmBqB,MAAMC,GACpDA,GAAS1jB,QAAQ2U,MAAQ5Y,OAAO4nB,KAAKD,EAAQ1jB,SAAS7C,OAAS,IAG3DymB,EAAwBzB,GAA8C,IAA9BX,EAAmBrkB,QAC5D5C,QAAQ+D,GAAS0B,QAAQ6jB,WAExBC,EAAsBvB,GAAWK,eAAiBpI,IAAa+H,EAAUC,cAE/E,MAAO,CACLD,YACAT,YACAxjB,UACAokB,SACAT,gBACA8B,uBAAwB5B,EAAeX,EAAmBrkB,YAAS9C,EACnEonB,YACAC,aACA8B,uBACAQ,sBAAsBC,EAAAA,EAAAA,KAA2BvqB,GACjDkqB,wBACAE,sBACAI,0BAA2BtC,EAC3BC,iCACAY,aACA0B,cAAezqB,EAAOyqB,cACtBb,kBACD,GAzFe7pB,EAnTuC2qB,EACzD7B,YACAT,YACAxjB,UACAokB,SACAT,gBACA8B,yBACAtC,YACAC,aACA8B,uBACAtC,yBACA8C,uBACAJ,wBACAE,sBACAO,UACAH,4BACArC,iCACAY,aACA9oB,SACAwqB,gBACAb,sBAEA,MAAM,oBACJgB,EAAmB,qBACnBC,EAAoB,aACpBC,EAAY,aACZC,EAAY,gBACZC,EAAe,gCACfC,EAA+B,oBAC/BC,EAAmB,qBACnBC,EAAoB,gBACpBC,EAAe,kCACfC,IACE9pB,EAAAA,EAAAA,MAEEyB,GAAMiE,EAAAA,EAAAA,IAAuB,MAC7BqkB,GAAU7pB,EAAAA,EAAAA,KACVD,GAAO+pB,EAAAA,EAAAA,KAEPC,EAAwD,gBAAlC5mB,GAAS0B,QAAQmlB,QAAQ9N,KAC/C+N,EAAiB7C,IAAcrB,EAC/BmE,EAAmB9qB,QAAQgoB,GAAWc,WAEtClB,EAAe5nB,QAAQwpB,GAEvBuB,IACApB,KACA5lB,IAAYikB,IAAaT,MACzBY,IAAUP,KAIV,aACJxlB,EAAY,qBAAEwL,IACZE,EAAAA,EAAAA,GACFid,IAAYJ,IAAwBpB,OACpCzpB,GACC4nB,OACD5nB,GACC4nB,EA7DkB,KA+DlBA,IAEH7lB,EAAAA,EAAAA,KAAU,KACJylB,GACFkD,EAAkC,CAAElD,gCAAgC,GACtE,IAGF,MAAM0D,GAAgBljB,EAAAA,EAAAA,IAAgB,KAChCyf,EACF0C,EAAa,CAAEhb,eAAWnP,IACjB0pB,EACTe,IACSvC,IAAcrB,GACvBoD,IAEFD,KAAW,KAGbjoB,EAAAA,EAAAA,KAAU,IAAOkpB,GAAUE,EAAAA,GAAAA,GAAsBD,QAAiBlrB,GAAY,CAACirB,EAASC,IAExF,MAAM,kBACJE,EAAiB,kBAAEC,EAAiB,kBAAEC,EAAiB,uBACvDC,GAAsB,sBAAEC,KACtBC,EAAAA,EAAAA,GAAuBppB,GAKrBqpB,IAAqB1jB,EAAAA,EAAAA,IAAiBuG,IAC1C+c,EAAkB/c,EAAE,IAGhBod,IAAmB3jB,EAAAA,EAAAA,IAAiBuG,IACxCA,EAAEM,kBACFqc,IACAM,IAAuB,IAEnBI,GAAiCd,GAC9B,KACLS,KACAT,GAAQ,EAGNe,IAAkC7jB,EAAAA,EAAAA,GAAgB4jB,GAA8BvB,IAChFyB,IAAyB9jB,EAAAA,EAAAA,GAAgB4jB,IAnBjBG,KAC5B3B,EAAa,CAAE9qB,OAAQ2E,EAAS3E,OAAQ6P,UAAWlL,EAAShE,GAAI+rB,mBAAmB,GAAO,KAmBtFC,IAAyBjkB,EAAAA,EAAAA,GAAgB4jB,IAC7C,IAAM1B,EAAqB,CAAElB,eAAWhpB,OAEpCksB,IAAkClkB,EAAAA,EAAAA,GAAgB4jB,GAA8BvB,IAChF8B,IAA0BnkB,EAAAA,EAAAA,IAAgB,KAC9CujB,KACKlD,GACLiC,EAAgC,CAAEhrB,OAAQ+oB,EAAOpoB,IAAK,IAElDmsB,IAAwBpkB,EAAAA,EAAAA,GAAgB4jB,GAA8BV,IAEtEmB,IAAoBrkB,EAAAA,EAAAA,IAAgB,IAAM3F,EAAIyJ,UAC9CwgB,IAAiBtkB,EAAAA,EAAAA,IAAgB,IAAM3F,EAAIyJ,UAC3CygB,IAAiBvkB,EAAAA,EAAAA,IAAgB,IAAM3F,EAAIyJ,QAAS0gB,cAAc,oCAExEzqB,EAAAA,EAAAA,KAAU,KACHO,IACHipB,KACAC,KACF,GACC,CAACD,GAAwBC,GAAuBlpB,IAEnD,MAAM9B,IAAYoC,EAAAA,EAAAA,GAAe,0BAA2BkL,GACtD2e,IAAkBvqB,EAAAA,GAAAA,GAAiBmmB,GAAQ,GAC3CqE,IAAiB9pB,EAAAA,EAAAA,GACrB,iCACA+pB,EAAAA,EAAAA,GAAkBF,KAGdG,IAAWzrB,EAAAA,EAAAA,KAAQ,IACnBsmB,EACK,OAELK,EACK,UAELiD,EACK,aADT,GAKC,CAACtD,EAAWK,EAAciD,IAEvB8B,GAAanD,GAA0BA,EAAyB,EAClEiB,EAAQ,wBAAyBjB,QACjC1pB,EAEE8sB,IAAkB3rB,EAAAA,EAAAA,KAAQ,KAC9B,IAAK8C,IAAY6jB,IAAiB7jB,EAAQ0B,QAAQ2U,OAAS8M,GAAauC,EAAsB,OAAO1lB,EAErG,MAAM8oB,GAAe9S,EAAAA,EAAAA,IAAiBhW,EAAQ0B,QAAQ2U,MACtD,MAAO,IACFrW,EACH0B,QAAS,IACJ1B,EAAQ0B,QACX2U,KAAMyS,GAET,GACA,CAACpD,EAAsB7B,EAAc7jB,EAASmjB,IAE3C4F,IAAoB9qB,EAAAA,GAAAA,GAAiB0qB,IAAU,GAErD,IAAKtqB,EACH,OAGF,MAAM2qB,GAAuB5E,IAAWY,GAAmB3pB,IAAW+oB,EAAOpoB,IAAMooB,EAAOpoB,KAAO6pB,EAEjG,OACEpnB,EAAAA,GAAAC,cAAA,OAAKnC,UAAWA,GAAW6B,IAAKA,EAAK6qB,cAAe5B,GAClD5oB,EAAAA,GAAAC,cAAA,OAAKnC,UAAWksB,IACdhqB,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,qBAAqBqC,QAASyoB,GAC1C0B,IAAqBtqB,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAMqc,KACjC9sB,QAAQgoB,GAAWc,YAClBtmB,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,QAAQnQ,UAAU,iBAGjCkC,EAAAA,GAAAC,cAACwqB,GAAAA,EAAuB,CACtB3qB,OAAQyoB,EACRzqB,UAAU,eACV0nB,UAAWA,EACXkF,cAAY,EACZnpB,QAAS6oB,GACTzE,OAASjB,OAAqBpnB,EAATqoB,EACrBwE,WAAYA,GACZxd,MAAQoY,IAAcsD,EAAkBJ,EAAQ,eAC5CvD,EAAYuD,EAAQ,qCAAkC3qB,EAC1D6C,QAAS6oB,GACTtD,WAAYA,IAEd1lB,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACL1C,UAAU,kBACV2C,OAAK,EACLkqB,OAAK,EACLxc,MAAM,cACNC,UAAW6Z,EAAQ,UACnB9nB,QAAS8oB,IAETjpB,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,YAEXoa,GAAkBjD,KAAkByB,GACpC7mB,EAAAA,GAAAC,cAAC4hB,GAAAA,EAAI,CACH/hB,OAAQ4oB,EACR9W,OAAQ+W,EACRgB,kBAAmBA,GACnBC,eAAgBA,GAChBC,eAAgBA,GAChB/rB,UAAU,uBACVmkB,QAAS4G,GACT3G,oBAAqB4G,IAEpB1D,GACCplB,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACEpP,EAAAA,GAAAC,cAACuiB,GAAAA,EAAQ,CACPC,KAAOiC,OAAkCpnB,EAAtB,oBACnBstB,WAAYlG,EAAY1kB,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,qBAAmB3Q,EAEtD6C,QAASA,IAAM0nB,EAAoB,CACjCnD,WAAW,KAGZuD,EAAQjB,EAAyB,EAAI,kBAAoB,oBAE5DhnB,EAAAA,GAAAC,cAACuiB,GAAAA,EAAQ,CACPC,KAAMiC,EAAY,yBAAsBpnB,EACxCstB,WAAalG,OAA0CpnB,EAA9B0C,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,gBAEpC9N,QAASA,IAAM0nB,EAAoB,CACjCnD,WAAW,KAGZuD,EAAQjB,EAAyB,EAAI,kBAAoB,oBAE3DP,GACCzmB,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACEpP,EAAAA,GAAAC,cAAC4qB,GAAAA,EAAa,MACd7qB,EAAAA,GAAAC,cAACuiB,GAAAA,EAAQ,CACPC,KAAOkC,OAAmCrnB,EAAtB,oBACpBstB,WAAYjG,EAAa3kB,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,qBAAmB3Q,EAEvD6C,QAASA,IAAM2nB,EAAqB,CAClCnD,YAAY,KAGbsD,EAAQjB,EAAyB,EAAI,0CAA4C,gBAEpFhnB,EAAAA,GAAAC,cAACuiB,GAAAA,EAAQ,CACPC,KAAMkC,EAAa,yBAAsBrnB,EACzCstB,WAAajG,OAA2CrnB,EAA9B0C,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,gBAErC9N,QAASA,IAAM2nB,EAAqB,CAClCnD,YAAY,KAGbsD,EAAQjB,EAAyB,EAAI,0CAA4C,iBAIxFhnB,EAAAA,GAAAC,cAAC4qB,GAAAA,EAAa,MACd7qB,EAAAA,GAAAC,cAACuiB,GAAAA,EAAQ,CAACC,KAAK,UAAUtiB,QAASgpB,IAC/BlB,EAAQ,wBAIdI,GACCroB,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACEpP,EAAAA,GAAAC,cAACuiB,GAAAA,EAAQ,CACPC,KAAK,eACLtiB,QAASipB,IAERnB,EAAQ,yBAEVK,GACCtoB,EAAAA,GAAAC,cAACuiB,GAAAA,EAAQ,CACPC,KAAK,eACLtiB,QAASopB,IAERtB,EAAQ,gBAGZsC,IACCvqB,EAAAA,GAAAC,cAACuiB,GAAAA,EAAQ,CAACC,KAAK,OAAOtiB,QAASspB,IAC5BtrB,EAAK,0BAGV6B,EAAAA,GAAAC,cAACuiB,GAAAA,EAAQ,CAACC,KAAK,UAAUtiB,QAASqpB,IAC/BvB,EAAQ,uBAEXjoB,EAAAA,GAAAC,cAACuiB,GAAAA,EAAQ,CAACC,KAAK,SAAStiB,QAASupB,IAC9BzB,EAAQ,kBAOjB,K,wCCnXV,MAQA,GARqC9K,IACnC,MAAM,OAAErd,GAAWqd,EACb2N,GAAWzN,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,YAAazd,GAG7D,OAAOgrB,EAAW9qB,EAAAA,GAAAC,cAAC6qB,EAAa3N,QAAY7f,CAAS,E,gBCLvD,MAQA,GAR6C6f,IAC3C,MAAM,OAAErd,GAAWqd,EACb4N,GAAmB1N,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,oBAAqBzd,GAG7E,OAAOirB,EAAmB/qB,EAAAA,GAAAC,cAAC8qB,EAAqB5N,QAAY7f,CAAS,ECGvE,GAR2C6f,IACzC,MAAM,OAAErd,GAAWqd,EACb6N,GAAiB3N,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,kBAAmBzd,GAGzE,OAAOkrB,EAAiBhrB,EAAAA,GAAAC,cAAC+qB,EAAmB7N,QAAY7f,CAAS,E,gBCLnE,MAQA,GARsC6f,IACpC,MAAM,OAAErd,GAAWqd,EACb8N,GAAY5N,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,aAAczd,GAG/D,OAAOmrB,EAAYjrB,EAAAA,GAAAC,cAACgrB,EAAc9N,QAAY7f,CAAS,ECGzD,GARuC6f,IACrC,MAAM,OAAErd,GAAWqd,EACb+N,GAAa7N,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,cAAezd,GAGjE,OAAOorB,EAAalrB,EAAAA,GAAAC,cAACirB,EAAe/N,QAAY7f,CAAS,ECG3D,GAR2C6f,IACzC,MAAM,OAAErd,GAAWqd,EACbgO,GAAiB9N,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,kBAAmBzd,GAGzE,OAAOqrB,EAAiBnrB,EAAAA,GAAAC,cAACkrB,EAAmBhO,QAAY7f,CAAS,E,4BCoCnE,MACM8tB,GAAU,IAAItR,OAAOuR,EAAAA,IAAkB,KAoM7C,IAAe5uB,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GAAUC,SAAQ6gB,eACjB,MAAM6N,GAAYC,EAAAA,EAAAA,KAAgB5uB,EAAQC,EAAQ6gB,IAC5C,mBACJ+N,GACE7uB,EACJ,MAAO,CACL2E,OAAOmqB,EAAAA,EAAAA,KAAY9uB,GACnB+uB,gBAAgBxuB,EAAAA,EAAAA,KAAeP,GAAQ+uB,eACvCJ,YACAE,qBACD,GAXe9uB,EAlM8BivB,EAChD/uB,SACA6gB,WACAmO,UACAjI,aACA+H,iBACAJ,YACAhqB,QACAkqB,qBACAK,gBAEA,MAAM,mBACJC,EAAkB,oBAClBC,EAAmB,qBACnBC,EAAoB,yBACpBC,IACE/tB,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KAEP8tB,GAA2BtoB,EAAAA,EAAAA,MAG3BjE,GAAMiE,EAAAA,EAAAA,IAAuB,MAE7BuoB,EAAkBX,EAAmBW,gBACrCC,EAAyD,UAAxCZ,EAAmBa,iBAEpCC,GAAsBC,EAAAA,EAAAA,KAAqB,KAC/C,MAAMC,GAAgBrX,EAAAA,EAAAA,IAAyByW,KACzCa,EAAaD,EAAc7U,UAAU+U,MAAMC,GAC/CA,EAAOrS,OAASrD,EAAAA,GAAsB+B,UAKxC,OAFAkT,EAAyB9iB,QAAUojB,EAE5BC,GAAYG,KAAOJ,EAAc5U,KAAKtC,MAAM8V,MAAW,EAAE,GAC/D,CAACQ,GAxCc,KAwCS,GAErBiB,GAAUC,EAAAA,EAAAA,GAAiBR,EAAqB,CAACA,EAAqBV,IAAU,IAEtFvsB,EAAAA,EAAAA,KAAU,KACR,MAAM0tB,EAAOF,IACPL,EAAgBN,EAAyB9iB,QAE3C2jB,EACFjB,EAAmB,CAAElU,KAAM4U,KAE3BT,IACAC,EAAqB,CAAEpvB,SAAQ6gB,aACjC,GACC,CAACoP,EAASjwB,EAAQ6gB,KAErBuP,EAAAA,EAAAA,IAAc,KACZjB,IACAC,EAAqB,CAAEpvB,SAAQ6gB,YAAW,GACzC,CAAC7gB,EAAQmvB,EAAqBtO,EAAUuO,IAE3C,MAAMzD,GAAU0E,EAAAA,EAAAA,IAAgB,IACvBzvB,QAAQkuB,GAAkBE,MAAcN,IAAc3H,IAC5D,CAACA,EAAYiI,EAASN,EAAWI,KAC9B,aAAE9rB,EAAY,qBAAEwL,IAAyBE,EAAAA,EAAAA,GAA4Bid,GAErE2E,EAAsBxB,GAAgByB,cAEtCC,GAAmB5tB,EAAAA,GAAAA,GAAiBksB,GAAgB,GAEpD2B,GAA4B/nB,EAAAA,EAAAA,IAAgB,KAChD0mB,EAAqB,CAAEpvB,SAAQ6gB,WAAU6N,WAAW,GAAO,KAGvD,kBACJ5C,EAAiB,kBAAEC,EAAiB,kBAAEC,EAAiB,uBACvDC,EAAsB,sBAAEC,IACtBC,EAAAA,EAAAA,GAAuBppB,EAAKksB,GAAW,GAErClC,GAAoBrkB,EAAAA,EAAAA,IAAgB,IAAM3F,EAAIyJ,UAC9CwgB,GAAiBtkB,EAAAA,EAAAA,IAAgB,IAAM3F,EAAIyJ,UAC3CygB,GAAiBvkB,EAAAA,EAAAA,IACrB,IAAM3F,EAAIyJ,QAAS0gB,cAAc,4CAG7BwD,GAAqBhoB,EAAAA,EAAAA,IAAiBuG,IAC1C+c,EAAkB/c,EAAE,IAUtB,SAAS0hB,EAAsB3kB,GAC7BqjB,EAAyB,CAAEE,gBAAiBvjB,GAC9C,CAEA,SAAS4kB,EAAoB5kB,GAC3BqjB,EAAyB,CAAEI,iBAAkBzjB,GAC/C,CAEA,IAfAvJ,EAAAA,EAAAA,KAAU,KACHO,GAAiBwtB,IACpBvE,IACAC,IACF,GACC,CAACD,EAAwBC,EAAuBlpB,EAAcwtB,KAU5DxtB,IAAiBwtB,EACpB,OAIF,MAAM,MAAEK,KAAUC,GAAwBN,EACpCO,EAAc,CAClB1qB,QAAS,CACP2qB,QAASF,IAwDb,OACE1tB,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GAAe,iBAAkBkL,GAAuBzL,IAAKA,GAC3EK,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,wBACbkC,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,2BAA2BqC,QAASmtB,GACjDttB,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,UAEbjO,EAAAA,GAAAC,cAAC4tB,GAAAA,EAAO,CACNtsB,QAASosB,EACTG,WAAS,EACTxsB,MAAOA,EACPysB,iBAAkBT,EAClBzB,UAAWA,IAEb7rB,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACL1C,UAAU,uBACV2C,OAAK,EACLkqB,OAAK,EACLxc,MAAM,cACNC,UAAU,wBACVjO,QAASktB,GAETrtB,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,YAEX4d,GAzEJ7rB,EAAAA,GAAAC,cAAC4hB,GAAAA,EAAI,CACH/hB,OAAQ4oB,EACR9W,OAAQ+W,EACRgB,kBAAmBA,EACnBC,eAAgBA,EAChBC,eAAgBA,EAChB/rB,UAAU,gCACVmkB,QAAS4G,EACT3G,oBAAqB4G,EACrBhH,WAAS,GAET9hB,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KAEI+c,EAEEnsB,EAAAA,GAAAC,cAACuiB,GAAAA,EAAQ,CAACC,KAAK,kBAAkBtiB,QAASA,IAAMotB,OAAsBjwB,IACnEa,EAAK,6BAIR6B,EAAAA,GAAAC,cAACuiB,GAAAA,EAAQ,CAACC,KAAK,oBAAoBtiB,QAASA,IAAMotB,GAAsB,IACrEpvB,EAAM,+BAIZ+uB,IACCd,EAEEpsB,EAAAA,GAAAC,cAACuiB,GAAAA,EAAQ,CAACC,KAAK,SAAStiB,QAASA,IAAMqtB,EAAoB,UACxDrvB,EAAK,mCAIR6B,EAAAA,GAAAC,cAACuiB,GAAAA,EAAQ,CAACC,KAAK,WAAWtiB,QAASA,IAAMqtB,EAAoB,UAC1DrvB,EAAM,qCAIb6B,EAAAA,GAAAC,cAACuiB,GAAAA,EAAQ,CACPC,KAAK,SAELtiB,QAASktB,GAERlvB,EAAK,wCAgCR,K,4ECuCL6vB,GAAe,SAAfA,GAAe,OAAfA,EAAe,YAAfA,EAAe,gBAAfA,EAAe,YAAfA,EAAe,oBAAfA,EAAe,kBAAfA,EAAe,0BAAfA,CAAe,EAAfA,IAAe,IAapB,MAg0DA,IAAevxB,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GACCC,SAAQ6gB,WAAUwQ,UAAS7J,kBAAiBtgB,WAAUwW,WAEtD,MAAMzd,GAAOC,EAAAA,EAAAA,KAAWH,EAAQC,GAC1BsxB,GAAWC,EAAAA,EAAAA,IAAYvxB,QAAsCU,GAA5B8wB,EAAAA,EAAAA,KAAUzxB,EAAQC,GACnDyxB,EAAgB7wB,QAAQ0wB,GACxBhI,GAAiBC,EAAAA,EAAAA,KAAqBxpB,EAAQC,GAC9C0xB,GAAiBC,EAAAA,EAAAA,IAAS3xB,GAC1B4xB,EAAeF,GAAiBG,EAAAA,EAAAA,KAAmB9xB,EAAQC,QAAUU,EACrEoxB,EAAgBJ,OAAsDhxB,GAArCqxB,EAAAA,EAAAA,KAAmBhyB,EAAQC,GAC5DgyB,GAAgCP,IAAkBC,KACnDO,EAAAA,EAAAA,KAA0ClyB,EAAQC,EAAQ6gB,IACzD,SACJqR,EAAQ,sBAAEC,EAAqB,yBAAEC,EAAwB,4BAAEC,GACzDtyB,EAAOuyB,SAASC,MACdC,EAAoBzyB,EAAO0yB,cAAcC,EAAAA,KACzCD,EAAgBP,IAAaQ,EAAAA,IAA0B3yB,EAAO0yB,cAAcP,QAAYxxB,EACxFiyB,EAAuBX,EAA+BA,EAA6BrxB,QAAKD,EACxFkyB,EAAkBD,GAAuBxM,EAAAA,EAAAA,KAAkBpmB,EAAQC,EAAQ2yB,QAAwBjyB,GACnG,cAAE8pB,GAAkBzqB,EACpB8yB,GAAcC,EAAAA,EAAAA,KAAW/yB,EAAQyqB,GACjCuI,EAAkBjB,EAAeA,GAAckB,UAAYxI,OAAgB9pB,EAC3EsyB,EAAW/yB,GAAMgzB,eAAiBF,IACtC9yB,EAAKgzB,cAAcnJ,MAAMoJ,GAASA,EAAKvyB,KAAOoyB,IAC1CA,EACC9yB,GAAMkzB,aAAaC,UAAYnzB,GAAMU,QAAKD,GAE3C2yB,EAAaL,GAAWF,EAAAA,EAAAA,KAAW/yB,EAAQizB,QAAYtyB,EACvD4yB,GAAcD,GAAcL,GAAW9yB,EAAAA,EAAAA,KAAWH,EAAQizB,QAAYtyB,EACtE6yB,GAAiBC,EAAAA,EAAAA,KAAqBzzB,EAAQC,GAC9CyzB,GAAsBC,EAAAA,EAAAA,KAA0B3zB,EAAQC,GAExD2zB,GAAWrzB,EAAAA,EAAAA,KAAeP,GAC1B6zB,EAAoBhzB,QAAQ+yB,EAASE,YAAYxC,SAEjDyC,GAAqB5N,EAAAA,EAAAA,KAAyBnmB,GAC9Cg0B,EAA0B/zB,IAAW8zB,GAAoB9zB,QAC1D6gB,IAAaiT,GAAoBjT,UACjC2G,IAAoBsM,GAAoBpW,OACvCkW,EAEAI,IADOlB,EAAAA,EAAAA,KAAW/yB,EAAQC,KACQ4xB,GAAcqC,mBAAoB,EACpEC,EAAWpC,GAAcoC,SACzB7J,GAAuBC,EAAAA,EAAAA,KAA2BvqB,GAElDo0B,EAAmC,cAApB3M,GACjB4M,EAAAA,EAAAA,KAA4Br0B,EAAQC,IACpCq0B,EAAAA,EAAAA,KAAmBt0B,EAAQC,EAAQ6gB,GAEjCyT,EAAQjD,IAAWkD,EAAAA,EAAAA,KAAgBx0B,EAAQC,EAAQqxB,GACnDmD,EAAoBF,GAAS,iBAAkBA,EAAQA,EAAMG,kBAAe/zB,EAC5EgoB,GAAQC,EAAAA,EAAAA,KAAY5oB,EAAQC,EAAQ6gB,GACpC6T,EAAiBhM,GAAOE,WAC1BzC,EAAAA,EAAAA,KAAkBpmB,EAAQC,EAAQ0oB,EAAME,UAAUK,mBAClDvoB,EACEi0B,EAAe10B,GAAM20B,SAAW30B,EAAK40B,mBAAqBhU,IAAaiU,EAAAA,IAAkBJ,GAC3FK,EAAAA,EAAAA,KAAuBh1B,EAAQ20B,QAC/Bh0B,EACEs0B,EAAwC,cAApBxN,EAEpByN,EAAsBvD,IAAmBD,IAAkBuD,IAAsB1L,EAEjFoF,GAAYC,EAAAA,EAAAA,KAAgB5uB,EAAQC,EAAQ6gB,GAC5CqU,EAAkBj1B,IAAQk1B,EAAAA,EAAAA,IAC9Bl1B,GACAm1B,EAAAA,EAAAA,KAAqBr1B,IACrBs1B,EAAAA,EAAAA,KAAsBt1B,EAAQC,KAC7Bk1B,gBAEGI,GAAsB5D,IAAmBD,IAC3CuD,IAAsB1L,GAA2B,UAAT5L,GAAoB1d,IAAWu1B,EAAAA,IACrEC,IAAgBC,EAAAA,EAAAA,KAA+B11B,EAAQ,kBACvD21B,GAAmB/B,EAASgC,2BAC5BC,GAAWN,IAAuB5M,GAAOkN,SACzCC,GAASD,GAAW71B,EAAO+1B,oBAAoBF,SAAYl1B,EAC3Dq1B,GAAkBh2B,EAAOi2B,UAAUD,gBAEnCE,GAAmBl2B,EAAOm2B,QAAQD,kBAAoBE,EAAAA,IAE5D,MAAO,CACLC,mBAAoBr2B,EAAOi2B,UAAUI,mBACrCC,aAAuB,UAAT3Y,EAAmB3d,EAAOi2B,UAAUK,kBAAe31B,EACjE41B,eAAgB3C,EAAS4C,UACzBzU,gBAAgBkH,EAAAA,EAAAA,KAAqBjpB,EAAQC,EAAQ6gB,EAAU2G,GAC/DkB,QACAzoB,OACAwxB,gBACAnI,iBACAyK,0BACAyC,wBAAwBC,EAAAA,EAAAA,KAA6B12B,EAAQC,GAC7D02B,UAAWz2B,GAAO2pB,EAAAA,EAAAA,IAAc3pB,QAAQS,EACxCi2B,oBAAoBC,EAAAA,EAAAA,KAAyB72B,EAAQmH,GACrD2vB,oBAAoBC,EAAAA,EAAAA,KAAqB/2B,GACzCg3B,oBACsB,WAApBvP,IACIoK,GAAgBE,IAAekF,qBAErChC,oBACArC,uBACAsE,uBAAwBrE,GAAiBsE,oBACzC1O,aAAcxoB,IAAW2zB,EAASlM,gBAAgBE,SAClDwP,UAAWxD,EAASwD,UACpBC,iBAAkBr3B,EAAOs3B,SAASC,SAASD,SAC3CE,oBAAqBx3B,EAAOy3B,aAAaF,SAASD,SAClDvF,eACA2F,gBAAiB13B,EAAO23B,eAAeC,QACvCnN,gBACAqI,cACA+E,qBAAsBjE,EAASiE,qBAC/BzF,wBACAC,2BACAC,8BACAwF,aAAc93B,EAAO83B,aACrBrF,kBAAmBA,GAAmBsF,SACtCrF,cAAeA,GAAeqF,SAC9BC,WAAYpE,EAASoE,WAAWC,WAChCC,mBAAoBtE,EAASoE,WAAWG,UACxCC,YAAavG,EAAgBA,EAAawG,SAASC,WAAY,OAAS33B,EACxE43B,cAAe1G,GAAcwG,SAASG,WACtClF,aACAC,aACAN,WACAmB,eACAZ,iBACAE,sBACApS,WAAYthB,EAAOy4B,WAAWjU,KAC9BkU,oBAAoBC,EAAAA,EAAAA,KAAe34B,EAAQC,GAC3C0E,OAAOmqB,EAAAA,EAAAA,KAAY9uB,GACnB44B,eAAeC,EAAAA,EAAAA,GAAmB74B,EAAQ,sBAAwB84B,EAAAA,IAClEC,cAAcF,EAAAA,EAAAA,GAAmB74B,EAAQ,iBACzCsqB,uBACA2J,wBACApF,mBAAoB7uB,EAAO6uB,mBAC3BsF,WACAJ,qBACAiF,sBAAsBC,EAAAA,EAAAA,KAA2Bj5B,GACjDk5B,eAAgB5O,KAAyB6O,EAAAA,EAAAA,KAA+Bn5B,GACxEo5B,uBAAuBC,EAAAA,EAAAA,KAA4Br5B,GACnDs5B,qBAAsB/P,GAAkBoI,IAAmBD,IAAkBuD,EAC7ExT,uBAAwBzhB,EAAOuyB,SAASC,MAAM/Q,uBAC9CgT,oBACA8E,YAAav5B,EAAOw5B,QAAQD,YAC5B3E,eACA6E,mBAAoBz5B,EAAO05B,aAAaC,aACxCD,aAAc15B,EAAO05B,aAAax3B,KAClCgzB,sBACAvG,YACAI,gBAAgBxuB,EAAAA,EAAAA,KAAeP,GAAQ+uB,eACvC6K,wBAAyB/H,GAAc+H,wBACvC9D,UACAE,mBACAT,uBACAE,iBACAE,oBACAO,oBACAf,kBACD,GA7Jep1B,EAvzDwB85B,EAC1Clc,OACA4Y,gBACAuD,gBACA7E,oBACAwB,yBACAsD,UACA5yB,WACA4a,iBACA9hB,SACA6gB,YACAwQ,WACAyC,sBACAtM,mBACAkB,SACAzoB,QACA6xB,gBACA6C,gBACAZ,2BACA1J,wBACA2J,yBACAvC,iBACAnI,kBACAoN,aACAiC,iBACAhC,sBACAE,sBACAkC,wBACAvQ,gBACA2O,aACAxE,wBACAsE,0BACA8C,oBACAhD,uBACAK,oBACAG,uBACAE,mBACAjN,iBACAqI,eACAiG,gBACAlB,wBACAzF,yBACAC,4BACAI,qBACAC,iBACAoF,gBACAE,cACAE,sBACAE,eACA9E,cACAC,cACAN,YACAmB,gBACAZ,kBACAE,uBACA6E,iBACAjX,cACAoX,sBACA7J,sBACAlqB,SACAwvB,YACA7B,+BACA2H,4BACAC,mBACAC,WACAh5B,aACAk1B,sBACAC,gBACA4C,iBACAE,yBACA3X,0BACAgT,qBACA8E,eACAD,uBACAG,sBACAC,gBACAxE,uBACAnG,kBACAJ,aACAiL,2BACA9D,UACAE,mBACAT,uBACAE,iBACAE,oBACAO,oBACAf,mBACAiF,cACAC,WACAC,UACAC,iBAEA,MAAM,YACJC,GAAW,WACXC,GAAU,WACVC,GAAU,gBACVhT,GAAe,cACfiT,GAAa,eACbC,GAAc,qBACdC,GAAoB,WACpBC,GAAU,eACVC,GAAc,oBACdC,GAAmB,WACnBC,GAAU,uBACVC,GAAsB,cACtBC,GAAa,qBACbC,GAAoB,iBACpB3jB,GAAgB,oCAChB4jB,GAAmC,wBACnCC,GAAuB,oBACvBC,GAAmB,kBACnBC,GAAiB,YACjBC,GAAW,yBACXnM,GAAwB,kBACxBoM,GAAiB,kBACjBC,GAAiB,qBACjBC,GAAoB,wBACpBC,KACEt6B,EAAAA,EAAAA,MAEE+pB,IAAU7pB,EAAAA,EAAAA,KACVD,IAAO+pB,EAAAA,EAAAA,KAGPuQ,IAAW70B,EAAAA,EAAAA,IAAuB,MAGlC80B,IAAmB90B,EAAAA,EAAAA,IAA0B,OAE5CgoB,GAAS+M,KAAWC,EAAAA,EAAAA,IAAU,KAC9BC,GAAWC,KAAgB50B,EAAAA,EAAAA,KAAS,GACrC60B,IAAoBC,EAAAA,EAAAA,GAAqBpC,IACzCqC,IAA6Br1B,EAAAA,EAAAA,MAC7Bs1B,IAAoBC,EAAAA,EAAAA,GAAsB1C,IACxCjtB,MAAO4vB,IAAgBC,EAAAA,EAAWC,MAEpCC,GAA2B,gBAATjf,EAClBkf,GAA2B,UAATlf,EAClBuV,GAAgB0J,GAAkB18B,IAAMgzB,mBAAgBvyB,EACxDm8B,GAAgB5J,KAChBA,GAAczvB,OAAS,IAAMyvB,GAAcnJ,MAAMoJ,GAASA,EAAKvyB,KAAO6pB,OAErEsS,GAAoBC,GAAqBC,KAA6B9a,EAAAA,EAAAA,KACvE+a,IAAoBC,EAAAA,EAAAA,GAAqBl9B,EAAQ6gB,KAChDsc,GAAiBC,GAAmBC,KAAuBnb,EAAAA,EAAAA,MAC3DH,GAAkBub,GAAkBC,KAAqBrb,EAAAA,EAAAA,KAE1Dsb,GAAqB1b,IAAkBD,EAAAA,EAAAA,IAAaC,IAEpD,SAAE2b,GAAUC,QAASC,GAAkBxF,YAAayF,IAAoB9L,IAAgB,CAAC,EACzF+L,GAAiBJ,IAAU98B,GAE3Bm9B,GAA2BtJ,KAAqBuJ,EAAAA,EAAAA,IAAevJ,GAAmBwJ,EAAAA,MAExFv7B,EAAAA,EAAAA,IAAUw7B,EAAAA,GAAmC,CAACjP,KAE9C,MAAMkP,IAAgCl3B,EAAAA,EAAAA,IAAO,IAEtCm3B,GAAiBC,KAAYC,EAAAA,EAAAA,GAClC1B,IAAmBnG,EACnBwG,KAGFsB,EAAAA,EAAAA,IAAW,KACTpC,IAAa,EAAK,GAtKW,MAyK/Bz5B,EAAAA,EAAAA,KAAU,KACJk6B,IAEJrB,IAAqB,GACpB,CAACqB,GAAiBtL,MAErB5uB,EAAAA,EAAAA,KAAU,KACR45B,GAA2B7vB,aAAU9L,CAAS,GAC7C,CAACV,KAEJyC,EAAAA,EAAAA,KAAU,KACJzC,GAAU85B,IAAY8C,IACxBhC,GAAqB,CAAE56B,UACzB,GACC,CAAC85B,EAAS95B,EAAQ6gB,GAAU+b,MAE/Bn6B,EAAAA,EAAAA,KAAU,KACR,MAAM87B,EAAwB7H,IAAaz2B,IAAMu+B,iBAC7Cx+B,GAAUC,KAASgzB,IAAiB6G,KAAY2E,EAAAA,EAAAA,IAAiBx+B,KAASs+B,IAC5EvD,GAAW,CAAEh7B,UACf,GACC,CAACC,GAAMD,EAAQ02B,GAAWoD,EAASkB,GAAY/H,KAElD,MAAMyL,IAA+B13B,EAAAA,EAAAA,KAAO,IAC5CopB,EAAAA,EAAAA,IAAc,EAAEuO,EAAYC,MAE1BF,GAA6BlyB,QAAU5L,QAAQZ,IAAW2+B,GAAc1L,KAAkB2L,EAAkB,GAC3G,CAAC5+B,EAAQizB,KAEZ,MAAOjX,GAAa7E,KAAkB7P,EAAAA,EAAAA,IAA0B,IAC1Du3B,GAAiBj+B,QAAQob,GAAYxY,SACpCs7B,GAAU1nB,KAAe9P,EAAAA,EAAAA,SAAuC5G,IAEjE,gBACJq+B,GAAe,YAAEC,GAAW,eAAEje,GAAc,eAAEC,GAAc,oBAAEie,GAAmB,cACjFC,GAAa,iBAAEC,GAAgB,cAAE/d,GAAa,cAAEF,GAAa,cAAED,GAAa,iBAAEE,KAC5Etf,EAAAA,EAAAA,KACF,KAAMu9B,EAAAA,EAAAA,IAA4Bn/B,GAAM6xB,GAAcL,GAAemL,KACrE,CAAC38B,GAAM6xB,GAAcL,GAAemL,KAGhCyC,GAAgB1F,IAA2BiD,GAC3C0C,GAAoBD,KAAkBF,GAEtCI,IAAqBV,IAAkBI,KAAwBvQ,IAAa9tB,QAAQkuB,IACpF0Q,GAAoBF,KAAsBxd,GAEhDrf,EAAAA,EAAAA,KAAU,KACH88B,IACHlQ,GAAyB,CAAEE,qBAAiB7uB,GAC9C,GACC,CAAC6+B,KAEJ,MAAME,IAA4B/2B,EAAAA,EAAAA,IAAgB,CAACg3B,EAAiBC,EAAoB1F,MACtF,GAAI0F,IAAc1F,IAAmBuF,GAAmB,OACxD,MAAMI,EAAY77B,OAAO87B,eACzB,IAAIC,EAOJ,GALEA,EADEH,IAAc1F,GACD1mB,SAAS2Z,cAA8B8M,IAEvCzmB,SAASwsB,eAAeJ,GAGrCC,EAAUI,WAAY,CACxB,MAAMC,EAAiBL,EAAUM,WAAW,GAC5C,IAAIC,EAAAA,EAAAA,GAAuBF,EAAgBN,GAGzC,OAFAS,EAAAA,EAAAA,IAAsBV,QACtBI,EAAaO,cAAc,IAAIC,MAAM,QAAS,CAAEC,SAAS,IAG7D,CAEAxE,GAAS,GAAE/M,OAAY0Q,MAGvBc,EAAAA,EAAAA,KAAoB,MAClBC,EAAAA,EAAAA,GAAqBX,EAAa,GAClC,IAGE5oB,IAA4BxO,EAAAA,EAAAA,IAAgB,CAChDsS,EAAc2kB,EAAoB1F,MAElC,MAAMyF,GAAU5uB,EAAAA,EAAAA,GAAWkK,EAAM,CAAC,cAAe,aAAc,YAC5DgJ,KAAK,IACLjL,QAAQ,WAAY,KACvB0mB,GAA0BC,EAASC,EAAU,IAGzCe,IAAqCh4B,EAAAA,EAAAA,IAAgB,CACzDsS,EAAwB2kB,EAAoB1F,MAE5C,MAAMyF,GAAUiB,EAAAA,EAAAA,GAA0B3lB,GAC1CykB,GAA0BC,EAASC,EAAU,IAGzCiB,IAAmCl4B,EAAAA,EAAAA,IAAgB,CAACm4B,EAAmBlB,EAAoB1F,MAC/FwF,IAA0BqB,EAAAA,EAAAA,IAAqBD,GAAQlB,EAAU,IAG7DoB,IAAiBr4B,EAAAA,EAAAA,IAAgB,KAChCo2B,KACL4B,GAAmC5B,GAAU7E,IAC7C7iB,QAAY1W,GAAU,KAGlB,yBACJ8iB,GAAwB,uBACxBwd,GAAsB,kBACtBC,GAAiB,kBACjBC,GAAiB,iBACjB3d,GAAgB,gBAChB4d,GAAe,uBACfC,GAAsB,qBACtBC,IC7jBW,UAA4B,YACzCrlB,EAAW,cACX2c,EAAa,QACboD,EAAO,eACP5kB,EAAc,OACdnX,EAAM,cACNohB,EAAa,cACbF,EAAa,cACbD,EAAa,iBACbE,EAAgB,eAChB4f,EAAc,cACd1pB,IAcA,MAAM9V,GAAOC,EAAAA,EAAAA,MACP,sBAAE8/B,EAAqB,oCAAElG,EAAmC,iBAAE5jB,IAAqBlW,EAAAA,EAAAA,OAClF2/B,EAAmBM,IAAwBj6B,EAAAA,EAAAA,KAAkB,IAC7D05B,EAAwBQ,IAA6Bl6B,EAAAA,EAAAA,KAAkB,IACvEkc,EAA0Bie,IAA+Bn6B,EAAAA,EAAAA,SAA8B5G,GAExF0gC,GAAyB14B,EAAAA,EAAAA,IAAgB,KAC7CyO,EAAeuqB,EAAAA,GACfX,GAAgB,IAGZM,GAAuB34B,EAAAA,EAAAA,IAC1Bi5B,IACC,MAAMtmB,EAAqC,mBAAbsmB,EAA0BA,EAAS3lB,GAAe2lB,EAChF,GAAKtmB,EAAe7X,OAKpB,GAAI6X,EAAeyO,MAAM8X,IACvB,MAAMlkB,GAAOmkB,EAAAA,EAAAA,IAAuBD,GAEpC,MAAiB,UAATlkB,IAAqB0D,IAAkBD,GAChC,UAATzD,IAAqBwD,IAAkBC,GAC9B,UAATzD,IAAqBuD,IAAkBE,GAC9B,SAATzD,IAAoByD,CAAiB,IAE3Cia,EAAoC,CAAEp7B,gBACjC,GAAIqb,EAAeyO,MAAK,EAAGpmB,UAAWA,EAAOi1B,IAClD2I,EAAsB,CACpBQ,MAAO,2BAEJ,CACL3qB,EAAekE,GACf,MAAM0mB,EAAc1mB,EAAeyO,MAAM8X,IACvC,MAAMlkB,GAAOmkB,EAAAA,EAAAA,IAAuBD,GAEpC,MAAiB,UAATlkB,IAAqB0D,GACd,UAAT1D,IAAqBwD,GACZ,UAATxD,IAAqBuD,CAAc,IAG3CsgB,EAAqB3gC,QAAQmhC,GAAe5gB,IAC5CqgB,GAA2BrgB,EAC7B,MA7BEigB,GA6BF,IA+CJ,MAAO,CACL5d,2BACA0d,mBA7CwBx4B,EAAAA,EAAAA,IAAgBkP,MAAOgD,EAAeonB,KAC9D,GAAI3qB,EAAe,CACjB,MAAM4qB,QAAsBxmB,EAAAA,EAAAA,GAAgBb,EAAM,GAAGvJ,KAAMuJ,EAAM,IAC3Dc,EAAarE,IAAiBsE,EAAAA,EAAAA,IAAuBtE,EAAe4qB,GAEtE5qB,GAAe0E,UACbL,EACF2lB,EAAqB,CAACY,IAEtBzqB,EAAiB,CAAE7S,QAASpD,EAAK,gCAGnC8/B,EAAqB,CAACY,GAE1B,KAAO,CACL,MAAM5mB,QAAuBC,QAAQC,IAAIX,EAAMrY,KAAKiZ,IAClDC,EAAAA,EAAAA,GAAgBD,EAAKnK,KAAMmK,EAAM,CAAE0mB,oBAAqBF,QAAathC,OAEvE2gC,EAAqB,IAAIrlB,KAAgBX,GAC3C,KA2BAkI,kBAxBuB7a,EAAAA,EAAAA,IAAgBkP,MAAOgD,EAAeunB,KAC7D,GAAI9qB,EAAe,CACjB,MAAM4qB,QAAsBxmB,EAAAA,EAAAA,GAAgBb,EAAM,GAAGvJ,KAAMuJ,EAAM,IAC3Dc,EAAarE,IAAiBsE,EAAAA,EAAAA,IAAuBtE,EAAe4qB,GAEtE5qB,GAAe0E,UACbL,EACF2lB,EAAqB,CAACY,IAEtBzqB,EAAiB,CAAE7S,QAASpD,EAAK,gCAGnC8/B,EAAqB,CAACY,GAE1B,KAAO,CACL,MAAM5mB,QAAuBC,QAAQC,IAAIX,EAAMrY,KAAKiZ,IAASC,EAAAA,EAAAA,GAAgBD,EAAKnK,KAAMmK,MACxF6lB,EAAqBhmB,EACvB,CACAomB,EAA4BU,EAAmB,IAO/ChB,gBAAiBpF,EACjBqF,yBACAC,uBACAL,yBACAC,oBAEJ,CDgcMmB,CAAmB,CACrBpmB,eACA+f,WACA5kB,kBACAwhB,iBACA34B,SACAohB,iBACAF,iBACAD,iBACAE,oBACA4f,kBACA1pB,cAAeyK,KAGVugB,GAAmBC,GAAiBC,KAAoBrgB,EAAAA,EAAAA,MACxDsgB,GAAsBC,GAAoBC,KAAuBxgB,EAAAA,EAAAA,MACjEygB,GAAkBC,GAAgBC,KAAmB3gB,EAAAA,EAAAA,MACrD4gB,GAAkBC,GAAgBC,KAAmB9gB,EAAAA,EAAAA,MACrD+gB,GAAiBC,GAAcC,KAAejhB,EAAAA,EAAAA,MAE/C,oBACJkhB,GAAmB,mBACnBC,GAAkB,oBAClBC,GAAmB,qBACnBC,GAAoB,kBACpBC,GACAC,gBAAiBC,GAAa,mBAC9BC,GAAkB,kBAClBC,GAAiB,qBACjBC,GAAoB,sBACpBC,IE3lBsBC,MAExB,MAAMN,GAAkBz8B,EAAAA,EAAAA,IAA0B,OAC3Cu8B,EAAsBS,IAA2B18B,EAAAA,EAAAA,MAClDq8B,GAAqB38B,EAAAA,EAAAA,OACpBw8B,EAAmBS,IAAwB38B,EAAAA,EAAAA,OAC3Cs8B,EAAmBC,IAAwBv8B,EAAAA,EAAAA,KAAS,IAE3D7E,EAAAA,EAAAA,KAAU,KAEJyhC,EAAAA,IAAaC,EAAAA,IACVC,IACP,GACC,IAEH,MAAMhB,GAAsB16B,EAAAA,EAAAA,IAAgBkP,UAC1C,IACE,MAAM,KAAEiI,EAAI,MAAES,SAAgB8jB,IAAsBC,IAC9CZ,EAAgBj3B,UACdm3B,EAAmBn3B,SAAW2R,KAAKC,MAAQ,GAAM,IACnDkmB,EAAAA,EAAAA,KAAgB,KACTb,EAAgBj3B,UACrBi3B,EAAgBj3B,QAAQhI,MAAM+/B,UAAa,SAA4B,IAAnBF,GAAc,uBAA2B,IAGjGJ,EAAqB9lB,KAAKC,OAC5B,IAEFulB,EAAmBn3B,QAAU2R,KAAKC,MAClC6lB,EAAqB9lB,KAAKC,OAE1B4lB,EAAwB,CAAEnkB,OAAMS,SAClC,CAAE,MAAOrH,GAEPE,QAAQC,MAAMH,EAChB,KAGIqqB,GAAsB56B,EAAAA,EAAAA,IAAgB,KAC1C,GAAK66B,EAAL,EAIAe,EAAAA,EAAAA,KAAgB,KACVb,EAAgBj3B,UAClBi3B,EAAgBj3B,QAAShI,MAAM+/B,UAAY,OAC7C,IAGF,IACE,OAAOhB,EAAsBjjB,OAC/B,CAAE,MAAOrH,GAGP,YADAE,QAAQC,MAAMH,EAEhB,CAdA,CAcA,IAGIoqB,GAAqB36B,EAAAA,EAAAA,IAAgB,KACzC,GAAK66B,EAAL,CAIAS,OAAwBtjC,GACxBijC,EAAmBn3B,aAAU9L,EAC7BujC,OAAqBvjC,IAErB4jC,EAAAA,EAAAA,KAAgB,KACVb,EAAgBj3B,UAClBi3B,EAAgBj3B,QAAQhI,MAAM+/B,UAAY,OAC5C,IAGF,IACE,OAAOhB,EAAsB1jB,MAC/B,CAAE,MAAO5G,GAGP,YADAE,QAAQC,MAAMH,EAEhB,CAlBA,CAkBA,KAGFxW,EAAAA,EAAAA,KAAU,IACD8gC,GAAuB1X,EAAAA,GAAAA,GAAsBwX,QAAsB3iC,GACzE,CAAC6iC,EAAsBF,IAE1B,MAAMS,GAAwBp7B,EAAAA,EAAAA,IAAgB,KAC5Cm7B,GAAsBD,EAAkB,IAG1C,MAAO,CACLR,sBACAE,sBACAD,qBACAE,uBACAC,oBACAC,kBACAE,qBACAC,oBACAC,uBACAC,wBACD,EFufGC,GAEES,GAA4BzQ,KAA4B6I,IAC9D6H,EAAAA,EAAAA,IAAY,KACVxH,GAAkB,CAAEvf,KAAM,eAAgB,GACzC8mB,GAA4BjB,IAAwBmB,EAAAA,SAA+BhkC,IAEtF+B,EAAAA,EAAAA,KAAU,KACHsxB,KAA2B6I,KAC3B2G,IACHtG,GAAkB,CAAEvf,KAAM,WAC5B,GACC,CAAC6lB,GAAsBxP,GAAyB6I,GAAiBK,KAEpE,MAAM0H,IAAeC,EAAAA,EAAAA,GAAYhkC,QAAQkhB,KACzCrf,EAAAA,EAAAA,KAAU,KACHsxB,KAA2B6I,IAC5B5N,OAAc2V,GAAan4B,SAC7BywB,GAAkB,CAAEvf,KAAM,UAC5B,GACC,CAACsR,GAAS2V,GAAc5Q,GAAyB6I,GAAiBK,KAErE,MAAM4H,GAAU5kC,KAAQ6kC,EAAAA,EAAAA,IAAY7kC,KAE9B,mBACJ8kC,GAAkB,kBAClBC,GAAiB,eACjBC,GAAc,qBACdC,GAAoB,YACpBC,KACEC,EAAAA,GAAAA,GACFxkC,QAAQk5B,GAAWxD,IAAkBsG,IAAmB7I,KACnD5B,KAA0B0M,IAC/B7P,GACA+M,QACAr7B,EACAm3B,GACArF,GACAC,KAGI,yBACJ4S,GAAwB,wBACxBC,GAAuB,kBACvBC,KACEC,EAAAA,GAAAA,GACF5kC,QAAQk5B,GAAWxD,IAAkBsG,IAAmB7I,KACnD3B,KAA6ByM,IAClC7P,GACA+M,GACAI,GACAN,GACAtE,KAGI,qBACJkO,GAAoB,oBACpBC,IhB/oBW,SACbC,EACA3W,EACAqI,GAEA,MAAM,qBAAEuO,EAAoB,sBAAEC,IAA0BvkC,EAAAA,EAAAA,OAEjDwkC,EAAkBC,EAAoBC,IAAwB9jB,EAAAA,EAAAA,IAAQ,GAEvE+jB,GAAiB/V,EAAAA,EAAAA,IAAiB,KACtC,MAAMxb,EAAOsa,IACb,IAAK2W,IAAcjxB,GAASwxB,EAAAA,IAAsBxxB,EAAKlR,OAdxC,EAc8D,OAG7E,IADiBkR,EAAKgE,MAAMwtB,EAAAA,GAAqBC,GAAAA,EAAehpB,EAAAA,KACjD,OAEf,MAAMipB,GAAYC,EAAAA,EAAAA,GAAiB3xB,GAMnC,OALsB0xB,IACnBF,EAAAA,IAA0D,KAApCI,EAAAA,GAAAA,GAAqBF,KACvCF,EAAAA,IAAsBtlC,QAAQ8T,EAAKgE,MAAMuE,MAI3CipB,EAAAA,GAAqBE,EAAYA,EAAU1tB,MAAM,gBAAgB,QAClEhY,CAAS,GACZ,CAACsuB,EAAS2W,IAEPtlC,GAAWgwB,EAAAA,EAAAA,IAAgB,IAAMzvB,QAAQqlC,MAAmB,CAACA,IAC7DM,EAAc3lC,QAAQy2B,GAAU7zB,QAiBtC,OAfAf,EAAAA,EAAAA,KAAU,KACR,IAAKkjC,IAActlC,EAAU,OAE7B,MAAMmmC,EAAcP,IAChBO,EACGD,GACHX,EAAqB,CAAE/E,MAAO2F,IAGhCX,GACF,GACC,CAACF,EAAWtlC,EAAU4lC,EAAgBM,EAAaX,EAAsBC,KAE5EpjC,EAAAA,EAAAA,IAAUujC,EAAsB,CAACA,EAAsBhX,IAEhD,CACLyW,qBAAsB7kC,QAAQP,GAAYkmC,IAAgBT,GAC1DJ,oBAAqBK,EAEzB,CgB+lBMU,CACF7lC,QAAQk5B,GACHxD,IACCsG,IAAmB7I,KACpB5B,IACA4M,KACCF,IACN7P,GACAoI,KAGI,qBACJsP,GAAoB,oBACpBC,GAAmB,cACnBC,GAAa,qBACbC,KACEC,EAAAA,GAAAA,GACFlmC,QAAQ+7B,IAAmB7C,GAAW/F,KAA4B8K,IAClE7P,GACA+M,GACAI,GACAN,GACA8B,GACAlG,GACAjN,KAIAtnB,OAAQ6jC,GACRC,MAAOC,GACPC,UAAWC,GACXC,SAAUC,GACVC,cAAeC,GACfC,QAASC,GACTC,aAAcC,GACdC,KAAMC,GACNC,SAAUC,IjB7qBC,SACbpC,EACA3lC,EACAgvB,EACA+I,GAEA,MAAM,eAAEiQ,EAAc,eAAEC,EAAc,mBAAEC,IAAuB5mC,EAAAA,EAAAA,OAExDwkC,EAAkBC,EAAoBC,IAAwB9jB,EAAAA,EAAAA,IAAQ,GAEvEimB,GAA2BC,EAAAA,EAAAA,KAAqB,KACpD,MAAM1zB,EAAOsa,IACb,OAAO2W,GAAajxB,EAAK2zB,WAAW,KAoExC,SAAuB3zB,GACrB,IAAKA,EAAK2zB,WAAW,KACnB,OAAO7rB,GAGT,MAAMxB,EASR,SAAsBtG,GASpB,OARAmI,GAAO7D,UAAYtE,EAAKqE,QAAQ,QAAS,MAEzC8D,GAAOvD,iBAA8B,SAASrM,SAASkI,IAChDA,EAAGgF,YACNhF,EAAGgF,UAAYhF,EAAG2E,aAAa,OACjC,IAGK+C,GAAO1C,SAChB,CAnBemuB,CAAa5zB,GACpB/I,EAASqP,EAAKtC,MAAM4D,IAC1B,OAAK3Q,EAIEmR,GAAoBnR,EAAO,GAAIA,EAAO,GAAkB,KAAdA,EAAO,KAAcqP,EAAKtC,MAAM6D,KAHxEC,EAIX,CAhF+C+rB,CAAc7zB,GAAQ8H,EAAc,GAC9E,CAACwS,EAAS2W,GAzBE,MA0BT,SACJlpB,EAAQ,MAAEC,EAAK,YAAEC,EAAW,gBAAEC,IAC5ByT,EAAAA,EAAAA,GAAgB8X,EAA0B,CAACA,EAA0BnZ,IAAU,IAEnFoB,EAAAA,EAAAA,IAAc,EAAEoY,MACVA,GACFP,EAAe,CAAExrB,SAAU+rB,GAC7B,GACC,CAAC/rB,EAAUwrB,KAEdxlC,EAAAA,EAAAA,KAAU,KACHma,GAELorB,EAAe,CACbhoC,SAAQyc,SAAUG,EAAiBF,SACnC,GACD,CAAC1c,EAAQ0c,EAAOsrB,EAAgBprB,KAEnCna,EAAAA,EAAAA,IAAUujC,EAAsB,CAACA,EAAsBhX,IAEvD,MACEruB,GAAIqmC,EAAK,SACTI,EAAQ,cACRE,EAAa,OACbmB,EAAM,QACNjB,EAAO,UACPN,EAAS,KACTU,GACGhrB,GAAmBmb,IAAanb,IAAqB,CAAC,EAErD1Z,EAAStC,SAAS4mC,GAAShkC,QAAU4jC,KAActB,IAEzDrjC,EAAAA,EAAAA,KAAU,KACHS,GAAWuZ,GACdyrB,GACF,GACC,CAAChlC,EAAQglC,EAAoBzrB,IAEhC,MAAMqrB,GAAWp/B,EAAAA,EAAAA,IAAgB,KAC1BkU,GAELorB,EAAe,CACbhoC,SAAQyc,SAAUG,EAAiBF,QAAO+rB,UAC1C,IAGJ,MAAO,CACLvlC,SACA8jC,QACAE,YACAE,WACAE,gBACAE,UACAE,aAAc3B,EACd6B,KAAMjrB,GAAeirB,EAAQ,IAAGnrB,KAAYmrB,SAASlnC,EACrDonC,WAEJ,CiBumBMY,CACF9nC,QAAQ+7B,IAAmB7C,GAAW/F,KAA4B8K,IAClE7+B,EACAgvB,GACA+I,IAGI4Q,GAAkB/nC,QAAQ64B,IAAgBr3B,OAAO4nB,KAAKyP,IAAcj2B,SAGxEN,OAAQ0lC,GACRC,MAAOC,GACPC,oBAAqBC,GACrBC,qBAAsBC,IvBtsBX,SACbvD,EACA3W,EACAmJ,EACAyF,EACAnE,GAEA,MAAOsP,EAAqBI,IAA0B7hC,EAAAA,EAAAA,OAC/C2hC,EAAsBG,IAA2B9hC,EAAAA,EAAAA,OACjDw+B,EAAkBC,EAAoBC,IAAwB9jB,EAAAA,EAAAA,IAAQ,GAEvEmnB,GAAyBjB,EAAAA,EAAAA,KAAqB,KAClD,MAAM1zB,EAAOsa,IACb,OAAO2W,GAAajxB,EAAK2zB,WAAW,MAAOhC,EAAAA,EAAAA,GAAiB3xB,GAAMgE,MAAM9E,KAAc,GAAG01B,YAAS5oC,CAAS,GAC1G,CAACsuB,EAAS2W,GAhBE,KAkBT4D,GAAarZ,EAAAA,EAAAA,GACjBmZ,EAAwB,CAACA,EAAwBra,IAAU,GA8B7D,OA3BAvsB,EAAAA,EAAAA,KAAU,KACR,MAAM+mC,EAAUD,IACVlR,EAAWF,GAAeyF,EAChC,IAAK4L,IAAanR,IAAaoB,EAG7B,OAFA0P,OAAuBzoC,QACvB0oC,OAAwB1oC,GAI1B,MAAM8B,EAASgnC,EAAQC,UAAU,GAC3BC,EAA0BrR,GAAU71B,QAAQmnC,IAAOnnC,GAAUmnC,EAAEH,QAAQnB,WAAW7lC,KAExF2mC,EACEO,GAAyBlmC,OAASkmC,OAA0BhpC,GAG9D,MAAMkpC,EAA0BxnC,OAAOC,OAAOo3B,GAAgB,CAAC,GAAGj3B,QAAQqnC,IACvErnC,GAAUqnC,EAAWC,SAASzB,WAAW7lC,KAG5C4mC,EACEQ,GAAyBpmC,OAASomC,OAA0BlpC,EAC7D,GACA,CAAC6oC,EAAYpR,EAAayF,EAAiBnE,KAE9Ch3B,EAAAA,EAAAA,IAAUujC,EAAsB,CAACA,EAAsBhX,IAEhD,CACL9rB,OAAQtC,SAASmoC,GAAqBvlC,QAAUylC,GAAsBzlC,UAAYsiC,GAClF+C,MAAO9C,EACPgD,sBACAE,uBAEJ,CuBkpBMc,CACFnpC,QAAQ+7B,IACH7C,GACA/F,KACEoE,IAAeA,IAAa30B,QAAWo6B,IAAiBp6B,QAAWmlC,IAAmB1T,KAC7FjG,GACAmJ,GACAyF,GACA3I,GAAsBwE,QAAe/4B,GnB9rBxBspC,GACfthB,QACA1oB,SACA6gB,WACAmO,UACA+M,UACA1kB,gBACA0P,iBAUA,MAAM,UAAEkjB,EAAS,WAAEzP,EAAU,iBAAE0P,IAAqB5oC,EAAAA,EAAAA,MAE9C6oC,GAAenjC,EAAAA,EAAAA,KAAO,IAE5BvE,EAAAA,EAAAA,KAAU,KACR,MAAMiS,EAAOsa,IACPob,OAAkC1pC,IAAnBgoB,GAAO2hB,SACxB1J,EAAAA,EAAAA,GAA0BjY,GAAO1N,QAAUtG,GAAS01B,EAGtDD,EAAa39B,SAAU,EAFvB29B,EAAa39B,SAAU,CAGzB,GACC,CAACkc,EAAOsG,KACXvsB,EAAAA,EAAAA,KAAU,KACR0nC,EAAa39B,SAAU,CAAK,GAC3B,CAACxM,EAAQ6gB,IAEZ,MAAMoO,EAAYruB,QAAQyW,GAEpBizB,GAAc5hC,EAAAA,EAAAA,IAAgB,CAAC6hC,EAAsD,CAAC,KAC1F,GAAIxjB,GAAckI,IAAckb,EAAa39B,QAAS,OAEtD,MAAMkI,EAAOsa,IAETta,GACFiL,EAAAA,EAAAA,KAAe,KACbsqB,EAAU,CACRjqC,OAAQuqC,EAAUvqC,QAAUA,EAC5B6gB,SAAU0pB,EAAU1pB,UAAYA,EAChC7F,MAAMzC,EAAAA,EAAAA,IAAyB7D,IAC/B,IAGJ8lB,EAAW,CACTx6B,OAAQuqC,EAAUvqC,QAAUA,EAC5B6gB,SAAU0pB,EAAU1pB,UAAYA,EAChC2pB,iBAAiB,GAErB,IAGIC,GAA2BC,EAAAA,GAAAA,GAAgBC,EAAAA,KAAgB,OAAMjqC,EAAW,CAACV,EAAQ6gB,KAG3F+pB,EAAAA,GAAAA,IAA4B,EAAEjM,EAAYkM,EAAcC,MACtD,GAAI/jB,EACF,OAEF,MAAMgkB,EAAYZ,EAAa39B,QAE/B,GAAIxM,IAAW2+B,GAAc9d,IAAagqB,EAAc,CACtD,GAAIE,IAAcriB,EAAO,OAKzB,IAJKA,GAASoiB,GACZ/O,EAAQ,IAGNgP,EAAW,MACjB,CAEA,GAAI1zB,IAAkBqR,EACpB,OAGFqT,GAAQ4E,EAAAA,EAAAA,GAA0BjY,EAAM1N,OAExC,MAAMgwB,EAAiBtiB,EAAM1N,MAAMD,UAC/BxY,KAAKwtB,GAAWA,EAAOrS,OAASrD,EAAAA,GAAsBE,aAAewV,EAAOkb,aAC7EzoC,OAAO5B,UAAY,GAClBoqC,EAAexnC,QAAQ0mC,EAAiB,CAAEgB,IAAKF,GAAiB,GACnE,CAAChrC,EAAQ6gB,EAAU6H,EAAOsG,EAAS+M,EAAS1kB,EAAe0P,KAG9Dza,EAAAA,EAAAA,KAAgB,KACd,IAAIya,EAIJ,MAAO,KACAkI,GACHqb,EAAY,CAAEtqC,SAAQ6gB,aAvG5B3E,IAAW,GAEXyD,EAAAA,EAAAA,KAAe,KACbzD,IAAW,CAAK,GAuGN,CACT,GACA,CAAClc,EAAQ6gB,EAAUoO,EAAWqb,EAAavjB,IAE9C,MAAMokB,GAAYvG,EAAAA,EAAAA,GAAY5kC,GACxBorC,GAAcxG,EAAAA,EAAAA,GAAY/jB,IAChCpe,EAAAA,EAAAA,KAAU,KACR,GAAIskB,GAAc7K,GAChB,OAGF,IAAK8S,IAGH,YAFAsb,IAKF,MAAMe,EAAeF,EAAU3+B,QACzB8+B,EAAiBF,EAAY5+B,QAEnCi+B,GAAyB,KACnBU,EAAU3+B,UAAY6+B,GAAgBD,EAAY5+B,UAAY8+B,GAChEhB,GACF,GACA,GACD,CAACa,EAAWnc,EAASjI,EAAY0jB,EAA0BW,EAAad,KAE3EiB,EAAAA,GAAAA,GAAkBjB,IAClBkB,EAAAA,GAAAA,GAAgBlB,EAAY,EmBkkB5BN,CAAS,CACPthB,SACA1oB,SACA6gB,YACAmO,WACA+M,WACA1kB,cAAeyK,EACfiF,WAAY6V,IAAmBh8B,QAAQ2yB,MAGzC,MAAMkY,IAAgB/iC,EAAAA,EAAAA,IAAgB,CAACgjC,GAAsB,KACtDA,GACH3P,GAAQ,IAGV5kB,GAAeuqB,EAAAA,GACftqB,QAAY1W,GAEZskC,KACAM,KACAI,KACAiB,KAEIz/B,EAEFmZ,YAAW,IAAMwiB,MA7cY,KA+c7BA,IACF,KAGK8I,GAAoBC,GAAkBrkB,IlBvuB5BskB,EACjB7c,EACA+M,EACA1kB,EACAo0B,EACAzrC,EACA6gB,EACAnD,EACAgL,EACAyL,KAEA,MAAM,YACJqH,EAAW,gBAAEsQ,EAAe,qBAAE1c,EAAoB,uBAAE2c,IAClDzqC,EAAAA,EAAAA,OACGimB,EAAwBykB,IAA6B1kC,EAAAA,EAAAA,KAAS,GAE/D2kC,EAAevjB,GAAOE,WAAWK,cAEvCijB,EAAAA,EAAAA,IAAsB,EAAEC,EAAmBC,MACzC,IAAK/0B,EACH,OAGF,GAAI40B,GAAgBG,IAAqBH,EAGvC,OAFAlQ,EAAQ,SACRiQ,GAA0B,GAI5B,GAAIG,GAAmBxrC,KAAO0W,EAAc1W,IAAMsrC,IAAiBG,EACjE,OAGF,MAAMpxB,GAAQmxB,GAAqBhY,GAAcnZ,KAAKxX,OAAS2wB,EAAe9c,EAAchR,QAAQ2U,KAC9FtG,GAAOisB,EAAAA,EAAAA,GAA0B3lB,GAEvC+gB,EAAQrnB,GACRs3B,GAA0B,IAE1BxL,EAAAA,EAAAA,KAAoB,KAClB,MAAMV,EAAevsB,SAAS2Z,cAA8Bmf,EAAAA,KACxDvM,IACFW,EAAAA,EAAAA,GAAqBX,GAAc,EACrC,GACA,GACD,CAACzoB,EAAe40B,EAAc9X,EAAc4H,KAE/Ct5B,EAAAA,EAAAA,KAAU,KACR,IAAK4U,EACH,OAGF,MAAMi1B,IAAuB,YAAaj1B,EAAchR,UACnDgR,EAAchR,QAAQ2U,MAAMD,UAAU+O,MAAMiG,GAAW5T,GAAalE,IAAI8X,EAAOrS,QAEpF0R,EAAqB,CACnBpvB,SACA6gB,WACA6N,UAAW4d,GACX,GACD,CAACtsC,EAAQ6gB,EAAUxJ,KAEtB5U,EAAAA,EAAAA,KAAU,KACR,GAAK4U,EACL,MAAO,KACL,MAAMk1B,GAASh0B,EAAAA,EAAAA,IAAyByW,KAClCwd,EAASD,EAAOvxB,KAAKxX,OAAS+oC,OAAS7rC,EAE7CorC,EAAgB,CACd9rC,SAAQ6gB,WAAUnD,OAAM1C,KAAMwxB,GAC9B,CACH,GACA,CAACxsC,EAAQqX,EAAe2X,EAAS8c,EAAiBjrB,EAAUnD,IAE/D,MAAMgS,GAAsBC,EAAAA,EAAAA,KAAqB,KAC/C,IAAKtY,EAAe,OAAO,EAE3B,MAAMk1B,GAASh0B,EAAAA,EAAAA,IAAyByW,KACxC,QAAS,YAAa3X,EAAchR,UAC/BgR,EAAchR,QAAQ2U,MAAMD,UAAU+O,MAAMiG,GAAW5T,GAAalE,IAAI8X,EAAOrS,UAC7E6uB,EAAOxxB,UAAU+O,MAAMiG,GAAW5T,GAAalE,IAAI8X,EAAOrS,OAAO,GACvE,CAACrG,EAAe2X,GAnFD,KAmFwB,GAEpCyd,GAAmCvc,EAAAA,EAAAA,GAAiBR,EAAqB,CAACA,EAAqBV,IAAU,IAE/Gkd,EAAAA,EAAAA,IAAsB,EAAEC,MACjB90B,GAAiB80B,GAAmBxrC,KAAO0W,EAAc1W,IAI1D8rC,KACFrd,EAAqB,CACnBpvB,SACA6gB,WACA6N,WAAW,GAEf,GACC,CAACrX,EAAerX,EAAQgvB,EAASnO,EAAU4rB,IAE9C,MAAMC,GAA8BhkC,EAAAA,EAAAA,IAAgB,KAC7CggB,IAGL/I,EAAAA,EAAAA,KAAe,KACboc,GAAQ4E,EAAAA,EAAAA,GAA0BjY,EAAM1N,QAGxCwlB,EAAAA,EAAAA,KAAoB,KAClB,MAAMV,EAAevsB,SAAS2Z,cAA8Bmf,EAAAA,KACxDvM,IACFW,EAAAA,EAAAA,GAAqBX,GAAc,EACrC,GACA,GACF,IAGE8L,GAAmBljC,EAAAA,EAAAA,IAAgB,KACvC+iC,IACAiB,GAA6B,IAGzBf,GAAqBjjC,EAAAA,EAAAA,IAAgB,KACzC,MAAM,KAAEsS,EAAI,SAAED,IAAaxC,EAAAA,EAAAA,IAAyByW,KAE/C3X,IAIA2D,IAAS2xB,EAAAA,EAAAA,IAAgBt1B,IAS9BmkB,EAAY,CACVoR,YAAa,CAAE5sC,SAAQ6gB,WAAUnD,QACjC1C,OACAD,aAGF0wB,IACAiB,KAfEX,EAAuB,CACrB/rC,SACA4nB,WAAY,CAACvQ,EAAc1W,IAC3BksC,WAAqB,cAATnvB,IAYa,IAGzBovB,GAAapkC,EAAAA,EAAAA,IAAgB,KACjC,IAAK2O,EAAe,OACpB,MAAMk1B,GAASh0B,EAAAA,EAAAA,IAAyByW,KAClCwd,EAASD,EAAOvxB,KAAKxX,OAAS+oC,OAAS7rC,EAE7CorC,EAAgB,CACd9rC,SAAQ6gB,WAAUnD,OAAM1C,KAAMwxB,GAC9B,IAMJ,OAHAjB,EAAAA,GAAAA,GAAkBuB,IAClBtB,EAAAA,GAAAA,GAAgBsB,GAET,CAACnB,EAAoBC,EAAkBrkB,EAAuB,EkBukBEskB,CACrE7c,GACA+M,GACAja,EACA2pB,GACAzrC,EACA6gB,GACA2G,GACAkB,GACAyL,IAII4Y,IAAmBnI,EAAAA,EAAAA,GAAY6G,IAC/BuB,IAAwBpI,EAAAA,EAAAA,GAAYvB,KAC1C5gC,EAAAA,EAAAA,KAAU,IACD,KAELuqC,GAAsBxgC,UAEtBugC,GAAiBvgC,SAAS,GAE3B,CAACxM,EAAQ6gB,GAAUksB,GAAkBC,KAExC,MAAMC,IAAqCvkC,EAAAA,EAAAA,IAAgB,KACzD,MAAMwkC,EAAqBhP,GAA8B1xB,QAWvDgL,GAVG01B,EAUc,CACfvoC,QAAS0mB,GAAQ,2BACjBG,OAAQ,CACNA,OAAQ,WACR2hB,QAAS,CAAExsC,GAAI6pB,GAAe4iB,sBAAsB,IAEtDC,WAAYhiB,GAAQ,SAfL,CACf1mB,QAAS0mB,GAAQ,0BACjBG,OAAQ,CACNA,OAAQ,mBACR2hB,QAAS,CAAEG,eAAgB,mBAE7BD,WAAYhiB,GAAQ,iBAYxB6S,GAA8B1xB,QAAU+gC,QAAQL,EAAmB,IAG/DM,IAAkBnd,EAAAA,EAAAA,IAAgB,IACjC8M,KAAmB7C,IAAetL,OAAc6P,GAIjD/c,GAAkByF,GACb6J,GAAgBqc,MAGrBtJ,EAAAA,IAAiCZ,IAAyB/a,IAAkBwG,OAAc6P,GAI1F7J,EACK5D,GAAgBsc,SAGlBtc,GAAgBuc,KAPdvc,GAAgBwc,OARhBxc,GAAgByc,SAgBxB,CACDtK,GAAsBzhB,EAAgBkN,GAAS6P,GAAgBrW,GAAc2U,GAAiB7C,GAC9F/S,GAAwByN,IAEpB8Y,IAAyB9Y,GAG7BlJ,kBAAmBiiB,GAAoB,kBACvC/hB,GAAiB,uBACjBC,GAAsB,sBACtBC,KACEC,EAAAA,EAAAA,GAAuBuX,KAAiB8J,KAAoBpc,GAAgBuc,MAAQG,MAGtF/hB,kBAAmBiiB,GACnBhiB,kBAAmBiiB,GACnBC,wBAAyBC,GACzBjiB,sBAAuBkiB,KACrBjiB,EAAAA,EAAAA,GAAuB2P,IAAmBc,KAE9Cn6B,EAAAA,EAAAA,KAAU,KACJs2B,IAEAiV,KACF3S,GAAwB,CACtBgT,OAAQruC,EACRqxB,QAASA,GACTid,SAAUN,KAEZI,KACF,GACC,CAACpuC,EAAQouC,GAAkCrV,GAAsB1H,GAAS2c,KAE7E/2B,GACE8c,IAA2B6I,GAC3B8D,GACAW,GACAjqB,GACA0K,GACCuI,KAAyBf,GAC1B2jB,IAGF,MAAMsB,IAAsB7lC,EAAAA,EAAAA,IAAgB,KACtCoZ,GACF8pB,IACF,IAGI4C,IAAqB9lC,EAAAA,EAAAA,IAAgB,CAACsS,EAAcyzB,KACxD,MAAMC,EAAYD,EAAoB3V,GAAe7C,GACrD,GAAIjb,GAAMxX,OAASkrC,EAAW,CAC5B,MAAMC,EAAc3zB,EAAKxX,OAASkrC,EAYlC,OAXAjU,GAAW,CACTzwB,KAAM,CACJrF,QAAS,4CACTiqC,WAAY,CACV,sBAAuBD,EAAYE,WACnC,aAAcF,EAAc,EAAI,IAAM,IAExCG,aAAa,MAIV,CACT,CACA,OAAO,CAAI,IAGPC,IAAgBrmC,EAAAA,EAAAA,IAAgB,KACpC,GAAIwrB,KAAa2Q,GAAS,CACxB,MAAM/E,EAAevsB,SAAS2Z,cAA8B8M,IAEtDgV,GAAaC,EAAAA,EAAAA,MACbC,EAA0B7S,GAA2B7vB,SACtDnC,KAAKgB,MAAM2jC,EAAa3S,GAA2B7vB,SAClD2iC,EAAyBjb,GAASkb,cAAgBlb,GAASkb,aAAeJ,EAEhF,GACGE,GAA2BA,EAA0Bhb,GAASmb,SAC5DF,EACH,CACA,MAAMG,EAAmBH,EACrBjb,GAASkb,aAAgBJ,EACzB9a,GAASmb,QAAUH,EAWvB,OAVAzU,GAAW,CACTzwB,KAAM,CACJrF,QAAS0mB,GAAQ,gBAAgBpa,EAAAA,EAAAA,IAAoBq+B,IACrDC,YAAY,EACZT,aAAa,KAIjBhP,GAAc0P,QAEP,CACT,CACF,CACA,OAAO,CAAI,IAGPC,IAAkB/mC,EAAAA,EAAAA,IAAgB,EACtCsT,YAAa0zB,EACbC,iBAAiB/gB,GAAmBghB,eACpCC,cAAcjhB,GAAmBkhB,kBACjCC,WACAC,cACAzgB,sBASA,IAAKuE,KAAuBzC,GAC1B,OAEF0e,EAAWA,GAAY7a,GAEvB,MAAM,KAAEla,EAAI,SAAED,IAAaxC,EAAAA,EAAAA,IAAyByW,OAC/ChU,GAAS00B,EAAkBlsC,SAG3BgrC,GAAmBxzB,GAAM,IACzB+zB,OAELxf,EAAkBvU,GAAQ20B,GAAkBE,EAActgB,OAAkB7uB,EAExEohB,EACF0Z,GAAY,CACVoR,YAAa9Y,GACb9Y,OACAD,WACAiB,aAAai0B,EAAAA,EAAAA,GAAyBP,EAAmBC,KAG3DpV,GAAY,CACVqS,YAAa9Y,GACb9Y,OACAD,WACAi1B,cACAD,WACA1d,+BACArW,aAAai0B,EAAAA,EAAAA,GAAyBP,EAAmBC,GACzDO,oBAAqBL,EACrBtgB,oBAIJ8M,GAA2B7vB,SAAUyiC,EAAAA,EAAAA,MAErCzU,GAAW,CAAEx6B,SAAQmwC,aAAa,KAGlCxwB,EAAAA,EAAAA,KAAe,KACb8rB,IAAe,IACf,IAGE2E,IAAiC1nC,EAAAA,EAAAA,IAAgB,CACrDinC,EACAE,EACAtgB,KAEAkgB,GAAgB,CACdzzB,eACA2zB,iBACAE,cACAtgB,mBACA,IAGE8gB,IAAwB3nC,EAAAA,EAAAA,IAAgB,CAC5CinC,EACAE,EACAE,EACAC,EACAzgB,KAEAkgB,GAAgB,CACdzzB,eACA2zB,iBACAE,cACAE,WACAC,cACAzgB,mBACA,IAGE+gB,IAAa5nC,EAAAA,EAAAA,IAAgBkP,MAAOm4B,GAAW,EAAOC,KAC1D,IAAKlc,KAAuBzC,GAC1B,OAGF0e,EAAWA,GAAY7a,GAEvB,IAAIqb,EAAqBv0B,GAEzB,GAAIunB,GAAsB,CACxB,MAAMiN,QAAenN,KACfoN,EAAa7M,GAAoB8M,EAAAA,SAA6BhwC,EACpE,GAAI8vC,EAAQ,CACV,MAAM,KAAEvwB,EAAI,SAAE7W,EAAQ,SAAEe,GAAaqmC,EACrCD,EAAqB,OAAO90B,EAAAA,EAAAA,GAxuBH,8BA0uBvBwE,EACA,CAAEzZ,MAAO,CAAE4C,WAAUe,YAAYsmC,eAErC,CACF,CAEA,MAAM,KAAEz1B,EAAI,SAAED,IAAaxC,EAAAA,EAAAA,IAAyByW,MAEpD,GAAIuhB,EAAmB/sC,OAMrB,YALAisC,GAAgB,CACdzzB,YAAau0B,EACbP,cACAD,aAKJ,IAAK/0B,IAASwN,GACZ,OAGF,IAAKgmB,GAAmBxzB,GAAO,OAE/B,MAAM8kB,EAAevsB,SAAS2Z,cAA8B8M,IAEtDpE,EAAWC,IAAQl1B,GAEzB,GAAIqa,EAAM,CACR,IAAK+zB,KAAiB,OAEtB,MAAMxf,EAAkBgQ,GAAoB3Q,GAAmBW,qBAAkB7uB,EAE7E40B,IAAqBmG,GAAkB,CAAEz7B,SAAQ6gB,YAAU+U,cAAUl1B,IAEzE65B,GAAY,CACVqS,YAAa9Y,GACb9Y,OACAD,WACAi1B,cACAD,WACA1d,+BACA9C,kBACAqG,WACAnG,iBAAkBb,GAAmBa,iBACrCkhB,WAAYpR,GAAoBzQ,GAAgBkB,SAAMtvB,GAE1D,CAEI8nB,IACFf,GAAgB,CACduoB,cACAD,aAIJ1T,GAA2B7vB,SAAUyiC,EAAAA,EAAAA,MACrCzU,GAAW,CACTx6B,SAAQ6gB,YAAUsvB,aAAa,EAAM3F,gBAAiBhiB,KAGpDlV,EAAAA,IAAUwsB,GAAgBA,IAAiBvsB,SAAS4E,eACtDhF,EAA8B2sB,IAIhCngB,EAAAA,EAAAA,KAAe,KACb8rB,IAAe,GACf,IAGEmF,IAAqBloC,EAAAA,EAAAA,IAAgB,KACzC,GAA4B,WAAxB4vB,IAAe5a,KACjB,OAGF,MAAMmzB,GAAaC,EAAAA,EAAAA,IAAiBxY,GAActI,KAEzB,4BAArB6gB,GAAYnzB,MAAsCmzB,EAAWE,SAC/DC,EAAAA,EAAAA,GAAgB1Y,GAActI,KAE9BkL,GAAc,CACZl7B,SAAQgwB,IAAKsI,GAActI,IAAKnP,aAEpC,IAGIowB,IAA+BvoC,EAAAA,EAAAA,IAAgB,KACnDm6B,KACAJ,IAAoB,IAGhByO,IAAwBxoC,EAAAA,EAAAA,IAAgB,CAC5CyoC,EAA4BnB,EAAqBpD,EAA0BhX,KAE3E,GAAIub,GAAQ,YAAaA,EAAM,CAC7B,MAAM,GAAExwC,EAAE,QAAEywC,EAAO,SAAErB,GAAaoB,EASlC,YARApW,GAAoB,CAClBp6B,KACAX,SACA6gB,YACAuwB,UACApB,cACAD,SAAUA,GAAY7a,IAG1B,CAEA,MAAM,SAAE6a,KAAasB,GAAaF,GAAQ,CAAC,EAE3C,GAAKA,GAAyC,IAAjC/uC,OAAO4nB,KAAKqnB,GAAU7tC,OAE5B,QAA4B9C,IAAxBywC,EAAKxB,qBAAqDjvC,IAArBywC,EAAKtB,YAA2B,CAC9E,MAAM,eAAEF,GAAiB,EAAK,YAAEE,GAAc,EAAK,gBAAEtgB,GAAoB4hB,EACpEd,GAAsBV,EAAgBE,EAAaE,EAAUC,EAAazgB,EACjF,MACEgL,GAAY,IACP4W,EACHvE,cACAoD,cACApa,kBATG0a,GAAW1vC,QAAQmvC,GAAWC,EAWrC,KAGF9D,EAAAA,EAAAA,IAAsB,EAAEoF,MAClBxd,IAAsB8D,IAAwBA,KAAyB0Z,GACzEnT,IAAiB6R,IACfkB,GAAsBtZ,GAAsBoY,EAAalc,GAAmB,GAEhF,GACC,CAAC8D,GAAsB9D,GAAoBod,GAAuB/S,MAErE17B,EAAAA,EAAAA,KAAU,KACJ8wB,KACFmN,GAAmCnN,IACnC0H,MAEAuF,EAAAA,EAAAA,KAAoB,KAClB,MAAMV,EAAevsB,SAASwsB,eAAe9F,KAC7CwG,EAAAA,EAAAA,GAAqBX,GAAc,EAAK,IAE5C,GACC,CAAC7F,GAAiB1G,GAAgB0H,GAAwBc,MAE7Dt5B,EAAAA,EAAAA,KAAU,KACJgxB,IAAqBjwB,SAClB+f,GAAiBkQ,IACtBwH,KACF,GACC,CAAC1X,GAAkBkQ,GAAqBwH,KAE3C,MAAMsW,IAA0B7oC,EAAAA,EAAAA,IAAgB,CAACm4B,EAAmBlB,KAClE,MAAM6R,EAAa,OAAQ3Q,EAAM4Q,gBAAkB5Q,EAAM4Q,eAAe9wC,GACnEkgC,EAAM6Q,QAAWrnB,IAAyBf,IAAkBkoB,IAAe3T,GAKhF+C,GAAiCC,EAAOlB,GAJtCsN,IAIgD,IAG9C0E,IAAyCjpC,EAAAA,EAAAA,IAAiBm4B,IAC9D0Q,GAAwB1Q,EAAO9pB,EAAAA,IAAwB,IAGnD66B,IAAkBlpC,EAAAA,EAAAA,IAAgB,CAACmpC,EAAe9B,EAAoB+B,MACrEhe,IAAuBzC,MAI5B0e,EAAWA,GAAY7a,GAEnBF,GAAqB8c,GACvB/U,KACAoB,IAAiB6R,IACfhT,KACAkU,GAAsB,CAAEW,MAAK9B,YAAYC,EAAalc,KACtDnU,EAAAA,EAAAA,KAAe,KACb8rB,IAAc,EAAK,GACnB,MAGJlR,GAAY,CAAEqS,YAAa9Y,GAAoB+d,MAAK9B,cACpDpwB,EAAAA,EAAAA,KAAe,KACb8rB,IAAc,EAAK,KAEvB,IAGIsG,IAAsBrpC,EAAAA,EAAAA,IAAgB,CAC1CspC,EACAjC,EACA+B,EACApG,GAAsB,EACtBuG,MAEKne,IAAuBzC,MAI5B0e,EAAWA,GAAY7a,GAEvB8c,EAAU,IACLA,EACHE,qBAAqB,GAGnBld,GAAqB8c,GACvB/U,KACAoB,IAAiB6R,IACfhT,KACAkU,GAAsB,CAAEc,UAASjC,YAAYC,EAAalc,KAC1DnU,EAAAA,EAAAA,KAAe,KACb8rB,GAAcC,EAAoB,GAClC,MAGJnR,GAAY,CACVqS,YAAa9Y,GACbke,UACAjC,WACA1d,4BAA6BA,IAA+B4f,IAE9DzX,GAAW,CAAEx6B,SAAQ6gB,YAAUsvB,aAAa,KAE5CxwB,EAAAA,EAAAA,KAAe,KACb8rB,GAAcC,EAAoB,KAEtC,IAGIyG,IAAwBzpC,EAAAA,EAAAA,IAAgB,CAC5C0pC,EAA4DrC,EAAoB+B,KAEhF,IAAKhe,KAAuBzC,GAC1B,OAGF0e,EAAWA,GAAY7a,GAEnBF,GAAqB8c,EACvB3T,IAAiB6R,IACfkB,GAAsB,CACpBvwC,GAAIyxC,EAAazxC,GACjBywC,QAASgB,EAAahB,QACtBrB,YACCC,EAAalc,GAAoB,IAGtCiH,GAAoB,CAClBp6B,GAAIyxC,EAAazxC,GACjBywC,QAASgB,EAAahB,QACtBvwB,YACA7gB,SACA+vC,aAIJ,MAAMjQ,EAAevsB,SAAS2Z,cAA8B8M,IACxD1mB,EAAAA,IAAUwsB,GAAgBA,IAAiBvsB,SAAS4E,eACtDhF,EAA8B2sB,GAGhCtF,GAAW,CAAEx6B,SAAQmwC,aAAa,KAClCxwB,EAAAA,EAAAA,KAAe,KACb8rB,IAAe,GACf,IAGE4G,IAAyB3pC,EAAAA,EAAAA,IAAgB,KAC7C8xB,GAAW,CAAEx6B,SAAQmwC,aAAa,KAClCxwB,EAAAA,EAAAA,KAAe,KACb8rB,IAAe,GACf,IAGE6G,IAAiB5pC,EAAAA,EAAAA,IAAiB6pC,IACjCze,KAIDkB,GACFmJ,IAAiB6R,IACfkB,GAAsB,CAAEqB,QAAQvC,EAAalc,GAAmB,IAElE6G,OAEAJ,GAAY,CAAEqS,YAAa9Y,GAAoBye,OAAMxC,SAAU7a,KAC/DyF,MACF,IAGI6X,IAAa9pC,EAAAA,EAAAA,IAAiB+pC,IAClC,GAAIzd,EACFmJ,IAAiB6R,IACfkB,GAAsB,IAAKuB,EAAgB1C,UAAU,GAAQC,EAAalc,GAAoB,SAE3F,GAAI2e,IAAmB,mBAAoBA,GAAkB,gBAAiBA,GAAiB,CACpG,MAAM,eAAE9C,GAAiB,EAAK,YAAEE,GAAc,EAAK,gBAAEtgB,GAAoBkjB,EACpEpC,GAAsBV,EAAgBE,GAAa,OAAMnvC,EAAW6uB,EAC3E,MACO+gB,IAAW,EAClB,IAGIoC,IAAuBhqC,EAAAA,EAAAA,IAAgB,KAC3C,MAAMo3B,EAAevsB,SAAS2Z,cAA8B8M,IAE5D,IAAK9yB,GAAY44B,IAAiBvsB,SAAS4E,cAIzC,OAHAuqB,KACAG,UACAE,KAIFjD,GAAc0P,OACdnvB,YAAW,KACTqiB,KACAG,KACAE,IAAgB,GAriCgB,IAsiCD,KAGnCtgC,EAAAA,EAAAA,KAAU,KACH+8B,IAELzD,GAAQ,GAAG,GACV,CAACyD,GAAmBzD,GAAS/f,KAEhC,MAAM22B,IAA2CjqC,EAAAA,EAAAA,IAAiBsS,IAChE9D,GAA0B8D,EAAMjE,EAAAA,IAAwB,IAGpD67B,IAAelqC,EAAAA,EAAAA,IAAgB,CAACi3B,EAAY1F,MAChD,MAAM2F,EAAY77B,OAAO87B,eAEzB,GAAID,EAAUI,WAAY,CACxB,MAAMC,EAAiBL,EAAUM,WAAW,GAC5C,IAAIC,EAAAA,EAAAA,GAAuBF,EAAgBN,GAEzC,YADApsB,SAASs/B,YAAY,UAAU,EAGnC,CAEA9W,GGz2CW,SAA6CrnB,GAC1D,MAAMo+B,EAAYv/B,SAASlQ,cAAc,OACzCyvC,EAAUC,gBAAkB,OAC5BD,EAAUtuC,MAAM8pC,SAAW,WAC3BwE,EAAUtuC,MAAM0K,KAAO,WACvB4jC,EAAUtuC,MAAMwuC,IAAM,WACtBF,EAAU95B,UAAYtE,EACtBo+B,EAAU5xC,UAAY,kBACtBqS,SAASG,KAAKC,YAAYm/B,GAC1B,IAAIG,EAAUH,EAAUI,UAExB,GAAID,EAAQC,UAEV,KAAOD,EAAQC,WACbD,EAAUA,EAAQC,UAKtB,MAAMC,EAAaF,EAAQn9B,YAAatS,OAClC4vC,EAAQ7/B,SAAS8/B,cACjBzT,EAAY77B,OAAO87B,eAGzBuT,EAAME,SAASL,EAASE,GACxBC,EAAMG,OAAON,EAASE,GACtBvT,EAAU4T,kBACV5T,EAAU6T,SAASL,GACnB7/B,SAASs/B,YAAY,UAAU,GAE/B,MAAMlnC,EAASmnC,EAAU95B,UAGzB,OAFAzF,SAASG,KAAKggC,YAAYZ,GAEnBnnC,CACT,CHu0CYgoC,CAAoC3kB,MAAW,IAGnD4kB,IAA8BlrC,EAAAA,EAAAA,IAAgB,KAClDkqC,GAAa77B,EAAAA,IAAwB,IAGjC88B,IAA0BnrC,EAAAA,EAAAA,IAAgB,KAC9CmyB,GAAW,CACT76B,SAAQ6gB,YAAUnD,KAAM,YAAagP,mBAAmB,GACxD,IAGEonB,IAA4BprC,EAAAA,EAAAA,IAAgB,KAChD,MAAMi5B,GAAYzM,GAClB0G,GAAwB,CAAE57B,SAAQ2lC,UAAWhE,IAE7CnqB,GAAiB,CACfu8B,QAAS,gBACTluB,KAAM8b,EAAW,OAAS,SAC1Bh9B,QAASpD,GAAM,wBAAuBogC,EAAW,UAAY,sBAC7D,KAGJl/B,EAAAA,EAAAA,KAAU,KACJk0B,IAAsBzvB,GACxB27B,IACF,GACC,CAAClM,GAAoBkM,GAAiB37B,KAEzCzE,EAAAA,EAAAA,KAAU,KACHq3B,IAEDjD,GACFqM,KAEA7iB,YAAW,KACT8iB,IAAa,GAlmCa,KAomC9B,GACC,CAACtM,GAAoBsM,GAAaD,GAAcpJ,IAEnD,MAAM3e,IAAUkV,EAAAA,EAAAA,IAAgB,IAAMzvB,QAAQouB,OAAY,CAACA,KAErDglB,GAAoBviB,IAAyC,WAAxB6G,IAAe5a,OAAsBoE,GACvD,WAApB0F,GACCysB,GAAsBD,KAAsB74B,KAAYooB,IAEvD2Q,GAAyBC,KAAwBtyC,EAAAA,EAAAA,KAAQ,IAC1DqyB,IAAUkb,aACL,CAAC,eAAgBlb,GAASkb,cAG/B9V,IAAa8a,aAAexX,GACvB,CAAC,wBAAyBtD,GAAY8a,aAGxC,IACN,CAACxX,GAAiB1I,IAAUkb,aAAc9V,IAAa8a,cAEpDC,GAAqBhS,IAAqBM,IAAoBoC,IAAsBjC,IACrF4D,IAAwBK,IAA0BvE,IAAwBzgB,IAC1E0jB,IAAwBmD,IAA4BvD,IAA4B4O,IAClFlG,IAAwBntC,QAAQ2iC,KAAyBvnB,GAAYxY,OAAS,GAAK25B,GAChFmX,GAAyBD,KAAuBtb,IAAwB6D,KAAoB7a,KAC5F4gB,GAEA4R,IAAc1yC,EAAAA,EAAAA,KAAQ,IACtB0hC,IAAwB/G,IApoCS,IAqoC5B,GAGJgD,GAcuBj+B,GAAxBq7B,GAA6B,iCAErB,6BAfN3F,IACA8C,KACA95B,IAAM20B,SAAW30B,IAAM40B,mBAAqBhU,KAAaiU,EAAAA,GACpDH,GACHpzB,GAAK,2BAA4B,CAAEizC,MAAO7f,GAAa5kB,QACvDxO,GAAK,mCAGFA,GADLm1B,GACUxB,GAAkB,qCAAuC,+BAE3D,yBAMb,CACDqO,GAAsBtM,GAAwBh3B,GAAM85B,GAAkBrD,GAAW8I,GACjF5C,GAAiB1H,GAAiB3zB,GAAMozB,GAAc9T,GAAU2b,MAGlE/5B,EAAAA,EAAAA,KAAU,KACJ4xC,GACFja,OAEAC,MACF,GACC,CAACga,GAAoBha,GAAQD,KAEhC,MACEp3B,aAAcyxC,GACdjmC,qBAAsBkmC,KACpBhmC,EAAAA,EAAAA,GAA4B4lC,IAC1BK,KAA6BnH,KAAoBpc,GAAgBwc,QAChE7sB,IAAmBiT,IAA0BkL,IAE9C0V,IAAoBlsC,EAAAA,EAAAA,IAAgB,KACxC,OAAQ8kC,IACN,KAAKpc,GAAgByc,QACnBvT,OACA,MACF,KAAKlJ,GAAgBuc,KACd2C,KACL,MACF,KAAKlf,GAAgBwc,OACf+G,GACG3gB,GAIOkL,IACV9D,GAAoC,CAAEp7B,WAJtCwX,GAAiB,CACf7S,QAAS0mB,GAAQ,mCAAoCprB,IAAM8P,UAM/D8zB,IAAqB,GAChBT,MAEP,MAEF,KAAKhS,GAAgBqc,KACnB9B,KACA,MACF,KAAKva,GAAgBsc,SAInB,GAHInK,IACFD,MAEGxP,GACH,OAEFqK,IAAiB6R,IACfkB,GAAsB,CAAC,EAAGlB,EAAalc,GAAoB+B,IAAQl1B,GAAG,IAK5E,IAGIk0C,GAAuB,IAAI12B,KACjC02B,GAAqBC,WAAW,GAChCD,GAAqBE,gBAAgB,GAErC,MAAMC,GAAmB,IAAI72B,KAC7B62B,GAAiBC,YAAYD,GAAiBE,cAAgB,GAE9D,IAAIC,GAAsB,cAC1B,OAAQ3H,IACN,KAAKpc,GAAgByc,QACnBsH,GAAsB,UACtB,MACF,KAAK/jB,GAAgBqc,KACnB0H,GAAsB,sBACtB,MACF,KAAK/jB,GAAgBwc,OACnBuH,GAAuBp0B,GAEnB,uBADA,sCAIR,MAAM1Q,IAAgB/M,EAAAA,EAAAA,GACpB,YACCuzB,IAAsB,QACvBoM,IAAmB,iBACnBhH,IAAa,UACb/6B,IAGIk0C,IAAuB1sC,EAAAA,EAAAA,IAAiB2sC,IAC5C,IAAIr6B,EACAD,EAMJ,GAJsB,UAAlBs6B,EAAS33B,OACX1C,EAAOq6B,EAASC,UAGI,WAAlBD,EAAS33B,KAAmB,CAC9B,MAAMs0B,GAAUjwC,EAAAA,EAAAA,MAAYy1B,aAAav1B,KAAKozC,EAASpK,YACvD,IAAK+G,EACH,OAGF,IAAKA,EAAQN,SAAWrnB,KAAyBf,GAE/C,YADA2jB,KAGF,MAAMsI,GAAqBh9B,EAAAA,EAAAA,KAAyBuoB,EAAAA,EAAAA,IAAqBkR,IACzEh3B,EAAOu6B,EAAmBv6B,KAC1BD,EAAWw6B,EAAmBx6B,QAChC,CAEAwf,GAAY,CAAEvf,OAAMD,WAAUy6B,YAAY,IAC1Cla,IAAqB,IAGjBma,IAA6B/sC,EAAAA,EAAAA,IAAiB2sC,IAClD3Z,GAAkB,CAAE17B,SAAQ6gB,YAAUw0B,aAEtC/Z,IAAqB,IAGjBoa,IAA2BhtC,EAAAA,EAAAA,IAAiB4lC,IAChDjT,GAAwB,CACtBgT,OAAQruC,EACRqxB,QAASA,GACTid,WACAqH,eAAe,GACf,IAGEC,IAAkBltC,EAAAA,EAAAA,IAAgB,KACtC,MAAM2sC,EAAW7gB,QAAoB9zB,EAAYs9B,EAAAA,IACjDzC,GAAkB,CAChB8S,OAAQruC,EACRqxB,QAASA,GACTwkB,aAAaC,EAAAA,EAAAA,IAAY91C,EAAQqxB,IACjCgkB,YACA,IAGEU,IAAsBrtC,EAAAA,EAAAA,IAAgB,KAC1Cy1B,IAAiB6R,IACfkB,GAAsB,CAAC,EAAGlB,EAAalc,GAAoB,GAC3D,IAGEkiB,IAAmBttC,EAAAA,EAAAA,IAAgB,KACvC8pC,IAAY,IAGRyD,IAAuBvtC,EAAAA,EAAAA,IAAgB,KAC3CwoC,GAAsB,CAAC,EAAGgF,EAAAA,IAAuBpiB,GAAqB+B,IAAQl1B,GAAG,IAG7Ew1C,IAAiCztC,EAAAA,EAAAA,IACrC,CAACinC,EAAyBE,EAAsBtgB,KAC9C4O,IAAiB6R,IACfkB,GAAsB,CAAEvB,iBAAgBE,cAAatgB,mBAAmBygB,EAAalc,GAAoB,GACzG,IAIAsiB,IAA8B1tC,EAAAA,EAAAA,IAClC,CAACinC,EAAyBE,EAAsBtgB,KAC9CijB,GAAW,CAAE7C,iBAAgBE,cAAatgB,mBAAkB,IAI1D8mB,IAAqB3tC,EAAAA,EAAAA,IAAgB,KAAQ+yB,GAAkB,CAAEz7B,SAAQ6gB,YAAU+U,cAAUl1B,GAAY,IAEzG41C,IAAmB5tC,EAAAA,EAAAA,IAAgB,KAAQizB,GAAqB,CAAE,EAAE,IAEpE4a,IAAS10C,EAAAA,EAAAA,KAAQ,KACrB,OAAQ2rC,IACN,KAAKpc,GAAgBqc,KACnB,OAAO9B,GACT,KAAKva,GAAgBsc,SACnB,OAAOqI,GACT,QACE,OAAOzF,GACX,GACC,CAAC9C,GAAiB7B,KAEf6K,GAAkB/kB,IAAyC,aAAxB6G,IAAe5a,OAAwBoE,IAC3D,IAAhBqW,KAA0BoL,GAEzBkT,GAAcnhB,IAAuBO,IAAQyf,SAEnD,OACElyC,EAAAA,GAAAC,cAAA,OAAKnC,UAAWmP,IACbssB,IAAmB5b,IAAkB+Y,GACpC12B,EAAAA,GAAAC,cAAC6qB,GAAQ,CACPhrB,OAAQ22B,IAAkB6c,GAAAA,EAAcC,KACxCC,UAAW/c,IAAkB6c,GAAAA,EAAcG,WAAava,KAAsBoa,GAAAA,EAAcG,UAC5FC,OAAQ3c,GACR1Y,aAAc8B,GACdzB,eAAgBA,IAGnB2yB,KAAiCpV,IAChCj8B,EAAAA,GAAAC,cAAC0zC,GAAAA,EAAgB,CACf1gB,aAAcA,GACd2gB,sBAAuB5gB,GACvB6gB,iBAAkB7B,GAClB8B,WAAS,EACTpd,QAASA,EACTb,cAAeA,GACf5O,qBAAsBA,GACtB8sB,kBAAmB7tB,GACnBsT,gBAAiBA,GACjBzD,sBAAuBA,GACvBie,WAAY1B,GACZx0C,UAAWwzC,KAGftxC,EAAAA,GAAAC,cAACmd,GAAe,CACdxgB,OAAQA,EACR6gB,SAAUA,GACVitB,sBAAuBA,GACvB9xB,YAAaA,GACbgT,QAASA,GACT8K,QAASA,EACTtW,yBAA0BA,GAC1Bwd,uBAAwBA,GACxBC,kBAAmBA,GACnBlN,wBAAyBA,GACzBsjB,aAAc1a,GACd2a,eAAgBtiB,EAChBuiB,eAAgB3a,GAChBuE,gBAAiBA,GACjBqW,aAAcpB,GACdG,OAAQnG,GACRqH,gBAAiBtB,GACjBuB,aAAcxW,GACdxW,QAAS0W,GACTuW,oBAAqBtW,GACrBuW,oBAAqBjG,GACrBkG,eAAgBjE,GAChBkE,cAAenF,GACf7wB,eAAgBA,EAChBi2B,iBAAkB9B,GAClBzf,uBAAwBA,IAA2BoN,KAErDxgC,EAAAA,GAAAC,cAACgrB,GAAS,CACRnrB,OAAQi0B,GAAUj0B,OAClB80C,OAAQ7gB,GAAU6gB,OAClBC,kBAAmBvhB,GACnBhM,QAASiQ,GACT4b,OAAQjE,KAEVlvC,EAAAA,GAAAC,cAACirB,GAAU,CACTprB,OAAQ4/B,GACRzd,QAAS2d,GACThjC,OAAQA,EACRk4C,iBAAkBllB,GAClBC,cAAeA,GACf5I,qBAAsBA,KAExBjnB,EAAAA,GAAAC,cAAC+qB,GAAc,CACblrB,OAAQwjC,GACRyR,cAAetR,GACfuR,iBAAkBxR,GAClBvhB,QAASshB,KAEXvjC,EAAAA,GAAAC,cAACikB,GAAkB,CACjBpkB,OAAQ0lC,GACR5oC,OAAQA,EACRq4C,aAAcz3C,QAAQg9B,IACtBzF,YAAa6Q,GACbvP,aAAcyP,GACdla,QAASA,GACTspB,KAAMzlB,GACN2G,mBAAoBA,GACpBj2B,QAAS8uC,GACThtB,QAASyjB,KAEX1lC,EAAAA,GAAAC,cAAA,OAAKnC,WACHoC,EAAAA,EAAAA,GAAe,mBAAoBs5B,IAAmB,oBAAqByC,IAAiB,qBAG1FA,IACAj8B,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,eAAe0L,MAAM,IAAIC,OAAO,MAC7CzJ,EAAAA,GAAAC,cAAA,YACED,EAAAA,GAAAC,cAAA,UACEiK,EAAE,OACFC,EAAE,SACFX,MAAM,OACNC,OAAO,SACP0rC,YAAY,oBACZ53C,GAAG,oBAEHyC,EAAAA,GAAAC,cAAA,YAAUm1C,GAAG,IAAIC,GAAG,cAAc9sC,OAAO,uBACzCvI,EAAAA,GAAAC,cAAA,kBAAgBq1C,aAAa,IAAID,GAAG,qBAAqB9sC,OAAO,qBAChEvI,EAAAA,GAAAC,cAAA,iBACEhB,OAAO,4EACPo2C,GAAG,uBAITr1C,EAAAA,GAAAC,cAAA,KAAGkH,KAAK,OAAO,YAAU,WACvBnH,EAAAA,GAAAC,cAAA,QAAMs1C,EAAE,0FAA0FpuC,KAAK,OAAO/H,OAAO,2BACrHY,EAAAA,GAAAC,cAAA,QAAMs1C,EAAE,0FAA0FpuC,KAAK,OAAOrJ,UAAU,aAI7Hy7B,IACCv5B,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACEpP,EAAAA,GAAAC,cAAC8qB,GAAgB,CACfjrB,OAAQ6jC,GACRC,MAAOC,GACPC,UAAWC,GACXM,iBAAkBA,GAClBL,SAAUC,GACVC,cAAeC,GACfO,SAAUC,GACV6Q,gBAAiBtvB,GACjB0V,YAAaA,GACb3U,qBAAsBA,GACtBwuB,eAAgB1G,GAChB9sB,QAASsiB,KAEXvkC,EAAAA,GAAAC,cAAConB,GAAuB,CACtBC,QAAS6jB,GACThnB,uBAAwB3mB,QAAQ2mB,IAA0BzF,GAC1D9hB,OAAQA,EACR6gB,SAAUA,GACV2G,gBAAiBA,KAEnBpkB,EAAAA,GAAAC,cAAC0rB,GAAc,CACb/uB,OAAQA,EACR6gB,SAAUA,GACVmO,QAASA,GACTjI,YAAakY,IAAuBJ,GACpC5P,UAAWruB,QAAQkhB,MAIzB1e,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GAAe,yBAAyB+pB,EAAAA,EAAAA,GAAkBwF,MACvE8J,IACCv5B,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACGwhC,IACC5wC,EAAAA,GAAAC,cAACyjB,GAAa,CACZ5jB,OAAQ+wC,GACRj5B,KAAMsd,GAActd,KACpB+L,WAAYnmB,QAAQ2iC,IACpBhgC,QAASqtC,KAGZ4F,IACCpzC,EAAAA,GAAAC,cAACuhB,GAAAA,EAAqB,CACpB1jB,WAAWoC,EAAAA,EAAAA,GAAe,eAAgBk/B,IAAwB,aAClE3+B,OAAK,EACLmhB,cAA0BtkB,IAAhBy3B,GACV5mB,MAAM,cACNsT,WAAYosB,GACZz/B,UAAU,6BAEVpO,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,yBAGdwrB,KAAkBxJ,IAAcC,KAC/BlwB,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACLC,OAAK,EACL0N,MAAM,cACNhO,QAASu/B,GAAmBE,GAAkB0P,GAC9ClhC,UAAW6Z,GAAQ,sBACnBnqB,WAAWoC,EAAAA,EAAAA,GACT,iBACA,yBACAo7B,GAA6BlyB,SAAW,qBAG1CpJ,EAAAA,GAAAC,cAACy1C,GAAAA,EAAM,CACL5lB,KAAMG,IAAcC,GACpB5vB,KAAK,aAMX87B,IAAqBR,IAAeD,MAAqBM,IAC3Dj8B,EAAAA,GAAAC,cAAC01C,GAAAA,EAAgB,CACf/4C,OAAQA,EACR6gB,SAAUA,GACV3Z,SAAUA,EACV4yB,QAASA,EACT6I,iBAAkBA,GAClBC,eAAgBA,GAChBC,gBAAiBA,GACjB9D,gBAAiBA,GACjBC,YAAaA,GACbga,kBAAmBrc,GACnBsc,YAAarH,GACbsH,gBAAiBnH,GACjB6F,oBAAqBrG,GACrBsG,eAAgBjF,GAChBkF,cAAe5gC,GACfwrB,oBAAqBA,GACrBM,gBAAiBA,GACjBlG,mBAAoBA,GACpBqC,kBAAmBK,GACnB2Z,iBAAkBnf,GAClBof,SAAU17B,EACV65B,eAAgB3a,KAGpBx5B,EAAAA,GAAAC,cAACg2C,GAAAA,EAAY,CACXt2C,IAAK84B,GACLl7B,GAAIu5B,GACJD,gBAAiBA,GACjBqf,kBAAmB57B,EACnB67B,aAAc3c,GACd58B,OAAQA,EACRm/B,kBAAmBK,GACnB3e,SAAUA,GACViZ,QAASA,EACTz5B,UAAWw+B,GACX7P,QAASA,GACTulB,YAAaA,GACbJ,qBAAsBA,GACtBD,wBAAyBA,GACzBsF,kBAAmB3R,GACnB4R,aAAc3f,GAAW/F,KAA4B8K,IAAkBlC,GACvE+c,oBAAqB7a,GACrB8a,oBAAqBzyC,GAAYy7B,GACjCiX,4BAA6B7U,IAAsB2B,IAAwBK,GAC3E8S,SAAU9d,GACVwa,OAAQA,GACRuD,kBAAmBjX,GACnBzI,QAASgD,GACT/C,OAAQgD,GACRgC,cAAeA,KAEhB1C,IACCv5B,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACGylB,IAAsBr3B,QAAQqmC,KAC7B7jC,EAAAA,GAAAC,cAAC02C,GAAAA,EAAO,CAACxoC,MAAM,SAEjBnO,EAAAA,GAAAC,cAAC22C,GAAAA,GAAU,CACT94C,UAAU,oCACV+4C,eAAe,0BACfC,UAAW3M,OAAOpyB,IAClBg/B,UAAU,UACV9oC,KAAK,qBAEH8J,IACA/X,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACGkkB,IACCtzB,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACLC,OAAK,EACLkqB,OAAK,EACL7sB,UAAU,yBACVqQ,MAAM,cACNhO,QAASuwC,GACTtiC,UAAWjQ,GACT2zB,GAAkB,mCAAqC,oCAGzD9xB,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAM6jB,GAAkB,OAAS,YAG1C6B,IACC3zB,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACLC,OAAK,EACLkqB,OAAK,EACL7sB,UAAU,0CACVqQ,MAAM,cACNhO,QAASswC,GACTriC,UAAWjQ,GAAK,8BAEhB6B,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,cAGdzQ,QAAQ+xB,MAA0B4Q,KAAyBzhB,GAC1D1e,EAAAA,GAAAC,cAACuhB,GAAAA,EAAqB,CACpB1jB,WAAWoC,EAAAA,EAAAA,GAAe,yBAA0B++B,IAAqB,aACzEx+B,OAAK,EACL0N,MAAM,cACNsT,WAAYyd,GACZ9wB,UAAWjQ,GAAK,4BAEhB6B,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,oBAQxBkyB,IAAwB3iC,QAAQ4iC,KAC/BpgC,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,oBACbk5C,EAAAA,EAAAA,IAA0B5W,GAAoBG,GAAmBn3B,WAGpE6yB,IACAj8B,EAAAA,GAAAC,cAACud,GAAU,CACT5gB,OAAQA,EACR6gB,SAAUA,GACViB,eAAgBA,EAChBD,aAAc2b,GACd1c,iBAAkByiB,GAClBxiB,eAAgBA,GAChBC,eAAgBA,GAChBC,cAAeA,GACfC,cAAeA,GACfC,iBAAkBA,GAClBC,cAAeA,GACfK,aAAc8B,GACd3B,aAAc8Y,GACdnZ,YAAayT,EACb3T,WAAYsb,GAAkBtb,QAAa3gB,EAC3C4gB,SAAUmX,GACVjX,uBAAwBA,GACxB9c,MAAOA,GACPgd,WAAY4b,GACZ3b,YAAa4b,KAGhBZ,IAAmB/7B,QAAQ+xB,KAC1BvvB,EAAAA,GAAAC,cAAC+iB,GAAe,CACdvW,UAAW8iB,GACXzvB,OAAQm/B,GACRhd,QAASkd,KAGZ5F,IAAmBxE,IAClB/0B,EAAAA,GAAAC,cAAC4iB,GAAc,CACb/iB,OAAQs/B,GACRrK,YAAaA,GACb9S,QAASqd,KAGbt/B,EAAAA,GAAAC,cAACg3C,GAAAA,EAAkB,CACjBC,IAAM,wBAAuBrgB,KAC7Bj6B,OAAQA,EACRkD,OAAQmiC,GACRuS,oBAAqBrS,GACrBpK,qBAAsBA,GACtB9V,QAASigB,KAEXliC,EAAAA,GAAAC,cAACkrB,GAAc,CACb+rB,IAAM,mBAAkBrgB,KACxBj6B,OAAQA,EACR6gB,SAAUA,GACV3d,OAAQuiC,GACRyT,gBAAiBnH,GACjB1sB,QAASqgB,KAEXtiC,EAAAA,GAAAC,cAACk3C,GAAAA,EAAY,CACXD,IAAM,iBAAgBrgB,KACtB/2B,OAAQ6hC,GACRyV,OAAQvV,GACRzN,aAAc0N,GACdpK,eAAgBA,GAChBK,qBAAsBA,GACtB2c,cAAe3S,GACfyS,oBAAqBzS,GACrB9f,QAAS2f,OAId3L,IAAuBkK,IACtBngC,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACL1C,WAAWoC,EAAAA,EAAAA,GAAe,YAAasgC,IAAqB,UAC5D//B,OAAK,EACL0N,MAAM,YACNC,UAAW6Z,GAAQ,oCACnB9nB,QAASugC,IAET1gC,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,cACXjO,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,gBAGdkyB,IACCngC,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACLC,OAAK,EACL0N,MAAM,SACNrQ,UAAU,SACVqC,QAAS8/B,GACT7xB,UAAU,0BAEVpO,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,YAGdurB,KAAoB2G,IACnBngC,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACLC,OAAK,EACL3C,UAAU,wBACVqQ,MAAM,YACNhO,QAASqyC,GACThoB,cAAeqgB,GACfwM,YAAatM,GACb38B,UAAW6Z,GAAQ,gBACnBtoB,IAAK+4B,IAEJtH,IACCpxB,EAAAA,GAAAC,cAACq3C,GAAAA,EAAqB,CACpBJ,KAAKK,EAAAA,EAAAA,IAAenmB,IACpBqhB,aAAaC,EAAAA,EAAAA,IAAY91C,EAAQqxB,IACjCgkB,SAAU7gB,GACVomB,eAAgB9c,OAGjBtJ,IAAqBsJ,KACtB16B,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,QAAQnQ,WAAWoC,EAAAA,EAAAA,GAAew6B,IAA4B,2BAI/E16B,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACLb,IAAK2gC,GACL7/B,OAAK,EACL0N,MAAM,YACNrQ,WAAWoC,EAAAA,EAAAA,GACTkqC,GACA,eACC1T,GAAW,YACZyJ,IAAwB,aAE1Bve,SAAU2vB,GACVkG,oBAAkB,EAClBC,aAAW,EACXtpC,UAAW6Z,GAAQ8pB,IACnB5xC,QAASqxC,GACThnB,cACE4f,KAAoBpc,GAAgBuc,MAAQG,GAAwB9hB,QAAoBtrB,GAG1F0C,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,SACXjO,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,mBACVipB,IAAal3B,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,YACxBsrB,IAAmBv5B,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,aAC9BsrB,IAAmBv5B,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,WAEhColC,IACCrzC,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,cAAcqC,QAAS8yC,KACpCvlC,EAAAA,EAAAA,GAAW2lC,KAGf5gB,IAAUL,IACTpyB,EAAAA,GAAAC,cAAC03C,GAAAA,EAAa,CACZC,WAAYtlB,GACZG,OAAQA,GACRolB,OAAQ3E,KAGXxI,IACC1qC,EAAAA,GAAAC,cAAC63C,GAAAA,EAAc,CACbh4C,OAAQ6qC,GACRoN,YAAaxe,KAAoBiH,GACjCpN,uBAAwBA,IAA2BoN,GACnD4T,aAAeluB,QAAoC5oB,EAAnBs1C,GAChCoF,eAAiBpmB,OAA0Ct0B,EAAtBq1C,GACrCgC,iBAAkB9B,GAClBoF,eAAgBhF,GAChBhxB,QAAS4G,GACT3G,oBAAqB4G,GACrB0sB,gBAAiBtvB,GACjBtpB,OAAQA,EACRs7C,YAAahmB,GACbimB,iBAAkB36C,QAAQi1B,IAC1BE,gBAAiBA,GACjBihB,sBAAuB5gB,GACvB6gB,iBAAkBxB,GAClBprB,qBAAsBA,GACtB8sB,kBAAmB7tB,GACnBsT,gBAAiBA,GACjBzD,sBAAuBA,KAG1BiF,GACG,I,wIIpjEV,MAiMA,GAAev+B,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GAAUE,OAAMu7C,oBACf,MAAMC,GAAgB9pB,EAAAA,EAAAA,IAAS1xB,EAAKU,IAC9B2oB,GAAiBC,EAAAA,EAAAA,KAAqBxpB,EAAQE,EAAKU,IACnD+6C,EAAOD,IAAiB3oB,EAAAA,EAAAA,KAAW/yB,GAAQ47C,EAAAA,EAAAA,IAAqB17C,IAChE27C,EAAQF,IAAQG,EAAAA,EAAAA,IAAUH,KAAUz7C,EAAK67C,UACzCC,EAAmBN,IAAkBnyB,IAAmBsyB,IAAUJ,EAClEQ,EAAcP,GAChBQ,EAAAA,EAAAA,KAAuBnpB,EAAAA,EAAAA,KAAW/yB,GAAQ47C,EAAAA,EAAAA,IAAqB17C,UAC/DS,EAEJ,MAAO,CACL+6C,gBACAnyB,iBACAsyB,QACAllB,WAAW9M,EAAAA,EAAAA,IAAc3pB,GACzBi8C,cAAcC,EAAAA,EAAAA,IAAiBl8C,GAC/Bm8C,cAAc3d,EAAAA,EAAAA,IAAiBx+B,GAC/BuqB,cAAezqB,EAAOyqB,cACtBuxB,kBACAC,cACD,GArBel8C,EAjM+Bu8C,EACjDn5C,SACAjD,OACAu7C,gBACA9kB,YACA+kB,gBACAnyB,iBACAsyB,QACAM,eACAE,eACA5xB,gBACAuxB,kBACAC,cACA32B,UACAC,0BAEA,MAAM,aACJg3B,EAAY,cACZC,EAAa,mBACbC,EAAkB,cAClBC,EAAa,eACbC,EAAc,UACdC,IACEr7C,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KACPo7C,GAAYC,EAAAA,EAAAA,IAAat7C,EAAMtB,GAE/B68C,GAAqBp7C,EAAAA,EAAAA,KAAY,KACrC66C,EAAc,CAAEv8C,OAAQC,EAAKU,GAAIo8C,oBAAoB,IAErD13B,GAAS,GACR,CAACplB,EAAKU,GAAI0kB,IAEP23B,GAAsBt7C,EAAAA,EAAAA,KAAY,KACtC66C,EAAc,CAAEv8C,OAAQC,EAAKU,GAAIo8C,oBAAoB,IACrDJ,EAAU,CAAEM,OAAQh9C,EAAKU,KAEzB0kB,GAAS,GACR,CAACplB,EAAKU,GAAI0kB,IAEP63B,GAAmBx7C,EAAAA,EAAAA,KAAY,KAC/B85C,EACFgB,EAAmB,CAAEx8C,OAAQC,EAAKU,KACzB86C,EACTc,EAAc,CAAEv8C,OAAQC,EAAKU,GAAIo8C,oBAAoB,IAC5Cb,GACTQ,EAAe,CAAE18C,OAAQC,EAAKU,GAAIs8C,OAAQzyB,IAC1C+xB,EAAc,CAAEv8C,OAAQC,EAAKU,GAAIo8C,oBAAoB,MAC3CrmB,IAAa0lB,GAAkBn8C,EAAKk9C,WAEpCzmB,GAAa0lB,IAAiBn8C,EAAKk9C,WAC7CV,EAAc,CAAEz8C,OAAQC,EAAKU,KAF7B27C,EAAa,CAAEt8C,OAAQC,EAAKU,KAI9B0kB,GAAS,GACR,CACDo2B,EACAS,EACAxlB,EACA0lB,EACA5xB,EACAvqB,EAAKk9C,UACLl9C,EAAKU,GACL66C,EACAn2B,IAGI+3B,GAAkB17C,EAAAA,EAAAA,KAAY,KAC9Bg1B,GAAa0lB,GACfE,EAAa,CAAEt8C,OAAQC,EAAKU,KAC5B0kB,KAEA63B,GACF,GACC,CAACj9C,EAAKU,GAAIu8C,EAAkBxmB,EAAW0lB,EAAcE,EAAcj3B,IAgFtE,OACEjiB,EAAAA,GAAAC,cAACg6C,EAAAA,EAAK,CACJn6C,OAAQA,EACRhC,UAAU,kBACVo8C,OAhFAl6C,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,eAAe2P,IAAKtP,EAAK0F,MAAQ,WAAQvG,GACtD0C,EAAAA,GAAAC,cAACy1C,EAAAA,EAAM,CACLp1C,KAAK,OACLwvB,KAAMjzB,EACN24C,gBAAiBtvB,IAEnBlmB,EAAAA,GAAAC,cAAA,MAAInC,UAAU,eAAeK,EAM7Bi6C,EACKlyB,EAAiB,2BAA6B,2BAGnDoN,IAAcz2B,EAAKk9C,UACd,eAGLzmB,GAAaz2B,EAAKk9C,UACb,gBAGLjB,GAAgBE,EACX,mBAGF,oBAqDL/2B,QAASA,EACTC,oBAAqBA,GAlDnBk2B,EAEAp4C,EAAAA,GAAAC,cAAA,UACGyN,EAAAA,EAAAA,GACCwY,EAAiB/nB,EAAK,8BAAgCA,EAAK,4BAA6Bq7C,GACxF,CAAC,kBAAmB,WAKxBlmB,GAAaz2B,EAAKk9C,UAElB/5C,EAAAA,GAAAC,cAAA,UACGyN,EAAAA,EAAAA,GAAWvP,EAAK,2CAA4Cq7C,GAAY,CAAC,kBAAmB,WAK9FlmB,IAAcz2B,EAAKk9C,WAAcjB,GAAgBE,EAC7Ch5C,EAAAA,GAAAC,cAAA,UAAIyN,EAAAA,EAAAA,GAAWvP,EAAK,4BAA6Bq7C,GAAY,CAAC,kBAAmB,WAGnFx5C,EAAAA,GAAAC,cAAA,UAAIyN,EAAAA,EAAAA,GAAWvP,EAAK,kCAAmCy6C,GAAc,CAAC,kBAAmB,WA+B9F54C,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,yBACZ06C,IAAUJ,GACTp4C,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAAC2N,MAAM,SAASrQ,UAAU,wBAAwBq8C,QAAM,EAACh6C,QAASy5C,GACtEz7C,EAAK,kBAGTw6C,GACC34C,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAAC2N,MAAM,SAASrQ,UAAU,wBAAwBq8C,QAAM,EAACh6C,QAASu5C,GACtEd,GAAclrC,EAAAA,EAAAA,GAAWvP,EAAK,6BAA8By6C,IAAgBz6C,EAAK,kBAGpFk6C,GAAiBx7C,EAAKk9C,YAAc3B,GACpCp4C,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAAC2N,MAAM,SAASrQ,UAAU,wBAAwBq8C,QAAM,EAACh6C,QAAS25C,GACtE37C,EAAK,iBAGV6B,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACL2N,MAAM,SACNrQ,UAAU,wBACVq8C,QAAM,EACNh6C,QAAUk4C,GAAiBD,EAAiB0B,EAAmBE,GAE9D77C,EAjDHi6C,EACK,SAGL9kB,IAAcz2B,EAAKk9C,UACd,eAELzmB,GAAaz2B,EAAKk9C,UACb,oBAGLjB,GAAgBE,EACX,mBAGFL,EAAkB,gCAAkC,WAoCvD34C,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAAC1C,UAAU,wBAAwBq8C,QAAM,EAACh6C,QAAS8hB,GAAU9jB,EAAK,YAErE,I,qLCvLZ,MACMi8C,EAAiB,IAAI3mC,IAAI,CAAC,MAAO,SA0JvC,GAAehX,EAAAA,EAAAA,KAxJE49C,EACflqC,WACAmqC,sBACAC,UACAC,cACAC,wBACAh5C,iBACAi5C,WACAC,WACA78C,YACA6nB,SACA7jB,aACAD,eACA+4C,qBACA74C,gBACAR,UACAoB,iBACAk4C,eACAj4C,kBAEA,MAAM,oBAAEC,EAAmB,cAAEC,EAAa,iBAAEg4C,IAAqB58C,EAAAA,EAAAA,MAG3DyB,GAAMiE,EAAAA,EAAAA,IAAuB,MAE7BzF,GAAOC,EAAAA,EAAAA,MACN28C,EAAiBC,EAAeC,IAAkBn8B,EAAAA,EAAAA,MAClDo8B,EAAuBC,IAA4Bj3C,EAAAA,EAAAA,KAAS,IAE7D,SAAE0I,EAAQ,KAAEtM,EAAI,UAAE86C,GAAcjrC,EAChCkrC,GAAYC,EAAAA,EAAAA,IAAqBnrC,IAAa,GAE9CorC,GAAiBC,EAAAA,EAAAA,IAAkB77C,EAAK26C,IACvCmB,EAAgBC,IAAmB58B,EAAAA,EAAAA,MAC1Czf,EAAAA,EAAAA,KAAU,KACJk8C,GACFG,GACF,GACC,CAACH,EAAgBG,IAGpB,MAAOC,EAAeC,IAAoB13C,EAAAA,EAAAA,IACxCs2C,KAAiBC,GAAyBn6C,GA7CzB,QA6CiCm6C,IAG9CoB,EAAiBr+C,QAAQuE,GAAkB45C,GAAiBF,GAE5DK,GAAeC,EAAAA,EAAAA,IAAqB5rC,EAAU,aAC5CjL,aAAcC,EAAgB,UAAEH,KAAcI,EAAAA,EAAAA,GACpD02C,GAAeD,GAAgB52C,EAAAA,EAAAA,IAAekL,EAAU,iBAAa7S,GAAW,GAE5EI,GAAWF,QAAQwH,KAEnB,YACJ+F,GAAW,eAAEC,GAAc,iBAAEC,KAC3BC,EAAAA,EAAAA,IACFzJ,GAAkB0D,EAClB02C,IAAmBn+C,QACAJ,IAAnBmE,GAGIu6C,IAAaC,EAAAA,EAAAA,IAAsB9rC,GACnC+rC,GAAeF,IAAaG,EAAAA,EAAAA,IAAiBhsC,QAAY7S,EACzD8+C,GAAeJ,GAAa7rC,EAASksC,oBAAiB/+C,EACtDg/C,IAAc/3C,EAAAA,EAAAA,IAASw3C,EAAAA,EAAAA,IAAqB5rC,EAAU,cAAeorC,GAErEgB,GAAkB1B,GAAgB1qC,EAASqsC,eAE3CC,IAAiBn3C,EAAAA,EAAAA,IAAgB,KACrCxC,EAAc,CAAEU,MAAO2M,EAAUxE,cAAepK,GAAU,IAGtDm7C,IAAcp3C,EAAAA,EAAAA,IAAgB,KAC9ByF,GACEpI,GACFA,IAKAZ,EACFc,EAAoB,CAAEW,MAAO2M,IAI3BnF,GACF4wC,GAAiB,GAIfW,GACF1B,IAIET,EAAevlC,IAAIwmC,IAAcT,EACnCI,IAIFyB,IAAgB,IAGZE,IAAmBr3C,EAAAA,EAAAA,IAAgB,KACvCw1C,EAAiB,CAAEF,oBAAqBM,IACxCD,IACAwB,IAAgB,IAGZlwC,IAAkBjH,EAAAA,EAAAA,IAAgB,KACtC1C,IAAcrB,EAAQ,IAGxB,OACEvB,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACEpP,EAAAA,GAAAC,cAAC+gB,EAAAA,EAAI,CACHrhB,IAAKA,EACLsO,KAAMrB,EACNyuC,UAAWA,EACX/6C,KAAMA,EACN86C,UAAWV,EAAWC,GAAYS,OAAY99C,EAC9Cs/C,iBAAkBV,GAClBI,YAAaF,IAAgBE,GAC7B/B,QAASA,EACTvvC,eAAgBA,GAChBD,YAAaA,GACbE,iBAAkBA,GAClBnN,UAAWA,EACX6nB,OAAQA,EACR9jB,aAAcA,EACdC,WAAYA,EACZ+6C,WAAYN,IAAmBO,EAAAA,EAAAA,IAAgB3sC,GAAY,OAAS,MAAS,WAC7EhQ,QAASu8C,GACT95C,YAAaA,EAAc2J,QAAkBjP,IAE/C0C,EAAAA,GAAAC,cAAC88C,EAAAA,EAAa,CACZj9C,OAAQi7C,EACR94B,QAASg5B,EACT+B,eAAgBL,IAEfx+C,EAAK,0BACN6B,EAAAA,GAAAC,cAACg9C,EAAAA,EAAQ,CACPn/C,UAAU,kBACVo/C,QAAShC,EACTiC,MAAOh/C,EAAK,2BACZi/C,QAASjC,KAGZ,G,kFC7LP,MAUA,EAVmCkC,EAAGp6C,UAASnF,gBAC7C,MAAMK,GAAOC,EAAAA,EAAAA,KACb,OACE4B,EAAAA,GAAAC,cAAA,QAAMnC,WAAWoC,EAAAA,EAAAA,GAAe,eAAgBpC,GAAY2P,IAAKtP,EAAK0F,MAAQ,MAAQ,SACnF6J,EAAAA,EAAAA,GAAWzK,GACZjD,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,aACX,C,2MC0BX,MA6HA,GAAerB,EAAAA,EAAAA,KA7HYukB,EACzBrhB,MACAsO,OACA3N,OACA+6C,YAAY,GACZD,YACAz1B,SACAi3B,mBACAN,cACAx+C,YACAy8C,UACAvvC,iBACAD,cACAlJ,eACAC,aACAmJ,mBACA4xC,aACA18C,UACAyC,kBAEA,MAAMzE,GAAOC,EAAAA,EAAAA,KAEb,IAAIk/C,GAAa15C,EAAAA,EAAAA,IAAuB,MACpCjE,IACF29C,EAAa39C,GAGf,MAAM,SAAEmE,IAAaC,EAAAA,EAAAA,OACdw5C,IAAar5C,EAAAA,EAAAA,KAAUo4C,GACxBkB,EAAUhgD,QAAQ8+C,GAClBmB,GAAWC,EAAAA,EAAAA,GAAcd,EAAkBY,EAAS15C,IAAa65C,EAAAA,IACjEC,GAAkBC,EAAAA,EAAAA,IAA8BL,IAGpD59C,aAAck+C,EACd1yC,qBAAsBC,IACpBC,EAAAA,EAAAA,GAA4BN,OAAgB1N,GAAW,GAErD6Q,GAAQ4vC,EAAAA,EAAAA,IAAsB1C,GAC9B2C,GAAa7uC,EAAAA,EAAAA,IAAkB7O,GAC/B29C,GAAWx/C,EAAAA,EAAAA,KAAQ,IAClBuM,GAAmBC,EAChB,IAAEkE,EAAAA,EAAAA,IAAkB7O,EAAO2K,QAAuB+yC,IADTA,GAEhD,CAAChzC,EAAgB1K,EAAM09C,EAAY/yC,KAEhC,MAAEzB,EAAK,OAAEC,IAAWy0C,EAAAA,EAAAA,IAA+B3D,GAEnDttC,GAAgB/M,EAAAA,EAAAA,GACpB,OACApC,EACAy8C,GAAW,UACXp6C,IAAY4K,GAAe,cAC3BjJ,GAAc,oBAGhB,OACE9B,EAAAA,GAAAC,cAAA,OAAKN,IAAK29C,EAAYx/C,UAAWmP,EAAeQ,IAAKtP,EAAK0F,MAAQ,WAAQvG,GACvEuE,GACC7B,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,uCACZgE,GAAc9B,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,YAG9BjO,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,sBAAsBqC,QAAS4K,OAAczN,EAAY6C,GACrEy8C,GAAoBN,EACnBt8C,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,4BACbkC,EAAAA,GAAAC,cAAA,OACEk+C,IAAK7B,EACLx+C,UAAU,aACV0L,MAAOA,EACPC,OAAQA,EACR+F,WAAW,EACXwH,IAAI,KAELumC,GACCv9C,EAAAA,GAAAC,cAAA,UACEN,IAAK89C,EACL3/C,WAAWoC,EAAAA,EAAAA,GAAe,YAAa09C,MAK7C59C,EAAAA,GAAAC,cAAA,OAAKnC,UAAY,aAAYqQ,KAC1BktC,EAAUj7C,QAAU,GACnBJ,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,WAAW2P,IAAI,QAAQ4tC,IAI5CyC,GACC99C,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GAAe,gBAAiBiO,EAAO9C,IACrDrL,EAAAA,GAAAC,cAAC2O,EAAAA,EAAe,CACdvF,SAAU4B,EACV3K,KAAMi6C,EAAU,IAAM,IACtBp6C,QAAS4K,EAAc5K,OAAU7C,KAItC6C,GACCH,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CACHC,KAAM4uC,GAAc,WACpB/+C,WAAWoC,EAAAA,EAAAA,GAAe,cAAe49C,GAAuB,aAItE99C,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,aACbkC,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,aAAa2P,IAAI,OAAOd,MAAOsB,IAAOP,EAAAA,EAAAA,GAAWO,IAChEjO,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,gBAAgB2P,IAAI,QACjCzN,EAAAA,GAAAC,cAAA,YACGg+C,GAEFt4B,GAAU3lB,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,gBAAe4P,EAAAA,EAAAA,GAAWiY,KACnDA,GAAUnoB,QAAQ49C,IAClBp7C,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACEpP,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,WAChBkC,EAAAA,GAAAC,cAAC0N,EAAAA,EAAI,CAACxN,QAASyC,IAAcyM,EAAAA,EAAAA,IAAoBlR,EAAkB,IAAZi9C,GAAkB,OAKhFz1B,GAAUnoB,QAAQ49C,IACjBp7C,EAAAA,GAAAC,cAAC0N,EAAAA,EAAI,CAACxN,QAASyC,IAAcgL,EAAAA,EAAAA,IAAoBzP,EAAkB,IAAZi9C,IAErD,G,iOChIV,MAAMgD,EAAkB,IAAMC,EAAAA,EAgO9B,GAAe5hD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GAAUC,SAAQ6gB,eACjB,MAAM5gB,GAAOC,EAAAA,EAAAA,KAAWH,EAAQC,GAC1B0hD,EAAa7gC,GAAW8gC,EAAAA,EAAAA,KAAiB5hD,EAAQC,EAAQ6gB,QAAYngB,EACrEkhD,EAAc3hD,GAAO4hD,EAAAA,EAAAA,KAAsB9hD,EAAQE,QAAQS,EAC3DohD,EAAoBlhD,SAAQmhD,EAAAA,EAAAA,KAAmBhiD,EAAQC,IACvDw0C,EAAQ3zB,GAAWmhC,EAAAA,EAAAA,KAAYjiD,EAAQC,EAAQ6gB,QAAYngB,EAIjE,MAAO,CACLT,OACAyhD,aACAE,cACApN,QACAsN,oBACAG,cAToBzN,IAAS0N,EAAAA,EAAAA,KAA0BniD,EAAQC,EAAQ6gB,GAUvEy3B,MATWxlB,EAAAA,EAAAA,KAAW/yB,EAAQA,EAAOyqB,eAUtC,GAlBe1qB,EAzL6BqiD,EAC/CC,eACAlhD,YACAmhD,aACAC,aAAa,SACbC,WACAC,SACAC,WACA9C,kBACAtH,eACAqK,eACAC,qBACAC,eACAlB,aACAmB,QACA5iD,OACA2hD,cACAE,oBACAtN,QACAyN,gBACAa,mBACAC,YACAC,oBACAC,gBACAC,kBACA1H,gBACAlD,OACA/0C,UACA4/C,yBAEA,MAAM,aACJC,EAAY,gBACZC,EAAe,sBACfC,IACEhiD,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KAEP46C,EAAen8C,IAAQw+B,EAAAA,EAAAA,IAAiBx+B,GACxCsjD,EAAU3iD,QAAQX,GAAM20B,SAAW8sB,GAAclN,IAC/C7zC,GAAIX,EAAM,MAAEwjD,EAAK,aAAEC,GAAiBxjD,GAAQ,CAAC,GAErDwC,EAAAA,EAAAA,KAAU,KACJzC,IAAWwjD,IACTd,GAAcU,EAAa,CAAEpjD,WAC7B2/C,GAAiB2D,EAAsB,CAAEjV,OAAQruC,EAAQ0jD,WAAW,IAC1E,GACC,CAAC1jD,EAAQwjD,EAAOd,EAActG,EAAcuD,IAE/C,MAAMgE,GAAyBj7C,EAAAA,EAAAA,IAC7B,CAACuG,EAAiD20C,KAC5C3jD,GAAQ2jD,IACV30C,EAAEM,kBACF8zC,EAAgB,CACdQ,cAAc,EACd7jD,OAAQC,EAAKU,GACbmjD,WAAY,EACZh/C,OAAuB,UAAfw9C,EAAyByB,EAAAA,GAAkBC,cAAgBD,EAAAA,GAAkBE,qBAEzF,IAIEC,IAAeriD,EAAAA,EAAAA,KAAQ,IAAM5B,GAAQo4C,IAAgB8L,EAAAA,EAAAA,IAAgBlkD,IAAO,CAACA,EAAMo4C,IAEzF,GAAKp4C,EA+DL,OACEmD,EAAAA,GAAAC,cAAA,OACEnC,WACEoC,EAAAA,EAAAA,GAAe,WAAYpC,GAE7B2P,KAAMgyC,GAASthD,EAAK0F,MAAQ,WAAQvG,EACpC6C,QAASA,IAEPg/C,IAAagB,GACbngD,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACGgpC,GAAiBlD,GAChBl1C,EAAAA,GAAAC,cAACy1C,EAAAA,EAAM,CACLwB,IAAI,iBACJ52C,KAAM4+C,EACNpvB,KAAMolB,EACNM,iBAAe,EACf13C,UAAU,wBAGdkC,EAAAA,GAAAC,cAACy1C,EAAAA,EAAM,CACLwB,IAAKr6C,EAAKU,GACVO,WAAWoC,EAAAA,EAAAA,GAAek4C,GAAiB,kBAC3C93C,KAAM4+C,EACNpvB,KAAMjzB,EACN8iD,UAAWA,EACXC,kBAAmBA,EACnBoB,gBAAgB,cAChB5I,cAAeA,EACfj4C,QAASo8C,EAAkBgE,OAAyBjjD,KAIzD6iD,GACCngD,EAAAA,GAAAC,cAACghD,EAAAA,EAAS,CACR7P,MAAOA,EACPtzC,UAAU,oBACVwC,KAAM89C,IAGVp+C,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,QACZszC,EACGpxC,EAAAA,GAAAC,cAAA,MAAIwN,IAAI,OAAO3P,UAAU,aAAY4P,EAAAA,EAAAA,GAAW0jC,EAAMzkC,QAEtD3M,EAAAA,GAAAC,cAACihD,EAAAA,EAAa,CACZpxB,KAAMjzB,EACNijD,gBAAiBA,EACjBqB,iBAAkBtB,EAClBzH,cAAeA,EACf2H,mBAAoBA,KAGxBL,GA9GR,WACE,GAAIN,EACF,OAAOC,EACLr/C,EAAAA,GAAAC,cAACo9C,EAAAA,EAAY,CAACv/C,UAAU,SAASmF,QAASm8C,IAE1Cp/C,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,SAAS2P,IAAI,QAC1BwxC,GAAcj/C,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAAClQ,UAAU,cAAcmQ,KAAMgxC,KAClDvxC,EAAAA,EAAAA,GAAW0xC,IAKlB,GAAIG,IAAuBb,IAAsB2B,EAC/C,OACErgD,EAAAA,GAAAC,cAACo9C,EAAAA,EAAY,CAACv/C,UAAU,SAASmF,QAAS9E,EAAK,cAInD,IAAKtB,EACH,OAGF,GAAImiD,EACF,OAAOh/C,EAAAA,GAAAC,cAACmhD,EAAAA,EAAY,CAACpC,aAAcA,IAGrC,GAAImB,EACF,OACEngD,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,SAAS2P,IAAI,QAC3BzN,EAAAA,GAAAC,cAAC22C,EAAAA,GAAU,CACT3oC,KAAK,OACLozC,qBAAmB,EACnBvK,eAA6Bx5C,IAAlBuhD,EAA8B,EAAI,EAC7C/gD,UAAU,iCAESR,IAAlBuhD,GAA+B1gD,EAAK,WAAY0gD,EAAe,OAMxE,GAAIW,EACF,OACEx/C,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,SAAS2P,IAAI,QAAQtP,GAAKmjD,EAAAA,EAAAA,IAAkBzkD,KAIhE,MAAM0kD,GAAcC,EAAAA,EAAAA,IAAerjD,EAAMtB,GACnC4kD,EAAejD,EAAe,KAAIrgD,EAAK,cAAeqgD,EAAa,YAASlhD,EAElF,OACE0C,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,UACbgjD,IAAgB9gD,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,qBAAqBgjD,IACtD9gD,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,gBAAgByjD,GAC/BE,GAAgBzhD,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,iBAAiB2jD,GAGxD,CAqD4BC,IAEpB,I,2FChPV,MAkBA,GAAejlD,EAAAA,EAAAA,KAlBSklD,EACtB7jD,YAAWyD,UAASqgD,iBAAgBC,gBAEpC,MAAM1jD,GAAOC,EAAAA,EAAAA,KAEP0jD,EAAiBD,GAAaA,EAAYtgD,EAAQI,KACxD,OACE3B,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GAAe,kBAAmBpC,IAC/C8jD,IAAmBE,GAClB9hD,EAAAA,GAAAC,cAAC8hD,EAAAA,EAAqB,CAAC3C,OAAQwC,IAEjC5hD,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,SACb8P,EAAAA,EAAAA,IAAoBzP,EAAoD,KAA7C2jD,EAAiBD,EAAYtgD,EAAQI,QAE/D,G,gKCjCV,MC6HA,GAAelF,EAAAA,EAAAA,KAnGkBulD,EAC/Br1C,QACAogB,OACApJ,aACA7lB,YACAmkD,YACAC,eAEA,MAAM/jD,GAAOC,EAAAA,EAAAA,MACP,iBAAEgW,EAAgB,kBAAE+tC,IAAsBjkD,EAAAA,EAAAA,OAE1C,SAAE4F,IAAaC,EAAAA,EAAAA,MAEfq+C,GAAcF,EAEdG,GAAW/8C,EAAAA,EAAAA,IAAgB,MAC/Bg9C,EAAAA,EAAAA,IAAoBv1B,GACpB3Y,EAAiB,CACf7S,QAAS,CACP21C,IAAK,eAEP,IAGEqL,GAAkBj9C,EAAAA,EAAAA,IAAgB,KAClCqe,GACJ0+B,GAAU,IAGNG,GAAcl9C,EAAAA,EAAAA,IAAgB,KAClC68C,EAAkB,CAAEvqC,KAAM,CAAEA,KAAMmV,IAAS,IAGvC01B,GAAyEhkD,EAAAA,EAAAA,KAAQ,IAC9E,EAAGikD,YAAW5iD,YACnBE,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLC,OAAK,EACLyN,QAASpK,EACTxD,KAAK,UACL6N,MAAM,cACNrQ,UAAWgC,EAAS,SAAW,GAC/BK,QAASuiD,EACTt0C,UAAWjQ,EAAK,sBAEhB6B,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,WAGd,CAACnK,EAAU3F,IAEd,OACE6B,EAAAA,GAAAC,cAAA,OAAKnC,UAAWA,GACdkC,EAAAA,GAAAC,cAAA,KAAGnC,UD7EmG,YC8EnGK,EAAKwO,GAAS,0BAEjB3M,EAAAA,GAAAC,cAAA,OAAKnC,UDhFmB,YCiFtBkC,EAAAA,GAAAC,cAAA,SACEnC,WAAWoC,EAAAA,EAAAA,GAAe,eDlFa,YCmFvC0I,MAAOmkB,EACP41B,UAAQ,EACRxiD,QAASoiD,IAEVH,EACCpiD,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACL2N,MAAM,cACNrQ,UD1F6E,WC2F7EwC,KAAK,UACLG,OAAK,EACLmhB,SAAU+B,EACVxjB,QAASoiD,GAETviD,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,UAGbjO,EAAAA,GAAAC,cAAC2iD,EAAAA,EAAY,CACX9kD,UDpG2D,WCqG3D+kD,QAASJ,EACT1gC,UAAU,SAEV/hB,EAAAA,GAAAC,cAACuiB,EAAAA,EAAQ,CAACC,KAAK,OAAOtiB,QAASoiD,EAAiB3gC,SAAU+B,GAAaxlB,EAAK,SAC3E+jD,GACCliD,EAAAA,GAAAC,cAACuiB,EAAAA,EAAQ,CAACC,KAAK,SAAStiB,QAAS+hD,EAAUY,aAAW,GAAE3kD,EAAK,mBAKpE8jD,GACCjiD,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLF,KAAK,UACLshB,SAAU+B,EACVxjB,QAASqiD,EACT1kD,UDpHqH,YCsHpHK,EAAK,qCAGN,G,+JCvFV,MA6DA,GAAe1B,EAAAA,EAAAA,KA7DasmD,EAC1BxhD,UACAy0C,WAAW,eACXgN,cACA1I,sBACAn6C,cAGA,MAAMR,GAAMiE,EAAAA,EAAAA,IAAuB,MAE7B23C,GAAiBC,EAAAA,EAAAA,IAAkB77C,EAAK26C,GACxC4B,GAAe+G,EAAAA,EAAAA,IAA4B1hD,GAC3C2hD,GAAe3+C,EAAAA,EAAAA,IAAS4+C,EAAAA,EAAAA,IAAoB5hD,EAAS,cAAeg6C,GACpEnwC,GAAuByyC,EAAAA,EAAAA,GAA6BqF,GAEpD7/C,GAAQuc,EAAAA,EAAAA,IAAgBre,GAExB6hD,GAAaC,EAAAA,EAAAA,IAAoB9hD,IAChC+hD,EAAe,CAAGC,IAAezkC,EAAAA,EAAAA,GAAQskC,GAE1C1G,GAAcp3C,EAAAA,EAAAA,IAAgB,KAClCi+C,IACApjD,EAASoB,EAAQhE,GAAIgE,EAAQ3E,OAAO,IAGtC,OACEoD,EAAAA,GAAAC,cAAA,OACEN,IAAKA,EACLpC,GAAK,GAAEy4C,KAAWwN,EAAAA,EAAAA,IAAiBjiD,EAAQhE,MAC3CO,UAAU,oBACVqC,QAASA,EAAUu8C,OAAcp/C,GAEjC0C,EAAAA,GAAAC,cAAA,OACEk+C,IAAKjC,EACLp+C,UAAU,kBACVkZ,IAAI,GACJxH,WAAYwzC,EACZS,SAAS,QACTj5B,cAAew4B,EAAcU,EAAAA,OAAYpmD,IAE3C0C,EAAAA,GAAAC,cAAA,OACEk+C,IAAK+E,EACLplD,WAAWoC,EAAAA,EAAAA,GAAe,aAAc,kBAAmBkL,GAC3D4L,IAAI,GACJxH,WAAYwzC,EACZS,SAAS,QACTj5B,cAAew4B,EAAcU,EAAAA,OAAYpmD,IAE1C8lD,GACCpjD,EAAAA,GAAAC,cAAC0jD,EAAAA,EAAY,CACXzH,aAAcgH,GAAgBhH,EAC9B0H,UAAWN,EACXxlD,UAAU,kBAGbuF,GAASrD,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,kBAAkBuF,EAAMwgD,MAAQ,OAAQh2C,EAAAA,EAAAA,IAAoBxK,EAAM2C,WAC3Fg9C,GAAehjD,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,cAC5B,G,qEC9ELgmD,EAAI,SAAJA,GAAI,OAAJA,EAAAA,EAAI,mBAAJA,EAAAA,EAAI,qBAAJA,EAAAA,EAAI,yBAAJA,EAAAA,EAAI,eAAJA,CAAI,EAAJA,GAAI,IAIT,MAcA,GAAernD,EAAAA,EAAAA,KAd6BslD,EAAG3C,YAE3Cp/C,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,yBACbkC,EAAAA,GAAAC,cAAC22C,EAAAA,GAAU,CAAC3oC,KAAK,SAAS6oC,UAAWgN,EAAK1E,IAC5B,WAAXA,EACCp/C,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,iCACbkC,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,oBAEXjO,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAO,WAAUmxC,S,6FCVnC,MAcA,GAAe3iD,EAAAA,EAAAA,KAZoBsnD,EAAGnsC,OAFjB,iBAEsCosC,kBACzD,MAAM7lD,GAAOC,EAAAA,EAAAA,MACP,qBAAEgN,IAAyBE,EAAAA,EAAAA,IAA4B,GAE7D,OACEtL,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GAAe,eAAgBkL,EAAsB44C,GAAe,qBACjFpsC,EACAosC,GAAehkD,EAAAA,GAAAC,cAAA,KAAGnC,UAAU,gBAAe4P,EAAAA,EAAAA,GAAWvP,EAAK6lD,GAAc,CAAC,QACvE,G,sNC2CV,MA+LA,GAAevnD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GAAUk9C,SAAQoK,oBACjB,MAAM,SAAEC,GAAavnD,EACf27C,EAAOuB,GAASnqB,EAAAA,EAAAA,KAAW/yB,EAAQk9C,QAAUv8C,EAC7C6mD,EAAatK,GAASuK,EAAAA,EAAAA,KAAiBznD,EAAQk9C,QAAUv8C,EACzDk4C,GAAmByO,GAAiB3L,GAAQA,EAAK+L,OACjDnP,EAAOM,EAAkB8C,GAAO5oB,EAAAA,EAAAA,KAAW/yB,EAAQA,EAAOyqB,eAGhE,MAAO,CACLkxB,OACA6L,aACA3O,kBACAkJ,kBANwBlhD,QAAQq8C,IAAU8E,EAAAA,EAAAA,KAAmBhiD,EAAQk9C,IAOrE3E,OACAgP,WACD,GAhBexnD,EA7L+B4nD,EACjDC,aACAvF,eACAE,aAAa,SACbE,SACAH,aACAI,WACA9C,kBACAtH,eACA0K,YACAL,eACAC,qBACAO,kBACAJ,mBACAG,gBACA2E,SACAC,aACAhF,QACAnH,OACA6L,aACAjP,OACAM,kBACA4C,gBACAsG,oBACAgG,cACAx2C,SACApQ,YACA8hD,oBACAsE,WACAnE,qBACA4E,cACAC,mBAEA,MAAM,aACJC,EAAY,gBACZ5E,EAAe,sBACfC,IACEhiD,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,MAELb,GAAIs8C,GAAWvB,GAAQ,CAAC,GAEhCj5C,EAAAA,EAAAA,KAAU,KACJw6C,IACEyF,GAAgB4E,GAAUW,EAAa,CAAEhL,WACzC0C,GAAiB2D,EAAsB,CAAEjV,OAAQ4O,EAAQyG,WAAW,IAC1E,GACC,CAACzG,EAAQyF,EAAc/C,EAAiB2H,KAE3CY,EAAAA,EAAAA,GApDsB,KAsDtB,MAAMvE,GAAyBj7C,EAAAA,EAAAA,IAC7B,CAACuG,EAAiD20C,KAC5ClI,GAAQkI,IACV30C,EAAEM,kBACF8zC,EAAgB,CACdQ,cAAc,EACd7jD,OAAQ07C,EAAK/6C,GACbmjD,WAAY,EACZh/C,OAAuB,UAAfw9C,EAAyByB,EAAAA,GAAkBC,cAAgBD,EAAAA,GAAkBE,qBAEzF,IAIEC,GAAeriD,EAAAA,EAAAA,KAAQ,IAAM65C,GAAQrD,IAAgB8L,EAAAA,EAAAA,IAAgBzI,IAAO,CAACA,EAAMrD,IAEzF,IAAKqD,IAASiM,EACZ,OAmDF,MAAMQ,EAAcL,EAChBA,EAAYK,aAAe5mD,EAAKumD,EAAYM,QAAU,uBAAyB,6BAC/E1nD,EAkCJ,OACE0C,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GAAe,WAAYpC,GAAY2P,KAAMgyC,GAASthD,EAAK0F,MAAQ,WAAQvG,GACxF86C,GAAiBlD,GAChBl1C,EAAAA,GAAAC,cAACy1C,EAAAA,EAAM,CACLwB,IAAI,iBACJ52C,KAAM4+C,EACNpvB,KAAMolB,EACNM,iBAAe,EACf13C,UAAU,wBAGdkC,EAAAA,GAAAC,cAACy1C,EAAAA,EAAM,CACLwB,IAAKoB,GAAM/6C,GACX+C,KAAM4+C,EACNpvB,KAAMy0B,GAAcjM,EACpBx6C,WAAWoC,EAAAA,EAAAA,GAAek4C,GAAiB,kBAC3C5C,gBAAiBA,EACjB4C,cAAeA,EACfuH,UAAWA,EACXC,kBAAmBA,EACnBoB,gBAAgB,cAChB7gD,QAASo8C,EAAkBgE,OAAyBjjD,IAEtD0C,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,QAtDbinD,EAEA/kD,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,mBACbkC,EAAAA,GAAAC,cAACihD,EAAAA,EAAa,CACZpxB,KAAMwoB,EACN6I,iBAAkBtB,EAClBC,gBAAiBA,EACjBtK,gBAAiBA,EACjB4C,cAAeA,EACf2H,mBAAoBA,IAErBgF,GAAe/kD,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,gBAAgBinD,IAMpD/kD,EAAAA,GAAAC,cAACihD,EAAAA,EAAa,CACZpxB,KAAMy0B,GAAcjM,EACpBkM,OAAQA,EACRC,WAAYA,EACZtD,iBAAkBtB,EAClBC,gBAAiBA,EACjBtK,gBAAiBA,EACjB4C,cAAeA,EACf2H,mBAAoBA,EACpB4E,YAAaA,KA8BXvF,IAAY5J,IAAoBkK,IA7GxC,WACE,GAAIN,EACF,OAAOC,EACLr/C,EAAAA,GAAAC,cAACo9C,EAAAA,EAAY,CAACv/C,UAAU,SAASmF,QAASm8C,IAE1Cp/C,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,SAAS2P,IAAI,QAC1BwxC,GAAcj/C,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAAClQ,UAAU,cAAcmQ,KAAMgxC,KAClDvxC,EAAAA,EAAAA,GAAW0xC,IAKlB,GAAIG,IAAuBb,EACzB,OACE1+C,EAAAA,GAAAC,cAACo9C,EAAAA,EAAY,CAACv/C,UAAU,SAASmF,QAAS9E,EAAK,cAInD,GAAIomD,GAAYU,YACd,OACEjlD,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,SAAS2P,IAAI,QAC3BzN,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,cAAc2P,IAAI,QAAQtP,EAAKomD,EAAWU,eAKhE,IAAK3M,EACH,OAGF,GAAI0G,EACF,OAAOh/C,EAAAA,GAAAC,cAACmhD,EAAAA,EAAY,CAACpC,aAAcA,IAGrC,IAAI7wB,EAAAA,EAAAA,IAAYmqB,EAAK/6C,IACnB,OAGF,MAAM2nD,GAAmBC,EAAAA,EAAAA,IAAchnD,EAAMm6C,EAAM6L,GAC7CiB,GAAwBllD,EAAAA,EAAAA,GAAe,SAAUglD,GAAoB,cAC3E,OACEllD,EAAAA,GAAAC,cAAA,QAAMnC,WAAWoC,EAAAA,EAAAA,GAAe,UAAUmlD,EAAAA,EAAAA,IAAa/M,EAAM6L,GAAY,IAAS,WAC/ErD,GAAgB9gD,EAAAA,GAAAC,cAAA,QAAMnC,UAAWsnD,GAAwBtE,GACzDoE,GAAoBllD,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,cAAc2P,IAAI,QAAQy3C,GAGrE,CA+D8DxD,IAEzDxzC,GAAUlO,EAAAA,GAAAC,cAACqlD,EAAAA,EAAY,MACvBV,EACG,I,qWChNV,MAuIA,GAAenoD,EAAAA,EAAAA,KAvIoB8oD,EACjC1oD,OACAy7C,OACA7qB,QACA+nB,kBACA4C,gBACAoN,eACArlD,cAGA,MAAMslD,GAAW7hD,EAAAA,EAAAA,IAAyB,MAEpCzF,GAAOC,EAAAA,EAAAA,MACP,SAAE0F,IAAaC,EAAAA,EAAAA,MAEf2hD,EAAYpN,IAAQqN,EAAAA,EAAAA,IAAcrN,GAClCsN,EAAgB/oD,IAAQgpD,EAAAA,EAAAA,IAAqBhpD,EAAKU,IAClDuoD,EAAsBjpD,IAAQkpD,EAAAA,EAAAA,IAAwBlpD,EAAKU,IAC3DuyB,EAAQwoB,GAAQz7C,EAChBmpD,EAAel2B,IAAS0lB,IAAoBkQ,IAAcE,IAAkBE,GAC5E,QAAEG,GAAYx4B,GAAS,CAAC,EAExBy4B,IAAez4B,GAASA,EAAMlwB,KAAOuyB,EAAKq2B,iBAAkBC,EAAAA,EAAAA,IAAkBt2B,EAAM,UAEpFu2B,EAAcL,GAAgBv4B,IAAUy4B,IAAcI,EAAAA,EAAAA,IAAkB74B,EAAO,aAC/E4uB,GAAiB93C,EAAAA,EAAAA,GAAS8hD,GAAeH,GAEzCK,EAAYP,GAAgBv4B,IAAUw4B,IAAWO,EAAAA,EAAAA,IAAyB/4B,GAC1Eg5B,GAAeliD,EAAAA,EAAAA,GAASgiD,GAExBG,EAAYV,GAAgBv4B,GAASw4B,IAAWU,EAAAA,EAAAA,IAA8Bl5B,GAG9Em5B,GAFeriD,EAAAA,EAAAA,GAASmiD,IAEQD,GAC/BI,EAAcC,IAAkBhoC,EAAAA,EAAAA,KACjCioC,EAAmBvpD,QAAQopD,KAAmBX,GAAWY,IACzDz7C,GAAuByyC,EAAAA,EAAAA,GAA6BkJ,GACpDC,EAAiBhB,IAAiBe,IAAqB1K,GAAkB5uB,GAAOw5B,WAAWC,QAC3FC,GAAwBzJ,EAAAA,EAAAA,GAC5BjwB,GAAOw5B,WAAWC,SAAUF,EAAgBljD,IAAa65C,EAAAA,IAErD6C,EAAW/yB,GAAS4uB,GAAkB2K,GAE5C3nD,EAAAA,EAAAA,KAAU,KACJomD,EAASr8C,UAAYo8C,IACvBC,EAASr8C,QAAQg+C,YAAc,EACjC,GACC,CAAC5B,IAEJ,MAAM6B,GAAc5oD,EAAAA,EAAAA,KAAQ,IACtB+2C,EACK4C,EAAgB,WAAa,wBAGlCsN,EACK,yBAGLE,EACK,eAGLE,EACK,qBADT,GAKC,CAACA,EAAqBJ,EAAWtN,EAAewN,EAAepQ,IAElE,IAAIvyC,EAEJ,GAAIokD,EACFpkD,EAAUjD,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAMo5C,EAAaC,KAAK,aACnC,GAAI9G,EACTv9C,EACEjD,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACG43C,EACChnD,EAAAA,GAAAC,cAAA,UAAQN,IAAKwnD,EAAuBrpD,UAAU,UAE9CkC,EAAAA,GAAAC,cAAA,OAAKk+C,IAAK9B,EAAgB7sC,WAAW,EAAO1R,UAAU,QAAQkZ,IAAI,KAEnEyW,IACCw4B,EACEjmD,EAAAA,GAAAC,cAACsnD,EAAAA,EAAc,CACbC,QAAShC,EACT7lD,IAAK8lD,EACLtH,IAAKyI,EACL9oD,WAAWoC,EAAAA,EAAAA,GAAe,eAAgBkL,GAC1Cq8C,OAAK,EACLC,yBAAuB,EACvBC,MAAI,EACJC,aAAW,EACXC,QAASf,IAGX9mD,EAAAA,GAAAC,cAAA,OACEk+C,IAAKyI,EACL9oD,WAAWoC,EAAAA,EAAAA,GAAe,eAAgBkL,GAC1C4L,IAAI,YAMT,GAAIshC,EAAM,CACf,MAAMwP,GAAeC,EAAAA,EAAAA,IAAgBzP,GACrCr1C,EAAU6kD,GAAeE,EAAAA,EAAAA,IAAgBF,EAAc,QAAKxqD,CAC9D,MAAO,GAAIT,EAAM,CACf,MAAM8P,GAAQ8sC,EAAAA,EAAAA,IAAat7C,EAAMtB,GACjCoG,EAAU0J,IAASq7C,EAAAA,EAAAA,IAAgBr7C,GAAO4hB,EAAAA,EAAAA,IAAS1xB,EAAKU,IAAM,EAAI,EACpE,MACE0F,EACEjD,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,mBACbkC,EAAAA,GAAAC,cAAC02C,EAAAA,EAAO,CAACxoC,MAAM,WAKrB,MAAMlB,GAAgB/M,EAAAA,EAAAA,GACpB,gBACA+pB,EAAAA,EAAAA,GAAkB6F,GAClB0lB,GAAmB,iBACnBsQ,GAAuB,qBACvBJ,GAAa,kBACbE,GAAiB,uBACfpQ,IAAoBgL,GAAa,YAGrC,OACExgD,EAAAA,GAAAC,cAAA,OAAKnC,UAAWmP,EAAe9M,QAASqgD,EAAWrgD,OAAU7C,GACvC,iBAAZ2F,GAAuByK,EAAAA,EAAAA,GAAWzK,EAAS,CAAC,aAAeA,EAC/D,I,eClLV,QAAgC,WAAhC,EAAmE,WAAnE,EAAqG,WAArG,EAAgK,WAAhK,EAAqS,WAArS,EAA6b,WC0X7b,GAAexG,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GAAUsuC,aACT,MAAMqN,GAAO5oB,EAAAA,EAAAA,KAAW/yB,EAAQsuC,GAC1BkZ,GAAaC,EAAAA,EAAAA,KAAiBznD,EAAQsuC,GACtCpuC,GAAOC,EAAAA,EAAAA,KAAWH,EAAQsuC,GAC1Bgd,GAAgBC,EAAAA,EAAAA,KAAiBvrD,EAAQsuC,IACzC,WAAEyV,EAAY9jD,OAAQurD,IAAkBjrD,EAAAA,EAAAA,KAAeP,GAAQyrD,YAC/D52B,EAAU30B,GAAM20B,SACd/T,SAAU4qC,IAAmBvlC,EAAAA,EAAAA,KAAyBnmB,IAAW,CAAC,EACpEy0C,EAAQ5f,GAAW62B,GAAiBzJ,EAAAA,EAAAA,KAAYjiD,EAAQsuC,EAAQod,QAAkB/qD,EAElFgrD,GAAehQ,GAAQz7C,IAAOyrD,YAIpC,MAAO,CACLhQ,OACA6L,aACAtnD,OACA6jD,aACAyH,gBACAI,mBATyBD,EAAc3rD,EAAOy3B,aAAav1B,KAAKypD,EAAYzgB,iBAAcvqC,EAU1FkrD,gBAT4C,gBAAtBF,GAAahuC,KAAyBguC,EAAYG,UAAOnrD,EAU/E2qD,mBACI7W,GAAS,CACXA,QACAyN,eAAeC,EAAAA,EAAAA,KAA0BniD,EAAQsuC,EAAQod,IAE5D,GA5Be3rD,EAtT2BgsD,EAC7CzE,gBACAuB,eACAlN,OACA6L,aACAtnD,OACA6jD,aACAyH,gBACA/W,QACAyN,gBACA0J,qBACAC,kBACAP,gBACAhd,aAEA,MAAM,gBACJgV,EAAe,iBACf0I,EAAgB,eAChBC,EAAc,+BACdC,EAA8B,sBAC9B3I,EAAqB,qBACrB4I,IACE5qD,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,MAEb0mD,EAAAA,EAAAA,GAAuBxM,EA5BM,SA4B0Bh7C,GAEvD,MAAMyrD,EAASd,GAAec,QAAUzqB,EAAAA,EAClC0qB,GAAiB7vB,EAAAA,EAAAA,GAAsBunB,GACvCuI,GAAoB9vB,EAAAA,EAAAA,GAAsBgvB,IACzCe,EAAmBC,IAAwBjlD,EAAAA,EAAAA,KAAS,GAErDklD,EAAiBF,EAAqB/qD,EAAK0F,MAAQ,WAAa,QAAW,QAE1EwlD,EAAmBC,IAAwBplD,EAAAA,EAAAA,IAAS,GACrDqlD,GAAUR,EAAO3oD,QAAU,GAA2B,IAAtBipD,EAChCG,GAAST,EAAO3oD,QAAU,GAAKipD,IAAsBN,EAAO3oD,OAAS,GAE3Ef,EAAAA,EAAAA,KAAU,KACJ0pD,EAAO3oD,OAASipD,GA5CI,GA6CtBnJ,EAAsB,CAAEjV,UAC1B,GACC,CAACoe,EAAmBpe,EAAQ8d,EAAO3oD,UAGtCf,EAAAA,EAAAA,KAAU,KACJ4pD,QAAwC3rD,IAAnB0rD,QAA+C1rD,IAAfojD,IACvDyI,GAAqB,GACrBG,EAAqBN,GACvB,GACC,CAACtI,EAAYsI,EAAgBC,KAGhC5pD,EAAAA,EAAAA,KAAU,KACJgqD,EAAoBN,EAAO3oD,SAC7B+oD,GAAqB,GACrBG,EAAqBriD,KAAKgD,IAAI,EAAG8+C,EAAO3oD,OAAS,IACnD,GACC,CAACipD,EAAmBN,EAAO3oD,SCtHjB,SACb2oD,EACAU,IAEApqD,EAAAA,EAAAA,KAAU,KACR0pD,EAAO7pD,MAAMuqD,EAAcA,EAPL,GAOuC5/C,SAAS4jB,IACpE,MAAMi8B,GAAYlD,EAAAA,EAAAA,IAAyB/4B,GACzBk8B,EAAAA,GAA0BD,IAE1CC,EAAAA,GAAkBD,EAAWllD,EAAAA,GAAeC,QAC9C,GACA,GACD,CAACglD,EAAcV,GACpB,CD2GEa,CAAiBb,EAAQM,GAEzB,MAAMQ,IAA0BvkD,EAAAA,EAAAA,IAAgB,KAC9C26C,EAAgB,CACdQ,cAAc,EACd7jD,OAAQquC,EACRyV,WAAY2I,EACZ3nD,OAAQuiD,EAAgBtD,EAAAA,GAAkBmJ,eAAiBnJ,EAAAA,GAAkBC,eAC7E,IAGEmJ,IAAoBzkD,EAAAA,EAAAA,IAAgB,KACpCkjD,EACFM,EAAqB,CAAEL,KAAMD,IAG1Bvd,EAOL0d,EAAiB,CAAEqB,WAAY/e,IAN7B2d,EAAe,CACbva,eAAgBka,EAAoBla,gBAKA,IAGpC4b,IAAsB3kD,EAAAA,EAAAA,IAAgB,KACtCikD,KAGJJ,GAAqB,GACrBG,EAAqBD,EAAoB,GAAE,IAGvCa,IAAkB5kD,EAAAA,EAAAA,IAAgB,KAClCkkD,KAGJL,GAAqB,GACrBG,EAAqBD,EAAoB,GAAE,IAGvCc,IAA6B7kD,EAAAA,EAAAA,IAAgB,KACjDujD,EAA+B,CAAEjsD,OAAQC,EAAMU,GAAI6sD,YAAY,GAAQ,IAgCzE,IAtBA/qD,EAAAA,EAAAA,KAAU,KACR,MAAMwwC,EAAU1/B,SAAS2Z,cAA+B,IAAGugC,KAC3D,GAAKxa,EAIL,OAAOhjC,EAAAA,EAAAA,IAAcgjC,EAAS,CAC5Bya,wBAAyB,8BACzBC,QAASnoC,EAAAA,GAAe,CAACvW,EAAGkrC,IACtBA,IAAcyT,EAAAA,GAAeC,OAC/BR,MACO,GACElT,IAAcyT,EAAAA,GAAeE,OACtCR,MACO,QAIP5sD,GACJ,GACD,CAAC4sD,GAAiBD,KAEhB3R,GAASz7C,EA6Fd,OAAIu0C,EAvFApxC,EAAAA,GAAAC,cAAA,OAAKnC,UDlN8iB,YCmNjjBkC,EAAAA,GAAAC,cAACghD,EAAAA,EAAS,CACR7P,MAAOA,EACP9wC,KAtJe,IAuJfxC,UDtN8lB,WCuN9lB6sD,gBDvN0nB,WCwN1nBC,aAAW,IAEb5qD,EAAAA,GAAAC,cAAA,MAAInC,UD1NqkB,WC0NviB2P,IAAKtP,EAAK0F,MAAQ,WAAQvG,IAAYoQ,EAAAA,EAAAA,GAAW0jC,EAAOzkC,QAC1F3M,EAAAA,GAAAC,cAAA,KAAGnC,UD3N2pB,YC4N3pB+gD,EAAgB1gD,EAAK,mBAAoB0gD,EAAe,KAAO1gD,EAAK,2BAkF3E6B,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GAAe,eAC1BuN,IAAKtP,EAAK0F,MAAQ,WAAQvG,GAE1B0C,EAAAA,GAAAC,cAAA,OAAKnC,UAAWusD,GAhFpB,WACE,MAAMQ,EAAoB5jD,KAAKgD,IAAI8+C,EAAO3oD,OAAQ6nD,GAAe6C,OAAS,GAC1E,IAAK/B,GAAU8B,GAAqB,EAClC,OAGF,MAAME,EAAa/jD,MAAMwO,KAAK,CAAEpV,OAAQ6G,KAAKC,IAAI2jD,EAvKxB,MAwKnBG,EAAkB3B,GAxKC,GAwK2C4B,GAA2B5B,EAE/F,OACErpD,EAAAA,GAAAC,cAAA,OAAKnC,UD5O8K,YC6OhLitD,EAAW5rD,KAAI,CAAC+rD,EAAGnjD,IAClB/H,EAAAA,GAAAC,cAAA,QAAMnC,WAAWoC,EAAAA,EAAAA,GD9OqL,WC8OpJ6H,IAAMijD,GD9O6K,gBCkP7O,CAiEOG,IACClH,GAAiBgE,GAAemD,eAChCprD,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GACdmqD,EACAd,IAAWc,IAGXrqD,EAAAA,GAAAC,cAAA,OAAKnC,UAAWusD,GACblsD,EAAK8pD,EAAcmD,cAAcnF,QAAU,uBAAyB,0BAI1EhC,GAAiBgE,GAAeoD,eAC/BrrD,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GACdmqD,GACCd,IAAWC,KAAWa,IAGvBrqD,EAAAA,GAAAC,cAAA,OAAKnC,UAAWusD,EAA8BlqD,QAtJxD,WACOopD,KACLJ,GAAqB,GACrBG,EAAqBP,EAAO3oD,OAAS,GACvC,IAmJcopD,IACAxpD,EAAAA,GAAAC,cAACy1C,EAAAA,EAAM,CACLjoB,MAAOw6B,EAAcoD,cACrBvtD,UDzUoH,WC0UpHwC,KAAK,SAGRnC,EAAK8pD,EAAcoD,cAAcpF,QAAU,uBAAyB,0BAI3EjmD,EAAAA,GAAAC,cAAC22C,EAAAA,GAAU,CAACE,UAAWuS,EAAmBp7C,KAAMm7C,GAC7CkC,KAGD/B,IACAvpD,EAAAA,GAAAC,cAAA,UACEqa,KAAK,SACL7M,IAAKtP,EAAK0F,MAAQ,WAAQvG,EAC1BQ,WAAWoC,EAAAA,EAAAA,GAAemqD,EDzV4R,YC0VtT,aAAYlsD,EAAK,oBACjBgC,QAAS8pD,MAGXT,IACAxpD,EAAAA,GAAAC,cAAA,UACEqa,KAAK,SACL7M,IAAKtP,EAAK0F,MAAQ,WAAQvG,EAC1BQ,WAAWoC,EAAAA,EAAAA,GAAemqD,EDlWqV,YCmW/W,aAAYlsD,EAAK,QACjBgC,QAAS+pD,MAKflqD,EAAAA,GAAAC,cAAA,OAAKnC,UDzW8Z,WCyWtY2P,IAAKtP,EAAK0F,MAAQ,MAAQ,SACnDy0C,GAAQz7C,IACRmD,EAAAA,GAAAC,cAACihD,EAAAA,EAAa,CACZpxB,KAAOwoB,GAAQz7C,EACfskD,iBAAe,EACfrB,gBAhTc,GAiTdC,mBAAoBgK,GACpBa,aAAW,EACXW,cAAY,IA5GtB,WACE,MAAMzF,GAAsBC,EAAAA,EAAAA,IAAwB9a,GAC9CugB,GAAkBr9B,EAAAA,EAAAA,IAAY8c,GACpC,IAAI6a,IAAuB0F,EAE3B,OAAIlT,EAEAt4C,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GACTmqD,EACA,UACAhF,EAAAA,EAAAA,IAAa/M,EAAM6L,IAAe,WAGpCnkD,EAAAA,GAAAC,cAAA,QAAMnC,UDnR8d,WCmRhc2P,IAAI,SACrC03C,EAAAA,EAAAA,IAAchnD,EAAMm6C,EAAM6L,IAE5BA,GAAYsH,0BACXzrD,EAAAA,GAAAC,cAAA,QAAMnC,UDvR2gB,WCuR9eqC,QAASgqD,IAC1CnqD,EAAAA,GAAAC,cAAA,YAAO9B,EAAK,uBAQpB6B,EAAAA,GAAAC,cAAA,QAAMnC,WAAWoC,EAAAA,EAAAA,GAAemqD,EAAe,UAAW58C,IAAI,SAC5D+Y,EAAAA,EAAAA,IAAc3pB,GACVsB,EAAK,cAAetB,EAAM6uD,cAAgB,EAAG,KAC7CvtD,EAAK,UAAWtB,EAAM6uD,cAAgB,EAAG,KAInD,CA6EOC,KAhIP,SAASL,GAAYruD,GACnB,MAAMwwB,EAAQs7B,EAAO3oD,OAAS,EAC1B2oD,EAAOM,QACP/rD,EAEJ,OACE0C,EAAAA,GAAAC,cAACslD,EAAY,CACXrO,IAAKmS,EACL/Q,KAAMA,EACNz7C,KAAMA,EACN4wB,MAAOA,EACP+3B,aAAchoD,QAAQP,GAAYuoD,GAClCrlD,QAAS0pD,IAGf,CAmHQ,I,wEEpWV,MAqCA,GAAeptD,EAAAA,EAAAA,KAlCiBwkD,EAC9B7P,QACAtzC,YACA6sD,kBACArqD,OACAsqD,cACAtQ,sBACAn6C,aAEIixC,EAAMwa,aAXY,MAWGxa,EAAMwa,YAE3B5rD,EAAAA,GAAAC,cAACkX,EAAAA,EAAW,CACV0wB,WAAYuJ,EAAMwa,YAClB9tD,UAAWA,EACXwC,KAAMA,EACNurD,8BAA+BvR,EAC/BwR,UAAYlB,OAA2BttD,EAnB5B,EAoBX6C,QAASA,IAMbH,EAAAA,GAAAC,cAAC8rD,EAAAA,EAAgB,CACfC,UAAW5a,EAAM4a,UACjBr/C,MAAOykC,EAAMzkC,MACbs/C,QAAS7a,EAAM7zC,GACfO,UAAWA,EACX6sD,gBAAiBA,EACjBxqD,QAASA,K,mHC3Bf,MAkBA,GAAe1D,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GAAUqiD,kBACJA,EAAanF,OAMX,CAAEqS,YAFUx8B,EAAAA,EAAAA,KAAW/yB,EAAQqiD,EAAanF,SAH1C,CAAC,GAHMn9C,EAlB4B0kD,EAAGpC,eAAckN,iBAC/D,MAAM/tD,GAAOC,EAAAA,EAAAA,KACP+tD,EAAiBD,IAAeA,EAAW7H,SAAUxL,EAAAA,EAAAA,IAAuBqT,GAC5EjpD,EAAU9E,EAAK6gD,EAAa52B,QAE/BzS,QAAQ,SAAU,IAClBA,QAAQ,UAAWqpC,EAAavhB,OAAS,IAAIyI,OAEhD,OACElmC,EAAAA,GAAAC,cAAA,KAAGnC,UAAU,gBAAgB2P,IAAKtP,EAAK0F,MAAQ,MAAQ,QACpDsoD,GACCnsD,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,cAAc2P,IAAI,SAAQC,EAAAA,EAAAA,GAAWy+C,IAEvDnsD,EAAAA,GAAAC,cAACo9C,EAAAA,EAAY,CAACp6C,QAASA,IACrB,I,0KCZR,MAyGA,GAAexG,EAAAA,EAAAA,KA3Fe2vD,EAC5B7qD,UAASC,cAAawhD,cAAa1I,sBAAqB+R,qBAExD,MAAMluD,GAAOC,EAAAA,EAAAA,KAEb,IAAIkuD,GAAgDC,EAAAA,EAAAA,IAAkBhrD,GAEtE,IAAK+qD,EAAU,CACb,MAAMv/B,GAAOy/B,EAAAA,EAAAA,IAAsBjrD,GACnC,GAAIwrB,EAAM,CACR,MAAM,IAAEH,EAAG,OAAE6/B,GAAW1/B,EAExBu/B,EAAW,CACTI,SAAUD,EAAO92C,QAAQ,QAAS,IAClCiX,IAAKA,EAAIrL,SAAS,OAASqL,EAAMA,EAAIrL,SAAS,KAAQ,UAASqL,IAAS,UAASA,IACjF+/B,sBAAsBC,EAAAA,EAAAA,IAAerrD,IAAUqW,OAASgV,GACpDigC,EAAAA,EAAAA,GAAqB1uD,EAAMoD,OAASjE,OAAWA,EA9BnC,UA+BZA,EAER,CACF,CAEA,MAAM0rB,GAAqB1jB,EAAAA,EAAAA,IAAgB,KACzC+mD,EAAe9qD,EAAQ,IAGzB,IAAK+qD,EACH,OAGF,MAAM,SACJI,EAAQ,IACR9/B,EAAG,WACHkgC,EAAU,MACVngD,EAAK,YACLq3C,EAAW,qBACX2I,EAAoB,MACpBl/B,EAAK,MACLpqB,GACEipD,EAEES,GAAwBvrD,GAAewiD,IAAegJ,EAAAA,EAAAA,GAAShJ,EAvD/C,KAyDhBlmD,GAAYoC,EAAAA,EAAAA,GAChB,uBACEutB,IAAUpqB,GAAU,iBAGlB4pD,EAAkBrgC,EAAIjX,QAAQ,UAAW,KAAOm3C,EAEtD,OACE9sD,EAAAA,GAAAC,cAAA,OACEnC,UAAWA,EACX,gBAAe4uD,GAAYI,GAAY,GACvCr/C,IAAKtP,EAAK0F,MAAQ,WAAQvG,GAEzBmwB,GACCztB,EAAAA,GAAAC,cAAC8iD,EAAAA,EAAK,CAACxhD,QAASA,EAASyhD,YAAaA,EAAa1I,oBAAqBA,IAE1Et6C,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,WACbkC,EAAAA,GAAAC,cAAC0N,EAAAA,EAAI,CAAC9J,MAAO1F,EAAK0F,MAAO/F,UAAU,aAAaqC,QAAS6oB,IACtDtb,EAAAA,EAAAA,GAAWf,GAAS+/C,GAAYI,KAEjCC,GAAwBJ,IACxB3sD,EAAAA,GAAAC,cAAC0N,EAAAA,EAAI,CAAC9J,MAAO1F,EAAK0F,MAAO/F,UAAU,mBAAmBqC,QAAS6oB,GAC5D2jC,GAAyBI,IAAwBr/C,EAAAA,EAAAA,GAAWq/C,IAGjE/sD,EAAAA,GAAAC,cAACitD,EAAAA,EAAQ,CACPtgC,IAAKA,EACL9uB,UAAU,YACV8Z,KAAMq1C,EACNppD,MAAO1F,EAAK0F,QAEbrC,GAAexB,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,gBAAe4P,EAAAA,EAAAA,GAAWlM,KAE1DA,GACCxB,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,gBACbkC,EAAAA,GAAAC,cAAC0N,EAAAA,EAAI,CACH7P,UAAU,OACVqC,QAAS6oB,EACTnlB,MAAO1F,EAAK0F,QAEX+J,EAAAA,EAAAA,IAAoBzP,EAAqB,IAAfoD,EAAQI,QAIrC,G,wQC/DV,MAAMwrD,EAAO,IAGPC,EAAgCA,EACpCtvD,YACAyD,UACAikB,YACAG,SACAD,aACA2nC,gBACA1gD,QACAwd,aACA64B,cACAt4B,eACA4iC,eACAC,mBACAC,mCACAC,gCACA5B,gCACA1rD,cAGA,MAAMR,GAAMiE,EAAAA,EAAAA,IAAuB,MAC7B23C,GAAiBC,EAAAA,EAAAA,IAAkB77C,EAAK8tD,GAExCC,GAA6CjvD,EAAAA,EAAAA,KAAQ,KACzD,MAAM+E,EAA6B,YAApBgiB,GAAWlL,MAAsBkL,EAAUmoC,YAAepsD,GAAS0B,QAClF,GAAKO,EAIL,MAAO,CACLP,QAASO,EACV,GACA,CAACjC,EAASikB,IAEPipB,EAAMif,GAAgBzqD,SAASI,OAAOwgD,MAAQ6J,EAAezqD,QAAQI,WAAQ/F,EAC7EswD,EAAmBpwD,QAAQixC,IAAQA,EAAIof,mBAAmBztD,QAE1DspD,EAAYgE,IAAkBvK,EAAAA,EAAAA,IAAoBuK,EAAgBE,EAAmB,OAAS,aAC9F1K,GAAe3+C,EAAAA,EAAAA,GAASmlD,GAAYnO,GACpCuS,GAAiBC,EAAAA,EAAAA,GAAaL,GAE9BM,EAAexwD,QAAQkwD,IAAkBO,EAAAA,EAAAA,IAAqBP,IAC9D9uB,EAAYphC,QAAQkwD,IAAkBrK,EAAAA,EAAAA,IAAoBqK,IAC1DQ,EAAU1wD,QAA4B,YAApBgoB,GAAWlL,MAAsBkL,EAAU0oC,SAC7DC,EAAuC,YAApB3oC,GAAWlL,KAAqBkL,EAAU4oC,eAAY9wD,EAEzE+wD,EAAkB9sD,IAAW+sD,EAAAA,EAAAA,IAAsB/sD,IACnD,eAAEgtD,IAAmBC,EAAAA,EAAAA,GACzBjB,EAAkBhsD,GAAS3E,OAAQyxD,EAAkB9sD,GAAShE,QAAKD,EAAWkwD,GAG1ErvD,GAAOC,EAAAA,EAAAA,KAEPoD,EAAcmkB,GAAS8oC,EAAAA,EAAAA,IAAatwD,EAAMwnB,GAC3CwoC,GAAkB9nC,gBAAkB9kB,GAAS0kB,aAAaI,eACzDqoC,EAAkBhpC,GAAa+oC,EAAAA,EAAAA,IAAatwD,EAAMunB,QAAcpoB,EAChEqxD,EAAqBtB,GAAgBoB,EAAAA,EAAAA,IAAatwD,EAAMkvD,GAC1D9rD,GAAS0kB,aAAaI,eACpBuoC,GAAiBjpC,GAAUA,EAAOpoB,KAAO8vD,GAAe9vD,IAExD,YAAEm/C,GAAW,gBAAEmS,KAAoBC,EAAAA,EAAAA,GAAa3uD,GA+FtD,OACEH,EAAAA,GAAAC,cAAC8uD,EAAAA,EAAgB,CACfj/B,KAAMnK,EACNqpC,mBAAmB,iDACnBrvD,IAAKA,EACLsvD,aAAW,EACX3B,aAAcA,EACdxvD,WAAWoC,EAAAA,EAAAA,GACT,kBACApC,EACAowD,GAAW,WACXJ,GAAkB,aAClB,gBAEFrgD,IAAKtP,EAAK0F,MAAQ,WAAQvG,EAC1B6C,QAASu8C,GACTrF,YAAawX,IAEb7uD,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,iBACfkC,EAAAA,GAAAC,cAACqlD,EAAAA,EAAY,MACZwI,GAgBP,SACE5R,EACAgT,EACAC,EACAnB,EACAhL,EACApkB,GAEA,MAAM,MAAEp1B,EAAK,OAAEC,IAAW2lD,EAAAA,EAAAA,MAEpBC,EAASH,GAAWhT,EACpBoT,EAAoBH,GAAeD,EAEzC,OACElvD,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GAAe,iBAAkB8tD,GAAgB,WAC7DpvB,IAAc0wB,GACdtvD,EAAAA,GAAAC,cAAA,OACEk+C,IAAKkR,EACL7lD,MAAOA,EACPC,OAAQA,EACRuN,IAAI,GACJlZ,UAAU,YACV0R,WAAW,KAGbovB,GAAa0wB,GACbtvD,EAAAA,GAAAC,cAAA,SACEk+C,IAAK+Q,EACL1lD,MAAOA,EACPC,OAAQA,EACRm+C,aAAW,EACXF,yBAAuB,EACvB5pD,UAAU,cAGdkC,EAAAA,GAAAC,cAAC0jD,EAAAA,EAAY,CACXzH,aAAcoT,EAAoBpT,EAAemT,EACjDzL,UAAWpmD,QAAQohC,GACnBp1B,MAAOA,EACPC,OAAQA,IAETu5C,GAAehjD,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,cAGtC,CA5DyByxD,CACjBzB,EAAgB5K,EAAc0K,EAAkBI,EAAchL,EAAapkB,GAE7E5+B,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,gBACbkC,EAAAA,GAAAC,cAAA,KAAGnC,WAAWoC,EAAAA,EAAAA,GAAe,wBAAyBguD,GAAW,cApH7C,YAApB1oC,GAAWlL,MAAsBkL,EAAUc,WACtCkpC,EAAAA,EAAAA,GAAuB,CAC5B53C,KAAM4N,EAAUc,UAAU1O,KAC1BD,SAAU6N,EAAUc,UAAU3O,SAC9B83C,WAAW,EACXC,UArEW,KAyEVnuD,EAKHvB,EAAAA,GAAAC,cAAC0vD,EAAAA,EAAc,CACbpuD,QAASA,EACTquD,QAASpyD,QAAQswD,GACjBS,eAAgBA,EAChBd,8BAA+BA,EAC/B5B,8BAA+BA,EAC/B6D,UApFW,KA0ENvlC,GAeX,SAAgC3mB,GAC9B,IAAKA,GAASA,EAAMP,QAAQ2U,KAAM,OAAOu1C,EACzC,MAAMnJ,GAAc6L,EAAAA,EAAAA,IAA+B1xD,EAAMqF,EAAMP,QAAS,CAAC,GACzE,OAAK+gD,GAAeA,IAAgB8L,EAAAA,IAElC9vD,EAAAA,GAAAC,cAAA,aACGyN,EAAAA,EAAAA,GAAWs2C,IAHkDmJ,CAMpE,CAxByB4C,CAAuBrC,IAAmBP,GA6G7DntD,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,iBA7ErB,WACE,GAAI6O,EACF,OAAOe,EAAAA,EAAAA,GAAWf,GAGpB,IAAKnL,EACH,OAAO2rD,EAGT,IAAI1qC,EACAiD,KACEc,EAAAA,EAAAA,IAAcd,KAChBjD,EAAO,mBAGLutC,EAAAA,EAAAA,IAAYtqC,KACdjD,EAAO,iBAIX,MAAMwtC,EAAiBvlC,GAAgBltB,QAAQgoB,GAAa,cAAeA,GAAaA,GAAWc,WAEnG,OACEtmB,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,6BA5Bb4nB,MACD6I,EAAAA,EAAAA,IAAS7I,GAAYnoB,KACrBmoB,EAAWnoB,KAAOooB,GAAQpoB,KA4BxByC,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,oBACb4P,EAAAA,EAAAA,GAAWuiD,EAAiB9xD,EAAK,eAAgBqD,GAAeA,IAGpEihB,GAAQziB,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAMwU,EAAM3kB,UAAU,uBACpC2kB,GAAQisC,GACP1uD,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,yBACb4P,EAAAA,EAAAA,GAAWghD,IAKtB,CAyCSwB,GAtCAvB,IAAuBC,IAC5B5uD,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,mCACdkC,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAMo/C,EAAgB,eAAiB,UAAWvvD,UAAU,yBAClEkC,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,yBACb4P,EAAAA,EAAAA,GAAWihD,OAsCC,EAkDVlkC,GAA0B0lC,EAAAA,EAAAA,GAAiB/C,GAExD,G,kBC/SO,SAASgD,EAAqBC,EAA4BC,GAC/D,MAAM,MACJC,EAAK,OAAEC,EAAM,mBAAEC,EAAkB,gBAAEC,EAAe,WAAEC,EAAU,iBAAEC,GAC9DP,EAEEQ,EAAiBP,GAAmBE,IAAWC,GAAsBE,EAW3E,MAAO,CACLG,aAVmBD,EAAiBN,EAAQ,EAAIA,EAWhDQ,aAVmBvzD,QAAQkzD,GAW3BF,SACAQ,eAVsBN,GAAmBG,EAAkB,GACxDL,EAASC,IAAuBC,EAAkBD,GAUrDQ,gBATsBP,EAAkBA,EAAkBF,EAAS,EAUnEU,gBARqC5zD,IAApBozD,EASjBE,mBAEJ,C,kECzBe,SAASO,EAAe93C,EAAkB+3C,GACvD,OAAOA,EAAkB,GAAEC,EAAAA,MAAkBh4C,IAAc,IAAGA,GAChE,C,iXCFA,MAAMi4C,EAAc,KACdC,EAAe,MAKd,SAASC,IACd,MAAMx2C,EAAM,IAAID,KAChBC,EAAIy2C,SAAS,EAAG,EAAG,EAAG,GACtB,MAAMC,EAAM12C,EAAI22C,SACVC,EAAO52C,EAAI62C,UAAYH,GAAe,IAARA,GAAa,EAAI,GACrD,OAAO,IAAI32C,KAAKC,EAAI82C,QAAQF,IAAOG,SACrC,CASO,SAASC,EAAgBC,EAAuCC,GACrE,GAAc,IAAVA,EAAa,OAAOD,EAExB,MAAME,EAA+C,GAErD,IAAK,MAAMniB,KAASiiB,EAAQ,CAC1B,IAAI/wD,GAAS8uC,EAAMoiB,YAAcF,GAASX,EACtCpwD,GAAO6uC,EAAMqiB,UAAYH,GAASX,EAElCrwD,EAAQ,IAAGA,GAASqwD,GACpBpwD,GAAO,IAAGA,GAAOowD,GAEjBrwD,EAAQC,GACVgxD,EAAc7kD,KAAK,CAAE8kD,YAAalxD,EAAOmxD,UAAWd,QACpDY,EAAc7kD,KAAK,CAAE8kD,YAAa,EAAGC,UAAWlxD,KAEhDgxD,EAAc7kD,KAAK,CAAE8kD,YAAalxD,EAAOmxD,UAAWlxD,GAExD,CAKA,OAHAgxD,EAAcG,MAAK,CAACC,EAAGC,IAAMD,EAAEH,YAAcI,EAAEJ,cAGxCD,EAAc91C,QAAsC,CAACC,EAAK0zB,KAC/D,MAAMyiB,EAAOn2C,EAAIA,EAAIlc,OAAS,GAM9B,OALIqyD,GAAQA,EAAKJ,WAAariB,EAAMoiB,YAClCK,EAAKJ,UAAYprD,KAAKgD,IAAIwoD,EAAKJ,UAAWriB,EAAMqiB,WAEhD/1C,EAAIhP,KAAK0iC,GAEJ1zB,CAAG,GACT,GACL,C,4FCtDA,QAA8R,WC2BxRo2C,EAAO1rD,MAAMwO,KAAK,CAAEpV,OAAQ,IAAK,CAAC8qD,EAAGnjD,IAAMA,IA0KjD,GAAetL,EAAAA,EAAAA,KApKOk2D,EACpBC,oBAGA,MAAMC,GAAgBjvD,EAAAA,EAAAA,IAAuB,OACtCkvD,EAAYC,EAAQC,IAAYl0C,EAAAA,EAAAA,IAAQ,IACxCm0C,EAAUC,EAAcC,IAAmBr0C,EAAAA,EAAAA,IAAQ,GACpD3gB,GAAOC,EAAAA,EAAAA,KACPg1D,GAAcC,EAAAA,EAAAA,MAEpBhyB,EAAAA,EAAAA,GAAY+xB,EAAa,KAEzB,MAAME,GAAiBC,EAAAA,EAAAA,IAAmB52D,GAAWA,EAAO62D,WAAW30D,OACjE20D,GAAYvmC,EAAAA,EAAAA,GAAgBqmC,EAAgB,CAACA,IAC7CG,GAA2Bh1D,EAAAA,EAAAA,KAAQ,KACvC,IAAK+0D,EAAW,OAAO,EACvB,MAAME,EAAWF,EAAUZ,EAAce,YAEzC,QFhCuC,IAAlC,IAAI54C,MAAO64C,oBEgCGF,EAASG,WAAa,EAAE,GAC1C,CAACjB,EAAce,WAAYH,IAExBM,GAAYr1D,EAAAA,EAAAA,KAAQ,KACxB,MAAMs1D,EAAYvC,IAEZwC,EFDH,SAAmB/B,GACxB,MAAM+B,EAAsD,CAAC,EAE7D,IAAK,MAAMhkB,KAASiiB,EAAQ,CAC1B,MAAM/wD,EAAQ8uC,EAAMoiB,YACdjxD,EAAM6uC,EAAMqiB,UAEZ4B,EAAWhtD,KAAKgB,MAAM/G,EAAQowD,GAC9B4C,EAASjtD,KAAKgB,OAAO9G,EAAM,GAAKmwD,GAEtC,IAAK,IAAII,EAAMuC,EAAUvC,GAAOwC,EAAQxC,IACjCsC,EAAKtC,KACRsC,EAAKtC,GAAO,IAGdsC,EAAKtC,GAAKpkD,KAAK,CACb8kD,YAAanrD,KAAKgD,IAAI,EAAG/I,EAAQwwD,EAAMJ,GACvCe,UAAWprD,KAAKC,IAAIoqD,EAAanwD,EAAMuwD,EAAMJ,IAGnD,CAEA,OAAO0C,CACT,CEtBiBG,CADQnC,EAAgBY,EAAckB,UAAWb,EAAWQ,EAA2B,IAE9FlrD,EAAmC,CAAC,EAiB1C,OAfAmqD,EAAK7oD,SAAS6nD,IACZ,MAAM0C,EAAWJ,EAAKtC,GAMtBnpD,EAAOmpD,GALF0C,EAKSA,EAASj1D,KAAI,EAAGizD,cAAaC,eACrCA,EAAYD,GAAgB,KAAgBj0D,EAAK,8BAG7C,IAFMk2D,EAAAA,EAAAA,IAAWl2D,EAAM41D,EAA0B,GAAd3B,EAAmB,WAClDiC,EAAAA,EAAAA,IAAWl2D,EAAM41D,EAAwB,GAAZ1B,EAAiB,SAP5C,CAACl0D,EAAK,0BASpB,IAGGoK,CAAM,GACZ,CAACqqD,EAAckB,UAAWb,EAAU90D,EAAMs1D,IAEvCa,GAAiB71D,EAAAA,EAAAA,KAAQ,KAC7B,MAAM81D,EAAiBvC,EAAgBY,EAAckB,UAAWL,GAE1DM,EAAYvC,IAEZgD,IADM,IAAIz5C,MAAOg3C,UACcgC,GAAa,IAAO,GAEzD,OAAOQ,EAAe7tC,MAAK,EAAG0rC,cAAaC,eACzCD,GAAeoC,GAAyBA,GAAyBnC,GACjE,GACD,CAACO,EAAckB,UAAWL,IAEvBgB,GAAah2D,EAAAA,EAAAA,KAAQ,KACb,IAAIsc,KAAKA,KAAKC,OAASi4C,EAAW,EAA+B,GAA3BQ,EAAgC,MACtE9B,SAAW,GAAK,GAC3B,CAACsB,EAAUQ,IAER/W,GAAcp3C,EAAAA,EAAAA,IAAgB,KAC9BwtD,EACFE,IAEAD,GACF,IAGI2B,GAAsBpvD,EAAAA,EAAAA,IAAiBuG,IAC3CA,EAAEM,kBAEE8mD,EACFE,IAEAD,GACF,KAGF7zD,EAAAA,EAAAA,KAAU,KACR,IAAKyzD,EAAY,OACjB,MAAM6B,EAAQxkD,SAAS2Z,cAA4B,IAAG8qC,EAAAA,SAA8BvK,KACpF,IAAKsK,EAAO,OAEZ,MAAMlrD,EAASkrD,EAAME,cACrB3zB,EAAAA,EAAAA,KAAgB,KACd2xB,EAAczpD,QAAShI,MAAMqI,OAAU,GAAEA,KAAU,GACnD,GACD,CAACqpD,IAEJ,MAAMgC,GAAuBxvD,EAAAA,EAAAA,IAAgB,KAC3C,MAAMqvD,EAAQxkD,SAAS2Z,cAA4B,IAAGirC,EAAAA,SAA0B1K,MAEhF9tC,EAAAA,EAAAA,KAAe,KACb,MAAM9S,EAASkrD,EAAME,cACrB3zB,EAAAA,EAAAA,KAAgB,KACd2xB,EAAczpD,QAAShI,MAAMqI,OAAU,GAAEA,KAAU,GACnD,GACF,IAGJ,OACEzJ,EAAAA,GAAAC,cAAC+0D,EAAAA,EAAQ,CACPvyC,KAAK,QACLwyC,cD1IoD,WC2IpDC,WAAS,EACTp3D,UD5IiB,WC6IjBq3D,SAAUrC,EACV5kD,QAAM,EACNknD,QAAM,EACNC,qBAAmB,EACnBl1D,QAASu8C,GAET18C,EAAAA,GAAAC,cAAA,OAAKnC,UDnJ6B,YCoJhCkC,EAAAA,GAAAC,cAAA,OAAKnC,UDpJ+D,YCqJlEkC,EAAAA,GAAAC,cAAA,WAAM9B,EAAK,yBACX6B,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GDtJ0F,WCsJ5Do0D,GDtJ6G,aCuJvIn2D,EAAjBm2D,EAAsB,8BAAsC,mCAGjEt0D,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAAClQ,UD1J0K,WC0JjJmQ,KAAM6kD,EAAa,KAAO,UAE1DA,GACC9yD,EAAAA,GAAAC,cAAA,OAAKnC,UD7JmF,YC8JrFN,QAAQi2D,IACPzzD,EAAAA,GAAAC,cAAA,OACEnC,UDhKiO,WCiKjOwpD,KAAK,SACLgO,SAAU,EACVje,YAAcj1B,EAAAA,QAAqC9kB,EAAtBo3D,EAC7Bv0D,QAASiiB,EAAAA,GAAesyC,OAAsBp3D,GAE7Ca,EAAK80D,EAAW,+BAAiC,oCAGtDjzD,EAAAA,GAAAC,cAAC22C,EAAAA,GAAU,CACT94C,UD1K2P,WC2K3P6B,IAAKkzD,EACL5kD,KAAK,OACL6oC,UAAW3M,OAAO8oB,GAClBsC,QAAST,GAET90D,EAAAA,GAAAC,cAAA,MAAInC,UAAWusD,GACZqI,EAAKvzD,KAAKuyD,GACT1xD,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACEpP,EAAAA,GAAAC,cAAA,MAAInC,WAAWoC,EAAAA,EAAAA,GDnLwS,WCmLzQwxD,IAAQ+C,GDnLkT,cCoLrWe,EAAAA,EAAAA,IAAcr3D,EAAc,IAARuzD,EAAY,EAAIA,EAAM,IAE7C1xD,EAAAA,GAAAC,cAAA,MAAInC,UDtL8R,YCuL/Rg2D,EAAUpC,GAAKvyD,KAAKs2D,GACnBz1D,EAAAA,GAAAC,cAAA,WAAMw1D,YASb,I,gDCjMf,MC8BMC,EAAgB,CAAC,KAAM,KAAM,MAmLnC,GAAej5D,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KACjBC,IACC,MAAM,gBAAEg5D,EAAe,qBAAEC,GAAyBj5D,EAClD,MAAO,CACLg5D,kBACAC,uBACAC,0BAA0B//B,EAAAA,EAAAA,KAA+Bn5B,GAC1D,GAPeD,EAnKCo5D,EACnBxd,OACAyd,WACAF,2BACAF,kBACAC,uBACAI,mBAEA,MAAM,cAAEC,EAAa,gBAAEC,IAAoBh4D,EAAAA,EAAAA,MAErCyB,GAAMiE,EAAAA,EAAAA,IAAuB,MAC7BuyD,GAAqBvyD,EAAAA,EAAAA,KAAO,IAC3BwyD,EAAoBC,EAAeC,IAAiBx3C,EAAAA,EAAAA,KAErD3gB,GAAOC,EAAAA,EAAAA,MAEP,cACJm4D,EAAa,QACbC,EAAO,IACPC,IACEh4D,EAAAA,EAAAA,KAAQ,KACV,MAAMi4D,EAAQ,IAAI37C,KACZpZ,EAAO,IAAIoZ,KAUjB,OATIg7C,EAASY,MACXh1D,EAAKkwC,YAAYkkB,EAASY,MAE5Bh1D,EAAKi1D,SAASb,EAASc,MAAQ,GAC/Bl1D,EAAKmwD,QAAQiE,EAASrE,KACtB/vD,EAAK8vD,SAAS,EAAG,EAAG,EAAG,GAIhB,CACL8E,eAHgBO,EAAAA,EAAAA,GAAmBn1D,EAAMxD,EAAK44D,MAAM,EAAM,QAI1DP,QAHsB70D,EAAKkwD,YAAc6E,EAAM7E,WAAalwD,EAAKq1D,aAAeN,EAAMM,WAItFP,IAAKV,EAASY,MAAQM,GAAOt1D,GAC9B,GACA,CAACo0D,EAAU53D,IAER+4D,GAAgBz4D,EAAAA,EAAAA,KAAQ,KAC5B,IAAKg4D,IAAQD,EAAS,OACtB,MAAMW,EAAUxB,GAAiB1hC,UAAU70B,QAAO,EAAGq+B,WAAYA,GAAO25B,SA3DhD,QA4DxB,IAAKD,EAAS,OACd,MAAME,GAAUC,EAAAA,EAAAA,IAAqBH,EAAS,SAG9C,OADkBV,EAAIhrB,WAAW8rB,MAAM,IACtBp4D,KAAKq4D,GAAUH,EAAQG,EAhEhB,OAgE6C,GACpE,CAACf,EAAKd,GAAiB1hC,SAAUuiC,IAE9BiB,GAAgBh5D,EAAAA,EAAAA,KAAQ,KAC5B,IAAK+3D,EAAS,OACd,MAAMkB,EAAehC,EAAczuD,KAAKgB,MAAMhB,KAAK0wD,SAAWjC,EAAct1D,SAC5E,OAAOw1D,GAAsB3hC,UAAUvH,MAAK,EAAG+Q,WAAYA,IAAUi6B,GAAa,GACjF,CAAC9B,GAAsB3hC,SAAUuiC,KAGpCn3D,EAAAA,EAAAA,KAAU,KACR,GAAKm3D,GAAYU,IAEjBA,EAAcrtD,SAAS+kC,IACrB,MAAMgpB,GAAOC,EAAAA,EAAAA,IAAoBjpB,EAAS,WAC1C+a,EAAAA,GAAkBiO,EAAMpzD,EAAAA,GAAeC,QAAQ,IAG7CgzD,GAAe,CACjB,MAAMK,GAAaD,EAAAA,EAAAA,IAAoBJ,EAAe,WACtD9N,EAAAA,GAAkBmO,EAAYtzD,EAAAA,GAAeC,QAC/C,IACC,CAACgzD,EAAejB,EAASU,KAE5Bh8B,EAAAA,EAAAA,GAAWo7B,EAAeF,EApFD,SAoF2C94D,IAEpE+B,EAAAA,EAAAA,KAAU,KACR,GAAI+2D,EAAoB,CACtBD,EAAmB/sD,SAAU,EAE7B,MAAM2uD,EAAS5nD,SAASwsB,eAAeq5B,EAAe,aAAe,eACrE,IAAK+B,EAAQ,QAEbx7C,EAAAA,EAAAA,KAAe,KACb,MAAM,IACJqzB,EAAG,KAAE9jC,EAAI,MAAEtC,EAAK,OAAEC,GAChBsuD,EAAOhsD,wBAEXmqD,EAAgB,CACdtmB,MACA9jC,OACAtC,QACAC,SACArI,MAAO,YACP,GAEN,IACC,CAAC40D,EAAcI,IAElB,MAAM4B,EAAY,kBAAiBxB,EAAU,QAAU,UAAUC,EAAM,OAAS,KAE1EwB,EAAiBzB,IAAYle,EAAK4f,YAAc5f,EAAK+L,SAAWwR,EAEhEsC,GAAsB7yD,EAAAA,EAAAA,IAAgB,KAC1C2wD,EAAc,CAAEmC,UAAW9f,EAAK/6C,IAAK,IAGjCm/C,GAAcp3C,EAAAA,EAAAA,IAAgB,KAC7BkxD,IAEDyB,GAAkB9B,EAAmB/sD,QACvC+uD,IAIF9B,IAAe,IAGXlB,GAAYqB,IAAYyB,EAE9B,OACEj4D,EAAAA,GAAAC,cAAA,OAAKnC,UDnKc,YCoKjBkC,EAAAA,GAAAC,cAAC+0D,EAAAA,EAAQ,CACPvyC,KAAK,WACL41C,cAAeJ,EAAiB,YAAS36D,EACzCg7D,uBDvKyL,WCwKzLpD,WAAS,EACTE,QAAM,EACNz1D,IAAKA,EACLuO,QAASinD,EACTh1D,QAASu8C,EACTyY,SAAUA,EACVoD,qBAAsBJ,GAEtBn4D,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,QAAQ2P,IAAKtP,EAAK0F,MAAQ,WAAQvG,IAC9CoQ,EAAAA,EAAAA,GAAWvP,EAAK65D,EAAU,CAACzB,EAAeE,QAAMn5D,EAAWm5D,KAE9Dz2D,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,YAAYK,EAAKq4D,EAAU,uBAAyB,qBAErEJ,GAAsBoC,EAAAA,IAA4BtB,GAAe/3D,KAAI,CAACyvC,EAAS6pB,IAC9Ez4D,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GDvLsB,WCuLQu4D,EAAQ,GDvL4F,YCwL7Ir3D,MAAQ,mBAAkBq3D,KAE1Bz4D,EAAAA,GAAAC,cAACy4D,EAAAA,EAAW,CACVC,aAAch5D,EACdivC,QAASA,EACTtuC,KAhKgB,IAiKhBs4D,aAAW,OAIhBxC,GAAsBqB,GACrBz3D,EAAAA,GAAAC,cAAA,OAAKnC,UDnM8J,YCoMjKkC,EAAAA,GAAAC,cAACy4D,EAAAA,EAAW,CACVC,aAAch5D,EACdivC,QAAS6oB,EACTn3D,KAxKQ,IAyKRu4D,YAAU,EACVD,aAAW,KAIb,KAgBV,SAAS3B,GAAO6B,GACd,MAAMpC,EAAQ,IAAI37C,KAClB,IAAI07C,EAAMC,EAAM5kB,cAAgBgnB,EAAUhnB,cAC1C,MAAMinB,EAAIrC,EAAMM,WAAa8B,EAAU9B,WAKvC,OAJI+B,EAAI,GAAY,IAANA,GAAWrC,EAAM7E,UAAYiH,EAAUjH,YACnD4E,IAGKA,CACT,CCtOA,SAAmC,WCwF7BuC,GAAqB,CACzBxvD,MAAO,GACPC,OAAQ,GACRwvD,KAAM,IAqYR,IAAex8D,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GAAUu8D,eAAc9gB,oBACvB,MAAQ+gB,aAAeC,WAAYC,IAAoB18D,EAEjDE,EAAOq8D,GAAep8D,EAAAA,EAAAA,KAAWH,EAAQu8D,QAAgB57D,EACzDg7C,EAAO4gB,GAAexpC,EAAAA,EAAAA,KAAW/yB,EAAQu8D,QAAgB57D,EACzDg8D,EAAoBJ,GAAeK,EAAAA,EAAAA,KAAwB58D,EAAQu8D,QAAgB57D,EACnFk0B,EAAU30B,GAAM20B,QAChBgoC,EAAU38D,IAAQ48D,EAAAA,EAAAA,IAAe58D,GAAMm1B,EAAAA,EAAAA,KAAqBr1B,IAASs1B,EAAAA,EAAAA,KAAsBt1B,EAAQE,EAAKU,MACxG,SAAEkgB,IAAaqF,EAAAA,EAAAA,KAAyBnmB,IAAW,CAAC,EACpDsvD,EAAUz6B,GAAW/T,EAAW0sB,OAAO1sB,QAAYngB,EAEnDoxB,EAAe7xB,IAAQ8xB,EAAAA,EAAAA,KAAmBhyB,EAAQE,EAAKU,IACvDixB,EAAe8pB,IAAQ7pB,EAAAA,EAAAA,KAAmB9xB,EAAQ27C,EAAK/6C,IAEvDm8D,EAAkBlrC,GAAckrC,iBAAmBhrC,GAAcgrC,gBAEjEC,EAAiBjrC,GAAckrC,WAC/B5V,EAAcx1B,GAAcqrC,KAAOnrC,GAAcorC,MAEjDC,EAAiBl9D,IAASy7C,MAC5B9xB,EAAAA,EAAAA,IAAc3pB,MAAUm9D,EAAAA,EAAAA,IAAkBn9D,EAAM,iBAC/Co9D,EAAAA,EAAAA,IAAiBp9D,EAAM,gBAGtBq9D,EAAYjO,GAAUkO,EAAAA,EAAAA,KAAgBx9D,EAAQu8D,EAAcjN,QAAW3uD,EAEvE88D,GAAoBhiB,GAAiBz7C,EAAOoC,MAAMs7D,QAAQC,OAAO/4C,SAAS23C,GAE1EqB,EAAkB/rC,GAAcgsC,mBAClC19D,EAAAA,EAAAA,KAAWH,EAAQ6xB,EAAagsC,wBAChCl9D,EAEEm9D,EAAiBniB,GAAMmiB,eAE7B,MAAO,CACLpB,gBACAx8D,OACAy7C,OACA9pB,eACAurC,iBACAT,oBACAE,UACAvN,UACA0N,iBACA3V,cACAkW,YACAE,mBACAG,kBACAE,iBACAC,0BAA2BlsC,GAAcksC,0BACzChB,kBACD,GApDeh9D,EAhYyBi+D,EAC3CzB,eACA5gB,OACAz7C,OACA2xB,eACAwnC,eACA+D,iBACAP,UACAH,gBACApN,UACAjI,cACA2V,iBACAO,YACAE,mBACAG,kBACAE,iBACAC,4BACApB,oBACAI,sBAEA,MAAM,iBACJtlD,EAAgB,qBAChBwmD,EAAoB,sBACpBC,EAAqB,gBACrBC,EAAe,gBACfC,EAAe,aACfC,EAAY,uBACZC,EAAsB,mBACtBC,EAAkB,gCAClBC,EAA+B,6BAC/BC,KACEl9D,EAAAA,EAAAA,OAGFX,GAAIs8C,GAAM,UACVwhB,GAAS,YACTC,GAAW,OACXjX,IACE/L,GAAQ,CAAC,GACL/6C,GAAIX,GAAQy+D,UAAWE,IAAkB1+D,GAAQ,CAAC,EACpDouC,GAAS4O,IAAUj9C,IACnB,iBACJ4+D,GAAgB,kBAChBC,GAAiB,yBACjBC,GAAwB,SACxB3F,IACEvnC,GAAgB,CAAC,EACfvG,IAAU7pB,EAAAA,EAAAA,KACVD,IAAO+pB,EAAAA,EAAAA,MAEb4gB,EAAAA,EAAAA,IAAsB,EAAE6yB,MACjB1wB,IAAU0wB,IAAe1wB,KAC1BqN,GAASz7C,IAAQ2pB,EAAAA,EAAAA,IAAc3pB,KACjCi+D,EAAgB,CAAE7vB,WACpB,GACC,CAACA,GAAQpuC,EAAMy7C,IAElB,MAAM,MAAE9uC,GAAK,OAAEC,GAAM,KAAEwvD,IAASD,GAC1B4C,IAAMC,EAAAA,EAAAA,KACNC,GAAoBN,IAAkBO,MACvCC,EAAAA,EAAAA,IAAmBR,GAAiBO,IAAKvyD,GAAOC,GAAQwvD,GAAM2C,IAC7DK,IAAkB13D,EAAAA,EAAAA,GAASu3D,IAE3BI,IAAyBz9D,EAAAA,EAAAA,KAAQ,KACrC,GAAK+8D,IAAkBO,IACvB,OAAIE,GACKj8D,EAAAA,GAAAC,cAAA,OAAKk+C,IAAK8d,GAAiBjlD,IAAI,GAAGlZ,UAAWusD,KAG/CrqD,EAAAA,GAAAC,cAACk8D,EAAAA,EAAQ,CAACr+D,UAAWusD,IAA2B,GACtD,CAACmR,GAAkBS,KAEhBG,GAAc5+D,QAAQyuD,GAAWA,IAAYv6B,EAAAA,IAC7C2qC,GAAwBx/D,IAAQ2pB,EAAAA,EAAAA,IAAc3pB,IAAUy7C,GAAM4f,UAE9DoE,IAAkB79D,EAAAA,EAAAA,KAAQ,KAC9B,MAAM8J,EAAS8yD,IAAWj8D,QAAQm9D,GAAMA,EAAEt/D,WAE1C,OAAOsL,GAAQnI,OAASmI,OAASjL,CAAS,GACzC,CAAC+9D,KAEEmB,IAAsB/9D,EAAAA,EAAAA,KAAQ,KAClC,MAAM8J,EAAU+vC,OAAkDh7C,EAA3Ci+D,IAAen8D,QAAQm9D,GAAMA,EAAEt/D,WAEtD,OAAOsL,GAAQnI,OAASmI,OAASjL,CAAS,GACzC,CAACi+D,GAAejjB,IAEbvrB,IAAOtuB,EAAAA,EAAAA,KAAQ,KACnB,GAAK5B,EAIL,OAAOu/D,GAAclC,GAAauC,EAAAA,EAAAA,IAAY5/D,IAAS88D,CAAc,GACpE,CAAC98D,EAAMu/D,GAAalC,EAAWP,IAE5B+C,IAAsBp3D,EAAAA,EAAAA,IAAgB,KAC1C,MAAM,QAAEq3D,EAAO,IAAEZ,GAAQP,GACzB,IAAKO,EAGH,OAFAzZ,EAAAA,EAAAA,IAAoBqa,QACpBvoD,EAAiB,CAAE7S,QAAS0mB,GAAQ,4BAItC+yC,EAAa,CAAE4B,SAAUb,EAAK9C,SAAO,IAGjC4D,IAA2Bv3D,EAAAA,EAAAA,IAAgB,KAC3C82D,GACFvB,EAAsB,CACpBj+D,OAAQA,GACRqvD,QAASA,EACTuN,SAAUA,IAGZoB,EAAqB,CAAEh+D,OAAQA,GAAS48D,SAAUA,GACpD,IAGIsD,IAA0Bx3D,EAAAA,EAAAA,IAAgB,KACzCgzC,GACL6iB,EAAgC,CAAEv3B,MAAO0U,EAAK/6C,GAAIglC,WAAYm4B,GAA4B,IAGtFqC,IAAiCz3D,EAAAA,EAAAA,IAAgB,KAChDgzC,GACL8iB,GAA6B,CAAEx3B,MAAO0U,EAAK/6C,GAAIy/D,iBAAkB1D,GAAmB2D,aAAc,IAG9FC,IAAwB53D,EAAAA,EAAAA,IAAgB,KAC5Cy1D,EAAgB,CAAEn+D,OAAQs8D,GAAe,IAG3C,SAASiE,GAAKvlD,EAAc+U,IAC1B21B,EAAAA,EAAAA,IAAoB1qC,GACpBxD,EAAiB,CAAE7S,QAAU,GAAEorB,gBACjC,CAEA,MAAMywC,GAAkB9B,KAAe+B,EAAAA,EAAAA,IAA0BhE,EAAeiC,IAE1EgC,IAAmBh4D,EAAAA,EAAAA,IAAgB,KACnCg2D,IAAal7D,SAAWm9D,EAAAA,KAAyBjC,GAAYr2B,WAAWu4B,EAAAA,KAC1EvC,EAAuB,CAAEwC,YAAanC,GAAarwB,OAAQA,GAAS3wB,KAAM,UAG5E6iD,GAAKC,GAAkBn1C,GAAQ,SAAS,IAGpCy1C,IAAsBp4D,EAAAA,EAAAA,IAAgB,CAAC+T,EAAuBskD,KAC7DtkD,EAASukD,WAIdT,IAAKhM,EAAAA,EAAAA,GAAe93C,EAASA,SAAUskD,GAAS11C,GAAQ01C,EAAS,OAAS,aAHxE1C,EAAuB,CAAEwC,YAAapkD,EAASA,SAAU4xB,OAAQA,GAAS3wB,KAAM,YAGI,IAGlFujD,IAAgBv4D,EAAAA,EAAAA,IAAgB,KACpC,MAAMs+B,EAAQ0U,GAAM/6C,GACpB,IAAKqmC,EACH,OAEF,MAAMtiC,GAAQw8D,EAAAA,EAAAA,KACd5C,EAAmB,CACjBt3B,QACAqH,OAAQrH,EACRtiC,QACAy8D,sBAAsB,GACtB,IAGEC,GAAe7/D,GAAK,sBAAuB,CAC/C8/D,MACEj+D,EAAAA,GAAAC,cAACitD,EAAAA,EAAQ,CACPt1C,KAAMzZ,GAAK,uBACXyuB,IAAKzuB,GAAK,gCAGb,CAAE+/D,WAAW,IAEhB,KAAIrhE,GAAMwjD,cAAiBgE,KAAW2R,GA2DtC,OACEh2D,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,aACZy8D,GACCv6D,EAAAA,GAAAC,cAAA,OAAKnC,UDhVmD,YCiVtDkC,EAAAA,GAAAC,cAAA,MAAInC,UDjVoF,YCiV3CmqB,GAAQ,mBACrDjoB,EAAAA,GAAAC,cAAA,QAAMnC,UDlVwN,YCmV3NmqB,GAAQ,cAAesyC,EAAgB7O,aAAc,MAExD1rD,EAAAA,GAAAC,cAACk+D,EAAAA,EAAI,CACHvhE,OAAQ29D,EAAgBh9D,GACxB6gE,UAAW,EACXC,cAAeC,EAAAA,EAAmB/qB,KAClCgrB,WAAS,EACTC,iBAAkB9C,GAClB59D,UD3V6P,cC+VlQN,QAAQ4/D,IAAiBh9D,SAExBJ,EAAAA,GAAAC,cAAC+0D,EAAAA,EAAQ,CAACvyC,KAAK,QAAQyyC,WAAS,EAACE,QAAM,EAAClnD,QAAM,EAAC/N,QAASm9D,IACtDt9D,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,QAAQ2P,IAAKtP,GAAK0F,MAAQ,WAAQvG,GAAY8/D,IAC9Dp9D,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,YAAYmqB,GAAQ,WAGvCq0C,IAAmBmC,GAAgBnC,IACnCtY,GAAexmD,QAAQwmD,EAAY5jD,SAClCJ,EAAAA,GAAAC,cAAC+0D,EAAAA,EAAQ,CACPvyC,KAAK,OACLyyC,WAAS,EACTE,QAAM,EACND,UAAQ,EACRuJ,gBAAc,GAEd1+D,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,mCAAmC2P,IAAKtP,GAAK0F,MAAQ,WAAQvG,IAEzEoQ,EAAAA,EAAAA,GAAWs2C,EAAa,CACtB,KACAqY,GAAuB,QAAU,WACjC,WAINr8D,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,YAAYmqB,GAAQ4xB,GAAS,UAAY,UAG5D2iB,KAAwBJ,IAAeqC,GAAgBjC,IAAqB,KACzEA,IAAuBzC,GAAmBqC,KAAgBrvC,IAC5D/sB,EAAAA,GAAAC,cAAC+0D,EAAAA,EAAQ,CACPvyC,KAAK,OACLyyC,WAAS,EACTE,QAAM,EACNlnD,QAAM,EAEN/N,QAASA,IAAMg9D,GAAKpwC,GAAM9E,GAAQ,uBAElCjoB,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,SAASivB,IACxB/sB,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,YAAYmqB,GAAQ,uBAGvC8tC,IACC/1D,EAAAA,GAAAC,cAAC61D,EAAY,CAAC5e,IAAKjM,GAAQ8qB,SAAUA,GAAUzd,KAAMA,EAAO0d,aAAcA,IAE1EyE,GACAz6D,EAAAA,GAAAC,cAAC+0D,EAAAA,EAAQ,CACPE,WAAS,EACTC,UAAQ,EACRC,QAAM,GAENp1D,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACL1C,UDnZwR,WCoZxRwC,KAAK,UACLH,QAAS09D,IAER51C,GAAQ,sBAEXjoB,EAAAA,GAAAC,cAAA,OAAKnC,UDzZgJ,YC0ZlJkgE,MAILhI,GACAh2D,EAAAA,GAAAC,cAAC+0D,EAAAA,EAAQ,CAACvyC,KAAK,SAAS2yC,QAAM,EAAClnD,QAAM,EAAC/N,QAAS08D,IAC7C78D,EAAAA,GAAAC,cAAA,YAAOgoB,GAAQ,kBACfjoB,EAAAA,GAAAC,cAAC0+D,EAAAA,EAAQ,CACPphE,GAAG,sBACH4/C,MAAOtD,GAAS,4BAA8B,4BAC9CqD,SAAUsc,EACVoF,UAAQ,KAIbnD,IACCz7D,EAAAA,GAAAC,cAAC0yD,EAAa,CAACC,cAAe6I,KAE/BD,IACCx7D,EAAAA,GAAAC,cAAC+0D,EAAAA,EAAQ,CACPvyC,KAAK,WACLvU,QAAM,EACNgnD,WAAS,EACTE,QAAM,EACNxQ,aAAcsX,GACd/7D,QAASu8D,IAET18D,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,SAAS09D,GAAiBmB,SACzC38D,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,YAAYmqB,GAAQ,6BAGvCmyC,IAAqBpE,GACpBh2D,EAAAA,GAAAC,cAAC+0D,EAAAA,EAAQ,CAACvyC,KAAK,iBAAiB2yC,QAAM,EAAClnD,QAAM,EAAC/N,QAAS+8D,IACrDl9D,EAAAA,GAAAC,cAAA,YAAOgoB,GAAQ,sBAGlBuG,GAAgB,4BAA6BA,GAC5CxuB,EAAAA,GAAAC,cAAC+0D,EAAAA,EAAQ,CAACvyC,KAAK,OAAO2yC,QAAM,EAAClnD,QAAM,EAAC/N,QAAS28D,IAC3C98D,EAAAA,GAAAC,cAAA,YAAOgoB,GAAQ,oCACfjoB,EAAAA,GAAAC,cAAC0+D,EAAAA,EAAQ,CACPxhB,MAAOl1B,GAAQ,mCACfi1B,QAASwd,EACTkE,UAAQ,UAIsBthE,IAAnCg8D,GAAmB2D,aAClBj9D,EAAAA,GAAAC,cAAC+0D,EAAAA,EAAQ,CAACvyC,KAAK,WAAW2yC,QAAM,EAAClnD,QAAM,EAAC/N,QAAS48D,IAC/C/8D,EAAAA,GAAAC,cAAA,YAAOgoB,GAAQ,iCACfjoB,EAAAA,GAAAC,cAAC0+D,EAAAA,EAAQ,CACPxhB,MAAOl1B,GAAQ,gCACfi1B,QAASoc,GAAmB2D,YAC5B2B,UAAQ,KAIblF,GACC15D,EAAAA,GAAAC,cAAA,OAAKnC,UDndyH,YCod5HkC,EAAAA,GAAAC,cAACkX,EAAAA,EAAW,CACVrZ,UDrdoL,WCsdpL+pC,WAAY6xB,EAAgBmF,OAC5Bv+D,KAzXuB,KA2XxBo5D,EAAgB1V,cAnMzB,SAASya,GAAgBK,EAA6BnB,GACpD,MAAO7c,KAAiBie,GAAkBD,EAEpCE,EAAgBD,EAAe3+D,OAChC6nB,GAAQ,eAAgB,eACxBsvC,MAAM,KACNp4D,KAAK8/D,GACU,cAANA,EACNj/D,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACG2vD,EAAe5/D,KAAI,CAACka,EAAUrR,IAE3BhI,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACGpH,EAAM,EAAI,KAAO,GAClBhI,EAAAA,GAAAC,cAAA,KACEi3C,IAAK79B,EAASA,SACd1H,MAAMw/C,EAAAA,EAAAA,GAAe93C,EAASA,UAAU,GACxCg+B,YAAaqM,EAAAA,EACbvjD,QAAU0L,KACR63C,EAAAA,EAAAA,GAAU73C,GACV6xD,GAAoBrkD,EAAUskD,EAAO,EAEvC7/D,UAAU,mCAETqzD,EAAAA,EAAAA,GAAe93C,EAASA,eAMjC4lD,SAEN3hE,EAEJ,OACE0C,EAAAA,GAAAC,cAAC+0D,EAAAA,EAAQ,CACPvyC,KAAMk7C,EAAS,OAAS,UACxBzI,WAAS,EACTE,QAAM,EACNlnD,QAAM,EAEN/N,QAASA,KACPu9D,GAAoB5c,EAAc6c,EAAO,GAG3C39D,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,QAAQ2P,IAAKtP,GAAK0F,MAAQ,WAAQvG,IAC/C6zD,EAAAA,EAAAA,GAAerQ,EAAaznC,SAAUskD,IAEzC39D,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,YACbkhE,GAAiBh/D,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,mBAAmBkhE,GACpD/2C,GAAQ01C,EAAS,OAAS,aAInC,CAiJQ,I,wECpdV,MAQA,EAR4CxgD,IAC1C,MAAM,OAAErd,GAAWqd,EACb+hD,GAAkB7hD,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,mBAAoBzd,GAG3E,OAAOo/D,EAAkBl/D,EAAAA,GAAAC,cAACi/D,EAAoB/hD,QAAY7f,CAAS,C,wECLrE,MAQA,EAR0C6f,IACxC,MAAM,OAAErd,GAAWqd,EACbgiD,GAAgB9hD,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,iBAAkBzd,GAGvE,OAAOq/D,EAAgBn/D,EAAAA,GAAAC,cAACk/D,EAAkBhiD,QAAY7f,CAAS,C,oWCbjE,QAA0E,WCiC1E,GAAeb,EAAAA,EAAAA,KArBsB2iE,EACnCt9D,aACA7E,WACA6G,cAGE9D,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GDlBG,WCoBjBjD,GDpB8G,WCqB9G6E,IAAegC,GDrB2E,aCwB1F9D,EAAAA,GAAAC,cAAA,OAAKnC,UDxBmC,YCyBtCkC,EAAAA,GAAAC,cAAA,OAAKnC,UAAWusD,IAChBrqD,EAAAA,GAAAC,cAAA,OAAKnC,UAAWusD,IAChBrqD,EAAAA,GAAAC,cAAA,OAAKnC,UAAWusD,QCiZxB,GAAe5tD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GACCC,SAAQw7C,gBAAemmB,YAAWC,uBAElC,MAAM3hE,GAAOC,EAAAA,EAAAA,KAAWH,EAAQC,GAC1B07C,GAAO5oB,EAAAA,EAAAA,KAAW/yB,EAAQC,GAChC,IAAKC,EACH,MAAO,CACLuqB,cAAezqB,EAAOyqB,eAI1B,MAAMi4C,EAAgBb,IAAoBc,EAAAA,EAAAA,KAAwB3iE,EAAQC,EAAQw7C,EAAgB,QAAU,OACtGmnB,EAAcf,GAChBz7C,EAAAA,EAAAA,KAAkBpmB,EAAQC,EAAQ4hE,IAClCgB,EAAAA,EAAAA,KAAsB7iE,EAAQC,EAAQw7C,EAAgB,QAAU,QAC9D,WAAEqnB,EAAU,YAAEx5C,GAAgBs5C,GAAe,CAAC,EAC9CG,EAAoBtnB,GAAiBnyB,GAAa05C,QAAS35C,EAAAA,EAAAA,KAAWrpB,EAAQspB,EAAY05C,aAAUriE,EACpGsiE,EAAgBL,GAAcz5C,EAAAA,EAAAA,KAAanpB,EAAQ4iE,QAAejiE,EAClEuiE,EAAoBH,GAAqBE,GAG7ChjE,OAAQkjE,EACRriD,SAAUsiD,EACVzlD,KAAM8J,IACJtB,EAAAA,EAAAA,KAAyBnmB,IAAW,CAAC,EACnCmF,GAAcy8D,GAAa3hE,IAAWkjE,IAAkB1nB,EAC1Dx7C,IAAWmjE,EAAkBA,IAAoBruC,EAAAA,IAC/CsuC,EAAmBnjE,EAAK20B,SAAW50B,IAAWkjE,GAC/CljE,KAAWM,EAAAA,EAAAA,KAAeP,GAAQsjE,iBAEjC9b,GAAaC,EAAAA,EAAAA,KAAiBznD,EAAQC,GACtCsjE,EAAmBX,IAAe5tC,EAAAA,EAAAA,KAAuBh1B,EAAQ4iE,GAEjEvgB,GAAemhB,EAAAA,EAAAA,KAAkBxjE,EAAQC,EAAQ80B,EAAAA,GAAgB,gBAEjE0uC,GAAaC,EAAAA,EAAAA,KAAiB1jE,EAAQC,GAEtCkqB,EAAYy4C,GAAat8D,QAAQ6jB,UACjCw5C,EAAmBx5C,IAAaqK,EAAAA,EAAAA,KAAgBx0B,EAAQmqB,EAAUmkB,OAAQnkB,EAAUvpB,IAE1F,MAAO,CACLV,OACA28D,SAASC,EAAAA,EAAAA,IAAe58D,GAAMm1B,EAAAA,EAAAA,KAAqBr1B,IAASs1B,EAAAA,EAAAA,KAAsBt1B,EAAQE,EAAKU,KAC/FsiE,oBACAv6C,OAAOC,EAAAA,EAAAA,KAAY5oB,EAAQC,EAAQ80B,EAAAA,IACnC5vB,aACAk+D,kBACAO,kBAAkBC,EAAAA,EAAAA,KAAuB7jE,GACzC8jE,cAAe3+D,GAAkC,WAApBsiB,EAC7Bs8C,iBAAkB/jE,EAAOgkE,YAAYC,YAAYxgE,QAAU,GAAK,KAC5Dq/D,GAAcF,GAAe,CAC/BsB,2BAA2BC,EAAAA,EAAAA,KAAqBnkE,EAAQ4iE,IAE1DjnB,OACA6L,aACA+b,mBACAlhB,eACA+hB,yBAAyB57C,EAAAA,EAAAA,KAA0BxoB,GACnD4iE,cACAF,gBACAj4C,cAAezqB,EAAOyqB,cACtB45C,eAAgBZ,GAAYY,eAC5BC,OAAQb,GAAYc,WACpBhd,SAAUvnD,EAAOunD,SACjBoc,mBACD,GAlEe5jE,EAvToByhE,EACtCvhE,SACAukE,WACA/C,YACAC,gBACA+C,WACAJ,iBACAC,SACA3mB,sBACAz9C,OACAyjE,mBACA9G,UACAlhB,OACA6L,aACA0b,oBACAgB,4BACAQ,YACA/7C,QACAy7C,0BACAj/D,aACAk+D,kBACAO,mBACAE,gBACAC,kBACAR,mBACAlhB,eACAqgB,iBACAE,eACAnnB,iBACAhxB,iBACAm3C,aACAC,oBACA1gE,aACAomD,YACAod,mBAEA,MAAM,SACJC,GAAQ,gBACRxG,GAAe,eACfyG,GAAc,iBACdC,GAAgB,aAChB/5C,GAAY,WACZg6C,GAAU,eACVC,GAAc,gBACdC,GAAe,0BACfC,GAAyB,eACzBC,KACE5jE,EAAAA,EAAAA,OAEE,SAAE4F,KAAaC,EAAAA,EAAAA,OACdg+D,GAAmBC,GAAiBC,KAAoBnjD,EAAAA,EAAAA,MACxDojD,GAAiBC,GAAeC,KAAkBtjD,EAAAA,EAAAA,MAClDujD,GAAuBC,GAAqBC,KAAwBzjD,EAAAA,EAAAA,MACpE0jD,GAAyBC,GAAuBC,KAA2B5jD,EAAAA,EAAAA,MAC3E6jD,GAAuBC,GAAqBC,KAAyB/jD,EAAAA,EAAAA,MACrEgkD,GAA6BC,GAA2BC,KAA+BlkD,EAAAA,EAAAA,MAExF,QAAE0S,GAAO,kBAAEC,IAAsB50B,GAAQ,CAAC,GAEhDomE,EAAAA,EAAAA,GAAiB7qB,GAAgBhxB,GAAgBxqB,EAAQyiE,GAAeE,IAExE,MAAM,eAAE2D,GAAc,IAAEvjE,KAAQwjE,EAAAA,EAAAA,GAAiB,CAC/CtmE,OACAD,SACA2iE,eACAvgB,eACA15B,QACA89C,sBAAsBC,EAAAA,EAAAA,IAAqB,CAAEnyC,MAAOovC,IACpDJ,mBACAL,oBACAvlB,sBACA+jB,gBACA0C,0BACA3C,YACAhmB,iBACAmmB,aACA0C,WAGIqC,IAAwB/P,EAAAA,EAAAA,GAAkBgQ,EAAAA,KAE1C7mB,IAAcp3C,EAAAA,EAAAA,IAAgB,KAClC,MAAMgkB,EAAoBxlB,IAAY2tB,GAMtC,GAJI3tB,IACF+9D,GAA0B,CAAEj5D,OAAO,IAGjC21D,GACF72C,GAAa,CACX9qB,SACA6P,UAAW+xD,SAHf,CAQA,GAAIpmB,GAMF,OALA2iB,GAAgB,CAAEn+D,SAAQ0sB,mBAAmB,GAAQ,CAAEk6C,uBAAuB,SAE1E1/D,IACF09D,GAAe,CAAEiC,OAAO,KAK5B,GAAIjyC,GAAS,CACX,GAAI+uC,EAGF,YAFAqB,QAAgBtkE,EAAW,CAAEkmE,uBAAuB,IAQpD,GAJKl6C,GACHq4C,GAAe,CAAE/kE,UAAU,CAAE4mE,uBAAuB,KAGjD/xC,GAAmB,MAE5B,CAEA8vC,GAAS,CAAEhkE,GAAIX,EAAQ0sB,oBAAmB0gB,sBAAsB,GAAQ,CAAEw5B,uBAAuB,IAE7F1hE,GAAc2+D,GAChBgB,IA5BF,CA6BA,IAGIiC,IAAkBp+D,EAAAA,EAAAA,IAAiBuG,IACvCA,EAAEiJ,iBACFwsD,KAAc1kE,EAAO,IAGjB+mE,IAAer+D,EAAAA,EAAAA,IAAgB,KACnCm9D,KACAT,IAAiB,IAGb4B,IAAat+D,EAAAA,EAAAA,IAAgB,KACjCs9D,KACAT,IAAe,IAGX0B,IAAyBv+D,EAAAA,EAAAA,IAAgB,KAC7Cy9D,KACAT,IAAqB,IAGjBwB,IAAex+D,EAAAA,EAAAA,IAAgB,KAC9BzI,GACLilE,GAAe,CAAEllE,OAAQC,EAAKU,GAAIinB,WAAY,IAAK,IAG/Cu/C,IAAiBC,EAAAA,EAAAA,GAAsB,CAC3CnnE,OACAy7C,OACAqrB,gBACAC,cACAC,0BACAC,gBACA3C,WACAC,WACA5H,UACAkH,kBACAtoB,iBACAhxB,iBACAm3C,eAGIhjB,IAAiBC,EAAAA,EAAAA,IAAkB77C,GAAK9C,EAAOy9C,OAAsBh9C,IAG3E+B,EAAAA,EAAAA,KAAU,KACJk8C,IAAkB/pB,IAAW0yB,SAA+B5mD,IAAnB0jE,GAC3CU,GAAW,CAAE9kE,UACf,GACC,CAACA,EAAQokE,EAAgB9c,GAAU1yB,GAAS+pB,KAE/C,MAAM0oB,GAAW3rB,GAAQ6L,IAAckB,EAAAA,EAAAA,IAAa/M,EAAM6L,IAClD+f,cAAeC,KAAwB74D,EAAAA,EAAAA,GAA4B24D,IAErEtyD,IAAOlT,EAAAA,EAAAA,KAAQ,KACnB,GAAK2lE,EAAAA,GAEL,OAAIhsB,GACM,KAAGisB,EAAAA,EAAAA,IAAmBj9C,GAAe,SAAUxqB,KAGjD,KAAGynE,EAAAA,EAAAA,IAAmBznE,EAAQ,SAAU80B,EAAAA,KAAiB,GAChE,CAAC90B,EAAQwqB,GAAegxB,KAE3B,IAAKv7C,EACH,OAGF,MAAMizB,GAAOwoB,GAAQz7C,EAEfynE,IAAgBpkE,EAAAA,EAAAA,GACpB,4BACAquB,EAAAA,EAAAA,IAAS3xB,GAAU,UAAY,QAC/B40B,IAAW,QACX1vB,GAAc,WACdk+D,GAAmB,iBACnBzB,IAAa,aACbzgE,IAGF,OACEkC,EAAAA,GAAAC,cAAC+0D,EAAAA,EAAQ,CACPr1D,IAAKA,GACL7B,UAAWwmE,GACX3yD,KAAMA,GACNvQ,MAAQ,QAAOigE,MACfnzD,QAASsjB,KAAY1tB,GACrBigE,eAAgBA,GAChB5jE,QAASu8C,GACT4kB,YAAaoC,GACba,mBAAiB,GAEjBvkE,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GAAe,SAAU,qBACvCF,EAAAA,GAAAC,cAACy1C,EAAAA,EAAM,CACL5lB,KAAMA,GACN0lB,gBAAiB8C,GAAM+L,OACvBjM,cAAeA,GACf93C,KAAMi+D,GAAY,SAAW,QAC7B5e,WAAYrH,GAAM+L,OAClBmgB,aAAcL,IAAuB3mE,QAAQX,EAAK4nE,mBAClD7kB,kBAAmB8kB,EAAAA,GAAkBC,SACrC3jB,gBAAgB,gBAElBhhD,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,wBACbkC,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GAAe,gBAAiB,eAAgBikE,IAAuB,0BAElFA,IAAuB3mE,QAAQX,EAAK4nE,oBACpCzkE,EAAAA,GAAAC,cAAC2kE,EAAAA,EAAQ,CAACtqD,KAAK,OAAOxc,UAAU,mCAAmCwC,KAAK,aAE1EN,EAAAA,GAAAC,cAAC4kE,EAAAA,EAAS,CACRhoE,KAAMA,EACN28D,QAASA,EACTsL,6BAA2B,EAC3BC,YAAazB,GACbrC,OAAQA,EACRn/D,WAAYA,KAGfjF,EAAKe,cAAgBf,EAAKc,gBACzBqC,EAAAA,GAAAC,cAACm/D,EAAc,CAACt7D,SAAUA,GAAUhC,WAAYA,EAAY7E,SAAU8jE,KAG1E/gE,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,QACbkC,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,YACbkC,EAAAA,GAAAC,cAACihD,EAAAA,EAAa,CACZpxB,KAAMA,GACNqxB,iBAAe,EACf3L,gBAAiB54C,IAAW07C,GAAM/6C,IAAM+6C,GAAM+L,OAC9CjM,cAAeA,GACfkC,oBAAqBA,IAEtBkf,IAAYphB,IAAiBp4C,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,UACzCjO,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,cACdyhE,IACCv/D,EAAAA,GAAAC,cAAC0hD,EAAAA,EAAe,CACdpgD,QAASg+D,GACT3d,eAAiBxJ,QAA4C96C,EAA5BujE,EACjChf,UAAWv8B,GAAO3jB,QAIxB3B,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,YACZolE,MACC3E,IACAv+D,EAAAA,GAAAC,cAAC4kE,EAAAA,EAAS,CACRhoE,KAAMA,EACNukE,SAAUA,EACV5H,QAASA,EACTphB,cAAeA,GACf4sB,WAAY1sB,GAAMmiB,eAClBwG,OAAQA,EACRn/D,WAAYA,MAKnB0gE,IACCxiE,EAAAA,GAAAC,cAACg5C,EAAAA,EAAe,CACdn5C,OAAQiiE,GACR9/C,QAASggD,GACT//C,oBAAqBwgD,GACrB7lE,KAAMA,EACNu7C,cAAeA,KAGlBuqB,IACC3iE,EAAAA,GAAAC,cAACk/D,EAAAA,EAAa,CACZr/D,OAAQoiE,GACRjgD,QAASmgD,GACTlgD,oBAAqB2gD,GACrBjmE,OAAQA,IAGXkmE,IACC9iE,EAAAA,GAAAC,cAACi/D,EAAAA,EAAe,CACdp/D,OAAQuiE,GACRpgD,QAASsgD,GACTrgD,oBAAqB8gD,GACrBpmE,OAAQA,IAGH,I,iMCnYf,MA+JA,GAAeH,EAAAA,EAAAA,KA/JiBooE,EAC9BzzB,QACA6vB,SACApkE,OACAukE,WACA5H,UACAsL,8BACAG,iBACAF,cACA3sB,gBACA4sB,aACAljE,iBAEA,MAAM,mBAAEo5D,IAAuBh9D,EAAAA,EAAAA,MAEzB+pB,GAAU7pB,EAAAA,EAAAA,MAEV,oBACJ8mE,EAAsB,EAAC,qBAAEC,EAAuB,GAC7CtoE,EAAK20B,QAAiB,CAAC,EAAR30B,EAEduoE,GAAmBhE,GAAYhwB,IAAU6zB,EACzCzzC,EAAU30B,EAAK20B,UAAY4f,EAC3Bi0B,GAAmB5mE,EAAAA,EAAAA,KAAQ,IAC/B+yB,GAAWyvC,EAASjiE,OAAOC,OAAOgiE,GAAQ7hE,QAAO,EAAGkmE,iBAAkBA,SAAehoE,GACpF,CAAC2jE,EAAQzvC,IAEN8zC,GAAc7mE,EAAAA,EAAAA,KAAQ,IACrB+yB,EAIE6zC,GAAkBjlE,QAHfgxC,GAASv0C,GAAMyoE,aAIxB,CAACzoE,EAAMu0C,EAAOi0B,EAAkB7zC,IAE7B+zC,GAAkB9mE,EAAAA,EAAAA,KAAQ,KAC9B,IAAK+yB,EACH,OAAQgoC,GAAgD,IAArCpoB,GAAOo0B,eAAeC,WAG3C,GAAIjM,EACF,OAAO6L,GAAkB3+C,MAAMpK,GAA0C,IAAlCA,EAAIkpD,eAAeC,aAG5D,MAAMC,EAAqBL,GAAkBM,OAAOrpD,GAClDA,EAAIkpD,eAAeC,YAAcnpD,EAAIkpD,eAAeC,YAAa55B,EAAAA,EAAAA,QAGnE,OAAQ65B,CAAkB,GACzB,CAACl0C,EAASgoC,EAAS6L,EAAkBj0B,GAAOo0B,eAAeC,aAExDG,GAAgBx0B,GAAgBv0C,EAAK+oE,cAMrCr9C,IAJsB0E,EAAAA,EAAAA,IAC1B,KAAO44C,EAAAA,EAAAA,IAASd,GAAeA,IAAgBA,GAC/C,CAACA,KAEqCvnE,QACtC8nE,GAAeJ,GAAuBU,GAAiBxE,GAAY+D,GAChEC,GAAmBJ,GAGlBc,EAAWtoE,SAAS8nE,GAAeM,KAAmBxtB,GACtDt6C,GAAYoC,EAAAA,EAAAA,GAChB,aACCqlE,GAAmB,SACnBO,GAAY1E,GAAY,SACzB0E,GAAY,UAGRjI,GAAgBv4D,EAAAA,EAAAA,IAAiBuG,IACrCA,EAAEM,kBAEF,MAAM7K,GAAQw8D,EAAAA,EAAAA,KACd5C,EAAmB,CACjBt3B,MAAO/mC,EAAKU,GACZ0tC,OAAQpuC,EAAKU,GACb+D,SACA,IA0EJ,OACEtB,EAAAA,GAAAC,cAAC8lE,EAAAA,EAAc,CAACC,UAAQ,EAACloE,UAAU,uBAAuBgC,OAAQyoB,GAxEpE,WACE,MAAM09C,EAAyBd,GAC7BnlE,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GAAe,sBAAuBqlE,GAAmB,UACvEvlE,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,WAITi4D,EAAwBhB,GAC5BllE,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,qBACbkC,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,aAITk4D,EAAuBf,GAC3BplE,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GAAe,sBAAuBqlE,GAAmB,WAGrEa,EAAsBR,GAAiBN,EAC3CtlE,EAAAA,GAAAC,cAAA,OAAKnC,UAAWA,IACZ8nE,GAAiB5lE,EAAAA,GAAAC,cAAComE,EAAAA,EAAe,CAACzuD,MAAM0uD,EAAAA,EAAAA,IAAqBhB,WAE/DhoE,EAEEipE,EAAgBnF,GACpBphE,EAAAA,GAAAC,cAAA,OAAKnC,UAAWA,GACdkC,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,iBAITu4D,EAAgBxB,GACpBhlE,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACL2N,MAAOrM,EAAa,YAAc,UAClChE,UAAU,oBACV2oE,MAAI,EACJnmE,KAAK,OACLH,QAAS09D,GAER51C,EAAQ,YAIPy+C,GAAwBN,IAAuBF,IAA0BD,GAC1EM,EAECI,EAAW,CACfR,EAAsBF,EAAwBC,EAAuBE,EAAoBM,GACzFtnE,OAAO5B,SAET,OAAI46C,EAAsBmuB,EAGtBvB,IAAmC,IAApB2B,EAASvmE,QAAgBsmE,GAA8BF,EAElD,IAApBG,EAASvmE,OAEW,IAApBumE,EAASvmE,OAAqBumE,EAAS,GAEvC7B,EACgC,CAChCoB,EAAuBE,EAAoBH,EAAwBM,GACnEnnE,OAAO5B,SACwB,GAIjCwC,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,qBACZ6oE,QAbL,CAgBF,CAIKC,GACc,G,iWChMrB,SAAgB,KAAO,WAAW,UAAY,WAAW,OAAS,WAAW,MAAQ,WAAW,eAAe,WAAW,YAAc,WAAW,KAAO,WAAW,KAAO,WAAW,KAAO,WAAW,cAAgB,WAAW,OAAS,WAAW,aAAe,YAAY,OAAS,YC8BtRC,EAAkC,CACtCC,cAAc,EACdn6D,MAAO,iBACPo6D,WAAY,iBACZC,sBAAuB,WAyIzB,GAAevqE,EAAAA,EAAAA,KAtIewqE,EAC5BC,kBACA5F,cACAnhE,cAEA,MAAM,sBAAEgnE,IAA0BjpE,EAAAA,EAAAA,MAC5BC,GAAOC,EAAAA,EAAAA,KAEPgpE,GAAiBC,EAAAA,EAAAA,IAA8BC,EAAAA,KAC/CC,GAAiBC,EAAAA,EAAAA,MACjBC,EAAqBF,EAAeD,EAAAA,MAAqBI,WAEzDC,GAAelpE,EAAAA,EAAAA,KAAQ,KAC3B,IAAK2oE,GAAgBhnE,OAAQ,OAAOjC,EAAK,WAEzC,MAAMW,GAAYH,EAAAA,EAAAA,MAAYI,MAAMF,KAEpC,OAAOuoE,EAAeloE,MAAM,EAzBV,GAyB4BC,KAAI,CAACvC,EAAQmL,EAAG6/D,KAC5D,MAAMpe,EAASzhD,IAAM6/D,EAAIxnE,OAAS,EAC5BvD,EAAOiC,EAAUlC,GACvB,IAAKC,EACH,OAGF,MAAM8P,GAAQ8sC,EAAAA,EAAAA,IAAat7C,EAAMtB,GAEjC,OACEmD,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACEpP,EAAAA,GAAAC,cAAA,QAAMnC,WAAWoC,EAAAA,EAAAA,GAAemqD,EAAOxtD,KAAM4qE,GAAsB5qE,EAAKyoE,aAAejb,EAAOwd,UAC3Fn6D,EAAAA,EAAAA,GAAWf,IAEb68C,EAAS,GAAK,KACd,GAEL,GACD,CAAC4d,EAAgBjpE,EAAMspE,IAEpB1D,GAAiBtlE,EAAAA,EAAAA,KAAQ,KAC7B,MAAMqpE,GAAkBZ,EAAgBa,aAAe,CACrDp7D,MAAOxO,EAAK,gCACZskB,KAAM,WACNulD,QAASA,KACPb,EAAsB,CAAEY,aAAa,GAAO,GAI1CE,EAAef,EAAgBa,aAAe,CAClDp7D,MAAOxO,EAAK,8BACZskB,KAAM,SACNulD,QAASA,KACPb,EAAsB,CAAEY,aAAa,GAAQ,GAI3CG,EAAa,CACjBv7D,MAAOxO,EAAK,+BACZskB,KAAM,kBACNulD,QAASA,KACPb,EAAsB,CAAEgB,UAAU,GAAO,GAI7C,OAAOC,EAAAA,EAAAA,IAAQ,CAACN,EAAgBG,EAAcC,GAAY,GACzD,CAAChB,EAAgBa,YAAa5pE,EAAMgpE,IAEjCzD,GAAkBplE,EAAAA,EAAAA,KAAauN,IACnCA,EAAEiJ,iBACFwsD,KAAe,GACd,CAACA,IA+CJ,OACEthE,EAAAA,GAAAC,cAAC+0D,EAAAA,EAAQ,CACP70D,QAASA,EACTmhE,YAAaoC,EACb5lE,WAAWoC,EAAAA,EAAAA,GACTmqD,EAAOge,KACPnB,EAAgBa,aAAe1d,EAAOie,UACtC,sBACA,qBAEFC,gBAAiBle,EAAOh+C,OACxB03D,eAAgBA,EAChBQ,mBAAiB,GAEhB2C,EAAgBa,YAzDjB/nE,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GAAemqD,EAAOme,KAAM,SAC1CxoE,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,YACbkC,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GAAe,QAASmqD,EAAO19C,QAC7C3M,EAAAA,GAAAC,cAAA,MAAIwN,IAAI,OAAO3P,WAAWoC,EAAAA,EAAAA,GAAemqD,EAAOp8C,KAAM,aACpDjO,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,iBAAiBnQ,UAAWusD,EAAO5nC,OAC7CtkB,EAAK,mBAGV6B,EAAAA,GAAAC,cAACwoE,EAAAA,EAAK,CACJ3qE,UAAWusD,EAAOib,YAClB1tD,KAAM6vD,GAAqBnB,EAAAA,EAAAA,IAAqBmB,QAAsBnqE,MAS5E0C,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACEpP,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GAAe,SAAUmqD,EAAOqe,gBAC9C1oE,EAAAA,GAAAC,cAACy1C,EAAAA,EAAM,CAAC5lB,KAAM+2C,KAEhB7mE,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GAAemqD,EAAOme,KAAM,SAC1CxoE,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,YACbkC,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GAAe,QAASmqD,EAAO19C,QAC7C3M,EAAAA,GAAAC,cAAA,MAAIwN,IAAI,OAAO3P,WAAWoC,EAAAA,EAAAA,GAAemqD,EAAOp8C,KAAM,aAAc9P,EAAK,oBAG7E6B,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,YACbkC,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GAAe,SAAUmqD,EAAOse,eAC7ChB,GAEH3nE,EAAAA,GAAAC,cAACwoE,EAAAA,EAAK,CACJ3qE,UAAWusD,EAAOib,YAClB1tD,KAAM6vD,GAAqBnB,EAAAA,EAAAA,IAAqBmB,QAAsBnqE,OAuBrE,I,2DCvKf,MCuEA,GAAeb,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAAqB,CAACC,GAAUwkE,WAAUyH,iBAGrD,CACLC,WAHiB1H,GAA2B,WAAfyH,GAA0BE,EAAAA,EAAAA,KAAiBnsE,EAAQwkE,QAAY7jE,EAI5FyrE,eAAeC,EAAAA,EAAAA,KAAoBrsE,EAAQ,SAL3BD,EAvC2BusE,EAC7CJ,aAAYE,gBAAeG,kBAAiBC,6BAE5C,MAAMhrE,GAAOC,EAAAA,EAAAA,MACP,SAAE0F,IAAaC,EAAAA,EAAAA,MAEfqlE,GAAmB9qE,EAAAA,EAAAA,KAAY,KACnC4qE,EAAgB,CAAE5uD,KAAM,aAAcyvB,QAAS8+B,IAC/CM,EAAuBE,EAAAA,GAAgBC,8BAA8B,GACpE,CAACT,EAAYK,EAAiBC,IAEjC,OACEnpE,EAAAA,GAAAC,cAAA,OAAKnC,UD5Cc,YC6CjBkC,EAAAA,GAAAC,cAAA,OAAKnC,UD7CiC,YC8CnCirE,GAAiB/oE,EAAAA,GAAAC,cAACspE,EAAAA,EAAuB,CAAC36B,QAASm6B,EAAezoE,KAhBzD,MAkBZN,EAAAA,GAAAC,cAAA,MAAInC,UDhDqD,WCgD5B2P,IAAI,QAAQtP,EAAK,2BAC9C6B,EAAAA,GAAAC,cAAA,KAAGnC,UDjD+E,WCiDhD2P,IAAI,QACnCtP,EAAK0qE,EAAa,mCAAqC,mBAEzDA,GACC7oE,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACL0N,QAASpK,EACT0lE,OAAK,EACL/C,MAAI,EACJtmE,QAASipE,EACT9oE,KAAK,UACLuD,MAAO1F,EAAK0F,OAEZ7D,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,aACXjO,EAAAA,GAAAC,cAAA,OAAKnC,UD9D4M,YC+D9MK,EAAK,sCAIR,K,eCnEV,QAA4H,WCsE5H,GAAe1B,EAAAA,EAAAA,KArDYgtE,EAAGC,WAAUC,qBACtC,MAAM,sBAAEC,EAAqB,uBAAEC,EAAsB,iBAAEz1D,IAAqBlW,EAAAA,EAAAA,MAEtEyB,GAAMiE,EAAAA,EAAAA,IAAuB,MAC7BzF,GAAOC,EAAAA,EAAAA,MAEb0rE,EAAAA,EAAAA,GAAkBnqE,GAAMoqE,IACtB,MAAMtgE,EAASsgE,EAAMC,gBAAgB,IAAIC,WAAaF,EAAMG,YAAYzgE,OACxEkgE,EAAelgE,EAAO,IAGxB,MAAM0gE,GAAmB1rE,EAAAA,EAAAA,KAAQ,IACxBO,OAAOC,OAAOyqE,GAAUpX,MAAK,CAACC,EAAGC,IAAMA,EAAE4X,YAAc7X,EAAE6X,cAC7D19C,MAAM29C,GAAYA,EAAQC,iBAC5B,CAACZ,IAEEa,GAAiB9rE,EAAAA,EAAAA,KAAQ,IACtB,CAAC0rE,EAAiBK,YAAaL,EAAiBM,OAAQN,EAAiBO,SAAStrE,OAAO5B,SAASojB,KAAK,OAC7G,CAACupD,IAEEQ,GAAerlE,EAAAA,EAAAA,IAAgB,KACnCskE,EAAsB,CACpBhS,KAAMuS,EAAiBvS,KACvBgT,aAAa,GACb,IAGEC,GAAevlE,EAAAA,EAAAA,IAAgB,KACnCukE,EAAuB,CAAEjS,KAAMuS,EAAiBvS,OAChDxjD,EAAiB,CACfzH,MAAOxO,EAAK,6BAA8B,GAC1CoD,QAASpD,EAAK,qCAAsCosE,IACpD,IAGJ,OACEvqE,EAAAA,GAAAC,cAAA,OAAKnC,UDrDqC,WCqDb6B,IAAKA,GAChCK,EAAAA,GAAAC,cAAA,MAAInC,UDtDuD,YCsD7BK,EAAK,yBACnC6B,EAAAA,GAAAC,cAAA,KAAGnC,UDvD0E,YCwD1EK,EAAK,wBAAyBosE,IAEjCvqE,EAAAA,GAAAC,cAAA,OAAKnC,UD1D6F,YC2DhGkC,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAACgpE,OAAK,EAACrvB,QAAM,EAAC75C,KAAK,UAAUxC,UAAWusD,EAAelqD,QAASwqE,GACpExsE,EAAK,2BAER6B,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAACgpE,OAAK,EAACrvB,QAAM,EAAC75C,KAAK,UAAU6N,MAAM,SAAShO,QAAS0qE,EAAc/sE,UAAWusD,GAClFlsD,EAAK,yBAGN,ICRJ2sE,EAAmB,IAAIr3D,IAAI,CAAC,IAAK,MAgOvC,GAAehX,EAAAA,EAAAA,KA9NgBkoE,EAC7B7mE,YACA8qE,aACAzH,WACAlkE,WACAsjE,mBACAwK,oBACA7D,kBACAwC,WACAR,kBACAC,yBACA6B,gCAEA,MAAM,SACJzJ,EAAQ,aACR0J,EAAY,gBACZrJ,EAAe,kBACfsJ,IACEhtE,EAAAA,EAAAA,MAEEy6D,GAAe/0D,EAAAA,EAAAA,IAAuB,MACtCunE,GAAsBvnE,EAAAA,EAAAA,KAAO,IAC5BwnE,EAA0BC,IAA+BnnE,EAAAA,EAAAA,IAAS,GAEnEonE,EAA4B,aAAf1C,EACb2C,EAA6B,QAAf3C,EACd4C,EAAyB,UAAf5C,EACV6C,EACJF,EAAcG,EAAAA,IAAgBJ,EAAahE,EAAAA,IAAqBkE,EAAUG,EAAAA,IAAkBxK,EAGxFyK,EAAuBL,GAAeR,GAAqB7D,EAE3DtG,GAAayG,EAAAA,EAAAA,IAA8BoE,IACjDI,EAAAA,EAAAA,GAAsBjL,GAEtB,MAAMkL,GAAelL,GAAYxgE,QAAU,GAAK2rE,EAAAA,IAC1CC,EAAgBJ,EAClB1E,GAAiBa,YAAckE,EAAAA,IAA2BF,EAAAA,IAAiB,GAEzE,cAAEG,EAAa,iBAAEC,IAAqBC,EAAAA,EAAAA,GAAaxL,IAElDyL,GAAaC,KAAWC,EAAAA,EAAAA,QAAkBjvE,EAAWsjE,OAAYtjE,EAAWkvE,EAAAA,KAE7EC,IAAgChuE,EAAAA,EAAAA,KAAQ,KAC5C,MAAMiuE,EAAgB1tE,OAAOC,OAAOyqE,GAAY,CAAC,GAC3CtgE,EAAUsjE,EAAchgD,MAAM29C,GAAYA,EAAQsC,YACxD,SAAKvjE,IAAWyiC,EAAAA,EAAAA,MAAkBziC,EAAQghE,YAAcwC,EAAAA,MAEjDrB,GAAemB,EAAchmD,MAAM2jD,GAAYA,EAAQC,eAAc,GAC3E,CAACiB,EAAa7B,KAEjBrqE,EAAAA,EAAAA,KAAU,KACHotE,IAA+BpB,EAA4B,EAAE,GACjE,CAACoB,MAGJI,EAAAA,EAAAA,IAAWpuE,EAAAA,EAAAA,KAAQ,IAAOxB,GAAY2jE,GAAYxgE,OAAS,CACzD,cAAgByL,IACdA,EAAEiJ,iBACFm2D,EAAa,CAAE6B,kBAAmB,EAAGlM,cAAa,EAEpD,gBAAkB/0D,IAChBA,EAAEiJ,iBACFm2D,EAAa,CAAE6B,iBAAkB,EAAGlM,cAAa,QAEjDtjE,GAAY,CAACL,EAAU2jE,MAG3BvhE,EAAAA,EAAAA,KAAU,KACR,GAAKpC,IAAYuuE,GAAY5K,GAAemM,EAAAA,GA2B5C,OAFA58D,SAASkE,iBAAiB,UAAW24D,GAE9B,KACL78D,SAASoE,oBAAoB,UAAWy4D,EAAc,EAxBxD,SAASA,EAAcnhE,GACrB,IAAMohE,EAAAA,IAAaphE,EAAEqhE,UAAcD,EAAAA,IAAaphE,EAAEshE,UAAathE,EAAEkrD,KAAK9xB,WAAW,SAAU,CACzF,MAAO,CAAEuyB,GAAS3rD,EAAEkrD,KAAKzhD,MAAM,cAAgB,GAC/C,IAAKkiD,GAASsT,EAAiBj2D,IAAI2iD,GAAQ,OAE3C,MAAM4V,EAAkBxB,GAAwB1E,IAAoBA,EAAgBa,YAE9E7V,EAAQkb,GAAmB,EAAI,EAC/BliC,EAAWf,OAAOqtB,GAAStF,EAAQ,EAEzC,GAAIkb,IAAiC,IAAdliC,EAErB,YADA8/B,IAA4BqC,EAAAA,GAAkBC,UAIhD,GAAIpiC,EAAW01B,EAAYxgE,OAAS,EAAG,OAEvCmhE,EAAS,CAAEhkE,GAAIqjE,EAAY11B,GAAWlB,sBAAsB,GAC9D,CACF,CAMC,GACA,CACDk9B,EAAiBsE,EAASvuE,EAAU+tE,EAA2BzJ,EAAU0J,EAAcrK,EACvFgL,IAGF,MAAM,QAAE2B,KAAYC,EAAAA,EAAAA,IAAwB,CAC1CC,QAAS9U,EACT+U,WA/G0B,MAkHtBC,IAAsBroE,EAAAA,EAAAA,IAAgB,KAC1C0lE,EAA2BqC,EAAAA,GAAkBC,UAC7C1L,GAAiB,IAGbgM,IAA0BtoE,EAAAA,EAAAA,IAAgB,KAC1C6lE,EAAoB/hE,QACtB+hE,EAAoB/hE,SAAU,EAGhCukE,IAAqB,IAGjBjK,IAAkBmK,EAAAA,EAAAA,IAAsBjxE,IACxCuuE,EAAoB/hE,QACtB+hE,EAAoB/hE,SAAU,EAGhCm4D,EAAS,CAAEhkE,GAAIX,EAAQotC,sBAAsB,GAAO,GACnD,CAACu3B,GApIsB,KAoIU,GAE9BuM,IAAkBxoE,EAAAA,EAAAA,IAAiBuG,IACvC,MAAMkiE,EAAOliE,EAAEmiE,cAAcjiE,wBACvB7B,EAAI2B,EAAEG,QAAU+hE,EAAKjiE,KACrB3B,EAAI0B,EAAEoiE,QAAUF,EAAKn+B,IACvB1lC,EAAI6jE,EAAKvkE,OAASW,EAAI4jE,EAAK5jE,IAC/BghE,EAAoB/hE,SAAU,EAAI,IAW9B8kE,GCpMO,SACbvV,EACAwV,EACAC,EACAzqD,GAGA,MAAM0qD,GAAuBzqE,EAAAA,EAAAA,IAAuB,MAE9C0qE,GAAuB1qE,EAAAA,EAAAA,KAAO,GAC9B2qE,GAAmB3qE,EAAAA,EAAAA,IAAO,GAC1B4qE,GAAsB5qE,EAAAA,EAAAA,KAAO,GAC7B6qE,GAAiB7qE,EAAAA,EAAAA,KAAO,GACxB8qE,GAAkB9qE,EAAAA,EAAAA,IAAO,GACzB+qE,GAA2B/qE,EAAAA,EAAAA,KAAO,GAElCgrE,GAA0BtpE,EAAAA,EAAAA,IAAgB,CAACupE,GAAsB,KACjEL,EAAoBplE,SACnBilE,EAAqBjlE,SAAYuvD,EAAavvD,UAEnDilE,EAAqBjlE,QAAQhI,MAAM0tE,QAAU,QAC7CnW,EAAavvD,QAAQ2lE,UAxBF,EA0BdjuC,EAAAA,IAAc+tC,IACjBG,EAAAA,EAAAA,GAAkBrW,EAAavvD,SAGjCklE,EAAqBllE,SAAU,EAC/BmlE,EAAiBnlE,QA/BE,EAgCnBolE,EAAoBplE,SAAU,EAC9BqlE,EAAerlE,SAAU,EAAI,IAGzB6lE,GAA2B3pE,EAAAA,EAAAA,IAAgB,KAC1CkpE,EAAoBplE,SACpBilE,EAAqBjlE,UAE1BilE,EAAqBjlE,QAAQhI,MAAM0tE,QAAU,OAE7CN,EAAoBplE,SAAU,EAAK,IAG/B8lE,GAAe5pE,EAAAA,EAAAA,IAAgB,KACnC,IAAKqzD,EAAavvD,QAAS,OAE3B,GAAIklE,EAAqBllE,QAGvB,YAFAklE,EAAqBllE,SAAU,GAKjC,MAAM+lE,EAAexW,EAAavvD,QAAQ2lE,UACpCK,EAAeD,EAAeZ,EAAiBnlE,QAC/CimE,EAAaF,EAAeZ,EAAiBnlE,QAC7CkmE,EAA2B,IAAjBH,EACVI,EAAiBx0D,KAAKC,MAAQ0zD,EAAgBtlE,QAEpD,GAAIilE,EAAqBjlE,QAAS,CAChC,GAAIkmE,IAAYd,EAAoBplE,QAElC,YADAomE,EAAAA,EAAAA,IAAcZ,EAAyB,CAACjW,EAAavvD,QAASilE,EAAqBjlE,WAIrFomE,EAAAA,EAAAA,IAAcP,EAA0BZ,EAAqBjlE,QAC/D,CAGEimE,IACGZ,EAAerlE,SAAWmmE,EAtET,KAuEdJ,EAAe,GAAKR,EAAyBvlE,SAEnD+kE,MACSiB,GAAgBD,EAAe,GACxCf,MAGFG,EAAiBnlE,QAAU+lE,EAC3BV,EAAerlE,QAAUkmE,EACzBZ,EAAgBtlE,QAAU2R,KAAKC,MAC/B2zD,EAAyBvlE,QAAUgmE,GAAgBD,EAAe,CAAC,IAI/DM,GAAc5B,EAAAA,EAAAA,IAAsB6B,IACxC,IAAK/W,EAAavvD,QAAS,OAC3B,MAAMumE,EAAYhX,EAAavvD,QAEVumE,EAAUC,aAAeD,EAAU9a,cACnB,IAAjB6a,EAAMG,SAEtBH,EAAMG,OAAS,EACjB1B,MAEAC,MACF,GACC,CAACzV,EAAcwV,EAAcC,GAnGL,KAwH3B,OAnBA/uE,EAAAA,EAAAA,KAAU,KACR,MAAMswE,EAAYhX,EAAavvD,QAC/B,GAAKumE,EAWL,OAT4B,IAAxBA,EAAUZ,YACZ7tC,EAAAA,EAAAA,KAAgB,KACd0tC,GAAwB,EAAK,IAIjCe,EAAUt7D,iBAAiB,SAAU66D,EAAc,CAAEY,SAAS,IAC9DH,EAAUt7D,iBAAiB,QAASo7D,EAAa,CAAEK,SAAS,IAErD,KACLH,EAAUp7D,oBAAoB,SAAU26D,GACxCS,EAAUp7D,oBAAoB,QAASk7D,EAAY,CACpD,GACA,CAAC9W,EAAc8W,IAEVv/D,EAAAA,IAAWyT,OAEfrmB,EADF0C,EAAAA,GAAAC,cAAA,OAAKN,IAAK0uE,EAAsBvwE,UAAU,qBAAqBo5C,IAAI,sBAEvE,CD6EkC64B,CAAiBpX,GARnBrzD,EAAAA,EAAAA,IAAgB,KAC5C4lE,EAAkB,CAAE3iD,SAAS,EAAM+iD,cAAa,KAGpBhmE,EAAAA,EAAAA,IAAgB,KAC5C4lE,EAAkB,CAAE3iD,SAAS,EAAO+iD,cAAa,IAG0DE,GA6B7G,OACExrE,EAAAA,GAAAC,cAAC+vE,EAAAA,EAAc,CACblyE,WAAWoC,EAAAA,EAAAA,GAAe,0BAA2BqgE,GAAoB,mBAAoBziE,GAC7F6B,IAAKg5D,EACL1lD,MAAOo5D,GACP4D,aAAa,oCACbC,iBAAkB1D,EAAAA,IAClB2D,yBAAuB,EACvBC,eAAgBlC,GAChBmC,UAAWvE,EAAcE,EAAgBZ,EACzCkF,WAAYhE,GACZiE,YAAazC,IAEZrB,IACCzsE,EAAAA,GAAAC,cAACwpE,EAAkB,CACjBvyB,IAAI,cACJwyB,SAAUA,EACVC,eAAgB0B,IAGnBO,GACC5rE,EAAAA,GAAAC,cAACgnE,EAAO,CACN/vB,IAAI,UACJgwB,gBAAiBA,EACjB/mE,QAASwtE,GACTrM,YAAasM,KAGhBvB,IAAajsE,OAvDlB,WACE,MAAMowE,EAAiB5P,EAAY1tD,QAAQm5D,GAAa,IAElDoE,GAAcC,EAAAA,EAAAA,IAAoBjF,IAAqB,EAE7D,OAAOY,GAAaltE,KAAI,CAAC5B,EAAIwK,KAC3B,MAAMq5D,EAAWoP,EAAiBzoE,EAAI0oE,EAChCpP,EAAY+J,EAA2BY,GAAiBwE,EAAiBzoE,GAAKgkE,EAAAA,IAEpF,OACE/rE,EAAAA,GAAAC,cAACk+D,EAAAA,EAAI,CACHjnB,IAAK35C,EACLozE,cAAevP,EAAWr5D,GAAI6oE,EAAAA,EAAAA,IAAYrzE,EAAIiuE,GAC9C5uE,OAAQW,EACR6jE,SAAUA,EACVD,SAAUA,EACV/oB,cAAeozB,EACfnN,cAAe8N,EAAiB5uE,GAChC6gE,UAAW8N,EAAc3uE,GACzB8jE,UAAWA,EACX/mB,oBAAqBizB,GACrBjM,YAAaoC,IACb,GAGR,CA+BMmN,IACExE,IAAgBA,GAAYjsE,QAAWorE,EAUzCxrE,EAAAA,GAAAC,cAAC6wE,EAAAA,EAAO,CAAC55B,IAAI,YARXl3C,EAAAA,GAAAC,cAACgpE,EAAW,CACV9H,SAAUA,EACVyH,WAAYA,EACZM,gBAAiBA,EACjBC,uBAAwBA,IAMf,G,oWEtRrB,SAAgB,KAAO,WAAW,cAAc,WAAW,WAAa,WAAW,QAAU,WAAW,MAAQ,WAAW,YAAc,WAAW,SAAS,WAAW,MAAQ,WAAW,WAAW,WAAW,QAAU,YC2BrN4H,EAAY,EAAI1yB,EAAAA,EAwCtB,GAAe5hD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAAqB,CAACC,GAAUC,aAClD,MAAMC,GAAOC,EAAAA,EAAAA,KAAWH,EAAQC,GAC1Bo0E,EAAkBn0E,IAASA,EAAKk9C,YAAakgB,EAAAA,EAAAA,IAAiBp9D,EAAM,iBAE1E,MAAO,CACLksE,eAAeC,EAAAA,EAAAA,KAAoBrsE,EAAQ,MAC3Cq0E,kBACD,GAPiBt0E,EAtC0Bu0E,EAC5Cr0E,SAAQmsE,gBAAeiI,sBAEvB,MAAM,qBAAEE,IAAyBhzE,EAAAA,EAAAA,MAE3BC,GAAOC,EAAAA,EAAAA,MACP,SAAE0F,IAAaC,EAAAA,EAAAA,MAEfotE,GAAoB7yE,EAAAA,EAAAA,KAAY,KACpC4yE,EAAqB,CAAEt0E,UAAS,GAC/B,CAACA,EAAQs0E,IAEZ,OACElxE,EAAAA,GAAAC,cAAA,OAAKnC,UAAWusD,EAAOge,MACrBroE,EAAAA,GAAAC,cAAA,OAAKnC,UAAWusD,EAAOzb,SACpBm6B,GAAiB/oE,EAAAA,GAAAC,cAACspE,EAAAA,EAAuB,CAAC36B,QAASm6B,EAAezoE,KAAMywE,KAE3E/wE,EAAAA,GAAAC,cAAA,MAAInC,UAAWusD,EAAO19C,MAAOc,IAAI,QAAQtP,EAAK,8BAC9C6B,EAAAA,GAAAC,cAAA,KAAGnC,WAAWoC,EAAAA,EAAAA,GAAemqD,EAAOrG,YAAaqG,EAAO+mB,UAAW3jE,IAAI,QACpEtP,EAAK,oCAEP6yE,GACChxE,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACL0N,QAASpK,EACT0lE,OAAK,EACLrpE,QAASgxE,EACT7wE,KAAK,UACLuD,MAAO1F,EAAK0F,OAEZ7D,EAAAA,GAAAC,cAAA,OAAKnC,UAAWusD,EAAOgnB,YACpBlzE,EAAK,gCAIR,K,uIC/DV,MC4OA,GAAe1B,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GAAUC,SAAQw0C,QAAOtvC,iBACxB,MAAMjF,GAAOC,EAAAA,EAAAA,KAAWH,EAAQC,GAE1B2iE,GAAcx8C,EAAAA,EAAAA,KAAkBpmB,EAAQC,EAAQw0C,EAAMiuB,gBACtD,WAAEI,GAAeF,GAAe,CAAC,EACjCM,EAAoBN,IAAez5C,EAAAA,EAAAA,KAAanpB,EAAQ4iE,GACxDvgB,GAAemhB,EAAAA,EAAAA,KAAkBxjE,EAAQC,EAAQw0C,EAAM7zC,GAAI,gBAC3D+nB,GAAQC,EAAAA,EAAAA,KAAY5oB,EAAQC,EAAQw0C,EAAM7zC,IAC1C+gD,GAAaC,EAAAA,EAAAA,KAAiB5hD,EAAQC,EAAQw0C,EAAM7zC,IACpD0nE,EAAiBznE,QAAQ8gD,GAAYgzB,wBACrCrQ,GAASsQ,EAAAA,EAAAA,KAAa50E,EAAQC,IAE5BA,OAAQkjE,EAAeriD,SAAUsiD,IAAoBj9C,EAAAA,EAAAA,KAAyBnmB,IAAW,CAAC,EAE5FmqB,EAAYy4C,GAAat8D,QAAQ6jB,UACjCw5C,EAAmBx5C,IAAaqK,EAAAA,EAAAA,KAAgBx0B,EAAQmqB,EAAUmkB,OAAQnkB,EAAUvpB,IAM1F,MAAO,CACLV,OACA0iE,cACAM,oBACA7gB,eACAwyB,YATkB30E,IAAQ48D,EAAAA,EAAAA,IAC1B58D,GAAMm1B,EAAAA,EAAAA,KAAqBr1B,IAASs1B,EAAAA,EAAAA,KAAsBt1B,EAAQE,EAAKU,KASvEk0E,WAAWC,EAAAA,EAAAA,KAAqB/0E,EAAQC,EAAQw0C,EAAM7zC,IACtDwjE,yBAAyB57C,EAAAA,EAAAA,KAA0BxoB,GACnD2oB,WACIm6C,GAAcF,GAAe,CAC/BsB,2BAA2BC,EAAAA,EAAAA,KAAqBnkE,EAAQ4iE,IAE1DkB,cAAe3+D,GAAcjF,GAAMU,KAAOuiE,GAAiBC,IAAoB3uB,EAAM7zC,GACrF0nE,iBACAhE,SACAX,mBACD,GAtCe5jE,EAjKqBi1E,EACvCvgC,QACAtvC,aACAlF,SACAC,OACA20E,cACApwE,QACAm+D,cACAe,mBACAG,gBACAI,4BACAvmB,sBACAm3B,YACA5R,oBACAxB,gBACA0C,0BACA3C,YACApf,eACA15B,QACA2/C,iBACAhE,aAEA,MAAM,WACJxpC,EAAU,YACVm6C,EAAW,iBACXnQ,EAAgB,uBAChBoQ,IACE3zE,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,MAEN2jE,EAAmBC,EAAiBC,IAAoBnjD,EAAAA,EAAAA,MACxDojD,EAAiBC,EAAeC,IAAkBtjD,EAAAA,EAAAA,MAClD0jD,EAAyBC,EAAuBC,IAA2B5jD,EAAAA,EAAAA,MAC3E6jD,EAAuBC,GAAqBC,KAAyB/jD,EAAAA,EAAAA,MAEtE,SACJsiD,GAAQ,SAAE0Q,GAAQ,eAAEtM,IAClBp0B,EACEooB,GAAUh8D,QAAQgoE,GAAeC,iBAA6CnoE,IAA9BkoE,GAAeC,YAA4B+L,GAE3FO,IAAwBzsE,EAAAA,EAAAA,IAAgB,KAC5Cm9D,IACAT,GAAiB,IAGb2B,IAAer+D,EAAAA,EAAAA,IAAgB,KACnCssE,EAAY,CAAEh1E,OAAQC,EAAKU,GAAI0uD,QAAS7a,EAAM7zC,IAAK,IAG/CqmE,IAAat+D,EAAAA,EAAAA,IAAgB,KACjCs9D,KACAT,GAAe,KAGX,eAAEe,GAAc,IAAEvjE,KAAQwjE,EAAAA,EAAAA,GAAiB,CAC/CtmE,OACAD,SACA2iE,cACAj6C,QACAu6C,oBACAK,iBAAkB9uB,EAClBkJ,sBACA6F,SAAS,EACTnB,eACAiiB,SACAmC,sBAAsBC,EAAAA,EAAAA,IAAqB,CAAEnyC,MAAOovC,IAEpDjC,gBACA0C,0BACA3C,cAGI4T,IAAkB1sE,EAAAA,EAAAA,IAAgB,KACtCmyB,EAAW,CAAE76B,SAAQ6gB,SAAU2zB,EAAM7zC,GAAIysC,sBAAsB,IAC/D6nC,EAAuB,CAAEj1E,SAAQ2lC,WAAW,IAExCk+B,GACFgB,GACF,IAGIsC,GClJO,UAAgC,MAC7C3yB,EAAK,KACLv0C,EAAI,YACJ20E,EAAW,UACXS,EAAS,UACTR,EAAS,aACT9N,EAAY,WACZC,IAUA,MAAMzlE,GAAOC,EAAAA,EAAAA,KAEb,OAAOK,EAAAA,EAAAA,KAAQ,KACb,MAAM,SACJ2iE,EAAQ,eAAEoE,EAAc,SAAEsM,EAAUv0E,GAAI0uD,GACtC7a,EAEEx0C,EAASC,EAAKU,IAEd,UACJ20E,EAAS,kBACTC,EAAiB,cACjBC,EAAa,sBACbvX,EAAqB,iBACrBwX,IACEn0E,EAAAA,EAAAA,MAEEo0E,GAAkBC,EAAAA,EAAAA,IAAkB11E,EAAMu0C,GAC1CohC,EAAkB31E,EAAKk9C,YAAakgB,EAAAA,EAAAA,IAAiBp9D,EAAM,gBAE3D41E,EAAqBrO,EAAAA,IAAgC,CACzDz3D,MAAO,kBACP8V,KAAM,kBACNulD,QAASA,KACPqK,EAAiB,CAAEz1E,OAAQC,EAAKU,GAAIkgB,SAAUwuC,GAAU,GAItDymB,EAAmBthC,EAAMk0B,cAAgB2M,EAC3C,CACAtlE,MAAOxO,EAAK,cACZskB,KAAM,YACNulD,QAASA,KACPoK,EAAc,CAAEx1E,SAAQqvD,WAAU,QAGpC3uD,EAEEq1E,EAAYH,EAAmBpR,EACjC,CACAz0D,MAAOxO,EAAK,gBACZskB,KAAM,QACNulD,QAASA,IAAMmK,EAAkB,CAAEv1E,SAAQqvD,UAASmV,UAAU,KAE9D,CACAz0D,MAAOxO,EAAK,YACZskB,KAAM,MACNulD,QAASA,IAAMmK,EAAkB,CAAEv1E,SAAQqvD,UAASmV,UAAU,UAC3D9jE,EAEDs1E,EAAepB,QAA6Cl0E,IAA9BkoE,EAAeC,YAA6BD,EAAeC,WAC3F,CACA94D,MAAOxO,EAAK,mBACZskB,KAAM,SACNulD,QAASA,IAAMnN,EAAsB,CAAEj+D,SAAQqvD,UAASuN,SAAS,KAEjE,CACA7sD,MAAQ,GAAExO,EAAK,sBACfskB,KAAM,OACNulD,QAASpE,GAGPiP,EAAmBP,EAAmBR,EACxC,CACAnlE,MAAOxO,EAAK,0BACZskB,KAAM,eACNulD,QAASA,IAAMkK,EAAU,CAAEt1E,SAAQqvD,UAAS6lB,UAAU,KAEtD,CACAnlE,MAAOxO,EAAK,yBACZskB,KAAM,cACNulD,QAASA,IAAMkK,EAAU,CAAEt1E,SAAQqvD,UAAS6lB,UAAU,UACnDx0E,EAEDw1E,EAAerB,EAAY,CAC/B9kE,MAAOxO,EAAK,0BACZskB,KAAM,SACNqgC,aAAa,EACbklB,QAASrE,QACPrmE,EAEJ,OAAO8qE,EAAAA,EAAAA,IAAQ,CACbqK,EACAE,EACAD,EACAE,EACAC,EACAC,GACA,GACD,CAAC1hC,EAAOv0C,EAAM20E,EAAaS,EAAW9zE,EAAMszE,EAAW9N,EAAcC,GAC1E,CDuCyBmP,CAAuB,CAC5C3hC,QACAv0C,OACA20E,cACAS,UAAWhN,EACXwM,YACA9N,aAAcoO,GACdnO,gBAGF,OACE5jE,EAAAA,GAAAC,cAAC+0D,EAAAA,EAAQ,CACPl3D,WAAWoC,EAAAA,EAAAA,GDzKM,WC2Kf,OACA4B,GAAc,WACd,uBAEF3B,QAAS6xE,GACT5wE,MAAOA,EACPuQ,KAAMyyD,EAAAA,GAAgC,KAAGC,EAAAA,EAAAA,IAAmBznE,EAAQ,SAAUw0C,EAAM7zC,WAAQD,EAC5FymE,eAAgBA,GAChBQ,mBAAiB,EACjB5kE,IAAKA,IAELK,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,QACbkC,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,YACbkC,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GAAe,UAC7BF,EAAAA,GAAAC,cAACghD,EAAAA,EAAS,CAAC7P,MAAOA,EAAOtzC,UDzLkF,WCyLrDw8C,oBAAqBA,IAC3Et6C,EAAAA,GAAAC,cAAA,MAAIwN,IAAI,OAAO3P,UAAU,aAAY4P,EAAAA,EAAAA,GAAW0jC,EAAMzkC,SAEvDnP,QAAQgoE,GAAeC,aAAezlE,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,UAClDjO,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,cACdg0E,IACC9xE,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,aAAanQ,UD/LoC,aCiM7DyhE,GACCv/D,EAAAA,GAAAC,cAAC0hD,EAAAA,EAAe,CACdpgD,QAASg+D,EACT3d,eAAgBif,KAItB7gE,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,YACZolE,KACDljE,EAAAA,GAAAC,cAAC4kE,EAAAA,EAAS,CACRhoE,KAAMA,EACNukE,SAAUA,GACV5H,QAASA,GACTpoB,MAAOA,EACP6zB,eAAgBA,EAChBhE,OAAQA,MAIbuB,GACCxiE,EAAAA,GAAAC,cAAC88C,EAAAA,EAAa,CACZj9C,OAAQiiE,EACR9/C,QAASggD,EACT//C,oBAAqBwgD,EACrBsQ,sBAAoB,EACpBh2B,eAAgB2mB,GAChB/rD,KAAMzZ,EAAK,+BACX80E,aAAc90E,EAAK,YAGtBwkE,GACC3iE,EAAAA,GAAAC,cAACk/D,EAAAA,EAAa,CACZr/D,OAAQoiE,EACRjgD,QAASmgD,EACTlgD,oBAAqB2gD,GACrBjmE,OAAQA,EACRqvD,QAAS7a,EAAM7zC,KAGV,KE2Df,GAAed,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KACjBC,IACC,MAAMC,GAASM,EAAAA,EAAAA,KAAeP,GAAQsjE,iBAChCpjE,EAAOD,GAASE,EAAAA,EAAAA,KAAWH,EAAQC,QAAUU,GAEjDV,OAAQkjE,EACRriD,SAAUsiD,IACRj9C,EAAAA,EAAAA,KAAyBnmB,IAAW,CAAC,EACnCyjE,EAAaxjE,GAASyjE,EAAAA,EAAAA,KAAiB1jE,EAAQC,QAAUU,EAE/D,MAAO,CACLT,OACAwrD,eAAgBzrD,IAAWkjE,EAAgB31B,OAAO41B,QAAmBziE,EACrEyjE,yBAAyB57C,EAAAA,EAAAA,KAA0BxoB,GACnDyjE,aACD,IAEFzjE,IAAW6jE,EAAAA,EAAAA,KAAuB7jE,IAjBjBD,EAhO0Bw2E,EAC5Cr2E,OACAwrD,iBACAvoD,SACAqoE,WACA/H,aACA+S,gBACAjxD,sBACAkxD,uBACArS,8BAEA,MAAM,gBACJa,EAAe,iBAAEyR,EAAgB,WAAE3R,IACjCxjE,EAAAA,EAAAA,MAGEyB,GAAMiE,EAAAA,EAAAA,IAAuB,MAG7B+0D,GAAe/0D,EAAAA,EAAAA,IAAuB,MAEtC0vE,GAAsB1vE,EAAAA,EAAAA,IAAuB,OAC7C,SAAEE,IAAaC,EAAAA,EAAAA,MACfnH,EAASC,GAAMU,IAErB8B,EAAAA,EAAAA,KAAU,KACJzC,IAAWwjE,GACbsB,EAAW,CAAE9kE,UACf,GACC,CAACwjE,EAAYxjE,IAEhB,MAAO22E,EAAYC,IAAiBtvE,EAAAA,EAAAA,KAAS,GACvC/F,GAAOC,EAAAA,EAAAA,KAEPq1E,GAAcnuE,EAAAA,EAAAA,IAAgB,KAClCs8D,GAAiB,KAGnBviE,EAAAA,EAAAA,KAAU,KACH0hE,GAA4BjhE,GAC/BoiB,KACF,GACC,CAAC6+C,EAAyBjhE,EAAQoiB,IAErC,MAAMwxD,GAAuBpuE,EAAAA,EAAAA,IAAgB,KACtCzI,GACLw2E,EAAiB,CAAE91E,GAAIV,EAAKU,GAAIysC,sBAAsB,GAAO,KAGzD,QAAEujC,IAAYC,EAAAA,EAAAA,IAAwB,CAC1CC,QAAS9U,EACT+U,WArD0B,OAwD5BiG,EAAAA,EAAAA,IAAeL,EAAqB/F,GAAS,EAAGhyB,qBAC9Ci4B,GAAej4B,EAAe,IAGhC,MAAMqlB,GAAaniE,EAAAA,EAAAA,KAAQ,IAClB2hE,GACHwT,EAAAA,EAAAA,IACA50E,OAAOC,OAAOmhE,EAAWc,YACzBd,EAAWyT,uBACX10E,KAAI,EAAG5B,QAASA,IAChB,IACH,CAAC6iE,KAEE,cAAE8L,EAAa,iBAAEC,IAAqBC,EAAAA,EAAAA,GAAaxL,EAAY/jE,GAAMU,KAEpE8uE,GAAaC,KAAWC,EAAAA,EAAAA,IAAkB,KAC1C1vE,GACL6kE,EAAW,CAAE9kE,OAAQC,EAAKU,IAAK,GAC9BqjE,GAAaR,GAAY0T,YAAclT,EAAWxgE,QAAUggE,EAAW0T,WAAYC,EAAAA,KAEhFC,IAAkBpwE,EAAAA,EAAAA,KAAO,GACzBggD,GAAY9jD,IAAWqoE,EACvB8L,IAAgB96C,EAAAA,EAAAA,GAAsByqB,IAExCqwB,KAAkBrwB,KACpBowB,GAAgB5qE,SAAU,IAG5B8qE,EAAAA,EAAAA,GAAe,CACbj3E,SAAU2mD,GACVuwB,OAAQV,KAGVp0E,EAAAA,EAAAA,KAAU,IAAOukD,IAAYn7B,EAAAA,EAAAA,GAAsBgrD,QAAen2E,GAAY,CAACm2E,EAAa7vB,MAE5FvkD,EAAAA,EAAAA,KAAU,KACJ40E,KAAkBrwB,KAEpBxmB,EAAAA,EAAAA,KAAoB,KAClB,IAAKz9B,EAAIyJ,QAAS,OAElB,MAAMgrE,GAAoBC,EAAAA,EAAAA,OAC1BC,EAAAA,EAAAA,GAAqB30E,EAAIyJ,QAASgrE,GAElChB,MAEIxvB,IACFowB,GAAgB5qE,SAAU,EAC1BzJ,EAAIyJ,QAAShI,MAAMmzE,UAAY,SAE/BP,GAAgB5qE,SAAU,EAC1BzJ,EAAIyJ,QAAShI,MAAMmzE,UAAY,GACjC,GAEJ,GACC,CAAC3wB,GAAWwvB,EAAsBa,MAErC50E,EAAAA,EAAAA,KAAU,KACR,GAAK+iB,EAAAA,GAIL,OAAOvV,EAAAA,EAAAA,IAAclN,EAAIyJ,QAAU,CACjCkhD,wBAAyB,aACzBC,QAAUA,CAAC1+C,EAAGkrC,IAGRA,KAFmB54C,EAAK0F,MAAQ2mD,EAAAA,GAAeE,KAAOF,EAAAA,GAAeC,SAGvEmX,KACO,IAKX,GACD,CAACA,EAAiBzjE,EAAK0F,QAmB1B,MAAMixB,QAA2Bx3B,IAAf8iE,EAElB,OACEpgE,EAAAA,GAAAC,cAAA,OACEN,IAAKA,EACL7B,WAAWoC,EAAAA,EAAAA,GC5NM,WD8NfqzE,GC9N4H,WD+N5Hp1E,EAAK0F,OC/N2B,YDgO/Bk9D,GChOkF,YDkOrFyT,gBAAkB10E,OAA+BxC,EAAtB4kB,GAE3BliB,EAAAA,GAAAC,cAAA,OAAK1C,GAAG,kBAAkBO,UAAU,eAClCkC,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLC,OAAK,EACLH,KAAK,UACL6N,MAAM,cACNhO,QAASszE,EACTrlE,UAAWjQ,EAAK,UAEhB6B,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,WAGZpR,GACCmD,EAAAA,GAAAC,cAAC8+C,EAAAA,EAAa,CACZI,UAAQ,EACRrhD,UClPwM,WDmPxMlB,OAAQC,EAAKU,GACb4C,QAASuzE,IAIZ72E,GAEGmD,EAAAA,GAAAC,cAACw0E,EAAAA,EAAa,CACZ73E,OAAQC,EAAKU,GACbkgB,SAAUiU,EAAAA,GACVtN,gBAAgB,SAChBswD,kBAAkB,EAClBC,YAAU,EACV7wE,SAAUA,EACVqvE,cAAeA,KAKtBt2E,GAAQmD,EAAAA,GAAAC,cAACpC,EAAAA,EAAgB,CAACjB,OAAQC,EAAKU,KAExCyC,EAAAA,GAAAC,cAAA,OAAKnC,UCxQmG,aD0QxGkC,EAAAA,GAAAC,cAAC+vE,EAAAA,EAAc,CACblyE,UAAU,0BACV6B,IAAKg5D,EACL1lD,MAAOo5D,GACP6D,iBAAkB6D,EAAAA,IAClB5D,yBAAuB,EACvBE,WAAYzP,GAAYxgE,QAAU,GAAKw0E,EAAAA,IACvCtE,WAAYhE,GACZuI,cAAeC,EAAAA,IACf1E,eAAgBpwE,EAAAA,GAAAC,cAAA,OAAKN,IAAK2zE,EAAqBx1E,UCnR2I,cDqRzLN,QAAQ6uE,IAAajsE,SA/E5B,WACE,MAAMowE,EAAiB5P,EAAY1tD,QAAQm5D,GAAa,IAExD,OAAOA,IAAaltE,KAAI,CAAC5B,EAAIwK,IAC3B/H,EAAAA,GAAAC,cAAC0xE,EAAK,CACJz6B,IAAK35C,EACLX,OAAQC,EAAMU,GACd6zC,MAAOgvB,EAAYc,WAAW3jE,GAC9B6D,MAAQ,SAAQovE,EAAiBzoE,GAAK6sE,EAAAA,SACtC9yE,WAAYumD,IAAmB9qD,EAC/B+8C,oBAAqBizB,EACrBlP,cAAe8N,EAAiB5uE,GAChC6gE,UAAW8N,EAAc3uE,MAG/B,CAiEQw3E,GAEDjgD,KAAcu3C,IAAajsE,QAC1BJ,EAAAA,GAAAC,cAAC6wE,EAAAA,EAAO,CAAC55B,IAAI,cAGfpiB,IAAqC,IAAxBu3C,IAAajsE,QAAgBisE,GAAY,KAAO2I,EAAAA,KAC7Dh1E,EAAAA,GAAAC,cAACgxE,EAAU,CAACr0E,OAAQA,IAElB,I,0DE9RH,IAAK0hE,EAAkB,SAAlBA,GAAkB,OAAlBA,EAAAA,EAAkB,eAAlBA,EAAAA,EAAkB,qBAAlBA,EAAAA,EAAkB,eAAlBA,CAAkB,MAMvB,SAAS2W,EAAgD/I,GAC9D,OAAOztE,EAAAA,EAAAA,KAAQ,KACb,MAAMy2E,EAAal2E,OAAOC,OAAOitE,GAC3BiJ,EAAaD,EAAW91E,QAAQwyD,GAASA,EAAO,IAAGxxD,OACnDg1E,EAAeF,EAAW91E,QAAQwyD,GAASA,EAAO,IAAGxxD,OAE3D,OAAQxD,IACN,MAAMwhE,EAAY8N,EAActvE,GAChC,OAAkB,IAAdwhE,EACKE,EAAmB/qB,KAI1B6qB,IAAciX,KACXjX,KAAc,KACb+W,GAAcC,GAAgBhX,EAAY,GAC1CgX,EAAeD,GAAc/W,EAAY,EAEtCE,EAAmBgX,QAGrBhX,EAAmBiX,IAAI,CAC/B,GACA,CAACrJ,GACN,C,sNC/BA,QAAoE,WAApE,EAAiN,WAAjN,EAAyT,WAAzT,EAA4U,WCgCtUsJ,EAAsBrrC,OAAOkU,EAAAA,GAuInC,GAAe5hD,EAAAA,EAAAA,KApI4Bg5E,EACzC54E,OACAokE,SACAyU,oBACAp7B,0BAEA,MAAM,WAAE7iB,IAAev5B,EAAAA,EAAAA,MAGjBy3E,GAAiB/xE,EAAAA,EAAAA,IAAuB,MAExCgyE,GAAgBhyE,EAAAA,EAAAA,IAAuB,MAEvCzF,GAAOC,EAAAA,EAAAA,MAENy3E,KAAoBC,IAAer3E,EAAAA,EAAAA,KAAQ,IAC3CwiE,GAIE2S,EAAAA,EAAAA,IAAiB50E,OAAOC,OAAOgiE,QAAS3jE,GAAW,GAAM4B,MAAM,EAtBvD,GAmBN,IAIR,CAAC+hE,KAEG8U,EAAkBC,IAAuB9xE,EAAAA,EAAAA,KAAS,IAClD+xE,EAAkBC,IAAuBhyE,EAAAA,EAAAA,SAA6B5G,IAG3Eo/C,YAAay5B,EACbtnB,gBAAiBunB,IACftnB,EAAAA,EAAAA,IAAcjjD,IACoB,IAAhCgqE,EAAgBvQ,aAAqBzoE,EAAK40B,oBAE9C5lB,EAAEM,kBACFN,EAAEiJ,iBAEF2iB,EAAW,CACT76B,OAAQC,EAAKU,GACbkgB,SAAUo4D,EAAgBt4E,GAC1BysC,sBAAsB,EACtB1gB,mBAAmB+sD,EAAAA,EAAAA,QACnB,IAmBJ,OAhBAh3E,EAAAA,EAAAA,KAAU,KACR,MAAMi3E,EAAqBX,EAAevsE,QACpCmtE,EAAoBX,EAAcxsE,QACxC,IAAKktE,IAAuBC,EAAmB,OAE/C,MAAMC,EAAmBF,EAAmBG,YACtCC,EAAkBH,EAAkBE,YAEtCxvE,KAAK0vE,IAAIH,EAAmBE,GAAmBlB,EACjDU,EAAoBjvE,KAAKgD,IAAIusE,EAAkBE,IAE/CR,OAAoB54E,GAEtB04E,EAAoBQ,EAAmBE,EAAgB,GACtD,CAACb,EAAiBH,IAGnB11E,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GDhGM,WCkGf61E,GDlGojB,WCmGpjBE,GDnGinB,YCqGnnBxoE,IAAKtP,EAAK0F,MAAQ,WAAQvG,EAC1B8D,MAAO60E,EAAoB,wBAAuBA,WAAuB34E,GAExEu4E,GACC71E,EAAAA,GAAAC,cAAA,OAAKnC,UAAWusD,GACdrqD,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GD3GsK,WC6G/K21E,EAAgBvQ,aAAejb,GAEjC1qD,IAAKi2E,EACLz1E,QAASg2E,EACT9+B,YAAa++B,GAEbp2E,EAAAA,GAAAC,cAACghD,EAAAA,EAAS,CACR7P,MAAOykC,EACPv7B,oBAAqBA,IAEvBt6C,EAAAA,GAAAC,cAAA,OAAKnC,UDvH8U,aCuHpT4P,EAAAA,EAAAA,GAAWmoE,EAAgBlpE,SACxDspE,GAAoBF,GACpB/1E,EAAAA,GAAAC,cAAA,OAAKnC,UAAWusD,GACdrqD,EAAAA,GAAAC,cAAA,OAAKnC,UAAWusD,MAKtBrqD,EAAAA,GAAAC,cAAA,OAAKnC,UD/Hge,YCgIleg4E,EAAY32E,KAAKiyC,GAChBpxC,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GDlIiH,WCmItGkxC,EAAMk0B,aAAejb,GAE3CnT,IAAK9F,EAAM7zC,IAEXyC,EAAAA,GAAAC,cAACghD,EAAAA,EAAS,CACR7P,MAAOA,EACPtzC,UDzI0W,WC0I1Ww8C,oBAAqBA,IAEvBt6C,EAAAA,GAAAC,cAAA,QAAMnC,UD5Ioa,aC4I/X4P,EAAAA,EAAAA,GAAW0jC,EAAMzkC,YAKlE3M,EAAAA,GAAAC,cAAA,OAAKnC,UDjJsf,eCoJ7f+3E,GAAmB71E,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GAAemqD,EDpJ+B,aCoJIlsD,EAAK,YAC5F6B,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GDtJiP,WCsJ9M21E,GAAiBvQ,aAAejb,GAC9E1qD,IAAKg2E,EACLx1E,QAASg2E,EACT9+B,YAAa++B,GAEZV,KACCO,IAAqBF,GACrB/1E,EAAAA,GAAAC,cAAA,OAAKnC,UAAWusD,GACdrqD,EAAAA,GAAAC,cAAA,OAAKnC,UAAWusD,MAKlB,I,qCCjIV,MAAMusB,EAAqB,IAEZ,SAASzT,GAAiB,KACvCtmE,EAAI,OACJokE,EAAM,YACN1B,EAAW,qBACX6D,EAAoB,OACpBxmE,EAAM,aACNoiD,EAAY,MACZ15B,EAAK,iBACL46C,EAAgB,kBAChBL,EAAiB,oBACjBvlB,EAAmB,cACnB+jB,EAAa,UACbD,EAAS,wBACT2C,EAAuB,QACvB5gB,EAAO,cACP/H,EAAa,UACbmmB,IAoBA,MAAMt2C,GAAU7pB,EAAAA,EAAAA,KAEVuB,GAAMiE,EAAAA,EAAAA,IAAuB,MAE7BkjB,EAAYy4C,GAAat8D,QAAQ6jB,UACjC+vD,EAAwBzT,IAAyBA,EAAqBlyC,OAE5E4lD,EAAAA,EAAAA,GAAeD,EAAwB/vD,GAAWmkB,YAAS3tC,EAAWwpB,GAAWvpB,GAAI6lE,GAAsBlyC,OAE3G,MAAM6lD,EAAe3T,GAAsBlyC,OAASquC,EAC9CyX,EAAkBD,KAAiBE,EAAAA,EAAAA,IAAkBF,GAErDjpB,EAAiBkpB,GAAkB/zB,EAAAA,EAAAA,IAA4B8zB,QAAgBz5E,EAC/E4lD,GAAe3+C,EAAAA,EAAAA,GAASyyE,GAAkB7zB,EAAAA,EAAAA,IAAoB4zB,EAAc,cAAWz5E,GACvF0wD,EAAexwD,QAAQ+hE,IAAetR,EAAAA,EAAAA,IAAqBsR,IAE3D2X,GAA4B54E,EAAAA,EAAAA,KAAY,KAC5C,IAAK85C,IAAkBmmB,GAChBvf,GAAgBugB,GAAevgB,EAAa5D,UAA+B,IAAnBmkB,EAAY59D,KACzE,OAAO3B,EAAAA,GAAAC,cAACmhD,EAAAA,EAAY,CAACpC,aAAcA,IAGrC,MAAMm4B,EAAsB7xD,GAASA,EAAME,WAAWK,eAAiBq6C,GAAkB3iE,GACnF65E,EAAoB9xD,GAAOE,YAAcF,EAAM1N,MAAQ0N,EAAM2hB,QAKnE,IAHyBpqC,GAAM20B,UAAY4mB,IAAkBmmB,GAAaj5C,IAAU8xD,KAC7Ej3B,IAAYg3B,GAGjB,OACEn3E,EAAAA,GAAAC,cAAA,KAAGnC,UAAU,eAAe2P,IAAKwa,EAAQpkB,MAAQ,OAAS,OACxD7D,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,SAASmqB,EAAQ,WAChCunC,EAAAA,EAAAA,GAAuB,CACtB53C,KAAM0N,EAAM1N,MAAMA,MAAQ,GAC1BD,SAAU2N,EAAM1N,MAAMD,SACtB83C,WAAW,EACX4nB,uBAAuB,KAM/B,IAAK9X,EACH,OAGF,MAAM+X,GAAaC,EAAAA,EAAAA,IAAqBtvD,EAASrrB,EAAQijE,GAEzD,OACE7/D,EAAAA,GAAAC,cAAA,KAAGnC,UAAU,uCAAuC2P,IAAKwa,EAAQpkB,MAAQ,OAAS,OAC/EyzE,GACCt3E,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACEpP,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,gBAAe4P,EAAAA,EAAAA,GAAW4pE,IAC1Ct3E,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,SAAQ,OAG1Bs6C,GAAiBmnB,EAAYt5C,aAAgBjmB,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,eAAenQ,UAAU,qBAClD,UAAhCyhE,EAAY/5C,WAAWlL,MAAqBta,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,cAAcnQ,UAAU,qBAkExF,SACEyD,EAAqB+4C,EAAiC4U,EAAkBlB,GAExE,MAAMwpB,EACJx3E,EAAAA,GAAAC,cAAC0vD,EAAAA,EAAc,CACbpuD,QAASA,EACTquD,QAASpyD,QAAQ0xD,GACjBzB,8BAA+BnT,EAC/Bm9B,YAAU,IAId,IAAKvoB,EACH,OAAOsoB,EAGT,MAAM54C,GAAYykB,EAAAA,EAAAA,IAAoB9hD,GAEtC,OACEvB,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,iBACdkC,EAAAA,GAAAC,cAAA,OACEk+C,IAAK+Q,EACLl4C,IAAI,GACJlZ,WACEoC,EAAAA,EAAAA,GAAe,uBAAwB8tD,GAAgB,QAASpvB,GAAa,yBAE/EpvB,WAAW,KAEZoQ,EAAAA,EAAAA,IAAgBre,IAAYvB,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,SACvCupE,EAGP,CAjGSE,CAAcnY,EAAajlB,EAAqB4I,GAAgB4K,EAAgBE,GAC/E,GAEL,CACDnxD,EAAMD,EAAQ0oB,EAAO0oC,EAAc7N,EAASl4B,EAASs3C,EAAaM,EAAmBK,EACrFhd,EAAc4K,EAAgBxT,EAAqB0E,EAAc5G,EAAemmB,IAsDlF,OAnCAr1D,EAAAA,EAAAA,KAAgB,KACd,MAAM2mC,EAAUlwC,EAAIyJ,QAEpB,GAAK23D,GAA4BlxB,EAAjC,CAKA,GAAIwuB,IAAkBC,EAAAA,EAAmBgX,QACvCzlC,EAAQzuC,MAAMu2E,QAAU,KAExBz2C,EAAAA,EAAAA,KAAgB,KACd2O,EAAQz/B,UAAUC,IAAI,mBACtBw/B,EAAQzuC,MAAMu2E,QAAU,GAAG,QAExB,IAAItZ,IAAkBC,EAAAA,EAAmBiX,KAQ9C,OAPA1lC,EAAQzuC,MAAMmzE,UAAa,mBAAkBnW,EAAY2N,EAAAA,aAEzD7qC,EAAAA,EAAAA,KAAgB,KACd2O,EAAQz/B,UAAUC,IAAI,qBACtBw/B,EAAQzuC,MAAMmzE,UAAY,EAAE,GAIhC,CAEAt3D,YAAW,MACTikB,EAAAA,EAAAA,KAAgB,KACd2O,EAAQz/B,UAAUwG,OAAO,kBAAmB,qBAC5Ci5B,EAAQzuC,MAAMu2E,QAAU,GACxB9nC,EAAQzuC,MAAMmzE,UAAY,EAAE,GAC5B,GACDqC,EAAqBgB,EAAAA,IA3BxB,CA2B4C,GAC3C,CAAC7W,EAAyB3C,EAAWC,IAEjC,CACL6E,eApDF,WACE,OAAIrmE,GAAM20B,UAAY2uB,EAElBngD,EAAAA,GAAAC,cAACw1E,EAAoB,CACnB54E,KAAMA,EACN64E,kBAAmBwB,EACnB58B,oBAAqBA,EACrB2mB,OAAQA,IAKPiW,GACT,EAwCEv3E,MAEJ,C,wEC7Le,SAASk4E,EAAsCC,GAC5D,MAAM1kB,GAAcC,EAAAA,EAAAA,KACd0kB,GAAyCn0E,EAAAA,EAAAA,IAAOk0E,GAChDE,GAAuB7+C,EAAAA,EAAAA,GAAsB2+C,GAWnD,OAJyB,IAArBA,GAA8BE,IAAyBF,IACzDC,EAAuC3uE,SAAU,GAG5C,CAAE2uE,yCAAwCE,gCATjD,WACEF,EAAuC3uE,QAAU5L,QAAQs6E,GACzD1kB,GACF,EAOF,C,kFCbe,SAASgZ,EAAaxL,EAA6C1pB,GAChF,MAAMghC,GAAYz5E,EAAAA,EAAAA,KAAQ,KACxB,GAAKmiE,EAIL,OAAOA,EAAWvkD,QAAO,CAACC,EAAK/e,EAAIwK,KACjCuU,EAAI/e,GAAMwK,EACHuU,IACN,CAAC,EAA4B,GAC/B,CAACskD,IAEEuX,GAAgBh/C,EAAAA,EAAAA,GAAsB++C,GACtC38C,GAAapC,EAAAA,EAAAA,GAAsB+d,GAEnCg1B,GAAgBztE,EAAAA,EAAAA,KAAQ,IACvBy5E,GAAcC,GAAiBjhC,IAAQ3b,GAIrC68C,EAAAA,EAAAA,IAAUF,GAAW,CAACG,EAAO96E,SACLD,IAAtB66E,EAAc56E,GAAoB86E,EAAQF,EAAc56E,IAAM,MAJ9D,CAAC,GAMT,CAAC25C,EAAKghC,EAAW38C,EAAY48C,IAIhC,MAAO,CACLjM,gBACAC,kBAJuB8I,EAAAA,EAAAA,GAAqB/I,GAMhD,C,kDC5BO,SAASoM,EACdn6E,EAAiBoD,EAAqBzC,EAAoCJ,GAE1E,MAAM,SAAE65E,GAAah3E,EACrB,IAAKg3E,EACH,OAGF,MAAM5yD,GAAS4I,EAAAA,EAAAA,IAASgqD,GAAY75E,EAAU65E,GAAYz5E,EAAUy5E,GAEpE,IAAIjB,GAAa7oB,EAAAA,EAAAA,IAAatwD,EAAMwnB,GAEpC,MAAM9oB,EAAOiC,EAAUyC,EAAQ3E,QAS/B,OARIC,IACE,WAAY8oB,GAAUA,EAAO0+B,OAC/BizB,EAAc,GAAEn5E,EAAK,iBAAgBs7C,EAAAA,EAAAA,IAAat7C,EAAMtB,MAC/CmzD,EAAAA,EAAAA,IAAYnzD,KACrBy6E,GAAe,OAAK79B,EAAAA,EAAAA,IAAat7C,EAAMtB,OAIpCy6E,CACT,C,gHC/BA,SAAgB,KAAO,WAAW,MAAQ,WAAW,MAAQ,WAAW,iBAAmB,YCSrFkB,EAAmB,GACnBC,EAAW,IAQjB,GAAeh8E,EAAAA,EAAAA,KANai8E,IAExB14E,EAAAA,GAAAC,cAAA,OAAKnC,UAAWusD,EAAOge,KAAM9qE,GAAIo7E,EAAAA,QAM9B,SAASC,EAAY/oC,GAC1B,MAAMlzC,GAASgC,EAAAA,EAAAA,MAEf,KADsBk6E,EAAAA,EAAAA,KAA2Bl8E,GAC7B,OAAO,EAE3B,MAAMoxE,EAAOl+B,EAAQ9jC,wBACf7B,EAAI6jE,EAAKjiE,KAAOnL,OAAOm4E,QACvB3uE,EAAI4jE,EAAKn+B,IAAMjvC,OAAOo4E,QACtBvvE,EAAQukE,EAAKvkE,MACbC,EAASskE,EAAKtkE,OAGpB,GAAIS,EAAIV,EAAQgvE,EAAmB,GAAKtuE,EAAIsuE,EAAmB73E,OAAOq4E,YACjE7uE,EAAIV,EAAS+uE,EAAmB,GAAKruE,EAAIquE,EAAmB73E,OAAOs4E,YACtE,OAAO,EAGT,MAAMC,EAAOjyE,KAAKgB,MAAM8S,KAAKC,MAAQ,KAC/Bm+D,EAAY,GAAEC,EAAAA,QAAkBC,EAAAA,EAAAA,OAEhCC,EACJt5E,EAAAA,GAAAC,cAAA,OACEnC,UAAWusD,EAAOkvB,MAClB/vE,MAAOA,EACPC,OAAQA,EACRrI,MAAQ,SAAQ8I,aAAaC,OAC7BsF,QAAU,OAAMjG,KAASC,KAEzBzJ,EAAAA,GAAAC,cAAA,YAgCN,SAAsB1C,EAAYi8E,EAAsBC,EAAmB,IACzE,OACEz5E,EAAAA,GAAAC,cAAA,UACEy5E,MAAOC,EAAAA,IACPp8E,GAAIA,EACJ2M,EAAE,QACFC,EAAE,QACFX,MAAM,OACNC,OAAO,OACP,8BAA4B,QAE5BzJ,EAAAA,GAAAC,cAAA,gBAAcqa,KAAK,eAAes/D,cAAc,MAAMC,WAAW,IAAItxE,OAAO,YAAY2wE,KAAMO,IAC9Fz5E,EAAAA,GAAAC,cAAA,uBAAqBo1C,GAAG,YAAY9sC,OAAO,iBACzCvI,EAAAA,GAAAC,cAAA,WAASqa,KAAK,SAASw/D,MAAM,IAAIC,UAAU,KACzC/5E,EAAAA,GAAAC,cAAA,WAAS+5E,cAAc,QAAQ/6E,OAAO,aAAag7E,IAAM,GAAExB,MAActxE,KAAK,aAGlFnH,EAAAA,GAAAC,cAAA,eAAao1C,GAAG,gBAAgB6kC,IAAI,gBAAgBC,SAAS,KAAK5xE,OAAO,gBACzEvI,EAAAA,GAAAC,cAAA,gBACEqa,KAAK,eACLs/D,cAAc,QACdC,WAAW,IACXtxE,OAAO,qBACP2wE,KAAMO,EAAW,IAEnBz5E,EAAAA,GAAAC,cAAA,gBACEqa,KAAK,eACLs/D,cAAc,IACdC,WAAW,IACXtxE,OAAO,qBACP2wE,KAAMO,EAAW,IAEnBz5E,EAAAA,GAAAC,cAAA,WAASsI,OAAO,iBACdvI,EAAAA,GAAAC,cAAA,eAAao1C,GAAG,uBAChBr1C,EAAAA,GAAAC,cAAA,eAAao1C,GAAG,wBAElBr1C,EAAAA,GAAAC,cAAA,qBAAmBo1C,GAAG,cAAc6kC,IAAI,gBAAgBtwE,MAAM,IAAIwwE,iBAAiB,IAAIC,iBAAiB,KACtGr6E,EAAAA,GAAAC,cAAA,WAAS+5E,cAAc,QAAQ/6E,OAAS,MAAoB,EAAfu6E,EAAoBS,IAAM,GAAExB,MAActxE,KAAK,YAIpG,CAxESmzE,CAAanB,EAAUlyE,KAAKC,IAAIsC,EAAOC,GAASyvE,IAEnDl5E,EAAAA,GAAAC,cAAA,KAAGb,OAAS,QAAO+5E,MACjBn5E,EAAAA,GAAAC,cAAA,iBAAenC,UAAWusD,EAAOkwB,iBAAkB/wE,MAAOA,EAAOC,OAAQA,MAKzE+wE,GAAMC,EAAAA,EAAAA,GAAUnB,GAAW,GAC3BoB,EAAgBF,EAAI1wD,cAAc,iBAElC6wD,EAAgBh6E,OAAOi6E,iBAAiB/qC,GACxCgrC,EAAQhrC,EAAQh+B,WAAU,GAChC7K,MAAMwO,KAAKmlE,GAAe9wE,SAASqtC,GACjC2jC,EAAMz5E,MAAM2iB,YAAYmzB,EAAKyjC,EAAcG,iBAAiB5jC,GAAM,eAGpEwjC,EAAcnqE,YAAYsqE,GAE1B,MAAME,EAAgB5qE,SAASwsB,eAAeg8C,EAAAA,KAS9C,OARAoC,EAAcxqE,YAAYiqE,GAE1BA,EAAInmE,iBAAiB,gBAAgB,KACnC0mE,EAAczqC,YAAYkqC,EAAI,GAC7B,CACDQ,MAAM,KAGD,CACT,C,4OCtEA,MAQA,EARgD79D,IAC9C,MAAM,OAAErd,GAAWqd,EACb89D,GAAsB59D,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,uBAAwBzd,GAGnF,OAAOm7E,EAAsBj7E,EAAAA,GAAAC,cAACg7E,EAAwB99D,QAAY7f,CAAS,EC0b7E,GAAeb,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GACCC,SAAQ6gB,WAAU2G,kBAAiBtgB,eAEnC,MAAMjH,GAAOC,EAAAA,EAAAA,KAAWH,EAAQC,GAC1B02B,EAAY91B,QAAQX,IAAQ2pB,EAAAA,EAAAA,IAAc3pB,IAC1Cm8C,EAAex7C,QAAQX,IAAQw+B,EAAAA,EAAAA,IAAiBx+B,IAChDiyB,GAAWosD,EAAAA,EAAAA,KAAmBv+E,GAC9Bw+E,GAAsBC,EAAAA,EAAAA,KAA0Bz+E,GAChDm3C,GAAYvlB,EAAAA,EAAAA,IAAS3xB,IACrB,eAAEy+E,GAAmB1+E,EAAOuyB,SAASC,MAE3C,IAAKtyB,GAAQA,EAAKwjD,eAAgB3sB,EAAAA,EAAAA,KAAqB/2B,GACrD,MAAO,CACL2+E,QAAQ,EACRxsD,WACAqsD,sBACAE,kBAIJ,MAAMj6D,GAAMgN,EAAAA,EAAAA,KAAUzxB,EAAQC,GACxB8xB,EAAgBolB,OAAiDx2C,GAArCqxB,EAAAA,EAAAA,KAAmBhyB,EAAQC,GACvD4xB,EAAeslB,GAAYrlB,EAAAA,EAAAA,KAAmB9xB,EAAQC,QAAUU,EAChEi+E,EAAW7sD,GAAgBF,EAC3BtI,GAAiBC,EAAAA,EAAAA,KAAqBxpB,EAAQC,GAC9C4+E,EAAmC,WAApBp3D,GAAgC3G,IAAaiU,EAAAA,GAC5D+pD,EAAyC,WAApBr3D,GAAgC3G,IAAaiU,EAAAA,GAClE6B,GAAqBC,EAAAA,EAAAA,KAAyB72B,EAAQmH,GAEtDs0C,GAAgBsjC,EAAAA,EAAAA,IAAiB9+E,EAAQ6gB,EAAU9gB,EAAOyqB,eAE1Du0D,IAAgB7nC,IAAY8nC,EAAAA,EAAAA,KAAoBj/E,EAAQC,GACxDi/E,EAAgBr+E,QAAQ4jB,GAAOu6D,GAC/BG,GAAeD,GAAiBr+E,SAAQu+E,EAAAA,EAAAA,KAA0Bp/E,EAAQC,IAC1Eo/E,EAAaL,IAAkBv6D,EAC/B66D,EAAez+E,SAClBg+E,GAAgB3+E,EAAK20B,WAAa8B,GAAa0lB,IAAiBn8C,EAAKq/E,aAElEC,EAAYX,GAAgBC,EAC5BW,EAAUC,EAAAA,KAAuB9tD,EAAAA,EAAAA,IAAS1xB,EAAKU,MAAQ2oB,IAAmB9E,IAAQvkB,EAAK67C,aACvFqN,EAAAA,EAAAA,IAAwBlpD,EAAKU,IAC7B++E,EAAUd,IAAiBt1D,IAAmB+1D,EAC9CM,EAAWnkC,GAAkBojC,IAAiBS,EAC9CO,EAAoBH,EAAAA,IAAuBb,GAAgB3+E,EAAKe,aAChE6+E,EAAqBJ,EAAAA,IAAuBb,IAAiB3+E,EAAKe,eAClEf,EAAKkzB,aAAa2sD,YAAe7/E,EAAKk9C,YAAahB,EAAAA,EAAAA,IAAiBl8C,IACpE8/E,EAAoBnB,GAAgB9sD,GAAciuD,kBAClDC,EAAsBpB,GAAgB9sD,GAAckuD,oBACpDC,EAAgBrB,IAChBxiC,GAAgB1lB,KAAeqpD,IAAqB1iB,EAAAA,EAAAA,IAAiBp9D,EAAM,gBAC3EigF,GAAqBD,IAAkB7jC,GAAgB1lB,GACvDypD,EAAsBvB,EAAe9sD,GAAcsuD,qBAAkB1/E,EACrE2/E,EAAmBz/E,QAAQX,GAAMq/E,aAAer/E,EAAKqgF,cACrDC,EAAwB3/E,QAAQX,GAAMq/E,aAAer/E,EAAKugF,eAC1DC,IAAel4D,EAAAA,EAAAA,KAA0BxoB,GAEzC2gF,EAAgB9/E,SAAQ+/E,EAAAA,EAAAA,KAAuC5gF,EAAQC,IAG7E,MAAO,CACL0+E,QAAQ,EACRhoD,YACAC,qBACAuoD,cACAD,gBACAI,eACAE,YACAC,UACAE,UACAK,oBACAC,sBACAC,gBACAC,oBACAP,WACAC,oBACAC,qBACAM,sBACAE,mBACAE,wBACAE,cACAG,cAvBmBC,EAAAA,EAAAA,KAAuB9gF,EAAQC,KAAY2+E,GAAUmC,sBAwBxEJ,gBACAnC,sBACArsD,WACAusD,iBACAsC,qBAAsB9gF,EAAK+gF,iBAC3B5B,aACD,GAxFet/E,EA/W6B+3E,EAC/C73E,SACA6gB,WACA69D,SACAx3E,WACAwvB,YACAwoD,cACAD,gBACAG,aACAC,eACAE,YACAC,UACAE,UACAK,oBACAC,sBACAC,gBACAC,oBACAP,WACAC,oBACAC,qBACAM,sBACAxpD,qBACAohD,aACAD,mBACAuI,mBACAE,wBACAE,cACAG,eACAF,gBACAnC,sBACArsD,WACA6uD,uBACAtC,iBACAlI,oBAEA,MAAM,YACJ0K,EAAW,eACXC,EAAc,iBACdC,EAAgB,WAChBC,EAAU,4BACVC,EAA2B,4BAC3BC,EAA2B,iBAC3B9pE,GAAgB,SAChBmtD,GAAQ,uBACR4c,GAAsB,uBACtBC,GAAsB,sBACtBC,GAAqB,iBACrBvjC,GAAgB,YAChBwjC,GAAW,uBACXzM,KACE3zE,EAAAA,EAAAA,MAEEqgF,IAAgB36E,EAAAA,EAAAA,IAA0B,MAC1CzF,IAAOC,EAAAA,EAAAA,MACNohB,GAAYg/D,KAAiBt6E,EAAAA,EAAAA,KAAS,IACtCu6E,GAAYC,KAAiBx6E,EAAAA,EAAAA,SAAsC5G,GAEpEqhF,IAAuBr5E,EAAAA,EAAAA,IAAgB,KAC3Ck5E,IAAc,GACd,MAAMzQ,EAAOwQ,GAAcn1E,QAAS2C,wBACpC2yE,GAAc,CAAEx0E,EAAG6jE,EAAK6Q,MAAOz0E,EAAG4jE,EAAK8Q,QAAS,IAG5CC,IAAwBx5E,EAAAA,EAAAA,IAAgB,KAC5Ck5E,IAAc,EAAM,IAGhBO,IAAuBz5E,EAAAA,EAAAA,IAAgB,KAC3Co5E,QAAcphF,EAAU,IAGpB0hF,IAAuB15E,EAAAA,EAAAA,IAAgB,KAC3Cu4E,EAAY,CAAEjhF,WACVugF,GACF/oE,GAAiB,CACf7S,QAAqBpD,GAAZm1B,EAAiB,sCAA8C,sCAE5E,IAGI2rD,IAAiB35E,EAAAA,EAAAA,IAAgB,KACrCw4E,EAAe,CAAE13C,QAAS,UAAW,IAGjC84C,IAAmB55E,EAAAA,EAAAA,IAAgB,KACvC04E,EAAW,CAAEphF,UAAS,IAGlBuiF,IAAgB75E,EAAAA,EAAAA,IAAgB,KACpCg5E,GAAY,CAAEzkC,OAAQj9C,GAAS,IAG3BwiF,IAAuB95E,EAAAA,EAAAA,IAAgB,KAEzC64E,GADEb,EACqB,CAAE1gF,SAAQyiF,oBAAgB/hF,GAI5B,CAAEV,SAAQyiF,eAAgBlE,GAAsB,IAGnEmE,IAA0Bh6E,EAAAA,EAAAA,IAAgB,KAC9C44E,EAA4B,CAAEqB,OAAQC,EAAAA,GAAkBC,cAAe,IAGnEC,IAAoBp6E,EAAAA,EAAAA,IAAgB,KACpCqvE,EACFxB,OAIF4K,IAEIj6E,EAEF67E,IACStC,GAET9gE,EAAAA,EAAAA,KAAe,MACb6gB,EAAAA,EAAAA,IAAoBuiD,EAAsB,IAG5C1iE,WAAW0iE,EA5Ha,KA6H1B,IAGIC,IAAwBt6E,EAAAA,EAAAA,IAAgB,KAC5Ci8D,GAAS,CAAEhkE,GAAIX,IACfi1E,GAAuB,CAAEj1E,SAAQ2lC,WAAW,GAAO,IAG/Cs9C,IAAoBv6E,EAAAA,EAAAA,IAAgB,KACxC24E,EAA4B,CAAEpkC,OAAQj9C,GAAS,IAG3CkjF,IAA0Bx6E,EAAAA,EAAAA,IAAiBuG,IAC1CswE,GAAcpP,EAAAA,KAAUlhE,EAAEk0E,WAI/Bl0E,EAAEiJ,iBACF4qE,KAAmB,IAGfM,IAAsB16E,EAAAA,EAAAA,IAAgB,CAAC26E,EAAiBC,KAC5D,MACMC,EAAkB,oBADLD,EAAS3oB,MAAM,KAAK,GACe6oB,gBAChDnyE,EAAO9P,GAAKgiF,GAClB,GAAIlyE,IAASkyE,EACX,OAAOhiF,GAAK8hF,EAAShyE,GAGvB,MACMoyE,EADkB,IAAIC,KAAKC,aAAa,CAACzxD,GAAW,CAAExU,KAAM,aAC3BkmE,GAAGN,GAC1C,OAAO/hF,GAAM,GAAE8hF,SAAgBI,EAAe,IAG1ChP,IAAa5yE,EAAAA,EAAAA,KAAQ,IACrB6+E,EAAsBn/E,GAAK,sBAExB6hF,GAAoB,oBAAqB7E,IAC/C,CAACA,EAAqB6E,GAAqB1C,EAAen/E,KAEvDsiF,IAAqBhiF,EAAAA,EAAAA,KAAQ,KACjC,GAAKk/E,EAEL,OAAOqC,GAAoB,yBAA0BrC,EAAqB,GACzE,CAACqC,GAAqBrC,IAEnB+C,IAAap7E,EAAAA,EAAAA,IAAgB,KACjC84E,GAAuB,CAAExhF,SAAQ2lC,WAAW,IAC5C47C,GAAuB,CAAEvhF,SAAQyiF,oBAAgB/hF,GAAY,IAGzDqjF,IAAuBr7E,EAAAA,EAAAA,IAAgB,KAC3C+4E,GAAsB,CAAEzhF,UAAS,IAG7BgkF,IAAuBt7E,EAAAA,EAAAA,IAAgB,KACtCq4E,IAEL7iC,GAAiB,CACfugC,eAAgB,IAAIA,EAAgBsC,KAEtCQ,GAAuB,CAAEvhF,SAAQyiF,oBAAgB/hF,IAEjD8W,GAAiB,CAAE7S,QAASy+E,GAAoB,wBAAyBrC,KAAwB,KAGnG9Q,EAAAA,EAAAA,IAAWpuE,EAAAA,EAAAA,KAAQ,KAAM,CACvB,QAASqhF,MACP,KAEJ,MAAMe,IAAkEpiF,EAAAA,EAAAA,KAAQ,IACvE,EAAGikD,YAAW5iD,YACnBE,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLC,OAAK,EACLyN,OAAQqlB,EACRplB,MAAM,cACN7N,KAAK,UACLxC,UAAWgC,EAAS,SAAW,GAC/BK,QAASuiD,EACTt0C,UAAWjQ,GAAK,qBAEhB6B,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,eAGd,CAACslB,EAAoBp1B,KAExB,OACE6B,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,kBACX62E,GAAc6I,GACdx9E,EAAAA,GAAAC,cAAC2iD,EAAAA,EAAY,CACX9kD,UAAU,2CACV+kD,QAASg+B,GACT9+D,UAAU,SAEV/hB,EAAAA,GAAAC,cAACuiB,EAAAA,EAAQ,CAACC,KAAK,WAAWtiB,QAASi/E,IAChC/N,IAEHrxE,EAAAA,GAAAC,cAACuiB,EAAAA,EAAQ,CAACC,KAAK,UAAUtiB,QAASwgF,IAC/BxiF,GAAK,2BAER6B,EAAAA,GAAAC,cAAC4qB,EAAAA,EAAa,MACb8yD,GACI39E,EAAAA,GAAAC,cAACuiB,EAAAA,EAAQ,CAACC,KAAK,YAAYtiB,QAASygF,IAAuBH,IAChEzgF,EAAAA,GAAAC,cAACuiB,EAAAA,EAAQ,CAACC,KAAK,eAAetiB,QAASugF,IAAaviF,GAAK,WAG3D2F,GACA9D,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACGslE,IAAqByI,IAA0BlB,GAAgBgB,IAC9Dj9E,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLF,KAAK,OACL4N,QAAM,EACNs7D,OAAK,EACLrpE,QAAS6+E,IAER7gF,GAAKm1B,EAAY,qBAAuB,qBAG5CohD,GAAoByI,GACnBn9E,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLF,KAAK,OACL4N,QAAM,EACNs7D,OAAK,EACLrpE,QAAS6+E,IAER7gF,GAAK,uBAGTu2E,GAAoBoH,GACnB97E,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLF,KAAK,OACL4N,QAAM,EACNs7D,OAAK,EACLrpE,QAAS8+E,IAER9gF,GAAK,aAGTu2E,GAAoBmH,GACnB77E,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLF,KAAK,OACL4N,QAAM,EACNs7D,OAAK,EACLrpE,QAAS++E,IAER/gF,GAAK,eAGTu2E,GAAoBsH,GACnBh8E,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLF,KAAK,OACL4N,QAAM,EACNs7D,OAAK,EACLrpE,QAASg/E,IAERhhF,GAAK,YAGTg+E,GACCn8E,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLC,OAAK,EACLyN,OAAQqlB,EACRplB,MAAM,cACN7N,KAAK,UACLH,QAASu/E,GACTtxE,UAAWjQ,GAAK,mCAEhB6B,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,YAGdmuE,GACCp8E,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLC,OAAK,EACL0N,MAAM,cACN7N,KAAK,UACLH,QAAS0/E,GACTzxE,UAAU,QAEVpO,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,aAKjB0mE,GAAcn3E,QAAQu/E,IACtB/8E,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLC,OAAK,EACL3C,UAAU,eACVoQ,OAAQqlB,EACRplB,MAAM,cACN7N,KAAK,UACLH,QAASm/E,GACTlxE,UAAuBjQ,GAAZm1B,EAAiB,oBAA4B,mBAExDtzB,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,SACXjO,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,SAASi/E,IAG5B/8E,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLb,IAAK4+E,GACLzgF,UAAW0hB,GAAa,SAAW,GACnC/e,OAAK,EACLyN,QAASpK,EACTxD,KAAK,UACL6N,MAAM,cACNyT,SAAU05D,EACVltE,UAAU,eACVjO,QAASw+E,IAET3+E,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,UAEZwwE,IACCz+E,EAAAA,GAAAC,cAACg7E,EAAmB,CAClBr+E,OAAQA,EACR6gB,SAAUA,EACV3d,OAAQ0f,GACR5N,OAAQ6sE,GACRqC,iBAAkBh9E,IAAa4wE,EAC/BphD,UAAWA,EACXwoD,YAAaA,EACbG,aAAcA,EACdE,UAAWA,EACXC,QAASA,EACTE,QAASA,EACTK,kBAAmBA,EACnBE,cAAeA,EACfD,oBAAqBA,EACrBE,kBAAmBA,EACnBP,SAAUA,EACVC,kBAAmBA,EACnBC,mBAAoBA,EACpBM,oBAAqBA,EACrBgE,oBAAqBzB,GACrB0B,iBAAkBrM,EAClBsM,mBAAoBjC,GACpBkC,cAAexB,GACfyB,kBAAmBvB,GACnB39D,QAAS68D,GACT58D,oBAAqB68D,KAGrB,KAgGV,SAASY,IACP,MAAMyB,EAAcjxE,SAAS2Z,cAAgC,uBAC7Ds3D,GAAanxE,OACf,C,2KCtiBA,QAA4C,WCsBtCoxE,EAAwB,SAkC9B,GAAe5kF,EAAAA,EAAAA,KAhCqB6kF,EAClC7+D,OAAMnhB,YAEN,MAAM,cAAEigF,IAAkBx9E,EAAAA,EAAAA,MACpBiB,GAAYT,EAAAA,EAAAA,IAASw3C,EAAAA,EAAAA,IAAqBt5B,EAAM,SAAS,EAAOje,EAAAA,GAAeg9E,MAE/EC,GAAUhjF,EAAAA,EAAAA,KAAQ,KACtB,IAAKuG,EAAW,MAAO,GACvB,MAAMmJ,EAAkB,SAAV7M,EAZO,qBACC,qBAahBogF,EAA8B18E,EAAU2Q,QAAQ0rE,EAAuBlzE,GACvEwzE,GAAM,IAAIpwE,WAAYC,gBAAgBkwE,EAA6B,iBAMzE,OALAC,EAAIzrE,iBAAiB,QAAQrM,SAAS+3E,IACpCA,EAAKxgF,MAAMwO,OAASzB,EACpByzE,EAAKxgF,MAAMygF,YAnBe,OAmBsB,IAG1C,2BAA0BF,EAAI7pE,gBAAgBgqE,WAAW,GAChE,CAAC98E,EAAW1D,IAEf,OACEtB,EAAAA,GAAAC,cAAA,KAAGnC,WAAWoC,EAAAA,EAAAA,GD7CK,WC6CuB,QAASqhF,GAAiBl3B,IAClErqD,EAAAA,GAAAC,cAAA,OACEk+C,IAAKsjC,EACLzqE,IAAI,GACJlZ,WAAWoC,EAAAA,EAAAA,GDjD4C,YCiDdqhF,GAAiBl3B,GAC1D76C,WAAW,IAEX,ICgER,GAAe/S,EAAAA,EAAAA,KAzFqBimB,EAClCtB,MACA9f,QACA1E,SACA6gB,WACAskE,eACAC,aACAr/D,eACAC,mBAEA,MAAM,cAAEkV,EAAa,gBAAEmqD,IAAoB/jF,EAAAA,EAAAA,MAErCC,GAAOC,EAAAA,EAAAA,KAEPqkB,GAAOhkB,EAAAA,EAAAA,KAAQ,IACZ2iB,EAAI8gE,MAAMx1D,MAAK,EAAGze,UAAoB,mBAATA,KAA4BkC,UAC/D,CAACiR,EAAI8gE,SAED1iE,EAAY2iE,EAAUC,IAAatjE,EAAAA,EAAAA,MACnCujE,EAAcC,IAAmBp+E,EAAAA,EAAAA,SAAsC5G,GAExEsrB,GAAoBtjB,EAAAA,EAAAA,IAAiBuG,IACzCA,EAAEiJ,iBACF,MAAMi5D,EAAOliE,EAAEmiE,cAAcjiE,wBAC7Bu2E,EAAgB,CAAEp4E,EAAG6jE,EAAK6Q,MAAOz0E,EAAG4jE,EAAK8Q,SACzCl8D,IACAw/D,GAAU,IAGNzlC,GAAcp3C,EAAAA,EAAAA,IAAgB,KAEhCwyB,EADEiqD,EACY,CACZ3gE,MACAmhE,gBAAgB,GAGJ,CACZnhE,MACAxkB,OAAQA,EACR6gB,YAEJ,IAGI+kE,GAAkBl9E,EAAAA,EAAAA,IAAgB,KACtC88E,IACAx/D,GAAc,IAGV6/D,GAA0Bn9E,EAAAA,EAAAA,IAAgB,KAC9Cg9E,OAAgBhlF,EAAU,IAGtBolF,GAAkBp9E,EAAAA,EAAAA,IAAgB,KACtC28E,EAAgB,CACdr+C,MAAOxiB,EAAI7jB,GACXglC,WAAW,GACX,IAGJ,OACEviC,EAAAA,GAAAC,cAACuiB,EAAAA,EAAQ,CACP00B,IAAK91B,EAAI7jB,GACTqtB,WAAYnI,GAAQziB,EAAAA,GAAAC,cAACqhF,EAAa,CAAC7+D,KAAMA,EAAMnhB,MAAOA,IACtDmhB,KAAOA,OAAgBnlB,EAAT,OACd6C,QAASu8C,EACTlyB,cAAe5B,GAEdxH,EAAIuhE,UACJX,GAAc5gE,EAAIwhE,oBAAsB5iF,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,mBAAmBK,EAAK,QAChFkkF,GACCriF,EAAAA,GAAAC,cAAC4hB,EAAAA,EAAI,CACH/hB,OAAQ0f,EACRuC,UAAU,QACV3gB,MAAQ,SAAQihF,EAAan4E,YAAYm4E,EAAal4E,OACtDrM,UAAU,0BACVgkB,WAAS,EACT+gE,YAAU,EACV5gE,QAASugE,EACTtgE,oBAAqBugE,GAErBziF,EAAAA,GAAAC,cAACuiB,EAAAA,EAAQ,CAACC,KAAK,OAAOqgC,aAAW,EAAC3iD,QAASuiF,GAAkBvkF,EAAK,sBAI7D,G,wECxGf,MAQA,EAR+Cgf,IAC7C,MAAM,OAAErd,GAAWqd,EACb85B,GAAqB55B,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,sBAAuBzd,GAGjF,OAAOm3C,EAAqBj3C,EAAAA,GAAAC,cAACg3C,EAAuB95B,QAAY7f,CAAS,C,wECL3E,MAQA,EAR2C6f,IACzC,MAAM,OAAErd,GAAWqd,EACb2lE,GAAazlE,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,kBAAmBzd,GAGrE,OAAOgjF,EAAa9iF,EAAAA,GAAAC,cAAC6iF,EAAe3lE,QAAY7f,CAAS,C,8NCM3D,MA4DA,GAAeb,EAAAA,EAAAA,KA5DkBsmF,EAAGC,UAASC,YAAW5kE,mBAEtD,MAAM1e,GAAMiE,EAAAA,EAAAA,IAAuB,MAE7Bs/E,GAASt/E,EAAAA,EAAAA,IAAsB,OAE9Bu/E,EAAWC,EAAaC,IAAiBvkE,EAAAA,EAAAA,KAE1CgvD,GAAkBxoE,EAAAA,EAAAA,IAAiBuG,IACvC,MAAQy3E,cAAeC,GAAa13E,EAEhC03E,GACF13E,EAAEM,kBAGJk3E,GAAe,IAGXG,GAAel+E,EAAAA,EAAAA,IAAgB,KACnC,MAAMk1E,EAAM0I,EAAO95E,QACnB,IAAKoxE,EACH,OAGF,MAAM,MAAEhxE,EAAK,OAAEC,GAAW+wE,EAAIzuE,wBAC9ByuE,EAAI/qE,QAAQg0E,QAAQj6E,MAAQA,EAC5BgxE,EAAI/qE,QAAQg0E,QAAQh6E,OAASA,CAAM,KAIrCqgE,EAAAA,EAAAA,GAAkBnqE,EAAK6jF,IAEvBE,EAAAA,EAAAA,GAAcF,GAEd,MAAM1lF,GAAYoC,EAAAA,EAAAA,GAChB,aACAijF,GAAa,WAGf,OACEnjF,EAAAA,GAAAC,cAAA,OACEnC,UAAWA,EACX6B,IAAKA,EACLgkF,OAAQtlE,EACRijD,YAAa8hB,EACb7S,YAAazC,EACb,oBAEA9tE,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,4BACbkC,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,iBAAiBoM,EAAE,IAAIC,EAAE,IAAIX,MAAM,OAAOC,OAAO,OAAOiG,GAAG,OAE7E1P,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,kBACbkC,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAM+0E,EAAU,QAAU,aAChChjF,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,SAAQ,iCACrBmlF,GAAajjF,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,eAAeklF,EAAU,iBAAmB,wBAExE,IC9CH,IAAK1vC,EAAa,SAAbA,GAAa,OAAbA,EAAa,YAAbA,EAAa,oBAAbA,EAAa,uBAAbA,CAAa,MAMzB,MAkGA,GAAe72C,EAAAA,EAAAA,KAhGgBquB,EAC7BhrB,SAAQ0zC,YAAWE,SAAQr1B,eAAcK,qBAEzC,MAAMvgB,GAAOC,EAAAA,EAAAA,MACP,iBAAEgW,IAAqBlW,EAAAA,EAAAA,MAEvB0lF,GAAiBhgF,EAAAA,EAAAA,IAAe,MAChCigF,GAAgB1qD,EAAAA,EAAAA,GAAsBqa,IACtC,aAAE5zC,EAAY,qBAAEwL,IAAyBE,EAAAA,EAAAA,GAA4BxL,GACrE4Y,EAAYgG,GAAkBA,GAAgB/F,WAEpDtZ,EAAAA,EAAAA,KAAU,IAAOS,GAAS2oB,EAAAA,EAAAA,GAAsBirB,QAAUp2C,GAAY,CAACwC,EAAQ4zC,IAE/E,MAAMowC,GAAkBx+E,EAAAA,EAAAA,IAAgBkP,UACtC,MAAQuvE,aAAcC,GAAOn4E,EAC7B,IAAI2L,EAAgB,GAEpB,KAAIwsE,EAAGxsE,OAASwsE,EAAGxsE,MAAMpX,OAAS,IAAO4jF,EAAG/wE,OAAU+wE,EAAG/wE,MAAM7S,QAExD,GAAI4jF,EAAG/wE,OAAS+wE,EAAG/wE,MAAM7S,OAAS,EAAG,CAC1C,MAAM6jF,QAAoBxsE,EAAAA,EAAAA,GAA8BusE,EAAG/wE,OACrD4rB,EAAgBolD,SAAqB5rE,EAAAA,EAAAA,GAAgB4rE,EAAY,GAAGh2E,KAAMg2E,EAAY,IAG5F,GAFmBvlE,GAAkBmgB,IAAiBtmB,EAAAA,EAAAA,IAAuBmG,EAAgBmgB,GAI3F,YADAzqB,EAAiB,CAAE7S,QAASpD,EAAKua,EAAY,6BAA+B,iCAG1EurE,GAAa7jF,SACfoX,EAAQA,EAAMqB,OAAOorE,GAEzB,OAbEzsE,EAAQA,EAAMqB,OAAO7R,MAAMwO,KAAKwuE,EAAGxsE,QAerCk8B,IACAr1B,EAAa7G,GAAOg8B,QAAoBl2C,EAAU,IAG9C4mF,GAAuB5+E,EAAAA,EAAAA,IAAiBuG,IAC5C,MAAQk4E,aAAcC,GAAOn4E,EAEzBm4E,EAAGxsE,OAASwsE,EAAGxsE,MAAMpX,OAAS,IAChCszC,IACAr1B,EAAarX,MAAMwO,KAAKwuE,EAAGxsE,QAAQ,GACrC,IAGIs2D,GAAkBxoE,EAAAA,EAAAA,IAAiBuG,IACvCA,EAAEM,kBAEF,MAAQwI,OAAQwvE,EAAYb,cAAeC,GAAa13E,GAIrDs4E,EAA8B78E,QAAQ,2BACpCi8E,GAAcA,EAA6Bj8E,QAAQ,4BAGtDs8E,EAAex6E,QAAUzI,OAAOsc,YAAW,KACzCy2B,GAAQ,GA5Dc,KA8D1B,IASF,IAAK9zC,EACH,OAGF,MAAMwkF,EAAoB5wC,GAAaqwC,EAEjC/lF,GAAYoC,EAAAA,EAAAA,GAChB,WACAkL,GAGF,OACEpL,EAAAA,GAAAC,cAACokF,EAAAA,EAAM,CAACC,kBAAkB,0BACxBtkF,EAAAA,GAAAC,cAAA,OACEnC,UAAWA,EACXyyE,YAAazC,EACbyW,WAtBiBC,KACjBZ,EAAex6E,SACjBzI,OAAO8jF,aAAab,EAAex6E,QACrC,EAoBIu6E,OAAQjwC,EACRvzC,QAASuzC,GAET1zC,EAAAA,GAAAC,cAAC8iF,EAAU,CAAC1kE,aAAcylE,EAAiBb,WAAYmB,IACtDA,GAAqBpkF,EAAAA,GAAAC,cAAC8iF,EAAU,CAAC1kE,aAAc6lE,EAAsBlB,SAAO,KAExE,G,wECzHb,MAQA,EARyC7lE,IACvC,MAAM,OAAErd,GAAWqd,EACbg6B,GAAe95B,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,gBAAiBzd,GAGrE,OAAOq3C,EAAen3C,EAAAA,GAAAC,cAACk3C,EAAiBh6B,QAAY7f,CAAS,C,mpBCJhD,MAAMonF,EAKnBC,WAAAA,CACEC,EACQjV,EACAkV,GACR,KAFQlV,UAAAA,EAAsB,KACtBkV,QAAAA,EAA6BC,EAAA,qBAAAA,EAAA,kBALnB,GAOlBC,KAAK1hF,MAAQ8M,SAASlQ,cAAc,SACpC8kF,KAAK1hF,MAAM86C,IAAMymC,EACjBG,KAAK1hF,MAAMqkD,yBAA0B,EACrCq9B,KAAK1hF,MAAMokD,OAAQ,EACfo9B,EAAQzjF,OACV2jF,KAAK1hF,MAAMyT,aAAa,QAAS+tE,EAAQzjF,OAE3C2jF,KAAK1hF,MAAMjC,MAAM8pC,SAAW,WAC5B65C,KAAK1hF,MAAM2hF,OAEND,KAAKF,QAAQl2E,SAChBo2E,KAAK1hF,MAAMskD,MAAO,IAGpBzmB,EAAAA,EAAAA,KAAgB,KACd6jD,KAAKpV,UAAUp/D,YAAYw0E,KAAK1hF,OAEhC0hF,KAAKE,4BAA4B,GAErC,CAEOC,IAAAA,IACDH,KAAKl/E,WAAck/E,KAAK1hF,QAC5B0hF,KAAKE,6BACDF,KAAK1hF,MAAM8hF,SACbC,EAAAA,EAAAA,GAASL,KAAK1hF,OAEhB0hF,KAAKl/E,WAAY,EACnB,CAEOqX,KAAAA,GACA6nE,KAAKl/E,WAAck/E,KAAK1hF,QACxB0hF,KAAK1hF,MAAM8hF,QACdJ,KAAK1hF,MAAM6Z,QAEb6nE,KAAKl/E,WAAY,EACnB,CAEOw/E,OAAAA,GACLN,KAAK7nE,QACL6nE,KAAK1hF,OAAOuT,SACZmuE,KAAK1hF,WAAQ/F,CACf,CAEOgoF,cAAAA,CAAep6C,GACpB65C,KAAKF,QAAQ35C,SAAWA,EACxB65C,KAAKE,4BACP,CAEQA,0BAAAA,GACN,MAAM,KAAE3kF,EAAM4qC,UAAU,EAAEhhC,EAAC,EAAEC,IAAQ46E,KAAKF,SAC1CtoE,EAAAA,EAAAA,KAAe,KACb,IAAKwoE,KAAK1hF,MAAO,OACjB,MAAMA,EAAQ0hF,KAAK1hF,OACb,MAAEmG,EAAK,OAAEC,GAAWs7E,KAAKpV,UAAU5jE,yBACzCm1B,EAAAA,EAAAA,KAAgB,KACd79B,EAAMjC,MAAM0K,KAAQ,GAAE7E,KAAKxG,MAAMyJ,EAAIV,OACrCnG,EAAMjC,MAAMwuC,IAAO,GAAE3oC,KAAKxG,MAAM0J,EAAIV,OACpCpG,EAAMjC,MAAMoI,MAAS,GAAElJ,MACvB+C,EAAMjC,MAAMqI,OAAU,GAAEnJ,KAAQ,GAChC,GAEN,E,2HCrDF,MAAMilF,EAAO,KAAOlnC,EAAAA,E,2DCpBpB,MAQA,EAR0ClhC,IACxC,MAAM,OAAErd,GAAWqd,EACbqoE,GAAgBnoE,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,iBAAkBzd,GAGvE,OAAO0lF,EAAgBxlF,EAAAA,GAAAC,cAACulF,EAAkBroE,QAAY7f,CAAS,EC+B3DmoF,EAAiB,iBA8CjBC,EAA8B,IAG9BC,EAAc,CAClB,MAAO,SAAU,QAAS,SAAU,WAAY,OAAQ,MAAO,OAAQ,YAAa,UAAW,UAAW,SAqiB5G,GAAelpF,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GAAUC,SAAQ6gB,eACjB,MAAM,oBAAEmoE,GAAwBjpF,EAAOuyB,SAASC,MAEhD,MAAO,CACLy2D,sBACApgE,UAAW5oB,GAAU6gB,GAAW8H,EAAAA,EAAAA,KAAY5oB,EAAQC,EAAQ6gB,IAAW+H,eAAYloB,EACnFm2B,oBAAoBC,EAAAA,EAAAA,KAAqB/2B,GACzCo5B,uBAAuBC,EAAAA,EAAAA,KAA4Br5B,GACpD,GATeD,EArhB4Bu5C,EAC9Ct2C,MACApC,KACAX,SACA84B,eACAmwD,yBACA1vC,eACAD,oBACArf,kBACAH,UACAz5B,WACA2uB,UACAulB,cACAL,0BACAC,uBACAqF,oBACAra,oBACAsa,gBACAC,uBACAC,uBACAC,+BACAhxB,aACAiO,sBACAsC,yBACA6vD,uBACAnvC,YACAC,qBACAvD,UACA2yC,YACA9uD,WACAC,UACAgF,qBAEA,MAAM,gBACJ8pD,GAAe,mBACfC,GAAkB,oCAClBhuD,GAAmC,iBACnC2wB,KACEzqD,EAAAA,EAAAA,MAGJ,IAAIu6B,IAAW70B,EAAAA,EAAAA,IAAuB,MAClCjE,IACF84B,GAAW94B,GAIb,MAAMsmF,IAAsBriF,EAAAA,EAAAA,IAAe,MAErCsiF,IAAWtiF,EAAAA,EAAAA,IAAuB,MAElCuiF,IAAmBviF,EAAAA,EAAAA,IAAuB,MAE1CwiF,IAAkBxiF,EAAAA,EAAAA,IAA0B,MAE5CyiF,IAAoBziF,EAAAA,EAAAA,IAA0B,MAE9C0iF,IAAuB1iF,EAAAA,EAAAA,IAAuB,MAE9CzF,IAAOC,EAAAA,EAAAA,KACPmoF,IAAuB3iF,EAAAA,EAAAA,KAAO,IAC7B4iF,GAAqBC,GAAmBC,KAAsB5nE,EAAAA,EAAAA,MAC9D6nE,GAA6BC,KAAkC1iF,EAAAA,EAAAA,OAC/D2iF,GAAeC,KAAoB5iF,EAAAA,EAAAA,OACnC6iF,GAAyBC,KAA8B9iF,EAAAA,EAAAA,KAAkB,IAC1E,SAAEJ,KAAaC,EAAAA,EAAAA,MACfkjF,GAAiBnjF,KAAaoM,EAAAA,IAAUg3E,EAAAA,KAEvCC,GAAoBC,KAAyBljF,EAAAA,EAAAA,KAAS,IAE7D7E,EAAAA,EAAAA,KAAU,KACR+nF,GAAsB5pF,QAAQszC,GAA2BC,GAAsB,GAC9E,CAACA,EAAsBD,IAE1B,MAAMu2C,IAAiB/hF,EAAAA,EAAAA,IAAgB,KACrC8hF,IAAsB,EAAM,KFnJjB,SACbx7D,EACA6M,EACA2tD,EACAC,EACAC,EACAgB,EACAvxD,EACAW,EACAz5B,GAEA,MAAMsqF,GAAcC,EAAAA,EAAAA,GAAwB/uD,OAAUn7B,GAAYo5B,GAC5D+wD,GAAcC,EAAAA,EAAAA,GAAeH,GAAa,GAC1C3rB,GAAMC,EAAAA,EAAAA,KACN8rB,GAAc/jF,EAAAA,EAAAA,IAAuC,IAAIgkF,KAEzDC,GAAeviF,EAAAA,EAAAA,IAAiBwiC,IACpCA,EAAIj+B,SAAStM,IACX,MAAMuqF,EAASH,EAAYv+E,QAAQkwB,IAAI/7B,GACnCuqF,IACFA,EAAOzC,UACPsC,EAAYv+E,QAAQ2+E,OAAOxqF,GAC7B,GACA,IAGEyqF,GAAsB1iF,EAAAA,EAAAA,IAAgB,KAC1C,KAAKoxB,GAAY+B,EAASrvB,SAAYg9E,EAAgBh9E,SAAYi9E,EAAkBj9E,SAAS,OAE7F,MAAMzM,GAASgC,EAAAA,EAAAA,MACTspF,EAAmB,IAAIx0E,IAAIk0E,EAAYv+E,QAAQwd,QAChC5f,MAAMwO,KAAKijB,EAASrvB,QAAQ8M,iBAA8B,kBAElErM,SAASgmC,IACpB,IAAKA,EAAQr5B,QAAQ0xE,SACnB,OAEF,MAAMC,EAAY,GAAEb,IAAWz3C,EAAQr5B,QAAQ0xE,WAAWX,GAAe,KACnE1/C,EAAagI,EAAQr5B,QAAQqxB,WAEnCogD,EAAiBF,OAAOI,GAExB,MAAMC,GAAWC,EAAAA,EAAAA,IAAgCxgD,GACjD,IAAKugD,EACH,OAGF,MAAME,EAAelC,EAAgBh9E,QAAS2C,wBACxCw8E,EAAgB14C,EAAQ9jC,wBACxB7B,GAAIzJ,EAAAA,EAAAA,KAAO8nF,EAAcz8E,KAAOw8E,EAAax8E,MAAQw8E,EAAa9+E,MAAO,GACzEW,GAAI1J,EAAAA,EAAAA,KAAO8nF,EAAc34C,IAAM04C,EAAa14C,KAAO04C,EAAa7+E,OAAQ,GAE9E,GAAIk+E,EAAYv+E,QAAQyL,IAAIszE,GAG1B,YAFeR,EAAYv+E,QAAQkwB,IAAI6uD,GAChC7C,eAAep7E,EAAGC,GAI3B,MAAMq+E,EAAc7rF,EAAOy3B,aAAav1B,KAAKgpC,GAC7C,IAAK2gD,EACH,OAEF,MAAMC,EAAOD,GAAan6C,iBAAkBq6C,EAAAA,EAAAA,KAAgC/rF,EAAQ6rF,EAAYn6C,gBAC1Fs6C,EAAW,CACfrB,EAAUz/C,EAAY0/C,EAAa3rB,GACnCx8D,OAAO5B,SAASojB,KAAK,MAoG7BpM,gBAA4B,YAC1Bg0E,EAAW,gBACXpC,EAAe,kBACfC,EAAiB,qBACjBC,EAAoB,SACpBqC,EAAQ,OACRC,EAAM,SACNR,EAAQ,SACRl9C,EAAQ,KACRu9C,EAAI,UACJI,EAAS,YACTpB,IAcA,GAAIe,EAAYM,SAAU,CACxB,MAAM36E,EAAQq6E,EAAYO,oBAAsBF,GAAYG,EAAAA,EAAAA,IAASH,QAAavrF,EAE5E2rF,SADgBC,EAAAA,EAAAA,MACCxuE,KACrB0tE,EACAK,EAAOpC,EAAkBj9E,QAAWg9E,EAAgBh9E,QACpDu/E,EACA,CACEroF,KAAMilF,EACN4D,OAAQj+C,EACRk+C,eAAgBX,GAElBG,EACAz6E,EAAQ,CAACA,EAAMk7E,EAAGl7E,EAAMm7E,EAAGn7E,EAAMqkD,QAAKl1D,GAGxC,MAAO,CACL4nF,KAAMA,IAAM+D,EAAO/D,OACnBhoE,MAAOA,IAAM+rE,EAAO/rE,QACpBmoE,QAASA,IAAM4D,EAAOM,WAAWX,GACjCtD,eAAgBA,CAACp7E,EAAWC,IACnB8+E,EAAOO,sBAAsBZ,EAAQ,CAAE1+E,IAAGC,MAGvD,CAEA,GAAIq+E,EAAYviC,QAAS,CACvB,MAAM7kD,EAAQonF,EAAYO,oBAAsBtB,EAAe,WAAUA,UAAiBnqF,EACpFmsF,EAAgB,IAAI/E,EACxB0D,EACA9B,EAAqBl9E,QACrB,CAAE9I,KAAMilF,EAAMr6C,WAAU9pC,UAE1B,MAAO,CACL8jF,KAAMA,IAAMuE,EAAcvE,OAC1BhoE,MAAOA,IAAMusE,EAAcvsE,QAC3BmoE,QAASA,IAAMoE,EAAcpE,UAC7BC,eAAgBA,CAACp7E,EAAWC,IAAcs/E,EAAcnE,eAAe,CAAEp7E,IAAGC,MAEhF,CAEA,MAAM,IAAIu/E,MAAM,gCAClB,EArKMC,CAAa,CACXnB,cACApC,kBACAC,oBACAC,uBACAqC,WACAC,OAAQT,EACRC,WACAK,OACAv9C,SAAU,CAAEhhC,IAAGC,KACf0+E,UAAWtB,EACXE,gBACCmC,MAAMC,IACH9zD,GACF8zD,EAAU3E,OAGZyC,EAAYv+E,QAAQ0gF,IAAI3B,EAAU0B,EAAU,GAC5C,IAGJhC,EAAa7gF,MAAMwO,KAAKyyE,GAAkB,KAG5C5oF,EAAAA,EAAAA,KAAU,KACD0qF,EAAAA,EAAAA,IAAkC/B,IACxC,CAACA,KAEJ3oF,EAAAA,EAAAA,KAAU,KACR,MAAM2qF,EAAoBrC,EAAYv+E,QAEtC,MAAO,KACLy+E,EAAa7gF,MAAMwO,KAAKw0E,EAAkBpjE,QAAQ,CACnD,GACA,KAEHvnB,EAAAA,EAAAA,KAAU,KACHusB,KAAc6M,EAASrvB,SAAYg9E,EAAgBh9E,SAAYnM,GAAay5B,GAMjFna,EAAAA,EAAAA,KAAe,KACbyrE,GAAqB,IANrBH,EAAa7gF,MAAMwO,KAAKmyE,EAAYv+E,QAAQwd,QAO5C,GACD,CAACgF,EAASo8D,EAAqBvvD,EAAUovD,EAAczB,EAAiBnpF,EAAUy5B,KAErFxtB,EAAAA,EAAAA,KAAgB,KACdiH,SAAS2H,gBAAgB1W,MAAM2iB,YAAY,8BAA+B0jE,GAAe,OAAO,GAC/F,CAACA,KAEJ3+C,EAAAA,EAAAA,IAAsB,EAAEmhD,WACE3sF,IAApB2sF,GAAiC1C,IAAgB0C,GACnDjC,GACF,GACC,CAACT,EAAaS,IAEjB,MAAMkC,GAA+BC,EAAAA,EAAAA,GACnCnC,EACA,CAACA,GAxIe,KA0IhB,IAEFle,EAAAA,EAAAA,GAAkBsc,EAAiB8D,IACnCphD,EAAAA,EAAAA,IAAsB,EAAEshD,MAClBxuB,IAAQwuB,IACVvC,EAAa7gF,MAAMwO,KAAKmyE,EAAYv+E,QAAQwd,SAC5CohE,IACF,GACC,CAACpsB,EAAKosB,IAET,MAAMqC,GAAkB/kF,EAAAA,EAAAA,IAAgB,KACtCqiF,EAAYv+E,QAAQS,SAASi+E,IAC3BA,EAAO5qE,OAAO,GACd,IAGEotE,GAAoBhlF,EAAAA,EAAAA,IAAgB,KACnCywB,GAIL4xD,EAAYv+E,SAASS,SAASi+E,IAC5BA,EAAO5C,MAAM,GACb,IAGEqF,GAAyBjlF,EAAAA,EAAAA,IAAgB,MAC7CiX,EAAAA,EAAAA,IAAe+tE,EAAkB,KAMnCniD,EAAAA,EAAAA,GAAkBkiD,EAAiBE,EACrC,CEbEC,CACE5+D,EACA6M,GACA2tD,GACAC,GACAC,GACApwC,EACAngB,GACAW,EACAz5B,GAGF,MAAMwtF,GAAiB5E,EAnHiB,IAqHpC1vC,EApH+B,IAoHgBryC,GAAW,IAAM,IAC9D4mF,IAAoBplF,EAAAA,EAAAA,IAAgB,CAACqlF,GAAW,MACpDC,EAAAA,EAAAA,KAAoB,KAClB,MAAMC,EAAWpyD,GAASrvB,QAASwL,QAAyB,IAAG6wE,KACzDqF,EAAgB3gD,OAAO0gD,EAASzpF,MAAMqI,OAAOkM,QAAQ,KAAM,KAC3DklE,EAAQsL,GAAiB/8E,SACzB,aAAEwmE,GAAiBiL,EACnBkQ,EAAY9jF,KAAKC,IAAI0oE,EAAc6a,IAEzC,GAAIM,IAAcD,EAChB,OAGF,MAAME,EAAcpb,EAAe6a,GAEnC,SAASQ,IACP,MAAMC,EAAqBjkF,KAAKxG,MAhLL,GAiLIwG,KAAKkkF,IAAIlkF,KAAK0vE,IAAIoU,EAAYD,KAE7DD,EAASzpF,MAAMqI,OAAU,GAAEshF,MAC3BF,EAASzpF,MAAM8pF,mBAAsB,GAAEA,MACvCL,EAASz6E,UAAUg7E,OAAO,YAAaJ,EACzC,CAEA,OAAIL,OAEFzpD,EAAAA,EAAAA,IAAgB+pD,GAGTA,CACT,GACA,KAGJ/hF,EAAAA,EAAAA,KAAgB,KACT28E,GACL6E,IAAkB,EAAM,GACvB,CAAC7E,EAAwB6E,KAE5B,MAAMW,IAAUznF,EAAAA,EAAAA,IAAOgoB,MACvB1iB,EAAAA,EAAAA,KAAgB,KACd,MAAMoI,EAAOrU,EAAW2uB,IAAY,GAEhCta,IAASmnB,GAASrvB,QAASwM,YAC7B6iB,GAASrvB,QAASwM,UAAYtE,GAG5BA,IAAS40E,GAAS98E,QAASwM,YAC7BswE,GAAS98E,QAASwM,UAAYtE,GAG5BA,IAAS+5E,GAAQjiF,UACnBiiF,GAAQjiF,QAAUkI,EAElBo5E,IAAmBp5E,GACrB,GACC,CAACsa,EAAS3uB,EAAUytF,MAEL9mF,EAAAA,EAAAA,IAAOhH,GACfwM,QAAUxM,EACpB,MAAM0uF,IAAahmF,EAAAA,EAAAA,IAAgB,KAC5BmzB,GAASrvB,UAAW6yB,MAIrBsvD,EAAAA,EAAAA,MACFtuE,WAAWquE,GAnOM,MAuOnBjuD,EAAAA,EAAAA,GAAqB5E,GAASrvB,SAAS,IAGnCoiF,IAA2BlmF,EAAAA,EAAAA,IAAgB,KAC/CohF,KAnLJ,WACE,MAAMlqD,EAAY77B,OAAO87B,eACpBD,IAIDA,EAAU4T,gBACZ5T,EAAU4T,kBACD5T,EAAUivD,OACnBjvD,EAAUivD,QAEd,CAyKIC,EAAgB,IAGlB,SAASC,KAEP,GAAIz7E,EAAAA,GACF,OAAO,EAGT,MAAMssB,EAAY77B,OAAO87B,eACzB,IAAKD,IAAcA,EAAUI,YAAc2pD,GAAqBn9E,QAK9D,OAJAs9E,KACIQ,EAAAA,IACFF,IAA2B,IAEtB,EAGT,MAAMnqD,EAAiBL,EAAUM,WAAW,GACtC8uD,EAAe/uD,EAAe4O,WAAWvF,OAC/C,QACEsQ,MACIzZ,EAAAA,EAAAA,GAAuBF,EAAgBhG,GAAmBnjB,EAAAA,OAC1Dk4E,IACD1oD,EAAAA,EAAAA,GAAqB0oD,KACpB/uD,EAAegvD,gBAEnBnF,MACO,EAIX,CAEA,SAASoF,KACP,IAAKH,KACH,OAGF,GAAI5E,GACF,OAGF,MAAMlqD,EAAiBl8B,OAAO87B,eAAgBK,WAAW,GACnDivD,EAAgBlvD,EAAe9wB,wBAC/BigF,EAAevzD,GAASrvB,QAASwL,QAAyB,IAAG6wE,KAAmB15E,wBAEtF,IAAI7B,EAAK6hF,EAAcjgF,KAAOigF,EAAcviF,MAAQ,EAAKwiF,EAAalgF,KAElE5B,EAAIw7E,EACNx7E,EAAIw7E,EACKx7E,EAAI8hF,EAAaxiF,MAAQk8E,IAClCx7E,EAAI8hF,EAAaxiF,MAAQk8E,GAG3BkB,GAA+B,CAC7B18E,IACAC,EAAG4hF,EAAcn8C,IAAMo8C,EAAap8C,MAGtCk3C,GAAiBjqD,GACjB4pD,IACF,CAEA,SAASwF,KACHhG,GAAoB78E,SACtBzI,OAAO8jF,aAAawB,GAAoB78E,SAG1C68E,GAAoB78E,QAAUzI,OAAOsc,WAAW6uE,GAjQb,IAkQrC,CAiHA,MAAMI,IAAyB5mF,EAAAA,EAAAA,IAAgB,IAAMqjD,QAErDtpD,EAAAA,EAAAA,KAAU,KACJ+iB,EAAAA,IAIAi0B,IACFi1C,IACF,GACC,CAAC1uF,EAAQ0uF,GAAY9lE,GAAW6wB,MAEnCh3C,EAAAA,EAAAA,KAAU,KACR,IACGzC,GACEi6B,IAAoBnjB,EAAAA,KACpB4iC,IACA2wC,IACAxzD,GAEH,OAGF,MAAM04D,EAAyBtgF,IAC7B,IAAIugF,EAAAA,EAAAA,MACF,OAGF,MAAM,IAAEl1C,GAAQrrC,EACV8I,EAAS9I,EAAE8I,OAEjB,IAAKA,GAAUgxE,EAAYpkE,SAAS21B,GAClC,OAGF,MAAMxiC,EAAQ+jB,GAASrvB,QACjBijF,EAAuBl8E,SAASssB,gBAAgB6vD,YAEtD,MACIp1C,EAAIjS,WAAW,UAAap5B,EAAEk0E,UAAoB,UAAR7oC,KAAsBm1C,GACnD,SAAXxgF,EAAEkrD,OAAoBlrD,EAAEshE,SAAWthE,EAAEqhE,UAA+B,UAAnBv4D,EAAO2B,UAM5D5B,GACGC,IAAWD,GACQ,UAAnBC,EAAO2B,SACY,aAAnB3B,EAAO2B,UACN3B,EAAO43E,kBACX,EACAlvD,EAAAA,EAAAA,GAAqB3oB,GAAO,GAAM,GAElC,MAAM83E,EAAW,IAAIC,cAAc5gF,EAAEyO,KAAMzO,GAC3C6I,EAAMuoB,cAAcuvD,EACtB,GAKF,OAFAr8E,SAASkE,iBAAiB,UAAW83E,GAAuB,GAErD,KACLh8E,SAASoE,oBAAoB,UAAW43E,GAAuB,EAAK,CACrE,GACA,CAACvvF,EAAQi6B,EAAiBowD,GAAgBxzD,GAAoB6iB,MAEjEj3C,EAAAA,EAAAA,KAAU,KACR,MAAMqtF,GAAkBC,EAAAA,EAAAA,KAAU9gF,IAClB,QAAVA,EAAEqrC,MAAkBk1C,EAAAA,EAAAA,QACtBvgF,EAAEiJ,kBACFosB,EAAAA,EAAAA,IAAgBoqD,IAClB,GA5b6B,KA6bA,GAAM,GAErC,OAAOsB,EAAAA,EAAAA,GAAyB,CAAEC,MAAOH,GAAkB,GAC1D,CAACpB,MAEJjsF,EAAAA,EAAAA,KAAU,KACR,MAAMqV,EAAQ+jB,GAASrvB,QAEvB,SAAS0jF,IACPp4E,EAAM03B,MACR,CAMA,OAJImK,IACF7hC,EAAML,iBAAiB,QAASy4E,GAG3B,KACLp4E,EAAMH,oBAAoB,QAASu4E,EAAc,CAClD,GACA,CAACv2C,KAEJ,MAAM5O,IAAY1a,EAAAA,EAAAA,IAAgB,IAAMzvB,QAAQP,GAAY2uB,MAAY,CAAC3uB,EAAU2uB,IAE7E9tB,IAAYoC,EAAAA,EAAAA,GAChB,+BACAynC,IAAa,UACb4O,IAAuB,kBAGnBw2C,IAA4B7sF,EAAAA,EAAAA,GAAe,yBAA0B+7B,IAAiB,mBAE5F,OACEj8B,EAAAA,GAAAC,cAAA,OAAK1C,GAAIA,EAAI4C,QAASo2C,GAAsBG,QAAoBp5C,EAAWmQ,IAAKtP,GAAK0F,MAAQ,WAAQvG,GACnG0C,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GAAe,gBAAiBulF,EAAgBxpD,IAAiB,mBAC5E6pD,SAAUA,GACV3lF,QAAU0lF,GAA2B9pD,QAAiCz+B,EAjH5E,WACMuoF,GAA0B9pD,IAAqBoa,GAAgBla,IACnEjE,GAAoC,CAAEp7B,UACxC,GAgHMoD,EAAAA,GAAAC,cAAA,OAAKnC,UAAWivF,IACd/sF,EAAAA,GAAAC,cAAA,OACEN,IAAK84B,GACLl7B,GAAIs5B,GAAmBnjB,EAAAA,IACvB5V,UAAWA,GACX6xC,gBAAiBk2C,GAA0B9pD,GAC3CurB,KAAK,UACL75C,IAAI,OACJ6nD,SAAU,EACVn1D,QAASmrF,GACT0B,SApKV,SAAsBnhF,GACpB,MAAM,UAAE+J,EAAS,YAAElD,GAAgB7G,EAAEmiE,cAKrC,GAHAv3B,GAvUc,SAuUL7gC,EAA0B,GAAKA,IAIrCwM,EAAAA,MACI1P,IAAgBA,EAAYtS,UAE3B0iC,EAAAA,KAAsBltB,EAAU2L,SAAS,kBAC1C3L,EAAU2L,SAAS,gBACxB,CACA,MAAMib,EAAY77B,OAAO87B,eACrBD,IACF/D,GAASrvB,QAASgjC,OAClB5P,EAAU4T,mBACV/S,EAAAA,EAAAA,GAAqB5E,GAASrvB,SAAU,GAE5C,CACF,EAiJU6jF,UAzMV,SAAuBphF,GAErB,MAAM,YAAEqhF,GAAgBrhF,EAElByF,EAAOsa,IACb,IAAKshE,IAAgB57E,IAASzF,EAAEqhE,SAAWrhE,EAAEshE,SAAU,CACrD,MAAML,EAA6B,cAAVjhE,EAAEqrC,IAAsB,EAAc,YAAVrrC,EAAEqrC,KAAqB,OAAI55C,EAChF,GAAIwvE,EAIF,OAHAjhE,EAAEiJ,sBAEFkxE,GAAmB,CAAElZ,oBAGzB,CAEKogB,GAAyB,UAAVrhF,EAAEqrC,KAAoBrrC,EAAEk0E,SAahCmN,GAAyB,YAAVrhF,EAAEqrC,KAAsB5lC,GAASzF,EAAEqhE,SAAYrhE,EAAEshE,SAAYthE,EAAEshF,OAIxFthF,EAAE8I,OAAON,iBAAiB,QAAS43E,GAA6B,CAAEjR,MAAM,KAHxEnvE,EAAEiJ,iBACFixE,OAbGkB,KAE0B,UAAxBrB,KAAoC/5E,EAAEk0E,UACX,eAAxB6F,KAAyC/5E,EAAEshE,SAAWthE,EAAEqhE,YAG9DrhE,EAAEiJ,iBAEF4xE,KACAvzC,KAQN,EAwKUkE,YAzOV,SAAyBxrC,GAcvB,SAASuhF,EAAuBC,GAC1BA,aAAcZ,eAA4B,QAAXY,EAAGn2C,KAA4B,WAAXm2C,EAAGn2C,MAI1Dj6B,YAAW,KACTspE,GAAqBn9E,SAAU,CAAK,GA1UR,KA6U9BzI,OAAO4T,oBAAoB,UAAW64E,GACtCzsF,OAAO4T,oBAAoB,YAAa64E,GAC1C,CAxBiB,IAAbvhF,EAAEQ,OAOFk6E,GAAqBn9E,UAIzBm9E,GAAqBn9E,SAAU,EAe/B+G,SAASkE,iBAAiB,YAAa+4E,GACvCj9E,SAASkE,iBAAiB,UAAW+4E,KA1BhBvhF,EAAEmiE,cAAcp5D,QAAS,2BAA6B/I,EAAE8I,QAEhEN,iBAAiB,UAAW43E,GAA6B,CAAEjR,MAAM,GAyBhF,EA6MUxwD,cAAe08D,EAAAA,GAjJzB,SAAkCr7E,GAC3B8/E,OAIL3E,IAA4BD,IAEvBA,GAMHL,MALA76E,EAAEiJ,iBACFjJ,EAAEM,kBAEF2/E,MAIJ,OAkIiExuF,EACvDgwF,cAAepG,EAAAA,GAAa+E,QAA8B3uF,EAC1D,aAAY6zC,EACZna,QAAUiF,QAA0B3+B,EAAV05B,GAC1BC,OAASgF,QAAyB3+B,EAAT25B,MAEzBmf,GACAp2C,EAAAA,GAAAC,cAAA,QACEnC,WAAWoC,EAAAA,EAAAA,GACT,oBACC2lF,IAA2B9pD,IAAoB,YAChDE,IAAiB,mBAEnBxuB,IAAI,SAEFo4E,IAA2B9pD,IACxB/7B,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,aAAanQ,UAAU,qBACtCqpF,GACCnnF,EAAAA,GAAAC,cAACstF,EAAAA,EAAS,CAACtN,QAASnvC,EAA0B08C,OAAQz8C,EAAuB08C,MAAOpG,KAClFl2C,EACHgF,GAAgBla,IACfj8B,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CAAC1C,UAAU,gBAAgBwC,KAAK,OAAO6N,MAAM,WAAWhO,QAAS+rF,IACrE/tF,GAAK,8BAKd6B,EAAAA,GAAAC,cAAA,UAAQN,IAAKymF,GAAiBtoF,UAAU,kBACxCkC,EAAAA,GAAAC,cAAA,UAAQN,IAAK0mF,GAAmBvoF,UAAU,kBAC1CkC,EAAAA,GAAAC,cAAA,OAAKN,IAAK2mF,GAAsBxoF,UAAU,+BAG9CkC,EAAAA,GAAAC,cAAA,OACEN,IAAKwmF,GACLroF,WAAWoC,EAAAA,EAAAA,GAAe,gBACxBulF,EACA,QACAxpD,IAAiB,oBAEnBj8B,EAAAA,GAAAC,cAAA,OAAKnC,UAAWivF,IACd/sF,EAAAA,GAAAC,cAAA,OAAKN,IAAKumF,GAAUpoF,WAAWoC,EAAAA,EAAAA,GAAepC,GAAW,SAAU2P,IAAI,gBAGzDnQ,IAAjBo4B,GACC11B,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,uBAAuB2P,IAAI,QACvCioB,GAGL11B,EAAAA,GAAAC,cAACulF,EAAa,CACZ1lF,OAAQ0mF,GACRkH,eAAgB/G,GAChBE,cAAeA,GACfC,iBAAkBA,GAClB7kE,QAASupE,KAEVp1C,GAAqBp2C,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,uBAAsB4P,EAAAA,EAAAA,GAAW0oC,IACnE,I,2KCvnBV,MAQA,EARuCj5B,IACrC,MAAM,OAAErd,GAAWqd,EACbwwE,GAAatwE,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,cAAezd,GAGjE,OAAO6tF,EAAa3tF,EAAAA,GAAAC,cAAC0tF,EAAexwE,QAAY7f,CAAS,EC2L3D,GAAeb,EAAAA,EAAAA,KAnJwBk5C,EACrC/4C,SACA6gB,WACA3Z,WACA83B,cACAD,kBACAia,oBACAlf,UACA6I,mBACAyW,WACA3K,oBACAtP,mBACArC,qBACA57B,YACAq2C,iBACA4B,mBAAmB9M,EAAAA,IACnBzJ,iBACAC,kBACA+U,sBACAsB,kBACAD,cACApB,iBACAC,gBACApV,sBACAM,sBAEA,MAAM,sBACJguD,EAAqB,kBACrBC,EAAiB,eACjBn2D,EAAc,qBACdK,IACE75B,EAAAA,EAAAA,MAGE4vF,GAAalqF,EAAAA,EAAAA,IAAuB,OAEnCmqF,EAAoBC,IAA+BlvE,EAAAA,EAAAA,MACnD6J,EAAmBslE,IAAwB/pF,EAAAA,EAAAA,SAAsC5G,GAElF4wF,GAA4BhuF,EAAAA,EAAAA,GAChC,oDACCw2B,GAAW,YACZq3D,EACKxuD,GAAoB,cACpBA,GAAoB,cAGrB4uD,GAA2B7oF,EAAAA,EAAAA,IAAgB,KAC/Cg6B,MACAM,MACAJ,IACA,MAAM4uD,EAAYN,EAAW1kF,QAC7B,IAAKglF,EAAW,OAChB,MAAM,EAAElkF,EAAC,EAAEC,GAAMikF,EAAUriF,wBAC3BkiF,EAAqB,CAAE/jF,IAAGC,KAAI,IAG1BkkF,GAAmB/oF,EAAAA,EAAAA,IAAiBgV,IAC3B,aAATA,GACFszE,EAAsB,CAAEt0E,MAAO,KAC/Bu0E,EAAkB,CAAEv0E,WAAOhc,MAE3BuwF,EAAkB,CAAEv0E,MAAO,KAC3Bs0E,EAAsB,CAAEt0E,WAAOhc,IACjC,IAGIgxF,GAAuBhpF,EAAAA,EAAAA,IAAgB,KAC3C,MAAMo3B,EAAevsB,SAAS2Z,cAC5BuhB,EAAoBkjD,EAAAA,IAAoCx4C,GAGrDjyC,GAAY44B,IAAiBvsB,SAAS4E,eAK3C2nB,GAAc0P,OACdnvB,YAAW,KACTqiB,MACAE,GAAgB,GAnHgB,MA4GhCA,GAQ+B,IAG7B7V,GAAoBrkB,EAAAA,EAAAA,IAAgB,IAAMwoF,EAAW1kF,UACrDwgB,GAAiBtkB,EAAAA,EAAAA,IAAgB,IAAMwoF,EAAW1kF,SAASwL,QAAQ,mCACnEiV,GAAiBvkB,EAAAA,EAAAA,IAAgB,IAAM6K,SAAS2Z,cAAc,kCAC9D0kE,GAAYlpF,EAAAA,EAAAA,IAAgB,KAAM,CAAGu9E,YAAY,MAEvD,OACE7iF,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACGtL,EACC9D,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACL1C,UAAWowF,EACXztF,OAAK,EACL0N,MAAM,cACNhO,QAASo/B,EAAmBE,EAAkB6uD,EAC9ClgF,UAAU,gCAEVpO,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,UACXjO,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,aACVsxB,IAAqBwuD,GAAsB/tF,EAAAA,GAAAC,cAAC02C,EAAAA,EAAO,CAACxoC,MAAM,UAG7DnO,EAAAA,GAAAC,cAACuhB,EAAAA,EAAqB,CACpB1jB,WAAWoC,EAAAA,EAAAA,GAAe,4CAA6Cq/B,GAAoB,aAC3F9+B,OAAK,EACL0N,MAAM,cACNsT,WAAY0sE,EACZ//E,UAAU,gCAEVpO,EAAAA,GAAAC,cAAA,OAAKN,IAAKmuF,EAAYhwF,UAAU,wBAChCkC,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,WAIfjO,EAAAA,GAAAC,cAAC0tF,EAAU,CACT/wF,OAAQA,EACR6gB,SAAUA,EACV3d,OAAQy/B,GAAoB/hC,QAAQk8B,GACpCkC,YAAaA,EACbD,gBAAiBA,EACjBia,kBAAmBA,EACnBI,SAAUA,EACVy4C,OAAQT,EACR/rE,QAASwd,EACTiV,cAAeA,EACfoB,gBAAiBA,EACjBtB,oBAAqBA,EACrBqB,YAAaA,EACbpB,eAAgBA,EAChBi6C,aAAcL,EACd32D,eAAgBA,EAChBK,qBAAsBA,EACtBsT,kBAAmBA,EACnBtP,iBAAkBA,EAClBj+B,WAAWoC,EAAAA,EAAAA,GAAepC,EAAWq2C,GAAkB,wBACvDviC,OAAQy5B,EAAoB1iB,OAAoBrrB,EAChDqsB,kBAAmB0hB,EAAoB1hB,OAAoBrsB,EAC3DssB,eAAgByhB,EAAoBzhB,OAAiBtsB,EACrDusB,eAAgBwhB,EAAoBxhB,OAAiBvsB,EACrDkxF,UAAWnjD,EAAoBmjD,OAAYlxF,IAE5C,G,gFCrLP,MAAMqxF,EAAqB,KACrBC,EAAqB,GACrBC,EAAmB,GACnBC,EAAiB,YAERt6E,eAAe6D,EAC5B02E,EAAkBlyE,EAAYgoE,GAE9B,MAAM31B,EAAU/0C,IAAI60E,gBAAgBnyE,IAC5BvC,KAAM20E,EAAQ,KAAE3uF,GAASuc,EACjC,IAAIqyE,EACAhsF,EACAm5C,EACA8yC,EAEJ,GAAIzuE,EAAAA,IAA8B7L,IAAIo6E,GAAW,CAC/C,MAAMG,QAAYC,EAAAA,EAAAA,IAAangC,IACzB,MAAE1lD,EAAK,OAAEC,GAAW2lF,EAC1BD,GAAoBG,EAAoB9lF,EAAOC,GAE/C,MAAM8lF,EAAetoF,KAAKgD,IAAIT,EAAOC,GAAUklF,EACzC9qC,EAAQorC,IAAaO,EAAAA,IAE3B,IAAKL,EAAkB,CACrB,IAAKtK,GAAS4K,oBAAsB5rC,IAAU0rC,GAA6B,eAAbN,GAA4B,CACxF,MAAMS,QAAmBC,EAAAA,EAAAA,GACvBzgC,EAASqgC,EAAeZ,EAAqB1nF,KAAKgD,IAAIT,EAAOC,GAAU,EAAG,cAG5E,OADA0Q,IAAIy1E,gBAAgB1gC,GACb72C,EAAgB02E,EAAUlyE,EAAM,CACrC4yE,kBAAmBC,GAEvB,CAEiB,eAAbT,IACFF,EAAWA,EAASp5E,QAAQm5E,EAAgB,SAG9CI,EAAQ,CAAE1lF,QAAOC,SACnB,CAIE4yC,EAF0Bp1C,KAAKgD,IAAIT,EAAOC,GAAUmlF,QAE7Be,EAAAA,EAAAA,GACrBzgC,EAAS0/B,EAAqB3nF,KAAKgD,IAAIT,EAAOC,GAAS,cAGxCylD,CAErB,MAAO,GAAIvuC,EAAAA,IAA8B9L,IAAIo6E,GAAW,CACtD,IACE,MAAQY,WAAYrmF,EAAOsmF,YAAarmF,EAAM,SAAEzD,SAAmB+pF,EAAAA,EAAAA,IAAa7gC,GAChFigC,GAAoBG,EAAoB9lF,EAAOC,GAC1C0lF,IACHD,EAAQ,CAAE1lF,MAAOA,EAAQC,OAAQA,EAASzD,SAAUA,GAExD,CAAE,MAAO6P,GACPs5E,GAAmB,CACrB,CAEA9yC,QAAuB2zC,EAAAA,EAAAA,IAAqB9gC,EAC9C,MAAO,GAAIpuC,EAAAA,IAA8BjM,IAAIo6E,GAAW,CACtD,MAAM,SACJjpF,EAAQ,MAAE2G,EAAK,UAAEmB,EAAS,SAAEmiF,SCxE3Bz7E,eAAkCoY,GACvC,MAAM,aAAEsjE,EAAY,YAAEC,SAAsB,oCACtCC,QAAiBF,EAAatjE,IAC5ByjE,QAAQ,MAAE1jF,EAAK,OAAE2jF,EAAM,QAAEC,GAAWC,QAAQ,SAAExqF,IAAeoqF,EAE/DK,EAAQN,EAAYI,GACpBG,EAAYD,EAAQ,IAAI3zE,KAAK,CAAC2zE,EAAM7pF,MAAO,CAAE0T,KAAMm2E,EAAMD,cAAYlzF,EAG3E,MAAO,CACLqP,QACAmB,UAAWwiF,EACXtqF,WACAiqF,SANeS,EAAYv2E,IAAI60E,gBAAgB0B,QAAapzF,EAQhE,CD0DcqzF,CAAmBzhC,GAC7BhsD,EAAQ,CACN8C,SAAUA,GAAY,EACtB2G,QACAmB,aAEFuuC,EAAiB4zC,CACnB,CAEA,MAAO,CACL/gC,UACA6/B,WACAE,WACA3uF,OACA4uF,QACAhsF,QACAm5C,iBACA8yC,iBAAkBA,QAAoB7xF,EACtC4qF,SAAW,GAAEntE,KAAKC,SAAS/T,KAAK0wD,cAC7BktB,EAEP,CAEO,SAASh4C,EACdj0B,EAA8Bg4E,GAE9B,OAAOh4E,EAAYzZ,KAAK0xF,GAClBD,EACEC,EAAOpB,kBACF,IACFoB,EACH3hC,QAAS2hC,EAAOpB,mBAGboB,EAGF,IACFA,EACH1B,mBAAoB0B,EAAOztF,OAASytF,EAAO3tF,aAAU5F,EACrDwhC,yBAAqBxhC,IAG3B,CAEA,SAASgyF,EAAoB9lF,EAAeC,GAE1C,OADuBxC,KAAKgD,IAAIT,EAAOC,GAAUxC,KAAKC,IAAIsC,EAAOC,IACxColF,CAC3B,C,kDE9Her6E,eAAeiD,EAA8Bq5E,GAC1D,MAAMt5E,EAAgB,GAEtB,SAASu5E,EAAwBhnB,EAA+BjgE,GAC9D,OAAO,IAAIoO,SAASwE,IAClB,GAAIqtD,aAAiB/oD,KACnBxJ,EAAMlK,KAAKy8D,GACXrtD,EAAQqtD,QACH,GAAIA,EAAMjqD,OAAQ,CACvB,MAAMkxE,EAAWlnF,EAAKmnF,YACrBlnB,EAA8B3xD,MAAMA,IACnCZ,EAAMlK,KAAK8K,GACXsE,EAAQtE,EAAK,IACZ,KAGG44E,GACFx5E,EAAMlK,KAAK0jF,GAEbt0E,EAAQs0E,EAAS,GAErB,MAAWjnB,EAAMmnB,aACInnB,EAAmConB,eAC5CC,aAAaC,IACrB,MAAMC,EAAkB,GACxB,IAAK,IAAIvpF,EAAI,EAAGA,EAAIspF,EAAQjxF,OAAQ2H,IAClCupF,EAAgBhkF,KAAKyjF,EAAwBM,EAAQtpF,GAAI+B,IAE3D4S,EAAQxE,QAAQC,IAAIm5E,GAAiB,GAEzC,GAEJ,CAEA,MAAMA,EAAkB,GACxB,IAAK,IAAIvpF,EAAI,EAAGA,EAAI+oF,EAAkB1wF,OAAQ2H,IAAK,CACjD,MAAM+B,EAAOgnF,EAAkB/oF,GAC/B,GAAkB,SAAd+B,EAAKynF,KAAiB,CACxB,MAAMxnB,EAAQjgE,EAAK0nF,oBAAsB1nF,EAAKmnF,YAC1ClnB,GACFunB,EAAgBhkF,KAAKyjF,EAAwBhnB,EAAOjgE,GAExD,CACF,CAIA,aAFMoO,QAAQC,IAAIm5E,IAEXhxE,EAAAA,EAAAA,IAAc9I,EACvB,C,mCClDA,MAAMi6E,EAAQ,oBACRC,EAAW,mBACXC,EAAgB,oBAChBC,EAAoB,OAEnB,SAAS3uD,EAAiB3xB,GAC/B,OAAOA,EACJqE,QAAQ+7E,EAAU,KAClB/7E,QAAQ87E,EAAO,MACf97E,QAAQg8E,EAAe,IACvBh8E,QAAQi8E,EAAmB,GAChC,C,6FCEe,SAASruE,EAAyBplB,EAA0BkO,GACzE,MAAoB,YAAhBA,EAAOiO,KACFnc,EAAK,kBAGM,QAAhBkO,EAAOiO,MACFu3E,EAAAA,EAAAA,GAAiBxlF,EAAOuL,KAAMk6E,EAAAA,IAAwB9xF,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAAClQ,UAAU,qBAAqBmQ,KAAK,WAGlGP,EAAAA,EAAAA,GAAWrB,EAAOuL,KAC3B,C,mCCvBA,MAAMm6E,EAAsB,EAErB,SAASh1D,EAAuBF,EAAuB/F,GAC5D,MAAM,wBAAEk7D,GAA4Bn1D,EACpC,IAAIo1D,EAAiCD,EACjCE,EAAa,EACjB,KAAOD,GAAcA,EAAW10F,KAAOu5B,GAAWo7D,EAAaH,GAC7DE,EAAaA,EAAWE,cACxBD,IAGF,OAAO10F,QAAQy0F,GAAcA,EAAW10F,KAAOu5B,EACjD,C,gMCSA,MAAMs7D,EAAW,IACXC,EAAmB,IAAIv4E,OAAQ,IAAGipB,EAAAA,EAAa/oB,WAAY,KAC3Ds4E,EAAuB,IAAIx4E,OAAQ,GAAEC,EAAAA,IAAgBC,UAAW,KAEvD,SAASooB,EACtBG,EACA3W,EACA+M,EACAI,EACAN,EACArE,GAEA,MAAM,wBAAEm+D,EAAuB,yBAAEC,IAA6Bt0F,EAAAA,EAAAA,OAEvDwkC,EAAkBC,EAAoBC,IAAwB9jB,EAAAA,EAAAA,IAAQ,GAEvE2zE,GAA4BztD,EAAAA,EAAAA,KAAqB,KACrD,MAAM1zB,EAAOsa,IACb,IAAK2W,IAAcjxB,IAASynB,KAAqB25D,UAAW,OAG5D,IADiBphF,EAAKgE,MAAMwtB,EAAAA,GAAqBC,EAAAA,EAAehpB,EAAAA,KACjD,OAEf,MAAM44E,GAAsBC,EAAAA,EAAAA,IAAuBn6D,EAASrvB,SAE5D,OAAOupF,EAAoBr9E,MAAMwtB,EAAAA,GAAqBuvD,EAAmBC,KAAwB,EAAE,GAClG,CAAC1mE,EAASmN,EAAmBN,EAAU8J,GAAY6vD,GAEhDS,GAAe/lE,EAAAA,EAAAA,GACnB2lE,EAA2B,CAACA,EAA2B7mE,EAASmN,IAAoB,GAGhF97B,GAAWgwB,EAAAA,EAAAA,IAAgB,IAAMzvB,QAAQq1F,MAAiB,CAACA,IAC3DC,EAAkBt1F,QAAQ42B,GAAch0B,SAE9Cf,EAAAA,EAAAA,KAAU,KACR,IAAKkjC,IAActlC,EAAU,OAE7B,MAAM81F,EAAYF,IACdE,EACGD,GACHP,EAAwB,CACtB90D,MAAOqF,EAAAA,GAAqBiwD,EAAYA,EAAUz9E,MAAM,kBAAkB,KAI9Ek9E,GACF,GACC,CAACjwD,EAAWtlC,EAAU41F,EAAcC,EAAiBN,EAA0BD,IAElF,MAAMpwD,GAAoB78B,EAAAA,EAAAA,IAAiBm4B,IACzC,MAAMs1D,EAAYF,IAClB,IAAKtwD,IAAcwwD,EAAW,OAE9B,MAAM/iF,EAAUyoB,EAASrvB,QACnBupF,GAAsBC,EAAAA,EAAAA,IAAuB5iF,GAC7CgjF,EAAYlwD,EAAAA,GACdiwD,EAEAA,EAAUp9E,QAAQ,wBAAyB,QACzCs9E,EAAQ,IAAIn5E,OAAQ,IAAGk5E,UAAmB,IAE1CloC,EADU6nC,EAAoBr9E,MAAM29E,GAAQ,GAC5B7yF,OAAS2yF,EAAU3yF,OACnCk8B,EAAUq2D,EAAoBh9E,QAAQs9E,GAAOv1D,EAAAA,EAAAA,IAAqBD,GAAOy1D,OAAOpoC,IAChFqoC,EAAqBnjF,EAAQ4F,UAAUywB,UAAUssD,EAAoBvyF,QAE3Eu4B,EAAS,GAAE2D,IAAU62D,MAErB/1D,EAAAA,EAAAA,KAAoB,MAClBC,EAAAA,EAAAA,GAAqBrtB,GAAS,GAAM,EAAK,GACzC,IAKJ,OAFA3Q,EAAAA,EAAAA,IAAUujC,EAAsB,CAACA,EAAsBhX,IAEhD,CACLqW,yBAA0BzkC,QAAQP,GAAY61F,IAAoBpwD,GAClER,wBAAyBS,EACzBR,oBAEJ,C,iOCnEA,IAAIixD,EACAC,EACAC,EAEAC,EACAC,EACJ,MAAMC,EAAe,GACfC,EAAoB,EAEpBtB,EAAW,IAEXuB,GAA0Bh6E,EAAAA,EAAAA,IAiJhC,SAA6B9a,EAA6B+0F,EAA0Bl1D,GAClF,OAAK7/B,GAAS+0F,EAAexzF,OAItBpB,OAAOC,QAAO40F,EAAAA,EAAAA,IAAWh1F,EAAM+0F,IAAiB10F,MAAM,EAAGw/B,GAHvDJ,EAAAA,CAIX,IAtJMw1D,GAAqBn6E,EAAAA,EAAAA,IAwJ3B,SACE9a,EACAuwB,EACAC,GAEA,MAAM+nB,EAASp4C,OAAOC,OAAOJ,GAEvBk1F,GAAWz8B,EAAAA,EAAAA,IAA4BlgB,EAAQ,UAC/C48C,EAAsB5kE,GACxBgpD,EAAAA,EAAAA,IAAUhpD,GAAoB6kE,GACvBj1F,OAAOC,QAAO40F,EAAAA,EAAAA,IAAWE,EAAUE,MAE1C,CAAC,EACCC,EAAkB7kE,GACpB+oD,EAAAA,EAAAA,IAAU/oD,GAAgB4kE,GACnBj1F,OAAOC,QAAO40F,EAAAA,EAAAA,IAAWE,EAAUE,MAE1C,CAAC,EAECE,EAAY,IAAKH,KAAwBE,GACzCx/D,EAAY,GAAgB7b,OAAO7Z,OAAO4nB,KAAKotE,GAAsBh1F,OAAO4nB,KAAKstE,IAEjFE,EAASh9C,EAAO/6B,QAAO,CAAC9T,EAAQk1B,KACpCA,EAAM42D,MAAMxqF,SAASoE,IACd1F,EAAO0F,KACV1F,EAAO0F,GAAQ,IAGjB1F,EAAO0F,GAAMX,KAAKmwB,EAAM,IAGnBl1B,IACN,CAAC,GAEE8rF,EAAQr1F,OAAO4nB,KAAKwtE,GACpBE,EAAe5/D,EAASrY,QAAO,CAACpS,EAAKsqF,IAAYttF,KAAKgD,IAAIA,EAAKsqF,EAAQn0F,SAAS,GAEtF,MAAO,CACL+zF,YACAz/D,WACA0/D,SACAC,QACAC,eAEJ,IAnMME,GAAsB76E,EAAAA,EAAAA,IAqM5B,SAAyB86E,EAAkBr1F,EAAgBs/B,GACzD,MAAM,UACJy1D,EAAS,SAAEz/D,EAAQ,OAAE0/D,EAAM,MAAEC,EAAK,aAAEC,GAClCG,EAEJ,IAAIC,EAAmB,GAEvB,GAAIt1F,EAAOgB,OAASk0F,EAClB,OAAOh2D,EAAAA,EAGT,MAAMq2D,EAAkBjgE,EAASt1B,QAAQm1F,GAAYA,EAAQtvD,WAAW7lC,KAASkzD,OACjFoiC,EAAUA,EAAQ77E,OAAO7Z,OAAOC,QAAO40F,EAAAA,EAAAA,IAAWM,EAAYQ,IAAkBC,QAGhF,MAAMC,EAAeR,EAAMj1F,QAAQ6O,GAASA,EAAKg3B,WAAW7lC,KAK5D,OAJAs1F,EAAUA,EAAQ77E,OAAO7Z,OAAOC,QAAO40F,EAAAA,EAAAA,IAAWO,EAAQS,IAAeD,QAEzEF,GAAUI,EAAAA,EAAAA,IAAOJ,GAEZA,EAAQt0F,OAINs0F,EAAQx1F,MAAM,EAAGw/B,GAHfJ,EAAAA,CAIX,IA5NA,IACEi1D,EAAkB,wCAClBC,EAAoB,SACtB,CAAE,MAAO3nF,GAEP0nF,EAAkB,yCAClBC,EAAoB,aACtB,CAEe,SAASxxD,EACtBO,EACA3W,EACA+M,EACA7B,EAAUpjB,EAAAA,IACVkgF,EACAxkE,EACAC,GAEA,MAAOqT,EAAkBC,EAAoBC,IAAwB9jB,EAAAA,EAAAA,IAAQ,IAEtEjgB,EAAMk2F,IAAW7wF,EAAAA,EAAAA,OACjB29B,EAAgBmzD,IAAqB9wF,EAAAA,EAAAA,IAAkBo6B,EAAAA,IACvDwD,EAAsBmzD,IAA2B/wF,EAAAA,EAAAA,IAAuBo6B,EAAAA,IAG/Ej/B,EAAAA,EAAAA,KAAU,KAGR,SAAS4rF,IACP8J,EAAQzB,EAAUl8C,OACpB,CAJK7U,IAMD+wD,EACFrI,IAiGNz2E,iBAQE,OAPK4+E,IACHA,EAAmB,oCACnBC,SAAsBD,GAAkBz4E,QAExC24E,GAAY4B,EAAAA,EAAAA,IAAgB7B,IAGvBD,CACT,CAxGM+B,GAAkBvL,KAAKqB,GACzB,GACC,CAAC1oD,IAEJ,MAAM6yD,GAA2BpwD,EAAAA,EAAAA,KAAqB,KACpD,MAAM1zB,EAAOsa,IACb,OAAO2W,GAAajxB,EAAKiQ,SAAS,MAAO0hB,EAAAA,EAAAA,GAAiB3xB,GAAMgE,MAAMi+E,KAAmB,GAAGrtD,YAAS5oC,CAAS,GAC7G,CAACsuB,EAAS2W,GAAY6vD,GAEnBiD,GAAevoE,EAAAA,EAAAA,GACnBsoE,EAA0B,CAACA,EAA0BxpE,IAAU,GAG3D0pE,GAAiBhwF,EAAAA,EAAAA,IAAiB8xC,IAGtC,GAFA49C,EAAkB59C,GAEdA,IAAW9Y,EAAAA,EAEb,YADA22D,EAAwB32D,EAAAA,GAI1B,MAAMi3D,EAAen+C,EAAOj4C,KAAKs+B,GAAUA,EAAM+3D,SAC3CphE,GAAeqhE,EAAAA,EAAAA,KACnBC,EAAAA,EAAAA,MAA2B/2F,EAAAA,EAAAA,MAAa42F,GACxC,MAEFN,EAAwB7gE,EAAa,IAGjC2N,GAAcz8B,EAAAA,EAAAA,IAAgB,CAACm4B,EAA4Bk4D,GAAU,KACzE,MAAMrkF,EAAOsa,IACb,IAAKta,EAAM,OAEX,MAAMskF,EAAUtkF,EAAKukF,YAAY,IAAKF,EAAUrkF,EAAKukF,YAAY,KAAO,OAAIv4F,GAE5E,IAAiB,IAAbs4F,EAAgB,CAClB,MAAME,EAA6B,iBAAVr4D,GAAqB/vB,EAAAA,EAAAA,GAAW+vB,EAAO,CAAC,gBAAiBC,EAAAA,EAAAA,IAAqBD,GACvG9E,EAAS,GAAErnB,EAAK+0B,UAAU,EAAGuvD,KAAWE,KAExC,MAAMp5D,EAAe5F,IAAYpjB,EAAAA,IAC7BvD,SAAS2Z,cAA8Bmf,EAAAA,KACvC94B,SAASwsB,eAAe7F,IAE5BsG,EAAAA,EAAAA,KAAoB,MAClBC,EAAAA,EAAAA,GAAqBX,GAAc,GAAM,EAAK,GAElD,CAEA44D,EAAeh3D,EAAAA,EAAiB,IAsClC,OAnCAj/B,EAAAA,EAAAA,KAAU,KACR,MAAM02F,EAAYV,IAClB,IAAKU,IAAcl3F,EAEjB,YADAy2F,EAAeh3D,EAAAA,GAIjB,MAAM03D,EAAsBD,EAAU31F,OAAS,GAAK21F,EAAU3+B,SAAS,KAEjEh4D,EAAS22F,EAAU1vD,UAAU,EAAG2vD,EAAsB,EAAID,EAAU31F,OAAS,OAAI9C,GACvF,IAAIo3F,EAAmBp2D,EAAAA,EAEvB,GAAKl/B,GAEE,GAAuB,IAAlBA,EAAOgB,QAAgBozF,EAAkByC,KAAK72F,IAAYA,EAAOgB,QAAUszF,EAAmB,CACxG,MAAMe,EAAUX,EAAmBj1F,EAAMuwB,EAAmBC,GAC5DqlE,EAAUF,EAAoBC,EAASr1F,EAAOwa,cAAe65E,EAC/D,OAJEiB,EAAUf,EAAwB90F,EAAM+0F,EAAgBH,GAMrDiB,EAAQt0F,OAKT41F,EACFj0D,EAAY2yD,EAAQ,GAAGc,QAAQ,GAE/BF,EAAeZ,GAPfY,EAAeh3D,EAAAA,EAQjB,GACC,CACDlP,EAAmBvwB,EAAMw2F,EAAchmE,EAAe0S,EAAa6xD,EAAgB0B,KAGrFj2F,EAAAA,EAAAA,IAAUujC,EAAsB,CAACA,EAAsBhX,IAEhD,CACL+V,mBAAoBnkC,QAAQqkC,EAAezhC,QAAU0hC,EAAqB1hC,UAAYsiC,EACtFd,kBAAmBe,EACnBd,iBACAC,uBACAC,cAEJ,C,gMC5JA,MAAMqwD,EAAW,IAEjB,IAAI8D,EACJ,IACEA,EAAqB,iCACvB,CAAE,MAAOrqF,GAEPqqF,EAAqB,6BACvB,CAEe,SAASxyD,EACtBnB,EACA3W,EACA+M,EACAI,EACAN,EACA8B,EACAlG,EACAjN,GAEA,MAAO2tB,EAAeohD,IAAoBjyF,EAAAA,EAAAA,OACnCw+B,EAAkBC,EAAoBC,IAAwB9jB,EAAAA,EAAAA,IAAQ,GAEvEs3E,GAA8BpxD,EAAAA,EAAAA,KAAqB,KACvD,MAAM1zB,EAAOsa,IACb,IAAK2W,IAAcxJ,KAAqB25D,YAAcphF,EAAKiQ,SAAS,KAAM,OAE1E,MAAMoxE,GAAsBC,EAAAA,EAAAA,IAAuBn6D,EAASrvB,SAE5D,OAAO65B,EAAAA,EAAAA,GAAiB0vD,GAAqBr9E,MAAM4gF,KAAsB,GAAGhwD,MAAM,GACjF,CAAC3D,EAAW3W,EAASmN,EAAmBN,GAAW25D,GAEhDiE,GAAiBvpE,EAAAA,EAAAA,GACrBspE,EAA6B,CAACA,EAA6BxqE,EAASmN,IAAoB,GAGpFu9D,GAAoBxpE,EAAAA,EAAAA,IAAiB,IAClCyV,GAAa3W,IAAUqZ,WAAW,MACxC,CAACrZ,EAAS2W,KAEbljC,EAAAA,EAAAA,KAAU,KACR,MAAMk3F,EAAcF,IAEpB,IAAKE,IAAiBh8D,IAAoBlG,EAExC,YADA8hE,OAAiB74F,GAKnB,MAAMoB,GAAYC,EAAAA,EAAAA,MAAYC,MAAMC,KACpC,IAAKH,EAEH,YADAy3F,OAAiB74F,GAInB,MAAMk5F,EAAYj8D,GAAkBle,QAAO,CAACC,EAAem6E,KACrDA,EAAO58C,SAAWzyB,GACpB9K,EAAIhP,KAAKmpF,EAAO58C,QAGXv9B,IACN,IAEGld,EAASm3F,EAAYlwD,UAAU,GAC/BqwD,GAAcC,EAAAA,EAAAA,IAAmB,CACrC7uD,KAAKgtD,EAAAA,EAAAA,IAAO,IACLwB,KAAuBjiE,GAAoB,MAC5CmiE,GAAa,KAEnBl9E,MAAOla,EACPkb,KAAM,SAGR67E,EAAiBn3F,OAAOC,QAAO40F,EAAAA,EAAAA,IAAWn1F,EAAWg4F,IAAc,GAClE,CAACtvE,EAAemT,EAAkBlG,EAAiBgiE,EAAgBC,IAEtE,MAAM9yD,GAAgBl+B,EAAAA,EAAAA,IAAgB,CAACgzC,EAAes+C,GAAa,KACjE,IAAKt+C,EAAK+iB,aAAcxiB,EAAAA,EAAAA,IAAuBP,GAC7C,OAGF,MAAMwI,GAAeC,EAAAA,EAAAA,IAAgBzI,GAC/Bu+C,GAAsBh+C,EAAAA,EAAAA,IAAuBP,IAAS,GACtDw+C,EAAeh2C,EAChB,IAAGA,IACH,uEAEqB7pC,EAAAA,GAAsBC,yCAC1BohC,EAAK/6C,0EAGpBs5F,QAED7mF,EAAUyoB,EAASrvB,QAEnB2tF,EAA2BC,GADLpE,EAAAA,EAAAA,IAAuB5iF,IAE7C4lF,EAAUmB,EAAyBlB,YAAY,KAC/CoB,GAAsBn2C,EAAeA,EAAa1gD,OAAS,EAAIy2F,EAAoBz2F,SACpF22F,EAAyB32F,OAASw1F,GAEvC,IAAiB,IAAbA,EAAgB,CAClB,MAAMt5D,EAAW,GAAEy6D,EAAyBG,OAAO,EAAGtB,KAAWkB,UAC3D3D,EAAqB6D,EAAoBhnF,EAAQ4F,WAAWywB,UAAU0wD,EAAyB32F,QAC/F+2F,GAAgBC,EAAAA,EAAAA,IAAiBpnF,GACvC2oB,EAAS,GAAE2D,IAAU62D,MAErB/1D,EAAAA,EAAAA,KAAoB,KAClB,MAAMi6D,EAAmBF,EAAgBF,EAAqB,GAC9D55D,EAAAA,EAAAA,GAAqBrtB,EAAS4mF,GAC1BS,GAAoB,IACtBC,EAAAA,EAAAA,IAAiBtnF,EAASqnF,EAC5B,GAEJ,CAEAlB,OAAiB74F,EAAU,IAK7B,OAFA+B,EAAAA,EAAAA,IAAUujC,EAAsB,CAACA,EAAsBhX,IAEhD,CACL0X,qBAAsB9lC,QAAQu3C,GAAe30C,SAAWsiC,GACxDa,oBAAqBZ,EACrBa,gBACAC,qBAAsBsR,EAE1B,CAIA,SAASiiD,EAAoB1lF,GAC3B,OAAOA,EAAKqE,QAAQ,kCAAmC,OACzD,C,0HChIA,MAAM4hF,EAAiB,IACjBC,EAAkB,IAET,SAAS33F,GACtBF,IAAK83F,EAAW,OAChB33F,EAAM,WACN6jB,EAAU,mBACV+zE,EAAkB,cAClB33F,IAQA,MAAOH,EAAc+3F,IAAmBzzF,EAAAA,EAAAA,IAASpE,GAE3C83F,GAAWh0F,EAAAA,EAAAA,IAAgB,MAC3BjE,EAAM83F,GAAeG,EAErBC,GAAgBj0F,EAAAA,EAAAA,IAAO,GAEvBk0F,GAAQxyF,EAAAA,EAAAA,IAAgB,KAC5BqyF,GAAgB,GAChB53F,IAAgB,CACd8vC,aAASvyC,EACTmM,OAAQ,EACR3J,QAAQ,GACR,KAGJT,EAAAA,EAAAA,KAAU,KACJskB,GACFm0E,GACF,GACC,CAACn0E,KAEJtkB,EAAAA,EAAAA,KAAU,KACJS,GACF63F,GAAgB,EAClB,GACC,CAAC73F,KAEJi4F,EAAAA,EAAAA,IAAkBD,IAElB58D,EAAAA,EAAAA,IAAW,KACTy8D,GAAgB,GAChB53F,IAAgB,CACd0J,OAAQ,EACR3J,QAAQ,GACR,GACAA,OAA0BxC,EAAjBi6F,GAGb,MAAMS,GAAe15F,EAAAA,EAAAA,KAAY,KAC/B,MAAMuxC,EAAUlwC,EAAIyJ,SAChBua,GAAeksB,GAAYjwC,IAE1BE,GASL8qF,EAAAA,EAAAA,KAAoB,KAClB,MAAME,EAAgBj7C,EAAQglB,aAE9B,OADAgjC,EAAczuF,QAAU0hF,EACjB,KACL/qF,IAAgB,CACd8vC,UACApmC,OAAQqhF,EACRhrF,UACA,CACH,IAjBDC,IAAgB,CACd8vC,UACApmC,OAAQ,EACR3J,QAAQ,IAeV,GACD,CAACA,EAAQF,EAAc+jB,EAAYhkB,EAAKI,IAErCyjF,GAAe2G,EAAAA,EAAAA,IAAqB,KACxC,MAAMt6C,EAAUlwC,EAAIyJ,QACfymC,GAEaA,EAAQglB,eACRgjC,EAAczuF,SAIhC4uF,GAAc,GACb,CAACA,EAAcr4F,GAAM63F,GAAiB,GAMzC,OAJAtuF,EAAAA,EAAAA,IAAgB8uF,EAAc,CAACA,KAE/BluB,EAAAA,EAAAA,GAAkBnqE,EAAK6jF,GAAekU,IAAuB93F,GAEtD,CACLA,eACAD,MAEJ,CAEO,SAASs4F,EAAoBC,EAAmBC,GAAe,GACpE,IAAIC,EAAmB,EACvB,IAAK,IAAIrwF,EAAI,EAAGA,EAAImwF,EAAK93F,OAAQ2H,IAAK,CACpC,MAAMswF,EAAQH,EAAKnwF,GACb8nC,EAAUwoD,EAAMxoD,QACtB,IAAKA,EACH,SAGF,MAAMyoD,EAAW,GAAEF,MAEbG,EAAQA,MACZC,EAAAA,EAAAA,IAAe3oD,EAAS,CACtB0kC,UAAY,cAAa8jB,EAAMv4F,OAASw4F,EAAW,QAAOA,eAC1DG,OAAQC,QAAQ3wF,GAChB4wF,WAAYR,EAAe,OAAS,IACpC,EAGCtoD,EAAQr5B,QAAQoiF,cAAeP,EAAMv4F,QAAWq4F,EAUnDI,MARAC,EAAAA,EAAAA,IAAe3oD,EAAS,CACtB0kC,UAAY,mBAAkB+jB,aAC9BG,OAAQC,QAAQ3wF,GAChB4wF,WAAY,SAEd9oD,EAAQr5B,QAAQoiF,YAAc,QAC9Bx7D,EAAAA,EAAAA,IAAoBm7D,IAKtBH,GAAoBC,EAAM5uF,MAC5B,CACF,C,yMCjKA,MCmHA,GAAehN,EAAAA,EAAAA,KAtFf,UAAmB,MACjBy0B,EAAK,UAAEqtC,EAAS,YAAEvb,EAAW,YAAE61C,IAE/B,MAAM,gBAAEC,EAAe,qBAAEC,EAAoB,iBAAE3kF,IAAqBlW,EAAAA,EAAAA,MAE9DC,GAAOC,EAAAA,EAAAA,MACP,SAAE0F,IAAaC,EAAAA,EAAAA,MACfi1F,EAAY9nE,GAAS,cAAeA,EACpCxzB,EAAWwzB,GAAS,YAAaA,EACjC7tB,EAAQ3F,EAAWwzB,EAAMjuB,QAAQI,WAAQ/F,EACzC27F,EAAYv7F,GAAWw7F,EAAAA,EAAAA,IAAkBhoE,QAAS5zB,EAClD67F,GAAa50F,EAAAA,EAAAA,GAAS00F,GACtBhyC,EAAYvpD,EAAY2F,EAAQA,EAAM4jD,WAAWC,QAAUh2B,EAAMjuB,QAAQwqB,OAAOw5B,WAAWC,aAAW5pD,EACtG8qF,GAAW5oF,EAAAA,EAAAA,GAAiB25F,GAAY,IACxC,aAAEv5F,EAAY,qBAAEwL,IAAyBE,EAAAA,EAAAA,GAA4B9N,QAAQ4qF,IAC7EgR,GAAuB17C,EAAAA,EAAAA,GAC3BuJ,EACA+xC,IAAcz6B,EACdz6D,IAAa65C,EAAAA,IAGT1wC,GAAgB/M,EAAAA,EAAAA,GDlDD,WCoDnB,gBACE24F,GAAeG,IDrD+F,WCsDhHA,GDtDqI,WCuDrIz6B,GDvDwC,aC0D1Cl/D,EAAAA,EAAAA,KAAU,MACJ6xB,GAAWxzB,GAAYs7F,GACzBD,EAAqB,CAAE9tD,OAAQ/Z,EAAM+Z,OAAQouD,SAAU,CAACnoE,EAAM3zB,KAChE,GACC,CAAC2zB,EAAO8nE,EAAWt7F,IAEtB,MAAMg/C,GAAcp3C,EAAAA,EAAAA,IAAgB,KAC9B0zF,EACF5kF,EAAiB,CACf7S,QAASpD,EAAK,mBAKlB26F,EAAgB,CACd7tD,OAAQ/Z,EAAO+Z,OACfhd,QAASiD,EAAO3zB,GAChB+7F,cAAc,EACdC,eAAe,GACf,IAGJ,OACEv5F,EAAAA,GAAAC,cAAA,OACEnC,UAAWmP,EACX9M,QAAS04F,EAAcn8C,OAAcp/C,IAEnC07F,GAAaz6B,GACbv+D,EAAAA,GAAAC,cAAA,UAAQN,IAAKy5F,EAAsBt7F,UAAU,yBAE9C8B,GACCI,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACEpP,EAAAA,GAAAC,cAAA,OACEk+C,IAAKiqC,EACLpxE,IAAI,GACJlZ,WAAWoC,EAAAA,EAAAA,GD7FiE,WC6FpCq+D,GD7FiB,WC6FgBnzD,GACzEoE,WAAW,IAEZ9R,GAAYsC,EAAAA,GAAAC,cAACu5F,EAAAA,EAAgB,CAACtoE,MAAOA,EAAOpzB,UAAWsN,KAG3D4tF,GACCh5F,EAAAA,GAAAC,cAAA,YACED,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,gBAAgBnQ,UDrG6H,aCsGvJK,EAAK,yBAGTX,QAAQ6F,GAAO2C,WACdhG,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,2BACZ+P,EAAAA,EAAAA,IAAoBxK,EAAO2C,WAG/Bg9C,GAAehjD,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,cAGtC,G,kOChHe,SAAS27F,EAAqBj2F,GAC3C,IAAKA,GAAwC,IAA/BA,EAAMk2F,cAAct5F,OAChC,MAAO,CACLqtB,WAAOnwB,EACP+F,WAAO/F,GAIX,MAAMq8F,EAAgBn2F,EAAMk2F,cAAc,GACpCn7B,EAAY,cAAeo7B,EAIjC,MAAO,CAAElsE,MAHK8wC,EAAco7B,EAAc3zF,cAA2B1I,EAAhBq8F,EAA6BA,EAAclsE,MAGhFpqB,MAFFk7D,EAAao7B,EAAc3zF,SAAW2zF,OAAgBr8F,EAAaq8F,EAAct2F,MAGjG,C,0BCHO,MAAMu2F,EAAgB,CAC3BrmD,KAAM,EACNsmD,IAAK,EACLpvC,MAAO,EACPqvC,OAAQ,EACRpvC,KAAM,GA8DR,SAASqvC,EAAW7B,EAAgB8B,GAClC,OAAO9B,EAAK77E,QAAO,CAAC49E,EAAanwF,IAASmwF,EAAcnwF,GAAMkwF,EAChE,CAQA,SAASE,EAAuBC,GAC9B,MAAM9vC,EAAwB,CAAE7gD,MAAO,EAAGC,OAAQ,GAalD,OAZA0wF,EAAOtwF,SAAQ,EACbuwF,aACAC,YAEIA,EAAQT,EAAcnvC,QACxBJ,EAAO7gD,MAAQ4wF,EAAW5wF,MAAQ4wF,EAAWlwF,GAE3CmwF,EAAQT,EAAcE,SACxBzvC,EAAO5gD,OAAS2wF,EAAW3wF,OAAS2wF,EAAWjwF,EACjD,IAGKkgD,CACT,CAEO,SAASiwC,EACdh0F,EACA1E,EACA24F,EACAz2F,GAEA,MACM02F,EAjER,SAAmBC,EAAwBC,EAA2B52F,GACpE,MAAM27D,EAAag7B,EAAS,GAAGh7B,WAS/B,OARkBi7B,EACdD,EAAS,GAAGx3F,QAAQ03F,UAAWjB,cAAcv6F,KAAKqE,GAClD,cAAeA,EAAQA,EAASA,EAAMiqB,OAASjqB,EAAMH,QAErDo3F,EAASt7F,KAAKoC,IACdq5F,EAAAA,EAAAA,IAAkBr5F,GAASksB,QAASmtE,EAAAA,EAAAA,IAAkBr5F,GAAS8B,SAEjEjE,OAAO5B,SACO2B,KACbqE,IACC,MAAM42F,GAAaS,EAAAA,EAAAA,IAAyB,CAC1Cr3F,QACA8C,MAAOm5D,EACP37D,aAGF,OAAOs2F,EAAW5wF,MAAQ4wF,EAAW3wF,MAAM,GAGjD,CA4CiBqxF,CAAUP,EAAME,SAAUF,EAAMQ,YAAaj3F,GACtDk3F,EA3CR,SAAwBR,GACtB,OAAOA,EAAOr7F,KAAK87F,GAAWA,EAAQ,IAAM,IAAOA,EAAQ,GAAM,IAAM,MAAOr6E,KAAK,GACrF,CAyCsBs6E,CAAeV,GAC7BW,EAxCR,SAAyBX,GACvB,OAAOA,EAAOn+E,QAAO,CAAC9T,EAAQ0yF,IAAUA,EAAQ1yF,GAAQ,GAAKiyF,EAAOp6F,MACtE,CAsCuBg7F,CAAgBZ,GAC/Ba,EAAab,EAAOp6F,OACpBk7F,EAAYd,EAAO9zE,MAAMu0E,GAAUA,EAAQ,IAC3CM,GAAWC,EAAAA,EAAAA,IAAkBl1F,GAAO,EAAO1E,EAAWkC,GAG5D,IAAIq2F,EAEJ,MAAMsB,EAAS,CACbjB,SACAQ,cACAG,eACAI,WACAG,SAAU,IACVrrB,UAVgBkrB,EAWhBI,QAlBc,GA+BhB,OATExB,EADEkB,GAAc,GAAKC,EAgBzB,UACEd,OAAQoB,EAAc,aACtBT,EAAY,SACZI,EAAQ,SACRG,EAAQ,QACRC,EAAO,UACPtrB,EAAa,EAAIkrB,EAAY,IAE7B,MAAMf,EA1ER,SAAoBA,EAAkBW,GACpC,OAAOX,EAAOr7F,KAAK87F,GACTE,EAAe,KAAMU,EAAAA,EAAAA,IAAMZ,EAAO,EAAG,OAAQY,EAAAA,EAAAA,IAAMZ,EAAO,MAAQ,IAE9E,CAsEiBa,CAAWF,EAAgBT,GACpCrwC,EAAQ8wC,EAAex7F,OACvBmI,EAAS,IAAIvB,MAAM8jD,GACnBixC,EAAuB,GASvBC,EAAeC,IACnB,MAAMC,EAAoB,GAC1B,IAAI72D,EAAS,EACb42D,EAAWpyF,SAASsyF,IAClBD,EAAQ5uF,KAXQ8uF,EAAC/2D,EAAgBg3D,KACnC,MACMC,EAAMvC,EADUS,EAAOt7F,MAAMmmC,EAAQA,EAASg3D,GACd,GAEtC,OAAQd,GAAYc,EAAe,GAAKV,GAAWW,CAAG,EAOvCF,CAAY/2D,EAAQ82D,IACjC92D,GAAU82D,CAAY,IAGxBJ,EAASzuF,KAAK,CACZ2uF,aACAC,WACA,EAGJ,IAAK,IAAIK,EAAQ,EAAGA,IAAUzxC,IAASyxC,EAAO,CAC5C,MAAMC,EAAS1xC,EAAQyxC,EACnBA,GAAS,GAAKC,GAAU,GAC1BR,EAAY,CAACO,EAAOC,GAExB,CAEA,IAAK,IAAID,EAAQ,EAAGA,IAAUzxC,EAAQ,IAAKyxC,EACzC,IAAK,IAAIC,EAAS,EAAGA,IAAW1xC,EAAQyxC,IAASC,EAAQ,CACvD,MAAMC,EAAQ3xC,EAAQyxC,EAAQC,EAC1BD,GAAS,GAAKC,IAAWrB,EAAe,IAAO,EAAI,IAAMsB,GAAS,GACpET,EAAY,CAACO,EAAOC,EAAQC,GAEhC,CAGF,IAAK,IAAIF,EAAQ,EAAGA,IAAUzxC,EAAQ,IAAKyxC,EACzC,IAAK,IAAIC,EAAS,EAAGA,IAAW1xC,EAAQyxC,IAASC,EAC/C,IAAK,IAAIC,EAAQ,EAAGA,IAAU3xC,EAAQyxC,EAAQC,IAAUC,EAAO,CAC7D,MAAMC,EAAS5xC,EAAQyxC,EAAQC,EAASC,EACpCF,GAAS,GAAKC,GAAU,GAAKC,GAAS,GAAKC,GAAU,GACvDV,EAAY,CAACO,EAAOC,EAAQC,EAAOC,GAEvC,CAIJ,IAAIC,EACAC,EAAc,EAClB,IAAK,IAAI70F,EAAI,EAAGA,EAAIg0F,EAAS37F,OAAQ2H,IAAK,CACxC,MAAM,QACJm0F,EAAO,WACPD,GACEF,EAASh0F,GACP80F,EAAYZ,EAAW77F,OACvB08F,EAAc/C,EAAWmC,EAAS,GAAKP,GAAWkB,EAAY,GAE9DE,EADgB91F,KAAKC,OAAOg1F,GACLR,EAAW,IAAM,EACxCsB,EAAO,MACX,IAAK,IAAIC,EAAO,EAAGA,IAASJ,IAAaI,EACvC,GAAIhB,EAAWgB,EAAO,GAAKhB,EAAWgB,GACpC,OAAO,IAIX,OAAO,CACR,EARY,GASPrrC,EAAO3qD,KAAK0vE,IAAImmB,EAAczsB,GAAa0sB,EAAOC,IAEnDL,GAAkB/qC,EAAOgrC,KAC5BD,EAAiBZ,EAASh0F,GAC1B60F,EAAchrC,EAElB,CAEA,MAAMsrC,EAAgBP,EAAgBV,WAChCkB,EAAiBR,EAAgBT,QACjCkB,EAAWF,EAAc98F,OAC/B,IAAIq4D,EAAQ,EACRtuD,EAAI,EACR,IAAK,IAAImZ,EAAM,EAAGA,IAAQ85E,IAAY95E,EAAK,CACzC,MAAM+5E,EAAWH,EAAc55E,GACzBg6E,EAAaH,EAAe75E,GAC5B7Z,EAASxC,KAAKxG,MAAM68F,GAC1B,IAAIpzF,EAAI,EAER,IAAK,IAAIqzF,EAAM,EAAGA,IAAQF,IAAYE,EAAK,CACzC,MAAMlD,EAAQT,EAAcrmD,MACf,IAARjwB,EAAYs2E,EAAcC,IAAMD,EAAcrmD,OAC9CjwB,IAAQ85E,EAAW,EAAIxD,EAAcE,OAASF,EAAcrmD,OACpD,IAARgqD,EAAY3D,EAAclvC,KAAOkvC,EAAcrmD,OAC/CgqD,IAAQF,EAAW,EAAIzD,EAAcnvC,MAAQmvC,EAAcrmD,MAC1D0nD,EAAQT,EAAO/hC,GACfjvD,EAAQ+zF,IAAQF,EAAW,EAAI9B,EAAWrxF,EAAIjD,KAAKxG,MAAMw6F,EAAQqC,GACvE/0F,EAAOkwD,GAAS,CACd2hC,WAAY,CACVlwF,IACAC,IACAX,QACAC,UAEF4wF,SAEFnwF,GAAKV,EAAQmyF,IACXljC,CACJ,CACAtuD,GAAKV,EAASkyF,CAChB,CAEA,OAAOpzF,CACT,CA3Iai1F,CAA0B/B,GACX,IAAfJ,EA4Ib,SAAmBI,GACjB,MAAM,OACJjB,EAAM,YACNQ,EAAW,aACXG,GACEM,EACJ,MAAuB,OAAhBT,GAAwBG,EAAe,KAAOX,EAAO,GAAKA,EAAO,GAAK,GAO/E,SAA4BiB,GAC1B,MAAM,OACJjB,EAAM,SACNe,EAAQ,QACRI,EAAO,UACPtrB,GACEorB,EACEhyF,EAASxC,KAAKxG,MAAMwG,KAAKC,IAAIq0F,EAAWf,EAAO,GAAIvzF,KAAKC,IAAIq0F,EAAWf,EAAO,IAAKnqB,EAAYsrB,GAAW,KAEhH,MAAO,CAAC,CACNvB,WAAY,CACVlwF,EAAG,EACHC,EAAG,EACHX,MAAO+xF,EACP9xF,UAEF4wF,MAAOT,EAAclvC,KAAOkvC,EAAcC,IAAMD,EAAcnvC,OAC7D,CACD2vC,WAAY,CACVlwF,EAAG,EACHC,EAAGV,EAASkyF,EACZnyF,MAAO+xF,EACP9xF,UAEF4wF,MAAOT,EAAclvC,KAAOkvC,EAAcE,OAASF,EAAcnvC,OAErE,CAhCMgzC,CAAmBhC,GACH,OAAhBT,GAAwC,OAAhBA,EAiC9B,SAAiCS,GAC/B,MAAM,OACJjB,EAAM,SACNe,EAAQ,QACRI,EAAO,UACPtrB,GACEorB,EACEjyF,GAAS+xF,EAAWI,GAAW,EAC/BlyF,EAASxC,KAAKxG,MAAMwG,KAAKC,IAAIsC,EAAQgxF,EAAO,GAAIvzF,KAAKC,IAAIsC,EAAQgxF,EAAO,GAAInqB,KAClF,MAAO,CAAC,CACN+pB,WAAY,CACVlwF,EAAG,EACHC,EAAG,EACHX,QACAC,UAEF4wF,MAAOT,EAAcC,IAAMD,EAAclvC,KAAOkvC,EAAcE,QAC7D,CACDM,WAAY,CACVlwF,EAAGV,EAAQmyF,EACXxxF,EAAG,EACHX,QACAC,UAEF4wF,MAAOT,EAAcC,IAAMD,EAAcnvC,MAAQmvC,EAAcE,QAEnE,CA1DQ4D,CAAwBjC,GA4DhC,SAA4BA,GAC1B,MAAM,OACJjB,EAAM,SACNkB,EAAQ,SACRH,EAAQ,QACRI,EAAO,UACPtrB,GACEorB,EACEkC,EAAe12F,KAAKxG,MAAM,IAAMi7F,GAChCkC,EAAc32F,KAAKC,IACvBD,KAAKxG,MACHwG,KAAKgD,IACH,IAAOsxF,EAAWI,IACjBJ,EAAWI,GAAWnB,EAAO,IAAM,EAAIA,EAAO,GAAK,EAAIA,EAAO,MAGnEe,EAAWI,EAAUgC,GAEjBE,EAAatC,EAAWqC,EAAcjC,EACtClyF,EAASxC,KAAKC,IAAImpE,EAAWppE,KAAKxG,MAAMwG,KAAKC,IAAI22F,EAAarD,EAAO,GAAIoD,EAAcpD,EAAO,MAEpG,MAAO,CAAC,CACNJ,WAAY,CACVlwF,EAAG,EACHC,EAAG,EACHX,MAAOq0F,EACPp0F,UAEF4wF,MAAOT,EAAcC,IAAMD,EAAclvC,KAAOkvC,EAAcE,QAC7D,CACDM,WAAY,CACVlwF,EAAG2zF,EAAalC,EAChBxxF,EAAG,EACHX,MAAOo0F,EACPn0F,UAEF4wF,MAAOT,EAAcC,IAAMD,EAAcnvC,MAAQmvC,EAAcE,QAEnE,CAjGQgE,CAAmBrC,EAC3B,CAtJasC,CAAUtC,GACK,IAAfJ,EAuPb,SAAqBI,GACnB,MAAM,YAAET,GAAgBS,EAExB,MAA0B,MAAnBT,EAAY,GAKrB,SAAiCS,GAC/B,MAAM,UACJprB,EAAS,QACTsrB,EAAO,OACPnB,EAAM,SACNe,EAAQ,SACRG,GACED,EACEuC,EAAc3tB,EACd4tB,EAAch3F,KAAKxG,MACvBwG,KAAKC,KACFmpE,EAAYsrB,GAAW,EACvBnB,EAAO,IAAMe,EAAWI,IAAanB,EAAO,GAAKA,EAAO,MAGvD0D,EAAeF,EAAcC,EAActC,EAC3CwC,EAAal3F,KAAKgD,IACtByxF,EACAz0F,KAAKxG,MACHwG,KAAKC,KACFq0F,EAAWI,GAAW,EACvB10F,KAAKC,IACH+2F,EAAczD,EAAO,GACrB0D,EAAe1D,EAAO,OAKxB4D,EAAYn3F,KAAKC,IAAID,KAAKxG,MAAMu9F,EAAcxD,EAAO,IAAKe,EAAWI,EAAUwC,GAErF,MAAO,CAAC,CACN/D,WAAY,CACVlwF,EAAG,EACHC,EAAG,EACHX,MAAO40F,EACP30F,OAAQu0F,GAEV3D,MAAOT,EAAcC,IAAMD,EAAclvC,KAAOkvC,EAAcE,QAC7D,CACDM,WAAY,CACVlwF,EAAGk0F,EAAYzC,EACfxxF,EAAG,EACHX,MAAO20F,EACP10F,OAAQy0F,GAEV7D,MAAOT,EAAcC,IAAMD,EAAcnvC,OACxC,CACD2vC,WAAY,CACVlwF,EAAGk0F,EAAYzC,EACfxxF,EAAG+zF,EAAevC,EAClBnyF,MAAO20F,EACP10F,OAAQw0F,GAEV5D,MAAOT,EAAcE,OAASF,EAAcnvC,OAEhD,CA3DM4zC,CAAwB5C,GA6D9B,SAAgCA,GAC9B,MAAM,SACJF,EAAQ,OACRf,EAAM,UACNnqB,EAAS,QACTsrB,GACEF,EACEoC,EAAatC,EACbyC,EAAc/2F,KAAKxG,MAAMwG,KAAKC,IAAI22F,EAAarD,EAAO,GAAI,KAAQnqB,EAAYsrB,KAC9EiC,GAAerC,EAAWI,GAAW,EACrCuC,EAAej3F,KAAKC,IACxBmpE,EAAY2tB,EAAcrC,EAC1B10F,KAAKxG,MAAMwG,KAAKC,IACd02F,EAAcpD,EAAO,GACrBoD,EAAcpD,EAAO,MAGnB8D,EAAaT,EAAaD,EAAcjC,EAE9C,MAAO,CAAC,CACNvB,WAAY,CACVlwF,EAAG,EACHC,EAAG,EACHX,MAAOq0F,EACPp0F,OAAQu0F,GAEV3D,MAAOT,EAAclvC,KAAOkvC,EAAcC,IAAMD,EAAcnvC,OAC7D,CACD2vC,WAAY,CACVlwF,EAAG,EACHC,EAAG6zF,EAAcrC,EACjBnyF,MAAOo0F,EACPn0F,OAAQy0F,GAEV7D,MAAOT,EAAcE,OAASF,EAAclvC,MAC3C,CACD0vC,WAAY,CACVlwF,EAAG0zF,EAAcjC,EACjBxxF,EAAG6zF,EAAcrC,EACjBnyF,MAAO80F,EACP70F,OAAQy0F,GAEV7D,MAAOT,EAAcE,OAASF,EAAcnvC,OAEhD,CAxGM8zC,CAAuB9C,EAC7B,CA5Pa+C,CAAY/C,GAqWzB,SAAoBA,GAClB,MAAM,YAAET,GAAgBS,EAExB,MAA0B,MAAnBT,EAAY,GAKrB,UAA+B,SAC7BO,EAAQ,OACRf,EAAM,QACNmB,EAAO,UACPtrB,EAAS,SACTqrB,IAEA,MAAM+C,EAAIlD,EACJmD,EAAKz3F,KAAKxG,MAAMwG,KAAKC,IAAIu3F,EAAIjE,EAAO,GAAI,KAAQnqB,EAAYsrB,KAC5DgD,EAAI13F,KAAKxG,OAAO86F,EAAW,EAAII,IAAYnB,EAAO,GAAKA,EAAO,GAAKA,EAAO,KAC1EoE,EAAK33F,KAAKgD,IAAIyxF,EAAUz0F,KAAKxG,MAAMwG,KAAKC,IAAI,IAAOq0F,EAAW,EAAII,GAAUgD,EAAInE,EAAO,MACvFqE,EAAK53F,KAAKxG,MAAMwG,KAAKgD,IAAIhD,KAAKgD,IAAIyxF,EAAU,KAAQH,EAAW,EAAII,IAAWgD,EAAInE,EAAO,KACzFsE,EAAKL,EAAIG,EAAKC,EAAK,EAAIlD,EACvBoD,EAAK93F,KAAKC,IAAImpE,EAAYquB,EAAK/C,EAASgD,GAE9C,MAAO,CAAC,CACNvE,WAAY,CACVlwF,EAAG,EACHC,EAAG,EACHX,MAAOi1F,EACPh1F,OAAQi1F,GAEVrE,MAAOT,EAAclvC,KAAOkvC,EAAcC,IAAMD,EAAcnvC,OAC7D,CACD2vC,WAAY,CACVlwF,EAAG,EACHC,EAAGu0F,EAAK/C,EACRnyF,MAAOo1F,EACPn1F,OAAQs1F,GAEV1E,MAAOT,EAAcE,OAASF,EAAclvC,MAC3C,CACD0vC,WAAY,CACVlwF,EAAG00F,EAAKjD,EACRxxF,EAAGu0F,EAAK/C,EACRnyF,MAAOs1F,EACPr1F,OAAQs1F,GAEV1E,MAAOT,EAAcE,QACpB,CACDM,WAAY,CACVlwF,EAAG00F,EAAKjD,EAAUmD,EAAKnD,EACvBxxF,EAAGu0F,EAAK/C,EACRnyF,MAAOq1F,EACPp1F,OAAQs1F,GAEV1E,MAAOT,EAAcnvC,MAAQmvC,EAAcE,QAE/C,CApDMkF,CAAsBvD,GAsD5B,UAAgC,UAC9BprB,EAAS,OACTmqB,EAAM,SACNe,EAAQ,QACRI,EAAO,SACPD,IAEA,MAAMiD,EAAItuB,EACJuuB,EAAK33F,KAAKxG,MAAMwG,KAAKC,IAAIy3F,EAAInE,EAAO,GAAI,IAAOe,EAAWI,KAC1D8C,EAAIx3F,KAAKxG,OAAO4vE,EAAY,EAAIsrB,IAAY,EAAInB,EAAO,GAAK,EAAIA,EAAO,GAAK,EAAIA,EAAO,KACvFkE,EAAKz3F,KAAKxG,MAAMg+F,EAAIjE,EAAO,IAC3BuE,EAAK93F,KAAKxG,MAAMg+F,EAAIjE,EAAO,IAC3ByE,EAAKN,EAAID,EAAKK,EAAK,EAAIpD,EACvBmD,EAAK73F,KAAKgD,IAAIyxF,EAAUz0F,KAAKC,IAAIq0F,EAAWqD,EAAKjD,EAAS8C,IAEhE,MAAO,CAAC,CACNrE,WAAY,CACVlwF,EAAG,EACHC,EAAG,EACHX,MAAOo1F,EACPn1F,OAAQk1F,GAEVtE,MAAOT,EAAcC,IAAMD,EAAclvC,KAAOkvC,EAAcE,QAC7D,CACDM,WAAY,CACVlwF,EAAG00F,EAAKjD,EACRxxF,EAAG,EACHX,MAAOs1F,EACPr1F,OAAQi1F,GAEVrE,MAAOT,EAAcC,IAAMD,EAAcnvC,OACxC,CACD2vC,WAAY,CACVlwF,EAAG00F,EAAKjD,EACRxxF,EAAGu0F,EAAK/C,EACRnyF,MAAOs1F,EACPr1F,OAAQs1F,GAEV1E,MAAOT,EAAcnvC,OACpB,CACD2vC,WAAY,CACVlwF,EAAG00F,EAAKjD,EACRxxF,EAAGu0F,EAAKK,EAAK,EAAIpD,EACjBnyF,MAAOs1F,EACPr1F,OAAQw1F,GAEV5E,MAAOT,EAAcE,OAASF,EAAcnvC,OAEhD,CArGMy0C,CAAuBzD,EAC7B,CAzWa0D,CAAW1D,GAGf,CACLtB,SACAiF,eAAgBlF,EAAuBC,GAE3C,C,gJCvIA,IAAIkF,EACJ,MAAMC,EAAyB,IAAIC,EAAAA,EAE/BC,EAAAA,IACFviF,YAGF,WACOoiF,IACHA,GAASI,EAAAA,EAAAA,GACP,IAAIC,OAAO,IAAIvlF,IAAI,qBAErBmlF,EAAuB5iF,UAE3B,GAnB0B,K,0BCE1B,MAaMijF,EAAa,IAAI/X,IAavB,MAAMgY,GAA4BC,EAAAA,EAAAA,KAuBlC,SAA0BjjG,GACxB,MAAM,2BAAEkjG,IAA+B5hG,EAAAA,EAAAA,MACjC6hG,EAAYJ,EAAWrmE,IAAI18B,GACjC,IAAKmjG,EACH,OAGF,MAAMC,EAAkBD,EAAUz/F,KAClC,GAAI0/F,EAzDuB,EA0DzB,OAGF,IAAIC,EAAoB,EACpBC,EAAkB,EACtB,MAAMC,EAAsB,IAAIvY,IAEhC,IAAK,MAAMwI,KAAY2P,EAAU9gG,SAAU,CACrCmxF,EAASgQ,gBACXH,IAGE7P,EAASxS,kBACXsiB,IAGF,MAAMpxE,EAAWshE,EAASxS,iBAC1B,GAAI9uD,EAAU,CACZ,MAAMuxE,EAAcF,EAAoB7mE,IAAIxK,IAAa,EACzDqxE,EAAoBrW,IAAIh7D,EAAUuxE,EAAc,EAClD,CACF,CAKA,GAH0BJ,EAAoBD,EAhFjB,IAiFLE,EAAkBF,EAhFf,GAmFzB,OAMFF,EAA2B,CACzBljG,SACAghF,iBAL2B52E,MAAMwO,KAAK2qF,EAAoB9O,WACzD/+B,MAAK,EAAE,CAAEC,IAAK,CAAEC,KAAOA,EAAID,IAAG,GAAG,IAMtC,GA3FuB,K,0FCIvB,MAGM+tC,GAA4B,EAAIjiD,EAAAA,EAChCkiD,GAA6Bp2D,OAAOkU,EAAAA,GACpCmiD,GAAgC,+BAEvB,SAASC,GACtBC,EACA/nC,EACAlsD,EACAk0F,EACAC,EACA59C,EACAx4B,EACAsgB,EACAluC,EACAikG,EACAC,EACAC,EACAC,GAEA,MAAM,qBAAEx5E,EAAoB,oBAAEy5E,IAAwB/iG,EAAAA,EAAAA,OAE/CgjG,EAAwBC,EAA0BC,IAA8BtiF,EAAAA,EAAAA,MAChFuiF,EAAUC,EAAYC,IAAgBziF,EAAAA,EAAAA,KACvC0iF,GAAsB59F,EAAAA,EAAAA,MAOtB69F,GAAkBtX,EAAAA,EAAAA,IAAsBt+E,IAC5C,MAAM61F,EAAyBZ,EAAiB13F,QAChD,IAAKs4F,EAAwB,OAE7B,MAAM,QAAE11F,EAAO,QAAEiiE,GAAYpiE,GAE3B3B,EAAGy3F,EAAgBn4F,MAAOo4F,EAAoBz3F,EAAG03F,EAAgBp4F,OAAQq4F,GACvEJ,EAAuB31F,wBACrB7B,EAAIy3F,EAAiBC,EAAqB,EAC1Cz3F,EAAI03F,EAAiBC,EAAsB,EAE3CC,EAAa96F,KAAK0vE,IAAIzsE,EAAI8B,GAAWs0F,GACrC0B,EAAa/6F,KAAK0vE,IAAIxsE,EAAI8jE,GAAWsyB,GACvCwB,GAAcC,EAChBb,IAEAC,GACF,GACC,CAACN,GAAmBvkF,EAAAA,IA2HvB,OA7CAld,EAAAA,EAAAA,KAAU,KACR,IAAK+iB,EAAAA,IAAgBu+E,IAAmBC,GAAYC,IAAuBG,MACzE,OAGF,IAAIlmF,EACJ,OAAOjO,EAAAA,EAAAA,IAAc8rD,EAAavvD,QAAU,CAC1CkhD,wBAAyB,eACzB23C,wBAAyB,gBACzB13C,QAAUA,CAAC1+C,EAAGkrC,IACRA,IAAcyT,EAAAA,GAAeE,OAC1B5vC,IACHA,EAAYC,KAAKC,OAGnBsmF,KAEO,GAKXv0F,UAAWA,KACJ+N,GAAc8lF,IAInBp5E,EAAqB,CAAE3B,aAAcpZ,IAErCwQ,WAAWskF,EAAct6F,KAAKgD,IAAI,EA7JT,KA6JwC8Q,KAAKC,MAAQF,KAC9EA,OAAYxd,EAAS,GAEvB,GACD,CACDq7D,EAAcgoC,EAAgBl0F,EAAW60F,EAAYC,EAAcX,EAAUC,EAC7EG,IAUK,CACLnyC,gBAAkB8xC,OAAmCrjG,EAnJvD,SAAyBuO,IACvBq2F,EAAAA,EAAAA,GAAwBr2F,GACxBi/B,EAAwBj/B,EAC1B,EAiJE6wC,YA3FF,SAAqB7wC,GACnB,GAAI80F,EACFD,EAAc70F,QAIhB,GAAKuW,EAAAA,GAEL,OAAIo/E,EAAoBp4F,SACtB+4F,cAAcX,EAAoBp4F,SAClCo4F,EAAoBp4F,aAAU9L,OAhBhC2jG,EAAoB,CAClBrkG,SACA6P,oBAmBF+0F,EAAoBp4F,QAAU6T,YAAW,KACvCukF,EAAoBp4F,aAAU9L,EAxClC,SAAmBuO,GACjB,GAAIq7E,EAAAA,GAAY,CACd,MAAMvyE,EAAS9I,EAAE8I,OACjB,IAAKA,EAAOvE,UAAUgyF,SAAS,kBAAoBztF,EAAOvE,UAAUgyF,SAAS,WAC3E,OAGE/oE,EAAAA,EAAWgpE,uBACbplF,YAAW,KACTuN,EAAc3e,EAAE,GAtEa,KAyE/B2e,EAAc3e,EAElB,CACF,CA0BIy2F,CAAUz2F,EAAE,GApGsB,KAsGtC,EAyEE+c,kBAAoB+3E,EAAsC39C,EAAcU,EAAAA,OAAYpmD,EAvEtF,SAA2BuO,GACzB,GAAIq7E,EAAAA,GAAY,CACd,GAAKr7E,EAAE8I,OAAuBrN,QAAQ,YAAcu5F,EAClD,OAGFh1F,EAAEiJ,iBACF4rF,GACF,MACEl2E,EAAc3e,EAElB,EA6DE02F,kBAAoB5B,OAA8CrjG,EA3DpE,YACM8kB,EAAAA,IAAiBw+E,GAErBp5E,EAAqB,CAAE3B,aAAcpZ,EAAWgZ,mBAAenoB,EAAWgpB,eAAWhpB,GACvF,EAwDEklG,yBAA2BpgF,EAAAA,QAAiC9kB,EAtD9D,SAAyBuO,GACvBA,EAAEM,iBACJ,EAqDEs1F,kBACAgB,wBAhIF,SAAiC52F,GAC/BA,EAAEM,kBACF80F,EAAoB,CAClBrkG,SACA6P,aAEJ,EA2HEuS,iBAfF,SAA0BnT,IAGxB0Q,EAAAA,EAAAA,IAAe6kF,GACXL,GAyBR,SAAuCl1F,GACrC,MAAM62F,EAAmBC,GAA8B92F,EAAEmiE,eACrD00B,GACFA,EAAiBrsF,gBAAgBmqF,GAErC,CA9BgCoC,CAA8B/2F,EAC5D,EAWEw1F,WACAH,yBACA2B,iCAEJ,CAEA,SAASA,GAA8Bh3F,GACrC,MAAM62F,EAAmBC,GAA8B92F,EAAEmiE,eACrD00B,GACFA,EAAiB5rF,aAAa0pF,GAA+B,GAEjE,CASA,SAASmC,GAA8B9yD,GACrC,IAAIzmC,EAA0BymC,EAE9B,GACEzmC,EAAUA,EAAQ05F,yBACX15F,IAAYA,EAAQgH,UAAUgyF,SAAS,2BAEhD,OAAOh5F,CACT,C,4HCxGA,SAxFoC25F,EAClC7xE,QACAvL,SACA2nC,eACAtK,cACAyK,gCACAttD,cAEA,MAAM,iBAAEiU,IAAqBlW,EAAAA,EAAAA,MAEvBC,GAAOC,EAAAA,EAAAA,KAGPuB,GAAMiE,EAAAA,EAAAA,IAAuB,MAC7B23C,GAAiBC,EAAAA,EAAAA,IAAkB77C,EAAK8tD,GACxCu1C,EAAc9xE,GAAS,YAAaA,EACpC+xE,EAAiB/xE,GAAS,cAAeA,EACzCgyE,EAAeF,GAAexlG,QAAQ0zB,EAAMjuB,QAAQI,OACpDsJ,EAAQq2F,EAAc,QAAWC,EAAiB,eAAiB,UAEnE//C,GAAe3+C,EAAAA,GAAAA,GAASy+F,IAAe9J,EAAAA,EAAAA,IAAkBhoE,EAAO,cAAeqqB,GAC/EuS,EAAiBo1C,EAAehyE,EAAMjuB,QAAQI,MAAO4jD,WAAWC,aAAU5pD,EAC1E6lG,EAAejgD,GAAgB4K,EAE/BtsD,EAAcmkB,GAAS8oC,EAAAA,EAAAA,IAAatwD,EAAMwnB,QAAUroB,EACpD8lG,GAAkB99F,EAAAA,EAAAA,IAAgB,KAClC4rB,IAAU+xE,EACZ9iG,IAEAiU,EAAiB,CACf7S,QAASpD,EAAK,kBAElB,KAGI,YAAEu+C,EAAW,gBAAEmS,IAAoBC,EAAAA,GAAAA,GAAas0C,GAEtD,OACEpjG,EAAAA,GAAAC,cAAC8uD,GAAAA,EAAgB,CACfpvD,IAAKA,EACL0jG,UAAW19E,GAAQxX,MACnBm/C,aAAcA,EACd2B,aAAW,EACXnxD,WAAWoC,EAAAA,EAAAA,GACT,kBACAijG,GAAgB,cAElBhjG,QAASu8C,EACTrF,YAAawX,GAEZs0C,GAiBP,SACE9zC,EACArM,GAEA,MAAM,MAAEx5C,EAAK,OAAEC,IAAW2lD,EAAAA,EAAAA,MAE1B,OACEpvD,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,kBACbkC,EAAAA,GAAAC,cAAA,OACEk+C,IAAKkR,EACL7lD,MAAOA,EACPC,OAAQA,EACRuN,IAAI,GACJlZ,UAAU,YACV0R,WAAW,IAEZwzC,GAAehjD,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,cAGtC,CApCuByxD,CAAgB4zC,EAAcngD,GAC/ChjD,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,mCACbkC,EAAAA,GAAAC,cAAA,KAAGnC,UAAU,yBACVmlG,GACCjjG,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,gBAAgBnQ,UAAU,yBAEtCklG,GACChjG,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,cAAcnQ,UAAU,yBAEpCK,EAAKwO,IAER3M,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,kBAAiB4P,EAAAA,EAAAA,GAAWlM,GA/DtC,OAiEU,E,0FC3EvB,MAAM48C,GAAkB,MAAQC,EAAAA,EAwBhC,IAAe5hD,EAAAA,EAAAA,KAtBiB6mG,EAC9BlyD,QACAtzC,YACAqC,cAEA,MAAMhC,GAAOC,EAAAA,EAAAA,KACb,OACE4B,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GClCM,WDkCsBpC,GACvCsD,MAAQ,qCAAmCmiG,EAAAA,GAAAA,IAAyBnyD,GAAO4a,cAC3E7rD,QAASA,GAERixC,EACGpxC,EAAAA,GAAAC,cAACghD,GAAAA,EAAS,CAAC7P,MAAOA,EAAO9wC,KAAM89C,KAC/Bp+C,EAAAA,GAAAC,cAAA,OAAKk+C,IAAKqlD,GAAUxsF,IAAI,GAAGxH,WAAW,IACzC4hC,GAAOzkC,OAAQe,EAAAA,EAAAA,GAAW0jC,EAAMzkC,OAASxO,EAAK,WAC9CizC,GAAO0gC,UAAY9xE,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,SAC/BjO,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,SACP,I,4BEhBK,SAASw1F,GAAkBC,GAkDxC,OAAOjnG,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KACV,CAACC,EAAQgnG,KACP,MAAM,SAAEC,EAAQ,iBAAEC,GAAqBF,EACvC,MAAO,CACLhD,gBAAiBkD,IAAoBnwE,EAAAA,EAAAA,KAAqB/2B,GAC1DmF,YAAa+hG,IAAoBC,EAAAA,EAAAA,KAAwBnnG,EAAQinG,GAClE,GANOlnG,EAhD4BygB,IACtC,MAAM,eACJwjF,EAAc,WACd7+F,EAAU,WACVs4F,EAAU,SACVwJ,GACEzmF,GACE,uBAAE4mF,IAA2B7lG,EAAAA,EAAAA,MAE7B8lG,GAAsB1+F,EAAAA,EAAAA,IAAiBuG,IAC3CA,EAAEM,kBACF43F,EAAuB,CAAEt3F,UAAWm3F,EAAUK,UAAWp4F,GAAGk0E,UAAW,IAGnEmkB,GAAWzlG,EAAAA,EAAAA,KAAQ,KACvB,MAAQ27F,WAAY+J,EAAI,QAAEhkG,GAAYgd,EACtC,MAAO,IACFA,EACHwjF,iBACA7+F,aACAs4F,WAAY,IACP+J,EACHj6F,EAAG,EACHC,EAAG,GAELhK,QAASwgG,OAAiBrjG,EAAY6C,EACvC,GACA,CAACgd,EAAOwjF,EAAgB7+F,IAE3B,OACE9B,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GAAe,4BAA6B4B,GAAc,eACrEV,MAAOg5F,EAAc,SAAQA,EAAWlwF,aAAakwF,EAAWjwF,OAAS,GACzEhK,QAASwgG,EAAiBqD,OAAsB1mG,GAE/CqjG,GACC3gG,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,0BACZgE,GACC9B,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,YAKjBjO,EAAAA,GAAAC,cAACyjG,EAAqBQ,GAClB,IAaZ,C,4BC1DA,MAAME,GAAkBX,GAAkBY,GAAAA,GACpCC,GAAkBb,GAAkBc,GAAAA,GAsI1C,IAAe7nG,EAAAA,EAAAA,KACZC,IACC,MAAM2E,GAAQmqB,EAAAA,EAAAA,KAAY9uB,GACpB6nG,GAAkBC,EAAAA,EAAAA,KAAsB9nG,GAE9C,MAAO,CACL2E,QACAojG,aAAc/nG,EAAOgoG,YAAYC,aACjCJ,kBACD,GATL,EApHyCK,EACvCtK,QACAjgD,sBACAwqD,oBACAx+F,QACA08C,cACA+hD,cACAlqD,eACA6pD,eACAF,kBACAljG,YAEA,MAAM,kBAAE0jG,IAAsB9mG,EAAAA,EAAAA,OAEtB+E,SAAS,UAAE03F,IAAgBJ,EAAM0K,YAEnCC,EAAa3K,EAAMQ,YAAcJ,EAAWjB,cAAct5F,OAASm6F,EAAME,SAASr6F,OAElF+kG,GAAuB7/F,EAAAA,EAAAA,IAAiBmzD,IAC5C5d,EAAa0/C,EAAM0K,YAAY1nG,GAAIk7D,EAAM,IAGrC2sC,GAA0B9/F,EAAAA,EAAAA,IAAiBmH,IAC/CouC,EAAapuC,EAAU,IAGnB44F,GAAqB//F,EAAAA,EAAAA,IAAiBmH,IAC1Cu4F,EAAkB,CAAEpoG,OAAQ29F,EAAM0K,YAAYroG,OAAQ6P,aAAY,IAG9DguF,GAAWh8F,EAAAA,EAAAA,KAAQ,IACnB87F,EAAMQ,YACDR,EAAM0K,YAAYhiG,QAAQ03F,UAAWjB,cAAcv6F,KAAI,IAAMo7F,EAAM0K,cAGrE1K,EAAME,UACZ,CAACF,KAoEI/wF,MAAO87F,EAAgB77F,OAAQ87F,GAAoBR,EAAY3F,eAEvE,OACEp/F,EAAAA,GAAAC,cAAA,OACEnC,UAAU,QACVsD,MAAQ,UAASkkG,gBAA6BC,QAE7C9K,EAASt7F,KAzEd,SAA4BoC,EAAqBk3D,GAC/C,MAAM+sC,EAAqBjL,EAAMQ,YAAcx5F,EAAQ0B,QAAQ03F,WAAWjB,cAAcjhC,QAASn7D,EAC3FmoG,EAAqBD,GAAsB,cAAeA,EAC5DA,EAAqBA,GAAoB/3E,MACvCi4E,EAAqBF,GAAsB,cAAeA,EAC5DA,EAAqBA,GAAoBniG,MACvCoqB,EAAQg4E,IAAsB/lF,EAAAA,EAAAA,IAAgBne,GAC9C8B,EAAQqiG,IAAsB9K,EAAAA,EAAAA,IAAkBr5F,GAAS8B,MAEzDsiG,EAAajB,GAAakB,EAAAA,EAAAA,IAAcrkG,IACxCE,EAAiBkkG,GAAYt8F,UAC7B,WAAE+wF,EAAU,MAAEC,GAAU0K,EAAY5K,OAAO1hC,GAG3Cje,GAAcqrD,EAAAA,EAAAA,MAAuBlnG,EAAAA,EAAAA,MAAa4C,GAClDukG,GAAcC,EAAAA,EAAAA,MAAuBpnG,EAAAA,EAAAA,MAAa4C,GAExD,GAAIksB,EAAO,CACT,MAAMu4E,EAAuBlB,IAE1Bx+F,EAAQmyD,IAAUysC,EAAa,EAAI1nG,QAAQ68F,EAAQT,EAAclvC,MAAQ2vC,EAAQT,EAAcE,SAGlG,OACE95F,EAAAA,GAAAC,cAACmkG,GAAe,CACd7mG,GAAK,gBAAcimD,EAAAA,EAAAA,IAAiBjiD,EAAQhE,GAAIg9F,EAAMQ,YAActiC,OAAQn7D,KAC5EmwB,MAAOA,EACPnnB,MAAOA,EACPmnD,8BAA+BnT,EAC/BE,YAAaA,EACbwrD,qBAAsBA,EACtBvkG,eAAgBA,EAChB24F,WAAYA,EACZp3C,YAAaA,EACb4gD,SAAUrJ,EAAMQ,YAActiC,EAAQl3D,EAAQhE,GAC9C4C,QAASo6F,EAAMQ,YAAcoK,EAAuBC,EACpDziG,eAAgB0iG,EAChBtjG,cAAmC,yBAApB0rB,EAAMw4E,YAAwCC,EAAAA,EAAAA,IAAiB1B,EAAiB/2E,GAC/FnsB,MAAOA,EACPuiG,iBAAkBtJ,EAAMQ,aAG9B,CAAO,GAAI13F,EACT,OACErD,EAAAA,GAAAC,cAACqkG,GAAe,CACd/mG,GAAK,gBAAcimD,EAAAA,EAAAA,IAAiBjiD,EAAQhE,MAC5C8F,MAAOA,EACPoqD,8BAA+BnT,EAC/BE,YAAaA,EACbsrD,YAAaA,EACbrkG,eAAgBA,EAChB24F,WAAYA,EACZp3C,YAAaA,EACb4gD,SAAUrJ,EAAMQ,YAActiC,EAAQl3D,EAAQhE,GAC9C4C,QAASo6F,EAAMQ,YAAcoK,EAAuBC,EACpDziG,eAAgB0iG,EAChBtjG,cAAmC,yBAApBsB,EAAM4iG,YAAwCC,EAAAA,EAAAA,IAAiB1B,EAAiBnhG,GAC/F/B,MAAOA,EACPuiG,iBAAkBtJ,EAAMQ,aAMhC,IAUQ,I,4BCpJV,MAAMxV,GAAO,EAAIlnC,EAAAA,EAKF,SAAS8nD,GACtBvpG,EACA6P,EACA25F,EACAC,EACA//F,EACAm3B,EACA6oE,GAEA,MAAM,0BACJC,EAAyB,qBAAEC,EAAoB,6BAAEC,IAC/CvoG,EAAAA,EAAAA,MAGEyB,GAAMiE,EAAAA,EAAAA,IAAuB,MAG7B8iG,GAAW9iG,EAAAA,EAAAA,IAAqC,MAEhD+iG,GAAiBpiG,EAAAA,GAAAA,GAAS6hG,EAAW,WAAUA,SAAY9oG,GAAY8oG,GAEvE9lG,EAAOgmG,GAAiB/gB,GACxBnkF,GAAQwlG,EAAAA,GAAAA,GAAY,UAAStmG,MAAW,WAAUA,MAAUm9B,IAAUopE,EAAAA,IAAe,mBAErFC,GAAeljG,EAAAA,EAAAA,SAA6BtG,GAC5CypG,GAAsBnjG,EAAAA,EAAAA,SAA2BtG,GACjD0pG,GAAuB1hG,EAAAA,EAAAA,IAAgB,KACzB3F,EAAIyJ,UAItBo9F,EAAqB,CACnB5pG,OAAQA,EACR6P,UAAWA,EACXgxB,MAAOA,EACPqpE,aAAcA,EAAa19F,UAE7B29F,EAAoB39F,aAAU9L,EAC9BwpG,EAAa19F,aAAU9L,EAAS,IAG5B4nF,GAAO5/E,EAAAA,EAAAA,IAAgB,KAC3B,MAAMpC,EAAQwjG,EAASt9F,QACnBu9F,IACEzjG,IACFA,EAAMga,QACNha,EAAM0T,UAER8vF,EAASt9F,QAAU,IAAI/H,MACvBqlG,EAASt9F,QAAQ+0C,IAAMwoD,GACvBvhB,EAAAA,GAAAA,GAASshB,EAASt9F,SAClBs9F,EAASt9F,QAAQiL,iBAAiB,SAAS,KACzCqyF,EAASt9F,aAAU9L,CAAS,GAC3B,CAAE09E,MAAM,IACb,IAGIt+B,GAAcp3C,EAAAA,EAAAA,IAAgB,KAClC4/E,IAEA,MAAMvV,EAAYhwE,EAAIyJ,QAEtB,KAAKq0B,GAAUkyC,GAAcljE,GAAc7P,GACzC,OAGF,MAAM,EAAEsN,EAAC,EAAEC,GAAMwlE,EAAU5jE,wBAE3Bw6F,EAA0B,CACxB9oE,MAAOA,EACPvzB,IACAC,IACA88F,UAAW3mG,EACX4mG,YAAa5gG,IAGVwgG,EAAa19F,UAChB09F,EAAa19F,QAAU,GACvB29F,EAAoB39F,QAAU+9F,YAAYnsF,MAC1CiC,WAAW+pF,EAnFc,MAsF3BF,EAAa19F,QAAQkE,KAAKy5F,EAAoB39F,SACzC+9F,YAAYnsF,MAAQ+rF,EAAoB39F,SAtF9B,IACE,EAsFA,IAiCnB,OA7BA/J,EAAAA,EAAAA,KAAU,KACR,MAAMswE,EAAYhwE,EAAIyJ,QAEjBumE,GAAc02B,GAEnBA,EAAwBx8F,SAAQ,EAC9BtM,KACA0pG,YACAx6F,UAAW26F,MAEX,GAAIH,GAAax6F,IAAc26F,EAC7B,OAGF,MAAM,EAAEl9F,EAAC,EAAEC,GAAMwlE,EAAU5jE,wBAE3B06F,EAA6B,CAC3BlpG,KACAX,OAAQA,EACRs1C,SAAUzU,EACVwpE,UAAW3mG,EACX4J,IACAC,IACA+8F,YAAa5gG,IAEf4+E,GAAM,GACN,GACD,CAACmhB,EAAyBzpG,EAAQ6gC,EAAOn3B,EAAOmG,EAAWy4E,EAAMuhB,EAA8BnmG,IAE3F,CACLX,MACAW,OACAc,QACAs7C,cAEJ,CCpGA,MAsCA,IAAejgD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAAqB,CAACC,GAAU0qG,gBAAenvD,kBACjE,MAAMtJ,EAAUjyC,EAAOy3B,aAAav1B,KAAKwoG,GAEzC,MAAO,CACLz4D,UACAnc,OAAQmc,GAASnR,OAASya,GAAcovD,EAAAA,EAAAA,KAA0B3qG,EAAQiyC,EAAQnR,YAASngC,EAC3F8oG,QAASx3D,GAASnR,QAAS8pE,EAAAA,EAAAA,KAAyB5qG,EAAQiyC,EAAQnR,OACpE+pE,SAASxxE,EAAAA,EAAAA,KAA4Br5B,GACtC,GARiBD,EAtCmC+qG,EACrDnhG,QACA+gG,gBACA56F,YACA7P,SACAypG,0BACAz3D,UACAnc,SACA2zE,UACAoB,SACAltD,0BAEA,MAAM,IACJ36C,EAAG,KACHW,EAAI,MACJc,EAAK,YACLs7C,GACEypD,GACFvpG,EAAQ6P,EAAW25F,EAASC,EAAyB//F,EAAOmsB,GAAQgL,OAAOiqE,EAAAA,EAAAA,IAAmB,IAGhG,OACE1nG,EAAAA,GAAAC,cAACkX,GAAAA,EAAW,CACVxX,IAAKA,EACLkoC,WAAYw/D,EACZvpG,WAAWoC,EAAAA,EAAAA,GAAe,4BAA6B0uC,GAASrxC,KAAOoqG,EAAAA,IAAmB,sBAC1FvmG,MAAOA,EACPd,KAAMA,EACNsnG,OAAK,EACLJ,OAAQA,EACRK,qBAAmB,EACnBrkC,sBAAuBhmE,QAAQi1B,GAAU4zE,GAAyBjmG,QAClEqtD,8BAA+BnT,EAC/Bn6C,QAASu8C,GACT,K,gBCnCN,MAsCA,IAAejgD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAAqB,CAACC,GAAU8gC,QAAOya,kBAClD,CACLtJ,SAASo6B,EAAAA,EAAAA,KAAoBrsE,EAAQ8gC,GACrChL,OAAQylB,GAAcovD,EAAAA,EAAAA,KAA0B3qG,EAAQ8gC,QAASngC,EACjE8oG,SAASmB,EAAAA,EAAAA,KAAyB5qG,EAAQ8gC,MAJ1B/gC,EApC6BorG,EAC/CxhG,QACAg0C,sBACAytD,mBACAt7F,YACA7P,SACAypG,0BACAz3D,UACAnc,SACA2zE,cAEA,MAAM,IACJzmG,EAAG,KACHW,EAAI,MACJc,EAAK,YACLs7C,GACEypD,GAAiBvpG,EAAQ6P,EAAW25F,EAASC,EAAyB//F,EAAOmsB,GAAQgL,OACnF8d,GAAiBC,EAAAA,EAAAA,IAAkB77C,EAAK26C,GAE9C,OACEt6C,EAAAA,GAAAC,cAACspE,GAAAA,EAAuB,CACtB36B,QAASA,EACTtuC,KAAMA,EACN0nG,QAzBU,EA0BVC,QAAS1sD,EACT2sD,aAAcH,EACd7iB,KAAM3pC,EACNqd,aAAW,EACXj5D,IAAKA,EACL7B,WAAWoC,EAAAA,EAAAA,GAAe,4BAA6B0uC,GAASrxC,KAAOoqG,EAAAA,IAAmB,sBAC1FvmG,MAAOA,EACPjB,QAASu8C,GACT,K,oDC7CN,MAoHA,IAAejgD,EAAAA,EAAAA,KAlHqB0rG,EAClCC,gBACA9pD,aACA18B,WACAkT,YACAuzE,qBAEA,MAAM,WAAE5wE,IAAev5B,EAAAA,EAAAA,MAEjBoqG,GAAsBC,EAAAA,GAAAA,GAAkB,CAACzzE,GAXvB,KAalB32B,GAAOC,EAAAA,EAAAA,MACP,gBACJoqG,EAAe,OAAE5rG,EAAM,cAAEiiD,EAAa,cAAEwgB,EAAa,uBAAEiS,EAAsB,iBAAEm3B,EAAgB,gBAAEC,GAC/FpqD,EAEE5B,GAAcp3C,EAAAA,EAAAA,IAAgB,KAClCmyB,EAAW,CACTkxE,YAAY,EAAM/rG,SAAQ4rG,kBAAiBE,mBAC3C,IAGEE,GAAiBnqG,EAAAA,EAAAA,KAAQ,KAC7B,IAAKgqG,GAAkBroG,OACrB,OAIF,MAAMzD,GAASgC,EAAAA,EAAAA,MAEf,OAAO8pG,EAAiBtpG,KAAK8rC,IACpBjlB,EAAAA,EAAAA,KAAWrpB,EAAQsuC,KACzB7rC,OAAO5B,QAAQ,GACjB,CAACirG,IAEJ,QAAsBnrG,IAAlBuhD,EACF,OAmBF,MAAMgqD,EAAYrrG,QAAQ8zE,GAA0BjS,GAAiBiS,EAAyBjS,GAExFypC,EAAejqD,EAAiB1gD,EAAK,gBAAiB,wBAAoBb,EAAWuhD,GACxF0Y,MAAM,KACNp4D,KAAK8/D,GACU,mBAANA,EAAyBj/D,EAAAA,GAAAC,cAAComE,GAAAA,EAAe,CAACzuD,MAAM0uD,EAAAA,GAAAA,IAAqBznB,KAAqBogB,SAElG3hE,EAEJ,OACE0C,EAAAA,GAAAC,cAAA,OACE,YAAUqmE,EAAAA,GAAAA,IAAqBznB,GAC/B/gD,WAAWoC,EAAAA,EAAAA,GACT,gBACA2oG,GAAa,aACbjnF,GAAY,WACZwmF,GAAiB,6BACjBtzE,GAAa,UACbuzE,GAAkB,oBAEpB56F,IAAKtP,EAAK0F,MAAQ,MAAQ,MAC1B1D,QAASu8C,EACT4K,KAAK,SACLgO,SAAU,GAEVt1D,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CACHC,KAAK,mBACLnQ,WAAWoC,EAAAA,EAAAA,GACT,8BACA40B,GAAawzE,GAAuB,2BAGtCM,GAAgBxoG,QAAUJ,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,aA9CvCzQ,QAAQorG,GAAgBxoG,SACtBJ,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,kBAAkB2P,IAAKtP,EAAK0F,MAAQ,MAAQ,OACxD+kG,EAAgBzpG,KAAK2wB,GACpB9vB,EAAAA,GAAAC,cAACy1C,GAAAA,EAAM,CACLwB,IAAKpnB,EAAKvyB,GACV+C,KAAK,QACLwvB,KAAMA,OA0Cd9vB,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,QAAQ2P,IAAI,QACxBoxC,EAAgBiqD,EAAe3qG,EAAK,kBAEvC6B,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,uBACZg3B,GACC90B,EAAAA,GAAAC,cAAC02C,GAAAA,EAAO,CACN74C,WAAWoC,EAAAA,EAAAA,GACT,yBACCooG,GAAuB,wBAE1Bn6F,MAAOi6F,EAAgB,QAAU,SAGrCpoG,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CACHC,KAAK,OACLnQ,WAAWoC,EAAAA,EAAAA,GACT,0BACA40B,GAAawzE,GAAuB,2BAItC,I,4BC5IV,SAAmM,WC+GnM,SAASS,GAAeC,GACtB,OAAIA,EAAQC,WAAaD,EAAQE,SACvB,GAAEF,EAAQC,aAAaD,EAAQE,WAGrCF,EAAQC,UACHD,EAAQC,UAGbD,EAAQE,SACHF,EAAQE,SAGV,EACT,CAEA,UAAexsG,EAAAA,EAAAA,KAAqB,CAACC,GAAUqsG,cAC7C,MACE7vC,aAAeC,WAAYC,IACzB18D,EAGJ,MAAO,CACL27C,MAHW5oB,EAAAA,EAAAA,KAAW/yB,EAAQqsG,EAAQnvD,QAItCwf,gBACD,GATH,EAhG2C8vC,EACzCH,UAAS1wD,OAAM+gB,gBAAe/L,mBAE9B,MAAMnvD,GAAOC,EAAAA,EAAAA,MACP,SACJmjE,EAAQ,qBAAE6nC,EAAoB,iBAAEh1F,EAAgB,iBAAEi/D,IAChDn1E,EAAAA,EAAAA,OAEE,YAAEo9D,EAAW,OAAEzhB,GAAWmvD,EAC1BK,EAXwB,MAWTxvD,EACfyvD,EAAgBD,GAAgB/wD,IAAQixD,EAAAA,EAAAA,IAAiBjxD,GAEzDkxD,GAAiBlkG,EAAAA,EAAAA,IAAgB,KACrCi8D,EAAS,CAAEhkE,GAAIs8C,GAAS,IAGpB4vD,GAAmBnkG,EAAAA,EAAAA,IAAgB,KACvC8jG,EAAqB,CAAEvvD,OAAQvB,GAAM/6C,IAAK,IAGtCm/C,GAAcp3C,EAAAA,EAAAA,IAAgB,KAC9BgzC,EACF+6B,EAAiB,CAAE91E,GAAIs8C,MAEvByI,EAAAA,GAAAA,IAAoBgZ,GACpBlnD,EAAiB,CAAE7S,QAASpD,EAAK,iBACnC,IAGF,OACE6B,EAAAA,GAAAC,cAAC8uD,GAAAA,EAAgB,CACfzB,aAAcA,EACdx9B,KAAMwoB,EACN0W,mBDhEuR,WCiEvRlxD,UDjEiB,YCmEjBkC,EAAAA,GAAAC,cAAA,OAAKnC,UDnEmE,WCmElCqC,QAASu8C,GAC7C18C,EAAAA,GAAAC,cAACy1C,GAAAA,EAAM,CAACp1C,KAAK,SAASwvB,KAAMwoB,EAAM1gC,KAAMmxF,GAAeC,KACvDhpG,EAAAA,GAAAC,cAAA,OAAKnC,UDrEmF,YCsEtFkC,EAAAA,GAAAC,cAAA,OAAKnC,UDtEmG,YCuErGw6C,GAAOyP,EAAAA,EAAAA,IAAgBzP,GAAQywD,GAAeC,IAEjDhpG,EAAAA,GAAAC,cAAA,OAAKnC,UDzEsH,aC0ExHu/D,EAAAA,GAAAA,IAA0BhE,EAAeiC,MAI/C+tC,GACCrpG,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACEpP,EAAAA,GAAAC,cAAA,OAAKnC,UDhF2I,aCiFhJkC,EAAAA,GAAAC,cAAA,OAAKnC,UDjFgK,YCkFnKkC,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACL25C,QAAM,EACNhsC,MAAM,cACND,QAAM,EACN5N,KAAK,OACLH,QAASqpG,EACT1rG,UAAWusD,IAEVlsD,EAAK,yBAEPmrG,GACCtpG,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACL25C,QAAM,EACNhsC,MAAM,cACND,QAAM,EACN5N,KAAK,OACLH,QAASspG,EACT3rG,UAAWusD,IAEVlsD,EAAK,uBAMC,I,4BCnGvB,MAQA,GARiDgf,IAC/C,MAAM,OAAErd,GAAWqd,EACbusF,GAAuBrsF,EAAAA,GAAAA,GAAgBC,GAAAA,GAAQC,MAAO,wBAAyBzd,GAGrF,OAAO4pG,EAAuB1pG,EAAAA,GAAAC,cAACypG,EAAyBvsF,QAAY7f,CAAS,E,wCCb/E,MCqBMqsG,GAAQ,CACZx7F,MAAO,GAiET,IAAe1R,EAAAA,EAAAA,KA7DGmtG,EAAGC,YAAWC,uBAC9B,MAAM3rG,GAAOC,EAAAA,EAAAA,KAGPuB,GAAMiE,EAAAA,EAAAA,IAAuB,MAE7BmmG,GAAYnmG,EAAAA,EAAAA,IAAuB,OACnC,YACJ0oF,EAAW,cAAE0d,EAAa,eAAEC,IAC1BC,EAAAA,GAAAA,GAAoBvqG,EAXR,EAWwBoqG,GAElCI,GAAmB1rG,EAAAA,EAAAA,KAAQ,KAC/B,GAAKorG,EAAUO,aAAgBjsG,EAAK44D,KAGpC,OADqB,IAAIupB,KAAKC,aAAa,CAACpiF,EAAK44D,MAAO,CAAEz8C,KAAM,WAC5CkmE,GAAGqpB,EAAUO,YAAY,GAC5C,CAACP,EAAUO,YAAajsG,EAAK44D,OAE1BszC,GAAaP,GAAoBxd,EAEjCge,GAAehlG,EAAAA,EAAAA,IAAgB,KACnC2kG,GAAe,EAAM,IAGjBM,GAAejlG,EAAAA,EAAAA,IAAgB,KACnC2kG,GAAgBO,IAAUA,GAAK,IAGjC,GAAKX,EAAUjyF,KAIf,OACE5X,EAAAA,GAAAC,cAAC8uD,GAAAA,EAAgB,CAACs0C,UAAWsG,GAAO7rG,UD3DjB,WC2DyCqC,QAASkqG,EAAYC,OAAehtG,GAC9F0C,EAAAA,GAAAC,cAAA,OACEN,IAAKoqG,EACLjsG,WAAWoC,EAAAA,EAAAA,GD9D2I,WC8DtGosF,GD9D2E,aCgE3HtsF,EAAAA,GAAAC,cAAA,OAAKnC,UDhE6B,YCgEHK,EAAK,cACpC6B,EAAAA,GAAAC,cAAA,OAAKN,IAAKA,EAAK7B,UDjEwC,aCkEpD0xD,EAAAA,GAAAA,GAAuB,CACtB53C,KAAMiyF,EAAUjyF,KAAKA,KACrBD,SAAUkyF,EAAUjyF,KAAKD,YAG7B3X,EAAAA,GAAAC,cAACwqG,GAAAA,EAAS,CAAC3sG,UDvEmE,aCwE9EkC,EAAAA,GAAAC,cAAA,OAAKnC,UDxE+F,YCwElEK,EAAK,kBAAmBgsG,KAE3DH,GACChqG,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GD5EmK,YC4E9H4pG,GD5EqJ,YC6ErM3pG,QAAU2pG,OAAkCxsG,EAAfitG,EAC7B,kBAEAvqG,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAMq+E,EAAc,OAAS,QAGtB,I,gBCtEvB,MAqEA,IAAe7vF,EAAAA,EAAAA,KA3DYiuG,EACzBnpG,UACAopG,uBAEA,MAAM,qBAAE1nF,IAAyB/kB,EAAAA,EAAAA,MAC3B0sG,EAAOrpG,EAAQ0B,QAAQ2nG,MACvB,MACJj+F,EAAK,YAAEq3C,GACL4mD,EAEErkD,GAAYskD,EAAAA,EAAAA,IAAwBD,GACpClkD,GAAYokD,EAAAA,EAAAA,IAAwBF,GACpCnkD,GAAeliD,EAAAA,GAAAA,GAASgiD,GAAYokD,GACpCI,GAAexmG,EAAAA,GAAAA,GAASmiD,GAAYikD,GAU1C,OACE3qG,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,QACbkC,EAAAA,GAAAC,cAAA,OACEnC,UAAU,UACVsD,MAAQ,8BACRjB,QAbkB6qG,KACtB/nF,EAAqB,CACnBrmB,OAAQ2E,EAAQ3E,OAChB6P,UAAWlL,EAAQhE,GACnB8O,OAAQ9K,EAAQ0pG,cAAe,GAAG,IAClC,IAUIxkD,IAAiBskD,GACjB/qG,EAAAA,GAAAC,cAACk8D,GAAAA,EAAQ,CAACr+D,UAAU,6BAErB2oD,GACCzmD,EAAAA,GAAAC,cAAA,OACEnC,UAAU,kBACVqgD,IAAKsI,EACLzvC,IAAKrK,EACL6C,WAAW,IAGdu7F,GACC/qG,EAAAA,GAAAC,cAAA,SACEnC,UAAU,kBACV8pD,aAAW,EACXH,OAAK,EACLC,yBAAuB,EACvBplD,UAAQ,EACRqlD,MAAI,EACJxJ,IAAK4sD,KAIX/qG,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,SAAS6O,KACtBigD,EAAAA,EAAAA,IAAerrD,IAAYvB,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,eAAekmD,GACvD,I,+GC9EV,SAA0C,WAA1C,GAAkI,WAAlI,GAA2J,WAA3J,GAA8K,WAA9K,GAAgM,WCsWhM,IAAevnD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GAAU4E,cACT,MAAM,SAAE2pG,GAAa3pG,EAAQ0B,QACvBpG,GAAOC,EAAAA,EAAAA,KAAWH,EAAQ4E,EAAQ3E,QAMxC,MAAO,CACLC,OACA8oB,QAPa7oB,EAAAA,EAAAA,KAAWH,EAAQuuG,GAAUC,WAAW,MAClDplF,EAAAA,EAAAA,KAAsBppB,EAAQ4E,IAAY1E,EAO7CuuG,YALcF,IAAYG,EAAAA,EAAAA,KAA6B1uG,EAAQuuG,EAASI,QAMxEv1E,uBAAuBC,EAAAA,EAAAA,KAA4Br5B,GACpD,GAdeD,EAjTH6uG,EACf1uG,OACA8oB,SACApkB,UACAw0B,wBACAq1E,kBAEA,MAAM,SAAE7pC,IAAarjE,EAAAA,EAAAA,MAEfstG,GAAgB5nG,EAAAA,EAAAA,KAAO,IACtB6nG,EAAcC,IAAmBxnG,EAAAA,EAAAA,MAElC/F,GAAOC,EAAAA,EAAAA,MACP,SAAE8sG,EAAQ,gBAAES,GAAoBpqG,EAAQ0B,QACxC2oG,EAAYpuG,QAAQmuG,IACpB,OACJL,EAAM,UAAEO,EAAS,iBAAEC,EAAgB,MAAEC,GAClCb,GAAYS,EAEXrlG,GAAQC,EAAAA,EAAAA,IAAahF,GAErByqG,EAAWJ,EAAYD,EAAgBM,aAAef,EAAUc,SAEhEE,GAAWrgE,EAAAA,GAAAA,MAAkBggE,EAE7B1yC,GAAc16D,EAAAA,EAAAA,KAAQ,KAC1B,GAAImtG,EAAW,OACf,MAAMO,EAAkB,IAAI7rB,KAAKC,aAAa,CAACpiF,EAAK44D,KAAO,MAAM33D,OAAO5B,SAAU,CAAE8c,KAAM,WAC1F,OAAO4wF,GAAUkB,WAAWjtG,KAAKirG,GAC9B,IAAEiC,EAAAA,GAAAA,IAAWjC,MAAsB+B,EAAgB3rB,GAAG4pB,OACtDxpF,KAAK,KAAK,GACZ,CAACsqF,EAAUU,EAAWztG,EAAK44D,OAExBu1C,GAAkBhnG,EAAAA,EAAAA,IAAiBinG,IACvChrC,EAAS,CAAEhkE,GAAIgvG,GAAY,IAGvBC,GAAsBlnG,EAAAA,EAAAA,IAAgBkP,UAC1C,GAAIg3F,EAAcpiG,QAAS,OAE3BoiG,EAAcpiG,SAAU,EACxB,MAAMb,QAAekkG,EAAAA,GAAAA,IAAQ,oBAAqB,CAChD38E,KAAMjzB,EACN4P,UAAWlL,EAAQhE,KAErBmuG,EAAgBnjG,GAChBijG,EAAcpiG,SAAU,CAAK,IAGzBsjG,GAAkBpnG,EAAAA,EAAAA,IAAgB,KACtComG,OAAgBpuG,EAAU,IAGtBqvG,GAAoBluG,EAAAA,EAAAA,KAAQ,KAChC,GAAKgtG,EACL,OAAOttG,EAA2B,YAAtBstG,EAAanxF,KAAqB,sBAAwB,wBAAwB,GAC7F,CAACmxF,EAActtG,IA4MlB,OACE6B,EAAAA,GAAAC,cAAA,OAAKnC,UD1Tc,YC2TjBkC,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GD3TyC,WC2TV0rG,GD3TqC,aC4TjFA,EACC5rG,EAAAA,GAAAC,cAAC2sG,GAAAA,EAAuB,CACtBtsG,KA3QgB,IA4QhBkO,OAAQC,GAAAA,EAAeo+F,YACvBv+F,gBAAc,EACdK,QAAM,IAGR3O,EAAAA,GAAAC,cAACspE,GAAAA,EAAuB,CACtB36B,QAASw8D,EACTlmB,KAAMnvD,GAAyBm2E,EAC/Bv9F,QAAM,EACNL,gBAAc,EACdhO,KAvRc,MA0RlBN,EAAAA,GAAAC,cAAA,QAAMnC,UD5U+F,YC6UjG,IAAGkuG,MAGRJ,EArJL,SAA0CpoG,GACxC,MAAMspG,EAAYtpG,EAAMspG,UACxB,OACE9sG,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACEpP,EAAAA,GAAAC,cAAA,OAAKnC,UAAWusD,IACdrqD,EAAAA,GAAAC,cAAA,UAAQnC,UAAWusD,KAChB38C,EAAAA,EAAAA,GAAWvP,EAAK,6CAA8C,CAAC,qBAElE6B,EAAAA,GAAAC,cAAA,KAAGnC,UAAWusD,KACX38C,EAAAA,EAAAA,GAAWvP,EAAK,yCAA0C2uG,EAAU1sG,QAAS,CAAC,qBAEjFJ,EAAAA,GAAAC,cAAA,UAAQnC,UAAWusD,IAChBlsD,EAAK,+BAER6B,EAAAA,GAAAC,cAAA,OAAKnC,UAAWusD,IACbyiD,EAAU3tG,KAAK8rC,GACdjrC,EAAAA,GAAAC,cAAC8sG,GAAAA,EAAQ,CACP9hE,OAAQA,EACRgZ,eAAa,EACb+oD,gBAAiB1mG,EACjBxI,UAAWusD,GACXu5C,SAAU34D,EACV9qC,QAASmsG,QAKjBtsG,EAAAA,GAAAC,cAAA,OAAKnC,UAAWusD,IACdrqD,EAAAA,GAAAC,cAAA,KAAGnC,UAAWusD,IACXlsD,EAAK,uDAKhB,CAmHiB8uG,CAAiCtB,GAjOlD,SAAmCnoG,GACjC,MAAM2nG,EAAa3nG,EAAM2nG,WACzB,OACEnrG,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACEpP,EAAAA,GAAAC,cAAA,OAAKnC,UAAWusD,IACdrqD,EAAAA,GAAAC,cAAA,UAAQnC,UAAWusD,KAChB38C,EAAAA,EAAAA,GAAWvP,EAAK,0BAA2B,CAAC,qBAE9C2tG,GACC9rG,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACEpP,EAAAA,GAAAC,cAAA,KAAGnC,UAAWusD,KACX38C,EAAAA,EAAAA,GACCvP,EAAK,4BAA6B,CAAC6tG,EAAUF,QAAmBxuG,EAAW0uG,GAC3E,CAAC,qBAGLhsG,EAAAA,GAAAC,cAACwqG,GAAAA,EAAS,KAAEtsG,EAAK,oCAGrB6B,EAAAA,GAAAC,cAAA,KAAGnC,UAAWusD,IACX9oD,GAAS0B,SAASioG,UAAUa,MAC3B/rG,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,MACG1B,EAAAA,EAAAA,GACCvP,EAAK,wCAAyCA,EAAK,QAASoD,GAAS0B,SAASioG,UAAUa,QACxF,CAAC,oBAEH/rG,EAAAA,GAAAC,cAAA,YACCyN,EAAAA,EAAAA,GAAWvP,EAAK,eAAgB6tG,GAAW,CAAC,qBAG/ChsG,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,MACG1B,EAAAA,EAAAA,GAAWvP,EAAK,mCAAoC6tG,GAAW,CAAC,oBACjEhsG,EAAAA,GAAAC,cAAA,YACCyN,EAAAA,EAAAA,GAAWvP,EACV,4BACAA,EAAK,4BAA6BmtG,IACjC,CAAC,uBAKZtrG,EAAAA,GAAAC,cAAA,OAAKnC,UAAWusD,IACdrqD,EAAAA,GAAAC,cAAA,UAAQnC,UAAWusD,KAChB38C,EAAAA,EAAAA,GAAWvP,EAAK,mCAAoC,CAAC,qBAExD6B,EAAAA,GAAAC,cAAA,KAAGnC,UAAWusD,KACX38C,EAAAA,EAAAA,GAAWvP,EAAK,mCAAoCgtG,EAAW/qG,QAAS,CAAC,qBAE5EJ,EAAAA,GAAAC,cAAA,OAAKnC,UAAWusD,IACb8gD,EAAWhsG,KAAK8rC,GACfjrC,EAAAA,GAAAC,cAAC8sG,GAAAA,EAAQ,CACP9hE,OAAQA,EACRgZ,eAAa,EACb+oD,gBAAiB1mG,EACjBxI,UAAWusD,GACXu5C,SAAU34D,EACV9qC,QAASmsG,OAIdnzC,GACCn5D,EAAAA,GAAAC,cAAA,aAAOyN,EAAAA,EAAAA,GAAWvP,EAAK,sCAAuCg7D,MAGlEn5D,EAAAA,GAAAC,cAAA,OAAKnC,UAAWusD,IACdrqD,EAAAA,GAAAC,cAAA,UAAQnC,UAAWusD,KAChB38C,EAAAA,EAAAA,GAAWvP,EAAK,uBAAwB,CAAC,qBAE5C6B,EAAAA,GAAAC,cAAA,KAAGnC,UAAWusD,KACX6iD,EAAAA,GAAAA,IAAmC,IAAZrB,EAAkB1tG,EAAK44D,MAAM,KAK/D,CAuJqEo2C,CAA0BjC,GAC3FlrG,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACL1C,UDlV4M,WCmV5MqQ,MAAM,WACN7N,KAAK,UACLH,QAASqsG,GAERruG,EAAK,sBAER6B,EAAAA,GAAAC,cAAC88C,GAAAA,EAAa,CACZj9C,OAAQtC,QAAQiuG,GAChB2B,eAAa,EACbzgG,MAAOggG,EACP3vD,eAAgB0vD,EAChBzqF,QAASyqF,GA/Hf,WACE,IAAK/mF,IAAW8lF,EAAc,OAC9B,MAAM4B,EAAsC,YAAtB5B,EAAanxF,KAE7Bk/B,GAAY8zD,EAAAA,GAAAA,IAAc3nF,IAAU8zB,EAAAA,EAAAA,IAAat7C,EAAMwnB,IAAUoiC,EAAAA,EAAAA,IAAgBpiC,GACjF4nF,GAAUC,EAAAA,GAAAA,GAAiBrvG,EAAkB,IAAZ0tG,GACjC4B,EAAqBvC,GAAUC,WAAaD,EAASC,WAAW/qG,OAAS,EAAI,EAC7EstG,EAAsBvvG,EAAK,mCAAoCsvG,GAC/DE,EAAYF,EAAqB,EAEjCG,EAAWP,EAAgB,oCAAsC,iCACjEQ,EAAmBR,EAAgBlvG,EAAK,4BAA6BmtG,GAAUntG,EAAK,QAAS4tG,EAAO,KACpG+B,EAAiB3vG,EAAKyvG,EAAU,CAACp0D,EAAWwyD,EAAU6B,QAAmBvwG,EAAW0uG,GAEpF+B,EAAmBjC,EACrB3tG,EAAK,wCAAyC,CAACq7C,EAAWwyD,EAAUF,QAAmBxuG,EAAW0uG,QAClG1uG,EAEJ,IAAI0wG,EAAY,GAEdA,EADEX,EACUM,EAAY,8CAAgD,uCAE5DA,EAAY,2CAA6C,oCAEvE,IAAIM,EAAkB9vG,EAAK6vG,EAAW,CAACT,EAASvB,EAAUxyD,EAAWi0D,QAAqBnwG,EAAW0uG,GACjGqB,GAAiB5B,EAAayC,iBAChCD,GAAoB,IAAG9vG,EAAK,kCAAmCstG,EAAayC,mBAG9E,IAAI3lG,EAAS,GAET8kG,IAEA9kG,EADEkjG,EAAa0C,WACNhwG,EAAK,qCAELA,EAAKstG,EAAa2C,SAAW,yBAA2B,8BAIrE,IAAIC,EAAgB,GACpB,GAAIhB,QAEG,GAAI5B,EAAa6C,kBACtBD,EAAgBlwG,EAAK,2CAChB,GAAIstG,EAAa8C,sBAAuB,CAE7C,MACMC,GADY7vG,EAAAA,EAAAA,MAAYI,MAAMF,KACH4sG,EAAa8C,uBACxCE,EAAsBD,IAAkB/0D,EAAAA,EAAAA,IAAat7C,EAAMqwG,GACjEH,EAAgBlwG,EAAK,mCAAoCswG,EAC3D,MAAO,GAAIhD,EAAaiD,mBAAoB,CAC1C,MAAMA,GAAqBlB,EAAAA,GAAAA,GAAiBrvG,EAAwC,IAAlCstG,EAAaiD,oBAC/DL,EAAgBlwG,EAAK,8BAA+BuwG,EACtD,MACEL,EADS5C,EAAakD,gBACNhB,EACZxvG,EAAK,uCAAwC,CAACq7C,EAAWi0D,IACzDtvG,EAAK,mCAAoCq7C,GAE7Bm0D,EACZxvG,EAAK,sCAAuC,CAACq7C,EAAWk0D,EAAqBH,IAC7EpvG,EAAK,kCAAmC,CAACq7C,EAAW+zD,IAG1D,OACEvtG,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACG7G,GACCvI,EAAAA,GAAAC,cAAA,KAAGnC,UDjS2N,aCkS3N4P,EAAAA,EAAAA,GAAWnF,EAAQ,CAAC,qBAGzBvI,EAAAA,GAAAC,cAAA,UACGyN,EAAAA,EAAAA,GAAWogG,EAAgB,CAAC,qBAE9BC,GACC/tG,EAAAA,GAAAC,cAAA,UACGyN,EAAAA,EAAAA,GAAWqgG,EAAkB,CAAC,qBAGnC/tG,EAAAA,GAAAC,cAAA,UACGyN,EAAAA,EAAAA,GAAWugG,EAAiB,CAAC,qBAE/BI,GACCruG,EAAAA,GAAAC,cAAA,UACGyN,EAAAA,EAAAA,GAAW2gG,EAAe,CAAC,qBAKtC,CAyCOO,IAEC,K,gBC9UV,MA4DA,IAAenyG,EAAAA,EAAAA,KA5DqBoyG,EAAGttG,UAASpB,cAC9C,MAAMhC,GAAOC,EAAAA,EAAAA,KA2BP+kB,GAAc1kB,EAAAA,EAAAA,KAAQ,KAC1B,MAAM2kB,EAAuB,GAI7B,OAHA7hB,EAAQ0pG,cAAephG,SAASyZ,IAC9BF,EAAM9V,KAAKgW,EAAInkB,KAAKkN,IAAWkX,EAAAA,GAAAA,GAAyBplB,EAAMkO,KAAS,IAElE+W,CAAK,GACX,CAACjlB,EAAMoD,EAAQ0pG,gBAElB,OACEjrG,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,iBACZyD,EAAQ0pG,cAAe9rG,KAAI,CAACmkB,EAAKvb,IAChC/H,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,OACZwlB,EAAInkB,KAAI,CAACkN,EAAQoX,IAChBzjB,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACLF,KAAK,OACL4N,QAAM,EACN0T,SAA0B,gBAAhBvV,EAAOiO,KAEjBna,QAASA,IAAMA,EAAQ,CAAEvD,OAAQ2E,EAAQ3E,OAAQ6P,UAAWlL,EAAQhE,GAAI8O,YAExErM,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,sBACbqlB,EAAYpb,GAAG0b,IA9CVpX,KAClB,MAAM,KAAEiO,GAASjO,EACjB,OAAQiO,GACN,IAAK,MACH,IAAKw0F,EAAAA,IAAY7Y,KAAK5pF,EAAOugB,KAC3B,OAAO5sB,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAAClQ,UAAU,cAAcmQ,KAAK,gBAE5C,MAEF,IAAK,UACH,OAAOjO,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAAClQ,UAAU,cAAcmQ,KAAK,gBAC5C,IAAK,MACL,IAAK,UACH,OAAOjO,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAAClQ,UAAU,cAAcmQ,KAAK,SAC5C,IAAK,kBACH,OAAOjO,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAAClQ,UAAU,cAAcmQ,KAAK,iBAC5C,IAAK,UACL,IAAK,gBACH,OAAOjO,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAAClQ,UAAU,cAAcmQ,KAAK,WAC5C,IAAK,OACH,OAAOjO,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAAClQ,UAAU,cAAcmQ,KAAK,SAE9B,EA0BL8gG,CAAW1iG,SAKhB,I,gEC5CV,MAmGA,IAAe5P,EAAAA,EAAAA,KAnGeuyG,EAC5BztG,UACAykG,uBACArF,iBACA7+F,aACAR,QACA2tG,kBAGA,MAAMtvG,GAAMiE,EAAAA,EAAAA,IAAuB,MAE7BqkB,GAAU7pB,EAAAA,EAAAA,KACVD,GAAO+pB,EAAAA,GAAAA,KACPgnF,GAAUC,EAAAA,EAAAA,IAAkB5tG,IAE5B,MACJoL,EAAK,YACLq3C,EAAW,OACXorD,EAAM,SACNC,EAAQ,OACRC,EAAM,MACN7hF,GACEyhF,EAEEK,GAAWhrG,EAAAA,GAAAA,IAASirG,EAAAA,EAAAA,IAAmB/hF,IACvCgiF,EAAwBjyG,QAAQyxG,GAChC7V,GAAuBsW,EAAAA,GAAAA,GAAwBH,GAAWE,GAC1DhjG,EAAYlL,EAAQhE,IAE1BiqC,EAAAA,GAAAA,IAA4B,EAAEmoE,MAC5B,GAAK3J,GAOL,GAAIuJ,EAAU,CACZ,MAAMK,EAAYjwG,EAAIyJ,QAASwL,QAAwBi7F,EAAAA,MACvDC,EAAAA,GAAAA,GAAoBP,GAAU,EAAO9iG,EAAW3K,EAAYR,GAAOsoF,MAAMmmB,KACvE7uE,EAAAA,EAAAA,KAAgB,KACd0uE,EAAUxuG,MAAM2iB,YAAY,gBAAiBgsF,GAC7CH,EAAU94F,aAAak5F,EAAAA,IAA2B,GAAG,GACrD,GAEN,OAdML,GACFhwG,EAAIyJ,QAASwL,QAAwBi7F,EAAAA,KAA2Bx5F,gBAAgB25F,EAAAA,IAapF,GACC,CAAChK,EAAsBuJ,EAAU5O,EAAgB7+F,EAAYR,EAAOmL,IAEvE,MAAMjD,EAAQylG,GAAexhF,GAAO2sE,YAAY5wF,MAE1CpI,GAAQwlG,EAAAA,GAAAA,GACZn5E,GAAO2sE,YAAe,UAAS5wF,MAC/BikB,GAAO2sE,YAAe,iBAAgB3sE,EAAM2sE,WAAW5wF,WAAWikB,EAAM2sE,WAAW3wF,SACnFjM,SAASiwB,GAAO2sE,YAAc6U,IAAiB,UAASA,OAG1D,OACEjvG,EAAAA,GAAAC,cAAA,OACEN,IAAKA,EACL7B,UAAU,WAET6O,GACC3M,EAAAA,GAAAC,cAAA,KAAGnC,UAAU,UAAS4P,EAAAA,EAAAA,GAAWf,IAElCq3C,GACChkD,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,SAAQ4P,EAAAA,EAAAA,GAAWs2C,EAAa,CAAC,QAAS,QAE3DhkD,EAAAA,GAAAC,cAAA,OAAKnC,UAAY,gBAAc2vB,EAAQ,YAAc,KAClDjwB,QAAQiwB,IACPztB,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,2BACZ2xG,GAAyBzvG,EAAAA,GAAAC,cAAA,UAAQN,IAAKy5F,EAAsBt7F,UAAU,yBACtEyxG,GACCvvG,EAAAA,GAAAC,cAAA,OACEnC,UAAU,gBACVqgD,IAAKoxD,EACLv4F,IAAI,GACJ5V,MAAOA,EACP6uG,YAAY,YACZzgG,WAAW,KAGb+/F,GAAY9hF,GACZztB,EAAAA,GAAAC,cAACk8D,GAAAA,EAAQ,CACP3yD,MAAOA,EACPC,OAAQgkB,EAAM2sE,YAAY3wF,OAC1BymG,kBAAgB,KAKxBlwG,EAAAA,GAAAC,cAAA,KAAGnC,UAAU,qBACVqyG,EAAAA,GAAAA,GAAehyG,EAAMixG,EAAQC,EAAU,CAAEp6C,cAAe,0BACxDq6C,GAAUtvG,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,gBAAgBmqB,EAAQ,yBAGnD,I,4BC/HV,UAAgB,KAAO,WAAW,SAAW,WAAW,IAAM,WAAW,QAAU,YCkFnF,IAAexrB,EAAAA,EAAAA,KAxD2B2zG,EACxC7uG,UACAs3F,kBAEA,MAAM,YAAEwX,EAAW,kBAAEC,IAAsBpyG,EAAAA,EAAAA,MACrCC,GAAOC,EAAAA,EAAAA,KACP8wG,GAAUC,EAAAA,EAAAA,IAAkB5tG,IAE5B,OAAE3E,EAAM,GAAEW,GAAOgE,EAEjBgvG,GAAuBjrG,EAAAA,EAAAA,IAAgB,KAC3CgrG,EAAkB,CAAE1zG,SAAQkrC,IAAK,CAACvqC,IAAM,KAG1C8jC,EAAAA,GAAAA,GAAYkvE,EAAsB1X,EAhBX,SAgB4Cv7F,GAEnE,MAAM,OACJ8xG,EAAM,SACNC,EAAQ,cACR3V,GACEwV,GAEE,MACJ1lG,EAAK,OAAEC,EAAM,UAAEw9C,EAAS,SAAEjhD,GACxB0zF,EAEEh9C,GAAcp3C,EAAAA,EAAAA,IAAgB,KAClC+qG,EAAY,CACV/1F,KAAM,UACN1d,SACA6P,UAAWlP,EACXizG,iBAAiB,GACjB,IAGJ,OACExwG,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GAAemqD,GAAOge,KAAM,eACvCloE,QAASu8C,GAET18C,EAAAA,GAAAC,cAAC0jD,GAAAA,EAAY,CACXzH,aAAc+K,GAAWC,QACzB19C,MAAOA,EACPC,OAAQA,EACRm6C,WAAS,EACT9lD,UAAWusD,GAAOomD,UAEnBjzG,QAAQwI,IAAahG,EAAAA,GAAAC,cAAA,OAAKnC,UAAWusD,GAAOrkD,WAAW6H,EAAAA,GAAAA,IAAoB7H,IAC5EhG,EAAAA,GAAAC,cAAA,OAAKnC,UAAWusD,GAAOqmD,KACrB1wG,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,OAAOnQ,UAAWusD,GAAOsmD,OACnCxyG,EAAK,qBAAqByyG,EAAAA,GAAAA,GAAuBxB,EAAQC,KAExD,I,oGCxCJwB,GAAsBC,GAAmB7pG,KAAK8pG,GAC9CC,GAAiB,KACjBh4C,GAAqB,CACzBxvD,MAAO,IACPC,OAAQ,IACRwvD,KAAM,IA+NR,SAASg4C,KACP,OACEjxG,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,YAAYsD,MAAM,kCAAkCqO,QAAQ,aACzEzP,EAAAA,GAAAC,cAAA,UAAQixG,GAAG,KAAKC,GAAG,KAAK9nB,EAAE,SAC1BrpF,EAAAA,GAAAC,cAAA,QAAMs1C,EAAE,+IACRv1C,EAAAA,GAAAC,cAAA,QAAMs1C,EAAE,sFACRv1C,EAAAA,GAAAC,cAAA,QAAMs1C,EAAE,yNAGd,CAEA,UAAe94C,EAAAA,EAAAA,KA/NgB20G,EAC7B7vG,UACAuuB,WAEA,MAAM,aAAEkrC,IAAiB98D,EAAAA,EAAAA,MAEnByB,GAAMiE,EAAAA,EAAAA,IAAuB,MAE7BytG,GAAeztG,EAAAA,EAAAA,IAAuB,MACtCzF,GAAOC,EAAAA,EAAAA,KACPg1D,GAAcC,EAAAA,GAAAA,KAEdi+C,GAAWC,EAAAA,EAAAA,IAAmBhwG,IAC9B,UAAE0kG,EAAS,IAAElqC,GAAQu1C,EAErBE,GAAa3lE,EAAAA,GAAAA,MACbmtD,GAAYyY,EAAAA,EAAAA,IAAiBlwG,GAC7BmwG,EAAkC,YAAdzL,GAA4BjN,OAClD17F,EAD+DiE,EAAQI,KAAO2vG,EAASK,OAASH,GAG7FI,EAAOC,IAAY3tG,EAAAA,EAAAA,IAAS63D,GAE7B+1C,EAAiC,UAAd7L,GAAwC,YAAdA,IAA4BjN,GACzE,MAAExvF,EAAK,OAAEC,EAAM,KAAEwvD,GAASD,GAC1B4C,GAAMC,EAAAA,GAAAA,KAENnS,GAAYsS,EAAAA,EAAAA,IAAmB41C,EAAOpoG,EAAOC,EAAQwvD,EAAM2C,GAC3D1Y,GAAe3+C,EAAAA,GAAAA,GAASmlD,GACxBqoD,GAAmB54E,EAAAA,EAAAA,GAAsB+pB,GAAc,GACvD8uD,EAAa9uD,GAAgB6uD,EAE7BE,GAAmBxzG,EAAAA,EAAAA,KAAQ,KAC/B,GAAkB,YAAdwnG,IAA4B2L,EAAMM,eACpC,OAAO,EAGT,MAAM,IAAEC,EAAG,eAAED,GAAmBN,EAChC,OAAOM,GAAiBE,EAAAA,GAAAA,IAAkBD,EAAKl5C,EAAK,GACnD,CAACgtC,EAAW2L,EAAO34C,IAMhBo5C,GAAkB/sG,EAAAA,EAAAA,IAAiBgtG,IACvC,GAAkB,YAAdrM,EAAyB,OAC7B,MAAMsM,EAAQD,EAAYE,iBACpBC,EAAUH,EAAYI,kBAEtBC,EAAWpxG,EAAQI,KAAO2vG,EAASK,QAAS9lE,EAAAA,GAAAA,MAC5C+mE,GAAoB,EAAID,EAAWrB,EAASK,QAAUd,GACtDj5F,GAAOi7F,EAAAA,GAAAA,IAAqB10G,EAAiB,IAAXw0G,GACxCF,EAAQ//F,YAAckF,EACtB26F,EAAMG,kBAAmB57F,aAAa,oBAAsB,IAAG87F,IAAmB,IAgJpF,OA7IA1pG,EAAAA,EAAAA,KAAgB,KACVmoG,EAAajoG,SACfipG,EAAgBhB,EAAajoG,QAC/B,GACC,CAACipG,KAEJhzG,EAAAA,EAAAA,KAAU,KAEJ4H,KAAK0vE,IAAI5a,EAAIo2C,IAAMP,EAAMO,KAAOnB,IAAkB/pG,KAAK0vE,IAAI5a,EAAI+2C,KAAOlB,EAAMkB,MAAQ9B,GAClFY,EAAMM,iBAAmBn2C,EAAIm2C,gBAC/BL,EAAS,IACJD,EACHM,eAAgBn2C,EAAIm2C,iBAK1BL,EAAS91C,EAAI,GACZ,CAACA,EAAK61C,KAET12E,EAAAA,GAAAA,IAAW,KACTk4B,GAAa,GACX4lC,OAA6C17F,EAAP,KAAzBo0G,GAAoB,KAErCrwE,EAAAA,GAAAA,IAAY,MACVH,EAAAA,EAAAA,KAAgB,KACd,MAAMoxE,EAAcjB,EAAajoG,QAC7BkpG,GACFD,EAAgBC,EAClB,GACA,GACDZ,EAAmB,SAAOp0G,GA+G3B0C,EAAAA,GAAAC,cAAA,OACEN,IAAKA,EACL7B,UAAU,mCACVqC,QAjKgBu8C,KAClBse,EAAa,CAAE4B,SAAUg1C,EAAO34C,QAAO,GAkKrCj5D,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,eAtEZk0G,EAEHhyG,EAAAA,GAAAC,cAAA,OACEnC,UAAU,iBACVqgD,IAAK6zD,EACLh7F,IAAI,oBACJxH,WAAW,EACXpO,MAAQ,UAAS43D,GAAmBxvD,oBAAoBwvD,GAAmBvvD,cAPvDzJ,EAAAA,GAAAC,cAACk8D,GAAAA,EAAQ,CAAC3yD,MAAOA,EAAOC,OAAQA,IAgD1D,WACE,GAAKuoG,EAEL,OACEhyG,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACG5R,QAAQy0G,KAAsBjZ,GAC7Bh5F,EAAAA,GAAAC,cAAA,OACEnC,UAAU,oBACVsD,MAAQ,UAA4B,EAAnB6wG,gBAAsD,EAAnBA,QA5C9D,WACE,MAAMc,GAAe7yG,EAAAA,EAAAA,GACnB,MACA+lG,EACAjN,GAAa,WAEf,GAAkB,YAAdiN,EACF,OACEjmG,EAAAA,GAAAC,cAAA,OAAKnC,UAAWi1G,GACd/yG,EAAAA,GAAAC,cAACgxG,GAAM,MACPjxG,EAAAA,GAAAC,cAACy1C,GAAAA,EAAM,CAAC5lB,KAAMA,EAAMhyB,UAAU,yBACRR,IAArBg0G,EAAS0B,SACRhzG,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,YAAYsD,MAAQ,gBAAekwG,EAAS0B,gBAMnE,GAAkB,UAAd/M,EAAuB,CACzB,MAAM93F,GAAQ8kG,EAAAA,GAAAA,IAAc3B,EAAS4B,WAC/BC,GAAUC,EAAAA,GAAAA,IAAgB9B,EAAS4B,WACzC,GAAIC,EACF,OACEnzG,EAAAA,GAAAC,cAAA,OAAKnC,UAAWi1G,EAAc3xG,MAAQ,gBAAe+M,KACnDnO,EAAAA,GAAAC,cAACgxG,GAAM,MACPjxG,EAAAA,GAAAC,cAAA,OAAKk+C,IAAKg1D,EAAS3jG,WAAW,EAAO1R,UAAU,aAAakZ,IAAI,KAIxE,CAEA,OACEhX,EAAAA,GAAAC,cAAA,OAAKnC,UAAWi1G,EAAcvjG,WAAW,EAAO2uC,IAAKk1D,GAAQr8F,IAAI,IAErE,CAaOs8F,GAGP,CAUOC,IApHP,WACE,GAAKzB,EACL,MAAkB,UAAd7L,EAEAjmG,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,iBACbkC,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,uBACZwzG,EAAS3kG,OAEZ3M,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,0BACZwzG,EAAS30C,UAKA,YAAdspC,EAEAjmG,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,iBACbkC,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,uBAAuBK,EAAK,uBAC3C6B,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,2BACZ01G,EAAAA,GAAAA,IAAkBr1G,EAAMqzG,EAAYjwG,EAAQkyG,YAE7Cza,GACAh5F,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,gBAAgB6B,IAAK0xG,GAClCrxG,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,uBAChBkC,EAAAA,GAAAC,cAAA,OAAKuJ,MAAM,OAAOC,OAAO,QACvBzJ,EAAAA,GAAAC,cAAA,UACEixG,GAAG,KACHC,GAAG,KACH9nB,EAtIG,GAuIHvrF,UAAU,yBACVy2E,UAAU,sBACV,mBAAkBs8B,GAClB,oBAAkB,cAlBhC,CA2BF,CA6EK6C,GACG,I,qCC7NV,MA6JA,IAAej3G,EAAAA,EAAAA,KA7JmBk3G,EAChCpyG,UACAqgD,iBACAgyD,YACAC,qBACAC,oBACAC,4BACAC,YACAC,eACA7yC,WACA8yC,eACA7gE,cACAlzC,UACAg0G,qBACAC,gBACAC,mBAEA,MAAM,iBAAEjgG,IAAqBlW,EAAAA,EAAAA,OAEtB8F,EAAaswG,IAAiBx1F,EAAAA,EAAAA,KAE/BmJ,GAAU7pB,EAAAA,EAAAA,KACVD,GAAO+pB,EAAAA,GAAAA,KAEb,SAASqsF,EAAoB1oG,GAC3BA,EAAEM,kBAEFiI,EAAiB,CACf7S,QAAS,CACP21C,IAAK,iBAGX,CAOA,MAAMs9D,GAAY/1G,EAAAA,EAAAA,KAAQ,KACxB,IAAKuF,EAAa,OAClB,MAAMywG,GAAiBvH,EAAAA,GAAAA,IAAsC,IAAf3rG,EAAQI,KAAasmB,EAAQ8uC,UAAMz5D,EAAW2qB,EAAQysF,YAC9FC,EAAepzG,EAAQqzG,WACxB1H,EAAAA,GAAAA,IAA2C,IAApB3rG,EAAQkyG,SAAkBxrF,EAAQ8uC,UAAMz5D,EAAW2qB,EAAQysF,YACjFG,EAAoBtzG,EAAQ0kB,cAC7BinF,EAAAA,GAAAA,IAC6D,KAA7D3rG,EAAQ0kB,YAAY6uF,WAAavzG,EAAQ0kB,YAAYtkB,MACtDsmB,EAAQ8uC,UACRz5D,EACA2qB,EAAQysF,YAGZ,IAAI98F,EAAO68F,EAUX,OATIE,IACF/8F,GAAQ,KACRA,GAAQzZ,EAAK,2BAA4B,CAAEwD,KAAMgzG,KAE/CE,IACFj9F,GAAQ,KACRA,GAAQzZ,EAAK,8BAA+B,CAAEwD,KAAMkzG,KAG/Cj9F,CAAI,GAGV,CAAC5T,EAAaikB,EAAS1mB,EAAS0mB,EAAQysF,aAErCK,GAAat2G,EAAAA,EAAAA,KAAQ,KACzB,IAAK8C,EAAQyzG,WAAY,OACzB,IAAIp9F,EAAOzZ,EAAK,sBAAuB,CAAE2sD,MAAOvpD,EAAQyzG,YAAc,CAAEC,YAAa1zG,EAAQyzG,aAM7F,OALIzzG,EAAQ2zG,gBACVt9F,GAAQ,KACRA,GAAQzZ,EAAK,yBAA0B,CAAE2sD,MAAOvpD,EAAQ2zG,eAAiB,CAAED,YAAa1zG,EAAQ2zG,iBAG3Ft9F,CAAI,GACV,CAACzZ,EAAMoD,EAAQ2zG,cAAe3zG,EAAQyzG,aAEnCG,GAAe12G,EAAAA,EAAAA,KAAQ,KAC3B,MAAMqsD,EAAQgpD,GAAmBj1D,cACjC,GAAKiM,EACL,OAAO3sD,EAAK,wBAAyB,CAAE2sD,SAAS,CAAEmqD,YAAanqD,GAAQ,GACtE,CAAC3sD,EAAM21G,IAEJnyG,GAAOlD,EAAAA,EAAAA,KAAQ,KACnB,MAAM22G,GAAO/gD,EAAAA,GAAAA,IAAWpsC,EAAwB,IAAf1mB,EAAQI,MACzC,OAAKuyG,GAIEtmG,EAAAA,GAAAA,IAAoBqa,EAAuD,KAA7C1mB,EAAQ0kB,aAAatkB,MAAQJ,EAAQI,OAAc,GAH/EyzG,CAGoF,GAC5F,CAACntF,EAAS1mB,EAAQI,KAAMJ,EAAQ0kB,aAAatkB,KAAMuyG,IAEhDjnG,GAAgB/M,EAAAA,EAAAA,GACpB,cACA2zG,GAAsB,mBACtBtyG,EAAQ0kB,aAAaovF,YAAc,eAGrC,OACEr1G,EAAAA,GAAAC,cAAA,QACEnC,UAAWmP,EACXQ,IAAKtP,EAAK0F,MAAQ,MAAQ,MAC1B1D,QAASA,EACT,2BAECkzC,GACCrzC,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,sBAAsBqC,QAASi0G,IAC5C1mG,EAAAA,EAAAA,GAAW2lC,IAGf4gE,GACCj0G,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,WAAWnQ,UAAU,qBAAqBqC,QAASg0G,IAE/D32G,QAAQ+D,EAAQyzG,aACfh1G,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACEpP,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,gBAAgB6O,MAAOooG,IACpCzuC,EAAAA,GAAAA,IAAqB/kE,EAAQyzG,aAEhCh1G,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,mBAGb+lG,GAAax2G,QAAQs2G,GAAmBj1D,gBACxC7+C,EAAAA,GAAAC,cAAA,QAAME,QAzFZ,SAA0B0L,GACxBA,EAAEM,kBACFkoG,GACF,EAsFuCv2G,UAAU,0BAA0B6O,MAAOwoG,GAC1En1G,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,mBACdkC,EAAAA,GAAAC,cAAComE,GAAAA,EAAe,CAACzuD,MAAM0uD,EAAAA,GAAAA,IAAqBwtC,EAAmBj1D,kBAEjE7+C,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,kBAGdmzD,GACCphE,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,iBAAiBnQ,UAAU,mBAEvC81G,GACC5zG,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,sBAAqB4P,EAAAA,EAAAA,GAAWkmG,IAElD5zG,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,eAAe6O,MAAO6nG,EAAWryF,aAAcmyF,GAC5D/yG,EAAQ0kB,aAAaovF,YACpBr1G,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACEpP,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,mBAAmBqC,QAASo0G,IACzCrH,EAAAA,GAAAA,IAAkD,IAA3B3rG,EAAQ0kB,YAAYtkB,KAAaxD,EAAK44D,MAAM,IAEtE/2D,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,mBAAmBqC,QAASo0G,GAAsBp2G,EAAK,yBAG1EoD,EAAQqzG,UAAa,GAAEz2G,EAAK,wBAC5BoD,EAAQ+zG,0BAA6B,GAAEn3G,EAAK,6BAC5CwD,GAEFigD,GACC5hD,EAAAA,GAAAC,cAAC8hD,GAAAA,EAAqB,CAAC3C,OAAQwC,IAEhCmyD,GAA6BA,IACzB,I,eClMX,MCoFA,IAAet3G,EAAAA,EAAAA,KA3DwB84G,EACrCC,YACAj0G,UACA3E,aAEA,MAAM,4BAAEqhF,IAAgC//E,EAAAA,EAAAA,MAElCC,GAAOC,EAAAA,EAAAA,MACP,QACJ6nD,EAAO,OAAEwvD,EAAM,SAAEzvG,GACfwvG,EACE/1C,EAAal+D,EAAQk+D,WACrBi2C,EAAsB,WAAXD,EACXE,EAAyB,SAAXF,QAAkCn4G,IAAb0I,EAEnC4vG,GAAatwG,EAAAA,EAAAA,IAAgB,KACjC24E,EAA4B,CAAEh4B,UAASpM,OAAQj9C,GAAS,IAGpDi5G,GAAoBp3G,EAAAA,EAAAA,KAAQ,IACzB+2G,EAAUxvG,UAAW8vG,EAAAA,GAAAA,IAAmB33G,EAAMq3G,EAAUxvG,eAAY1I,GAC1E,CAACa,EAAMq3G,EAAUxvG,WAEd+vG,GAAgB1hD,EAAAA,GAAAA,IAAWl2D,EAAqB,IAAfoD,EAAQI,MAC/C,OACE3B,EAAAA,GAAAC,cAAA,OAAKnC,UDlDc,YCmDjBkC,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACLF,KAAK,UACL6N,MAAM,cACN1N,OAAK,EACLyN,QAAM,EACN/N,QAASy1G,EACT93G,UDzDmC,WC0DnC8jB,UAAWy6D,EAAAA,GACXjuE,UAAWjQ,EAAKshE,EAAa,YAAc,aAE3Cz/D,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAMg4C,EAAU,iBAAmB,WAE3CjmD,EAAAA,GAAAC,cAAA,OAAKnC,UD/DkD,YCgErDkC,EAAAA,GAAAC,cAAA,OAAKnC,UDhEoE,YCgEzCK,GAAK63G,EAAAA,GAAAA,IAAkBR,EAAWj0G,EAAQk+D,cAC1Ez/D,EAAAA,GAAAC,cAAA,OAAKnC,UDjEyK,YCkE5KkC,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CACHC,KAAK,cACLnQ,WAAWoC,EAAAA,EAAAA,GDpE6E,WCsEtFw1G,GDtEgI,WCuEhIC,GDvEsJ,YCwErJl2C,GDxE2G,cC2EhHz/D,EAAAA,GAAAC,cAAA,QAAMnC,UD3E4L,YC4E/L+3G,EAAoB13G,EAAK,0BAA2B,CAAC43G,EAAeF,IAAsBE,KAI7F,I,4BChFV,MCqFA,IAAet5G,EAAAA,EAAAA,KA1DUw5G,EACvBtb,YACA/9F,SACA6P,YACAgzD,aACAy2C,eAEA,MAAM,YAAE7F,IAAgBnyG,EAAAA,EAAAA,MAClB+pB,GAAU7pB,EAAAA,EAAAA,KACVD,GAAO+pB,EAAAA,GAAAA,KAEPiuF,GAAexb,EAAUyb,SAEzB/kC,GAAa5yE,EAAAA,EAAAA,KAAQ,KACzB,MAAMmK,EAAQqf,EAAQ,oBAAqB0yE,EAAU0b,aAErD,OAAOxkB,EAAAA,GAAAA,GACLjpF,EAAOkpF,EAAAA,IAAwB9xF,EAAAA,GAAAC,cAAC2kE,GAAAA,EAAQ,CAAC9mE,UD5C2C,WC4CnBwc,KAAK,OAAOha,KAAK,aACnF,GACA,CAAC2nB,EAAS0yE,IAEPj+C,GAAcp3C,EAAAA,EAAAA,IAAiBuG,IACnCwkG,EAAY,CACV/1F,KAAM,UACN1d,SACA6P,eAEFi3C,EAAAA,EAAAA,GAAU73C,EAAE,IAGd,OACE7L,EAAAA,GAAAC,cAAA,OACEnC,UD3DiB,WC4DjBqC,QAASg2G,EAAcz5D,OAAcp/C,GAEpC44G,EACAC,GACCn2G,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACL1C,UDjEoC,WCkEpCqQ,MAAM,OACN7N,KAAK,OACLkpE,OAAK,EACL/C,MAAI,GAEJzmE,EAAAA,GAAAC,cAAA,QAAMnC,UDvEkG,YCuEnEuzE,IAGxCspB,EAAUyb,UACTp2G,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GAAe,4BD3EiC,aC4E7Du/D,GACG62C,EAAAA,GAAAA,GAAkBn4G,EAAMw8F,EAAU0b,aAClCpuF,EAAQ,6BAGZ,I,uCCWV,SAASsuF,GAAc3tG,EAAe4tG,GACpC,OAAOA,EAAQ,GAAM5tG,EAAQ4tG,EAAS,KAAKC,UAAY,CACzD,CAEA,SAzEiCC,EAC/BC,SACAC,cACAC,cACAC,iBACAC,iBACA7xF,oBAEA,MAAM3c,EAASquG,GAAeA,EAAYlqF,MAAM28D,GAAMA,EAAE2tB,SAAWL,EAAOK,SACpEC,EAA0C,IAA1BF,EAAe32G,SAA2D,IAA3C22G,EAAe7jG,QAAQyjG,EAAOK,QAC7EE,EAAYH,EAAe32G,OAAS,GAAK62G,GAAmB1uG,GAAQ4uG,SACpEC,EAAgB7uG,EAASguG,GAAchuG,EAAO8uG,YAAaR,GAAe,GAAK,GAC9ES,EAAcC,IAAmBrzG,EAAAA,EAAAA,IAASghB,EAAgB,EAAIkyF,GAC/DI,EAAYjvG,EAASguG,GAAchuG,EAAO8uG,YAAaP,GAAkB,GAAK,EAC9EW,EAA0BH,IAAiBF,EAQjD,IANA/3G,EAAAA,EAAAA,KAAU,KACJ6lB,GACFqyF,EAAgBH,EAClB,GACC,CAAClyF,EAAekyF,KAEdR,IAAgBruG,EACnB,OAGF,MAAMmvG,EAAa,UAASF,wBAAgCC,EAA0B,EAAI,KAE1F,OACEz3G,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,aAAa2P,IAAI,OAC9BzN,EAAAA,GAAAC,cAAA,OAAKnC,UAAY,sBAAsC,QAAlBs5G,EAA0B,cAAgB,KAC5EA,EAAc,IACdF,GACCl3G,EAAAA,GAAAC,cAAA,QAAMnC,WAAWoC,EAAAA,EAAAA,GACf,sBACC+2G,GAAiB,QAClB/xF,GAAiB,YAGjBllB,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAMgpG,EAAgB,QAAU,QAASn5G,UAAU,uBAI/DkC,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,qBACbkC,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,mBAAmB2P,IAAI,SACnC+hD,EAAAA,GAAAA,GAAuB,CACtB53C,KAAM++F,EAAO/+F,KAAKA,KAClBD,SAAUg/F,EAAO/+F,KAAKD,YAG1B3X,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GAAe,qBAAsBg3G,IAAaD,GAAiB,UAChF/xF,GACCllB,EAAAA,GAAAC,cAAA,OACEnC,UAAU,YACVsD,MAAQq2G,EAAkF,GAAxD,uDAElCz3G,EAAAA,GAAAC,cAAA,QAAMs1C,EAAE,oCAGZv1C,EAAAA,GAAAC,cAAA,OACEnC,UAAU,mBACVsD,MAAOs2G,MAIT,EC3CJ7G,GAAsBC,GAAmB7pG,KAAK8pG,GAgTpD,SAAS5kG,GAAgBN,GACvBA,EAAEM,iBACJ,CAEA,UAAe1P,EAAAA,EAAAA,KAhTYk7G,EACzBp2G,UACA4tC,OACAse,gCACA5B,gCACA+rD,iBAEA,MAAM,YACJC,EAAW,gBAAEC,EAAe,gBAAE5hD,EAAe,iBAAE9hD,IAC7ClW,EAAAA,EAAAA,OAEIX,GAAIkP,EAAS,OAAE7P,GAAW2E,GAC5B,QAAEw2G,EAAO,QAAE3zE,GAAY+K,GACtB6oE,EAAcC,IAAmB/zG,EAAAA,EAAAA,KAAkB,IACnDg0G,EAAeC,IAAoBj0G,EAAAA,EAAAA,IAAmB,KACtDk0G,EAAcC,IAAmBn0G,EAAAA,EAAAA,KAAkB,IACnDo0G,EAAaC,IAAkBr0G,EAAAA,EAAAA,KACnC6zG,EAAQS,QAAUT,EAAQU,WAAaV,EAAQU,UAAY,EACxDxxG,KAAKC,IAAI6wG,EAAQU,WAAY5sE,EAAAA,GAAAA,MAAiBksE,EAAQO,aACtD,GAGAjH,GAAeztG,EAAAA,EAAAA,IAAuB,MAEtC80G,GAAiB90G,EAAAA,EAAAA,IAAyB,OACxCwgC,QAASwyE,EAAW,YAAEC,GAAgBzyE,EACxCu0E,EAAW/B,GAAeA,EAAYlwF,MAAM2iE,GAAMA,EAAE8tB,WACpDyB,GAAWb,EAAQS,SAAWG,EAC9BE,GAAiBD,GAAWb,EAAQe,UAAY3uE,OAAO/F,EAAQyyE,aAAe,EAC9EkC,EAAaH,GAAWb,EAAQiB,eAChCC,EAAiB70E,EAAQ60E,eACzBnC,EAAiBF,EAAc3vG,KAAKgD,OAAO2sG,EAAYz3G,KAAKkqF,GAAMA,EAAEguB,eAAgBR,EACpFE,GAAiBt4G,EAAAA,EAAAA,KAAQ,IACtBm4G,GAAax3G,QAAQiqF,GAAMA,EAAE6vB,YAAW/5G,KAAKkqF,GAAMA,EAAE2tB,UAAW,IACtE,CAACJ,IACEuC,GAAU16G,EAAAA,EAAAA,KAAQ,IAAMs5G,EAAQoB,QAAQh6G,KAAKozD,IAAC,CAClDpV,OAAOqS,EAAAA,GAAAA,GAAuB,CAC5B53C,KAAM26C,EAAE36C,KAAKA,KACbD,SAAU46C,EAAE36C,KAAKD,SACjB81C,gCACA5B,kCAEFjjD,MAAO2pD,EAAEykD,OACToC,OAAQ57G,QAAQu6G,EAAQsB,MAAQtB,EAAQO,aAAeA,GAAe,QACnE,CACHA,EAAa7qD,EAA+B5B,EAC5CksD,EAAQoB,QAASpB,EAAQO,YAAaP,EAAQsB,QAGhDh6G,EAAAA,EAAAA,KAAU,KACR,MAAMi6G,EAASnqE,EAAK/K,QAAQA,SAAS1X,MAAMnkB,GAAWA,EAAO4uG,WACzDa,GAAgBsB,IACdA,EAAOJ,WACThjD,EAAgB,CAAC,GAEnB+hD,GAAgB,GAClB,GACC,CAACD,EAAc7oE,EAAK/K,QAAQA,QAAS8xB,KAExChtD,EAAAA,EAAAA,KAAgB,KAId,GAHIovG,EAAc,GAChBr7F,YAAW,IAAMs7F,EAAeD,EAAc,IAhEtB,MAkErBI,EAAetvG,QAAS,OAEzBkvG,GAAe,GACjBjH,EAAajoG,QAASgH,UAAUC,IAAI,YAGtC,MAAMuiG,GAAqBmF,EAAQO,YAAeA,GAAeP,EAAQO,YAAgBzH,GACzF6H,EAAetvG,QAAQ0N,aAAa,oBAAsB,IAAG87F,IAAmB,GAC/E,CAAC0F,EAAaP,EAAQO,eAEzBj5G,EAAAA,EAAAA,KAAU,KACJ04G,EAAQsB,OAASf,GAAe,GAAMK,IAAaZ,EAAQS,SAC7DX,EAAY,CAAEj7G,SAAQ6P,aACxB,GACC,CAAC7P,EAAQ07G,EAAaK,EAAUd,EAAaprG,EAAWsrG,EAAQS,OAAQT,EAAQsB,QAGnFh6G,EAAAA,EAAAA,KAAU,KACR,IAAIk6G,EAQJ,OANIxB,EAAQsB,OAAStB,EAAQS,QAAUT,EAAQO,aAAeP,EAAQO,YAAc,IAClFiB,EAAQ54G,OAAOsc,YAAW,KACxB46F,EAAY,CAAEj7G,SAAQ6P,aAAY,GACX,IAAtBsrG,EAAQO,cAGN,KACDiB,GACF54G,OAAO8jF,aAAa80B,EACtB,CACD,GACA,CAACX,EAASh8G,EAAQi7G,EAAaprG,EAAWsrG,EAAQO,YAAaP,EAAQS,OAAQT,EAAQsB,OAE1F,MAAMG,GAAe/6G,EAAAA,EAAAA,KAAQ,KAE3B,MAAM9B,GAASgC,EAAAA,EAAAA,MACf,OAAOs6G,EAAiBA,EAAe58F,QAAO,CAAC9T,EAAmBhL,KAChE,MAAMuyB,GAAO9J,EAAAA,EAAAA,KAAWrpB,EAAQY,GAKhC,OAJIuyB,GACFvnB,EAAO+E,KAAKwiB,GAGPvnB,CAAM,GACZ,IAAM,EAAE,GACV,CAAC0wG,IAEEQ,GAAoBn0G,EAAAA,EAAAA,IAAiB0xG,IACzCmB,EAAiB,CAACnB,IAClBiB,GAAgB,GAChBI,GAAgB,GAChBT,EAAW,CAACZ,GAAQ,IAGhB0C,GAAuBp0G,EAAAA,EAAAA,IAAiBu/E,IAC5CszB,EAAiBtzB,EAAQ,IAGrB80B,GAAkBr0G,EAAAA,EAAAA,IAAgB,KACtC2yG,GAAgB,GAChBI,GAAgB,GAChBT,EAAWM,EAAc,IAGrB0B,GAAyBt0G,EAAAA,EAAAA,IAAgB,KAC7CwyG,EAAgB,CAAEl7G,SAAQ6P,aAAY,IAGlCotG,GAAev0G,EAAAA,EAAAA,IAAgB,KACnC8O,EAAiB,CACfu8B,SAASi1D,EAAAA,EAAAA,IAAcrkG,GACvBA,SAASiuD,EAAAA,GAAAA,GAAuB,CAAE53C,KAAMu3B,EAAK/K,QAAQ01E,SAAWniG,SAAUw3B,EAAK/K,QAAQ21E,mBACvF/zG,SA5IoB,IA6IpBs+E,kBA9IwB,0BA+IxB,KAIJjlF,EAAAA,EAAAA,KAAU,KACJ+4G,GAAgBO,GAAYZ,EAAQsB,MAAQj1E,EAAQA,SAAW+K,EAAK/K,QAAQ01E,WACxD11E,EAAQA,QAAQ1X,MAAM28D,GAAMA,EAAE8tB,UAAY9tB,EAAE6vB,aAEhEW,IAEJ,GACC,CAAClB,EAAUP,EAAch0E,EAAQA,QAAS2zE,EAAQsB,KAAMlqE,EAAK/K,QAAQ01E,WAExE,MAAM37G,GAAOC,EAAAA,EAAAA,KA6Bb,OACE4B,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,OAAO2P,IAAKtP,EAAK0F,MAAQ,OAAS,OAC/C7D,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,kBACZ0xD,EAAAA,GAAAA,GAAuB,CACtB53C,KAAMmgG,EAAQiC,SAASpiG,KACvBD,SAAUogG,EAAQiC,SAASriG,SAC3B81C,gCACA5B,mCAGJ7rD,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,aACZK,EAsFT,SAA2B45G,GAEzB,YAAgC,IAArBA,EAAQe,SAvRR,IA2RPf,EAAQS,OACH,eAGLT,EAAQsB,KACHtB,EAAQe,SAAW,WAAa,oBAGlCf,EAAQe,SAAW,aAAe,eAC3C,CArGcmB,CAAkBlC,IAtB1ByB,EAAap5G,OAAS,GACpBJ,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,sBACbkC,EAAAA,GAAAC,cAACI,GAAAA,EAAU,CACTC,KAAK,QACLC,MAAOi5G,KAoBVlB,EAAc,GAAKM,GAClB54G,EAAAA,GAAAC,cAAA,OAAKN,IAAK0xG,EAAcvzG,UAAU,kBAChCkC,EAAAA,GAAAC,cAAA,aAAO4N,EAAAA,GAAAA,IAAoByqG,IAC3Bt4G,EAAAA,GAAAC,cAAA,OAAKuJ,MAAM,OAAOC,OAAO,QACvBzJ,EAAAA,GAAAC,cAAA,UACEN,IAAK+4G,EACLxH,GAAG,IACHC,GAAG,IACH9nB,EA5MK,EA6MLvrF,UAAU,0BACVy2E,UAAU,oBACV,mBAAkBs8B,GAClB,oBAAkB,QAKzBkH,EAAQsB,MAAQlqE,EAAK/K,QAAQ01E,WAAalB,GACzC54G,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACLC,OAAK,EACLH,KAAK,OACL6N,MAAM,cACNrQ,UAAU,iBACVqC,QAAS05G,EACTzrG,UAAU,iBAEVpO,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,WAIhB2qG,GACC54G,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,eAAeqC,QAASgM,IACpC4sG,EAEG/4G,EAAAA,GAAAC,cAACi6G,GAAAA,EAAa,CACZr1B,QAASs0B,EACTnsB,SAAU0sB,EACV93F,SAAUrgB,EAAQ4c,aAAe65F,EACjCmC,eAAgBnC,EAAeE,OAAgB56G,EAC/C88G,SAAO,IAITp6G,EAAAA,GAAAC,cAACo6G,GAAAA,EAAU,CACTpsG,KAAO,QAAOxB,IACdo4E,QAASs0B,EACTnsB,SAAUysB,EACV73F,SAAUrgB,EAAQ4c,aAAe65F,EACjCsC,cAAetC,EAAeE,EAAc,QAAK56G,MAKzDs7G,GACA54G,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,gBACZi6G,EAAQoB,QAAQh6G,KA/FzB,SAA4Bw3G,GAC1B,OACE32G,EAAAA,GAAAC,cAACy2G,GAAU,CACTx/D,IAAKy/D,EAAOK,OACZ9xF,cAAekzF,IAAiBQ,EAChCjC,OAAQA,EACRC,YAAaA,EACbC,YAAaA,EACbC,eAAgBA,EAChBC,eAAgBA,GAGtB,MAsFM8B,IAAkBE,GAClB/4G,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,qBA0CvB,SAAgCK,EAAiBy2C,EAA0BkW,GACzE,OAAKA,EAIE3sD,EAAKy2C,EAAS,SAAW,OAAQkW,EAAO,KAHtC3sD,EAAKy2C,EAAS,4BAA8B,kCAIvD,CAhD4C2lE,CAAuBp8G,EAAM45G,EAAQsB,KAAMj1E,EAAQyyE,cAExFkC,GACC/4G,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACL25C,QAAM,EACNv4B,SAAmC,IAAzBs2F,EAAc93G,OACxBE,KAAK,OACLH,QAASw5G,GAERx7G,EAAK,oBAGT06G,GACC74G,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACL25C,QAAM,EACN75C,KAAK,OACLH,QAASy5G,GAERz7G,EAAK,oBAGN,I,2EChUV,SAAmE,WCqKnE,GA9H8Bq8G,EAC5Bj5G,UAAS+4C,sBAAqBuR,gCAA+BgN,aAC7DvmC,mBAAkBmoF,aAAYC,mBAE9B,MAAM,iBAAEtmG,EAAgB,eAAEw0C,IAAmB1qD,EAAAA,EAAAA,MAEvCC,GAAOC,EAAAA,EAAAA,MACP,SAAE0F,IAAaC,EAAAA,EAAAA,MAGfpE,GAAMiE,EAAAA,EAAAA,IAAuB,MAG7B+2G,GAAY/2G,EAAAA,EAAAA,IAAuB,MAEnCgrC,EAAUrtC,EAAQ0B,QAAQ2rC,SAC1B,eAAEP,EAAc,QAAE4X,EAAO,UAAE20D,GAAchsE,EACzCisE,GAAct5G,EAAQk+D,WAEtB/V,EAAY9a,EAAQE,yBAAsBxxC,GAC9Cu6D,EAAAA,EAAAA,IAAoBjpB,EAASqX,IAAY60D,EAAAA,GAAoB,YAAc,UAGvEC,GAAUv/D,EAAAA,EAAAA,IAAkB77C,EAAK26C,GACjCkN,GAAUhM,EAAAA,EAAAA,IAAkB77C,EAAKksD,GACjCmvD,EAAmB,UAASpsE,EAAQrxC,YACpC09G,GAAgB12G,EAAAA,GAAAA,GACpBy2G,GACCD,IAAYH,IAAcH,EAC3Bj2G,EAAAA,GAAeC,UAEVy2G,EAAiBC,EAAoBC,IAAqBt8F,EAAAA,EAAAA,KAE3Du8F,GAAoB/1G,EAAAA,EAAAA,IAAgB,KACxC81G,IACAV,KAAgB,KAGlBr7G,EAAAA,EAAAA,KAAU,KACJu7G,GAAaH,GAAcjzD,GAAWl1B,GACxC6oF,GACF,GACC,CAACP,EAAWpzD,EAASl1B,EAAkB6oF,EAAoBV,IAE9D,MAAMa,EAAqBV,GAAaH,GAAcQ,GAAiBC,GACvEK,EAAAA,GAAAA,GAAmB,CACjBC,UAAW77G,EACX87G,WAAYd,EACZE,aACAl3F,YAAa23F,IAGf,MAAMI,GAAYp2G,EAAAA,EAAAA,IAAgB,KAChCsjD,EAAe,CACbva,eAAgBO,EAAQP,gBACxB,IAGEqO,GAAcp3C,EAAAA,EAAAA,IAAgB,KAClC,GAAIs1G,EAAW,CACb,GAAIM,IAAoBT,EAWtB,YAVArmG,EAAiB,CACf7S,QAASpD,EAAK,yBACdiqB,OAAQ,CACNA,OAAQ,iBACR2hB,QAAS,CACPsE,eAAgBO,EAAQP,iBAG5BpE,WAAY9rC,EAAK,gBAGd,GAAIs8G,EAET,YADAU,GAGJ,CACAO,GAAW,IAGPC,EAAkB,cAAettE,GACjC,MAAE7kC,EAAK,OAAEC,IAAWmyG,EAAAA,EAAAA,IAAqBhtE,EAAS9qC,GAClDhG,GAAYoC,EAAAA,EAAAA,GAChB,cD1HmB,WC4HnBy7G,GD5HyC,WC6HzCf,GAAaC,GAAcxwD,IAG7B,OACErqD,EAAAA,GAAAC,cAAA,OACEN,IAAKA,EACL7B,UAAWA,EACXsD,MAAQ,UAASoI,gBAAoBC,OACrCtJ,QAAUw7G,OAAgCr+G,EAAdo/C,GAE5B18C,EAAAA,GAAAC,cAACy4D,GAAAA,EAAW,CACVC,aAAch5D,EACdivC,QAASA,EACTitE,cAAenyD,EACfoyD,mBAAmB,aACnBx7G,KAAMkJ,EACNqvD,WAAYA,EACZovC,QAAS8S,EACTvT,QAAShgD,EACTqgD,qBAAmB,IAEpByT,GACCt7G,EAAAA,GAAAC,cAACokF,GAAAA,EAAM,KACLrkF,EAAAA,GAAAC,cAAC87G,GAAAA,EAAe,CACdp8G,IAAKg7G,EACLzjE,IAAK8jE,EACLl9G,WAAWoC,EAAAA,EAAAA,GDvJgE,WCuJlC26G,GAAcxwD,IACvD77C,OAAQysG,EACR36G,KA9HmB,KA8HbkJ,EACN07E,MAAI,EACJkE,eAAa,EACbz6E,QAAM,EACNqtG,QAASX,KAIX,E,gBC/HV,UAAe5+G,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAAqB,CAACC,GAAU4E,cAClD,MAAM,GAAEhE,EAAE,OAAE0tC,GAAW1pC,EAAQ0B,QAAQ6jB,UAEvC,MAAO,CACLoK,OAAOC,EAAAA,EAAAA,KAAgBx0B,EAAQsuC,EAAQ1tC,GACvCs7F,YAAwC,yBAA3Bl8F,EAAOs/G,gBACrB,GANiBv/G,EAdpB,UAAe,QACb6E,EAAO,MAAE2vB,EAAK,YAAE8xB,EAAW,YAAE61C,IAE7B,MAAM,UAAE/xE,GAAcvlB,EAAQ0B,QAE9B,OACEjD,EAAAA,GAAAC,cAACi8G,GAAAA,EAAS,CACRhrF,MAAOA,GAASpK,EAChBk8B,YAAaA,EACb61C,YAAaA,GAGnB,KC6DA,IAAep8F,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAAqB,CAACC,GAAU4E,cAClD,MAAM,GAAEhE,EAAE,OAAE0tC,GAAW1pC,EAAQ0B,QAAQ6jB,UACjCq1F,GAAaC,EAAAA,EAAAA,KAAkBz/G,EAAQsuC,IAASkxE,WAEtD,MAAO,CACLjrF,OAAOC,EAAAA,EAAAA,KAAgBx0B,EAAQsuC,EAAQ1tC,GACvCuyB,MAAM9J,EAAAA,EAAAA,KAAWrpB,EAAQsuC,GACzBoxE,YAAY3sF,EAAAA,EAAAA,KAAW/yB,EAAQ4E,EAAQ3E,QACvCkpE,SAAUtoE,QAAQ2+G,GAAcA,EAAa5+G,GAC9C,GATiBb,EA7DpB,UAAsB,QACpB6E,EAAO,MAAE2vB,EAAK,KAAEpB,EAAI,SAAEg2C,EAAQ,WAAEu2C,IAEhC,MAAM,gBAAEvjB,IAAoB56F,EAAAA,EAAAA,MAEtBC,GAAOC,EAAAA,EAAAA,MAEP,UAAE0oB,GAAcvlB,EAAQ0B,QAExBy5C,GAAcp3C,EAAAA,EAAAA,IAAgB,KAClCwzF,EAAgB,CACd7tD,OAAQ/Z,EAAO+Z,OACfhd,QAASiD,EAAO3zB,GAChB+7F,cAAc,EACdC,eAAe,GACf,IAGE7zC,EAAYx0B,GAAS,cAAeA,EACpCxzB,EAAWwzB,GAAS,YAAaA,EACjC7tB,EAAQ3F,EAAWwzB,EAAMjuB,QAAQI,WAAQ/F,EACzC27F,EAAYv7F,GACdw7F,EAAAA,EAAAA,IAAkBhoE,EAAO,kBACzB5zB,EAEEg/G,GADa/3G,EAAAA,GAAAA,GAAS00F,IACG51F,GAAO4jD,WAAWC,QAgBjD,OAdA4vB,EAAAA,EAAAA,GAAehwD,EAAWmkB,OAAQnkB,EAAWvpB,GAAI2zB,GAe/ClxB,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GAAe,+BAAgC4lE,GAAY,YAAapoE,GAAY,gBAC/F43D,SAAU,EACVhO,KAAK,SACLnnD,QAASzC,EAAWg/C,OAAcp/C,GAEjCI,GACCsC,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,uBACbw+G,GACCt8G,EAAAA,GAAAC,cAAA,OAAKk+C,IAAKm+D,EAAUtlG,IAAI,GAAGlZ,UAAU,iBAK3CkC,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,gBAAe4P,EAAAA,EAAAA,GA1B7BoiB,GAAQ,WAAYA,GAAQA,EAAKu0B,OAE/BlmD,EADGunD,EACE,wBACA,0BADyB7M,EAAAA,EAAAA,IAAuBwjE,IAIpD32D,EACHvnD,EAAK,uBACLA,EAAK,uBAAuBswD,EAAAA,EAAAA,IAAatwD,EAAM2xB,IAkBK,CAAC,QAAS,qBAGtE,K,gBCiOA,MAEMysF,GAAsB,KAAOl+D,EAAAA,EAC7Bm+D,GAA4B,KAAOn+D,EAAAA,EA82CzC,IAAe5hD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,EAAQgnG,KACP,MAAM,eACJ8Y,EAAc,gBAAEp4F,EAAe,gBAAEq4F,EAAe,wBAAErW,EAAuB,cACzEsW,IACEz/G,EAAAA,EAAAA,KAAeP,IACb,QACJ4E,EAAO,MAAEg5F,EAAK,eAAEqiB,EAAc,WAAEl2G,EAAU,SAAE+W,EAAQ,gBAAE2G,EAAe,sBAAEy4F,EAAqB,eAAEC,GAC5FnZ,GACE,GACJpmG,EAAE,OAAEX,EAAM,SAAEmgH,EAAQ,WAAEt9C,EAAU,YAAEx5C,EAAW,gBAAE+2F,EAAe,SAAE57C,EAAQ,iBAAE67C,EAAgB,SAAEzqF,GAC1FjxB,EAEE1E,GAAOC,EAAAA,EAAAA,KAAWH,EAAQC,GAC1BspB,GAAiBC,EAAAA,EAAAA,KAAqBxpB,EAAQC,GAC9C4uD,GAAkBr9B,EAAAA,EAAAA,IAAYvxB,GAC9BkpD,GAAsBC,EAAAA,EAAAA,IAAwBnpD,GAC9C02B,EAAYz2B,IAAQ2pB,EAAAA,EAAAA,IAAc3pB,GAClCqgH,EAAUrgH,IAAQmzD,EAAAA,EAAAA,IAAYnzD,GAC9B6xB,GAAgBH,EAAAA,EAAAA,IAAS3xB,QAA+CU,GAArCqxB,EAAAA,EAAAA,KAAmBhyB,EAAQC,GAC9DugH,EAAmB57G,EAAQ0B,QAAQ2qB,SAASsD,MAC5CksF,EAAeD,GACjBhsF,EAAAA,EAAAA,KAAgBx0B,EAAQwgH,EAAiBlyE,OAAQkyE,EAAiB5/G,SAClED,EAEE8nB,EAAef,EAAgBG,YAAcH,EAAgBG,WAAWjD,SAAShkB,GACjF8/G,GAAmBn3F,IAAkBo3F,EAAAA,EAAAA,IAAsB/7G,GAC3Dg8G,EAAgBX,GAAkBl2G,GAAc22G,EAChD13F,GAASG,EAAAA,EAAAA,KAAanpB,EAAQ4E,GAC9Bi8G,GAAez3F,EAAAA,EAAAA,KAAsBppB,EAAQ4E,GAC7Ck8G,EAAYV,GAAWrtF,EAAAA,EAAAA,KAAW/yB,EAAQogH,QAAYz/G,EACtDogH,EAAoB/3F,GAAQpoB,IAAM2/G,EACpCxuF,GAAcivF,mBAAmBh4F,GAAQpoB,SACzCD,EAEEsgH,EAAcr8G,EAAQhE,KAAOkgB,GAE7B,aAAEoI,EAAY,cAAEJ,EAAa,UAAE2oC,IAAcyvD,EAAAA,EAAAA,GAAoBt8G,IAAY,CAAC,GAC5E0pC,OAAQ6yE,EAAkB7vF,QAAS8vF,IAAiBC,EAAAA,EAAAA,GAAkBz8G,IAAY,CAAC,EAErF08G,EAAkBp4F,GAAgBA,IAAiBpI,EACnDygG,GAAeC,EAAAA,EAAAA,KAAmBxhH,EAAQ4E,GAC1C68G,GAAgBn4F,GAAemoC,EAC/BiwD,GAAqBH,GAAep4F,EAAAA,EAAAA,KAAanpB,EAAQuhH,IAC3DE,IAAkB5yD,GAAoB1F,OACYxoD,GAAhDghH,EAAAA,EAAAA,KAAuB3hH,EAAQyhH,IAC/BG,GAA4BL,IAAgBn4F,EAAAA,EAAAA,KAAsBppB,EAAQuhH,GAC1EM,GAAmB/4F,GAAgB3oB,EAAAA,EAAAA,KAAWH,EAAQ8oB,QAAiBnoB,EACvEmhH,IAAkBjzD,IAAoB1F,GAAuB04D,MAC7DE,EAAAA,EAAAA,IAAaF,MACbA,GAAiBtiC,aAAesiC,GAAiBn+D,cACjDl4B,GAA6D,gBAAvC+1F,GAAcj7G,QAAQmlB,QAAQ9N,KACpDqkG,GAAaZ,GAAgBD,GAC/B3sF,EAAAA,EAAAA,KAAgBx0B,EAAQmhH,EAAkBC,QAC1CzgH,EACEshH,GAAcd,GAAmB93F,EAAAA,EAAAA,KAAWrpB,EAAQmhH,QAAoBxgH,EAExEmE,IAAiBo9G,EAAAA,EAAAA,KAAqBliH,EAAQ4E,GAC9Cu9G,GAAgC,WAApB16F,IAChBm2E,EACIA,EAAME,SAAS/zE,MAAMqyC,IAAMgmD,EAAAA,EAAAA,KAAuBpiH,EAAQo8D,EAAGt7C,MAC7DshG,EAAAA,EAAAA,KAAuBpiH,EAAQ4E,EAASkc,KAI5Cs5B,UAAWioE,GAAgBC,YAAaC,GAAgB,oBAAEC,GAC1DC,MAAOC,GAAY,qBAAEC,IAClBR,IAAarC,GAAmB,CAAC,EAEhC8C,IAAeC,EAAAA,EAAAA,KAA0B7iH,GACzC8iH,GAAYF,IAAcn7E,SAAS9qB,OACnC,GAAEimG,GAAaG,UAAY,IAAM,KAAKH,GAAan7E,QAAQ9qB,QAE3D8pB,IAAcu8E,EAAAA,EAAAA,IAA6Bp+G,GAC3CwnE,GAAgB3lC,KAAe4lC,EAAAA,EAAAA,KAAoBrsE,EAAQymC,IAAeA,QAAc9lC,EACxFsiH,IAAsBC,EAAAA,EAAAA,IAA4Bt+G,GAExD,IAAIO,GAEFA,GADEy4F,GAAOE,SACIF,EAAME,SAAS90B,OAAM,EAAGpoE,GAAIkP,MAAgBq3F,EAAAA,EAAAA,KAAwBnnG,EAAQ8P,MAE5Eq3F,EAAAA,EAAAA,KAAwBnnG,EAAQY,GAG/C,MAAMqjG,GAA+B,WAApBx8E,IAAgC07F,EAAAA,EAAAA,KAAwBnjH,EAAQ4E,EAASkc,GACpF+mF,IAAkBC,EAAAA,EAAAA,KAAsB9nG,GACxCojH,IAAoBC,EAAAA,EAAAA,IAA4Bz+G,GAChDQ,GAAgBg+G,KAAqB7Z,EAAAA,EAAAA,IAAiB1B,GAAiBub,IAEvEjM,IAAoBv1D,EAAAA,EAAAA,KAAiB5hD,EAAQC,EAAQ29F,GAAO0lB,iBAAiB1iH,IAAMA,GAEnF2iH,GAAoB1iH,QAAQ+D,EAAQoX,aAAepX,EAAQmX,UAC3DynG,GAA8BD,IAChCE,EAAAA,EAAAA,KAA0BzjH,EAAQC,EAAQ2E,EAAQoX,WAAa,QAC/Drb,EACE+iH,GAAkBH,GACtBrD,GAAwB95F,EAAAA,EAAAA,KAAkBpmB,EAAQC,EAAQujH,SAAgC7iH,EACxFiE,EAEE++G,GAAoBzjH,GAAM0jH,iBAAiBh/F,SAAShgB,EAAQhE,IAE5DijH,GAAe/iG,IAAaiU,EAAAA,IAAkB70B,GAAM20B,SAAWsrF,EAC/D2D,GAAeD,IAAe7uF,EAAAA,EAAAA,KAAuBh1B,EAAQ4E,QAAWjE,EAExEiwD,IAAmBmzD,EAAAA,EAAAA,KAAuB/jH,EAAQC,GAElD+jH,IAA+BC,EAAAA,EAAAA,KAA0CjkH,EAAQC,EAAQ2E,EAAQhE,IACjGiwD,IAAmC+vB,EAAAA,EAAAA,KAAuC5gF,EAAQC,GAElFikH,GAAyBrhB,EAAAA,IAA4B7iG,EAAOuyB,SAASC,MAAMquD,eAC3EhwB,GAEAqrC,GAAyC,yBAA3Bl8F,EAAOs/G,gBAErB6E,GAAqBtjH,QAAQ6iH,IAAmB3D,GAAgB9W,EAAAA,EAAAA,IAAcya,MAAmBjgH,QAEjG83D,IAAYhxC,EAAAA,EAAAA,KAA2BvqB,GACvCokH,GAAep7F,IAAUQ,EAAAA,EAAAA,KAAqBxpB,EAAQgpB,EAAOpoB,IAC9DmxB,GAAcsyF,eAAiBz/G,EAAQw/G,aAAgBx/G,EAAQw/G,aAE9DE,GAAYpkH,GAAMqkH,YAAc,EAChCC,GAAqBxkH,EAAOykH,WAAWC,wBACvCC,GAAqBppD,IAAa16D,QAAQ2jH,IAAsBF,IAAaE,IAE7EI,GAAiBtE,GAAmBvtF,EAAAA,EAAAA,KAAW/yB,EAAQsgH,QAAoB3/G,EAE3Em1B,GAASD,EAAW71B,EAAO+1B,oBAAoBF,QAAYl1B,EAE3D6xC,IAAOqyE,EAAAA,EAAAA,KAAsB7kH,EAAQ4E,GAErCkgH,IAAeC,EAAAA,EAAAA,KAAmC/kH,EAAQ4E,GAE1DogH,IAAwBC,EAAAA,EAAAA,KAAmCjlH,EAAQC,EAAQ2E,EAAQhE,IAEzF,MAAO,CACL+D,OAAOmqB,EAAAA,EAAAA,KAAY9uB,GACnB0gH,kBACA13F,SACA43F,gBACAC,eACAC,YACAQ,gBAAiBA,GAAmB91F,GACpCy1F,cACAM,eACAG,sBACAE,6BACAC,oBACAG,cACAF,kBACAG,eACAsB,qBACAl9D,aAAa6+D,EAAAA,EAAAA,KAAyBllH,EAAQ4E,GAC9CugH,iBAAiBC,EAAAA,EAAAA,KAAsBplH,EAAQC,GAC/CkiH,aACA15F,eACAi7F,mBACAn6F,iBACA0/B,cAAe4F,EACf1F,sBACAxyB,YACA4pF,UACAtc,YACA6e,aACA12C,iBACA62C,uBACAjf,gBAAgBjtE,EAAAA,EAAAA,KAAqB/2B,GACrCmF,cACAkgH,gBACExkH,QAAQ+D,EAAQoX,aACZpX,EAAQmX,YACTupG,EAAAA,EAAAA,KAA8BtlH,EAAQC,EAAQ2E,EAAQoX,WAE3D8E,WACA1b,iBACAmgH,aAAkC,WAApB99F,EACdg9C,WACAupC,kBAAkB9E,EAAAA,EAAAA,KAAuBlpG,EAAQ4E,GACjD4gH,kBAAkBpc,EAAAA,EAAAA,KAAuBppG,EAAQ4E,GACjDk5C,sBAAuB99C,EAAOuyB,SAASC,MAAMsrB,sBAC7C2nE,oBAAoBC,EAAAA,EAAAA,KAAyB1lH,GAC7Cm3G,qBACA9gF,mBAAoBr2B,EAAOi2B,UAAUI,mBACrCsvF,iBAAiBl8G,EAAAA,EAAAA,IAAe7E,IAAgC,cAApB6iB,OACxC9mB,GAAYilH,EAAAA,EAAAA,KAAsB5lH,EAAQC,GAC9CkkH,sBACAza,0BACAia,qBACAt+G,oBAAoC1E,IAApB0/G,GAAiCrgH,EAAO6lH,eAAexF,IAAkByF,UACzFC,qBAAqCplH,IAApB0/G,EAAgCrgH,EAAO6lH,eAAexF,IAAkBplG,UAAOta,EAChG46D,aACAwlD,oBACA+C,gBACAD,gBACAjzD,oBACAszD,0BACA8B,0BAA0BC,EAAAA,EAAAA,KAA+BjmH,EAAQC,GACjE+jH,gCACAnzD,oCACAq1D,cAAerlH,QAAQkxB,GAAco0F,cACrCC,qBAAqB1wF,EAAAA,EAAAA,KAA+B11B,EAAQ,kBAC5DygH,eACAvkB,eACAmqB,kBAAmBlP,IAAmBmP,gBACjCtG,GAAeuG,gBAAkBpP,IAAmBpL,iBACpDiU,GAAewG,mBAAqBrP,IAAmBtL,gBAC5D5tD,mBAAoBj+C,EAAOuyB,SAASC,MAAMyrB,sBACtC6kB,GAAc,CAAE7d,gBAAgBkf,EAAAA,EAAAA,KAAqBnkE,EAAQ4E,EAA6B,cAApB6iB,OAC5C,iBAAnB3iB,IAA+B,CAAEA,sBACxCq9G,IAAa,CACfE,kBACAE,oBACAC,uBACAE,gBACAC,yBAEFyB,gBACAqC,KAAMzmH,EAAO0mH,mBAAmBl0F,MAChCmyF,sBACAC,kBACA9uF,UACA0c,QACAsyE,gBACAE,yBACD,GA/NejlH,EA52CuB4mH,EACzC/hH,UACAgiH,+BACA91D,gCACA5B,gCACA0uC,QACA34F,YACA8E,aACAk2G,iBACA4G,aACAxP,YACAyP,kBACAC,cACA5G,iBACA5kD,YACAyrD,gBACAC,yBACA/G,wBACA76G,kBACA0gH,mBACAmB,gBACAviH,SACA+7G,mBACA13F,UACA43F,iBACAC,gBACAC,aACAG,eACAK,mBACAC,gBACAG,sBACAE,6BACAC,oBACAG,cACAF,kBACAG,eACAh9D,kBACAngD,kBACAy+G,qBACA8C,qBACAhgE,eACA8+D,mBACAhD,aACAE,kBACAK,gBACAH,oBACAI,wBACAH,uBACA/5F,gBACAc,kBACA0/B,iBACAE,uBACAxyB,aACA4pF,WACAtc,YACA6e,aACA12C,iBACA62C,uBACAkB,sBACA+B,iBACAliB,kBACA7+F,cACAkgH,mBACAvkG,YACA4iG,mBACArtF,sBACAsvF,mBACAjc,2BACAjiF,mBACA89F,gBACA9gD,YACAr/D,iBACA4oG,oBACAwX,oBACAC,sBACA3nE,yBACAq5D,qBACAwM,qBACAwD,wBACApG,qBACA+C,gBACAD,gBACAjzD,oBACAszD,0BACA8B,4BACAhC,gCACAnzD,oCACAu1D,uBACA3F,gBACAvkB,eACAmI,yBACApmD,sBACAmmE,gBACAqC,QACA9B,sBACAC,kBACA9uF,UACA0c,QACAsyE,gBACAE,yBACAoC,gCAEA,MAAM,uBACJhgB,GAAsB,qBACtB9gF,GAAoB,uBACpB+gG,GAAsB,sBACtBC,GAAqB,iBACrBxiD,GAAgB,iBAChByiD,KACEhmH,EAAAA,EAAAA,MAGEyB,IAAMiE,EAAAA,EAAAA,IAAuB,MAE7BugH,IAAkBvgH,EAAAA,EAAAA,IAAuB,MAEzCk9F,IAAmBl9F,EAAAA,EAAAA,IAAuB,MAE1CzF,IAAOC,EAAAA,EAAAA,MAEN6D,GAAuBmiH,KAA0BlgH,EAAAA,EAAAA,KAAS,IAC1DmgH,GAAwBC,KAA6BpgH,EAAAA,EAAAA,KAAS,IAC9DqgH,GAA0BC,KAA+BtgH,EAAAA,EAAAA,KAAS,IAClEouB,GAAkBmyF,GAAeC,KAAc5lG,EAAAA,EAAAA,MAChD,SAAEhb,GAAQ,cAAEy9E,KAAkBx9E,EAAAA,EAAAA,OAEpC4vE,EAAAA,EAAAA,IAAewwC,GAAiBZ,GAEhC,MAAM,kBACJ76F,GAAiB,kBACjBC,GAAiB,kBACjBg8F,GAAiB,wBACjB75E,GACAliB,kBAAmB4B,GAAa,uBAChC3B,GAAsB,sBACtBC,KACEC,EAAAA,EAAAA,GACFppB,GACA4hF,IAAiBof,IAChBkG,EAAAA,GACD3f,EAAAA,GACA8Z,KAGF3hG,EAAAA,EAAAA,KAAU,KACJqpB,IACFs7F,IACF,GACC,CAACt7F,GAAmBs7F,KAEvB,MAAMY,GAAwBnB,GAAmB,GAC1Cl7F,GAASs8F,KAAa/lG,EAAAA,EAAAA,GAAQ8lG,KACrCvlH,EAAAA,EAAAA,KAAU,KACJulH,IAIJ3nG,WAAW4nG,GAAWpB,EAAkBqB,EAAAA,IAAyB,GAChE,CAACrB,EAAiBoB,GAAWD,MAEhCG,EAAAA,EAAAA,GAAkB,CAChBplH,OACAG,OAAQyoB,IAAWm7F,EACnBsB,kBAAmBJ,KAA0BlB,EAC7C5lH,WAAW,IAGb,MACEP,GAAIkP,GAAS,OAAE7P,GAAM,YAAEqpB,GAAW,SAAE82F,GAAQ,qBAAE56G,GAAoB,UAAE0nG,IAClEtoG,GAEJw2F,EAAAA,EAAAA,KAAkB,KAChB,GAAIx2F,EAAQ6/D,SAAU,CACpB,MAAM7jE,EAAKg9F,EAAQA,EAAM0K,YAAY1nG,GAAKkP,GAC1Cs3G,KAA2B,CAAEkB,0BAA2B,CAAC1nH,IAC3D,KAGF,MAAM0pC,IAAU7gC,EAAAA,EAAAA,IAAe7E,GACzB+E,IAAQC,EAAAA,EAAAA,IAAahF,GACrB4c,GAAkC,cAApBiG,IAAmC7iB,EAAQ4c,YACzD+mG,IAAkBC,EAAAA,EAAAA,IAAiB5jH,KAAa08G,IAEhD,UAAEtjB,KAAcC,EAAAA,EAAAA,IAAkBr5F,IAChCksB,MAAO23F,GAAgB/hH,MAAOgiH,IAAmB5rB,EAAqBkB,KAExE,MACJltE,GAAQ23F,GAAc,MAAE/hH,GAAQgiH,GAAc,MAAEniH,GAAK,MACrDE,GAAK,SAAE+M,GAAQ,QAAEy+B,GAAO,QAAEo6D,GAAO,QACjCp7E,GAAO,QAAEshF,GAAO,SAAEoC,GAAQ,OAC1BlpF,GAAM,KAAEwiF,GAAI,UAAE9jF,GAAS,SAAEokF,GAAQ,gBACjCS,KACE/Q,EAAAA,EAAAA,IAAkBr5F,GAEhB+jH,IAAmBzH,EAAAA,EAAAA,GAAoBt8G,GACvCgkH,IAAiBvH,EAAAA,EAAAA,GAAkBz8G,GAEnCikH,GAAyBhoH,SAASyE,KAA0BE,IAAwBugH,KAEpF+C,GAAgBjoH,QAAQ+nH,IACxBG,GAAYloH,QAAQs2G,KAA0C,WAApB1vF,GAC1CgkF,IAAiBod,KAA0BG,EAAAA,EAAAA,IAAsBpkH,GACjEqkH,GAAmBxd,KAAkBr/B,IAAiB62C,IACtDiG,GAAexF,IAAiBztF,aAAckzF,EAAAA,EAAAA,GAAkBzF,GAAgBztF,WAChFmzF,GACJ9/F,MACKC,IAAkB/H,MACnBynC,KACA3/B,GAAY+/F,sBACZlgE,KACA23D,IACDjgH,QAAQspB,KAAcA,GAAUm/F,WAC/BC,GAAsB1oH,QAAQujH,MAAkBgF,IAAejJ,EAC/DqJ,GAAiBr/F,IAAWm/F,UAC5Bj4D,GAAoC,UAArB3qD,IAAO4iG,WAAyB5iG,GAAM+2G,QACrDgM,GAAU5oH,QAAQ+8F,KAEnBA,EAAMQ,aAAeJ,GAAWjB,cAAct5F,OAAS,GACrDm6F,EAAME,SAASr6F,OAAS,KACvBm6F,EAAME,SAAS/zE,MAAM2/F,GAA4C,IAApCrnH,OAAO4nB,KAAKy/F,EAAIpjH,SAAS7C,SACxDkmH,GAA4BpG,KAAsB0D,EAClD2C,GAA2BrG,KAAsBrD,EACjDhc,QAA2CvjG,IAAtBqrB,GACrB69F,KACF3lB,IAAsBF,IAAkBv7E,IACtCmhG,IACAJ,KACEv3E,IAAWg3E,KAAqBG,IAElCU,GAAanzF,KAAcnV,IAAe5c,EAAQmlH,sBACpD5E,GACE6E,GAAWnpH,QAAQ0kH,IACnBj8F,KACEA,GAAYG,eAAiBF,IAAkB0/B,IAAiBE,KACjE7/B,GAAY2gG,eAGbC,GAAerpH,QAAQqsG,IAAWjyF,MAElCkvG,GAA0Bf,IAAe3d,GACzC2e,GAAevG,IAAgB0E,IAAmBO,IAAiBqB,GAEnEpmB,IAAgBp7F,EAAAA,EAAAA,IAAgB,CAACuG,EAAkD8M,KACvForF,GAAuB,CACrBt3F,aACAkM,eACI9M,GAAGk0E,UAAY,CAAEkkB,WAAW,MAC5BmiB,IAAW,CAAEY,gBAAiBzsB,EAAOE,SAASt7F,KAAI,EAAG5B,QAASA,MAClE,IAGEqiE,GAAgB29C,GAAgB53F,QAASroB,EAIzC2pH,GAF2BhhG,KAC3BC,IAAkB0/B,IAAiBE,KAAwB8Z,IACnB49C,GAAe59C,GAEvDsnD,GAAmBnB,GAAcvI,GAAe73F,GAChD2nC,GAAehnD,KAAU8hG,GAEzB+e,GAAclhG,IAAea,GAAa02F,GAAe59C,GACzDl7D,IAASC,EAAAA,EAAAA,IAAcpD,IAEvB,gBACJstD,GAAe,YACfnS,GAAW,kBACX9zB,GAAiB,kBACjB25E,GAAiB,yBACjBC,GAAwB,gBACxBf,GAAe,wBACfgB,GAAuB,iBACvBzjF,GAAgB,SAChBqiF,GAAQ,uBACRH,GAAsB,8BACtB2B,IACEpC,GACFC,GACA/gG,GACA8M,GACAjP,QAAQmjG,IACRnjG,QAAQojG,IACRpjG,QAAQwlD,IACRx4B,GACAsgB,GACAluC,GACAikG,GACAC,GACAylB,GACAvlB,KAGI,kBACJomB,GAAiB,kBACjBC,GAAiB,iBACjBC,GAAgB,iBAChBC,GAAgB,oBAChBC,GAAmB,gBACnBC,GAAe,sBACfC,GAAqB,sBACrBC,GAAqB,sBACrBC,GAAqB,gBACrBC,GAAe,uBACfC,GAAsB,iBACtBC,GAAgB,gBAChBC,GAAe,mBACf3iB,GAAkB,eAClB4iB,GAAc,mBACdC,GAAkB,cAClBC,GAAa,YACbC,GAAW,qBACXC,GAAoB,6BACpBC,GAA4B,qBAC5BC,GAAoB,iBACpBC,IC3mBW,UAA0B,KACvCrqH,EAAI,cACJuiG,EAAa,QACbn/F,EAAO,OACP3E,EAAM,SACN6gB,EAAQ,kBACRyiG,EAAiB,YACjB6F,EAAW,YACX5nG,EAAW,MACXo8E,EAAK,WACL4sB,EAAU,UACV1J,EAAS,aACTgD,EAAY,kBACZgI,EAAiB,MACjBv3F,EAAK,eACLutF,EAAc,cACd74D,EAAa,gBACbpQ,EAAe,sBACfmsE,IAsBA,MAAM,SACJpgD,EAAQ,iBAAEntD,EAAgB,aAAEsT,EAAY,gBAAEu4B,EAAe,gBAAEyoE,EAAe,iBAC1EC,EAAgB,kBAAE3jB,EAAiB,aAAE4jB,EAAY,gBAAEC,EAAe,sBAClExqC,EAAqB,WAAE5mD,EAAU,gBAAEqhE,EAAe,wBAAEgwB,IAClD5qH,EAAAA,EAAAA,OAGFX,GAAIkP,EAAS,YAAEwZ,EAAW,UAAEtN,EAAW1V,SAAS,UAAE03F,EAAS,MAAEt3F,EAAK,QAAEuqB,IAClErsB,GAEE,aACJskB,EAAY,cAAEJ,EAAa,aAAEsjG,EAAY,QAAE76D,EAAO,UAAE5nC,IAClDu3F,EAAAA,EAAAA,GAAoBt8G,IAAY,CAAC,EAE/B6lH,GAAoB9hH,EAAAA,EAAAA,IAAgB,KACnC6hH,EAMDpB,GAAe9/F,GAAa+iG,cAC9BthG,EAAa,CAAE9qB,OAAQuqH,EAAW5pH,GAAIkP,UAAWwZ,EAAY+iG,gBAE7DznD,EAAS,CAAEhkE,GAAI4pH,EAAW5pH,KAR1B6W,EAAiB,CAAE7S,QAASpD,EAAK,eASnC,IAGIkpH,GAAoB/hH,EAAAA,EAAAA,IAAgB,KACnCm4G,GAILl8C,EAAS,CAAEhkE,GAAIkgH,EAAUlgH,IAAK,IAG1B+pH,GAAmBhiH,EAAAA,EAAAA,IAAgB,KAClCugB,IAAgB44F,EAOjB74D,GAAiBngC,GAAiBsjG,EACpCtxF,EAAW,CACTkxE,YAAY,EACZD,gBAAiBjjF,EACjB+iF,gBAAiBugB,EACjBE,eAAgBpjG,IAKpB6B,EAAa,CACX9qB,OAAQ6oB,GAAiB7oB,EACzB6gB,SAAUmoC,EAAgBmjE,EAAetrG,EACzChR,UAAWoZ,EACXqjG,eAAgBzjG,OAAgBnoB,EAAYmP,EAC5C6c,mBAAoB7D,KAChByoC,GAAW,CAAEkxD,MAAO94F,GAAW1O,QAtBnCxD,EAAiB,CACf7S,QAAmBpD,EAAV+vD,EAAe,eAAuB,iBAsBjD,IAGEs5D,GAAsBliH,EAAAA,EAAAA,IAAgB,KAC1C26C,EAAgB,CACdrjD,SACA6gB,WACAhR,YACA/K,OAAQyc,EAAcwiC,EAAAA,GAAkBwoE,gBAAkBxoE,EAAAA,GAAkBzzC,QAC5E,IAGEk8G,GAAkC9jH,EAAAA,EAAAA,IAAiB+jH,IACvD,GAAI1uB,IAAcA,EAAUyb,SAAU,OAClCiT,GACFP,EAAwB,CAAElsH,SAAQ6gB,WAAU6rG,sBAAuB78G,IAGrE,MAAMghC,EAAa7f,GAAShB,MAAO8gB,EAAAA,EAAAA,IAAiB9f,EAAQhB,KAEtD28F,EAAelmH,GAASuqB,GAASvqB,MACjCmmH,EAAmB/7E,GAAc,cAAeA,EAAaA,EAAW2N,eAAY99C,EAE1F2iD,EAAgB,CACdrjD,SACA6gB,WACAhR,YACA/K,OAAQyc,EAAcwiC,EAAAA,GAAkBwoE,gBAAkBxoE,EAAAA,GAAkBzzC,OAC5EkuC,UAAWumE,GAAyB4H,GAAcnuE,WAAaouE,EAC/DH,sBACA,IAEE1B,IAAwBriH,EAAAA,EAAAA,IAAgB,KAE5C8jH,GAD4BjrG,IAAgBw8E,EACO,IAE/CitB,IAAwBtiH,EAAAA,EAAAA,IAAgB,KAC5C,MAAMu+C,EAAQtiD,EAAQ0B,SAASI,OAAOwgD,MAEtCulE,GAD4BvlE,IAAU1lC,IAAgBw8E,EACH,IAG/C4sB,IAAmBjiH,EAAAA,EAAAA,IAAgB,OACzBoa,EAAAA,EAAAA,IAAgBne,KAAYoe,EAAAA,EAAAA,IAAuBpe,KAE/DomH,KAGFC,IAAuB,IAGnBH,IAAkBniH,EAAAA,EAAAA,IAAgB,KACtCojH,EAAgB,CAAE9rH,SAAQ6P,aAAY,IAGlCi7G,IAAwBpiH,EAAAA,EAAAA,IAAgB,CAACmkH,EAAwBC,KACjE/uB,IAAcA,EAAUyb,WAE5B0S,EAAwB,CAAElsH,SAAQ6gB,WAAU6rG,sBAAuB78G,IACnEwzC,EAAgB,CACdrjD,SACA6gB,WACAhR,UAAWg9G,EACX/oE,WAAYgpE,EACZhoH,OAAQyc,EAAcwiC,EAAAA,GAAkBgpE,eAAiBhpE,EAAAA,GAAkBkkD,MAC3EwkB,oBAAqB1uB,IACrB,IAGEqtB,IAAkB1iH,EAAAA,EAAAA,IAAgB,KACtCqjH,EAAiB,CAAEnkG,WAAY,CAAC/X,IAAa,IAGzC44F,IAAqB//F,EAAAA,EAAAA,IAAgB,KACzC0/F,EAAkB,CAAEpoG,SAAQ6P,aAAY,IAGpCw7G,IAAiB3iH,EAAAA,EAAAA,IAAiBu/E,IACtC+jC,EAAa,CAAEhsH,SAAQ6P,YAAWo4E,WAAU,IAGxCqjC,IAAqB5iH,EAAAA,EAAAA,IAAgB,KACzCujH,EAAgB,CAAEvkG,WAAY1nB,EAAQ+b,aAAY,IAG9CwvG,IAAgB7iH,EAAAA,EAAAA,IAAgB,KACpC,GAAIi1F,GAASA,EAAME,SAAU,CAC3B,MAAMj2E,EAAa+1E,EAAME,SAASt7F,KAAI,EAAG5B,QAASA,IAClDsrH,EAAgB,CAAEvkG,WAAY1nB,EAAQ4nB,cACxC,MACEqkG,EAAgB,CAAEvkG,WAAY1nB,EAAQ4nB,WAAY,CAAC/X,IACrD,IAGI27G,IAAc9iH,EAAAA,EAAAA,IAAgB,KAClCoiB,EAAa,CACX9qB,SAAQ6gB,SAAUiU,EAAAA,GAAgBjlB,aAClC,IAGE47G,IAAuB/iH,EAAAA,EAAAA,IAAgB,KAC3C,MAAMskH,EAAkBp0E,GAAmBvvB,EAAa4jG,iBAAoB5jG,EAAa3B,WAErF47F,EACFx4F,EAAa,CACX9qB,OAAQgtH,EAAgBjxG,YAAWmxG,cAAeltH,EAAQ6P,UAAWwZ,EAAa2gG,gBAKlFnhG,GAAiBsjG,EACfnjE,EACFnuB,EAAW,CACTkxE,YAAY,EACZD,gBAAiBjjF,EACjB+iF,gBAAiBugB,EACjBE,eAAgBhjG,EAAa2gG,gBAG/Bl/F,EAAa,CACX9qB,OAAQ6oB,EACRhI,SAAUsrG,EACVt8G,UAAWwZ,EAAa2gG,gBAI5Bl/F,EAAa,CACX9qB,OAAQgtH,EAAgBn9G,UAAWwZ,EAAa2gG,eAEpD,IAGImD,IAAsBzkH,EAAAA,EAAAA,IAAiBuG,IAC3CA,EAAEM,kBAEFu0F,EAAc70F,EAAG8M,EAAU,IAGvBmvG,IAAyBxiH,EAAAA,EAAAA,IAAiBuG,IAC9CA,EAAEM,kBAEFkyE,EAAsB,CAAEzhF,SAAQ6P,UAAYg8G,OAAgCnrH,EAAZmP,GAAwB,IAGpFs7G,IAAmBziH,EAAAA,EAAAA,IAAgB,KACvCmyB,EAAW,CACT76B,OAAQ2E,EAAQ3E,OAChB6gB,SAAUlc,EAAQhE,IAClB,IAGEgrH,IAAuBjjH,EAAAA,EAAAA,IAAgB,KACtCm7G,GACL/4F,EAAa,CACX9qB,OAAQ6oB,GAAiB7oB,EACzB6gB,SAAUgjG,EAAaljH,GACvBkP,aACA,IAGE+7G,IAAmBljH,EAAAA,EAAAA,IAAgB,KAClC4rB,GACL4nE,EAAgB,CACd7tD,OAAQ/Z,EAAM+Z,OACdhd,QAASiD,EAAM3zB,GACfg8F,eAAe,GACf,IAGJ,MAAO,CACL6tB,oBACAC,oBACAC,mBACAE,sBACAD,oBACAE,mBACAC,yBACAC,yBACAC,yBACAC,gBAAiBkC,GACjBjC,0BACAC,oBACAC,mBACA3iB,sBACA4iB,kBACAC,sBACAC,iBACAC,eACAC,wBACAC,6BAA8ByB,GAC9BxB,wBACAC,oBAEJ,CDsUMwB,CAAiB,CACnB7rH,QACAuiG,iBACAn/F,UACA3E,UACA6gB,YACAyiG,qBACA6F,eACA5nG,eACAo8E,QACA0sB,cACAE,cACA1J,aACAgD,gBACAgI,kBAAmBjrH,QAAQgwD,IAC3Bt8B,MAAOytF,IAAc,YAAaA,GAAaA,QAAarhH,EAC5DmhH,kBACA74D,iBACApQ,gBAAiBtvB,GACjBy7F,2BAGIsI,IAAoB3kH,EAAAA,EAAAA,IAAiBuG,IACzCA,EAAEM,kBAEFs4G,IAAe,KAGjBplH,EAAAA,EAAAA,KAAU,KACHwkH,IAID2B,IAA0B9C,IAC5BjhD,IACF,GACC,CAACA,GAAkBoiD,GAAcnB,GAAiB8C,MAErDnmH,EAAAA,EAAAA,KAAU,KACR,MAAMwwC,EAAUlwC,GAAIyJ,QACd8gH,EAAuB3oH,EAAQmX,WAAa6hF,GAAOE,SAAS/zE,MAAM2/F,IAASA,EAAI8D,aACjF5oH,EAAQ4oH,YAAct6E,IAAYq6E,KAChCtxC,EAAAA,GAAAA,GAAY/oC,GACdy0E,IAA0B,GAE1BE,IAA4B,GAEhC,GAEC,CAACjjH,EAAQ4oH,aAEZ,MAAMC,GAAc7vB,GAAO8vB,yBAAsB/sH,EAAai9F,GAAO+vB,gBAAkB/oH,EACjFgpH,GAAiBH,KAAeI,EAAAA,EAAAA,IAAeJ,IAC/CryG,GAAUwyG,IAAkB1D,GAE5B4D,IAAqBvqH,EAAAA,EAAAA,GACzB,4BACA48G,GAAkB,iBAClB95D,IAAe,gBACfA,KAAgBunE,GAAiB,eAAiB,kBAClD5G,GAAiB,gBACjBC,GAA0B,0BAC1B/G,GAAyB,yBACzBgH,IAAgB,eAChBv9G,IAAS,MACT9I,QAAQ+D,EAAQyzG,aAAe,YAC/BzzG,EAAQqzG,UAAY,aACpBsQ,IAAmB,YACnBx8F,IAAqB,gBACrBo2F,KAAcI,IAAoB,UAClC95F,IAAgB,gBAChBm/F,IAA4B,cAC5BF,IAA0B,gBAC1BnE,IAAqB,uBACrBkG,IAAW,WACX7kH,EAAQmpH,kBAAoB,qBAC5B5oH,IAAc,cACd6+F,IAAkB,uBAClBid,KAAgBl3G,GAAc,gBAC9BlJ,QAAQ+D,EAAQ0pG,gBAAkB,qBAClC5J,IAAY,YACZqiB,GAAe,iBACd5C,IAAsBxuF,KAAqB,oBAC5C6zF,IAAkB,oBACjBK,IAAuB,oBAGpB5uG,GAAOwyG,KAAexvB,EAAAA,EAAAA,IAAkBwvB,IAAaxyG,KACrDuU,GAAkB3uB,QAAQ+D,EAAQ4qB,kBAElC,aAAEtG,GAAY,cAAEJ,GAAa,QAAEyoC,IAAYo3D,IAAoB,CAAC,GAC9Dr6E,OAAQ6yE,GAAkB7vF,QAAS8vF,IAAiBwH,IAAkB,CAAC,GAE/ElmH,EAAAA,EAAAA,KAAU,MACHuvC,IAASgsE,WAAanoF,MACzBqxF,IAAsB16G,SAAWqD,IAAaq3G,GAAqB16G,SAChE69B,KACHw9E,IACF,GACC,CAAChyF,GAAQwU,GAAS68E,GAAsBr3G,GAAWmiC,IAASgsE,YAE/D,MAAMh9B,GE3tBO,SAAyBhmE,EAAe+L,EAAsBgnG,GAC3E,MAAO77F,EAAU87F,IAAe1mH,EAAAA,EAAAA,MAYhC,OAVA7E,EAAAA,EAAAA,KAAU,KACJskB,GAAegnG,IAAeA,MAE9B/yG,EtCiBDpD,eAA8BoD,EAAcizG,EAnBzB,IAsBxB,OAFKxrB,SAAcC,EAAuBwrB,cACrBzrB,EAAQ0rB,QAAQ,CAAE98G,KAAM,iBAAkB8/B,KAAM,CAACn2B,EAAMizG,IAE9E,CsCpBMG,CAAepzG,GAAMgyE,KAAKghC,GAE1BA,OAAYttH,GACd,GACC,CAACqmB,EAAY/L,EAAM+yG,IAEf77F,CACT,CF6sB2Bm8F,CACvBrzG,IAAMA,OACJipG,IAA0B8B,IAC5B3hB,KnC3sBW,SACbz/F,EAAqBq8E,EAA2Bj6D,EAAsBgnG,IAEtEtrH,EAAAA,EAAAA,KAAU,KACR,GAAIskB,GAAegnG,IAAeA,IAAe,OAEjD,MAAMvqB,EAAiB5iG,QAAQ+D,EAAQ0B,QAAQ2U,MAAMA,KAAKxX,SAO9D,SAAgCxD,EAAgBW,EAAY6iG,EAAyBxiB,GACnF,MAAMmiB,EAAYJ,EAAWrmE,IAAI18B,IAAW,IAAIsuH,EAAAA,EAxB3B,KA0BfC,EAAmBprB,EAAUzmE,IAAI/7B,GACnC4tH,GAAoBA,EAAiBvtC,mBAAqBA,GACzDutC,EAAiB/qB,iBAAmBA,IAKzCL,EAAUjW,IAAIvsF,EAAI,CAChBA,KACA6iG,iBACAxiB,qBAGF+hB,EAAW7V,IAAIltF,EAAQmjG,GAEvBH,EAA0BhjG,GAC5B,CAzBIwuH,CAAuB7pH,EAAQ3E,OAAQ2E,EAAQhE,GAAI6iG,EAAgBxiB,EAAiB,GACnF,CAACr8E,EAASq8E,EAAkBj6D,EAAYgnG,GAC7C,CmCosBEU,CAAsB9pH,EAASq8E,IAAmB+kC,GAA0B3hB,IAE5E,MAAM3yC,IAAkBC,EAAAA,EAAAA,IAAsB/sD,GAAUisD,KAChDi1D,UAAW6I,GAAoB,eAAE/8D,KAAmBC,EAAAA,EAAAA,GAC1DjB,GAAkB3wD,GAAQyxD,GAAkB5hD,QAAYnP,EAAWqjH,IAG/D4K,IAAyBpyF,EAAAA,EAAAA,GAAsBo1B,GAAgB/wD,QAAQ6wD,KAEvEm9D,GAAwBj9D,IAAkBg9D,GAE1C/V,GAA6B,cAAjBptF,IAAQ9N,KAAuB8N,QAAS9qB,EAEpDmuH,IAA4B3X,IAAsB+O,IAAiBvvF,IAAa2T,MAChFs/E,IACmB,WAApBniG,KACCo/F,EACAkI,GAAoB5X,IAAmBmP,iBACvCsD,IAAgD,WAApBniG,KAC5Bo/F,EACAmI,IAA2BpqC,KAAkBi0B,KAAc7U,IAAkB2hB,KAC7EiE,KAA6BJ,KAAmBzhH,GAEhDknH,IAAuBpG,IAA0BK,KACjDzd,KAAmB36E,IAASpqB,IAASyjB,IAAsC,QAAxBwqF,IAAUrL,aAA0BluF,IAEvFxK,GGzvBD,SACLhM,EACAg5F,GACA,KACEprD,EAAI,aACJ43E,EAAY,cACZ3e,EAAa,cACbub,EAAa,YACboC,EAAW,UACXL,EAAS,gBACTrI,EAAe,kBACfwO,EAAiB,iBACjBC,EAAgB,gBAChBC,EAAe,aACflG,EAAY,gBACZmG,EAAe,uBACfxG,EAAsB,eACtByG,EAAc,oBACdL,GAiBE,CAAC,GAEL,MAAM,UAAEjxB,IAAcC,EAAAA,EAAAA,IAAkBr5F,IAChCksB,MAAO23F,EAAgB/hH,MAAOgiH,GAAmB5rB,EAAqBkB,GAExE13F,GAAU23F,EAAAA,EAAAA,IAAkBr5F,IAC5B,MACJksB,EAAQ23F,EAAc,MAAE/hH,EAAQgiH,EAAc,MAC9CniH,EAAK,MAAEE,EAAK,SAAE+M,EAAQ,QAAEyd,EAAO,QAAEo7E,EAAO,SAAEsI,EAAQ,QAAEpC,EAAO,UAAEpoF,EAAS,SACtEokF,EAAQ,gBAAES,GACR1oG,EACE2U,EAAO2iF,GAAO8vB,yBAAsB/sH,GAAYs9F,EAAAA,EAAAA,IAAkBL,GAAO+vB,gBAAkB/oH,GAASqW,KACpGivG,EAAerpH,QAAQ+D,EAAQsoG,WAAWjyF,MAE1Co2C,EAAoC,UAArB3qD,GAAO4iG,WAAyB5iG,EAAM+2G,QACrDjuF,EAAkB5qB,EAAQ4qB,gBAC1B+/F,EAAoBz+F,GAAUpqB,IAAU2qD,GAAiBusC,GAAS3sE,EAElEu+F,EAAa,CAACC,EAAAA,KACdC,EAAUvlG,GAAa2G,GAASpqB,GAASiuG,GAAYpC,GAASxV,eAAiBiB,EAC/E5iF,EAAUH,GAAgC,UAAxB05F,GAAUrL,WAAyB+lB,GAAmBnF,EACxEyF,EAAoBD,IAAYt0G,EAChCw0G,EAAoB/uH,QAAQ+D,EAAQ0pG,eACpCuhB,EAAWhvH,QAAQ+D,EAAQw7G,UAE3B0P,EACAtgG,GAAmB+/F,KACjBrG,GAAiB+F,MACjB/E,MACAj5F,IAAW7V,GAGVA,EA+IT,OA5IIk0G,GACFE,EAAW7+G,KAAK2+G,IAGbI,GAAW9qH,EAAQmrH,gBACtBP,EAAW7+G,KAAK,cACZ/L,EAAQmrH,gBAAkBC,EAAAA,KAC5BR,EAAW7+G,KAAM,cAAa/L,EAAQmrH,mBAE/B30G,EACTo0G,EAAW7+G,KAAK,QAEhB6+G,EAAW7+G,KAAK,WAGbtO,OAAO4nB,KAAK3jB,GAAS7C,QACxB+rH,EAAW7+G,KAAK,eAGdy+G,GACFI,EAAW7+G,KAAK,qBAGd86F,IACF+jB,EAAW7+G,KAAK,gBAEZ0gD,GACFm+D,EAAW7+G,KAAK,SAGdu+G,GACFM,EAAW7+G,KAAK,wBAGhB++G,IAAY7G,EACd2G,EAAW7+G,KAAK,SACPjK,EACT8oH,EAAW7+G,KAAK,SACPpK,EACTipH,EAAW7+G,KAAK,SACPlK,GACT+oH,EAAW7+G,KAAK,SACZk4G,GACF2G,EAAW7+G,KAAK,6BAET6C,EACTg8G,EAAW7+G,KAAK,YACP07F,EACTmjB,EAAW7+G,KAAK,WACP6hC,EACTg9E,EAAW7+G,KAAK,QACP49F,GAAYS,EACrBwgB,EAAW7+G,KAAK,YACPsgB,IACTu+F,EAAW7+G,KAAK,aAEZsgB,EAAQH,OAASG,EAAQvqB,QAC3B8oH,EAAW7+G,KAAK,SAGdsgB,EAAQzd,UACVg8G,EAAW7+G,KAAK,YAGdsgB,EAAQg/F,MACVT,EAAW7+G,KAAK,SAIhB4hG,IAAYA,EAAQxV,eACtByyB,EAAW7+G,KAAK,WAGd4hG,GAAWA,EAAQzhF,OACrB0+F,EAAW7+G,KAAK,aAGdwZ,GACFqlG,EAAW7+G,KAAK,SAGdy4G,GACFoG,EAAW7+G,KAAK,gBAGdy5G,GACFoF,EAAW7+G,KAAK,iBAGdo4G,GACFyG,EAAW7+G,KAAK,eAGdu4G,GACFsG,EAAW7+G,KAAK,iBAGds+G,GACFO,EAAW7+G,KAAK,yBAGdk/G,GACFL,EAAW7+G,KAAK,cAGd+vG,GACF8O,EAAW7+G,KAAK,qBAGb86F,IACH+jB,EAAW7+G,KAAK,cAEZ++G,GAAW3G,GACbyG,EAAW7+G,KAAK,mBAGdy5G,GAAgBhB,GAAeyG,IAAaF,GAC3CjP,GAAmBwJ,GAAgBrB,IACtC2G,EAAW7+G,KAAK,wBAGdu5G,GACFsF,EAAW7+G,KAAK,mBAGdq2G,GAAkB4I,IAAsB9+F,GAAU6+F,IAAqBR,GACzEK,EAAW7+G,KAAK,iBAIhB4+G,GAAqB//F,GACvBggG,EAAW7+G,KAAK,qBAGdm/G,EACFN,EAAW7+G,KAAK,cAEhB6+G,EAAW7+G,KAAK,aAGX6+G,EAAWvrG,KAAK,IACzB,CHsiB2BisG,CAAsBtrH,EAASg5F,EAAO,CAC7DprD,QACA43E,gBACA3e,iBACAub,gBACAoC,eACAL,UAAWA,KAAclC,EACzBnG,mBACAwO,kBAAmBnG,IAAa5R,GAAkBj1D,cAAgB,EAClEitE,iBAAkBJ,GAClBK,gBAAiBtF,IAAcE,GAC/Bd,gBACAmG,gBAAyC,YAAxB1a,IAAUrL,aAA4BwL,EAAAA,EAAAA,IAAiBlwG,GACxEikH,0BACAyG,gBAAgBhiG,EAAAA,EAAAA,GAAkBi9F,GAAkB55D,IAAc,GAClEs+D,yBAGIkB,GAAev/G,GAAiBgU,SAAS,gBACzCmuC,IAAYg4C,EAAAA,EAAAA,IAAmBnmG,EAAQmrH,gBAE7C,IAAIK,GAaAC,GAXFD,GADEvX,IAEO+Q,GADM,QAGNxuG,IAAY6V,IAAY8hC,IAAcvjC,GAEtCA,KAAoBujC,KAAcm3D,IAAgBj5F,IAC5C,UAEA,aAJA,UAQbi4F,GACE+F,GACFoB,GAAoB,UACXjH,IACTgH,GAAe,aACfC,GAAoB,UAEpBA,GAAoB,SAGtBA,GAAoB,OAGtB,MAAMC,GAA+C7kB,GAAgB,UAAY,cAEjFnlC,EAAAA,EAAAA,GACEx9C,IAAiB7oB,GACjBipB,GACAq4F,GACA38G,EAAQhE,GACR0gH,IAAmB/vD,IAAWuwD,KAGhC3nC,EAAAA,EAAAA,GACEgnC,IAAoBlhH,GACpBmhH,GACAY,KAGFuO,EAAAA,EAAAA,GAAgB,CACd5vE,WAAY39C,GACZ/C,UACAkiH,aACAE,kBACAE,oBACAC,uBACAuE,cACAx1D,QAAS1wD,QAAQ6hH,IACjBC,0BAGF,MAAM6N,GAAsB5L,IAAiB9yD,EAAAA,EAAAA,IAAatwD,GAAMojH,SAAkBjkH,EAE5E8vH,IAAqB7rH,EAAQg3E,SAC7Bq7B,GAAYuZ,IAAwBC,IAAqB7rH,EAAQ8rH,kBAChEtH,IAAe7/F,KAAmBD,IAAaonG,sBACjD/vH,GAELgwH,EAAAA,EAAAA,GAAyB3tH,GAAKkkH,KAE9BxkH,EAAAA,EAAAA,KAAU,KACR,MAAMkuH,EAAepJ,GAAgB/6G,QACrC,IAAKmkH,KAAiBC,EAAAA,EAAAA,GAAoBD,GAAe,OAErDjN,IACF2D,GAAsB,CAAEz/F,WAAY,CAAC/X,MAGvC,IAAIghH,EAA6B,GAC7BlsH,EAAQmpH,mBACV+C,EAAmB,CAAChhH,KAGlB8tF,IACFkzB,EAAmBlzB,EAAME,SAASr7F,QAAQinH,GAAQA,EAAIqE,mBAAkBvrH,KAAKknH,GAAQA,EAAI9oH,MAGvFkwH,EAAiBrtH,QACnB8jH,GAAiB,CAAEtnH,UAAQ4nB,WAAYipG,GACzC,GACC,CAACnN,GAAmB/lB,EAAO39F,GAAQ6P,GAAWw3G,GAAuB1iH,EAAQmpH,mBAEhF,MAAM3lB,IAActmG,EAAAA,EAAAA,KAAQ,IACnB2nH,GACH9rB,EAAqBh0F,GAAO9I,QAAQoE,GAAY24F,EAAQz2F,SACxDxG,GACH,CAAC8oH,GAAS9/G,GAAO1E,EAAW24F,EAAOz2F,KAEhC4pH,GAAe3H,KAAgB3d,GAAgB,GAAK,EAEpDulB,IAAmBlvH,EAAAA,EAAAA,KAAQ,KAC/B,IAAImvH,EACAC,EAGAC,EAFAC,GAAiB,EACjB3sH,EAAQ,GAGZ,IAAKglH,KAAY34F,IAASpqB,IAAS6rG,IAASxV,eAAgB,CAC1D,IAAIlwF,EACJ,GAAIikB,IAASpqB,GAAO,CAClB,MAAMG,EAASiqB,IAASpqB,GACpBG,IAAUwqD,KACZxkD,GAAQqxF,EAAAA,EAAAA,IAAyB,CAC/Br3F,QACA8C,SACAy/G,eACAnkH,YACAkC,cACC0F,MAEP,MAAO,GAAI0lG,IAASxV,eAClBwV,GAAQxV,cAAclwF,OAAS0lG,GAAQxV,cAAcjwF,OACpD,CACD,MAAQD,MAAOwkH,EAAcvkH,OAAQwkH,GAAkB/e,GAAQxV,cAC/DlwF,GAAQ0kH,EAAAA,EAAAA,IAAmC,CACzC1kH,MAAOwkH,EACPvkH,OAAQwkH,EACRE,eAAgB7nH,GAChBy/G,eACAnkH,YACAkC,cACC0F,KACL,CAEIA,IACEA,EAAQ4kH,EAAAA,KACVP,EAAerkH,GAEjBokH,EAAkB3mH,KAAKgD,KAAIokH,EAAAA,EAAAA,IAAiBz2G,IAAMA,KAAM6zG,IAA2BjiH,IAC9Eu8G,IAAe7W,IAASxV,eAAiBk0B,EAAkBpkH,EA5lBrC,KA6lBzBukH,GAAiB,GAGvB,MAAWhpB,KACT6oB,EAAkB3mH,KAAKgD,KACrBokH,EAAAA,EAAAA,IAAiBz2G,IAAMA,KAAM6zG,IAA2B1mB,GAAY3F,eAAe51F,OAEjFokH,EAAkB7oB,GAAY3F,eAAe51F,MApmBpB,KAqmB3BukH,GAAiB,IAIrB,GAAIH,EACFxsH,EAAS,UAASwsH,MAClBE,EAAoBF,EAAkBpR,QACjC,GAAI5tE,KAAYm4E,GAAc,CACnC,MAAM,MAAEv9G,IAAUoyG,EAAAA,EAAAA,IAAqBhtE,GAAS9qC,IAChD1C,EAAS,UAASoI,EAAQkkH,OAC1BI,EAAoBtkH,EAAQgzG,EAC9B,CAEA,MAAO,CACLqR,eAAcE,iBAAgB3sH,QAAO0sH,oBACtC,GACA,CACD/oB,GAAaghB,GAAa2H,GAAc3G,GAAc7X,IAASxV,cAAe0sB,GAASqF,GACvF3nH,GAAUwC,GAAO1E,EAAW6rB,GAAOmhB,GAASh3B,IAAMA,KAAMvU,GAAO2qD,MAG3D,aACJ6/D,GAAY,eAAEE,GAAc,MAAE3sH,GAAK,kBAAE0sH,IACnCH,GAEJ,SAASW,GAAkBC,GACzB,GAAKnE,GACL,OACEpqH,EAAAA,GAAAC,cAACuuH,GAAAA,EAAW,CACVC,eAAgBrE,GAChB77D,eAAgBoyD,GAA+B6K,QAAwBluH,EACvEixH,eAAgBA,EAChBlP,aAAcA,GACd3vD,UAAWA,GACX+vD,UAAWA,GACXz8D,YAAaA,GACbyK,8BAA+BA,EAC/B5B,8BAA+BA,EAC/BwrB,sBAAuB+wB,GACvBzH,eAAgBA,GAChB+tB,WAAY7H,GACZpF,aAAcA,GACdhkG,SAAUA,IAGhB,CAEA,MAAMs2F,IAA4Bz1G,EAAAA,EAAAA,KAAY,KAC5C,GAAKgkH,GAEL,OACEtiH,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GAAe,iBAAkBghG,KAA2B4f,IAAsB,WAC7F3gH,QAASsiG,GACT9iG,IAAKmhG,IAEL9gG,EAAAA,GAAAC,cAAC0uH,GAAAA,EAAmB,CAClB18E,SAAUqwE,GACVhiH,KAAMi8G,GACNvpF,mBAAoBA,GACpBsnB,oBAAqBuR,IAEnB,GAEP,CACDi1D,GAAoB9tF,GAAoBsvF,GAAiB7f,GAAyBvB,GAClFr1C,IAGF,SAAS+iE,KACP,MAAMC,EACJ7uH,EAAAA,GAAAC,cAAC0zG,GAAW,CACVpyG,QAASA,EACT6/D,SAAUA,GACV8yC,aAAchuF,KAAmB5f,GACjC0tG,UAAWA,EACXF,kBAAmBA,GACnBlyD,eAAgBA,GAChBgyD,UAAWA,GACXC,mBAA0C,WAAtBmZ,GACpBjZ,0BACE4X,IAAqD,YAA1BsB,GAAsClZ,QAA4Bz2G,EAE/F01B,mBAAoBA,GACpBihF,aAAcz2G,QAAQmjH,GAA+B6K,QAAwBluH,GAC7E+1C,YAAa5gB,IAAQyf,SACrB/xC,QAAS0nH,GACTzT,cAAe6V,GACf9V,mBAAoB2T,GACpBzT,aAAc0T,KAIlB,MAA0B,WAAtBiF,GACK6B,EAIP7uH,EAAAA,GAAAC,cAAC6uH,GAAAA,EAAS,CACRvtH,QAAS8+G,GACT5iG,SAAUA,GACVsxG,aAAcF,EACdv0E,oBAAqBuR,EACrBmjE,iBAAkB17F,GAClB8vF,KAAMA,GACNn8F,qBAAsBixC,GAG5B,CA4TA,SAAS+2D,KACP,OAAOrhG,IACL5tB,EAAAA,GAAAC,cAAC4tB,GAAAA,EAAO,CACNtsB,QAASA,EACTksD,8BAA+BA,EAC/B5B,8BAA+BA,EAC/BjqD,UAAWA,EACX44C,YAAamwD,GACb7E,YAAaqc,GACb4D,YAAaA,GACbhkH,cAAeA,GACfihD,YAAaA,GACb1hD,MAAOA,GACP4vB,MAAOksF,GACPvkB,YAAaA,GACb8oB,sBAAuBA,GACvBuN,kBAAmBhI,IAAkB/4G,OAAO+gH,kBAC5Ct0E,mBAAoBA,GACpBH,sBAAuBA,GACvB00E,YAAa1H,GACb5sE,aAAc0sE,GACd6H,gBAAiB5H,GACjB6H,sBAAuBhqB,IAG7B,CAEA,SAASiqB,GAA6BxqB,GACpC,MAAM7hG,EACJjD,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACGg3G,IAAW34D,GACVztD,EAAAA,GAAAC,cAAC4kG,GAAK,CACJtK,MAAOA,EACPwK,YAAaA,GACbzqD,oBAAqBmT,EACrBnnD,MAAOA,GACP08C,YAAaA,GACb8hD,kBAAmBA,EACnBjqD,aAAc6sE,MAGhBtB,IAAW34F,IACXztB,EAAAA,GAAAC,cAACokG,GAAAA,EAAK,CACJkrB,YAAa33G,IAAMA,KACnB6V,MAAOA,GACPnnB,MAAOA,GACPg0C,oBAAqBmT,EACrB7rD,UAAWA,EACX44C,YAAamwD,GACblpG,eAAgBA,GAChBukG,qBAAsBlB,EACtB/iG,cAAeA,GACfihD,YAAaA,GACb+iE,YAAaA,GACbzkH,MAAOA,GACP2tG,YAAa4e,GACb1tH,QAASwnH,GACThlH,eAAgB0iG,MAGlB+gB,IAAW/iH,KAAU2qD,IACrBhuD,EAAAA,GAAAC,cAACskG,GAAAA,EAAK,CACJlhG,MAAOA,GACPiD,MAAOA,GACPmnD,8BAA+BA,EAC/B5B,8BAA+BA,EAC/BojD,YAAa4e,GACbjsH,UAAWA,EACX44C,YAAamwD,GACb7E,YAAaqc,GACb1gH,eAAgBA,GAChBM,cAAeA,GACfihD,YAAaA,GACb+iE,YAAaA,GACbpE,sBAAuBA,GACvBxhH,QAASynH,GACTjlH,eAAgB0iG,MAMxB,OAAI1K,GAEA36F,EAAAA,GAAAC,cAACg2G,GAAgB,CAACr5G,OAAQA,GAAQ6P,UAAWA,GAAWkuF,UAAWA,GAAWl7B,WAAYn5D,IACvFrD,GAKAA,CACT,CAEA,SAASusH,KAEP,QAASpnB,KAAkB2U,MACxBH,MAFWnvF,IAASpqB,IAASiuG,IAAY3W,KAEZ6lB,KAAkBuF,IAAehJ,IAAYM,MACvEiJ,MAA+BpB,IAAmB9c,GAC1D,CAEA,SAASqnB,KACP,OACEzvH,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,2BACbioH,IACC/lH,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAMgY,IAAaI,eAAiB,UAAY,iBAEvD0/F,IACC/lH,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,iBACbK,GAAK,kBAKhB,CAEA,SAASuxH,GAAiBC,GAAuC,EAAOC,GAAsC,GAC5G,IAAIpuH,GAEA2lH,IAAgB/e,IAAiB2U,GAE1B92F,IAAaI,eACtB7kB,EAAcykB,GAAYI,eACjBS,IAAa02F,KACtBh8G,GAAcitD,EAAAA,EAAAA,IAAatwD,GAAMq/G,KAJjCh8G,GAAcitD,EAAAA,EAAAA,IAAatwD,GAAMgpH,IAMnC,MAAM0I,EAAoB1I,IAAc,gBAAiBA,IAAcA,GAAW7+D,YAC5EwnE,EAAkB3I,IAAc,cAAeA,IAAcA,GAAWjvD,UAExE63D,EAA4BhK,IAAeoB,GAC3C6I,EAAuBvS,IAAWpiD,WAAWj7D,OACnD,OACEJ,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,gBAAgB2P,IAAI,OAC/BjM,GAAeukH,GACf/lH,EAAAA,GAAAC,cAAA,QACEnC,WAAWoC,EAAAA,EAAAA,GACT,+BACA+lB,IAAaI,eAAiB,gBAAkB,mBAnBtD4pG,GAsBIxiH,IAAI,QAEFkiH,GAAgCF,KAClCzvH,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,sBACbgpB,IAAa9mB,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,eACxB8hH,GACC/vH,EAAAA,GAAAC,cAACy1C,GAAAA,EAAM,CACL53C,UAAU,iBACVgyB,KAAMq3F,GACN7mH,KAAK,UAGTN,EAAAA,GAAAC,cAAA,QACEnC,UAAU,eACVqC,QAASinH,IAER5lH,GAAckM,EAAAA,EAAAA,GAAWlM,GAAgBukH,GAzqC7C,SAyqCkEzoH,IAE/DyoH,IAAe8J,GACf7vH,EAAAA,GAAAC,cAACkX,GAAAA,EAAW,CACV0wB,WAAYgoF,EAAkBhoF,WAC9B/pC,UAAU,eACVguD,UAAWokE,EAAAA,IACXziE,8BAA+BA,EAC/B5B,8BAA+BA,KAGjCk6D,KAAgB8J,GAAqBC,GAAmB9vH,EAAAA,GAAAC,cAAC2kE,GAAAA,EAAQ,MAClEuiD,IAAYgJ,UAAYnwH,EAAAA,GAAAC,cAACmwH,GAAAA,EAAQ,CAACD,SAAUhJ,GAAWgJ,aAGzD1S,QAEDngH,EA1rCC,IA2rCJmgH,IAAWpiD,WAAWj7D,QACrBJ,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,eACdkC,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,OAAOK,GAAK,WAC5B6B,EAAAA,GAAAC,cAAA,QACEnC,UAAU,eACVqC,QAASknH,KAER35G,EAAAA,EAAAA,GAAY,IAAG+vG,GAAUpiD,UAAU,GAAGhiD,cAI7CrZ,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,iBACb8xH,GAA+BI,OAUhB1yH,EAVwC2oB,IAAa+/F,oBACpEhmH,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,cAAc2P,IAAI,QAAQtP,GAAK,mBAC7CoD,EAAQ8rH,iBAAmBnQ,KAAY6I,GACzC/lH,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,cAAc2P,IAAI,QAAQlM,EAAQ8rH,kBAChD3P,IAAsBqI,IAAgBhJ,QAMtCz/G,EALF0C,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,cAAc2P,IAAI,QAC/BiwG,GAAkB34D,aAAe5mD,GAChCu/G,GAAkB14D,QAAU,uBAAyB,yBAI1DkhE,IACClmH,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,gBAAgB,kBAC9BkC,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAM8yG,GAAe,EAAI,SAAW,UACzCA,GAAe,EAAIA,QAAezjH,GAK7C,CAEA,MAAM+yH,GAAgBnT,IAAW6I,GAAcxkH,EAAQ8rH,qBAAkB/vH,EAEzE,OACE0C,EAAAA,GAAAC,cAAA,OACEN,IAAKA,GACLpC,IAAIimD,EAAAA,EAAAA,IAAiBjiD,EAAQhE,IAC7BO,UAAW2sH,GACX,kBAAiBh+G,GACjB6jH,OAAQttE,GAAcU,EAAAA,OAAYpmD,EAClC+5C,YAAawX,GACb1uD,QAASu8C,GACTlyB,cAAe5B,GACf2nG,cAAehuB,GACfpgF,aAAcokG,GAA2B1jB,QAAgCvlG,EACzEkzH,YAAa7E,GAA0BlqB,QAAkBnkG,EACzD+kB,aAAespG,IAA2BpF,GAA4BvnG,QAAmB1hB,GAEzF0C,EAAAA,GAAAC,cAAA,OACEN,IAAKwkH,GACLrmH,UAAU,gBACV,kBAAiB2O,GACjB,uBAAsB8tF,EAAQA,EAAME,SAASF,EAAME,SAASr6F,OAAS,GAAG7C,QAAKD,EAC7E,qBAAoBi9F,EAAQA,EAAM0K,YAAY1nG,QAAKD,EACnD,0BAAyBiE,EAAQmpH,uBAAoBptH,EACrD,2BAA0BgjH,SAAqBhjH,EAC/C,iBAAgB8jE,SAAY9jE,EAC5B,gCAAiDA,IAAvBiE,EAAQyzG,cAElCkL,IACAlgH,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,uCACZgE,IAAc9B,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,YAG7B4uG,GACC78G,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GACT,mDAAoD8hH,IAAmB,eAEzE7hH,QAASmoH,IAERtG,IACChiH,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,YAIjBjO,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GAAe,0BACxBqN,GAAiBgU,SAAS,SAAW,kBACrChU,GAAiBgU,SAAS,aAAe,4BAE3CvhB,EAAAA,GAAAC,cAAA,OACEnC,UAAWyP,GACXnM,MAAOA,GACPqM,IAAI,QAEHs4G,KAAgBO,IACftmH,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACGogH,MAA4BE,KAC5BW,IAAiBrwH,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,cAAc2P,IAAI,QAAQ4iH,KAlkBxE,WACE,MAAMvyH,GAAYoC,EAAAA,EAAAA,GAChB,gBACA6lH,IAAe,oBACfe,IAA2B,yBAC3BC,IAAgB,iBAChBgH,IAAkB,oBAEdjpB,EAAoB6e,KACnB5rG,IAAYoU,KAAoB06F,KAAiBhB,MAAmB6F,GACrE+E,GAAmBvwH,EAAAA,EAAAA,GACvB,eACA,WACiB,YAAjB6sH,IAA8B,YAC9BnrE,IAAkB,sBAEd8uE,GAAmBhsH,KAAW4B,IAAS4f,GAE7C,OACElmB,EAAAA,GAAAC,cAAA,OAAKnC,UAAWA,EAAWyyH,cAAe/tB,GAA0B/0F,IAAI,SACpEs4G,IAAeyJ,MAA4BE,KAC5C3I,IACC/mH,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,qBACZ0iH,IACCxgH,EAAAA,GAAAC,cAACqjG,GAAS,CACRlyD,MAAOqvE,GACPtgH,QAASooH,GACTzqH,UAAU,kBAGbgpH,IACC9mH,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,kCACbkC,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,iBACZ2xH,MAEFC,IAAiB,GAAM,IAG3BxK,IACCllH,EAAAA,GAAAC,cAACmtD,GAAAA,EAAe,CACd7rD,QAAS28G,GACT14F,UAAW8/F,GACXh4D,aAAcA,GACdtK,YAAaA,GACbr9B,OAAQ04F,GACR34F,WAAY84F,GACZnxD,cAAekxD,GACfhxD,iBAAkBA,GAClBC,iCAAkCA,GAClCC,8BAA+BA,EAC/B5B,8BAA+BA,EAC/B1rD,QAASmnH,KAGZ7B,IACCzlH,EAAAA,GAAAC,cAAC8iG,GAAa,CACZ7xE,MAAOytF,GACPh5F,OAAQi5F,GACRtxD,aAAcA,GACdtK,YAAaA,GACbyK,8BAA+BA,EAC/BttD,QAASqoH,MAKhB55E,IAAW6e,GAAiC5B,GAC3C7rD,EAAAA,GAAAC,cAACu6G,GAAO,CACNj5G,QAASA,EACT+4C,oBAAqBmT,EACrB5B,8BAA+BA,EAC/BgN,WAAYupD,GACZ9vF,iBAAkBA,GAClBmoF,WAAYsI,GACZrI,aAAcgK,KAGjBkB,IAAoBhG,IACnB5/G,EAAAA,GAAAC,cAACwnG,GAAmB,CAClBJ,cAAeuY,GACf1nE,YAAa6qE,KAAuBx0F,EAAAA,EAAAA,IAAS3xB,MAAY61B,GACzDnsB,MAAOA,GACPg0C,oBAAqBmT,EACrBs6C,iBAAkB9gE,GAClBx6B,UAAWA,GACX7P,OAAQA,GACRypG,wBAAyBA,KAG5Buf,IAAoB78C,IACnB/oE,EAAAA,GAAAC,cAAC6nG,GAAa,CACZrqE,MAAOsrC,GACP7wB,YAAa6qE,KAAuBx0F,EAAAA,EAAAA,IAAS3xB,MAAY61B,GACzDnsB,MAAOA,GACPg0C,oBAAqBmT,EACrBs6C,iBAAkB9gE,GAClBx6B,UAAWA,GACX7P,OAAQA,GACRypG,wBAAyBA,KAG5B0c,IAAuBtwF,KAAWwU,IACjCjnC,EAAAA,GAAAC,cAAC03C,GAAAA,EAAa,CACZC,WAAYtlB,GACZ7lB,UAAWlL,EAAQhE,GACnBs9G,YAAat5G,EAAQk+D,WACrBhtC,OAAQA,GACRg7B,8BAA+BA,EAC/B5B,8BAA+BA,EAC/BhU,OAAQ6sE,KAGXlP,IACCx1G,EAAAA,GAAAC,cAACs1G,GAAgB,CACfh0G,QAASA,EACTi0G,UAAWA,GACX54G,OAAQA,MAGVwpH,IAAWp4D,KAAiBw3D,IAC5BxlH,EAAAA,GAAAC,cAAC0wH,GAAAA,EAAU,CACTpvH,QAASA,EACT+4C,oBAAqBmT,EACrBjT,YAAamwD,GACb5oG,cAAeA,GACfW,YAAaguH,EAAkB1I,QAAkB1qH,EACjDiF,oBAAqB6hH,GACrBjiH,qBAAsBA,GACtBD,cAAe1E,QAAQklH,IACvBrgH,cAAei/G,KAAuB58G,GACtCzC,sBAAuBA,GACvBD,eAAgBA,MAGlBkB,IAASE,IAASoiH,KAClBxlH,EAAAA,GAAAC,cAACoB,GAAAA,GAAK,CACJC,MAAOA,GACPC,QAASA,EACTG,OAAQmD,EAAAA,GAAYqI,OACpBzL,eAAgBA,GAChBI,aAAcq+G,GACdp+G,WAAYA,GACZF,UAAWA,EACXY,OAAQilH,GACR/kH,YAAaU,IAASstH,EAAkB1I,QAAkB1qH,EAC1DqF,eAAgB0iG,GAChBtjG,cAAeA,GACfC,eAAgBA,GAChBC,sBAAuBA,GACvBC,cAAe1E,QAAQklH,IACvBvgH,qBAAsBA,GACtBC,aAAc4gD,GACdzgD,oBAAqB6hH,GACrB/hH,cAAei/G,KAAuB58G,KAGzCyL,IACCnQ,EAAAA,GAAAC,cAACo6C,GAAAA,EAAQ,CACPlqC,SAAUA,GACV5O,QAASA,EACT+4C,oBAAqBmT,EACrBjT,YAAamwD,GACblwD,sBAAuBA,GACvBh5C,eAAgBA,GAChBI,aAAcq+G,GACdp+G,WAAYA,GACZ+4C,aAAc2sE,GACd7kH,eAAgB0iG,GAChBtjG,cAAeA,GACf64C,mBAAoBA,KAGvB9zB,KAAcq/F,IACbnmH,EAAAA,GAAAC,cAAC2wH,GAAK,CACJrvH,QAASA,EACTyhD,YAAaA,KAGhBmjE,IAAkBnmH,EAAAA,GAAAC,cAAC4wH,GAAY,CAACtvH,QAASA,IACzCynG,IACChpG,EAAAA,GAAAC,cAACkpG,GAAO,CAACH,QAASA,GAAS17C,aAAchnD,KAE1C6oC,IACCnvC,EAAAA,GAAAC,cAAC03G,GAAI,CAACp2G,QAASA,EAAS4tC,KAAMA,GAAMyoE,WAAYqQ,MAEhD/c,IAAYS,KACZ3rG,EAAAA,GAAAC,cAACsrG,GAAQ,CAAChqG,QAASA,IAEpBqpG,IACC5qG,EAAAA,GAAAC,cAACyqG,GAAI,CACHnpG,QAASA,EACTopG,iBAAkBA,KAGrBuE,IAASxV,eACR15F,EAAAA,GAAAC,cAACmwG,GAAmB,CAClB7uG,QAASA,EACTs3F,YAAaA,KAIhB2sB,IACCxlH,EAAAA,GAAAC,cAAA,KACEnC,WAAWoC,EAAAA,EAAAA,GACT,iBACC+B,IAAyBE,IAAwB,uBAEpDsL,IAAI,QAEFtL,GAAuBhE,GAAK,qBAC5B6D,IAAkB0gH,GAAkB1iH,EAAAA,GAAAC,cAACo9C,GAAAA,EAAY,CAACp6C,QAASy/G,KAAsBA,IAKtFv2F,IAgDP,SAAoC24E,GAClC,MAAM2rB,GAAmBvwH,EAAAA,EAAAA,GACvB,eACA,YAEI4wH,GAAc5wH,EAAAA,EAAAA,GAClB,eACA,WACiB,YAAjB6sH,IAA8B,YAC9BnrE,IAAkB,sBAIdmvE,EADoB3K,KAAaA,IAAW34F,KAAY24F,IAAW/iH,KAAU2qD,KAChC43D,IAAoBiB,GACjEmK,EAAgC,YAAjBjE,GAErB,OACE/sH,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACG6/G,KACAl3G,KAAY6tG,IACX5lH,EAAAA,GAAAC,cAAA,OAAKnC,UAAW2yH,EAAkBhjH,IAAI,QACnC6gH,KACAhD,IACCtrH,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,yBACbkC,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,gBACZwwH,IAAkB,MAIvByC,GAAuBC,GAAgBpC,MAI5CmC,GACC/wH,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACGkgH,GAA6BxqB,IAC5B8gB,IACA5lH,EAAAA,GAAAC,cAAA,OAAKnC,UAAWgzH,EAAarjH,IAAI,QAC9Bo5G,IACC7mH,EAAAA,GAAAC,cAAC2pG,GAAS,CAACC,UAAWA,GAAWC,iBAAkBnJ,KAEpDqwB,GAAgBpC,OAQ/B,CAjG0BqC,CAA2BnsB,IAE7C34E,IACAnsB,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACGkgH,GAA6BxqB,GAC7B/sF,KAAY6tG,IACX5lH,EAAAA,GAAAC,cAAA,OAAKnC,UAAW2yH,EAAkBhjH,IAAI,QACnC6gH,KACAhD,IACCtrH,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,yBACbkC,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,gBACZwwH,IAAkB,KAIxBzH,IACC7mH,EAAAA,GAAAC,cAAC2pG,GAAS,CAACC,UAAWA,GAAWC,iBAAkBnJ,KAEnC,YAAjBosB,IAA8B6B,MAGlCK,MAIJ/f,KAAYA,GAAQxV,eACnB15F,EAAAA,GAAAC,cAAC+uG,GAAO,CACNztG,QAASA,EACTykG,qBAAsBlB,IAAsB+gB,GAC5CllB,eAAgBA,GAChB7+F,WAAYA,GACZR,MAAOA,GACP2tG,YAAa4e,KAGhBvc,IACCtxG,EAAAA,GAAAC,cAACmxG,GAAQ,CACP7vG,QAASA,EACTo/F,eAAgBA,GAChB7+F,WAAYA,GACZR,MAAOA,GACPwuB,KAAMnK,KAKhB,CAgUSihD,IACC2/C,IAA6C,eAAjBwG,KAAkC5G,IAAkByI,KACjFpI,IACCxmH,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GACd,yBACA8iH,IAAqB,iCAGpB0I,IAAqBtjB,IACpBpoG,EAAAA,GAAAC,cAACkoG,GAAa,CACZ7pD,WAAYw1D,GACZlyF,SAAU4hG,EACV1uF,UAAWkuF,GACX5a,eAAa,EACbC,gBAAc,IAGjBoe,IACCzmH,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACL1C,UAAU,wBACVqQ,MAAM,oBACN1N,OAAK,EACLH,KAAK,OACL8N,UAAWjQ,GAAK,2BAChBgC,QAAS08G,EAAwBqL,GAAqBC,IAEtDnoH,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,kBAGd04G,IACC3mH,EAAAA,GAAAC,cAACO,GAAAA,EAAM,CACL1C,UAAU,wBACVqQ,MAAM,oBACN1N,OAAK,EACLH,KAAK,OACL8N,UAAU,gBACVjO,QAAS+hH,GAAekG,GAAcC,IAEtCroH,EAAAA,GAAAC,cAAC+N,GAAAA,EAAI,CAACC,KAAK,kBAKlBy9G,MAAuBlF,IAAuBpe,KAC7CpoG,EAAAA,GAAAC,cAACkoG,GAAa,CACZ7pD,WAAYw1D,GACZlyF,SAAU4hG,EACV1uF,UAAWkuF,KAGd8J,IAAgB9sH,EAAAA,GAAAC,cAACixH,GAAAA,EAAe,CAAC5qH,MAAOA,KACxCqlH,IAAqD,eAA1BsB,IAA0ClZ,MAEvExyG,EAAQ0pG,eACPjrG,EAAAA,GAAAC,cAAC4uG,GAAa,CAACttG,QAASA,EAASpB,QAAS8iB,KAErB,YAAtB+pG,KAAoC7G,IACnCnmH,EAAAA,GAAAC,cAAC6uH,GAAAA,EAAS,CACRvtH,QAAS8+G,GACT5iG,SAAUA,GACV0zG,WAAS,EACTlqG,qBAAsBixC,EACtBqjC,SAAUuyB,GACVxzE,oBAAqBuR,EACrBmjE,iBAAkB17F,GAClB8vF,KAAMA,MAIXz6F,IACC3oB,EAAAA,GAAAC,cAACypG,GAAoB,CACnB5pG,OAAQ4oB,GACR9W,OAAQ+W,GACRyoG,WAAYzM,IAAmBr9G,QAAQ,WAAcq9G,GAAwChzG,UAAOrU,EACpGiE,QAASA,EACTg5F,MAAOA,EACPn2E,gBAAiBA,GACjBnC,QAAS4G,GACT3G,oBAAqB4G,GACrBgrF,kBAAmBA,GACnBE,UAAWA,EACXp2B,iBAAkBA,KAGlB,I,kDI5oDV,QAxBA,UAAyB,MAAEt3E,IACzB,MAAMs7E,EAAOt7E,EACT,0FACA,6FACJ,OACEtG,EAAAA,GAAAC,cAAA,OAAKuJ,MAAM,IAAIC,OAAO,KAAK3L,UAAU,gBACnCkC,EAAAA,GAAAC,cAAA,YACED,EAAAA,GAAAC,cAAA,UAAQiK,EAAE,OAAOC,EAAE,SAASX,MAAM,OAAOC,OAAO,SAAS0rC,YAAY,oBAAoB53C,GAAG,mBAC1FyC,EAAAA,GAAAC,cAAA,YAAUm1C,GAAG,IAAIC,GAAG,cAAc9sC,OAAO,uBACzCvI,EAAAA,GAAAC,cAAA,kBAAgBq1C,aAAa,IAAID,GAAG,qBAAqB9sC,OAAO,qBAChEvI,EAAAA,GAAAC,cAAA,iBACEhB,OAAO,4EACPo2C,GAAG,uBAITr1C,EAAAA,GAAAC,cAAA,KAAGkH,KAAK,OAAO,YAAU,WACvBnH,EAAAA,GAAAC,cAAA,QAAMs1C,EAAGqsC,EAAMz6E,KAAK,OAAO/H,OAAO,0BAClCY,EAAAA,GAAAC,cAAA,QAAMs1C,EAAGqsC,EAAMz6E,KAAMb,EAAQ,UAAY,MAAOxI,UAAU,YAIlE,C,wIC3BA,MC+GA,GAAerB,EAAAA,EAAAA,KAnFOk7C,EACpBlrC,YACAouG,aACApoF,SACAmlB,aACA6V,gCACA5B,gCACAhU,aAGA,MAAM2jE,GAAY53G,EAAAA,EAAAA,IAAuB,MAEnCjE,GAAMiE,EAAAA,EAAAA,IAAuB,MAC7Bm3G,GAAUv/D,EAAAA,EAAAA,IAAkBggE,EAAW/tD,GACvCjG,GAAUhM,EAAAA,EAAAA,IAAkBggE,EAAW3vD,IAEtChmD,EAAWwrH,EAAcC,IAAexyG,EAAAA,EAAAA,MACxCyyG,EAA0BC,EAAuBC,IAAuB3yG,EAAAA,EAAAA,KAEzEg5C,EAwDR,SAAuBrlC,GACrB,OAAIA,EAAOi/F,kBACD,UAASj/F,EAAOi/F,oBAGlB,UAASj/F,EAAOk/F,wBAC1B,CA9DqBC,CAAcn/F,GAC3Bo/F,GAAattH,EAAAA,EAAAA,GAASuzD,GAAaijD,GAEnC+W,GAAcxsH,EAAAA,EAAAA,IAAgB,KAClCgsH,IACAz5E,KAAU,IAGNytC,GAAiBi2B,EAAAA,EAAAA,GAAmB,CACxCC,YACAC,WAAY97G,EACZk7G,aACAl3F,YAAa9d,EACbksH,oBAAoB,EACpBx0H,GAAIk1B,EAAOl1B,MAGb8B,EAAAA,EAAAA,KAAU,KACJkyH,GAA0BjsC,IAC9BmsC,GAAqB,GACpB,CAACnsC,EAAgBmsC,EAAqBF,KAEzClyH,EAAAA,EAAAA,KAAU,KACJmoD,GAAW5P,GAAci6E,IAC3BR,IACAG,IACF,GACC,CAAChqE,EAASqqE,EAAYj6E,EAAY0tC,IAErC,MAAM0sC,GAAkB9xH,EAAAA,EAAAA,GD5E2C,WC8EjE26G,GD9EqF,YCiFvF,OACE76G,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GDlFK,WCkFyB26G,GDlFC,YCkFmCl7G,IAAK67G,GACpF31G,GACC7F,EAAAA,GAAAC,cAACokF,EAAAA,EAAM,KACLrkF,EAAAA,GAAAC,cAAC87G,EAAAA,EAAe,CACdp8G,IAAKA,EACLu3C,IAAM,UAASzqC,GAAagmB,EAAOl1B,KACnCO,UAAWk0H,EACXxjH,OAAQqjH,EACRvxH,KAhEQ,IAiER4kF,MAAI,EACJkE,eAAa,EACbz6E,QAAM,EACNiqD,aAAW,EACXojD,QAAS8V,KAIX,G,kQCzCV,MA0MA,EA1McztB,EACZ9mG,KACAkwB,QACA8hG,cACAjpH,QACAg0C,sBACA14C,YACA44C,cACAmmD,iBACA7+F,aACAL,iBACAwtG,cACA3uG,OAAO,SACP85F,aACA2rB,cACAz3G,iBACA03F,uBACAjkG,gBACAihD,cACA1hD,QACA2wH,cACAruB,WACA9lG,YACAqC,UACAwC,qBAGA,MAAMhD,GAAMiE,EAAAA,EAAAA,IAAuB,MAC7BsuH,EAAoC,yBAApBzkG,EAAMw4E,UAEtB7pD,EAAgB81E,OAAgC50H,EAAhBmwB,EAAMyhC,QAEtC3T,GAAiBC,EAAAA,EAAAA,IAAkB77C,EAAK26C,IAExC,SAAEx2C,IAAaC,EAAAA,EAAAA,OACd43C,EAAeC,IAAoB13C,EAAAA,EAAAA,IAASs2C,GAC7Cr2C,EAAaw3C,GAAiBJ,IAAmB22E,GACjD,UACJltH,EAAS,aAAEE,IACTE,EAAAA,EAAAA,GAA0B8sH,OAAiD50H,GAAjCgpD,EAAAA,EAAAA,IAAkB74B,EAAOntB,IAAoB6D,GACrFyiD,GAAgBxK,GAAgBp3C,EAEhCyqG,GAAwBjyG,QAAQyxG,IAC/B1xD,KAAar5C,EAAAA,EAAAA,KAAU0iD,IACxBpJ,GAAUhgD,QAAQopD,IAClBnJ,IAAWiyD,EAAAA,EAAAA,GAAwBjiF,EAAO+vB,KAChD20E,EAAAA,EAAAA,IAAoB30E,GAAS,CAAE79C,IAAK89C,KACpC,MAAM27C,IAAuBsW,EAAAA,EAAAA,GAAwBjiF,GAAQgiF,IACvDvzD,IAAeC,EAAAA,EAAAA,IAAiB1uB,IAE/B61B,GAAgB8uE,GAAa7uE,KAAezkC,EAAAA,EAAAA,GAAQozG,GAAiBzkG,EAAMmR,YAElFv/B,EAAAA,EAAAA,KAAU,KACJ6yH,GAAiBzkG,EAAMmR,UACzBwzF,KAEA7uE,IACF,GACC,CAAC2uE,EAAezkG,IAEnB,MACEvoB,aAAcC,KACZC,EAAAA,EAAAA,GACD8sH,OAAuD50H,GAAvCgpD,EAAAA,EAAAA,IAAkB74B,EAAO,aACzC1rB,EACAmwH,OAAoD50H,GAApC2H,EAAAA,EAAAA,IAAewoB,EAAO,cAGnC,YACJ1iB,GAAW,eAAEC,GAAc,iBAAEC,KAC3BC,EAAAA,EAAAA,IACFzJ,IAAmBM,EAAgBoD,GAAmBD,GACtDf,IAAeyiD,QACItpD,IAAnBmE,GAEI4wH,IAA2D,KAAzCl5F,EAAAA,EAAAA,GAAsBwiB,IAG5Ch8C,IAAK2yH,GACL1yH,aAAcuL,KACZ45G,EAAAA,EAAAA,GAAkB,CACpBjlH,OAAQkL,GACRg6G,kBAAmBqN,GACnBv0H,UAAW,OACXy0H,kBAAkB,KAGlB5yH,IAAK6yH,GACL5yH,aAAc6yH,KACZ1N,EAAAA,EAAAA,GAAkB,CACpBjlH,QAAS8mD,KAAkBjL,EAC3B42E,kBAAkB,IAGd71E,IAAcp3C,EAAAA,EAAAA,IAAiBuG,IAC/Bd,GACFpI,IAAiBihG,GAIdh9C,GAKDtD,GACFC,KAIFpjD,IAAUyjG,EAAW/3F,GATnB+vC,GAAkB82E,IAAeA,GASZ,KAGzBlrF,EAAAA,EAAAA,IAA4B,EAAEmoE,MAC5B,IAAK3J,EAIH,YAHI2J,GACFhwG,EAAIyJ,QAASwL,QAAwBi7F,EAAAA,KAA2Bx5F,gBAAgB25F,EAAAA,MAKpF,MAAMJ,EAAYjwG,EAAIyJ,QAASwL,QAAwBi7F,EAAAA,KACvD,GAAIjpD,GAAe,CACjB,MAAMn6C,EAAY09B,OAAOylE,EAAUh7F,QAAwB,YAAa4B,QAAQ/J,YAChFqjG,EAAAA,EAAAA,GAAoBlpD,GAAeppD,QAAQ8I,GAAQmG,EAAW3K,EAAYR,GAAOsoF,MAAMmmB,KACrF7uE,EAAAA,EAAAA,KAAgB,KACd0uE,EAAUxuG,MAAM2iB,YAAY,gBAAiBgsF,GAC7CH,EAAU94F,aAAak5F,EAAAA,IAA2B,GAAG,GACrD,GAEN,MACEJ,EAAUx/F,UAAUC,IAAI,qBAC1B,GACC,CAAC21F,EAAsBp/C,GAAetgD,EAAOq6F,EAAgB7+F,EAAYR,IAE5E,MAAM,MAAEkI,GAAK,OAAEC,GAAM,QAAEkpH,IAAYv4B,IAAcS,EAAAA,EAAAA,IAAyB,CACxEr3F,MAAOiqB,EACPnnB,QACAy/G,cACAnkH,YACAkC,WACAyrH,cACA0C,gBAGIW,IAAqB1yH,EAAAA,EAAAA,GACzB,eACC6K,KAAgBuD,GAAkB,cACnCqkH,IAAW,eACVnpH,KAAUC,IAAmB,cAATnJ,IAAyB,eAC9CmJ,GAASopH,EAAAA,IAAoB,iBAC7B/0H,GAGIg1H,GAAkB14B,EAAc,WAAU5wF,eAAkB4wF,EAAWlwF,aAAakwF,EAAWjwF,OAAS,GACxG/I,GAAiB,WAATd,EAAqB,WAAUmJ,QAAYqpH,UAAoBx1H,EAE7E,OACE0C,EAAAA,GAAAC,cAAA,OACE1C,GAAIA,EACJoC,IAAKA,EACL7B,UAAW80H,GACXxxH,MAAOA,GACPjB,QAAS4K,QAAczN,EAAYo/C,IAElC+yD,IACCzvG,EAAAA,GAAAC,cAAA,UAAQN,IAAKy5F,GAAsBt7F,UAAU,yBAE9C8oD,IACC5mD,EAAAA,GAAAC,cAAA,OACEk+C,IAAKyI,GACL9oD,WAAWoC,EAAAA,EAAAA,GAAe,aAAcuvG,IAAyB,mBACjEz4F,IAAI,GACJ5V,MAAO6tG,EAAe,UAASA,WAAkB3xG,EACjDkS,WAAYwzC,IAGfzF,IACCv9C,EAAAA,GAAAC,cAAA,UAAQN,IAAK89C,GAAU3/C,UAAU,cAElCklD,GAAehjD,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,cAC/BqN,KAAwBsnH,IACvBzyH,EAAAA,GAAAC,cAAA,OAAKN,IAAK2yH,GAAYx0H,UAAU,iBAC9BkC,EAAAA,GAAAC,cAAC2O,EAAAA,EAAe,CAACvF,SAAU4B,GAAkB9K,QAAS4K,GAAc2xC,QAAcp/C,KAGrFm1H,IAA8BzyH,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACrO,IAAK6yH,GAAmBvkH,KAAK,aAClEjO,EAAAA,GAAAC,cAAC0jD,EAAAA,EAAY,CACXC,UAAWN,GACXyvE,eAAa,EACb72E,aAAcA,GACd1yC,MAAOA,GACPC,OAAQA,GACR3L,UAAU,kBAEXkN,IACChL,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,6BAA6BmJ,KAAKxG,MAAyB,IAAnBwK,IAAwB,KAE9E,C,mSCvMV,MAAM+nH,EAAkBC,EAAAA,GAA4B,EAE9CC,EAA+D,GAArCF,EADR,GACiD/rH,KAAK8pG,GAG9E,IAAIoiB,EAEJ,MAiTA,EAjTiCxC,EAC/BpvH,UACAzD,YACA08C,cACAz4C,gBACAL,SACA44C,sBACAzC,SACAn1C,cACAP,uBACAD,gBACAG,gBACAE,sBACAN,wBACAD,qBAGA,MAAMrC,GAAMiE,EAAAA,EAAAA,IAAuB,MAE7BwvH,GAAYxvH,EAAAA,EAAAA,IAAyB,MAErCyvH,GAAYzvH,EAAAA,EAAAA,IAAyB,OAErC,oBAAEf,EAAmB,sBAAEG,EAAqB,gBAAED,IAAoB7E,EAAAA,EAAAA,MAElEq9C,GAAiBC,EAAAA,EAAAA,IAAkB77C,EAAK26C,GAExCj3C,EAAQ9B,EAAQ0B,QAAQI,MACxBC,EAAgB/B,EAAQ+B,eAEvBq4C,EAAeC,IAAoB13C,EAAAA,EAAAA,IAASs2C,GAC7Cr2C,EAAa3G,QAAQm+C,GAAiBJ,IACtC,UAAEv2C,EAAS,aAAEE,IAAiBE,EAAAA,EAAAA,IAClCkuH,EAAAA,EAAAA,IAAkBjwH,EAAO,WACxBc,GACDc,EAAAA,EAAAA,IAAe5B,EAAO,YAGhB6B,aAAcC,KAAqBC,EAAAA,EAAAA,IACzCkuH,EAAAA,EAAAA,IAAkBjwH,EAAO,aACxBtB,EACDyC,EAAAA,GAAeC,UAGV8uH,GAAeC,KAAmB10G,EAAAA,EAAAA,KACnCpa,IAASC,EAAAA,EAAAA,IAAcpD,GACvBqD,GAA8B,iBAAXlD,EACnB+xH,GAAsB/uH,KAAWE,GAEjC44C,IADWhgD,SAAQylD,EAAAA,EAAAA,IAA4B1hD,KACxBgyH,IAAiBE,GACxCh2E,IAAWiyD,EAAAA,EAAAA,GAAwBrsG,EAAOm6C,KAChD20E,EAAAA,EAAAA,IAAoB30E,GAAS,CAAE79C,IAAK89C,KACpC,MAAMvB,IAAe+G,EAAAA,EAAAA,IAA4B1hD,GAC3CyJ,GAAkB2wC,IAAkB43E,IAAkBxxH,EACtDswH,IAA2D,KAAzCl5F,EAAAA,EAAAA,GAAsBwiB,IAG5Ch8C,IAAK2yH,GACL1yH,aAAcuL,KACZ45G,EAAAA,EAAAA,GAAkB,CACpBjlH,OAAQkL,GACRg6G,kBAAmBqN,GACnBE,kBAAkB,KAGbvuH,GAAaC,KAAkBC,EAAAA,EAAAA,KAAS,IAExCwvH,GAAaC,KAAe/6F,EAAAA,EAAAA,IAAU,GACvCg7F,IAAuBC,EAAAA,EAAAA,IAAmBH,GAxExB,KA0ExBr0H,EAAAA,EAAAA,KAAU,KACR,IAAK2E,GACH,OAGF,MAAM8vH,EAAWV,EAAUhqH,QAC3BuqH,GAAYG,EAAS1sE,YAAc0sE,EAAS9tH,SAAS,GACpD,CAAC2tH,GAAa3vH,GAAa4vH,MAE9B1qH,EAAAA,EAAAA,KAAgB,KACd,IAAKlF,KAAgBqvH,EAAUjqH,QAC7B,OAGF,MAAMwpG,EAAmBsgB,EAAyBU,KAAyBV,EAC3EG,EAAUjqH,QAAQ0N,aAAa,oBAAqB87F,EAAiBnnE,WAAW,GAC/E,CAACznC,GAAa4vH,KAEjB,MAAMh8E,GAAap6C,QAAQwH,GAAau2C,GAElC+1E,IAAchsH,EAAAA,EAAAA,IAAgB,KAC7B8tH,EAAUhqH,UAIfnF,IAAe,GACf0vH,GAAY,IACZvuC,EAAAA,EAAAA,GAASguC,EAAUhqH,SAAQ,IAGvB2qH,IAAiBzuH,EAAAA,EAAAA,IAAgB,KACrC6tH,MACAA,EAAe7B,EAAW,IAGtB0C,IAAgB1uH,EAAAA,EAAAA,IAAgB,KACpC,MAAMwuH,EAAWV,EAAUhqH,QACvBpF,GACE8vH,EAAS3uC,SACXC,EAAAA,EAAAA,GAAS0uC,IACTG,EAAAA,EAAAA,OAEAH,EAAS52G,SAGX62G,KAEAD,EAAS52G,QACT42G,EAAS1sE,YAAc,GACvBg+B,EAAAA,EAAAA,GAAS0uC,IACTG,EAAAA,EAAAA,MACAhwH,IAAe,GACjB,KAGF5E,EAAAA,EAAAA,KAAU,KACHuF,IAGLovH,IAAe,GACd,CAACpvH,KAEJ,MAAM83C,IAAcp3C,EAAAA,EAAAA,IAAiBoqE,IACnC,IAAIA,EAAM/6D,OAAOC,QAAQ,sBAIzB,GAAK5P,EAAL,CAMA,IAAIjD,EAKJ,OAAI2C,KAAWE,IACb5B,EAAsB,CAAEzB,iBACxBmB,YAIFsxH,KAVEnxH,EAAoB,CAAEW,MAAOH,GAH/B,MAHEu4C,GAAkB82E,IAAeA,GAgBpB,KAGjBrzH,EAAAA,EAAAA,KAAU,KACJqD,GAAeY,GAAiBU,IAClCtB,GACF,GACC,CAACsB,GAAaV,EAAeZ,IAEhC,MAAMwxH,IAAmB5uH,EAAAA,EAAAA,IAAiBuG,IACxC,MAAMioH,EAAWjoH,EAAEmiE,cACnB2lD,GAAYG,EAAS1sE,YAAc0sE,EAAS9tH,SAAS,IAGjDwG,IAAmBlH,EAAAA,EAAAA,IAAgB,KACvCvC,EAAgB,CAAEnG,OAAQ2E,EAAQ3E,OAAQ6P,UAAWlL,EAAQhE,IAAK,IAoB9DiO,IAAoBlG,EAAAA,EAAAA,IAAgB,MACnCpD,GAAiBC,IAAyBI,EAC7CA,GAAqBN,GACXD,GACVwK,IACF,IAGF,OACExM,EAAAA,GAAAC,cAAA,OACEN,IAAKA,EACL7B,WAAWoC,EAAAA,EAAAA,GAAe,aAAc,cAAe0E,IAAoB,kBAAmB9G,GAC9FqC,QAASu8C,IAER13C,GACChF,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,iBACZ21H,IACCzzH,EAAAA,GAAAC,cAAC0jD,EAAAA,EAAY,CACXC,WAAS,EACT1H,aAAcA,GACd1yC,MAAOypH,EAAAA,GACPxpH,OAAQwpH,EAAAA,GACRn1H,UAAU,kBAGdkC,EAAAA,GAAAC,cAACsnD,EAAAA,EAAc,CACbC,QAAS5P,GACTj4C,IAAKyzH,EACLj1E,IAAKn5C,EACLlH,UAAU,aACV0L,MAAOypH,EAAAA,GACPxpH,OAAQwpH,EAAAA,GACR3wH,UAAWmxH,GACX/rE,yBAAuB,EACvBD,OAAQzjD,GACRmwH,cAAY,EACZxsE,MAAO3jD,GACP4jD,aAAW,EACXwsE,YAAU,EACVpY,QAASh4G,GAAc6zC,GAAUy5E,QAAch0H,EAC/C+2H,aAAcrwH,GAAckwH,QAAmB52H,EAC/CuqD,QAAS2rE,OAIbC,IACAzzH,EAAAA,GAAAC,cAAA,UACEN,IAAK89C,GACL3/C,UAAU,YACVsD,MAAQ,UAAS6xH,EAAAA,iBAAwCA,EAAAA,SAG7DjzH,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,YACZkG,IACChE,EAAAA,GAAAC,cAAA,OAAKuJ,MAAOypH,EAAAA,GAA2BxpH,OAAQwpH,EAAAA,IAC7CjzH,EAAAA,GAAAC,cAAA,UACEN,IAAK0zH,EACLniB,GAAI8hB,EACJ7hB,GAAI6hB,EACJ3pC,EAAG2pC,EA9PO,EA+PVl1H,UAAU,kBACVy2E,UAAY,eAAcy+C,MAAoBA,KAC9C,mBAAkBE,EAClB,oBAAmBA,MAK1B/nH,IACCnL,EAAAA,GAAAC,cAAA,OAAKN,IAAK2yH,GAAYx0H,UAAU,iBAC9BkC,EAAAA,GAAAC,cAAC2O,EAAAA,EAAe,CAACvF,SAAUtH,EAAgBoD,GAAmBD,KAGjEuuH,KAAwBtoH,IAxFzBnL,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,gBACbkC,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACL2N,MAAM,OACN1N,OAAK,EACLH,KAAK,UACLxC,UAAU,OACVwQ,gBAAc,GAEdtO,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,UAEbjO,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,gBA+EXjJ,IAAc22C,GACd37C,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,cAEXrJ,IACA5E,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GACT,yBAA0BoD,GAAiB,WAG5CU,IAAc6J,EAAAA,EAAAA,IAAoBulH,EAAUhqH,QAASg+C,cAAev5C,EAAAA,EAAAA,IAAoBxK,EAAM2C,YAC5FhC,IAAeovH,EAAUhqH,QAAS+7E,SAAWnlF,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,WAG9D5L,GACCrC,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACLL,QAASqL,GACT1N,UAAU,qBAEToE,GAAiBC,EAAuBnC,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,SAAYjO,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,eAC1EjM,GACChC,EAAAA,GAAAC,cAAA,OAAKwP,QAAQ,YAAY3R,UAAU,eACjCkC,EAAAA,GAAAC,cAAA,QACEnC,UAAU,eACVqJ,KAAK,cACLqC,MAAM,KACNC,OAAO,KACP,eAAa,IACb,kBAAgB,QAChBiG,GAAG,IACHC,GAAG,IACHC,OAAO,QACP,oBAAkB,IAClB,mBAAiB,YAMvB,C,+HC7UV,MA2DA,GAAenT,EAAAA,EAAAA,KA3DmC63H,EAChDx0H,SACAyB,UACAqQ,SACAk8E,aACAymC,kBACAtyG,UACAC,sBACAsyG,kBACAC,kBACAC,gBACAC,wBAGA,MAAMC,GAAUhxH,EAAAA,EAAAA,IAAuB,MACjCzF,GAAOC,EAAAA,EAAAA,KAEPurB,GAAoBrkB,EAAAA,EAAAA,IAAgB,IAAMwoF,EAAW1kF,UACrDolF,GAAYlpF,EAAAA,EAAAA,IAAgB,KAAM,CAAGu9E,YAAY,MACjDh5D,GAAiBvkB,EAAAA,EAAAA,IAAgB,IAAMsvH,EAAQxrH,UAC/CwgB,GAAiBtkB,EAAAA,EAAAA,IAAgB,IAAM6K,SAASG,OAEhDukH,EAAoBtzH,EAAQuzH,cAAgBP,GAAmBhzH,EAAQwzH,UAE7E,OACE/0H,EAAAA,GAAAC,cAAC4hB,EAAAA,EAAI,CACHliB,IAAKi1H,EACL90H,OAAQA,EACR8R,OAAQA,EACRixE,YAAU,EACV/kF,UAAU,wBACV0wF,UAAWA,EACX7kE,kBAAmBA,EACnBE,eAAgBA,EAChBD,eAAgBA,EAChB3H,QAASA,EACTC,oBAAqBA,GAEpB3gB,EAAQuzH,aAAeJ,GACtB10H,EAAAA,GAAAC,cAACuiB,EAAAA,EAAQ,CAACC,KAAK,UAAUtiB,QAASu0H,GAAgBv2H,EAAK,6BAEvDo2H,GACAv0H,EAAAA,GAAAC,cAACuiB,EAAAA,EAAQ,CAACC,KAAK,OAAOtiB,QAASq0H,GAC5Br2H,EAAKoD,EAAQwzH,UAAY,yBAA2B,yBAGxDxzH,EAAQwzH,WAAaJ,GACpB30H,EAAAA,GAAAC,cAACuiB,EAAAA,EAAQ,CAACC,KAAK,YAAYtiB,QAASw0H,GACjCx2H,EAAK,aAGT02H,GAAqB70H,EAAAA,GAAAC,cAAC4qB,EAAAA,EAAa,MACpC7qB,EAAAA,GAAAC,cAACuiB,EAAAA,EAAQ,CAACC,KAAK,eAAetiB,QAASs0H,GACpCt2H,EAAK,WAEH,ICSX,GAAe1B,EAAAA,EAAAA,KA1E4Cu4H,EACzDl1H,SACAyB,UACAqQ,SACAk8E,aACAymC,kBACAU,cACAhzG,UACAC,0BAEA,MAAM,kBACJgzG,EAAiB,WACjB79F,EAAU,uBACV89F,EAAsB,sBACtBC,IACEl3H,EAAAA,EAAAA,OAEE,IAAEyB,IAAQolH,EAAAA,EAAAA,GAAkB,CAChCjlH,SACAoiB,wBAGImzG,GAAkB/vH,EAAAA,EAAAA,IAAgB,KACtC2vH,MACAhzG,GAAS,IAGLqzG,GAAqBhwH,EAAAA,EAAAA,IAAgB,KACzC4vH,EAAkB,CAAEt4H,OAAQ2E,EAAQ3E,SACpCy4H,GAAiB,IAGbE,GAAsBjwH,EAAAA,EAAAA,IAAgB,KAC1C8vH,IACAC,GAAiB,IAGbG,GAAoBlwH,EAAAA,EAAAA,IAAgB,KACxC+xB,EAAW,CACTzwB,KAAM,CACJrF,QAAS,CAACA,EAAQuzH,YAAavzH,EAAQk0H,gBAAgB70G,KAAK,SAGhEy0G,GAAiB,IAGbK,GAA+BpwH,EAAAA,EAAAA,IAAgB,KACnD6vH,EAAuB,CAAElqF,OAAQ1pC,EAAQ3E,OAAQ+4H,SAAUp0H,EAAQo0H,WACnEN,GAAiB,IAGnB,GAAKzjH,EAIL,OACE5R,EAAAA,GAAAC,cAAA,OAAKN,IAAKA,EAAK7B,UAAU,wBACvBkC,EAAAA,GAAAC,cAACq0H,EAA2B,CAC1Bx0H,OAAQA,EACR8R,OAAQA,EACRk8E,WAAYA,EACZvsF,QAASA,EACTgzH,gBAAiBA,EACjBtyG,QAASA,EACTC,oBAAqBD,EACrBuyG,gBAAiBc,EACjBb,gBAAiBc,EACjBb,cAAec,EACfb,kBAAmBe,IAEjB,G,mSCpCV,MAoQA,EApQcnxB,EACZhnG,KACA8F,QACAiD,QACA2rH,cACAxkE,gCACA5B,gCACAjqD,YACA44C,cACAsrD,cACArkG,iBACAwtG,cACA7U,aACA2rB,cACAhkH,gBACAihD,cACAllD,YACA6jH,wBACA/d,WACAzjG,UACAwC,qBAEA,MAAM,oBAAEE,IAAwB3E,EAAAA,EAAAA,MAE1ByB,GAAMiE,EAAAA,EAAAA,IAAuB,MAE7B6hD,GAAW7hD,EAAAA,EAAAA,IAAyB,MAEpCsuH,EAAoC,yBAApB7uH,EAAM4iG,UAEtB7pD,EAAgB81E,OAAgC50H,EAAhB+F,EAAM6rD,SAErC5L,EAAgB8uE,EAAa7uE,IAAezkC,EAAAA,EAAAA,GAAQozG,GAAiB7uH,EAAMu7B,YAElFv/B,EAAAA,EAAAA,KAAU,KACJ6yH,GAAiB7uH,EAAMu7B,UACzBwzF,IAEA7uE,GACF,GACC,CAAC2uE,EAAe7uH,IAEnB,MAAMuyH,GAA2Bp6E,EAAAA,EAAAA,IAAkB77C,EAAK8tD,GAClDooE,GACJr6E,EAAAA,EAAAA,IAAkB77C,EAAKksD,IACpB+pE,EAECE,GAAoBlyH,EAAAA,EAAAA,IAAOgyH,GAC7BC,IAA6BC,EAAkB1sH,UACjD0sH,EAAkB1sH,SAAU,GAG9B,MAAM,SAAEtF,KAAaC,EAAAA,EAAAA,OACd43C,GAAeC,KAAoB13C,EAAAA,EAAAA,IAASs2C,GAC7Cr2C,GAAa3G,QAAQm+C,IAAiBi6E,IAA6B1D,IAClE6D,GAAeC,KAAoB9xH,EAAAA,EAAAA,IAAS1G,QAAQsoG,IAAgBxiD,IAErEu4D,GAAiBqW,OAAqD50H,GAArCg2H,EAAAA,EAAAA,IAAkBjwH,EAAO,WACzD4yH,KAAwB/xH,EAAAA,EAAAA,IAAS1G,QAAQq+G,IAAiBlyD,EAAAA,GAA0BkyD,OACrF,UAAE72G,GAAS,aAAEE,KAAiBE,EAAAA,EAAAA,GAClCy2G,IACC13G,GACA+tH,OAAkD50H,GAAlC2H,EAAAA,EAAAA,IAAe5B,EAAO,WAEnCujD,GAAgBxK,GAAgBp3C,IAC/BuuH,GAAeC,KAAmB10G,EAAAA,EAAAA,KAEnCo9B,IAAeC,EAAAA,EAAAA,IAAiB94C,GAChC6yH,GAAW14H,QAAQ0+C,IACnBuzD,GAAwBjyG,QAAQyxG,GAEhCknB,GAAWvvE,IAAiBkvE,EAAkB1sH,QAE9CgtH,IAAgBC,EAAAA,EAAAA,GAAoB5wE,GAAU,GAAO0wE,IAErDG,GAAoBpE,OAAsD50H,GAAtCg2H,EAAAA,EAAAA,IAAkBjwH,EAAO,YAC5DkzH,KAAsBryH,EAAAA,EAAAA,IAAS1G,QAAQ84H,IAAoB3sE,EAAAA,GAA0B2sE,MACtFE,GAAiBZ,EACjBv5E,IAAiB93C,EAAAA,EAAAA,GAAS+xH,IAAmBE,IAC7CC,GAAoBlD,KAAkB6C,GACtCM,IAAavE,EAAAA,EAAAA,IAAsC+D,IAAY75E,MAAoBo6E,IAEnFj5E,GAAUhgD,SAAS04H,IAAY75E,IAAkBk3E,IACjD91E,IAAWiyD,EAAAA,EAAAA,GAAwBrsG,EAAOm6C,KAChD20E,EAAAA,EAAAA,IAAoB30E,GAAS,CAAE79C,IAAK89C,KACpC,MAAM27C,IAAuBsW,EAAAA,EAAAA,GAAwBrsG,GAAQosG,KAErDvqG,aAAcC,KAAqBC,EAAAA,EAAAA,GACxC8sH,OAAuD50H,GAAvCg2H,EAAAA,EAAAA,IAAkBjwH,EAAO,aACzCtB,EACAmwH,OAAoD50H,GAApC2H,EAAAA,EAAAA,IAAe5B,EAAO,cAGnC,YAAE0H,GAAW,eAAEC,GAAc,iBAAEC,KAAqBC,EAAAA,EAAAA,IACxDzJ,IAAmBM,EAAgBoD,GAAmBD,IACrDf,KAAeovH,KAAkB0C,IAAyBl0H,OACxCzE,IAAnBmE,GAGI4wH,IAA2D,KAAzCl5F,EAAAA,EAAAA,GAAsBwiB,KAE5Ch8C,IAAK2yH,GACL1yH,aAAcuL,KACZ45G,EAAAA,EAAAA,GAAkB,CACpBjlH,OAAQkL,KAAmBorH,GAC3BpR,kBAAmBqN,GACnBE,kBAAkB,KAGlB5yH,IAAKg3H,KACH5R,EAAAA,EAAAA,GAAkB,CACpBjlH,OAAQtC,SAASm+C,IAAiBiL,MAAmBmvE,KAAkB5qH,OAGlEpK,GAAc61H,KAAmB1yH,EAAAA,EAAAA,IAAiB,GACnDgwH,IAAmB5uH,EAAAA,EAAAA,IAAiBuG,IACxC+qH,GAAgB3vH,KAAKgD,IAAI,EAAG4B,EAAEmiE,cAAc5mB,YAAc,GAAG,IAGzDphD,IAAYmkC,OAAO0sF,SAASpxE,EAASr8C,SAASpD,YAAcowH,GAC9D3wE,EAASr8C,SAASpD,SAAW3C,EAAM2C,WAAa,GAE9C,MACJwD,GAAK,OAAEC,IACL2wF,IACF83B,GACI4E,EAAAA,EAAAA,IAAmCzzH,EAAO7F,QAAQ8I,GAAQy/G,EAAakM,EAAarwH,EAAWkC,KAC/FizH,EAAAA,EAAAA,IAAyB1zH,EAAO7F,QAAQ8I,GAAQy/G,EAAakM,EAAarwH,EAAWkC,KAGrF44C,IAAcp3C,EAAAA,EAAAA,IAAgB,CAACuG,EAA8CmrH,KACjF,GAAIjsH,GACFpI,IAAiBihG,QAInB,GAAKsuB,IAAiBnwH,EAKtB,GAAK6kD,GAAL,CASA,GAJIA,KAAkBmvE,IACpBC,IAAiB,IAGf1yE,EAKJ,OAAI0zE,GAAiB7yH,KAAeovH,KAAkB0C,IACpDr6E,IAAiB,QACjB/vC,EAAEM,wBAIJhM,IAAUyjG,EAAW/3F,GAVnB03C,GAPF,MAFE3H,IAAkB82E,IAAeA,SALjC7vH,EAAoB,CAAEW,MAAOH,GAwBR,IAGnB4zH,IAAuB3xH,EAAAA,EAAAA,IAC1BuG,IACC6wC,GAAY7wC,GAAG,EAAK,IAIlB+mH,IAAqB1yH,EAAAA,EAAAA,GACzB,oBACC6K,IAAe,cAChBtB,GAASopH,EAAAA,IAAoB,iBAC7B/0H,GAIIsD,GAAS,WAAUqI,QADD2wF,EAAc,WAAU5wF,eAAkB4wF,EAAWlwF,aAAakwF,EAAWjwF,OAAS,KAG9G,OACEnK,EAAAA,GAAAC,cAAA,OACEN,IAAKA,EACLpC,GAAIA,EACJO,UAAW80H,GACXxxH,MAAOA,GACPjB,QAAS4K,QAAczN,EAAauO,GAAM6wC,GAAY7wC,IAErD4jG,IACCzvG,EAAAA,GAAAC,cAAA,UAAQN,IAAKy5F,GAAsBt7F,UAAU,yBAE9Cq4H,IACCn2H,EAAAA,GAAAC,cAACsnD,EAAAA,EAAc,CACb5nD,IAAK8lD,EACLtH,IAAKyI,GACL9oD,WAAWoC,EAAAA,EAAAA,GAAe,aAAcuvG,IAAyB,mBACjEjoD,QAASuuE,IAAiBF,IAA6BO,GACvDjC,cAAY,EACZ1sE,OAAK,EACLE,MAAI,EACJC,aAAW,EACXF,yBAAuB,EACvBl4C,WAAYwzC,EACZqxE,aAAcH,GACdrsE,QAAS2rE,GACTpyH,MAAO6tG,EAAe,UAASA,WAAkB3xG,IAGrD0C,EAAAA,GAAAC,cAAA,OACEN,IAAK+2H,GACLv4E,IAAK9B,GACLv+C,WAAWoC,EAAAA,EAAAA,GAAe,YAAauvG,IAAyB,mBAChEz4F,IAAI,GACJ5V,MAAO6tG,EAAe,UAASA,YAAmB3xG,EAClDkS,WAAYwzC,IAEbkzE,KAAaK,IACZv2H,EAAAA,GAAAC,cAAA,UAAQN,IAAK89C,GAAU3/C,UAAU,cAElCklD,GAAehjD,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,cAChCkC,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACrO,IAAKg3H,GAAe1oH,KAAK,eAC/BjO,EAAAA,GAAAC,cAAC0jD,EAAAA,EAAY,CACXC,UAAWN,EACXyvE,eAAa,EACb72E,aAAcA,GACd1yC,MAAOA,GACPC,OAAQA,GACR3L,UAAU,kBAEXqN,IACCnL,EAAAA,GAAAC,cAAA,OAAKN,IAAK2yH,GAAYx0H,UAAU,iBAC9BkC,EAAAA,GAAAC,cAAC2O,EAAAA,EAAe,CACdvF,SAAU4B,GACV9K,QAAS82H,OAIbt7E,KAAkBiL,IAClB5mD,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,cAEZjD,IAAoBorH,KAAiBr0H,EAKpC/B,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,2BACXo0H,GAAiB7uH,EAAMwgD,MAAQ,OAAQh2C,EAAAA,EAAAA,IAAoB5G,KAAKgD,IAAIjE,GAAWjF,GAAc,IAC9Fq1H,IAAiBp2H,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAACC,KAAK,iBAAiBnQ,UAAU,qBAN1DkC,EAAAA,GAAAC,cAAA,QAAMnC,UAAU,6BACZiN,IAAehJ,EAAkB,GAAEkF,KAAKxG,MAAyB,IAAnBwK,OAA6B,OAQhFzN,QAAQmkH,IACP3hH,EAAAA,GAAAC,cAAA,OACEnC,UAAU,8BACVsD,MAAQ,gBAAe6F,KAAKgB,MAAO05G,EAAwB37G,GAAY,UAGvE,C,0VCxTV,MC6DA,GAAevJ,EAAAA,EAAAA,KAxCWy6H,EACxBtK,OACAn/D,gCACA5B,gCACA1rD,cAGA,MAAMg3H,GAAavzH,EAAAA,EAAAA,IAAuB,OACpC,SACJwzH,EAAQ,MAAEC,EAAK,QAAEC,IACfC,EAAAA,EAAAA,IAAkB3K,GAEhB4K,EAAmB,CAACJ,EAAUK,YAAaL,EAAUM,WAE3D,OACE13H,EAAAA,GAAAC,cAAA,OACEnC,UDrCiB,WCsCjBqC,QAASA,GAETH,EAAAA,GAAAC,cAAA,OAAKnC,UDxC2C,YCyC9CkC,EAAAA,GAAAC,cAAC03H,EAAAA,EAAuB,CACtB75H,UD1CoE,WC2CpE05H,iBAAkBA,EAClBI,aAAcR,EAAUQ,aACxBC,YAAaP,EAAS1oF,WAG1B5uC,EAAAA,GAAAC,cAAA,OAAKN,IAAKw3H,EAAYr5H,UDhD8E,YCiDlGkC,EAAAA,GAAAC,cAACy4D,EAAAA,EAAW,CACVC,aAAcw+D,EACdvoF,QAASyoF,EAAOzoF,QAChBtuC,KAjCqB,IAkCrBurD,8BAA+BA,EAC/B4B,8BAA+BA,KAG/B,IC0RV,GAAehxD,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KACjBC,IACQ,CACLo5B,uBAAuBC,EAAAA,EAAAA,KAA4Br5B,MAHrCD,EA3QuBmxB,EACzCtsB,UACAK,YACA44C,cACAsrD,cACAh4E,YACAi4F,cACAhkH,iBAAgB,EAChBihD,cACA61C,cACA3nE,QACA5vB,QACA4tH,oBACAt0E,qBACAH,wBACAknE,wBACA91F,YACA4hC,gCACA5B,gCACAhR,eACAu0E,kBACArhG,mBACAohG,cACAE,4BAEA,MAAM,QAAEyI,EAAO,iBAAEC,IAAqB75H,EAAAA,EAAAA,MAChC0vB,GAAU2+B,EAAAA,EAAAA,IAAkBhrD,IAC5B,SAAEuC,IAAaC,EAAAA,EAAAA,MAEfi0H,GAAcp0H,EAAAA,EAAAA,IAAuB,MAErCqkB,IAAU7pB,EAAAA,EAAAA,KACVD,IAAO+pB,EAAAA,EAAAA,KAEPq/F,IAAmBjiH,EAAAA,EAAAA,IAAgB,KACvCu1C,GAAe,IAGXo9E,IAAuB3yH,EAAAA,EAAAA,IAAiBuG,IAC5CkiB,IAAmBliB,EAAE,IAGjBqsH,IAAyB5yH,EAAAA,EAAAA,IAAgB,KACxCsoB,GAELmqG,EAAiB,CACfnrG,IAAKgB,EAAQhB,KACb,KAGIsE,MAAOpK,GAAS,SAAEmN,IAAarG,GAAW,CAAC,GAEnDkpD,EAAAA,EAAAA,GAAehwD,IAAWmkB,OAAQnkB,IAAWvpB,GAAI2zB,GAEjD,MAAMinG,GAAiBlkG,IAAUmkG,iBAAmBnkG,IAAUokG,YAAY,IAAItvC,mBACxExB,IAAcC,EAAAA,EAAAA,GAAwBwwC,OAAa16H,GAAY66H,IAE/DG,IAAgB75H,EAAAA,EAAAA,KAAQ,KAC5B,MAAMgvC,EAAa7f,GAAShB,MAAO8gB,EAAAA,EAAAA,IAAiB9f,GAAShB,KAC7D,GAAK6gB,GAAgB,cAAeA,EACpC,OAAOA,EAAW2N,SAAS,GAC1B,CAACxtB,GAAShB,MAEb,IAAKgB,EACH,OAGF,MAAM,SACJ8+B,GAAQ,IACR9/B,GAAG,WACHkgC,GAAU,MACVngD,GAAK,YACLq3C,GAAW,MACXv2B,GAAK,MACLpqB,GAAK,MACLH,GAAK,KACLoX,GAAI,SACJnK,GAAQ,UACRooH,IACE3qG,EACE4qG,GAlHmB,mBAkHTl+G,GACVm+G,GAlHkB,iBAkHTn+G,GAGTo+G,GAAsB5qG,GAFLoD,GAAS,cAAeA,OAE4C5zB,EC1JtF,SAAiCgd,GACtC,OAAQA,GACN,IAAK,2BACL,IAAK,6BACL,IAAK,wBACH,MAAO,wBACT,IAAK,mBACH,MAAO,oBACT,IAAK,eACH,MAAO,gBACT,IAAK,qBACH,MAAO,sBACT,IAAK,sBACH,MAAO,6BACT,IAAK,qBACL,IAAK,gBACH,MAAO,kBACT,IAAK,mBACH,MAAO,oBACT,IAAK,gBACH,MAAO,iBACT,IAAK,kBACH,MAAO,mBACT,IAAK,oBACH,MAAO,eACT,IAAK,iBACH,MAAO,kBACT,IAAK,yBACL,IAAK,uBACH,MAAO,kBACT,IAAK,sBACH,MAAO,uBACT,IAAK,eACH,MAAO,uBACT,QACE,OAEN,CDqH6Dq+G,CAAwBr+G,IAC7Es+G,GAAmBF,IAAsBv6H,GAAKu6H,IAE9C3rE,IAAuBC,EAAAA,EAAAA,GAAShJ,GA1HhB,KA2HhB60E,GAAYr7H,QAAQuvD,IAAwBpgD,IAAS+/C,IAC3D,IAAIosE,GAAgBt7H,QAAQy2B,IAC5B,GAAI4kG,IAAajrG,GAASH,QAAUG,EAAQvqB,QAAUuqB,EAAQzd,SAAU,CACtE,MAAM,MAAE3G,EAAK,OAAEC,IAAWoxF,EAAAA,EAAAA,IAAyB,CACjDr3F,MAAOoqB,EAAQH,MACfnnB,MAAO/E,EAAQk+D,WACfwyD,aAAa,EACblM,cACAnkH,YACAkC,aAEFg1H,IAAiBtvH,IAAUC,GAAwB,UAAd8uH,KAAwC,UAAdA,EACjE,CACA,MAAMQ,IAAsBtrG,IAASpqB,KAAUw3C,IAAiBi+E,GAE1Dh7H,IAAYoC,EAAAA,EAAAA,GAChB,UACA4tB,GAAa,cACZjC,GAAaiC,GAAa,cAC3BgrG,IAAiB,qBAChBrrG,KAAUpqB,KAAUyqB,GAAa,gBAClCzqB,IAAS,cACRw1H,IAAa,aACd1oH,IAAY,gBACZyoH,IAAoB,oBACpBH,IAAU,aAkBZ,OACEz4H,EAAAA,GAAAC,cAAC8uD,EAAAA,EAAgB,CACfjxD,UAAWA,GACX,gBAAe4uD,IAAYI,IAAY,GACvCr/C,IAAKwa,GAAQpkB,MAAQ,MAAQ,OAC7B1D,QAAS83H,IAETj4H,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GACd,mBACAs4H,IAAW,WACXC,IAAU,YAGTvJ,GACClvH,EAAAA,GAAAC,cAAC+4H,EAAAA,EAAmB,CAClBC,gBAAiB/J,EACjBpxH,UAAU,8BAGb06H,IACCx4H,EAAAA,GAAAC,cAACi8G,EAAAA,EAAS,CAAChrF,MAAOA,EAAO8xB,YAAaA,EAAa61C,YAAaA,EAAat6B,WAAS,IAEvFk6D,KAAW3qG,GACV9tB,EAAAA,GAAAC,cAACi3H,EAAiB,CAChBtK,KAAMh/F,EAAQg/F,KACdn/D,8BAA+BA,EAC/B5B,8BAA+BA,EAC/B1rD,QAAS+3H,KAGZW,IACC74H,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GAAe,gBAAiB4tB,GAAa,4BACxD3tB,QAAU2tB,OAA4DxwB,EAAhD,IAAMw6H,EAAQ,CAAElrG,OAAKssG,iBAAiB,KAE5Dl5H,EAAAA,GAAAC,cAACitD,EAAAA,EAAQ,CAACpvD,UAAU,YAAY8uB,IAAKA,GAAKhV,KAAM80C,IAAYI,OACzDh/B,GAAa2qG,KAAW9rH,IACzB3M,EAAAA,GAAAC,cAAA,KAAGnC,UAAU,eAAc4P,EAAAA,EAAAA,GAAWf,KAEvCogD,KAAyB0rE,IACxBz4H,EAAAA,GAAAC,cAAA,KAAGnC,UAAU,qBAAoB4P,EAAAA,EAAAA,GAAWq/C,GAAsB,CAAC,QAAS,SAIjFt/B,KAAUgrG,KAAWp1H,KAAU8M,IAC9BnQ,EAAAA,GAAAC,cAACokG,EAAAA,EAAK,CACJ52E,MAAOA,GACPnnB,MAAO/E,EAAQk+D,WACfwyD,aAAW,EACX33E,oBAAqBmT,EACrB7rD,UAAWA,EACX44C,YAAaA,EACbl6C,KAAMw4H,GAAgB,YAAc,SACpC/S,YAAaA,EACbz3G,gBAAiByqH,GACjBh3H,cAAeA,EACfihD,YAAaA,EACb1hD,MAAOA,EACPnB,QAAS44H,GAAqBxR,QAAmBjqH,EACjDqF,eAAgB0sH,KAGlBvhG,GAAazqB,IACbrD,EAAAA,GAAAC,cAACskG,EAAAA,EAAK,CACJlhG,MAAOA,GACPiD,MAAO/E,EAAQk+D,WACfwyD,aAAW,EACXxkE,8BAA+BA,EAC/B7rD,UAAWA,EACX44C,YAAaA,EACbsrD,YAAaA,EACbigB,YAAaA,EACbhkH,cAAeA,EACfihD,YAAaA,EACb2+D,sBAAuBA,GAAyB2W,GAChDn4H,QAAS44H,GAAqBxR,QAAmBjqH,EACjDqF,eAAgB0sH,KAGlBvhG,GAAa5qB,IACblD,EAAAA,GAAAC,cAACoB,EAAAA,GAAK,CACJC,MAAOA,EACPC,QAASA,EACTG,OAAQmD,EAAAA,GAAYqI,OACpBtL,UAAWA,EACXG,cAAeA,EACfS,OAAQ2sH,EACRxsH,eAAgB0sH,KAGlBvhG,GAAa3d,IACbnQ,EAAAA,GAAAC,cAACo6C,EAAAA,EAAQ,CACPlqC,SAAUA,GACV5O,QAASA,EACT+4C,oBAAqBmT,EACrBhT,sBAAuBA,EACvBI,aAAcu0E,EACdzsH,eAAgB0sH,EAChBttH,cAAeA,EACf64C,mBAAoBA,KAGtB9sB,GAAamG,IACbj0B,EAAAA,GAAAC,cAAA,OACEN,IAAKq4H,EACLl6H,WAAWoC,EAAAA,EAAAA,GACT,cAAe,eAAgB+zB,GAASklG,SAAW,sBAAuB,sBAG3EllG,GAASokG,UAAUl5H,KAAKyvC,GACvB5uC,EAAAA,GAAAC,cAAA,OAAKi3C,IAAKtI,EAAQrxC,GAAIO,UAAU,oBAC9BkC,EAAAA,GAAAC,cAACy4D,EAAAA,EAAW,CACVC,aAAcq/D,EACdppF,QAASA,EACTiqB,YAAU,EACVv4D,KAAM2zB,GAASklG,QArRd,GADE,GAuRH5xC,YAAaA,GACb17B,8BAA+BA,EAC/B4B,8BAA+BA,QAMxC3/B,GAAag/B,KAAe+rE,IAC3B74H,EAAAA,GAAAC,cAAA,OAAKnC,UAAU,gBACbkC,EAAAA,GAAAC,cAAA,KAAGnC,UAAU,aAAagvD,IAC1B9sD,EAAAA,GAAAC,cAAA,KAAGnC,UAAU,oBAAoBmqB,GAAQ,6BAI9C2wG,KAlJsBQ,GAkJgBR,GAhJvC54H,EAAAA,GAAAC,cAACO,EAAAA,EAAM,CACL1C,UAAU,wBACVwC,KAAK,OACL6N,MAAM,cACNkrH,eAAa,EACbC,mBAAiB,EACjBn5H,QAAS+3H,IAERkB,MAVP,IAA2BA,EAmJN,I,kDE5UvB,MAAMG,EAA2B,CAC/BC,KAAM,CACJC,SAAU,mBACVC,SAAU,iBAEZC,MAAO,CACLF,SAAU,mBACVC,SAAU,qBAIC,SAAS5pB,EACtB3xD,EAAa73C,EAAgB/I,EAAYuE,EAAsBR,GAE/D,OAAIQ,EACKoW,QAAQwE,QAAQ68G,EAAyBj4H,GAAS,SAASgF,EAAQ,WAAa,cAGlFszH,EAAAA,EAAAA,IAAmB,CACxB3rH,KAAM,6CACN8/B,KAAM,CAACoQ,EAAK73C,IACXW,KAAKxG,MAAMlD,GAAMs8H,EAAAA,GACtB,C,8ECjBA,MAAMC,EAAwB,GACxBC,EAA8B,GACvB3L,EAA4B,GAAK/vE,EAAAA,EACxC27E,EAAkBF,EAAwBz7E,EAAAA,EACnCw0E,EAAmB,EAAIx0E,EAAAA,EAE7B,SAASgwE,EAAiBz2G,EAAek0G,GAC9C,OAAQl0G,GAAMxX,QAAU,GAAK25H,GAA+BjO,EACxDsC,EACA4L,CACN,CAEO,SAASn/B,GAAyB,MACvCr3F,EAAK,YACL+rH,EAAW,MACXjpH,EAAK,YACL2rH,EAAW,YACXlM,EAAW,UACXnkH,EAAS,SACTkC,IAUA,MAAMm2H,EAA8B,UAApBz2H,EAAMyiG,UAChBhgD,EAA8B,UAApBziD,EAAMyiG,UAChBi0B,EAAiBD,GAAWhI,EAC5BkI,EAAiBl0E,GAAWgsE,GAC5B,MAAEzoH,EAAK,OAAEC,GAAWwwH,GACtBG,EAAAA,EAAAA,IAA+B52H,EAAO8C,EAAOy/G,EAAamU,EAAgBt4H,EAAWkC,GACrFmiD,GAAU8wE,EAAAA,EAAAA,IAAyBvzH,EAAO8C,EAAOy/G,EAAaoU,EAAgBv4H,EAAWkC,IACvFgzH,EAAAA,EAAAA,IAAmCtzH,EAAO8C,EAAOy/G,EAAakM,EAAarwH,EAAWkC,GAEtFu2H,EAAgBhM,EAAiBkB,GAEvC,IAAI+K,EAAgB,EAChB9wH,EAAQ6wH,GAAiBA,EAAgB7wH,EAAQswH,IACnDQ,EAAgBD,EAAgB7wH,GAE9BC,EAAS6wH,EAAgBzH,GAAoBA,EAAmBppH,EAAS6wH,EAAgBR,IAC3FQ,EAAgBzH,EAAmBppH,GAGrC,MAAM8wH,EAAatzH,KAAKxG,MAAM+I,EAAQ8wH,GAChCE,EAAcvzH,KAAKxG,MAAMgJ,EAAS6wH,GAExC,MAAO,CACL9wH,MAAO+wH,EACP9wH,OAAQ+wH,EACR7H,QAAS4H,EAAaF,GAAiBG,EAAc3H,EAEzD,C,oHCzDA,MAAM4H,EAAe,GAErB,IAAIC,GAAmB,ECAR,SAAShrB,EACtBlsG,EACAmgB,GAIA,ODJa,SACbg3G,EACAh3G,GAAa,GAGb,MAAMhd,GAAY/C,EAAAA,EAAAA,IAA0B,MACtCg3H,GAAcn8H,EAAAA,EAAAA,KAAQ,KAAMo8H,EAAAA,EAAAA,GAAchB,EAAAA,KAAea,IAAkB,IAC3EI,GAAel3H,EAAAA,EAAAA,MAEfm3H,GAAYz1H,EAAAA,EAAAA,IAAgBkP,MAAOrL,EAA2B6xH,KAClE,MAAMC,QAAc5rC,EAAAA,EAAAA,IAAa2rC,GAC5BC,IAIL/5F,EAAAA,EAAAA,KAAgB,KACd/3B,EAAOK,MAAQyxH,EAAMzxH,MACrBL,EAAOM,OAASwxH,EAAMxxH,OAEtBqxH,EAAa1xH,QAAUD,EAAO+xH,6BAE9B,MAAM9wH,EAASnD,KAAKk0H,KAAKl0H,KAAKC,IAAI+zH,EAAMzxH,MAAOyxH,EAAMxxH,QAAUgxH,IAE/Db,EAAAA,EAAAA,IAAmB,CACjB3rH,KAAM,6BACN8/B,KAAM,CAAC+sF,EAAa1xH,QAAS4xH,EAAK5wH,GAClCgxH,cAAe,CAACN,EAAa1xH,UAC5BwxH,EAAY,GACf,IAYJ,OATA1xH,EAAAA,EAAAA,KAAgB,KACd,IAAKyxH,GAAah3G,GAAcm3G,EAAa1xH,QAAS,OAEtD,MAAMD,EAASxC,EAAUyC,QACpBD,GAEL4xH,EAAU5xH,EAAQwxH,EAAU,GAC3B,CAACI,EAAWp3G,EAAYg3G,IAEpBh0H,CACT,CCrCS00H,CAFS73H,EAAyB,iBAAVA,EAAqBA,GAAQ24C,EAAAA,EAAAA,IAAiB34C,QAASlG,EAE/CqmB,EACzC,C,wECVA,MAEM23G,EAAuB,IAAI1zC,IAElB,SAASp5B,EACtBjB,EACA3wD,EACA6P,EACA8uH,GAEA,MAAMC,EAAqBD,GAAyB9uH,EAChD8gD,GAAkBkuE,WAAWF,KAAyB9uH,QAAanP,GAEjE,UAAEmlH,EAAS,KAAE7qG,GAAS4jH,GAAsB,CAAC,EAUnD,OARAn8H,EAAAA,EAAAA,KAAU,KACHzC,GAAW6P,IAEXmL,QAAsBta,IAAdmlH,GAA2B8Y,GA0C5C,SACE3+H,EACA6P,EACA4yE,GAEA,MAAMq8C,EAAuBJ,EAAqBhiG,IAAI+lD,IAAmB,IAAIuI,IACvEpjE,EAAak3G,EAAqBpiG,IAAI18B,IAAW,GAEnD4nB,EAAWjD,SAAS9U,KAKxB+X,EAAWlX,KAAKb,GAChBivH,EAAqB5xC,IAAIltF,EAAQ4nB,GACjC82G,EAAqBxxC,IAAIzK,EAAgBq8C,IAEzCx9H,EAAAA,EAAAA,MAAay9H,+BAA+B,CAAE/+H,SAAQ4nB,aAAY66D,oBARhEu8C,GAWJ,CA7DMC,CAAsBj/H,EAAQ6P,EAAW8uH,EAC3C,GACC,CAAC3+H,EAAQgb,EAAM6qG,EAAWh2G,EAAW8uH,IAEnC3+H,GAAW6P,EAOT,CACLg2G,YACAl0D,eAAgB32C,GART,CACL6qG,WAAW,EACXl0D,oBAAgBjxD,EAQtB,CAEA,MAAMs+H,GAA0B/7B,EAAAA,EAAAA,KAEhC,WACE,MAAM,kBAAEi8B,IAAsB59H,EAAAA,EAAAA,MAC9B,IAAI69H,GAAiB,EACrBT,EAAqBzxH,SAAQ,CAAC9K,EAAOsgF,KACnCtgF,EAAM8K,SAAQ,CAAC2a,EAAY5nB,KACzB,MAAMo/H,EAAwBx3G,EAAWtlB,MAAM,EA3CnB,IA6CxB88H,EAAsB57H,OAASokB,EAAWpkB,SAC5C27H,GAAiB,GAGnBD,EAAkB,CAAEl/H,SAAQ4nB,WAAYw3G,EAAuB38C,mBAiCrE,SACEziF,EACA4nB,EACA66D,GAEA,MAAMq8C,EAAuBJ,EAAqBhiG,IAAI+lD,GACtD,IAAKq8C,GAAsBp7H,KAEzB,YADAg7H,EAAqBvzC,OAAO1I,GAI9B,MAAM48C,EAAgBP,EAAqBpiG,IAAI18B,GAC/C,IAAKq/H,GAAe77H,OAElB,YADAs7H,EAAqB3zC,OAAOnrF,GAI9B,MAAMs/H,EAAgBD,EAAc78H,QAAQ7B,IAAQinB,EAAWjD,SAAShkB,KAExE,IAAK2+H,GAAe97H,OAKlB,OAJAs7H,EAAqB3zC,OAAOnrF,QACvB8+H,EAAqBp7H,MACxBg7H,EAAqBvzC,OAAO1I,IAKhCq8C,EAAqB5xC,IAAIltF,EAAQs/H,EACnC,CA3DMC,CAA0Bv/H,EAAQo/H,EAAuB38C,EAAe,GACxE,IAGA08C,GACFH,GAEJ,GAzDuB,I,mFCAvB,MAAMQ,EAAW/9E,EAAAA,EAEF,SAASk9D,GAAmB,UACzCC,EAAS,WACTC,EAAU,WACVZ,EAAU,mBACVkX,EAAkB,WAClBpuG,EAAU,GACVpmB,IASA,MAAM+nF,GAAiBhgF,EAAAA,EAAAA,IAAgB,KACrC,MAAMuqC,EAAU4rE,EAAWryG,QACrBwI,EAAS4pG,EAAUpyG,QACzB,IAAKymC,IAAYj+B,EACf,OAGF,MAAMyqH,EAAazqH,EAAO7F,wBACpBuwH,EAAczsF,EAAQ9jC,wBACtBqtB,EAAcz4B,OAAOq4E,YAE3B93C,EAAAA,EAAAA,KAAgB,KACd,MAAMq7F,EAAgBF,EAAWzsF,IAAMysF,EAAW5yH,OAAS,EACrD+yH,EAAgBH,EAAWx9C,OAC3B10E,EAAI4nH,EAAqByK,EAAgBD,EAC/C1sF,EAAQzuC,MAAMwuC,IAASzlC,EAAImyH,EAAY7yH,OAAS,EAA3B,KAEjBoxG,EACFhrE,EAAQzuC,MAAM0K,KAAUuwH,EAAWvwH,KAAOswH,EAApB,KAEtBvsF,EAAQzuC,MAAMw9E,MAAWxlD,EAAcijG,EAAWz9C,MAAQw9C,EAAnC,IACzB,GACA,IAqBJ,OAlBA/8H,EAAAA,EAAAA,KAAU,KACJskB,GACJ2hE,GAAgB,GACf,CAAC3hE,EAAYpmB,KAEhB8B,EAAAA,EAAAA,KAAU,KACR,GAAIskB,EAAY,OAEhB,MAAM84G,EAAoBjhB,EAAUpyG,QAASwL,QAAwB,gBACrE,OAAK6nH,GAELA,EAAkBpoH,iBAAiB,SAAUixE,EAAgB,CAAExV,SAAS,IAEjE,KACL2sD,EAAkBloH,oBAAoB,SAAU+wE,EAAe,QALjE,CAMC,GACA,CAAC3hE,EAAY63F,IAETl2B,CACT,C,iHC5CA,MAiCA,GAAe7oF,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GAAUk9C,aACT,MAAMh9C,GAAO6/H,EAAAA,EAAAA,KAAkB//H,GACzB27C,EAAOuB,IAAUnqB,EAAAA,EAAAA,KAAW/yB,EAAQk9C,GAG1C,MAAO,CACLh9C,OACA+7C,YAJkBN,GAAOO,EAAAA,EAAAA,IAAuBP,QAAQh7C,EAKzD,GATeZ,EAjCiCigI,EACnD78H,SACAjD,OACAg9C,SACAjB,cACA32B,cAEA,MAAM,iBAAE26G,IAAqB1+H,EAAAA,EAAAA,MAEvBC,GAAOC,EAAAA,EAAAA,KAEPy+H,GAAyBv+H,EAAAA,EAAAA,KAAY,KACzCs+H,EAAiB,CAAEhgI,OAAQC,EAAMU,GAAIs8C,OAAQA,IAC7C53B,GAAS,GACR,CAACplB,EAAM+/H,EAAkB36G,EAAS43B,IAErC,GAAKh9C,GAASg9C,EAId,OACE75C,EAAAA,GAAAC,cAAC88C,EAAAA,EAAa,CACZj9C,OAAQA,EACRmiB,QAASA,EACTtV,MAAOxO,EAAK,uBACZ2+H,WAAWpvH,EAAAA,EAAAA,GAAWvP,EAAK,8BAA+By6C,IAC1Dq6B,aAAc90E,EAAK,kBACnB6+C,eAAgB6/E,EAChB7pD,sBAAoB,GACpB,I,wECjDS,SAASu1B,EAAmCw0B,EAAiBC,GAC1E,MAAMr5G,OAAuBrmB,IAAV0/H,EACbhpD,GAAkBpwE,EAAAA,EAAAA,IAAO+f,GACzBs5G,GAAar5H,EAAAA,EAAAA,MACbwvD,GAAcC,EAAAA,EAAAA,KAkCpB,OAhCArmC,EAAAA,EAAAA,IAAc,KACRrJ,IAIJqwD,EAAgB5qE,SAAU,EAEtB6zH,EAAW7zH,UACbq7E,aAAaw4C,EAAW7zH,SACxB6zH,EAAW7zH,aAAU9L,GACvB,GAECy/H,IAEH19H,EAAAA,EAAAA,KAAU,KACR,GAAIskB,GAAcqwD,EAAgB5qE,QAChC,OAGF,MAAM6hF,EAAOA,KACXjX,EAAgB5qE,SAAU,EAC1BgqD,GAAa,EAGX4pE,EAAS,EACXC,EAAW7zH,QAAUzI,OAAOsc,WAAWguE,EAAM+xC,GAE7C/xC,GACF,GAEC8xC,GAEI/oD,EAAgB5qE,OACzB,C,yGC3CA,QAA6H,WAA7H,EAAuJ,WAAvJ,EAA+K,WC2BzK8zH,EAAqC,CACzC,CACE,CAAEjvH,KAAM,YAAatB,MAAO,mCAC5B,CAAEsB,KAAM,uBAAwBtB,MAAO,6CAA8CwwH,cAAc,IAErG,CACE,CAAElvH,KAAM,eAAgBtB,MAAO,sCAC/B,CAAEsB,KAAM,gBAAiBtB,MAAO,wCAElC,CACE,CAAEsB,KAAM,gBAAiBtB,MAAO,uCAChC,CAAEsB,KAAM,iBAAkBtB,MAAO,yCAEnC,CACE,CAAEsB,KAAM,mBAAoBtB,MAAO,0CACnC,CAAEsB,KAAM,oBAAqBtB,MAAO,6CAIlCywH,EAAmC,CACvC,CACE,CAAEnvH,KAAM,UAAWtB,MAAO,sBAC1B,CAAEsB,KAAM,WAAYtB,MAAO,wBAE7B,CACE,CAAEsB,KAAM,UAAWtB,MAAO,sBAC1B,CAAEsB,KAAM,UAAWtB,MAAO,wBAIxB0wH,EAAqC,CACzC,CACE,CAAEpvH,KAAM,aAActB,MAAO,sBAAuB2wH,SAAS,GAC7D,CAAErvH,KAAM,iBAAkBtB,MAAO,6BAA8B2wH,SAAS,IAE1E,CACE,CAAErvH,KAAM,iBAAkBtB,MAAO,mCAAoC2wH,SAAS,GAC9E,CACErvH,KAAM,gBAAiBtB,MAAO,8BAA+B2wH,SAAS,EAAMC,eAAe,KAK3FC,EAAmC,CACvC,CACE,CAAEvvH,KAAM,aAActB,MAAO,+BAAgC2wH,SAAS,GACtE,CAAErvH,KAAM,iBAAkBtB,MAAO,eAAgB2wH,SAAS,IAE5D,CACE,CAAErvH,KAAM,iBAAkBtB,MAAO,mCAAoC2wH,SAAS,GAC9E,CAAErvH,KAAM,gBAAiBtB,MAAO,gBAAiB2wH,SAAS,KAIxDG,EAAmC,CACvC,CACE,CAAExvH,KAAM,QAAStB,MAAO,qBAAsB2wH,SAAS,GACvD,CACErvH,KAAM,qBACNtB,MAAO,kCACPwwH,cAAc,EACdI,eAAe,EACfG,mBAAmB,IAGvB,CACE,CAAEzvH,KAAM,SAAUtB,MAAO,8BAA+B2wH,SAAS,GACjE,CAAErvH,KAAM,kBAAmBtB,MAAO,+BAAgC2wH,SAAS,KAsK/E,GAAe7gI,EAAAA,EAAAA,KAlJ0BkhI,EACvChxH,QACA2N,OACAsjH,aACAC,YACA//H,YACAmgD,eAEA,MAAM9/C,GAAOC,EAAAA,EAAAA,KAsBP0/H,EAAoBA,CAACC,EAAiBC,EAAiBpmH,KAC3D,MAAOqmH,EAAgBC,GAAkBH,EAAQtnB,QAAQ,GAAGl/C,MAAM,MAC3D4mE,EAAgBC,IAAmBL,EAAUC,GAASvnB,QAAQ,GAAGl/C,MAAM,KAC9E,OACEv3D,EAAAA,GAAAC,cAAA,WACED,EAAAA,GAAAC,cAAC+N,EAAAA,EAAI,CAAClQ,UDrJqT,WCqJ1RmQ,KAAK,YACtCjO,EAAAA,GAAAC,cAAA,KAAGnC,UAAWusD,GACX4zE,EAAej+H,EAAAA,GAAAC,cAAA,QAAMnC,UDvJkP,YCuJnN,IAAEogI,IAExD,IACDl+H,EAAAA,GAAAC,cAAA,QAAMnC,UAAWusD,GAAqB,MAChC8zE,EAAen+H,EAAAA,GAAAC,cAAA,QAAMnC,UD3J2Q,YC2JzO,IAAEsgI,IAE/Dp+H,EAAAA,GAAAC,cAAA,MAAInC,UAAWusD,GAAsBlsD,EAAKyZ,IACtC,GAIJ,OAAE+5F,GAAYisB,GACd,SAAES,EAAQ,QAAEL,GAAaJ,EAEzBU,EA+ER,SAAyBhkH,GACvB,OAAQA,GACN,IAAK,QACH,OAAO8iH,EACT,IAAK,UACH,OAAOC,EACT,IAAK,QACH,OAAOI,EACT,IAAK,QACH,OAAOD,EAET,QACE,OAAON,EAEb,CA7FiBqB,CAAgBjkH,GAE/B,OACEta,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GDxKG,WCwKyBpC,IAC1CkC,EAAAA,GAAAC,cAAA,OAAKnC,UDzKgC,YC0KlC6O,GACC3M,EAAAA,GAAAC,cAAA,OAAKnC,UD3K+C,YC4KjD6O,GAIJglG,GACC3xG,EAAAA,GAAAC,cAAA,OAAKnC,UDjLoE,aCkLtE0gI,EAAAA,EAAAA,IAAergI,EAAuB,IAAjBwzG,EAAO8sB,SAAgB,OAAID,EAAAA,EAAAA,IAAergI,EAAuB,IAAjBwzG,EAAO+sB,WAKnF1+H,EAAAA,GAAAC,cAAA,SAAOnC,UDvLyF,YCwL7F+/H,EACC79H,EAAAA,GAAAC,cAAA,UACED,EAAAA,GAAAC,cAAA,MAAInC,UAAWusD,GACZyzE,EAAkBO,GAAUM,kBAAoB,EAAGX,GAAW,EAAG,8BACjEF,EAAkBO,GAAUO,gBAAkB,EAAGZ,GAAW,EAAG,2BAC/DF,EAAkBO,GAAUQ,gBAAkB,EAAGb,GAAW,EAAG,4BAGlEM,EAAOn/H,KAAKmkB,GACdtjB,EAAAA,GAAAC,cAAA,UACGqjB,EAAInkB,KAAK2/H,IACR,MAAMC,EAASnB,EAAmBkB,EAAK7wH,MAEvC,OAAI6wH,EAAKxB,QAELt9H,EAAAA,GAAAC,cAAA,MAAInC,UAAWusD,GACbrqD,EAAAA,GAAAC,cAAA,KAAGnC,UAAWusD,GACV,GAAEy0E,EAAKvB,cAAgB,IAAM,MAAKyB,EAAAA,EAAAA,IAAcD,MAEpD/+H,EAAAA,GAAAC,cAAA,MAAInC,UAAWusD,GAAsBlsD,EAAK2gI,EAAKnyH,SAKjDmyH,EAAK3B,aAELn9H,EAAAA,GAAAC,cAAA,MAAInC,UAAWusD,GACZy0E,EAAKpB,mBACJ19H,EAAAA,GAAAC,cAAA,QAAMnC,UAAWusD,GACb,GAAEy0E,EAAKvB,cAAgB,IAAM,MAAKyB,EAAAA,EAAAA,IAAcD,EAAME,SAG5Dj/H,EAAAA,GAAAC,cAAA,QAAMnC,UAAWghI,EAAKpB,kBDxNsK,WCwNrHrzE,GACpE00E,EAAMG,WAAW,KAEpBl/H,EAAAA,GAAAC,cAAA,MAAInC,UAAWusD,GAAsBlsD,EAAK2gI,EAAKnyH,SAMnD3M,EAAAA,GAAAC,cAAA,MAAInC,UAAWusD,GACbrqD,EAAAA,GAAAC,cAAA,KAAGnC,UAAWusD,IACXic,EAAAA,EAAAA,IAAqBy4D,EAAM31H,UAE7B,IAzGe+1H,GAAGC,SAAQF,iBACzC,IAAKE,EACH,OAGF,MAAMC,EAAmBl1F,OAAOi1F,GAAU,EAE1C,OACEp/H,EAAAA,GAAAC,cAAA,QAAMnC,WAAWoC,EAAAA,EAAAA,GDpI4M,WCoI/Km/H,GDpIqM,aCqIhPA,EAAoB,KAAG/4D,EAAAA,EAAAA,IAAqBr/D,KAAK0vE,IAAIyoD,MAAc,KAAG94D,EAAAA,EAAAA,IAAqB84D,KAC3FF,GACCl/H,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACG,IAAI,IACH8vH,EAAW,MAGZ,EA0FMC,CAAwBJ,GACzB/+H,EAAAA,GAAAC,cAAA,MAAInC,UAAWusD,GAAsBlsD,EAAK2gI,EAAKnyH,QAC5C,QAOdsxC,EACG,G,sNCnFV,SAAexhD,EAAAA,EAAAA,KApIf,UAA2B,KAAEqzB,EAAI,WAAEw7C,IACjC,MAAM,SACJ/J,EAAQ,iBACR8R,EAAgB,gBAChBylB,EAAe,oBACfwmC,IACEphI,EAAAA,EAAAA,MAEEC,GAAOC,EAAAA,EAAAA,KAEPuB,GAAMiE,EAAAA,EAAAA,IAAuB,MAE7BygD,EAAS,WAAYv0B,GAAQA,EAAKu0B,OAClC/wB,IAAa/E,EAAAA,EAAAA,IAASuB,EAAKvyB,KAEjCgiI,EAAAA,EAAAA,GAAkBzvG,EAAKvyB,IAEvB,MAAM,kBACJmrB,EAAiB,kBAAEC,EAAiB,wBACpCmiB,EAAuB,kBAAEliB,EAAiB,uBAC1CC,EAAsB,sBAAEC,IACtBC,EAAAA,EAAAA,GAAuBppB,GAErBgqB,GAAoBrkB,EAAAA,EAAAA,IAAgB,IAAM3F,EAAIyJ,UAC9CwgB,GAAiBtkB,EAAAA,EAAAA,IAAgB,IAAM6K,SAASG,OAChDuZ,GAAiBvkB,EAAAA,EAAAA,IAAgB,IAAM3F,EAAIyJ,QAAS0gB,cAAc,sCAClE0kE,GAAYlpF,EAAAA,EAAAA,IAAgB,KAAM,CAAGu9E,YAAY,EAAM28C,SAAS,MAEhE9iF,GAAcp3C,EAAAA,EAAAA,IAAgB,KAC9BojB,GAEJowE,EAAgB,CAAE7tD,OAAQnb,EAAKvyB,GAAImE,OAAQgjE,EAAAA,GAAkB+6D,aAAc,IAGvE5wE,GAAkBvpD,EAAAA,EAAAA,IAAiBuG,KACvC6zH,EAAAA,EAAAA,GAAoC7zH,GACpCi/B,EAAwBj/B,EAAE,IAGtB8zH,GAAqBr6H,EAAAA,EAAAA,IAAgB,KACzC+tE,EAAiB,CAAE91E,GAAIuyB,EAAKvyB,GAAIysC,sBAAsB,EAAM41F,WAAY,WAAY,IAGhFC,GAAwBv6H,EAAAA,EAAAA,IAAgB,KAC5C+tE,EAAiB,CAAE91E,GAAIuyB,EAAKvyB,GAAIysC,sBAAsB,EAAM41F,WAAY,kBAAmB,IAGvFp2B,GAAiBlkG,EAAAA,EAAAA,IAAgB,KACrCi8D,EAAS,CAAEhkE,GAAIuyB,EAAKvyB,GAAIysC,sBAAsB,GAAO,IAGjD81F,GAAoBx6H,EAAAA,EAAAA,IAAgB,KACxC+tE,EAAiB,CAAE91E,GAAIuyB,EAAKvyB,GAAIysC,sBAAsB,GAAO,IAGzD+1F,GAAoBz6H,EAAAA,EAAAA,IAAgB,KACxCg6H,EAAoB,CAAEr0F,OAAQnb,EAAKvyB,GAAI4qE,UAAWmD,GAAa,IAGjE,OACEtrE,EAAAA,GAAAC,cAAA,OACEN,IAAKA,EACL2nD,KAAK,SACL,eAAcx3B,EAAKvyB,GACnB+3D,SAAU,EACVx3D,UAAWusD,EAAAA,EAAOv6B,KAClBunB,YAAawX,EACb1uD,QAASu8C,EACTlyB,cAAe5B,GAEf5oB,EAAAA,GAAAC,cAACy1C,EAAAA,EAAM,CACL5lB,KAAMA,EACN6vB,WAAS,EACTC,kBAAmB8kB,EAAAA,GAAkB+6D,YACrCz+E,gBAAgB,SAElBhhD,EAAAA,GAAAC,cAAA,OAAKnC,WAAWoC,EAAAA,EAAAA,GAAemqD,EAAAA,EAAOp8C,KAAM6hB,EAAKkwG,kBAAoB31E,EAAAA,EAAO41E,sBACzE57E,EAASlmD,EAAK,YAAaswD,EAAAA,EAAAA,IAAatwD,EAAM2xB,SAE1BxyB,IAAtBqrB,GACC3oB,EAAAA,GAAAC,cAAC4hB,EAAAA,EAAI,CACH/hB,OAAQ4oB,EACR9W,OAAQ+W,EACRgB,kBAAmBA,EACnBC,eAAgBA,EAChBC,eAAgBA,EAChB2kE,UAAWA,EACX1wF,WAAWoC,EAAAA,EAAAA,GAAe,0BAA2BmqD,EAAAA,EAAO61E,aAC5Dp+G,WAAS,EACT+gE,YAAU,EACV5gE,QAAS4G,EACT3G,oBAAqB4G,GAEpBu7B,EACCrkD,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,KACEpP,EAAAA,GAAAC,cAACuiB,EAAAA,EAAQ,CAACriB,QAASw/H,EAAoBl9G,KAAK,cACzCtkB,EAAK,mCAER6B,EAAAA,GAAAC,cAACuiB,EAAAA,EAAQ,CAACriB,QAAS0/H,EAAuBp9G,KAAK,WAC5CtkB,EAAK,uCAIV6B,EAAAA,GAAAC,cAAAD,EAAAA,GAAAoP,SAAA,MACIkkB,GACAtzB,EAAAA,GAAAC,cAACuiB,EAAAA,EAAQ,CAACriB,QAASqpG,EAAgB/mF,KAAK,WACrCtkB,EAAK,qBAGTm1B,EACCtzB,EAAAA,GAAAC,cAACuiB,EAAAA,EAAQ,CAACriB,QAAS2/H,EAAmBr9G,KAAK,WACxCtkB,EAAK,gCAGR6B,EAAAA,GAAAC,cAACuiB,EAAAA,EAAQ,CAACriB,QAAS2/H,EAAmBr9G,KAAK,QACxCtkB,EAAK,kCAGV6B,EAAAA,GAAAC,cAACuiB,EAAAA,EAAQ,CACPriB,QAAS4/H,EACTt9G,KAAM6oD,EAAa,YAAc,WAEhCntE,EAAKmtE,EAAa,8BAAgC,gCAQnE,ICjFA,GAAe7uE,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAClB,CAACC,GAAU2uE,iBACT,MAAQ60D,gBAAgB,OAAEC,EAAM,SAAEC,IAAe1jI,EAAOw5B,QAIxD,MAAO,CACLgqG,eAAgB70D,EAAa+0D,EAAWD,EACxC1hI,UALgB/B,EAAOiC,MAAMC,KAM7BC,UALgBnC,EAAOoC,MAAMF,KAM9B,GAVenC,EAhDpB,UAAqB,WACnB4uE,EAAU,UACVxtE,EAAS,eACTqiI,EAAc,UACdzhI,EAAS,UACTI,EAAS,UACTwhI,IAEA,MAAMniI,GAAOC,EAAAA,EAAAA,KACP6O,GAAgB/M,EAAAA,EAAAA,GACpBmqD,EAAAA,EAAOge,MACN83D,EAAe//H,QAAUiqD,EAAAA,EAAO+uD,OACjCknB,GAAaj2E,EAAAA,EAAOk2E,QACpBziI,EACA,gBAII6B,GAAMiE,EAAAA,EAAAA,IAAuB,MAInC,OAFA48H,EAAAA,EAAAA,GAAoB7gI,GAAK02E,EAAAA,EAAAA,OAGvBr2E,EAAAA,GAAAC,cAAA,OACEN,IAAKA,EACLpC,GAAG,cACHO,UAAWmP,EACXQ,IAAKtP,EAAK0F,MAAQ,WAAQvG,GAEzB6iI,EAAehhI,KAAK8rC,IACnB,MAAMnb,EAAOpxB,EAAUusC,IAAWnsC,EAAUmsC,GAE5C,GAAKnb,EAIL,OACE9vB,EAAAA,GAAAC,cAACwgI,EAAiB,CAChBvpF,IAAKjM,EACLnb,KAAMA,EACNw7C,WAAYA,GACZ,IAKZ,I,qJCgEA,SAAe7uE,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAAqB,CAACC,GAAU2uE,iBAClD,MAAQ60D,gBAAgB,SAAEE,EAAQ,OAAED,GAAQ,SAAEM,GAAa/jI,EAAOw5B,SAC1D1F,aAAa,cAAEkwG,EAAa,sBAAEC,KAA4B1jI,EAAAA,EAAAA,KAAeP,GAC3E4jE,GAAmBC,EAAAA,EAAAA,KAAuB7jE,GAC1Co2H,GAAgB1gG,EAAAA,EAAAA,KAA+B11B,EAAQ,yBAE7D,MAAO,CACLyqB,cAAezqB,EAAOyqB,cACtB+4G,eAAgB70D,EAAa+0D,EAAWD,EACxC73G,QAAS+iD,GAAcs1D,GAAyBD,EAChDpgE,mBACAwyD,gBACAr0H,UAAW/B,EAAOiC,MAAMC,KACxBC,UAAWnC,EAAOoC,MAAMF,KACxBgiI,YAAaH,EACd,GAfiBhkI,EAnGpB,UAAsB,cACpB0qB,EAAa,eACb+4G,EAAc,UACdzhI,EAAS,UACTI,EAAS,QACTgiI,EAAO,QACPv4G,EAAO,iBACPg4C,EAAgB,WAChB+K,EAAU,cACVynD,EAAa,YACb8N,IAEA,MAAM,kBAAE31D,IAAsBhtE,EAAAA,EAAAA,MAExBC,GAAOC,EAAAA,EAAAA,KAEPmC,GAAQ9B,EAAAA,EAAAA,KAAQ,IACU,IAA1B0hI,EAAe//H,OACV,CAAC1B,EAAUyhI,EAAe,KAAOrhI,EAAUqhI,EAAe,KAG5DA,EACJhhI,KAAK5B,GAAOmB,EAAUnB,IAAOuB,EAAUvB,KACvC6B,QAAQ0wB,GAASA,GAAQA,EAAKvyB,KAAO6pB,IACrCloB,MAAM,EAAG6hI,EAAAA,KACTC,WACF,CAAC55G,EAAe+4G,EAAgBzhI,EAAWI,IAExCmiI,GAAexiI,EAAAA,EAAAA,KAAQ,IACtB8B,GAAOH,OACLG,EAAM8b,QAAO,CAACC,EAAKwT,KACxB,MAAMqG,EAAU0qG,EAAY/wG,EAAKvyB,IACjC,IAAK44B,EAAS,OAAO7Z,EAErB,MAAM4kH,EAAgB/qG,EAAQyqC,WAAWl6C,MAAMnpB,IAC7C,MAAM2zB,EAAQiF,EAAQt3B,KAAKtB,GAC3B,IAAK2zB,KAAW,sBAAuBA,GAAQ,OAAO,EACtD,MAAMiwG,EAAShrG,EAAQgmF,YAAcjrF,EAAM3zB,IAAM44B,EAAQgmF,WACzD,OAAOjrF,EAAMkwG,oBAAsBD,CAAM,IAI3C,OADA7kH,EAAIwT,EAAKvyB,IAAM2jI,EACR5kH,CAAG,GACT,CAAC,GAduB,CAAC,GAe3B,CAACukH,EAAatgI,IAEX8gI,GAAiB5iI,EAAAA,EAAAA,KAAQ,IACtB0hI,EAAejhI,MAAM,EAjDV,IAkDjB,CAACihI,KAEJZ,EAAAA,EAAAA,GAAkB8B,GAElB,MAAMz9E,EAAYk9E,GAAWv4G,GAEvB,IAAE5oB,EAAG,aAAEC,IAAiBmlH,EAAAA,EAAAA,GAAqC,CACjEjlH,OAAQ8jD,EACR9lD,UAAW,OACXy0H,kBAAkB,IAcpB,IAXAlzH,EAAAA,EAAAA,KAAU,KACH0zH,IAAiBxyD,IAClB3c,IACFywB,EAAAA,EAAAA,IAAoBuC,EAAAA,GAAqBgB,EAAAA,MACzC0pD,EAAAA,EAAAA,GAAeh2D,MAEf+I,EAAAA,EAAAA,IAAoBuC,EAAAA,GAAqBgB,EAAAA,MACzC2pD,EAAAA,EAAAA,IAAej2D,IACjB,GACC,CAACA,EAAY1nB,EAAWmvE,EAAexyD,IAErC3gE,EAIL,OACEI,EAAAA,GAAAC,cAAA,UACEN,IAAKA,EACL2a,KAAK,SACL/c,GAAG,eACHO,UAAWusD,EAAAA,EAAOge,KAClB,aAAYlqE,EAAK,+BACjBgC,QAASA,IAAM+qE,EAAkB,CAAE3iD,SAAS,EAAM+iD,eAClD79D,IAAKtP,EAAK0F,MAAQ,WAAQvG,GAEzBiD,EAAMpB,KAAK2wB,GACV9vB,EAAAA,GAAAC,cAACy1C,EAAAA,EAAM,CACLwB,IAAKpnB,EAAKvyB,GACVuyB,KAAMA,EACNxvB,KAAK,OACLxC,UAAWusD,EAAAA,EAAOm3E,OAClBC,gBAAc,EACdC,sBAAuBT,EAAanxG,EAAKvyB,QAKnD,I,qIC9HO,MAAMq5E,EAAqB,IAC5B+qD,EAAgB,IAAOtjF,EAAAA,EACvBujF,EAAiB,GACjBC,EAAgB,MAASxjF,EAAAA,EACzByjF,EAAgB,KAAQzjF,EAAAA,EAExB0jF,EAAqC,IAAItuH,IAExC,SAAS8tH,EAAej2D,GAC7B02D,IAEA,MAAM,UACJryD,EAAS,QAAEsyD,EAAO,eAAEC,EAAc,YAAEC,EAAW,cAAEC,GAC/CC,EAAgB/2D,GAEpB,KAAK22D,GAAYG,GAAkBD,GAAgBxyD,GAAcuyD,GAC/D,OAGF,MAAQrjD,OAAQyjD,EAAc1jD,MAAO2jD,GAAgBL,EAAen2H,wBAC9Dy2H,EAAQF,EAAeX,EAGvBc,EAAmBL,EAAc,GACjCM,EAAoBN,EAAcA,EAAchiI,OAAS,GACzDuiI,EAASC,EAAUH,GAEzBz7H,MAAMwO,KAAK2sH,GAAanB,UAAUn3H,SAAQ,CAACimB,EAAM2oC,GAASr4D,aACxD,MAAM7C,EAAKqlI,EAAU9yG,GACrB,IAAKvyB,EAAI,OACT,MAAMisD,EAASjsD,IAAOolI,EACtB,IAAIE,EAAeC,EAAeb,EAAS1kI,GACvCk7F,EAASmpC,EAAiBnpE,EAAQ,EAStC,GARKoqE,IAIHA,EAHepqE,IAAUr4D,EAAS,EAGVsiI,EAAoBD,EAC5ChqC,EAASmpC,IAGNiB,EAAc,OAEnB,IAEEjzF,IAAKmzF,EACLj3H,KAAMk3H,EACNx5H,MAAOy5H,GACLJ,EAAa92H,wBAEjB,MACED,KAAMo3H,EACN15H,MAAO25H,GACLrzG,EAAK/jB,wBAET,GAAIm3H,EAASX,EACX,OAGFS,GAAYnB,EACZoB,GAAa,EAAIpB,EAEjB,MAAMuB,EAAiBJ,EAAWE,EAC5BG,EAAiBN,EAAUP,EAC3Bc,EAAYL,EAAYE,EAE9BJ,GAAWlB,EAEX,MAAM0B,EAAeL,EAASF,EAAW,EAAInB,EACvC2B,EAAehB,EAAQO,EAAUlB,EACjC4B,EAAUN,GAAWF,EAAY,EAAIpB,IAE3C3gG,EAAAA,EAAAA,KAAgB,KACd,IAAK2hG,EAAc,OACnB,MAAMtpD,EAAQmqD,EAAY5zG,GAE1B,IAAI6zG,EAGAlrC,EAASmpC,GACX+B,EAASD,EAAYb,GACjBr5E,GACFm6E,EAAOvzH,UAAUC,IAAIuzH,EAAAA,EAAcC,YAIrCtqD,EAAMnpE,UAAUC,IAAIuzH,EAAAA,EAAcE,mBAGpCC,EAAAA,EAAAA,IAAYxqD,EAAO,CACjB3pC,IAAM,GAAE4yF,MACR12H,KAAO,GAAEo3H,MACTzqC,OAAS,GAAEA,IACX9gB,QAASgsD,EAAS,IAAM,GACxBpvD,UAAY,eAAc6uD,QAAqBC,iBAA8BC,OAG3EK,IACFI,EAAAA,EAAAA,IAAYJ,EAAQ,CAClB/zF,IAAM,GAAEmzF,MACRj3H,KAAO,GAAEk3H,MACTvqC,OAAS,GAAEA,MAIf9oB,EAAUp/D,YAAYgpE,GAClBoqD,GACFh0D,EAAUp/D,YAAYozH,GAExBd,EAAazyH,UAAUC,IAAI,aAC3Byf,EAAK1f,UAAUC,IAAI,cAEnB6wB,EAAAA,EAAAA,KAAgB,MACd6iG,EAAAA,EAAAA,IAAYxqD,EAAO,CACjB5B,QAAS,GACTpD,UAAW,KAGTovD,GACFI,EAAAA,EAAAA,IAAYJ,EAAQ,CAClBhsD,QAAS,IACTpD,UAAY,eAAcgvD,QAAmBC,iBAA4BC,OAG3ElqD,EAAMnpE,UAAUC,IAAIuzH,EAAAA,EAAcI,iBAGpC,MAAMzoH,EAAK0oH,GAAsB,MAC/B/iG,EAAAA,EAAAA,KAAgB,KACVyuC,EAAUyyB,SAAS7oB,IACrB5J,EAAUr/B,YAAYipC,GAEpBoqD,GAAUh0D,EAAUyyB,SAASuhC,IAC/Bh0D,EAAUr/B,YAAYqzF,GAExBd,GAAczyH,UAAUwG,OAAO,aAC/BkZ,EAAK1f,UAAUwG,OAAO,aAEtBmrH,EAAUh6C,OAAOxsE,EAAG,GACpB,GACDq7D,EAAqBgB,EAAAA,KAExBmqD,EAAU1xH,IAAIkL,EAAG,GACjB,GACF,GAEN,CAEO,SAAS+lH,EAAeh2D,GAC7B02D,IAEA,MAAM,UACJryD,EAAS,QACTsyD,EAAO,cACPG,EAAa,YACbD,EAAW,eACXD,GACEG,EAAgB/2D,GAEpB,KAAK22D,GAAYG,GAAkBD,GAAgBxyD,GAAcuyD,GAC/D,OAEF,MAAQtjD,MAAO2jD,GAAgBL,EAAen2H,wBAGxC02H,EAAmBL,EAAc,GACjCM,EAAoBN,EAAcA,EAAchiI,OAAS,GACzDuiI,EAASC,EAAUH,GAEzBz7H,MAAMwO,KAAK2sH,GAAanB,UAAUn3H,SAAQ,CAACimB,EAAM2oC,GAASr4D,aACxD,MAAM7C,EAAKqlI,EAAU9yG,GACrB,IAAKvyB,EAAI,OACT,MAAMisD,EAASjsD,IAAOolI,EACtB,IAAIE,EAAeC,EAAeb,EAAS1kI,GACvCk7F,EAASmpC,EAAiBnpE,EAAQ,EAStC,GARKoqE,IAIHA,EAHepqE,IAAUr4D,EAAS,EAGVsiI,EAAoBD,EAC5ChqC,EAASmpC,IAGNiB,EAAc,OAEnB,MACEjzF,IAAKmzF,EACLj3H,KAAMk3H,EACNx5H,MAAOy5H,GACLnzG,EAAK/jB,wBAET,IACED,KAAMo3H,EACN15H,MAAO25H,EACPvzF,IAAK4yF,GACHK,EAAa92H,wBAEjB,GAAIi3H,EAAWT,EACb,OAGFW,GAAUrB,EACVsB,GAAW,EAAItB,EAEf,MAAM0B,EAAeL,EAASF,EACxBQ,EAAehB,EAAQO,EAAUjB,EACjC2B,EAAUN,EAAUF,EAE1BT,GAASX,EAET,MAAMuB,EAAiBJ,EAAWE,EAAS,EAAIrB,EACzCwB,EAAiBN,EAAUP,EAAQX,EACnCyB,EAAYL,GAAaE,EAAU,EAAItB,IAE7C3gG,EAAAA,EAAAA,KAAgB,KACd,MAAMq4C,EAAQmqD,EAAY5zG,GAC1B,IAAI6zG,EAEAlrC,EAASmpC,GACX+B,EAASD,EAAYb,GACjBr5E,GACFm6E,EAAOvzH,UAAUC,IAAIuzH,EAAAA,EAAcC,YAGrCtqD,EAAMnpE,UAAUC,IAAIuzH,EAAAA,EAAcE,iBAAkBF,EAAAA,EAAcI,kBAGpED,EAAAA,EAAAA,IAAYxqD,EAAO,CACjB3pC,IAAM,GAAEmzF,MACRj3H,KAAO,GAAEk3H,MACTx5H,MAAQ,GAAEy5H,MACVxqC,OAAS,GAAEA,MAGTkrC,IACFI,EAAAA,EAAAA,IAAYJ,EAAQ,CAClB/zF,IAAM,GAAE4yF,MACR12H,KAAO,GAAEo3H,MACTzqC,OAAS,GAAEA,IACX9gB,QAAS,IACTpD,UAAY,eAAc6uD,QAAqBC,iBAA8BC,OAIjFxzG,EAAK1f,UAAUC,IAAI,aACnBwyH,EAAczyH,UAAUC,IAAI,aAE5Bs/D,EAAUp/D,YAAYgpE,GAClBoqD,GACFh0D,EAAUp/D,YAAYozH,IAGxBziG,EAAAA,EAAAA,KAAgB,MACd6iG,EAAAA,EAAAA,IAAYxqD,EAAO,CACjB5B,QAASgsD,EAAS,IAAM,GACxBpvD,UAAY,eAAcgvD,QAAmBC,iBAA4BC,OAGvEE,GACFI,EAAAA,EAAAA,IAAYJ,EAAS,CACnBhsD,QAAS,GACTpD,UAAW,KAGbgF,EAAMnpE,UAAUwG,OAAOgtH,EAAAA,EAAcI,iBAGvC,MAAMzoH,EAAK0oH,GAAsB,MAC/B/iG,EAAAA,EAAAA,KAAgB,KACVyuC,EAAUyyB,SAAS7oB,IACrB5J,EAAUr/B,YAAYipC,GAEpBoqD,GAAUh0D,EAAUyyB,SAASuhC,IAC/Bh0D,EAAUr/B,YAAYqzF,GAExB7zG,EAAK1f,UAAUwG,OAAO,aACtBisH,EAAczyH,UAAUwG,OAAO,YAAY,IAG7CmrH,EAAUh6C,OAAOxsE,EAAG,GACnBq7D,EAAqBgB,EAAAA,KAExBmqD,EAAU1xH,IAAIkL,EAAG,GACjB,GACF,GAEN,CAEA,SAAS8mH,EAAgB/2D,GACvB,IAAIqE,EAAYx/D,SAASwsB,eAAe,cAIxC,GAHIgzC,GAAarE,IACfqE,EAAYA,EAAU7lD,cAA2B,oBAE9C6lD,EAAW,MAAO,CAAC,EACxB,MAAMsyD,EAAUtyD,EAAU7lD,cAA2B,iBAC/Co6G,EAASv0D,EAAU7lD,cAA2B,gBAC9Co4G,EAAiBvyD,EAAU7lD,cAA2B,gBACtDq4G,EAAc+B,GAAQhuH,iBAA+B,IAAGiuH,EAAAA,EAAar0G,QACrEsyG,EAAgBH,GAAS/rH,iBAA8B,WAE7D,MAAO,CACLy5D,YACAsyD,UACAC,iBACAC,cACAC,gBAEJ,CAEA,SAASsB,EAAYU,GACnB,MAAM7qD,EAAQ6qD,EAASvyH,WAAU,GACjC0nE,EAAMnpE,UAAUC,IAAIuzH,EAAAA,EAAcrqD,OAGlCA,EAAMnpE,UAAUwG,OAAO,aAEvB2iE,EAAM/pE,WAAY,EAClB+pE,EAAM8qD,cAAgB3gF,EAAAA,EAEtB,MAAM4gF,EAAeF,EAASt6G,cAAc,UAC5C,GAAIw6G,EAAc,CAChB,MAAMn7H,EAASowE,EAAMzvD,cAAc,UACnC3gB,GAAQQ,WAAW,OAAO46H,UAAUD,EAAc,EAAG,EACvD,CAEA,OAAO/qD,CACT,CAEA,SAASqpD,EAAU7wH,GACjB,OAAOA,GAAI2E,aAAa,eAC1B,CAEA,SAASosH,EAAe/wH,EAAiBxU,GACvC,OAAOwU,GAAI+X,cAA4B,kBAAiBvsB,MAC1D,CAEA,SAAS0mI,EAAsBO,EAA8BC,GAC3D,MAAMC,EAAUznH,WAAWunH,EAAUC,GAErC,MAAO,KACLhgD,aAAaigD,GACbF,GAAU,CAEd,CAEA,SAASxC,IACPD,EAAUl4H,SAAS0R,GAAOA,MAC1BwmH,EAAU4C,OACZ,C,2CCrWO,MAAMC,EAAqB,oCACrBC,EAAuB,+B,2KCgBpC,MAAMC,EAAgD,CAAC,EAMjDC,GAAa7nH,EAAAA,EAAAA,IADS,KA2H5B,EApHA,SAA2B+tB,EAA4B+5F,IACrD3lI,EAAAA,EAAAA,KAAU,KACR,QAAe/B,IAAX2tC,EAAsB,QA0BVjkC,MAAMi+H,QAAQh6F,GAAUA,EAAS,CAACA,IAE1CphC,SAAStM,IACf,MAAM0wB,EAAU+2G,IAAiBrmI,EAAAA,EAAAA,MAAYw3B,QAAQuqG,SAASnjI,IAAKqjE,aAAa,GAC3E3yC,GA5BezZ,iBACduwH,EACNG,EAAYr7H,SAAQ,EAAG+tD,OAAM44B,SAAQ20C,eAC/BA,EAkGZ3wH,eAA6BojD,GAC3B,MAAMwtE,GAASC,EAAAA,EAAAA,IAAsBC,EAAAA,EAAAA,IAAkB1tE,IACvD,IAAI2tE,EAAa,EACjB,UAAW,MAAMC,KAASJ,EAExB,GADAG,GAAcC,EAAMC,WAChBF,GAvHoB,QAwHtB,KAGN,CA1GUG,CAAc9tE,GAGhBjO,EAAAA,GACEiO,EACA44B,GAEC5G,MAAMrhF,IACAA,IAEDioF,IAAWhsF,EAAAA,GAAemhI,aAqE1C,SAA4B/4G,GAC1B,MAAMg5G,EAAOz1H,SAASy1H,KAChBviI,EAAQ8M,SAASlQ,cAAc,SACrCoD,EAAMwiI,QAAU,OAChBxiI,EAAM86C,IAAMvxB,EACZvpB,EAAMokD,OAAQ,EACdpkD,EAAMyiI,UAAW,EACjBziI,EAAM0iI,uBAAwB,EAC9B1iI,EAAMjC,MAAM0tE,QAAU,OACtB82D,EAAKr1H,YAAYlN,GACjBA,EAAM2hF,OACN/nE,YAAW,MACT+oH,EAAAA,EAAAA,GAAY3iI,GACZuiI,EAAKt1F,YAAYjtC,EAAM,GA9GU,IAgHrC,CAnFc4iI,CAAmB19H,GAEjBioF,IAAWhsF,EAAAA,GAAeC,UAC5B4qF,EAAAA,EAAAA,IAAa9mF,GACf,GACA,GACJ,EAQF29H,CAYN,SAA+Bj7F,EAAgBhd,GAC7C,MAAM4yG,GAAczkB,EAAAA,EAAAA,MAAkBz9G,EAAAA,EAAAA,MAAassC,GACnD,IAAK41F,IAAgBA,EAAYjgE,YAAYxgE,OAC3C,MAAO,GAGT,MAAM+lI,EAbR,SAAmCr+F,EAAUs+F,EAAcC,GACzD,MAAM58E,EAAe3hB,EAAI50B,QAAQkzH,GAC3BllI,EAAQ+F,KAAKgD,IAAIw/C,EAWoD68E,EAXvB,GAC9CnlI,EAAM8F,KAAKC,IAAIuiD,EAUsD68E,EAVzBx+F,EAAI1nC,QACtD,OAAO0nC,EAAI5oC,MAAMgC,EAAOC,EAC1B,CAQqBolI,CAAuB1F,EAAYjgE,WAAY3yC,GAE5Di3G,EAAgC,GA+BtC,OA9BAiB,EAAWt8H,SAAS28H,IAClB,GAAI1B,EAAiB75F,IAASp2B,IAAI2xH,GAChC,OAGF,MAAMt1G,EAAQ2vG,EAAYhiI,KAAK2nI,GAC/B,IAAKt1G,KAAW,YAAaA,GAC3B,OAGF,MAAM+0B,EAAUzoD,QAAQ0zB,EAAMjuB,QAAQI,OAGtC6hI,EAAY53H,KAAK,CACfsqD,MAAMshC,EAAAA,EAAAA,IAAkBhoE,EAAO,QAC/Bs/D,OAAQvqC,EAAUzhD,EAAAA,GAAemhI,YAAcnhI,EAAAA,GAAeC,QAC9D0gI,SAAUl/E,IAAWwgF,EAAAA,EAAAA,GAA0B7B,EAAAA,KAGjDM,EAAY53H,KAAK,CAAEsqD,MAAMshC,EAAAA,EAAAA,IAAkBhoE,GAAQs/D,OAAQhsF,EAAAA,GAAeC,UACtEysB,EAAMjuB,QAAQyjI,WAChBxB,EAAY53H,KAAK,CACfsqD,MAAMshC,EAAAA,EAAAA,IAAkBhoE,EAAO,QAAQ,GACvCs/D,OAAQhsF,EAAAA,GAAemhI,cAI3Bb,EAAiB75F,IAAW65F,EAAiB75F,IAAW,IAAIx3B,KAAOpD,IAAIm2H,EAAe,IAGjFtB,CACT,CApDoByB,CAAsBppI,EAAI0wB,GAAS,GACjD,GACD,CAAC+2G,EAAe/5F,GACrB,C,sLChEA,QAAiD,WC4GjD,GAAexuC,EAAAA,EAAAA,KA7EoBmqI,EACjC11G,QACA21G,YACApuE,QACA36D,YACAsD,QACAm9D,gBAEA,MAAM,kBAAEpmC,IAAsBj6B,EAAAA,EAAAA,MAGxByB,GAAMiE,EAAAA,EAAAA,IAAuB,OAC5BkjI,EAAiBC,IAAsB7iI,EAAAA,EAAAA,IAAS,IAAMm6C,EAAAA,IAEvD,OAAEpT,EAAM,GAAE1tC,EAAE,MAAEypI,GAAU91G,GACxB,UAAE0B,GAAco0G,GAAS,CAAC,GAC1B,SAAE/0F,EAAQ,OAAEg1F,EAAM,UAAEC,GAAcL,EAElCvzG,IAAa/E,EAAAA,EAAAA,IAAS0c,GACtBwH,EAAe,IAAEC,EAAAA,EAAAA,IAAYzH,EAAQ1tC,MAAOk7D,KAAS8F,EAAY,UAAY,WAE7E4oE,GAAgB1oI,EAAAA,EAAAA,KAAQ,IAC5Bm0B,GAAWlG,MAAM28D,IAAM1uD,EAAAA,EAAAA,IAAe0uD,EAAEp3C,SAAUA,MAAY6Y,OAC7D,CAAC7Y,EAAUrf,IACRw0G,GAAsB7oE,GAAa/gE,QAAQ2pI,IAAkB7zG,EAE7D+zG,GAAwB/hI,EAAAA,EAAAA,IAAgB,KAC5C,IAAK3F,EAAIyJ,QAAS,OAClB,MAAMK,EAAS9J,EAAIyJ,QAAQk+H,aAC3BP,EAAmB9/H,KAAKxG,MAhCK,GAgCCgJ,GAAmC,KAGnEq/B,EAAAA,EAAAA,IAAsB,EAAEy+F,MAClB/pI,QAAQ2pI,KAAmB3pI,QAAQ+pI,IACrCF,GACF,GACC,CAACF,KAEJr9D,EAAAA,EAAAA,GAAkBnqE,EAAK0nI,GAEvB,MAAM3qF,GAAcp3C,EAAAA,EAAAA,IAAgB,KAClC6yB,EAAkB,CAChB8S,SACAhd,QAAS1wB,EACTk1C,cACAR,YACA,IAGJ,OACEjyC,EAAAA,GAAAC,cAAA,OACEN,IAAKA,EACL7B,WAAWoC,EAAAA,EAAAA,GAAe+mI,EDnFiH,WAAlB,WCmF1DnpI,GAC/DsD,OAAOwlG,EAAAA,EAAAA,GAAWxlG,EAAQ,wBAAuB0lI,OACjD3mI,QAASu8C,GAET18C,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GDxF8J,WCwFpHgnI,GDxFyI,cC0F/L1pI,QAAQspI,IACP9mI,EAAAA,GAAAC,cAACq3C,EAAAA,EAAqB,CACpBx5C,WAAWoC,EAAAA,EAAAA,GD5FuM,WC4FvKknI,GD5F8L,YC6FzOn1F,SAAUA,EACVQ,YAAaA,EACbnyC,KAAMwmI,EACNU,WAnEqB,EAmETV,EACZW,YAAalpE,EACb1F,YAAa0F,IAGhB6oE,GACCpnI,EAAAA,GAAAC,cAAA,QAAMnC,UDtGgQ,YCsG9NqpI,GAEtC,I,gDCtEV,MA2EA,GAAe1qI,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,KAAqB,CAACC,EAAQgnG,KAChD,MAAM,UAAEkjC,GAAcljC,EAEtB,MAAO,CAAE+jC,iBADeC,EAAAA,EAAAA,KAAsBhrI,EAAQkqI,EAAUppG,OACtC,GAHR/gC,EAxEgCkrI,EAClDf,YACA/oI,YACAsD,QACAsmI,kBACAnpE,gBAGA,MAAM5+D,GAAMiE,EAAAA,EAAAA,IAAuB,OAC5BkjI,EAAiBC,IAAsB7iI,EAAAA,EAAAA,IAAS,IAEjD,aAAE2jI,EAAY,MAAE15H,GAAU04H,EAE1BiB,GAAkBC,EAAAA,EAAAA,IAAc55H,GAChC06E,GAAYm/C,EAAAA,EAAAA,IAAa75H,GAEzB85H,GAAmB3iI,EAAAA,EAAAA,IAAiB4iI,IACxC,IAAKvoI,EAAIyJ,QAAS,OAClB,MAAM2I,EAAKpS,EAAIyJ,QAETK,EAASsI,EAAGu1H,aACZa,EAAoBlhI,KAAKxG,MAxBL,GAwBWgJ,GACrCs9H,EAAmBoB,GACnB,MAAMC,EAAUA,MACd5vC,EAAAA,EAAAA,IAAezmF,EAAI,CACjB,sBAAwB,GAAEo2H,MAC1B,YAAgB1+H,EA5BC,GA4BH,OACd,EAGJ,GAAIy+H,EAAa,OAAOE,GAExBlnG,EAAAA,EAAAA,IAAgBknG,EAEA,IASlB,OANAl/H,EAAAA,EAAAA,KAAgB,MACd0hF,EAAAA,EAAAA,KAAoB,IAAMq9C,GAAiB,IAAM,GAChD,KAEHn+D,EAAAA,EAAAA,GAAkBnqE,GAAK,IAAMsoI,MAG3BjoI,EAAAA,GAAAC,cAAA,OACEN,IAAKA,EACL7B,WAAWoC,EAAAA,EAAAA,GFnFkR,WEmFnPpC,GAC1CsD,OAAOwlG,EAAAA,EAAAA,GACLxlG,EACC,8BAA6B0mI,IAC7B,UAASj/C,MAGZ7oF,EAAAA,GAAAC,cAAA,OAAKnC,UF1FkT,YE2FpT4pI,GACC1nI,EAAAA,GAAAC,cAACkX,EAAAA,EAAW,CACV+/B,IAAKwwF,EAAgBnqI,GACrBsqC,WAAY6/F,EAAgBnqI,GAC5B+C,KAAMwmI,EACNt/B,OAAQjpC,EACR8pE,sBAAoB,EACpBzvE,aAAW,IAGf54D,EAAAA,GAAAC,cAAA,KAAGnC,UFrG2U,YGDpT+pI,IACXrqI,QAA+B,UAAvB8qI,UAAUx5G,UAChB,GAAE7nB,KAAKxG,MAAsB,EAAfonI,EAAoB,EAAI,QAAW,GAAE5gI,KAAKxG,MAAMonI,ODqG5EU,CAAkBV,KAGnB,KEhFJW,EAAqB,EAAI,GAGzBC,EAAiB,IAAIh1H,IAA0B,CAAC,cAAe,eA2HrE,SAASi1H,EAAa7B,EAAyB8B,GAC7C,MAAM,EACJz+H,EAAC,EAAEC,EAAC,MAAEX,EAAK,OAAEC,EAAM,SAAEm/H,EAAQ,OAAEx+H,GAC7By8H,EAAUgC,YAEd,IAAIC,EAAc,GAElB,GAAIH,GAAcv+H,GAAUu+H,EAAa,EAAG,CAC1C,MAAMI,EAAcJ,GAAcn/H,EArId,KAsIdw/H,EAAeL,GAAcl/H,EAtIf,KAuIpBq/H,EAAiB7hI,KAAKC,IAAI6hI,EAAYC,IAAgB5+H,EAvIlC,KAuIL,IACjB,CAEA,OAAOw8F,EAAAA,EAAAA,GACJ,SAAQ18F,KACR,QAAOC,KACP,UAASX,KACT,WAAUC,KACV,qBAAoBm/H,8BACrBE,GAAgB,kBAAiBA,IAErC,CAEA,SAAersI,EAAAA,EAAAA,KAhJU+8F,EACvBtoE,QAAOj0B,WAAUa,YAAWmrI,qBAE5B,MAAM,aACJjuE,EAAY,qBAAElS,EAAoB,aAAEphC,EAAY,iBAAEwhH,EAAgB,QAAEpR,IAClE55H,EAAAA,EAAAA,MAGEyB,GAAMiE,EAAAA,EAAAA,IAAuB,OAC5B+kI,EAAYQ,IAAiBjlI,EAAAA,EAAAA,IAAS,GAEvCm1B,GAAa+vG,EAAAA,EAAAA,MAEnB/pI,EAAAA,EAAAA,KAAU,KACR,IAAKM,EAAIyJ,QAAS,OAClB,MAAMymC,EAAUlwC,EAAIyJ,QAGpB,GAFA+/H,EAAct5F,EAASw5F,aAEnBhwG,EAAW7vB,MAAQ8/H,EAAAA,IAKrB,YAJApoG,EAAAA,EAAAA,KAAgB,KACd2O,EAAQzuC,MAAM6iB,eAAe,iBAC7B4rB,EAAQzuC,MAAM6iB,eAAe,iBAAiB,IAKlD,MAAMslH,EAAoBlwG,EAAW7vB,MAAQ6vB,EAAW5vB,OAElDD,EAAQ+/H,EAAoBf,EAC9B34F,EAAQy3F,aAAekB,EAAqB34F,EAAQw5F,YAClD5/H,EAAS8/H,EAAoBf,EAC/B34F,EAAQy3F,aAAez3F,EAAQw5F,YAAcb,GAEjDtnG,EAAAA,EAAAA,KAAgB,KACd2O,EAAQzuC,MAAM2iB,YAAY,gBAAkB,GAAEva,OAC9CqmC,EAAQzuC,MAAM2iB,YAAY,iBAAmB,GAAEta,MAAW,GAC1D,GACD,CAACxM,EAAUo8B,IAEd,MA0BMmwG,EAAat4G,EAAMs4G,WAEzB,OACExpI,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GJnGS,YImGuBjD,GJnGqB,YImGOa,GACvE6B,IAAKA,GAEJ6pI,GAAYrqI,KAAI,CAAC0nI,EAAW9+H,KAC3B,OAAQ8+H,EAAUvsH,MAChB,IAAK,WACL,IAAK,QACL,IAAK,cACL,IAAK,MACL,IAAK,aAAc,CACjB,MAAMmvH,EAAUxsI,IAAawrI,EAAe5zH,IAAIgyH,EAAUvsH,MAC1D,OACEta,EAAAA,GAAAC,cAAA,OACEnC,WAAWoC,EAAAA,EAAAA,GAAemqD,EAAkBo/E,GJhH8B,YIiH1EroI,MAAOsnI,EAAa7B,GACpB1mI,QAASA,IA7CO0mI,KAC5B,OAAQA,EAAUvsH,MAChB,IAAK,WACL,IAAK,QACH0gD,EAAa,CAAE4B,SAAUiqE,EAAU9qE,MACnC,MAEF,IAAK,cACHr0C,EAAa,CACX9qB,OAAQiqI,EAAUt6B,UAClB9/F,UAAWo6H,EAAUp6H,YAEvBy8H,IACA,MAEF,IAAK,MACHpR,EAAQ,CAAElrG,IAAKi6G,EAAUj6G,MACzB,MAEF,IAAK,aACHk8B,EAAqB,CAAEL,KAAMo+E,EAAUp+E,OAG3C,EAsB2BihF,CAAqB7C,IAG1C,CACA,IAAK,oBACH,OACE7mI,EAAAA,GAAAC,cAAC2mI,EACC,CACA1vF,IAAM,GAAE2vF,EAAUvsH,QAAQvS,IAC1BmpB,MAAOA,EACP21G,UAAWA,EACXpuE,MAAO1wD,EACPw2D,WAAYthE,EACZa,UAAWusD,EACXjpD,MAAOsnI,EAAa7B,KAG1B,IAAK,UACH,OACE7mI,EAAAA,GAAAC,cAAC2nI,EACC,CACA1wF,IAAM,GAAE2vF,EAAUvsH,QAAQvS,IAC1B8+H,UAAWA,EACX/oI,UAAWusD,EACXjpD,MAAOsnI,EAAa7B,EAAW8B,GAC/BpqE,WAAYthE,GAAYgsI,IAI9B,QACE,OACJ,IAEE,G,+HC9IH,SAASjsI,EAA2CL,EAAWC,GACpE,MAAM2+E,GAAW5sD,EAAAA,EAAAA,IAAmBhyB,EAAQC,GAC5C,GAAK2+E,GAAaA,EAASouD,YAE3B,OAAOC,EAAgBjtI,EAAQ4+E,EAASouD,YAC1C,CAEO,SAASC,EAAuCjtI,EAAWgtI,GAChE,OAAOhtI,EAAOS,WAAWyB,KAAK8qI,EAChC,CAEO,SAASE,EACdltI,EAAWgtI,EAAqBG,GAEhC,OAAOF,EAAgBjtI,EAAQgtI,IAAcprI,aAAaurI,EAC5D,CAEO,SAASC,EAAsDptI,GACpE,MAAMC,EAASotI,EAAsBrtI,IAASC,OAE9C,IAAKA,EAAQ,OAAO,EAEpB,MAAMC,GAAOC,EAAAA,EAAAA,IAAWH,EAAQC,GAChC,QAAKC,KAEGk8C,EAAAA,EAAAA,IAAiBl8C,IAASA,EAAKk9C,WAAcv8C,QAAQX,EAAKkzB,aAAa2sD,YACjF,CAEO,SAASstD,EAA6CrtI,GAC3D,MAAQS,YAAY,kBAAEC,IAAwBV,EAC9C,GAAKU,EAIL,OAAOusI,EAAgBjtI,EAAQU,EACjC,CAEO,SAAS4sI,EAA2CttI,GACzD,MAAM,UAAE64G,EAAS,cAAEpuF,GAAkBzqB,EACrC,IAAK64G,IAAcA,EAAUs0B,gBAAkBt0B,EAAU00B,QACvD,OAGF,MAAM3sI,EAAKi4G,EAAU00B,UAAY9iH,EAAgBouF,EAAUs0B,cAAgBt0B,EAAU00B,QACrF,OAAOx6G,EAAAA,EAAAA,IAAW/yB,EAAQY,EAC5B,CAEO,SAAS4sI,EAAwDxtI,GACtE,MAAMI,EAAYitI,EAAsBrtI,GAExC,IAAKI,IAAcA,EAAUH,OAC3B,OAAO,EAGT,MAAMC,GAAOC,EAAAA,EAAAA,IAAWH,EAAQI,EAAUH,QAC1C,IAAKC,EACH,OAAO,EAIT,GAD0BW,SAAQujD,EAAAA,EAAAA,IAAgBlkD,IAEhD,OAAO,EAGT,MAAM+8D,GAAajrC,EAAAA,EAAAA,IAAmBhyB,EAAQE,EAAKU,KAAKq8D,WACxD,OAAOp8D,QAAQo8D,EACjB,C,qEClEO,SAASpkC,EAA0C74B,EAAW+hC,GACnE,MAAM,UAAE0iF,GAAczkH,EACtB,IAAKykH,EACH,OAAOgpB,EAAAA,IAAe1rG,GAAO,GAG/B,MAAMw5B,GAAYhxC,EAAAA,EAAAA,IAA2BvqB,IACvC,OAAE0tI,GAAWjpB,EAGbx4G,EAAQyhI,EAAO3rG,KAASw5B,EAAY,EAAI,IAAMkyE,EAAAA,IAAe1rG,GAAOw5B,EAAY,EAAI,GAC1F,MAAc,kBAAVx5B,EAAkC91B,EAAQ,EACvCA,CACT,CAEO,SAAS0hI,EAA0C3tI,EAAW+hC,GACnE,MAAM,UAAE0iF,GAAczkH,EACtB,IAAKykH,EAAW,OAAOgpB,EAAAA,IAAe1rG,GAAO,GAE7C,MAAM,OAAE2rG,GAAWjpB,EAEnB,OAAOipB,EAAO3rG,GAAO,EACvB,C,8FCrBA,MAAM6rG,EAAwB,IAEf,SAASlU,EACtB12H,EAAwC6qI,EAAqC7mH,GAE7E,MAAM,iBAAEvP,IAAqBlW,EAAAA,EAAAA,MACvBC,GAAOC,EAAAA,EAAAA,MACNg4H,EAAeqU,IAAoBvmI,EAAAA,EAAAA,KAAS,GAE7CwmI,GAAoBplI,EAAAA,EAAAA,IAAgB,KACxCmlI,GAAiB,GACbD,GAEJp2H,EAAiB,CACf7S,QAASopI,EAAAA,GAAYxsI,EAAK,4BAA8BA,EAAK,6BAC7D6H,SAAUukI,GACV,IAGEK,GAAUtlI,EAAAA,EAAAA,IAAiBoqE,IAC/B,MAAM/6D,EAAS+6D,EAAM1B,eACf,MAAEh4D,GAAUrB,EACbqB,IAGc,IAAfA,EAAM+gD,MAA6B,IAAf/gD,EAAM+gD,MAC5B2zE,IACF,IAGIG,GAAYvlI,EAAAA,EAAAA,IAAiBoqE,IACjC,MAAM/6D,EAAS+6D,EAAM1B,cAEhBr5D,EAAOm7E,aAAgBn7E,EAAOk7E,YACjC66C,GACF,IAoBF,OAjBArrI,EAAAA,EAAAA,KAAU,KACR,GAAIskB,EAAY,OAEhB,MAAM,QAAEva,GAAYzJ,EACpB,OAAKyJ,GAILA,EAAQiL,iBAAiB,QAASu2H,GAClCxhI,EAAQiL,iBAAiB,UAAWw2H,GAE7B,KACLzhI,EAAQmL,oBAAoB,QAASq2H,GACrCxhI,EAAQmL,oBAAoB,UAAWs2H,EAAU,QATnD,CAUC,GACA,CAAClnH,EAAYhkB,IAETy2H,CACT,C,8FCtDA,MAAM0U,EAAmB,KACnBC,EAAyB,IAAInjD,IACnC,IAAIojD,EAAgB,IAAIv3H,IACxB,MAGMw3H,GAAgBprC,EAAAA,EAAAA,KAAS,KAC7B,MAAMqrC,EAAQlkI,MAAMwO,KAAKw1H,GACnBG,EAAcD,EAAMhsI,MAAM,EALR,KAMlBksI,EAAaF,EAAMhsI,MAAMmsI,MAE/BntI,EAAAA,EAAAA,MAAaotI,kBAAkB,CAC7BC,QAASJ,IAGXA,EAAYthI,SAAStM,GAAOwtI,EAAuBjhD,IAAIvsF,EAAIwd,KAAKC,SAEhEgwH,EAAgB,IAAIv3H,IAAI23H,GAGpBJ,EAAc1qI,MAChB2qI,GACF,GAlBuB,KAqBV,SAASp/D,EAAsB/jC,GAC5C,MAAMvnC,GAAQ9B,EAAAA,EAAAA,KAAQ,KACpB,MAAM9B,GAASgC,EAAAA,EAAAA,MACf,OAAOmpC,GAAK3oC,KAAK5B,IAAOyoB,EAAAA,EAAAA,KAAWrpB,EAAQY,KAAK6B,OAAO5B,QAAQ,GAC9D,CAACsqC,IAEE0jG,GAAkB/sI,EAAAA,EAAAA,KAAQ,KAC9B,MAAM9B,GAASgC,EAAAA,EAAAA,MACf,OAAO4B,GAAOnB,QAAQ0wB,IACpB,MAAM27G,EAAkBV,EAAuBzxG,IAAIxJ,EAAKvyB,KAAO,EAC/D,GAAIwd,KAAKC,MAAQywH,EAAkBX,EACjC,OAAO,EAGT,IAAIv8G,EAAAA,EAAAA,IAASuB,EAAKvyB,IAAK,CACrB,MAAM+6C,EAAOxoB,EACPsvB,GAASgF,EAAAA,EAAAA,KAAiBznD,EAAQ27C,EAAK/6C,IACvCmuI,EAAoBtsF,GAA0B,oBAAhBA,EAAO9kC,KAC3C,OAAQg+B,EAAKqzF,YAAcrzF,EAAK+L,UAAW5L,EAAAA,EAAAA,IAAUH,KAAUxoB,EAAK4oB,WAAagzF,CACnF,CAAO,CACL,MAAM7uI,EAAOizB,EACb,OAAOtJ,EAAAA,EAAAA,IAAc3pB,KAAUA,EAAKwjD,YACtC,KACClhD,KAAKm5C,GAASA,EAAK/6C,IAAG,GACxB,CAACgD,KAEJlB,EAAAA,EAAAA,KAAU,KACJmsI,GAAiBprI,SACnBorI,EAAgB3hI,SAAStM,GAAOytI,EAAc36H,IAAI9S,KAClD0tI,IACF,GACC,CAACO,GACN,C,2FC/CA,MAAMI,EAA2D,CAC/D,kBAAmB,OAAQ,WAAY,SAAU,WAAY,eAEzDC,EAA2D,CAC/D,kBAAmB,kBAAmB,eAAgB,eAGjD,SAASC,EAAkBzzC,EAAqB0zC,EAA+BC,GACpF,IAAIC,EAA4B,GAC5BC,EAA6C,GAEjD,GAAa,aAATH,EAAqB,CACvB,MAAM,gBACJI,KACGC,GACDJ,EACA3zC,EAAM+zC,gBAAkB,CAAC,GACzBC,EAAAA,EAAAA,IACAh0C,EAAMi0C,OACNV,GAGJK,EAAkBE,GAAmB,GACrCD,EAAqBltI,OAAO4nB,KAAKwlH,GAC9BhtI,QAAQ83C,GAAQ15C,QAAQ4uI,EAAel1F,KAC5C,KAAO,CACL,MAAM,gBACJq1F,KACGC,GACDR,EACA3zC,EAAMm0C,gBAAkB,CAAC,GACzBH,EAAAA,EAAAA,IACAh0C,EAAMi0C,OACNT,GAGJI,EAAkBM,GAAmB,GACrCL,EAAqBltI,OAAO4nB,KAAK4lH,GAC9BptI,QAAQ83C,GAAQ15C,QAAQgvI,EAAet1F,KAC5C,CAEA,MAAMv6C,GAASgC,EAAAA,EAAAA,MAGf,MAAO,CACLstI,gBAH8BA,EAAgB7sI,QAAQ7B,IAAOT,EAAAA,EAAAA,KAAWH,EAAQY,KAIhF2uI,oBAEJ,CAEA,SAASO,EAAuBL,GAC9B,GAAIA,EAAgB,CAClB,MAAM,gBACJD,KACGO,GACDN,EAEJ,GACEptI,OAAOC,OAAOytI,GAASttI,OAAO5B,SAAS4C,OAAS,GAC5C+rI,GAAiB/rI,OAErB,MAAO,GAGT,GAAIssI,EAAQvrH,KACV,MAAO,OACF,GAAIurH,EAAQC,OACjB,MAAO,SACF,GAAID,EAAQE,SACjB,MAAO,WACF,GAAIF,EAAQG,SACjB,MAAO,WACF,GAAIH,EAAQI,YACjB,MAAO,cAEX,CAEA,MAAO,EACT,CAyBA,MAAMC,EAA8B,CAClChB,KAAM,SACNiB,WAAY,GACZV,OAAQ,CACN3/H,MAAO,CAAEiL,KAAM,IACfu0H,gBAAiB,GACjBI,gBAAiB,KAIfU,EAA6DA,CACjE50C,EACAjwE,KAEA,OAAQA,EAAO9N,MACb,IAAK,WACH,MAAO,IACF+9E,EACHi0C,OAAQ,IACHj0C,EAAMi0C,OACT3/H,MAAO,CAAEiL,KAAMwQ,EAAO2hB,UAExBpC,WAAW,GAEf,IAAK,cACH,MAAO,IACF0wD,EACHl3B,SAAU/4C,EAAO2hB,QACjBgiG,KAAM,QAEV,IAAK,qBACH,MAAO,IACF1zC,EACH+zC,gBAAgBC,EAAAA,EAAAA,IACdh0C,EAAMi0C,OACNV,IAGN,IAAK,qBACH,MAAO,IACFvzC,EACHm0C,gBAAgBH,EAAAA,EAAAA,IACdh0C,EAAMi0C,OACNT,IAGN,IAAK,oBACH,MAAO,IACFxzC,EACH+zC,eAAgBhkH,EAAO2hB,QACvBijG,WAAY,IAEhB,IAAK,oBACH,MAAO,IACF30C,EACHm0C,eAAgBpkH,EAAO2hB,QACvBijG,WAAY,IAEhB,IAAK,cACH,OAAI30C,EAAM+zC,eACD,IACF/zC,EACHi0C,OAAQ,KACHY,EAAAA,EAAAA,IAAK70C,EAAMi0C,OAAQV,GACtBj/H,MAAO0rF,EAAMi0C,OAAO3/H,MAAQ0rF,EAAMi0C,OAAO3/H,MAAQ,CAAEiL,KAAM60H,EAAuBp0C,EAAM+zC,oBACnF/zC,EAAM+zC,gBAEXA,oBAAgB9uI,EAChB0vI,WAAY,GACZrlG,WAAW,GAEJ0wD,EAAMm0C,eACR,IACFn0C,EACHi0C,OAAQ,KACHY,EAAAA,EAAAA,IAAK70C,EAAMi0C,OAAQT,MACnBxzC,EAAMm0C,gBAEXA,oBAAgBlvI,EAChB0vI,WAAY,GACZrlG,WAAW,GAGN0wD,EAEX,IAAK,aAAc,CACjB,MAAQ96F,GAAI4jE,EAAQ,YAAEnd,KAAgBsoF,GAAWlkH,EAAO2hB,QAExD,MAAO,CACLgiG,KAAM,OACN5qE,WACAmrE,SACAU,WAAY,GAEhB,CACA,IAAK,gBACH,MAAO,IACF30C,EACH20C,WAAY5kH,EAAO2hB,SAGvB,IAAK,eACH,MAAO,IACFsuD,EACH1wD,UAAWvf,EAAO2hB,SAGtB,IAAK,eACH,MAAO,IACFsuD,EACHvjE,UAAW1M,EAAO2hB,SAGtB,IAAK,WACH,MAAO,IACFsuD,EACHvjE,WAAW,EACX9e,MAAOoS,EAAO2hB,SAGlB,IAAK,gBACH,MAAO,IACFsuD,EACHi0C,OAAQ,IACHj0C,EAAMi0C,OACTa,WAAY/kH,EAAO2hB,UAGzB,IAAK,QACH,OAAOgjG,EACT,QACE,OAAO10C,EACX,EAOF,EAJ0B+0C,KACjBC,EAAAA,EAAAA,GAAWJ,EAAgBF,E,6DC/PrB,SAASjoF,EAAuBwoF,GAC7C,MAAMl6E,GAAcC,EAAAA,EAAAA,MAEpBhyB,EAAAA,EAAAA,GAAY+xB,EAAak6E,GAAU,EACrC,C,kGCAO,SAAStoG,EACduoG,EACAC,EACAC,EACAC,GAAU,GAEV,OAAOvjD,EAAAA,EAAAA,IAAsBwjD,IAC3BA,EAASJ,IAAW,GAEnBC,EAAMC,EAAiBC,EAC5B,CAEO,SAAS7Z,EACd+Z,EACAnJ,EACAiJ,GAAU,GAEV,MAAMG,EAAoB7oG,GAAqB,IAAM4oG,KAAY,CAACA,GAAWnJ,EAAIiJ,GAEjF,OAAO5gH,EAAAA,EAAAA,GACL+gH,EAAmB,CAACA,EAAmBD,IAAW,EAEtD,CAEO,SAASrhH,EACdghH,EACAC,EACA/I,EACAiJ,GAAU,EACVI,GAAS,GAET,OAAOjgE,EAAAA,EAAAA,IAAsB8/D,IAC3BA,EAASJ,IAAW,GAEnBC,EAAM/I,EAAIiJ,EAASI,EACxB,CAEO,SAASC,EACdH,EACAnJ,EACAiJ,GAAU,EACVI,GAAS,GAET,MAAME,EAAoBzhH,GAAqB,IAAMqhH,KAAY,CAACA,GAAWnJ,EAAIiJ,EAASI,GAE1F,OAAOhhH,EAAAA,EAAAA,GACLkhH,EAAmB,CAACA,EAAmBJ,IAAW,EAEtD,C,qJC6NA,QA7PuB3nI,CACrBgoI,EACAC,EACAnpI,EACAo5C,EACAgwF,EACA/9C,EACAg+C,EACAx2F,GAAa,EACby2F,EACAC,EACAC,GAAa,EACbC,GAAoB,EACpB/rI,EACAmD,GAAU,EACV6oI,GAAiB,KAGjB,MAAMC,GAAgB9qI,EAAAA,EAAAA,IAAoC,OAEnDiC,EAAW8oI,IAAgBzqI,EAAAA,EAAAA,KAAS,GAC3C,IAAI0qI,EAAgB/oI,EAEpB,MAAO9E,EAAc61H,IAAmB1yH,EAAAA,EAAAA,IAAiB,GAEnDqB,GAAoBD,EAAAA,EAAAA,IAAgB,KACxCqpI,GAAa,GACTL,GAAeA,GAAe,KAGpCthH,EAAAA,EAAAA,IAAc,KACZ,IAAKihH,EACH,OAEFS,EAActlI,SAAUylI,EAAAA,EAAAA,IAASZ,EAASlpI,GAAW,CAAC+pI,EAAWjjI,KAC/D,IAAI4iI,EAAJ,CAGA,OAAQK,GACN,IAAK,SAAU,CACb,MAAM,UACJC,EAAS,gBAAEC,EAAe,YAAEC,EAAW,MAAEC,GACvCR,EAActlI,QAClBulI,GAAa,GACK,iBAAd5pI,IACFoqI,EAAAA,EAAAA,IAAqB/+C,EAiKjC,SAA2Bs+C,GACzB,IAAIU,EAAsC,CAAC,EAC3C,GAAIV,GAAiBA,EAActlI,QAAS,CAC1C,MAAM,KACJ87E,EAAI,MAAEhoE,EAAK,eAAEnX,EAAc,MAAEmpI,EAAK,iBAAEG,EAAgB,qBAAEC,EAAoB,QAAE/lF,EAAO,OAAEC,GACnFklF,EAActlI,QAClBgmI,EAAgB,CACdlqD,KAAMA,KACJA,EAAKgqD,EAAM/wF,IAAI,EAEjBjhC,MAAOA,KACLA,GAAO,EAETT,KAAMA,KACJS,IACAnX,EAAe,IACf7H,EAAAA,EAAAA,MAAaqxI,kBAAkB,EAEjCC,aAAe9/D,IACb,MAAM+/D,EAAW//D,EAAMggE,YAnOL,GAoOlB3pI,EAAekB,KAAKgD,IAAIilI,EAAM9nF,YAAcqoF,EAAU,GAAG,EAE3DE,YAAcjgE,IACZ,MAAM+/D,EAAW//D,EAAMggE,YAvOL,GAwOlB3pI,EAAekB,KAAKC,IAAIgoI,EAAM9nF,YAAcqoF,EAAUP,EAAMlpI,UAAU,EAExE4pI,OAASlgE,IACHA,EAAMmgE,UACR9pI,EAAe2pE,EAAMmgE,SACvB,GAICrmF,MACH4lF,EAAcU,UAAY,KACxBT,GAAkB,GAGjB9lF,MACH6lF,EAAcW,cAAgB,KAC5BT,GAAsB,EAG5B,CACA,OAAOF,CACT,CA9M2CY,CAAkBtB,KAEnDuB,EAAAA,EAAAA,IAAiB,WACjB,MAAM,YAAEC,IAAgBhzI,EAAAA,EAAAA,MAAeyB,EAAAA,EAAAA,OACvCowI,EAAUmB,EAAY9zH,QACtB6yH,EAAYzxI,QAAQ0yI,EAAY12E,UAChC,MAAMxzD,EAAWkpI,EAAMlpI,UAAYmkC,OAAO0sF,SAASqY,EAAMlpI,UAAYkpI,EAAMlpI,SAAWkoI,GACpE,UAAdnpI,GAAyBiB,EAAWmqI,EAAAA,MACtCnB,EAAgBkB,EAAYE,eAE9BC,EAAAA,EAAAA,IAAiB,CACfrqI,SAAUkpI,EAAMlpI,UAAY,EAC5BoqI,aAAclB,EAAMkB,aACpBllG,SAAUgkG,EAAM9nF,cAElB,KACF,CACA,IAAK,eAAgB,CACnB,MAAM,MAAE8nF,GAAUR,EAActlI,SAChCinI,EAAAA,EAAAA,IAAiB,CACfrqI,SAAUkpI,EAAMlpI,UAAY,EAC5BoqI,aAAclB,EAAMkB,aACpBllG,SAAUgkG,EAAM9nF,cAElB,KACF,CACA,IAAK,UACHunF,GAAa,IACbsB,EAAAA,EAAAA,IAAiB,UACjBxtI,MACA,MACF,IAAK,eAAgB,CACnB,MAAM,MAAEysI,GAAUR,EAActlI,QAChC,GAAIxD,GAAiC,IAAtBspI,EAAM9nF,YACnB,MAEF,MAAMphD,EAAWkpI,EAAMlpI,UAAYmkC,OAAO0sF,SAASqY,EAAMlpI,UAAYkpI,EAAMlpI,SAAWkoI,EACjFM,GAAmB5X,EAAgBsY,EAAM9nF,YAAcphD,GAC5D,KACF,CACA,IAAK,WACHiqI,EAAAA,EAAAA,IAAiB,UAIrB9B,IAAWW,KAAajjI,EArDxB,CAqD0B,GACzBwiI,EAAa9oI,GAEhB,MAAM,MAAE2pI,GAAUR,EAActlI,QAE3BvD,GAAcqpI,EAAM/pD,SACvBwpD,GAAa,GAGbC,GAAgB,GAGdR,IAAWK,GACbL,EAAOc,EACT,GACC,CAACjB,KAEJ5uI,EAAAA,EAAAA,KAAU,KACJwG,GAAauqF,IAAUkgD,EAAAA,EAAAA,IAAelgD,EAAS,GAClD,CAACA,EAAUvqF,IAEd,MAAM,KACJq/E,EAAI,MACJhoE,EAAK,eACLnX,EAAc,MACdmpI,EAAK,QACL7pD,EAAO,UACP0pD,EAAS,KACTtyH,EAAI,QACJ8sC,EAAO,OACPC,EAAM,iBACN6lF,EAAgB,qBAChBC,EAAoB,gBACpBN,EAAe,YACfC,GACEP,EAActlI,SAAW,CAAC,EAExBpD,GAAWvH,EAAAA,EAAAA,KAAQ,IAChBywI,GAAOlpI,UAAYmkC,OAAO0sF,SAASqY,EAAMlpI,UAAYkpI,EAAMlpI,SAAWkoI,GAC5E,CAACgB,GAAOlpI,SAAUkoI,KAGrB7uI,EAAAA,EAAAA,KAAU,KACH6vI,IAGDtpI,GAAiC,IAAtBspI,EAAM9nF,cAGjBphD,IAAauqI,EAAAA,EAAAA,GAAwBrB,IAAWV,GAClD5X,EAAgBsY,EAAM9nF,YAAcphD,GACtC,GACC,CAACA,EAAUjF,EAAcmuI,EAAOV,EAAmB5oI,KAGtDvG,EAAAA,EAAAA,KAAU,IAAM,KACdgmF,IAAUkpD,EAAW,GACpB,CAAClpD,EAASkpD,KAGbzlG,EAAAA,EAAAA,IAAsB,EAAE0nG,EAAgBC,MAClCD,IAAmB54F,GAAcuG,IAAQsyF,GAKzCvB,GAAO/wF,KAAO+wF,GAAO/pD,QAIrBvtC,GAAcuG,IAAQt4C,GACxBq/E,IAAO/mC,EACT,GACC,CAACvG,EAAYuG,EAAKt4C,EAAWq/E,EAAMgqD,GAAO/wF,IAAK+wF,GAAO/pD,OAAQpgF,IAEjE,MAAM2rI,GAAgBprI,EAAAA,EAAAA,IAAgB,KAChC64C,GACF+mC,IAAO/mC,EACT,IAGIr4C,GAAYR,EAAAA,EAAAA,IAAgB,KAC5BO,EACFqX,MAEAwzH,GACF,IAGIC,GAAUrrI,EAAAA,EAAAA,IAAiB8vG,IAC/BrvG,IAAiBqvG,GACbpvG,GAAYkpI,GACdtY,EAAgBsY,EAAM9nF,YAAcphD,EACtC,IAGF,MAAO,CACLH,UAAW+oI,EACX7tI,eACA+E,YACAoX,QACAgoE,KAAMwrD,EACNj0H,OACA1W,eAAgB4qI,EAChB5B,YACA6B,WAAY1B,EACZlpI,WACAqpI,mBACAC,uBACA/lF,UACAC,SACAwlF,kBACAC,cACD,C,oHCnNH,MA4KA,EA5K8BjrE,EAC5BnnE,OACAy7C,OACA6oB,WACAC,WACA5H,UACAkH,kBACAtoB,gBACAhxB,gBACAm3C,YACAoF,eACAC,aACAC,yBACAC,gBAeC+sE,GAAa,KACd,MAAM1yI,GAAOC,EAAAA,EAAAA,MAEP,OAAEimD,GAAW/L,GAAQ,CAAC,EACtBw4F,EAAyBx4F,GAAM/6C,KAAO40B,EAAAA,IAEtC4+G,GAActyI,EAAAA,EAAAA,KAAQ,KAC1B,GAAK5B,EAEL,OAAIu7C,EACKj6C,EAAK,WAGVowB,EAAAA,EAAAA,IAAS1xB,EAAKU,IACTY,EAAK,mBAGV6yI,EAAAA,EAAAA,IAAiBn0I,GACZsB,EAAK,eAGVqoB,EAAAA,EAAAA,IAAc3pB,GACTsB,EAAK,gBAGPA,EAAK,mBAAmB,GAC9B,CAACtB,EAAMu7C,EAAej6C,IAEzB,OAAOM,EAAAA,EAAAA,KAAQ,KACb,IAAK5B,GAAQ0hE,EACX,OAGF,MAAM,iBACJ0yE,EAAgB,wBAChBC,EAAuB,qBACvBt2E,EAAoB,mBACpBu2E,EAAkB,aAClBC,EAAY,eACZC,EAAc,iBACdh/D,IACEn0E,EAAAA,EAAAA,MAEEu0E,EAAqBrO,EAAAA,IAAgC,CACzDz3D,MAAOk6F,EAAAA,GAAc,qBAAuB,kBAC5CpkF,KAAM,kBACNulD,QAASA,KAELqK,EADEj6B,EACe,CAAEx7C,OAAQwqB,EAAgB3J,SAAU5gB,EAAKU,IAEzC,CAAEX,OAAQC,EAAKU,IAClC,GAIE+zI,EAAeA,KACfl5F,EACF84F,EAAwB,CAAE3zI,GAAIV,EAAKU,KAEnC0zI,EAAiB,CAAE1zI,GAAIV,EAAKU,GAAI4jE,SAAUA,GAC5C,EAGIwR,EAAYvR,EACd,CACAz0D,MAAOxO,EAAK,gBACZskB,KAAM,QACNulD,QAASspE,GAET,CACA3kI,MAAOxO,EAAK,YACZskB,KAAM,MACNulD,QAASspE,GAGPx+D,EAAe,CACnBnmE,MAAOokI,EACPtuH,KAAM,SACNqgC,aAAa,EACbklB,QAASrE,GAGX,GAAIvrB,EACF,OAAOgwB,EAAAA,EAAAA,IAAQ,CAACqK,EAAoBE,EAAWG,IAGjD,MAAMy+D,EAAoB7wE,EAAkB,CAC1C/zD,MAAOxO,EAAK,+BACZskB,KAAM,SACNulD,QAASnE,QACPvmE,EAEEs1E,EAAapZ,EACf,CACA7sD,MAAOxO,EAAK,mBACZskB,KAAM,SACNulD,QAASA,IAAMpN,EAAqB,CAAEh+D,OAAQC,EAAKU,GAAIi8D,SAAS,KAEhE,CACA7sD,MAAQ,GAAExO,EAAK,sBACfskB,KAAM,OACNulD,QAASpE,GAGb,GAAIitE,EACF,OAAOzoE,EAAAA,EAAAA,IAAQ,CAACqK,EAAoBE,EAAW4+D,EAAmB3+D,IAGpE,MAAM4+D,EAAoB30I,EAAKyoE,aAAezoE,EAAK+oE,cAC/C,CAAEj5D,MAAOxO,EAAK,cAAeskB,KAAM,YAAaulD,QAASA,IAAMopE,EAAa,CAAE7zI,GAAIV,EAAKU,WACvFD,EACEm0I,EAAuB50I,EAAKyoE,aAAezoE,EAAK+oE,eAAmB/oE,EAAK20B,aAE1El0B,EADA,CAAEqP,MAAOxO,EAAK,gBAAiBskB,KAAM,SAAUulD,QAASA,IAAMqpE,EAAe,CAAE9zI,GAAIV,EAAKU,MAGtFm0I,GAAgBC,EAAAA,EAAAA,IAAe90I,GACjC,CAAE8P,MAAOxO,EAAK,aAAcskB,KAAM,YAAaulD,QAASA,IAAMmpE,EAAmB,CAAE5zI,GAAIV,EAAKU,MAC5F,CAAEoP,MAAOxO,EAAK,WAAYskB,KAAM,UAAWulD,QAASA,IAAMmpE,EAAmB,CAAE5zI,GAAIV,EAAKU,MAGtFq0I,EADY9tE,IAAiBxrB,KAAS9xB,EAAAA,EAAAA,IAAc3pB,KAASmzD,EAAAA,EAAAA,IAAYnzD,IAE3E,CAAE8P,MAAOxO,EAAK,qBAAsBskB,KAAM,OAAQulD,QAASlE,QAC3DxmE,EAEEu0I,OAA0Bv0I,IAAb6jE,EAEnB,OAAOiH,EAAAA,EAAAA,IAAQ,CACbqK,EACA8+D,EACAC,EACAC,EACA9+D,GACCtuB,GAAUuuB,GACVvuB,IAAWysF,IAA2Be,GAAcH,EACrDE,EACA9+D,GACA,GACD,CACDj2E,EAAMy7C,EAAMooB,EAAiBviE,EAAM0lE,EAAwBzC,EAAUyvE,EAAYr3E,EAASpyC,EAC1Fu8C,EAAcC,EAAYE,EAAc3C,EAAU9c,EAAQysF,EAAwB14F,EAAe24F,EACjGxyE,GACA,C,wECzJJ,QAtBA,SACEtzB,EACAhd,EACAiD,GAEA,MAAM,qBAAE6nE,IAAyB76F,EAAAA,EAAAA,MAE3B4zI,GAAqBrzI,EAAAA,EAAAA,KAAQ,KACjC,MAAMszI,GAAYlyC,EAAAA,EAAAA,IAAS9G,EAVD,KAU8C,GACxE,MAAO,KACLg5C,EAAU,CAAE9mG,OAAQA,EAASouD,SAAU,CAACprE,IAAY,CACrD,GACA,CAACA,EAASgd,KAEb5rC,EAAAA,EAAAA,KAAU,KAEJ4rC,GAAUhd,KADWiD,KAAW,YAAaA,MAAS,cAAeA,KAEvE4gH,GACF,GACC,CAACA,EAAoB5gH,EAAOjD,EAASgd,GAC1C,C,mFCvBe,SAAS+mG,EAAoBzxE,GAAmB,GAC7D,MAAM0xE,GAA4BruI,EAAAA,EAAAA,IAAO28D,GACnC2xE,GAAwBtuI,EAAAA,EAAAA,KAAO,GAC/BwvD,GAAcC,EAAAA,EAAAA,MAEpBrmC,EAAAA,EAAAA,IAAc,KACRuzC,IACF0xE,EAA0B7oI,SAAU,EACtC,GACC,CAACm3D,IAEJ,MAAM4xE,GAA+B7sI,EAAAA,EAAAA,IAAgB,KACnD2sI,EAA0B7oI,SAAU,EACpC8oI,EAAsB9oI,SAAU,EAChCgqD,GAAa,IAGTg/E,GAAiC9sI,EAAAA,EAAAA,IAAgB,KACrD4sI,EAAsB9oI,SAAU,EAChCgqD,GAAa,IAGf,MAAO,CACLi/E,uBAAwBJ,EAA0B7oI,QAClDkpI,mBAAoBJ,EAAsB9oI,QAC1C+oI,+BACAC,iCAEJ,C,kDChCe,SAASp5G,EAAqBu5G,GAC3C,MAAOC,EAAUC,IAAY75G,EAAAA,EAAAA,MA+B7B,OA7BAv5B,EAAAA,EAAAA,KAAU,KACR,SAASqzI,IACP,MAAMl2G,EAAY77B,OAAO87B,eACzB,IAAKD,GAAWI,WAAY,OAE5B,MAAMoT,EAAQxT,EAAUM,WAAW,GACnC,IAAKkT,EACH,OAIF,IADgB7/B,SAAS2Z,cAAcyoH,GAErC,OAGF,MAAM,wBAAEvgD,GAA4BhiD,GACpBgiD,aAAmC2gD,QAC/C3gD,EACAA,EAAwBG,eAChBv9E,QAAQ29H,IAClBE,EAASziG,EAEb,CAIA,OAFA7/B,SAASkE,iBAAiB,kBAAmBq+H,GAEtC,IAAMviI,SAASoE,oBAAoB,kBAAmBm+H,EAAkB,GAC9E,CAACH,EAAeE,IAEZD,CACT,C,4DC9BA,MAAMI,EAAc,IAAIn/H,IAAI,CAAC,QAAS,WAAY,WAE5C06H,GAAW0E,EAAAA,EAAAA,KAGV,SAAShmE,EAAWimE,IACzBzzI,EAAAA,EAAAA,KAAU,KACR,IAAKyzI,EACH,OAGF,MAAMzhD,EAAUryF,OAAOqyF,QAAQyhD,GAc/B,OAAO3E,EAAS4E,aAZhB,SAAuBlnI,IAgB3B,SAAyBA,GACvB,QAAIA,EAAE8I,kBAAkByB,eACdw8H,EAAY/9H,IAAIhJ,EAAE8I,OAAO2B,QAIrC,EArBW08H,CAAgBnnI,IAIrBwlF,EAAQxnF,SAAQ,EAAEopI,EAAQjrE,OCmDzB,SAA0BirE,GAC/B,OAAQvjE,GAlCV,SAAuBujE,EAAgBvjE,GACrC,MAAM,IACJ14D,EAAG,KAAEk8H,EAAI,KAAErkB,EAAI,IAAEskB,EAAG,MAAEjhF,EAAK,IAAEhb,GAC3B+7F,GACE,OACJ9lD,EAAM,QAAEhgB,EAAO,QAAED,EAAO,SAAE6S,EAAU7oC,IAAKk8F,GACvC1jE,EAEJ,GAAI14D,IAAQm2E,EACV,OAAO,EAGT,GAAIgmD,GACF,IAAKhmE,IAAYD,EACf,OAAO,MAEJ,CACL,GAAIgmE,IAAS/lE,EACX,OAAO,EAET,GAAI0hD,IAAS3hD,EACX,OAAO,CAEX,CACA,OAAIhb,IAAU6tB,GAIPviF,QAAQ05C,IACTk8F,EAAWx5H,gBAAkBs9B,EAAIt9B,eAChC81D,EAAM3Y,KAAKphD,QAAQ,MAAO,IAAIiE,gBAAkBs9B,EAAIt9B,eAC7D,CAGoBy5H,CA1Db,SAAqBJ,GAC1B,MAAMrsH,EAAOqsH,EACVr5H,cACA29C,MAAM,KACNp4D,KAAK8/H,GAASA,EAAK/4F,SAEhBotG,EAA+B,CACnCt8H,IAAK4P,EAAKrF,SAAS,OACnB2xH,KAAMtsH,EAAKrF,SAAS,QACpBstG,KAAMjoG,EAAKrF,SAAS,QACpB4xH,IAAKvsH,EAAKrF,SAAS,OACnB2wC,MAAOtrC,EAAKrF,SAAS,UAGjBgyH,EAAe,CAAC,MAAO,OAAQ,OAAQ,QAAS,OAItD,MAAO,IACFD,EACHp8F,IAJctwB,EAAK8F,MAAMwqB,IAASq8F,EAAahyH,SAAS21B,KAM5D,CAoCkCs8F,CAAYP,GAASvjE,EACvD,EDpDY+jE,CAAiBR,EAAjBQ,CAAyB5nI,IAC3Bm8D,EAAQn8D,EACV,GAEJ,GAE0C,GACzC,CAACinI,GACN,CAxBA3iI,SAAS2H,gBAAgBzD,iBAAiB,UAAW85H,EAASuF,a,wEED9D,MAAMC,EAAiB,IACjBC,EAAsB,IAEb,SAASC,EACtBp7G,EACA34B,EACAmiB,GAEA,MAAM,SAAEne,IAAaC,EAAAA,EAAAA,OAErB1E,EAAAA,EAAAA,KAAU,KACJS,EACGgE,GACHmZ,YAAW,MACTikB,EAAAA,EAAAA,KAAgB,KACVzI,EAASrvB,SAASyvF,aACpBpgE,EAASrvB,QAAQ6G,OACnB,GACA,GACD0jI,IAGDl7G,EAASrvB,SAASyvF,aACpBpgE,EAASrvB,QAAQgjC,OAGfnqB,GACFhF,WAAWgF,EAAS2xH,GAExB,GACC,CAACn7G,EAAU30B,EAAUhE,EAAQmiB,GAClC,C,kDCkBA,QApDA,UAAsB,QACpB9hB,EAAO,QAAEo1D,EAAO,MAAEk4B,EAAK,UAAEo9B,EAHD,MAUxB,MAAMipB,GAAoBlwI,EAAAA,EAAAA,KAAO,GAC3BmwI,GAAYnwI,EAAAA,EAAAA,KAAO,GACnBowI,GAAUpwI,EAAAA,EAAAA,SAA2BtG,GAErC4D,GAAQ5C,EAAAA,EAAAA,KAAauN,IACzB,MAAMooI,EAAmB,WAAYpoI,GAAkB,IAAbA,EAAEQ,QAAkB,YAAaR,GAAKA,EAAEqoI,QAAQ9zI,OAAS,GAC/F2zI,EAAU3qI,SAAY6qI,IAI1BF,EAAU3qI,SAAU,EACpB4qI,EAAQ5qI,QAAUzI,OAAOsc,YAAW,KAClCs4C,MACAu+E,EAAkB1qI,SAAU,CAAI,GAC/ByhH,GAAU,GACZ,CAACt1D,EAASs1D,IAEPspB,GAAS71I,EAAAA,EAAAA,KAAauN,IACrBkoI,EAAU3qI,UAEX0qI,EAAkB1qI,QACpBqkF,MAEAttF,IAAU0L,GAGZioI,EAAkB1qI,SAAU,EAC5B2qI,EAAU3qI,SAAU,EACpBzI,OAAO8jF,aAAauvD,EAAQ5qI,SAAQ,GACnC,CAACqkF,EAAOttF,IAMX,OAJA43F,EAAAA,EAAAA,KAAkB,KAChBp3F,OAAO8jF,aAAauvD,EAAQ5qI,QAAQ,IAG/B,CACLiuC,YAAan2C,EACbkzI,UAAWD,EACX9xH,aAAc8xH,EACdE,aAAcnzI,EACdozI,WAAYH,EAEhB,C,wEChDA,MA+BA,EA7BwBI,EACtB57E,eAAc67E,YAIbhH,MACDnuI,EAAAA,EAAAA,KAAU,KACR,MAAMsnE,EAAWhO,GAAcvvD,SAAS8M,iBAAiBs+H,GACzD,IAAK7tE,GAAUvmE,OAAQ,OAEvB,MAAM8uE,GAAe2wB,EAAAA,EAAAA,KAAUnwB,IAC7B,MAAM/6D,EAAS+6D,EAAM/6D,OACf4+D,EAAa5+D,EAAOo6D,UAAY,GACtC7tC,EAAAA,EAAAA,KAAgB,KACdvsB,EAAOvE,UAAUg7E,OAAO,WAAY7X,EAAW,GAC/C,GAjBe,KAwBnB,OAJA5M,EAAS98D,SAASkI,GAAOA,EAAGsC,iBAAiB,SAAU66D,EAAc,CAAEY,SAAS,MAEhFnJ,EAAS98D,SAASkI,GAAOA,EAAGkrB,cAAc,IAAIC,MAAM,SAAU,CAAEC,SAAS,OAElE,KACLwpC,EAAS98D,SAASkI,GAAOA,EAAGwC,oBAAoB,SAAU26D,IAAc,CACzE,GAEA,CAACvW,EAAc67E,KAAahH,GAAM,C,0ICpBvC,MAAMiH,EAAqB,IACrBC,EAAoB,KACpBC,EAAoB,IAEX,SAASvvI,EACtBskD,EACAu+C,GAAS,EACT2sC,EAAcpwI,EAAAA,GAAeC,QAC7Bu4H,EACA6X,GAAgB,GAEhB,MAAM7vI,EAAY0kD,EAAYC,EAAAA,GAA0BD,QAAapsD,EAC/Dw3I,EAAcC,EAAAA,IAA4BH,IAAgBpwI,EAAAA,GAAemhI,YACzEvyE,GAAcC,EAAAA,EAAAA,KACdnP,GAAW8wF,EAAAA,EAAAA,GAAYC,EAAAA,KACvB13I,GAAK23I,EAAAA,EAAAA,MACJhwI,EAAciwI,IAAmBjxI,EAAAA,EAAAA,IAASc,IAAc8vI,EAAc,EAAI,GAC3EM,GAAexxI,EAAAA,EAAAA,MAEfyxI,GAAiB52I,EAAAA,EAAAA,KAAQ,KACtBohG,EAAAA,EAAAA,KAAUx2F,IACX+rI,EAAahsI,WAAa4zH,GAAUjiH,KAAKC,MAAQo6H,EAAahsI,QAAU4zH,IAC1EmY,EAAgB9rI,EAClB,GACCsrI,GAAmB,IACrB,CAAC3X,IAiDJ,OA/CA39H,EAAAA,EAAAA,KAAU,MACH4oG,GAAUv+C,IACR1kD,EAmBM8vI,GACT73H,YAAW,KACTk4H,EAAgBV,EAAmB,GAClCC,IArBHS,EAAgB,GAEZC,EAAahsI,SACfugD,EAAAA,GAA2B0rF,GAG7BD,EAAahsI,QAAU2R,KAAKC,MAE5B2uC,EAAAA,GAAkBD,EAAWkrF,EAAaC,EAAeQ,EAAgB93I,GAAIqsF,MAAK,KAChF,MAAM0rD,EAAYv6H,KAAKC,MAAQo6H,EAAahsI,QAC5CgsI,EAAahsI,aAAU9L,GAElB0/H,GAASsY,GAAatY,EACzB5pE,IAEAn2C,WAAWm2C,EAAa4pE,EAAQsY,EAClC,KAON,GACC,CACDrtC,EAAQv+C,EAAW1kD,EAAW4vI,EAAaE,EAAa9X,EAAOqY,EAAgBR,EAAet3I,EAAI2mD,KAGpG7kD,EAAAA,EAAAA,KAAU,KACJ4oG,GAAUmtC,EAAahsI,UACzBugD,EAAAA,GAA2B0rF,GAC3BF,EAAgB,GAChBC,EAAahsI,aAAU9L,EACzB,GACC,CAAC+3I,EAAgBptC,KAEpB5oG,EAAAA,EAAAA,KAAU,IACD,KACDqqD,GACFC,EAAAA,GAA2BD,EAAWnsD,EACxC,GAED,CAACA,EAAImsD,IAED,CAAE1kD,YAAWE,eACtB,C,wECpFA,MAAMqwI,EAAqB,IAC3B,IAAIC,EAEW,SAASt2H,EACtBpf,EAAiBmiB,EAA6BwzH,EAAmBF,EAAoB5xH,GAAa,GAElG,MAAM+xH,GAAgB9xI,EAAAA,EAAAA,KAAO,GAEvBqb,GAAkB3Z,EAAAA,EAAAA,IAAgB,KACtCowI,EAActsI,SAAU,CAAI,IAqC9B,OAlCA/J,EAAAA,EAAAA,KAAU,KACJm2I,IACF/wD,aAAa+wD,GACbA,OAAel4I,IAGbwC,GAAWsiB,EAAAA,IAAiBuB,IAC9B6xH,EAAe70I,OAAOsc,YAAW,KAC1By4H,EAActsI,SACjB6Y,GACF,GACoB,EAAnBwzH,GACL,GACC,CAAC9xH,EAAY7jB,EAAQ21I,EAAkBxzH,IAqBnC,EAnBkB3c,EAAAA,EAAAA,IAAgB,KACvCowI,EAActsI,SAAU,CAAI,KAGL9D,EAAAA,EAAAA,IAAgB,KACvCowI,EAActsI,SAAU,EAEpBosI,IACF/wD,aAAa+wD,GACbA,OAAel4I,GAGjBk4I,EAAe70I,OAAOsc,YAAW,KAC1By4H,EAActsI,SACjB6Y,GACF,GACCwzH,EAAiB,IAGsBx2H,EAC9C,C,mFC9Ce,SAAS02H,EAA0BvsI,EAAYpD,GAC5D,MAAMwkG,GAAOrxE,EAAAA,EAAAA,GAAsB/vB,GAAS,GACtC6zH,GAAar5H,EAAAA,EAAAA,MACbwvD,GAAcC,EAAAA,EAAAA,KAEduiF,EAAmBxsI,QAEnBysI,EAAgBrrC,QAiBtB,OAfIorC,GAAoB3Y,EAAW7zH,UACjCq7E,aAAaw4C,EAAW7zH,SACxB6zH,EAAW7zH,aAAU9L,IAGvB0vB,EAAAA,EAAAA,IAAc,KAERhnB,IAAa4vI,GAAoBC,IAAkB5Y,EAAW7zH,UAChE6zH,EAAW7zH,QAAUzI,OAAOsc,YAAW,KACrCggH,EAAW7zH,aAAU9L,EACrB81D,GAAa,GACZptD,GACL,GACC,CAACA,EAAUotD,EAAawiF,EAAkBC,IAEpC5Y,EAAW7zH,SAAYpD,IAAY4vI,EAA6BprC,EAAVphG,CACjE,C,6DCvBe,SAASikI,EACtByI,EACAC,GAEA,MAAM3iF,GAAcC,EAAAA,EAAAA,KACd2iF,GAAapyI,EAAAA,EAAAA,IAAOkyI,GACpBz9C,GAAQz0F,EAAAA,EAAAA,IAAOmyI,GAEfE,GAAW33I,EAAAA,EAAAA,KAAa8pB,IAC5BiwE,EAAMjvF,QAAU4sI,EAAW5sI,QAAQivF,EAAMjvF,QAASgf,GAClDgrC,IACOilC,EAAMjvF,UACZ,IAEH,MAAO,CACLivF,EAAMjvF,QACN6sI,EAEJ,C,mFCjBA,MASA,EAT6Bn8G,CAACl9B,EAAiB6gB,KACtChf,EAAAA,EAAAA,KAAQ,KACNohG,EAAAA,EAAAA,KAAUz3E,IACVxrB,GAAW6gB,IAChBvf,EAAAA,EAAAA,MAAa27B,kBAAkB,CAAEj9B,SAAQ6gB,WAAU2K,UAAS,GAC3DkZ,EAAAA,MACF,CAAC1kC,EAAQ6gB,G,4HCLd,MAAMy4H,EAAqB,IAEpB,SAASC,EAAa1wF,EAAuC74B,EAAcqiE,GA+EhF,OA9EA5vF,EAAAA,EAAAA,KAAU,KACR,IAAKutB,IAAQ64B,EAASr8C,QAAS,OAC/B,MAAMgtI,EAAmBC,IACnBhzI,EAAQoiD,EAASr8C,QAEvB,IAAK03B,EAAAA,KAAcmuD,IAAamnD,GAAkBE,gBAAgBrnD,GAChE,OAEF,MAAMxrF,EAAc,IAAI2yI,EAaxB,SAASG,IACP,IAAK3pH,IAAQqiE,EAAU,OAEvB,MAAMunD,EAAe/yI,EAAYgzI,gBAAgBxnD,GAC3Cm2C,GAASC,EAAAA,EAAAA,GAAsBz4G,GAiBrC4pH,EAAaniI,iBAAiB,aAf9B,WACE+wH,EAAOsR,OACJ9sD,MAAK,EACJhhF,QACA+tI,WAE+B,SAA3BlzI,EAAYmzI,aACZD,EACFE,EAAYpzI,GAGdqzI,EAAaN,EAAc5tI,GAAM,GAEvC,IAIAw8H,EAAOsR,OACJ9sD,MAAK,EACJhhF,QACA+tI,WAEIA,GAAmC,SAA3BlzI,EAAYmzI,cAtC5B11G,EAAAA,EAAAA,KAAgB,KACd79B,EAAMjC,MAAM0tE,QAAU,QACtB7xD,YAAW,MACTikB,EAAAA,EAAAA,KAAgB,MACd6iG,EAAAA,EAAAA,IAAY1gI,EAAO,CAAEs0E,QAAS,KAAM,GACpC,GACDu+D,EAAmB,IAkCpBY,EAAaN,EAAc5tI,GAAM,GAEvC,CAYA,OAVAnF,EAAY4Q,iBAAiB,aAAckiI,EAAc,CAAEv7D,MAAM,KAEjE95C,EAAAA,EAAAA,KAAgB,MACd6iG,EAAAA,EAAAA,IAAY1gI,EAAO,CACjByrE,QAAS,OACT6I,QAAS,MAEXt0E,EAAM86C,IAAMhkC,IAAI60E,gBAAgBvrF,EAAY,IAGvC,MACLy9B,EAAAA,EAAAA,KAAgB,KACd,MAAMid,EAAM96C,EAAM86C,KAClB6nF,EAAAA,EAAAA,GAAY3iI,GACZI,EAAY8Q,oBAAoB,aAAcgiI,GACf,SAA3B9yI,EAAYmzI,YACdC,EAAYpzI,GAEd0W,IAAIy1E,gBAAgBzxC,EAAI,GACxB,CACH,GACA,CAAC8wC,EAAUriE,EAAK64B,IAEZghF,EAA0Bx3C,EACnC,CAEO,SAASw3C,EAA0Bx3C,GACxC,SAAKnuD,EAAAA,KAAcmuD,IACZzxF,QAAQ64I,KAAkBC,gBAAgBrnD,GACnD,CAEA,SAAS6nD,EAAaN,EAA4BO,GAChD,IACEP,EAAaM,aAAaC,EAC5B,CAAE,MAAO/gI,GACHF,EAAAA,KAEFC,QAAQihI,KAAK,mCAAoChhI,EAErD,CACF,CAEA,SAAS6gI,EAAYpzI,GACnB,IACEA,EAAYozI,aACd,CAAE,MAAO7gI,GACHF,EAAAA,KAEFC,QAAQihI,KAAK,gCAAiChhI,EAElD,CACF,CAEA,SAASqgI,IACP,MAAI,uBAAwB11I,OAEnBs2I,mBAEL,gBAAiBt2I,OACZu2I,iBADT,CAIF,C,wEC7He,SAAS9uG,EAAgBo8F,GACtC,MAAM2S,GAAe7xI,EAAAA,EAAAA,GAAgBk/H,IAErCnlI,EAAAA,EAAAA,KAAU,KAAM+3I,EAAAA,EAAAA,IAAeD,IAAe,CAACA,GACjD,C,2FCKA,MAAME,EAAOC,IAEE,SAASC,EAAcC,EAAgBC,EACpDC,GACA,MAAOC,EAAcC,IAAmB1zI,EAAAA,EAAAA,IAAS1G,QAAQ65I,GAAQlnI,SAASknI,KA+D1E,OA7CAnuI,EAAAA,EAAAA,KAAgB,KACd,MAAM2mC,EAAU2nG,EAAMpuI,QAChByuI,EAAWA,KACf,MAAMt1G,EAAY/kC,QAAQ65I,GAAQlnI,SAASknI,IAC3CO,EAAgBr1G,GACZA,EACFm1G,KAAgB,GAEhBD,KAAe,GAGb5nG,aAAmBioG,mBAAkBjoG,EAAQkoG,SAAWx1G,EAAS,EAGjEy1G,EAAgBA,KACpBJ,GAAgB,GACZF,GAAeA,GAAc,EAAK,EAGlCO,EAAeA,KACnBL,GAAgB,GACZH,GAAcA,GAAa,EAAM,EAYvC,OATAtnI,SAASkE,iBAAiB,mBAAoBwjI,GAAU,GACxD1nI,SAASkE,iBAAiB,yBAA0BwjI,GAAU,GAC9D1nI,SAASkE,iBAAiB,sBAAuBwjI,GAAU,GAEvDhoG,IACFA,EAAQx7B,iBAAiB,wBAAyB2jI,GAAe,GACjEnoG,EAAQx7B,iBAAiB,sBAAuB4jI,GAAc,IAGzD,KACL9nI,SAASoE,oBAAoB,mBAAoBsjI,GAAU,GAC3D1nI,SAASoE,oBAAoB,yBAA0BsjI,GAAU,GACjE1nI,SAASoE,oBAAoB,sBAAuBsjI,GAAU,GAC1DhoG,IACFA,EAAQt7B,oBAAoB,wBAAyByjI,GAAe,GACpEnoG,EAAQt7B,oBAAoB,sBAAuB0jI,GAAc,GACnE,CACD,GAEA,IAEEZ,GAASnnI,EAAAA,GAIP,CAACynI,EAjEcO,KA+GjB,IAA+BroG,EA9G7B2nG,EAAMpuI,UAAaiuI,GAAQnnI,EAAAA,MAAWynI,KA8GT9nG,EA3GZ2nG,EAAMpuI,SA4GlB+uI,kBACVtoG,EAAQsoG,oBACCtoG,EAAQuoG,wBACjBvoG,EAAQuoG,0BACCvoG,EAAQwoG,sBACjBxoG,EAAQwoG,wBACCxoG,EAAQyoG,sBACjBzoG,EAAQyoG,uBAlHRV,GAAgB,GAAK,EAGAW,KAChBf,EAAMpuI,UAmHT+G,SAASooI,eACXpoI,SAASooI,iBACApoI,SAASqoI,oBAClBroI,SAASqoI,sBACAroI,SAASsoI,uBAClBtoI,SAASsoI,yBACAtoI,SAASuoI,sBAClBvoI,SAASuoI,uBAtHTd,GAAgB,GAAM,GAiDf,EAAC,EAIZ,CAEO,MAAMe,EAAsBA,KACjC,MAAOhB,EAAcC,IAAmB1zI,EAAAA,EAAAA,KAAS,GAuBjD,OArBA7E,EAAAA,EAAAA,KAAU,KACR,MAAMw4I,EAAWA,KACfD,EAAgBgB,IAAoB,EAGhCC,EAAyBl4I,OAAOm4I,UAAUC,GAAGC,EAAAA,EAAcC,kBAAmBrB,GAOpF,OANAj3I,OAAOm4I,UAAUnB,eAAe/tD,KAAKguD,GAErCznI,SAASkE,iBAAiB,mBAAoBwjI,GAAU,GACxD1nI,SAASkE,iBAAiB,yBAA0BwjI,GAAU,GAC9D1nI,SAASkE,iBAAiB,sBAAuBwjI,GAAU,GAEpD,KACLgB,MAEA1oI,SAASoE,oBAAoB,mBAAoBsjI,GAAU,GAC3D1nI,SAASoE,oBAAoB,yBAA0BsjI,GAAU,GACjE1nI,SAASoE,oBAAoB,sBAAuBsjI,GAAU,EAAM,CACrE,GACA,IAEIF,CAAY,EAGrB,SAASL,IACP,YAA0C,IAA/BnnI,SAAS+oI,kBACX,yBAC2C,IAAlC/oI,SAASgpI,qBAClB,4BAC8C,IAArChpI,SAASipI,wBAClB,0BAEF,EACT,CAEO,SAASR,IACd,MAAMS,EAAiB/B,IACvB,OAAO95I,QAAQ67I,GAAkBlpI,SAASkpI,GAC5C,C,mCCjIO,IAAKL,EAAa,SAAbA,GAAa,OAAbA,EAAa,sCAAbA,EAAa,4BAAbA,EAAa,oCAAbA,EAAa,oBAAbA,CAAa,K,kcCuGzB,MAAMM,EASJ30D,WAAAA,CACShwE,EACC8hC,EACA8iG,GACR,KAHO5kI,OAAAA,EAAc,KACb8hC,SAAAA,EAAsC,KACtC8iG,QAAAA,EAAgBz0D,EAAA,qBAXF,IAAI8C,KAA2B9C,EAAA,+BAErB,IAAI8C,KAAsC9C,EAAA,uBAEjC,IAAEA,EAAA,4BAEE,IAAEA,EAAA,8BAkHjB00D,EAAAA,EAAAA,KAAoB,KAClD,MAAM,QAAED,GAAYx0D,KACd00D,EAAW10D,KAAK20D,gBAChBte,EAAgBr2C,KAAK40D,qBAE3B50D,KAAK20D,gBAAkB,GACvB30D,KAAK40D,qBAAuB,GAE5B50D,KAAKpwE,OAAOilI,YAAY,CAAEL,UAASE,YAAYre,EAAc,IAnH/D,CAGO/1C,OAAAA,GACP,CAEA3qE,IAAAA,IAAQqzB,GACNg3C,KAAK80D,qBAAqB,CACxBv/H,KAAM,OACNyzB,QAEJ,CAEAg9E,OAAAA,CAAQ+uB,GACN,MAAM,cAAEC,EAAa,wBAAEC,GAA4Bj1D,MAC7C,cAAEq2C,KAAkB6e,GAAoBH,EAExCrtI,GAAY4sE,EAAAA,EAAAA,KACZtvC,EAA6B,CACjCzvB,KAAM,aACN7N,eACGwtI,GAGCC,EAAe,CAAEztI,aAGjBq+G,EAAwB,IAAI5yG,SAAQ,CAACwE,EAASC,KAClD3d,OAAOm7I,OAAOD,EAAc,CAAEx9H,UAASC,UAAS,IAGlD,GAAqD,mBAA1CotB,EAAQgE,KAAKhE,EAAQgE,KAAK3tC,OAAS,GAAmB,CAC/D2pC,EAAQqwG,cAAe,EAEvB,MAAM5V,EAAWz6F,EAAQgE,KAAKssG,MAC9BH,EAAa1V,SAAWA,EACxBwV,EAAwBlwD,IAAI06C,EAAU0V,EACxC,CAeA,OAbAH,EAAcjwD,IAAIr9E,EAAWytI,GAC7BpvB,EACGwvB,OAAM,KAAe,IACrBC,SAAQ,KACPR,EAAchyD,OAAOt7E,GAEjBytI,EAAa1V,UACfwV,EAAwBjyD,OAAOmyD,EAAa1V,SAC9C,IAGJz/C,KAAK80D,qBAAqB9vG,EAASqxF,GAE5BtQ,CACT,CAEA0vB,cAAAA,CAAeC,GACbA,EAAiBC,YAAa,EAE9B,MAAM,UAAEjuI,GAAcs4E,KAAKi1D,wBAAwB1gH,IAAImhH,IAAqB,CAAC,EACxEhuI,GAILs4E,KAAK80D,qBAAqB,CACxBv/H,KAAM,iBACN7N,aAEJ,CAEAkuI,SAAAA,CAAU/zI,GACR,MAAM,cAAEmzI,EAAa,QAAER,GAAYx0D,KAC/Bn+E,EAAK2yI,UAAYA,GAIrB3yI,EAAK6yI,SAAS5vI,SAASkgC,IAIrB,GAHqB,WAAjBA,EAAQzvB,MAAqByqE,KAAKtuC,UACpCsuC,KAAKtuC,SAAS1M,EAAQX,QAEH,mBAAjBW,EAAQzvB,KAA2B,CACrC,MAAM4/H,EAAeH,EAAczgH,IAAIyQ,EAAQt9B,WAC3CytI,IACEnwG,EAAQ/zB,MACVkkI,EAAav9H,OAAOotB,EAAQ/zB,OAE5BkkI,EAAax9H,QAAQqtB,EAAQ6wG,UAGnC,MAAO,GAAqB,mBAAjB7wG,EAAQzvB,KAA2B,CAC5C,MAAM4/H,EAAeH,EAAczgH,IAAIyQ,EAAQt9B,WAC/CytI,GAAc1V,cAAcz6F,EAAQ8wG,aACtC,MAAO,GAAqB,mBAAjB9wG,EAAQzvB,KACjB,MAAM,IAAIovE,MAAM3/C,EAAQ/zB,OAAOzU,QACjC,GAEJ,CAEQs4I,oBAAAA,CAAqB9vG,EAAwBqxF,GACnDr2C,KAAK20D,gBAAgBpsI,KAAKy8B,GAEtBqxF,GACFr2C,KAAK40D,qBAAqBrsI,QAAQ8tH,GAGpCr2C,KAAK+1D,uBACP,EAcK,SAASr7C,EACdJ,EACA5oD,EACA8iG,GAEA,MAAMwB,EAAY,IAAIzB,EAAkBj6C,EAAQ5oD,EAAU8iG,GAE1D,SAASyB,GAAc,KAAEp0I,IACvBm0I,EAAUJ,UAAU/zI,EACtB,CAQA,OANAy4F,EAAOhrF,iBAAiB,UAAW2mI,GAEnCD,EAAU11D,QAAU,KAClBga,EAAO9qF,oBAAoB,UAAWymI,EAAc,EAG/CD,CACT,C,kJCrOA,MAAME,EAAS,IAAIrzD,IAEnB,IAGIszD,EAHAC,EAAwB,GACxBC,EAAwB,GA0D5B,SAASC,EAASpN,EAAkBqN,GAClC,MAAMC,EAAeL,GAAkBD,EAAO3hH,IAAI4hH,GAC9CK,IACFA,EAAar4I,MAAMga,QACnBq+H,EAAar4I,MAAMkkD,YAAc,EAC7Bm0F,EAAajN,eAAeiN,EAAajN,iBAG/C,MAEMkN,EAAcC,EAAgBxN,GAFrB/wI,EAAAA,EAAAA,MAAeyB,EAAAA,EAAAA,OAAauxI,YAAYxuI,QAAUmD,EAAAA,GAAYqI,OAExBouI,GACrD,IAAKE,EACH,OAGF,IAAKP,EAAOpmI,IAAI2mI,GAId,YAFAt9I,EAAAA,EAAAA,MAAawqH,iBAAgBgzB,EAAAA,EAAAA,IAAgBC,EAAaH,GAAaI,aAKzE,MAAMC,EAAYZ,EAAO3hH,IAAIkiH,GAEzBK,EAAUxN,aACZwN,EAAUxN,cAGZ6M,EAAiBM,EAEbK,EAAU34I,MAAMi7C,MAClBinC,EAAAA,EAAAA,GAASy2D,EAAU34I,MAEvB,CAEO,SAAS+wH,IACd,MAAMsnB,EAAeL,GAAkBD,EAAO3hH,IAAI4hH,GAC9CK,GACFA,EAAar4I,MAAMga,OAEvB,CAEO,SAAS2xH,EACdZ,EACAlpI,EACAijE,EACAqmE,EACAC,GAEA,IAAK2M,EAAOpmI,IAAIo5H,GAAU,CACxB,MAAM6N,EAxGV,SACE7N,EACA3zH,EACA+zH,EACAC,GAEA,MAAMprI,EAAQ,IAAI7B,MAElB,SAAS06I,EAAYjN,GACnB,OAAQjjI,IACDovI,EAAOpmI,IAAIo5H,MAIZsC,EAAAA,EAAAA,GAAwBrtI,IAI5B+3I,EAAO3hH,IAAI20G,GAAUE,SAAStkI,SAASm+D,IACrCA,EAAQ8mE,EAAWjjI,EAAE,IACrB,CAEN,CAoBA,OAlBA3I,EAAMmR,iBAAiB,aAAc0nI,EAAY,iBACjD74I,EAAMmR,iBAAiB,OAAQ0nI,EAAY,WAC3C74I,EAAMmR,iBAAiB,QAAS0nI,EAAY,YAC5C74I,EAAMmR,iBAAiB,YAAa0nI,EAAY,gBAChD74I,EAAMmR,iBAAiB,aAAc0nI,EAAY,iBACjD74I,EAAMmR,iBAAiB,UAAW0nI,EAAY,cAC9C74I,EAAMmR,iBAAiB,SAAS,KACzB4mI,EAAOpmI,IAAIo5H,MAIZsC,EAAAA,EAAAA,GAAwBrtI,IAI5Bm4I,EAASpN,GAAQ,IAGZ,CACL/qI,QACAoX,OACA40H,MAAO,IAAI8M,MAAM94I,EAAO,CACtBo2B,IAAKA,CAAC3kB,EAAQuiC,IAAgCviC,EAAOuiC,KAEvDi3F,SAAU,GACVE,cACAC,gBAEJ,CAoDkB2N,CAAYhO,EAASlpI,EAAWspI,EAAaC,GAC3D2M,EAAOnxD,IAAImkD,EAAS6N,GAwIxB,SAAyBA,EAAc7N,GAClB,UAAf6N,EAAMxhI,MAAqB8gI,EAAW75H,SAAS0sH,KACjDmN,EAAW9tI,KAAK2gI,GAChBmN,EAAW9oF,KAAK4pF,IAGC,UAAfJ,EAAMxhI,MAAqB6gI,EAAW55H,SAAS0sH,KACjDkN,EAAW7tI,KAAK2gI,GAChBkN,EAAW7oF,KAAK4pF,GAEpB,CAjJIC,CAAgBL,EAAO7N,EACzB,CACA,MAAM,MAAE/qI,EAAK,MAAEgsI,EAAK,SAAEf,GAAa8M,EAAO3hH,IAAI20G,GAI9C,OAFAE,EAAS7gI,KAAK06D,GAEP,CACLkd,IAAAA,CAAK/mC,GACH,IAAKj7C,EAAMiiF,OAAQ,OACnB,MAAMo2D,EAAeL,GAAkBD,EAAO3hH,IAAI4hH,GAC9CK,GAAgBL,IAAmBjN,IACrCsN,EAAar4I,MAAMga,QACnBq+H,EAAar4I,MAAMkkD,YAAc,GAC7BmpF,EAAAA,EAAAA,GAAwBgL,EAAar4I,SACvCq4I,EAAar4I,MAAMsT,QAAQ4lI,sBAAwB,QAEjDb,EAAajN,eAAeiN,EAAajN,iBAG/C4M,EAAiBjN,EAEZ/qI,EAAMi7C,MACTj7C,EAAMi7C,IAAMA,EACZj7C,EAAM2iI,QAAU,OAEZ1nF,EAAI58B,SAAS,kBAAoBuf,EAAAA,YAC5B59B,EAAMsT,QAAQ4lI,uBACrBC,EAAAA,EAAAA,GAA4Bn5I,MAIhCkiF,EAAAA,EAAAA,GAASliF,GA+Hf,SAAsBoX,EAAqB2zH,GACzC,IAAI/wI,EAAAA,EAAAA,MAAeyB,EAAAA,EAAAA,OAAa29I,aAAaC,iBAAmBC,EAAAA,GAAoBC,MAAO,OAC3F,MAAM,OAAE7/I,IAAW8+I,EAAAA,EAAAA,IAAgBC,EAAa1N,GAAS2N,YACnDc,GAAe55H,EAAAA,EAAAA,MAAyBnkB,EAAAA,EAAAA,QAAc/B,OACtD+/I,EAAep/I,GACnBA,EAAG0nC,WAAY,MAAKroC,MAAc8/I,GAAgBn/I,EAAG0nC,WAAY,MAAKy3G,KAG3D,UAATpiI,IACF8gI,EAAaA,EAAWh8I,OAAOu9I,IAGpB,UAATriI,IACF6gI,EAAaA,EAAW/7I,OAAOu9I,GAEnC,CA7IMC,CAAa73I,EAAWkpI,EAC1B,EAEA/wH,KAAAA,GACMg+H,IAAmBjN,GACrB/qI,EAAMga,OAEV,EAEAT,IAAAA,GACE,GAAIy+H,IAAmBjN,EAAS,CAE9B,MAAMwC,EAAUvtI,EAAMi7C,IACtBj7C,EAAMga,SAENkgB,EAAAA,EAAAA,KAAoB,KAClBl6B,EAAMi7C,IAAM,GACZj7C,EAAMi7C,IAAMsyF,CAAO,GAEvB,CACF,EAEA1qI,cAAAA,CAAeqvG,GACT8lC,IAAmBjN,IACjB/qI,EAAM25I,SACR35I,EAAM25I,SAASznC,GAEflyG,EAAMkkD,YAAcguD,EAG1B,EAEA25B,SAAAA,CAAU3yH,GACJ8+H,IAAmBjN,IACrB/qI,EAAMkZ,OAASA,EACflZ,EAAMukD,OAAQ,EAElB,EAEAunF,eAAAA,CAAgB8N,GACV5B,IAAmBjN,IACrB/qI,EAAMktI,aAAe0M,EAEzB,EAEA7N,WAAAA,CAAYxnF,GAERvkD,EAAMukD,WADMnqD,IAAVmqD,GACavkD,EAAMukD,MAEPA,CAElB,EAEAynF,QAEAG,gBAAAA,GACEgM,EAASpN,EACX,EAEAzkF,OAAMA,KACIiyF,EAAgBxN,GAAS/wI,EAAAA,EAAAA,MAAeyB,EAAAA,EAAAA,OAAauxI,YAAYxuI,QAG3E6nD,QAAOA,KACGkyF,EAAgBxN,GAAS/wI,EAAAA,EAAAA,MAAeyB,EAAAA,EAAAA,OAAauxI,YAAYxuI,QAAQ,GAGnF4tI,oBAAAA,GACE+L,EAASpN,GAAS,EACpB,EAEA5oD,OAAAA,CAAQ03D,GAAwB,GAC9B,MAAMjB,EAAQb,EAAO3hH,IAAI20G,GACpB6N,IAILA,EAAM3N,SAAW2N,EAAM3N,SAAS/uI,QAAQu/F,GAAMA,IAAM32B,IAE/C8zE,EAAM3N,SAAS/tI,SAClB07I,EAAM54I,MAAMga,QACZ+9H,EAAOlzD,OAAOkmD,GAEV8O,GAgCZ,SAAyBjB,EAAc7N,GACrC,MAAM+O,EAAiBjrI,GAAgBA,IAAOk8H,EAC3B,UAAf6N,EAAMxhI,OACR8gI,EAAaA,EAAWh8I,OAAO49I,IAGd,UAAflB,EAAMxhI,OACR6gI,EAAaA,EAAW/7I,OAAO49I,GAEnC,CAxCUC,CAAgBnB,EAAO7N,GAGrBA,IAAYiN,IACdA,OAAiB59I,IAGvB,EAEJ,CAkDA,SAASm+I,EAAgBrV,EAAoB1kI,EAASmD,EAAAA,GAAYqI,OAAQouI,GACxE,MACMpQ,EAlDR,SAAuB4Q,GACrB,OAAQA,EAAMxhI,MACZ,IAAK,QAAS,OAAO8gI,EACrB,IAAK,QAAS,OAAOD,EACrB,QAAS,OAEb,CA4CgB+B,CADAjC,EAAO3hH,IAAI8sG,IAEzB,IAAK8E,EAAO,OAEZ,GAAIxpI,IAAWmD,EAAAA,GAAYsI,OAAQ,CACjC,MAAMsrD,EAAQyyE,EAAMh4H,QAAQkzH,GAC5B,GAAI3tE,EAAQ,EAAG,OAEf,OAAOyyE,EAAMzyE,GADK6iF,GAAkB,EAAI,GAE1C,CAEA,MAAM,OAAE1+I,IAAW8+I,EAAAA,EAAAA,IAAgBC,EAAavV,GAAWwV,YACrDuB,EAAYjS,EAAM9rI,QAAQ7B,GAAOA,EAAG0nC,WAAY,MAAKroC,OACrD67D,EAAQ0kF,EAAUjqI,QAAQkzH,GAChC,GAAI3tE,EAAQ,EAAG,OACf,IAAI1hB,EAAYr1C,IAAWmD,EAAAA,GAAYqI,QAAU,EAAI,EAErD,OADIouI,IAAgBvkG,IAAc,GAC3BomG,EAAU1kF,EAAQ1hB,EAC3B,CAEO,SAAS7wC,EAAY3E,GAC1B,MAAM21C,GAAMkmG,EAAAA,EAAAA,IAAoB77I,GAChC,GAAK21C,EAGL,MAAQ,GAAEA,KAAO31C,EAAQI,MAC3B,CAEA,SAASg6I,EAAa1N,GAGpB,MAAO,CACL2N,WAHiB3N,EAAQ34H,MAAM,qBAAsB,GAIrD3T,KAHWwoC,OAAO8jG,EAAQ12E,MAAM,KAAK8iF,OAKzC,CAGA,SAAS6B,EAAkBmB,EAAeC,GACxC,IAAKD,IAAQC,EAAK,OAAO,EACzB,MAAQ37I,KAAM47I,EAAS3B,WAAY4B,GAAW7B,EAAa0B,IACnD17I,KAAM87I,EAAS7B,WAAY8B,GAAW/B,EAAa2B,GACrD1rF,EAAO6rF,EAAUF,EACvB,OAAgB,IAAT3rF,EAAa8rF,EAAOC,cAAcH,GAAU5rF,CACrD,C,kBCtWe,SAASipE,EAAcz6H,EAAgBq4D,GACpD,OAAOA,EAAQxxD,KAAKgB,MAAMwwD,EAAQr4D,GAAUA,CAC9C,C,kECMA,MAAMw9I,EAAkB,GAClBC,EAAiB,IAEvB,IAAIC,EAAsC,GACtCC,GAAU,EAEC,SAASC,EAASpxH,EAAamiE,GAC5C+uD,EAAiBxwI,KAAK,CAAEsf,MAAKmiE,aACxBgvD,IACHA,GAAU,EACV9gI,YAAWzI,gBAOfA,iBACE,IAAIs2C,EAAQ,EACZ,IAAK,MAAMmzF,KAAmBH,EAC5BI,EAAYD,GACZnzF,IACIA,IAAU8yF,UACN1gI,EAAAA,EAAAA,IAAM2gI,GACZ/yF,EAAQ,GAGZgzF,EAAmB,EACrB,CAjBYK,GACNJ,GAAU,CAAK,GACdF,GAEP,CAeA,SAASK,GAAY,IAAEtxH,EAAG,SAAEmiE,IAC1B,MAAMhiE,EAAO5c,SAASlQ,cAAc,KACpC8sB,EAAKpb,KAAOib,EACZG,EAAKpY,OAAS,SACdoY,EAAKqxH,IAAM,sBACXrxH,EAAKixH,SAAWjvD,EAChB,IACEhiE,EAAKsxH,OACP,CAAE,MAAOxoI,GAEPE,QAAQC,MAAMH,EAChB,CACF,C,kDChDe,SAASwnB,EAAqBwS,EAAsB4zB,EAAiB66E,GAClF,IAAK76E,GAAS5zB,IAAY1/B,SAAS4E,cACjC,OAGF,MAAMynB,EAAY77B,OAAO87B,eACnBuT,EAAQ7/B,SAAS8/B,cACjBH,EAAYD,EAAQC,WAAaD,EAElCztB,EAAAA,IAAiBk8H,GAA0BxuG,GAAcA,EAAUyuG,WAKxEvuG,EAAMwuG,mBAAmBF,EAAuBzuG,EAAUC,GAE1DE,EAAMgjB,UAAS,GACfx2B,EAAU4T,kBACV5T,EAAU6T,SAASL,IARjBH,EAAQ5/B,OASZ,C,0DCnBA,MAAMwuI,EAAiB,IAEhB,SAAS9uD,EAAWsrC,EAAsBhgC,EAAeyjD,EAAqB,aACnF,MAAM9xH,EAAMquG,aAAiBn+G,KAAO3C,IAAI60E,gBAAgBisC,GAASA,EAC3D7rC,EAAM,IAAIuvD,MAChB,OAAO,IAAIzmI,SAASwE,IAClB0yE,EAAIwvD,OAAS,KACXh1I,EAAMwlF,EAAKA,EAAI5lF,MAAQyxF,EAAO7L,EAAI3lF,OAASwxF,EAAOyjD,GAC/C90D,MAAM/sE,IACL,IAAKA,EAAM,MAAM,IAAI6sE,MAAM,wBAC3B,OAAOvvE,IAAI60E,gBAAgBnyE,EAAK,IAEjC+sE,KAAKltE,GACL69H,SAAQ,KACHtf,aAAiBn+G,MACnB3C,IAAIy1E,gBAAgBhjE,EACtB,GACA,EAENwiE,EAAIjxC,IAAMvxB,CAAG,GAEjB,CAEO,SAASiyH,EACd5jB,EAAsBzxH,EAAeC,EAAgBi1I,EAAqB,aAE1E,MAAM9xH,EAAMquG,aAAiBn+G,KAAO3C,IAAI60E,gBAAgBisC,GAASA,EAC3D7rC,EAAM,IAAIuvD,MAChB,OAAO,IAAIzmI,SAASwE,IAClB0yE,EAAIwvD,OAAS,KACXh1I,EAAMwlF,EAAK5lF,EAAOC,EAAQi1I,GACvB90D,MAAM/sE,IACL,IAAKA,EAAM,MAAM,IAAI6sE,MAAM,wBAC3B,OAAOvvE,IAAI60E,gBAAgBnyE,EAAK,IAEjC+sE,KAAKltE,GACL69H,SAAQ,KACHtf,aAAiBn+G,MACnB3C,IAAIy1E,gBAAgBhjE,EACtB,GACA,EAENwiE,EAAIjxC,IAAMvxB,CAAG,GAEjB,CAEApY,eAAe5K,EACbwlF,EAAuB5lF,EAAeC,EAAgBi1I,EAAqB,aAG3E,KAAI,sBAAuB/9I,QA6BzB,OAAOm+I,EAAa1vD,EAAK5lF,EAAOC,OAAQnM,EAAWohJ,GA5BnD,IACE,MAAMK,QAAep+I,OAAOq+I,kBAAkB5vD,EAC5C,CAAE6vD,YAAaz1I,EAAO01I,aAAcz1I,EAAQ01I,cAAe,SAC7D,GAAIJ,EAAOt1I,SAAWA,GAAUs1I,EAAOv1I,QAAUA,EAC/C,MAAM,IAAIkgF,MAAM,sCAElB,MAAM01D,QAAqBC,EAAAA,EAAAA,IAAgBjwD,EAAIjxC,KACzCmhG,GAAYC,EAAAA,EAAAA,IAAaH,GAAgBX,EAAiB,OAAS,OACzE,aAAa,IAAIvmI,SAASsnI,IACxB,MAAMr2I,EAASgH,SAASlQ,cAAc,UACtCkJ,EAAOK,MAAQu1I,EAAOv1I,MACtBL,EAAOM,OAASs1I,EAAOt1I,OACvB,MAAMg2I,EAAQt2I,EAAOQ,WAAW,MAChC81I,EAAMn2I,UAAYg2I,EAClBG,EAAMC,SAAS,EAAG,EAAGv2I,EAAOK,MAAOL,EAAOM,QAC1C,MAAMC,EAAMP,EAAOQ,WAAW,kBAC1BD,EACFA,EAAIi2I,wBAAwBZ,GAE5BU,EAAMlb,UAAUwa,EAAQ,EAAG,GAE7B51I,EAAOy2I,OAAOJ,EAAKd,EAAW,GAElC,CAAE,MAAO7yI,GAEP,OAAOizI,EAAa1vD,EAAK5lF,EAAOC,OAAQnM,EAAWohJ,EACrD,CAIJ,CAEAlqI,eAAesqI,EACb1vD,EAAuB5lF,EAAeC,EAAgBo2I,EAAe,GAAKnB,EAAqB,aAE/F,MAAMv1I,EAASgH,SAASlQ,cAAc,UAChCyJ,EAAMP,EAAOQ,WAAW,MACxBm2I,EAAK3vI,SAASlQ,cAAc,UAC5B8/I,EAAOD,EAAGn2I,WAAW,MAK3B,GAHAR,EAAOK,MAAQA,EACfL,EAAOM,OAASA,EAEZ2lF,EAAI5lF,MAAQq2I,EAAOr2I,EAAO,CAC5B,MAAMw2I,EAAM,EAAIH,EAChB,IAAII,EAAM,CACRz2I,MAAOvC,KAAKgB,MAAMmnF,EAAI5lF,MAAQq2I,GAC9Bp2I,OAAQxC,KAAKgB,MAAMmnF,EAAI3lF,OAASo2I,IAQlC,IALAC,EAAGt2I,MAAQy2I,EAAIz2I,MACfs2I,EAAGr2I,OAASw2I,EAAIx2I,OAEhBs2I,EAAKxb,UAAUn1C,EAAK,EAAG,EAAG6wD,EAAIz2I,MAAOy2I,EAAIx2I,QAElCw2I,EAAIz2I,MAAQq2I,EAAOr2I,GACxBy2I,EAAM,CACJz2I,MAAOvC,KAAKgB,MAAMg4I,EAAIz2I,MAAQq2I,GAC9Bp2I,OAAQxC,KAAKgB,MAAMg4I,EAAIx2I,OAASo2I,IAElCE,EAAKxb,UAAUub,EAAI,EAAG,EAAGG,EAAIz2I,MAAQw2I,EAAKC,EAAIx2I,OAASu2I,EAAK,EAAG,EAAGC,EAAIz2I,MAAOy2I,EAAIx2I,QAGnFC,EAAI66H,UAAUub,EAAI,EAAG,EAAGG,EAAIz2I,MAAOy2I,EAAIx2I,OAAQ,EAAG,EAAGN,EAAOK,MAAOL,EAAOM,OAC5E,MACEC,EAAI66H,UAAUn1C,EAAK,EAAG,EAAGjmF,EAAOK,MAAOL,EAAOM,QAGhD,MAAM21I,QAAqBC,EAAAA,EAAAA,IAAgBjwD,EAAIjxC,KACzCmhG,GAAYC,EAAAA,EAAAA,IAAaH,GAAgBX,EAAiB,OAAS,OAIzE,OAHA/0I,EAAIJ,UAAYg2I,EAChB51I,EAAIw2I,yBAA2B,mBAC/Bx2I,EAAIg2I,SAAS,EAAG,EAAGv2I,EAAOK,MAAOL,EAAOM,QACjC,IAAIyO,SAASwE,IAClBvT,EAAOy2I,OAAOljI,EAASgiI,EAAW,GAEtC,C,+EC1HO,MAAM7kB,EAAc5yH,KAAKC,IAAIohI,UAAU6X,qBAAuB,EAAG,GAExE,IAAIC,EAKW,SAASC,IACtB,OAAIC,EAAAA,IAAgB,IACfF,IACHA,EAAY,IAAIp5I,MAAM6yH,GAAa1yH,UAAK7J,GAAW6B,KACjD,KACE,MAAMkgG,EAAS,IAAIK,OAAO,IAAIvlF,IAAI,oBAElC,MAAO,CAAEklF,SAAQ07C,WADCt7C,EAAAA,EAAAA,GAAgCJ,OAAQ/hG,EAAW,SACzC,KAK3B8iJ,EACT,CAEO,SAASxmB,EAAmB7vF,EAA8D0uB,GAC/F,OAAO4nF,IAAqB5nF,GAAOsiF,UAAUhwB,QAAQhhF,EACvD,C,+DC7BA,MAAMw2G,EAAY,CAChBC,OAAQ,+BACRC,KAAM,qCACNC,IAAK,gCACLC,MAAO,0BAIHC,EAAe,IAAIh5D,IAAI5oF,OAAOqyF,QAAQ,CAC1C,mBAAoB,UACpB,eAAgB,UAChB,sBAAuB,UACvB,yBAA0B,UAC1B,eAAgB,UAChB,gBAAiB,UACjB,gBAAiB,UACjB,mBAAoB,UACpBwvD,mBAAoB,UACpBC,SAAU,UACVC,UAAW,UACXrxE,MAAO,UACPsxE,KAAM,UACNC,KAAM,UACNC,UAAW,UACXC,eAAgB,UAChBC,MAAO,UACPC,OAAQ,UACRC,KAAM,aAGFC,EAAgB,CACpB,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAGnF,SAASC,EAAcC,EAAkC7vC,EAAwC34C,EAAO,IAC7G,MAAM,IAAEk5C,EAAG,KAAEW,GAASlB,EAChB8vC,EAAcnB,EAAUkB,GAC9B,OAAQA,GACN,IAAK,SACH,MAAQ,GAAEC,WAAqBvvC,KAAOW,MAASX,KAAOW,KAAQ75C,KAChE,IAAK,OACH,MAAQ,GAAEyoF,QAAkBvvC,KAAOW,SAAY75C,cAAiBk5C,KAAOW,IACzE,IAAK,QACH,MAAQ,GAAE4uC,OAAiBvvC,KAAOW,IAEpC,QACE,MAAQ,GAAE4uC,WAAqBvvC,UAAYW,UAAa75C,IAE9D,CAEO,SAASm5C,EAAkBD,EAAal5C,GAE7C,OAAQ,aAAehyD,KAAK06I,IAAIxvC,GAAOlrG,KAAK8pG,GAAK,MAAS,GAAK93C,CACjE,CAEO,SAASm6C,EAAgB94F,GAC9B,OAAKA,EACG,0CAAyCA,WAD/B,EAEpB,CAGO,SAAS24F,EAAc34F,GAC5B,OAAKA,EACEsmI,EAAatnH,IAAIhf,IACnBsmI,EAAatnH,IAAIhf,EAAKi9C,MAAM,KAAK,KACjCgqF,GAGiBK,EAHYtnI,EAI3BsnI,EAAIrqF,MAAM,IAAIl7C,QAAO,CAACwlI,EAAUC,KAElCD,GAAY,GAAKA,EAAYC,EAAQC,WAAW,GAAM,GAAI,GANrBR,EAAcnhJ,SAHtC,UAMpB,IAAwBwhJ,CAFxB,C,iFC5CA,MAAMI,EAAmB,CACvB98D,UAAM5nF,EACN4f,WAAO5f,EACPkyI,kBAAclyI,EACdqyI,iBAAaryI,EACbyyI,mBAAezyI,EACfwyI,eAAWxyI,EACXmf,UAAMnf,EACNsyI,YAAQtyI,GAGH,SAAS6xI,EAAqB/+C,EAA0B+9C,GAC7D,MAAM,aAAE8T,GAAiBthJ,OAAO2nI,UAC5B2Z,GACE7xD,GAAUkgD,EAAelgD,GACzB+9C,GAAU+T,EAAwB/T,IAGtCp4H,QAAQihI,KAAK,iDAEjB,CAEO,SAAS1G,EAAelgD,GAC7B,MAAM,aAAE6xD,GAAiBthJ,OAAO2nI,UAC5B2Z,IAEFA,EAAa7xD,SAAWA,GAAY,KAExC,CAEO,SAAS8xD,EAAwB/T,GACtC,MAAM,aAAE8T,GAAiBthJ,OAAO2nI,UAC5B2Z,GACFjjJ,OAAOqyF,QAAQ,IAAK2wD,KAAqB7T,IAAYtkI,SAAQ,EAAEqtC,EAAK8wB,MAClE,IAEEi6E,EAAaE,iBAAiBjrG,EAAK8wB,EACrC,CAAE,MAAOnyD,GACP,IAIR,CAEO,SAASusI,IACd,MAAM,aAAEH,GAAiBthJ,OAAO2nI,UAC5B2Z,IAEFA,EAAa7xD,SAAW,KACxB8xD,EAAwBF,GACpBC,EAAaI,gBAAeJ,EAAaI,cAAgB,QAC7DJ,EAAa5R,qBAEjB,CAEO,SAASJ,EAAiB53C,EAAuC,QACtE,MAAM,aAAE4pD,GAAiBthJ,OAAO2nI,UAC5B2Z,GAAgBA,EAAaI,gBAC/BJ,EAAaI,cAAgBhqD,EAEjC,CAEO,SAASg4C,EAAiBh4C,GAC/B,IAAKA,QAA4B/6F,IAAnB+6F,EAAMntD,eAA6C5tC,IAAnB+6F,EAAMryF,SAAwB,OAC5EqyF,EAAMntD,SAAWjkC,KAAKC,IAAImxF,EAAMntD,SAAUmtD,EAAMryF,UAEhD,MAAM,aAAEi8I,GAAiBthJ,OAAO2nI,UAChC2Z,GAAc5R,mBAAmBh4C,EACnC,CAEO,SAASiqD,GAAmB,MACjC31I,EAAK,OAAE2jF,EAAM,MAAEiK,EAAK,QAAEgoD,IAEtB,GAAI,kBAAmB5hJ,OACrB,OAAO,IAAIA,OAAO6hJ,cAAc,CAC9B71I,QACA2jF,SACAiK,QACAgoD,WAIN,C,kDCxGA,MAAME,EAAQ,IAAIC,QAKH,SAAS/oI,EAAgCgpI,GACtD,MAAO,IAAI50G,KACT,MAAM60G,EAASH,EAAMnpH,IAAIqpH,GACzB,GAAIC,IAAUC,EAAAA,EAAAA,GAAqBD,EAAOE,SAAU/0G,GAClD,OAAO60G,EAAOG,WAGhB,MAAMx6I,EAASo6I,KAAM50G,GAErB,OADA00G,EAAM34D,IAAI64D,EAAI,CAAEG,SAAU/0G,EAAMg1G,WAAYx6I,IACrCA,CAAM,CAEjB,C,4DCdA,MACMy6I,EAAoB,OACpBC,EAAmB,QAEnBC,EAAc,IAAIt7D,IAClBu7D,EAAY,IAAIv7D,IAChBw7D,EAAkB,IAAIx7D,IAErBpzE,eAAgB6wH,EACrBz4G,EACA1rB,EAAQ,EACRmiJ,EAAYL,GAEZ,MAAM1tI,EAAQsX,EAAItX,MAAM,kBACxB,IAAIguI,EAOJ,IALEA,EADEhuI,EACSA,GAAS60B,OAAO70B,EAAM,IAEtB6tI,EAAU7pH,IAAI1M,KAGd,CACX,GAAI02H,GAAYpiJ,GAASoiJ,EAAU,OAEnC,IAAIniJ,EAAMD,EAAQmiJ,EAAY,EAC1BC,GAAYniJ,EAAMmiJ,IACpBniJ,EAAMmiJ,EAAW,GAInB,MAAMC,EAAY,GAAE32H,KAAO1rB,KAASC,IACpC,IAAIqiJ,EAAcN,EAAY5pH,IAAIiqH,GAElC,IAAKC,EAAa,CAChB,IAAIz4B,EAAUq4B,EAAgB9pH,IAAIiqH,GAC7Bx4B,IACHA,GAAUte,EAAAA,EAAAA,IAAQ,gBAAiB,CACjCmoC,YAAapwI,EAAAA,GAAemhI,YAC5B/4G,MACA1rB,QACAC,QAGFiiJ,EAAgBt5D,IAAIy5D,EAAUx4B,IAGhC,MAAMxiH,QAAewiH,EAAQwvB,SAAQ,KACnC6I,EAAgBr7D,OAAOw7D,EAAS,IAGlC,IAAKh7I,GAAQi7I,YAAa,OAGtBj7I,EAAOk7I,WAAaH,IACtBA,EAAW/6I,EAAOk7I,SAClBN,EAAUr5D,IAAIl9D,EAAKrkB,EAAOk7I,WAI5BD,EAAcj7I,EAAOi7I,YAGjBriJ,GAAO8hJ,GACTC,EAAYp5D,IAAIy5D,EAAUh7I,EAAOi7I,YAErC,OAGMA,EAENtiJ,EAAQC,EAAM,CAChB,CACF,C,wEC5EA,MAAMuiJ,EAAcvzI,SAASlQ,cAAc,OAEpC,SAAS+8B,EAAsB1rB,GACpC,MAAMkrB,EAAY77B,OAAO87B,eAEzB,GAAID,GAAWM,YAAcN,EAAUI,WAAY,CACjD,MAAMoT,EAAQxT,EAAUM,WAAW,GACnCkT,EAAM2zG,iBAEN,MAAMvuI,EAAW46B,EAAM4zG,yBAAyBtyI,GAC1CuyI,EAAmBzuI,EAAS06B,UAClCE,EAAM8zG,WAAW1uI,GACbyuI,GACF7zG,EAAM+zG,cAAcF,GACpB7zG,EAAMg0G,YAAYH,IAElB7zG,EAAMgjB,UAAS,GAEjBx2B,EAAU4T,kBACV5T,EAAU6T,SAASL,EACrB,CACF,CAEO,SAAS4iD,EAAuBjjB,EAAyBs0E,GAC9D,IAAKt0E,EACH,MAAO,GAGT,MAAMu0E,EAAMvjJ,OAAO87B,eACnB,IAAKynH,IAAQA,EAAItnH,WACf,OAAO+yC,EAAU/5D,UAGnB,MAAMo6B,EAAQk0G,EAAIpnH,WAAW,GAAGqnH,aAChC,OAAKn0G,EAAMo0G,eAAez0E,GAIrBs0E,GAAsBt0E,EAAUyyB,SAASpyD,EAAMgiD,0BAIpDhiD,EAAMgjB,UAAS,GACfhjB,EAAME,SAASy/B,EAAW,GAE1B+zE,EAAY9tI,UAAY,GACxB8tI,EAAYnzI,YAAYy/B,EAAMq0G,iBAEvBX,EAAY9tI,WATV,GAJA+5D,EAAU/5D,SAcrB,CAGO,SAASwhF,EAAiBvnD,GAC/B,IAAIsnD,EAAgB,EACpB,MAAM36D,EAAY77B,OAAO87B,eACzB,IAAKD,GAAsC,IAAzBA,EAAUI,WAC1B,OAAOu6D,EAGT,MAAMnnD,EAAQxT,EAAUM,WAAW,GAC7BwnH,EAAat0G,EAAMm0G,aAKzB,OAJAG,EAAW9F,mBAAmB3uG,GAC9By0G,EAAWn0G,OAAOH,EAAMu0G,aAAcv0G,EAAMw0G,WAC5CrtD,EAAgBmtD,EAAW74G,WAAWrrC,OAE/B+2F,CACT,CAGO,SAASG,EAAiBznD,EAAe3E,GAC9C,IAAK,MAAMx5B,KAAQm+B,EAAQh9B,WACzB,GAAInB,EAAK4B,WAAamxI,KAAKC,UAAW,CACpC,GAAKhzI,EAActR,QAAU8qC,EAAU,CACrC,MAAM8E,EAAQ7/B,SAAS8/B,cACjBzT,EAAY77B,OAAO87B,eAMzB,OALAuT,EAAME,SAASx+B,EAAMw5B,GACrB8E,EAAMgjB,UAAS,GACfx2B,EAAU4T,kBACV5T,EAAU6T,SAASL,IAEX,CACV,CACE9E,GAAY,WAAYx5B,EAAOA,EAAKtR,OAAmB,CAE3D,MAEE,IAAkB,KADlB8qC,EAAWosD,EAAiB5lF,EAAMw5B,IAEhC,OAAQ,EAKd,OAAOA,CACT,CAEO,SAASy5G,IACd,MAAMnoH,EAAY77B,OAAO87B,eACzBD,GAAW4T,iBACb,C,kBClGA,IAAIw0G,EAEG,SAASpkI,EAAsBqkI,EAAS,IAAKrgB,EAA8BsgB,GAAa,GACxFF,IACHA,EAAez0I,SAASlQ,cAAc,SACtC2kJ,EAAa9tI,aAAa,OAAQ,SAGpC8tI,EAAa9tI,aAAa,SAAU+tI,GAEhCC,EACFF,EAAavuI,gBAAgB,YAE7BuuI,EAAa9tI,aAAa,WAAY,YAIxC8tI,EAAaG,SAAW,KACxBH,EAAah8I,MAAQ,GACrBg8I,EAAaG,SAAWvgB,EAExBogB,EAAavG,OACf,C,kDCrBA,SAAgB,KAAO,WAAW,OAAS,WAAW,QAAU,WAAW,KAAO,WAAW,KAAO,WAAW,oBAAsB,WAAW,mBAAqB,WAAW,OAAS,WAAW,YAAc,W,mCCAlN,SAAgB,KAAO,WAAW,KAAO,WAAW,OAAS,WAAW,aAAe,WAAW,MAAQ,WAAW,iBAAmB,WAAW,gBAAkB,WAAW,UAAY,W","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/hooks/useHeaderPane.tsx","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getSingularPaidMedia.ts","webpack://telegram-t/./src/components/middle/message/helpers/calculateAlbumLayout.ts","webpack://telegram-t/./src/util/languageDetection.ts","webpack://telegram-t/./src/components/middle/message/hooks/useDetectChatLanguage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOuterHandlers.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStory.tsx","webpack://telegram-t/./src/components/common/TopicChip.tsx","webpack://telegram-t/./src/components/common/TopicChip.module.scss?5208","webpack://telegram-t/./src/components/middle/message/hocs/withSelectControl.tsx","webpack://telegram-t/./src/components/middle/message/Album.tsx","webpack://telegram-t/./src/components/common/hooks/useAnimatedEmoji.ts","webpack://telegram-t/./src/components/middle/message/AnimatedCustomEmoji.tsx","webpack://telegram-t/./src/components/middle/message/AnimatedEmoji.tsx","webpack://telegram-t/./src/components/middle/message/CommentButton.tsx","webpack://telegram-t/./src/components/middle/message/Contact.module.scss?fec1","webpack://telegram-t/./src/components/middle/message/Contact.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/FactCheck.module.scss?3842","webpack://telegram-t/./src/components/middle/message/FactCheck.tsx","webpack://telegram-t/./src/components/middle/message/Game.tsx","webpack://telegram-t/./src/components/middle/message/Giveaway.module.scss?9b0c","webpack://telegram-t/./src/components/middle/message/Giveaway.tsx","webpack://telegram-t/./src/components/middle/message/InlineButtons.tsx","webpack://telegram-t/./src/components/middle/message/Invoice.tsx","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.module.scss?19f6","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.tsx","webpack://telegram-t/./src/components/middle/message/Location.tsx","webpack://telegram-t/./src/components/middle/message/MessageMeta.tsx","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.module.scss?15a3","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.tsx","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.module.scss?e3d6","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.tsx","webpack://telegram-t/./src/components/middle/message/PollOption.tsx","webpack://telegram-t/./src/components/middle/message/Poll.tsx","webpack://telegram-t/./src/components/middle/message/Sticker.module.scss?30d0","webpack://telegram-t/./src/components/middle/message/Sticker.tsx","webpack://telegram-t/./src/components/middle/message/Story.tsx","webpack://telegram-t/./src/components/middle/message/StoryMention.tsx","webpack://telegram-t/./src/components/middle/message/Message.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useInnerHandlers.ts","webpack://telegram-t/./src/hooks/useTextLanguage.ts","webpack://telegram-t/./src/components/middle/message/helpers/buildContentClassName.ts","webpack://telegram-t/./src/components/middle/message/MessageAppendix.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.module.scss?8703","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/global/selectors/limits.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useIntervalForceUpdate.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/hooks/useMarkScrolled/useMarkScrolled.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/progressiveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isPlaying) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <Icon name={isDownloading ? 'close' : 'arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <Icon\n              name={(isTranscribed || isTranscriptionError) ? 'down' : 'transcribe'}\n              className={buildClassName(\n                'transcribe-icon',\n                (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n              )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media!.duration) : formatMediaDuration(media!.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst VALID_TARGET_IDS = new Set([EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID]);\nconst CLOSEST_CONTENT_EDITABLE_SELECTOR = 'div[contenteditable]';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = (e.target as HTMLElement)?.closest(CLOSEST_CONTENT_EDITABLE_SELECTOR);\n      if (!input || !VALID_TARGET_IDS.has(input.id)) {\n        return;\n      }\n\n      e.preventDefault();\n\n      // Some extensions can trigger paste into their panels without focus\n      if (document.activeElement !== input) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text');\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiMessage } from '../../../../api/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({\n        chatId,\n        messageIds: [editedMessage.id],\n        isSchedule: type === 'scheduled',\n      });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  canEditMedia,\n  editingMessage,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId\n          && bot.attachMenuPeerTypes && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useOldLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={buildClassName('AttachMenu--button composer-action-button', isAttachMenuOpen && 'activated')}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ chatId: message.chatId, messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('composer-action-button bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <Icon name=\"webapp\" className={buildClassName('bot-menu-icon', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (sender && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId, WebPageMediaSize } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n  attachmentSettings,\n  isEditing,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isShown);\n\n  const hasMediaSizeOptions = webPagePreview?.hasLargeMedia;\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector('.web-page-preview-context-menu .bubble'),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"web-page-preview-context-menu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('PreviewSender.MoveTextUp')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang(('PreviewSender.MoveTextDown'))}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ChatInput.EditLink.LargerMedia')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang(('ChatInput.EditLink.SmallerMedia'))}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ChatInput.EditLink.RemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)} ref={ref}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\" onClick={handlePreviewClick}>\n          <Icon name=\"link\" />\n        </div>\n        <WebPage\n          message={messageStub}\n          inPreview\n          theme={theme}\n          onContainerClick={handlePreviewClick}\n          isEditing={isEditing}\n        />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiDraft,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  GlobalState, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition,\n  InlineBotSettings,\n  ISettings,\n  MessageList,\n  MessageListType,\n  ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  DEFAULT_MAX_MESSAGE_LENGTH,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport { getChatNotifySettings } from '../../global/helpers/notifications';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectNoWebPage,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n    maxMessageLength: number;\n    isSilentPosting?: boolean;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n  maxMessageLength,\n  isSilentPosting,\n  onDropHide,\n  onFocus,\n  onBlur,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n    updateChatSilentPosting,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    if (chatId && chat && !sendAsPeerIds && isReady && (isChatSuperGroup(chat) || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot, isInStoryViewer),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: oldLang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: oldLang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: oldLang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : maxMessageLength;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: oldLang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n    isSilent = isSilent || isSilentPosting;\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    const effectId = effect?.id;\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n      if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        isInvertedMedia,\n        effectId,\n        webPageMediaSize: attachmentSettings.webPageMediaSize,\n        webPageUrl: hasWebPagePreview ? webPagePreview!.url : undefined,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n    clearDraft({\n      chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n    });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        chatId,\n        threadId,\n        queryId,\n        scheduledAt,\n        isSilent: isSilent || isSilentPosting,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    isSilent = isSilent || isSilentPosting;\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        threadId,\n        chatId,\n        isSilent,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll, isSilent: isSilentPosting });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  const handleToggleSilentPosting = useLastCallback(() => {\n    const newValue = !isSilentPosting;\n    updateChatSilentPosting({ chatId, isEnabled: newValue });\n\n    showNotification({\n      localId: 'silentPosting',\n      icon: newValue ? 'mute' : 'unmute',\n      message: lang(`ComposerSilentPosting${newValue ? 'Enabled' : 'Disabled'}Tootlip`),\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const hasText = useDerivedState(() => Boolean(getHtml()), [getHtml]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage\n    && messageListType === 'thread';\n  const isBotMenuButtonOpen = withBotMenuButton && !hasText && !activeVoiceRecording;\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n\n  const placeholder = useMemo(() => {\n    if (activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER) {\n      return '';\n    }\n\n    if (!isComposerBlocked) {\n      if (botKeyboardPlaceholder) return botKeyboardPlaceholder;\n      if (inputPlaceholder) return inputPlaceholder;\n      if (chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID) {\n        return replyToTopic\n          ? lang('ComposerPlaceholderTopic', { topic: replyToTopic.title })\n          : lang('ComposerPlaceholderTopicGeneral');\n      }\n      if (isChannel) {\n        return lang(isSilentPosting ? 'ComposerPlaceholderBroadcastSilent' : 'ComposerPlaceholderBroadcast');\n      }\n      return lang('ComposerPlaceholder');\n    }\n\n    if (isInStoryViewer) return lang('ComposerStoryPlaceholderLocked');\n\n    return lang('ComposerPlaceholderNoText');\n  }, [\n    activeVoiceRecording, botKeyboardPlaceholder, chat, inputPlaceholder, isChannel, isComposerBlocked,\n    isInStoryViewer, isSilentPosting, lang, replyToTopic, threadId, windowWidth,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: oldLang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ sendCompressed, sendGrouped, isInvertedMedia }, scheduledAt, currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      sendSilent({ sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => { saveEffectInDraft({ chatId, threadId, effectId: undefined }); });\n\n  const handleStopEffect = useLastCallback(() => { hideEffectInComposer({ }); });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={oldLang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    'composer-action-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={placeholder}\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              <Transition\n                className=\"composer-action-buttons-container\"\n                slideClassName=\"composer-action-buttons\"\n                activeKey={Number(hasText)}\n                direction=\"inverse\"\n                name=\"slideFadeAndroid\"\n              >\n                {!hasText && (\n                  <>\n                    {isChannel && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button\"\n                        color=\"translucent\"\n                        onClick={handleToggleSilentPosting}\n                        ariaLabel={lang(\n                          isSilentPosting ? 'AriaComposerSilentPostingDisable' : 'AriaComposerSilentPostingEnable',\n                        )}\n                      >\n                        <Icon name={isSilentPosting ? 'mute' : 'unmute'} />\n                      </Button>\n                    )}\n                    {withScheduledButton && (\n                      <Button\n                        round\n                        faded\n                        className=\"composer-action-button scheduled-button\"\n                        color=\"translucent\"\n                        onClick={handleAllScheduledClick}\n                        ariaLabel={lang('AriaComposerOpenScheduled')}\n                      >\n                        <Icon name=\"schedule\" />\n                      </Button>\n                    )}\n                    {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                      <ResponsiveHoverButton\n                        className={buildClassName('composer-action-button', isBotKeyboardOpen && 'activated')}\n                        round\n                        color=\"translucent\"\n                        onActivate={openBotKeyboard}\n                        ariaLabel={lang('AriaComposerBotKeyboard')}\n                      >\n                        <Icon name=\"bot-command\" />\n                      </ResponsiveHoverButton>\n                    )}\n                  </>\n                )}\n              </Transition>\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={oldLang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={oldLang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <Icon name=\"heart\" className={buildClassName(isSentStoryReactionHeart && 'story-reaction-heart')} />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={oldLang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <Icon name=\"send\" />\n        <Icon name=\"microphone-alt\" />\n        {onForward && <Icon name=\"forward\" />}\n        {isInMessageList && <Icon name=\"schedule\" />}\n        {isInMessageList && <Icon name=\"check\" />}\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const userFullInfo = isChatWithUser ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !userFullInfo?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const isSilentPosting = chat && getChatNotifySettings(\n      chat,\n      selectNotifyDefaults(global),\n      selectNotifyException(global, chatId),\n    )?.isSilentPosting;\n\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n    && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    const maxMessageLength = global.config?.maxMessageLength || DEFAULT_MAX_MESSAGE_LENGTH;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && (userFullInfo || chatFullInfo)?.hasScheduledMessages\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: userFullInfo ? (userFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: userFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview: selectTabState(global).webPagePreview,\n      isContactRequirePremium: userFullInfo?.isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n      maxMessageLength,\n      isSilentPosting,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useOldLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Icon from './icons/Icon';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <Icon\n            name={actionIcon || 'download'}\n            className={buildClassName('action-icon', shouldSpinnerRender && 'hidden')}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\",\"share\":\"Sbagy_Tm\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n          className={styles.share}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  useIntervalForceUpdate(UPDATE_INTERVAL);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPeerPhotos, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectPeerPhotos,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    emojiStatusSticker?: ApiSticker;\n    emojiStatusSlug?: string;\n    profilePhotos?: ApiPeerPhotos;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\nconst STATUS_UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  emojiStatusSticker,\n  emojiStatusSlug,\n  profilePhotos,\n  peerId,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n    openUniqueGiftBySlug,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useIntervalForceUpdate(user ? STATUS_UPDATE_INTERVAL : undefined);\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (emojiStatusSlug) {\n      openUniqueGiftBySlug({ slug: emojiStatusSlug });\n      return;\n    }\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && profilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && profilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={profilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n    const emojiStatusSlug = emojiStatus?.type === 'collectible' ? emojiStatus.slug : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      emojiStatusSticker,\n      emojiStatusSlug,\n      profilePhotos,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message)?.text !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatTranslatedMessages } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getPeerTitle,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = containedMedia && getMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useOldLang();\n\n  const senderTitle = sender ? getPeerTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getPeerTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getPeerTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        asPreview: true,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content, {});\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <span className=\"embedded-sender-wrapper\">\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderForwardSender() {\n    return forwardSenderTitle && !areSendersSame && (\n      <span className=\"embedded-forward-sender-wrapper\">\n        <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n        <span className=\"forward-sender-title\">\n          {renderText(forwardSenderTitle)}\n        </span>\n      </span>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      peer={sender}\n      emojiIconClassName=' className=\"EmbeddedMessage--background-icons\"'\n      ref={ref}\n      shouldReset\n      noUserColors={noUserColors}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n        'no-selection',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {renderForwardSender()}\n        </div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(lang(valueKey, [formattedDate, age], undefined, age))}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"botVerificationSection\":\"RWFu5ENh\",\"sectionInfo\":\"IrqRJFxm\",\"botVerificationIcon\":\"b32hsSPS\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiBotVerification,\n  ApiChat,\n  ApiCountryCode,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUsername,\n} from '../../../api/types';\nimport type { BotAppPermissions } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectBotAppPermissions,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport CustomEmoji from '../CustomEmoji';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n  isBotCanManageEmojiStatus?: boolean;\n  botAppPermissions?: BotAppPermissions;\n  botVerification?: ApiBotVerification;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst BOT_VERIFICATION_ICON_SIZE = 16;\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n  isBotCanManageEmojiStatus,\n  botAppPermissions,\n  botVerification,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n    toggleUserEmojiStatusPermission,\n    toggleUserLocationPermission,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    if (isTopicInfo) {\n      updateTopicMutedState({\n        chatId: chatId!,\n        topicId: topicId!,\n        isMuted: !isMuted,\n      });\n    } else {\n      updateChatMutedState({ chatId: chatId!, isMuted: !isMuted });\n    }\n  });\n\n  const manageEmojiStatusChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserEmojiStatusPermission({ botId: user.id, isEnabled: !isBotCanManageEmojiStatus });\n  });\n\n  const handleLocationPermissionChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserLocationPermission({ botId: user.id, isAccessGranted: !botAppPermissions?.geolocation });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  if (chat?.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      { hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            size=\"smaller\"\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" narrow ripple onClick={handleNotificationChange}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={!isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n      {userFullInfo && 'isBotAccessEmojiGranted' in userFullInfo && (\n        <ListItem icon=\"user\" narrow ripple onClick={manageEmojiStatusChange}>\n          <span>{oldLang('BotProfilePermissionEmojiStatus')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionEmojiStatus')}\n            checked={isBotCanManageEmojiStatus}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botAppPermissions?.geolocation !== undefined && (\n        <ListItem icon=\"location\" narrow ripple onClick={handleLocationPermissionChange}>\n          <span>{oldLang('BotProfilePermissionLocation')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionLocation')}\n            checked={botAppPermissions?.geolocation}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botVerification && (\n        <div className={styles.botVerificationSection}>\n          <CustomEmoji\n            className={styles.botVerificationIcon}\n            documentId={botVerification.iconId}\n            size={BOT_VERIFICATION_ICON_SIZE}\n          />\n          {botVerification.description}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const botAppPermissions = chatOrUserId ? selectBotAppPermissions(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const botVerification = userFullInfo?.botVerification || chatFullInfo?.botVerification;\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      botAppPermissions,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n      isBotCanManageEmojiStatus: userFullInfo?.isBotCanManageEmojiStatus,\n      botVerification,\n    };\n  },\n)(ChatExtra));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiDraft,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  groupStatefulContent,\n  isUserId,\n  isUserOnline,\n} from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectSender,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n            isSelected={isSelected}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              hasMiniApp={user?.hasMainMiniApp}\n              topics={topics}\n              isSelected={isSelected}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { isOutgoing, forwardInfo } = lastMessage || {};\n    const savedDialogSender = isSavedDialog && forwardInfo?.fromId ? selectPeer(global, forwardInfo.fromId) : undefined;\n    const messageSender = lastMessage ? selectSender(global, lastMessage) : undefined;\n    const lastMessageSender = savedDialogSender || messageSender;\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const userStatus = selectUserStatus(global, chatId);\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    return {\n      chat,\n      isMuted: getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id)),\n      lastMessageSender,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { getServerTime } from '../../../util/serverTime';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  hasMiniApp?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n  isSelected?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n  hasMiniApp,\n  isSelected,\n}) => {\n  const { requestMainWebView } = getActions();\n\n  const oldLang = useOldLang();\n\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => {\n    if (!isForum) {\n      return (topic || chat).unreadCount;\n    }\n\n    return topicsWithUnread?.length;\n  }, [chat, topic, topicsWithUnread, isForum]);\n\n  const shouldBeUnMuted = useMemo(() => {\n    if (!isForum) {\n      return !isMuted || topic?.notifySettings.mutedUntil === 0;\n    }\n\n    if (isMuted) {\n      return topicsWithUnread?.some((acc) => acc.notifySettings.mutedUntil === 0);\n    }\n\n    const isEveryUnreadMuted = topicsWithUnread?.every((acc) => (\n      acc.notifySettings.mutedUntil && acc.notifySettings.mutedUntil > getServerTime()\n    ));\n\n    return !isEveryUnreadMuted;\n  }, [isForum, isMuted, topicsWithUnread, topic?.notifySettings.mutedUntil]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened || hasMiniApp,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    !shouldBeUnMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chat.id,\n      peerId: chat.id,\n      theme,\n    });\n  });\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', !shouldBeUnMuted && 'muted')}>\n        <Icon name=\"heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <Icon name=\"mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', !shouldBeUnMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <Icon name=\"pinned-chat\" />\n      </div>\n    );\n\n    const miniAppButton = hasMiniApp && (\n      <Button\n        color={isSelected ? 'secondary' : 'primary'}\n        className=\"ChatBadge miniapp\"\n        pill\n        size=\"tiny\"\n        onClick={handleOpenApp}\n      >\n        {oldLang('BotOpen')}\n      </Button>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    // Show only if empty or have pinned icon\n    if (hasMiniApp && (elements.length === 0 || visiblePinnedElement)) return miniAppButton;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\nconst ARCHIVE_CUSTOM_PEER: CustomPeer = {\n  isCustomPeer: true,\n  title: 'Archived Chats',\n  avatarIcon: 'archive-filled',\n  customPeerAvatarColor: '#9EAAB5',\n};\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <Icon name=\"archive-filled\" className={styles.icon} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <Avatar peer={ARCHIVE_CUSTOM_PEER} />\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <Icon name=\"settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { groupStatefulContent } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectSender,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport Icon from '../../common/icons/Icon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  lastMessageSender?: ApiPeer;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  isChatMuted,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed, notifySettings,\n  } = topic;\n  const isMuted = Boolean(notifySettings.mutedUntil || (notifySettings.mutedUntil === undefined && isChatMuted));\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    isChatMuted,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {Boolean(notifySettings.mutedUntil) && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <Icon name=\"lock-badge\" className={styles.closedIcon} />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { isOutgoing } = lastMessage || {};\n    const lastMessageSender = lastMessage && selectSender(global, lastMessage);\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    const isChatMuted = chat && getIsChatMuted(\n      chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id),\n    );\n\n    return {\n      chat,\n      lastMessage,\n      lastMessageSender,\n      typingStatus,\n      isChatMuted,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  isChatMuted,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  isChatMuted?: boolean;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, notifySettings, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((isChatMuted && notifySettings.mutedUntil === undefined) || notifySettings.mutedUntil)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, isChatMuted, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n} from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport Icon from '../../../common/icons/Icon';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  lastMessageTopic,\n  lastMessageSender,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const oldLang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? getMessageMediaThumbDataUri(mediaContent) : undefined;\n  const mediaBlobUrl = useMedia(mediaHasPreview ? getMessageMediaHash(mediaContent, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{oldLang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            asPreview: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    const senderName = getMessageSenderName(oldLang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<Icon name=\"share-filled\" className=\"chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<Icon name=\"story-reply\" className=\"chat-prefix-icon\" />)}\n        {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    chat, chatId, draft, isRoundVideo, isTopic, oldLang, lastMessage, lastMessageSender, lastMessageTopic,\n    mediaBlobUrl, mediaThumbnail, observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  getPeerTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getPeerTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID, SVG_NAMESPACE } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport jsxToHtml from '../../../util/element/jsxToHtml';\nimport generateUniqueId from '../../../util/generateUniqueId';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const component = (\n    <svg\n      className={styles.ghost}\n      width={width}\n      height={height}\n      style={`left: ${x}px; top: ${y}px;`}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <defs>\n        {createFilter(filterId, Math.min(width, height), seed)}\n      </defs>\n      <g filter={`url(#${filterId})`}>\n        <foreignObject className={styles.elementContainer} width={width} height={height} />\n      </g>\n    </svg>\n  );\n\n  const svg = jsxToHtml(component)[0] as HTMLElement;\n  const foreignObject = svg.querySelector('foreignObject')!;\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(id: string, smallestSide: number, baseSeed: number = 42) {\n  return (\n    <filter\n      xmlns={SVG_NAMESPACE}\n      id={id}\n      x=\"-150%\"\n      y=\"-150%\"\n      width=\"400%\"\n      height=\"400%\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.5\" numOctaves=\"1\" result=\"dustNoise\" seed={baseSeed} />\n      <feComponentTransfer in=\"dustNoise\" result=\"dustNoiseMask\">\n        <feFuncA type=\"linear\" slope=\"5\" intercept=\"0\">\n          <animate attributeName=\"slope\" values=\"5; 2; 1; 0\" dur={`${DURATION}ms`} fill=\"freeze\" />\n        </feFuncA>\n      </feComponentTransfer>\n      <feComposite in=\"SourceGraphic\" in2=\"dustNoiseMask\" operator=\"in\" result=\"dustySource\" />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"0.015\"\n        numOctaves=\"1\"\n        result=\"displacementNoise1\"\n        seed={baseSeed + 1}\n      />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"1\"\n        numOctaves=\"2\"\n        result=\"displacementNoise2\"\n        seed={baseSeed + 2}\n      />\n      <feMerge result=\"combinedNoise\">\n        <feMergeNode in=\"displacementNoise1\" />\n        <feMergeNode in=\"displacementNoise2\" />\n      </feMerge>\n      <feDisplacementMap in=\"dustySource\" in2=\"combinedNoise\" scale=\"0\" xChannelSelector=\"R\" yChannelSelector=\"G\">\n        <animate attributeName=\"scale\" values={`0; ${smallestSide * 3}`} dur={`${DURATION}ms`} fill=\"freeze\" />\n      </feDisplacementMap>\n    </filter>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { IAnchorPosition, MessageListType, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <Icon name=\"language\" />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <Icon name=\"search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <Icon name=\"phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <Icon name=\"user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <Icon name=\"more\" />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <Icon name={isQuick ? 'photo' : 'document'} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, undefined, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  getIsHeavyAnimating,\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <Icon name=\"lock-badge\" className=\"placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {lang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'composer-action-button mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <Icon name=\"smile\" />\n          <Icon name=\"keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('composer-action-button symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <Icon name=\"smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import React, { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport { filterPeersByQuery } from '../../../../global/helpers/peers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterPeersByQuery({\n      ids: unique([\n        ...((getWithInlineBots() && topInlineBotIds) || []),\n        ...(memberIds || []),\n      ]),\n      query: filter,\n      type: 'user',\n    });\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import {\n  type RefObject,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n} : {\n  ref?: RefObject<RefType | null>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  // eslint-disable-next-line no-null/no-null\n  const localRef = useRef<RefType>(null);\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n    onStateChange?.({\n      height: 0,\n      isOpen: false,\n    });\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <Icon name=\"story-expired\" className={styles.expiredIcon} />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { ApiPaidMedia } from '../../../../api/types';\n\nexport default function getSingularPaidMedia(media?: ApiPaidMedia) {\n  if (!media || media.extendedMedia.length !== 1) {\n    return {\n      photo: undefined,\n      video: undefined,\n    };\n  }\n\n  const singularMedia = media.extendedMedia[0];\n  const isPreview = 'mediaType' in singularMedia;\n  const photo = isPreview ? (!singularMedia.duration ? singularMedia : undefined) : singularMedia.photo;\n  const video = isPreview ? (singularMedia.duration ? singularMedia : undefined) : singularMedia.video;\n\n  return { photo, video };\n}\n","/* eslint-disable no-bitwise */\n// Based on\n// https://github.com/telegramdesktop/tdesktop/blob/dev/Telegram/SourceFiles/ui/grouped_layout.cpp\n// https://github.com/overtake/TelegramSwift/blob/master/Telegram-Mac/GroupedLayout.swift#L83\n\nimport type { ApiDimensions, ApiMessage } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { getMessageContent } from '../../../../global/helpers';\nimport { clamp } from '../../../../util/math';\nimport { getAvailableWidth } from '../../../common/helpers/mediaDimensions';\nimport { calculateMediaDimensions } from './mediaDimensions';\n\nexport const AlbumRectPart = {\n  None: 0,\n  Top: 1,\n  Right: 2,\n  Bottom: 4,\n  Left: 8,\n};\n\ntype IAttempt = {\n  lineCounts: number[];\n  heights: number[];\n};\nexport type IMediaDimensions = {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n};\ntype IMediaLayout = {\n  dimensions: IMediaDimensions;\n  sides: number;\n};\ntype ILayoutParams = {\n  ratios: number[];\n  proportions: string;\n  averageRatio: number;\n  maxWidth: number;\n  minWidth: number;\n  maxHeight: number;\n  spacing: number;\n};\nexport type IAlbumLayout = {\n  layout: IMediaLayout[];\n  containerStyle: ApiDimensions;\n};\n\nfunction getRatios(messages: ApiMessage[], isSingleMessage?: boolean, isMobile?: boolean) {\n  const isOutgoing = messages[0].isOutgoing;\n  const allMedia = (isSingleMessage\n    ? messages[0].content.paidMedia!.extendedMedia.map((media) => (\n      'mediaType' in media ? media : (media.photo || media.video)\n    ))\n    : messages.map((message) => (\n      getMessageContent(message).photo || getMessageContent(message).video\n    ))\n  ).filter(Boolean);\n  return allMedia.map(\n    (media) => {\n      const dimensions = calculateMediaDimensions({\n        media,\n        isOwn: isOutgoing,\n        isMobile,\n      }) as ApiDimensions;\n\n      return dimensions.width / dimensions.height;\n    },\n  );\n}\n\nfunction getProportions(ratios: number[]) {\n  return ratios.map((ratio) => (ratio > 1.2 ? 'w' : (ratio < 0.8 ? 'n' : 'q'))).join('');\n}\n\nfunction getAverageRatio(ratios: number[]) {\n  return ratios.reduce((result, ratio) => ratio + result, 1) / ratios.length;\n}\n\nfunction accumulate(list: number[], initValue: number) {\n  return list.reduce((accumulator, item) => accumulator + item, initValue);\n}\n\nfunction cropRatios(ratios: number[], averageRatio: number) {\n  return ratios.map((ratio) => {\n    return (averageRatio > 1.1 ? clamp(ratio, 1, 2.75) : clamp(ratio, 0.6667, 1));\n  });\n}\n\nfunction calculateContainerSize(layout: IMediaLayout[]) {\n  const styles: ApiDimensions = { width: 0, height: 0 };\n  layout.forEach(({\n    dimensions,\n    sides,\n  }) => {\n    if (sides & AlbumRectPart.Right) {\n      styles.width = dimensions.width + dimensions.x;\n    }\n    if (sides & AlbumRectPart.Bottom) {\n      styles.height = dimensions.height + dimensions.y;\n    }\n  });\n\n  return styles;\n}\n\nexport function calculateAlbumLayout(\n  isOwn: boolean,\n  noAvatars: boolean,\n  album: IAlbum,\n  isMobile?: boolean,\n): IAlbumLayout {\n  const spacing = 2;\n  const ratios = getRatios(album.messages, album.isPaidMedia, isMobile);\n  const proportions = getProportions(ratios);\n  const averageRatio = getAverageRatio(ratios);\n  const albumCount = ratios.length;\n  const forceCalc = ratios.some((ratio) => ratio > 2);\n  const maxWidth = getAvailableWidth(isOwn, false, noAvatars, isMobile);\n  const maxHeight = maxWidth;\n\n  let layout;\n\n  const params = {\n    ratios,\n    proportions,\n    averageRatio,\n    maxWidth,\n    minWidth: 100,\n    maxHeight,\n    spacing,\n  };\n\n  if (albumCount >= 5 || forceCalc) {\n    layout = layoutWithComplexLayouter(params);\n  } else if (albumCount === 2) {\n    layout = layoutTwo(params);\n  } else if (albumCount === 3) {\n    layout = layoutThree(params);\n  } else {\n    layout = layoutFour(params);\n  }\n\n  return {\n    layout,\n    containerStyle: calculateContainerSize(layout),\n  };\n}\n\nfunction layoutWithComplexLayouter({\n  ratios: originalRatios,\n  averageRatio,\n  maxWidth,\n  minWidth,\n  spacing,\n  maxHeight = (4 * maxWidth) / 3,\n}: ILayoutParams) {\n  const ratios = cropRatios(originalRatios, averageRatio);\n  const count = originalRatios.length;\n  const result = new Array(count);\n  const attempts: IAttempt[] = [];\n\n  const multiHeight = (offset: number, attemptCount: number) => {\n    const attemptRatios = ratios.slice(offset, offset + attemptCount);\n    const sum = accumulate(attemptRatios, 0);\n\n    return (maxWidth - (attemptCount - 1) * spacing) / sum;\n  };\n\n  const pushAttempt = (lineCounts: number[]) => {\n    const heights: number[] = [];\n    let offset = 0;\n    lineCounts.forEach((currentCount) => {\n      heights.push(multiHeight(offset, currentCount));\n      offset += currentCount;\n    });\n\n    attempts.push({\n      lineCounts,\n      heights,\n    });\n  };\n\n  for (let first = 1; first !== count; ++first) {\n    const second = count - first;\n    if (first <= 3 && second <= 3) {\n      pushAttempt([first, second]);\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      const third = count - first - second;\n      if (first <= 3 && second <= (averageRatio < 0.85 ? 4 : 3) && third <= 3) {\n        pushAttempt([first, second, third]);\n      }\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      for (let third = 1; third !== count - first - second; ++third) {\n        const fourth = count - first - second - third;\n        if (first <= 3 && second <= 3 && third <= 3 && fourth <= 4) {\n          pushAttempt([first, second, third, fourth]);\n        }\n      }\n    }\n  }\n\n  let optimalAttempt: IAttempt | undefined;\n  let optimalDiff = 0;\n  for (let i = 0; i < attempts.length; i++) {\n    const {\n      heights,\n      lineCounts,\n    } = attempts[i];\n    const lineCount = lineCounts.length;\n    const totalHeight = accumulate(heights, 0) + spacing * (lineCount - 1);\n    const minLineHeight = Math.min(...heights);\n    const bad1 = minLineHeight < minWidth ? 1.5 : 1;\n    const bad2 = (() => {\n      for (let line = 1; line !== lineCount; ++line) {\n        if (lineCounts[line - 1] > lineCounts[line]) {\n          return 1.5;\n        }\n      }\n\n      return 1;\n    })();\n    const diff = Math.abs(totalHeight - maxHeight) * bad1 * bad2;\n\n    if (!optimalAttempt || diff < optimalDiff) {\n      optimalAttempt = attempts[i];\n      optimalDiff = diff;\n    }\n  }\n\n  const optimalCounts = optimalAttempt!.lineCounts;\n  const optimalHeights = optimalAttempt!.heights;\n  const rowCount = optimalCounts.length;\n  let index = 0;\n  let y = 0;\n  for (let row = 0; row !== rowCount; ++row) {\n    const colCount = optimalCounts[row];\n    const lineHeight = optimalHeights[row];\n    const height = Math.round(lineHeight);\n    let x = 0;\n\n    for (let col = 0; col !== colCount; ++col) {\n      const sides = AlbumRectPart.None\n        | (row === 0 ? AlbumRectPart.Top : AlbumRectPart.None)\n        | (row === rowCount - 1 ? AlbumRectPart.Bottom : AlbumRectPart.None)\n        | (col === 0 ? AlbumRectPart.Left : AlbumRectPart.None)\n        | (col === colCount - 1 ? AlbumRectPart.Right : AlbumRectPart.None);\n      const ratio = ratios[index];\n      const width = col === colCount - 1 ? maxWidth - x : Math.round(ratio * lineHeight);\n      result[index] = {\n        dimensions: {\n          x,\n          y,\n          width,\n          height,\n        },\n        sides,\n      };\n      x += width + spacing;\n      ++index;\n    }\n    y += height + spacing;\n  }\n\n  return result;\n}\n\nfunction layoutTwo(params: ILayoutParams) {\n  const {\n    ratios,\n    proportions,\n    averageRatio,\n  } = params;\n  return proportions === 'ww' && averageRatio > 1.4 && ratios[1] - ratios[0] < 0.2\n    ? layoutTwoTopBottom(params)\n    : proportions === 'ww' || proportions === 'qq'\n      ? layoutTwoLeftRightEqual(params)\n      : layoutTwoLeftRight(params);\n}\n\nfunction layoutTwoTopBottom(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const height = Math.round(Math.min(maxWidth / ratios[0], Math.min(maxWidth / ratios[1], (maxHeight - spacing) / 2)));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: height + spacing,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutTwoLeftRightEqual(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const width = (maxWidth - spacing) / 2;\n  const height = Math.round(Math.min(width / ratios[0], Math.min(width / ratios[1], maxHeight)));\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: width + spacing,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutTwoLeftRight(params: ILayoutParams) {\n  const {\n    ratios,\n    minWidth,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const minimalWidth = Math.round(1.5 * minWidth);\n  const secondWidth = Math.min(\n    Math.round(\n      Math.max(\n        0.4 * (maxWidth - spacing),\n        (maxWidth - spacing) / ratios[0] / (1 / ratios[0] + 1 / ratios[1]),\n      ),\n    ),\n    maxWidth - spacing - minimalWidth,\n  );\n  const firstWidth = maxWidth - secondWidth - spacing;\n  const height = Math.min(maxHeight, Math.round(Math.min(firstWidth / ratios[0], secondWidth / ratios[1])));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: firstWidth + spacing,\n      y: 0,\n      width: secondWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutThree(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'n'\n    ? layoutThreeLeftAndOther(params)\n    : layoutThreeTopAndOther(params);\n}\n\nfunction layoutThreeLeftAndOther(params: ILayoutParams) {\n  const {\n    maxHeight,\n    spacing,\n    ratios,\n    maxWidth,\n    minWidth,\n  } = params;\n  const firstHeight = maxHeight;\n  const thirdHeight = Math.round(\n    Math.min(\n      (maxHeight - spacing) / 2,\n      (ratios[1] * (maxWidth - spacing)) / (ratios[2] + ratios[1]),\n    ),\n  );\n  const secondHeight = firstHeight - thirdHeight - spacing;\n  const rightWidth = Math.max(\n    minWidth,\n    Math.round(\n      Math.min(\n        (maxWidth - spacing) / 2,\n        Math.min(\n          thirdHeight * ratios[2],\n          secondHeight * ratios[1],\n        ),\n      ),\n    ),\n  );\n  const leftWidth = Math.min(Math.round(firstHeight * ratios[0]), maxWidth - spacing - rightWidth);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: leftWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: 0,\n      width: rightWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: secondHeight + spacing,\n      width: rightWidth,\n      height: thirdHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutThreeTopAndOther(params: ILayoutParams) {\n  const {\n    maxWidth,\n    ratios,\n    maxHeight,\n    spacing,\n  } = params;\n  const firstWidth = maxWidth;\n  const firstHeight = Math.round(Math.min(firstWidth / ratios[0], 0.66 * (maxHeight - spacing)));\n  const secondWidth = (maxWidth - spacing) / 2;\n  const secondHeight = Math.min(\n    maxHeight - firstHeight - spacing,\n    Math.round(Math.min(\n      secondWidth / ratios[1],\n      secondWidth / ratios[2],\n    )),\n  );\n  const thirdWidth = firstWidth - secondWidth - spacing;\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: firstHeight + spacing,\n      width: secondWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: secondWidth + spacing,\n      y: firstHeight + spacing,\n      width: thirdWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutFour(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'w'\n    ? layoutFourTopAndOther(params)\n    : layoutFourLeftAndOther(params);\n}\n\nfunction layoutFourTopAndOther({\n  maxWidth,\n  ratios,\n  spacing,\n  maxHeight,\n  minWidth,\n}: ILayoutParams) {\n  const w = maxWidth;\n  const h0 = Math.round(Math.min(w / ratios[0], 0.66 * (maxHeight - spacing)));\n  const h = Math.round((maxWidth - 2 * spacing) / (ratios[1] + ratios[2] + ratios[3]));\n  const w0 = Math.max(minWidth, Math.round(Math.min(0.4 * (maxWidth - 2 * spacing), h * ratios[1])));\n  const w2 = Math.round(Math.max(Math.max(minWidth, 0.33 * (maxWidth - 2 * spacing)), h * ratios[3]));\n  const w1 = w - w0 - w2 - 2 * spacing;\n  const h1 = Math.min(maxHeight - h0 - spacing, h);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w,\n      height: h0,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: h0 + spacing,\n      width: w0,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing + w1 + spacing,\n      y: h0 + spacing,\n      width: w2,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutFourLeftAndOther({\n  maxHeight,\n  ratios,\n  maxWidth,\n  spacing,\n  minWidth,\n}: ILayoutParams) {\n  const h = maxHeight;\n  const w0 = Math.round(Math.min(h * ratios[0], 0.6 * (maxWidth - spacing)));\n  const w = Math.round((maxHeight - 2 * spacing) / (1 / ratios[1] + 1 / ratios[2] + 1 / ratios[3]));\n  const h0 = Math.round(w / ratios[1]);\n  const h1 = Math.round(w / ratios[2]);\n  const h2 = h - h0 - h1 - 2 * spacing;\n  const w1 = Math.max(minWidth, Math.min(maxWidth - w0 - spacing, w));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w0,\n      height: h,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: 0,\n      width: w1,\n      height: h0,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + h1 + 2 * spacing,\n      width: w1,\n      height: h2,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n","import type { FastTextApi } from '../lib/fasttextweb/fasttext.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TRANSLATION_SUPPORTED } from './windowEnvironment';\n\nimport Deferred from './Deferred';\nimport { createConnector } from './PostMessageConnector';\n\nconst WORKER_INIT_DELAY = 4000;\n\nconst DEFAULT_THRESHOLD = 0.2;\nconst DEFAULT_LABELS_COUNT = 5;\n\nlet worker: Connector<FastTextApi> | undefined;\nconst initializationDeferred = new Deferred();\n\nif (IS_TRANSLATION_SUPPORTED) {\n  setTimeout(initWorker, WORKER_INIT_DELAY);\n}\n\nfunction initWorker() {\n  if (!worker) {\n    worker = createConnector<FastTextApi>(\n      new Worker(new URL('../lib/fasttextweb/fasttext.worker.ts', import.meta.url)),\n    );\n    initializationDeferred.resolve();\n  }\n}\n\nexport async function detectLanguage(text: string, threshold = DEFAULT_THRESHOLD) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguage', args: [text, threshold] });\n  return result;\n}\n\nexport async function detectLanguageProbability(\n  text: string, labelsCount = DEFAULT_LABELS_COUNT, threshold = DEFAULT_THRESHOLD,\n) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguageProbability', args: [text, labelsCount, threshold] });\n  return result;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport LimitedMap from '../../../../util/primitives/LimitedMap';\nimport { throttle } from '../../../../util/schedulers';\n\n// https://github.com/DrKLO/Telegram/blob/dfd74f809e97d1ecad9672fc7388cb0223a95dfc/TMessagesProj/src/main/java/org/telegram/messenger/TranslateController.java#L35\nconst MIN_MESSAGES_CHECKED = 8;\nconst MIN_TRANSLATABLE_RATIO = 0.3;\nconst MIN_DETECTABLE_RATIO = 0.6;\n\nconst THROTTLE_DELAY = 1000;\nconst MESSAGES_LIMIT = 150;\n\ntype MessageMetadata = {\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage: string | undefined;\n};\n\nconst CHAT_STATS = new Map<string, LimitedMap<number, MessageMetadata>>();\n\nexport default function useDetectChatLanguage(\n  message: ApiMessage, detectedLanguage?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>,\n) {\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    const isTranslatable = Boolean(message.content.text?.text.length);\n    processMessageMetadata(message.chatId, message.id, isTranslatable, detectedLanguage);\n  }, [message, detectedLanguage, isDisabled, getIsReady]);\n}\n\nconst throttledMakeChatDecision = throttle(makeChatDecision, THROTTLE_DELAY);\n\nfunction processMessageMetadata(chatId: string, id: number, isTranslatable: boolean, detectedLanguage?: string) {\n  const chatStats = CHAT_STATS.get(chatId) || new LimitedMap<number, MessageMetadata>(MESSAGES_LIMIT);\n\n  const previousMetadata = chatStats.get(id);\n  if (previousMetadata && previousMetadata.detectedLanguage === detectedLanguage\n    && previousMetadata.isTranslatable === isTranslatable\n  ) {\n    return;\n  }\n\n  chatStats.set(id, {\n    id,\n    isTranslatable,\n    detectedLanguage,\n  });\n\n  CHAT_STATS.set(chatId, chatStats);\n\n  throttledMakeChatDecision(chatId);\n}\n\nfunction makeChatDecision(chatId: string) {\n  const { updateChatDetectedLanguage } = getActions();\n  const chatStats = CHAT_STATS.get(chatId);\n  if (!chatStats) {\n    return;\n  }\n\n  const messagesChecked = chatStats.size;\n  if (messagesChecked < MIN_MESSAGES_CHECKED) {\n    return;\n  }\n\n  let translatableCount = 0;\n  let detectableCount = 0;\n  const languageOccurrences = new Map<string, number>();\n\n  for (const metadata of chatStats.values()) {\n    if (metadata.isTranslatable) {\n      translatableCount++;\n    }\n\n    if (metadata.detectedLanguage) {\n      detectableCount++;\n    }\n\n    const language = metadata.detectedLanguage;\n    if (language) {\n      const occurrences = languageOccurrences.get(language) || 0;\n      languageOccurrences.set(language, occurrences + 1);\n    }\n  }\n\n  const translatableRatio = translatableCount / messagesChecked;\n  const detectableRatio = detectableCount / messagesChecked;\n\n  if (translatableRatio < MIN_TRANSLATABLE_RATIO || detectableRatio < MIN_DETECTABLE_RATIO) {\n    return;\n  }\n\n  const mostFrequentLanguage = Array.from(languageOccurrences.entries())\n    .sort(([, a], [, b]) => b - a)[0][0];\n\n  updateChatDetectedLanguage({\n    chatId,\n    detectedLanguage: mostFrequentLanguage,\n  });\n}\n","import type { RefObject } from 'react';\nimport type React from '../../../../lib/teact/teact';\nimport { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { captureEvents, SwipeDirection } from '../../../../util/captureEvents';\nimport stopEvent from '../../../../util/stopEvent';\nimport { IS_ANDROID, IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport windowSize from '../../../../util/windowSize';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { preventMessageInputBlur } from '../../helpers/preventMessageInputBlur';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\n\nconst ANDROID_KEYBOARD_HIDE_DELAY_MS = 350;\nconst SWIPE_ANIMATION_DURATION = 150;\nconst QUICK_REACTION_DOUBLE_TAP_DELAY = 200;\nconst QUICK_REACTION_AREA_WIDTH = 3 * REM;\nconst QUICK_REACTION_AREA_HEIGHT = Number(REM);\nconst GROUP_MESSAGE_HOVER_ATTRIBUTE = 'data-is-document-group-hover';\n\nexport default function useOuterHandlers(\n  selectMessage: (e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void,\n  containerRef: RefObject<HTMLDivElement>,\n  messageId: number,\n  isInSelectMode: boolean,\n  canReply: boolean,\n  isProtected: boolean,\n  onContextMenu: (e: React.MouseEvent) => void,\n  handleBeforeContextMenu: (e: React.MouseEvent) => void,\n  chatId: string,\n  isContextMenuShown: boolean,\n  quickReactionRef: RefObject<HTMLDivElement>,\n  shouldHandleMouseLeave: boolean,\n  getIsMessageListReady?: Signal<boolean>,\n) {\n  const { updateDraftReplyInfo, sendDefaultReaction } = getActions();\n\n  const [isQuickReactionVisible, markQuickReactionVisible, unmarkQuickReactionVisible] = useFlag();\n  const [isSwiped, markSwiped, unmarkSwiped] = useFlag();\n  const doubleTapTimeoutRef = useRef<NodeJS.Timeout>();\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  }\n\n  const handleMouseMove = useThrottledCallback((e: React.MouseEvent) => {\n    const quickReactionContainer = quickReactionRef.current;\n    if (!quickReactionContainer) return;\n\n    const { clientX, clientY } = e;\n    const {\n      x: quickReactionX, width: quickReactionWidth, y: quickReactionY, height: quickReactionHeight,\n    } = quickReactionContainer.getBoundingClientRect();\n    const x = quickReactionX + quickReactionWidth / 2;\n    const y = quickReactionY + quickReactionHeight / 2;\n\n    const isVisibleX = Math.abs(x - clientX) < QUICK_REACTION_AREA_WIDTH;\n    const isVisibleY = Math.abs(y - clientY) < QUICK_REACTION_AREA_HEIGHT;\n    if (isVisibleX && isVisibleY) {\n      markQuickReactionVisible();\n    } else {\n      unmarkQuickReactionVisible();\n    }\n  }, [quickReactionRef], requestMeasure);\n\n  function handleSendQuickReaction(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleTap(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      const target = e.target as HTMLDivElement;\n      if (!target.classList.contains('text-content') && !target.classList.contains('Message')) {\n        return;\n      }\n\n      if (windowSize.getIsKeyboardVisible()) {\n        setTimeout(() => {\n          onContextMenu(e);\n        }, ANDROID_KEYBOARD_HIDE_DELAY_MS);\n      } else {\n        onContextMenu(e);\n      }\n    }\n  }\n\n  function handleDoubleTap() {\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleClick(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (isInSelectMode) {\n      selectMessage(e);\n      return;\n    }\n\n    if (!IS_TOUCH_ENV) return;\n\n    if (doubleTapTimeoutRef.current) {\n      clearInterval(doubleTapTimeoutRef.current);\n      doubleTapTimeoutRef.current = undefined;\n      handleDoubleTap();\n      return;\n    }\n\n    doubleTapTimeoutRef.current = setTimeout(() => {\n      doubleTapTimeoutRef.current = undefined;\n      handleTap(e);\n    }, QUICK_REACTION_DOUBLE_TAP_DELAY);\n  }\n\n  function handleContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      if ((e.target as HTMLElement).matches('a[href]') || isContextMenuShown) {\n        return;\n      }\n\n      e.preventDefault();\n      selectMessage();\n    } else {\n      onContextMenu(e);\n    }\n  }\n\n  function handleContainerDoubleClick() {\n    if (IS_TOUCH_ENV || !canReply) return;\n\n    updateDraftReplyInfo({ replyToMsgId: messageId, replyToPeerId: undefined, quoteText: undefined });\n  }\n\n  function stopPropagation(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n  }\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV || isInSelectMode || !canReply || isContextMenuShown || !getIsMessageListReady?.()) {\n      return undefined;\n    }\n\n    let startedAt: number | undefined;\n    return captureEvents(containerRef.current!, {\n      selectorToPreventScroll: '.MessageList',\n      excludedClosestSelector: '.no-word-wrap',\n      onSwipe: ((e, direction) => {\n        if (direction === SwipeDirection.Left) {\n          if (!startedAt) {\n            startedAt = Date.now();\n          }\n\n          markSwiped();\n\n          return true;\n        }\n\n        return false;\n      }),\n      onRelease: () => {\n        if (!startedAt || !canReply) {\n          return;\n        }\n\n        updateDraftReplyInfo({ replyToMsgId: messageId });\n\n        setTimeout(unmarkSwiped, Math.max(0, SWIPE_ANIMATION_DURATION - (Date.now() - startedAt)));\n        startedAt = undefined;\n      },\n    });\n  }, [\n    containerRef, isInSelectMode, messageId, markSwiped, unmarkSwiped, canReply, isContextMenuShown,\n    getIsMessageListReady,\n  ]);\n\n  function handleMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n    // Because `mousemove` event is throttled, we need to also throttle `mouseleave` event,\n    // so the order of events is preserved\n    requestMeasure(unmarkQuickReactionVisible);\n    if (shouldHandleMouseLeave) handleDocumentGroupMouseLeave(e);\n  }\n\n  return {\n    handleMouseDown: !isInSelectMode ? handleMouseDown : undefined,\n    handleClick,\n    handleContextMenu: !isInSelectMode ? handleContextMenu : (isProtected ? stopEvent : undefined),\n    handleDoubleClick: !isInSelectMode ? handleContainerDoubleClick : undefined,\n    handleContentDoubleClick: !IS_TOUCH_ENV ? stopPropagation : undefined,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  };\n}\n\nfunction handleDocumentGroupMouseEnter(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.setAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE, '');\n  }\n}\n\nfunction handleDocumentGroupMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.removeAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE);\n  }\n}\n\nfunction getLastElementInDocumentGroup(element: Element) {\n  let current: Element | null = element;\n\n  do {\n    current = current.nextElementSibling;\n  } while (current && !current.classList.contains('last-in-document-group'));\n\n  return current;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport {\n  getPeerTitle,\n  getStoryMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  story?: ApiTypeStory;\n  sender?: ApiPeer;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\n\nconst EmbeddedStory: FC<OwnProps> = ({\n  story,\n  sender,\n  noUserColors,\n  isProtected,\n  observeIntersectionForLoading,\n  onClick,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isFullStory = story && 'content' in story;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const isVideoStory = isFullStory && Boolean(story.content.video);\n  const title = isFullStory ? 'Story' : (isExpiredStory ? 'ExpiredStory' : 'Loading');\n\n  const mediaBlobUrl = useMedia(isFullStory && getStoryMediaHash(story, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = isVideoStory ? story.content.video!.thumbnail?.dataUri : undefined;\n  const pictogramUrl = mediaBlobUrl || mediaThumbnail;\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : undefined;\n  const handleFastClick = useLastCallback(() => {\n    if (story && !isExpiredStory) {\n      onClick();\n    } else {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(handleFastClick);\n\n  return (\n    <PeerColorWrapper\n      ref={ref}\n      peerColor={sender?.color}\n      noUserColors={noUserColors}\n      shouldReset\n      className={buildClassName(\n        'EmbeddedMessage',\n        pictogramUrl && 'with-thumb',\n      )}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {pictogramUrl && renderPictogram(pictogramUrl, isProtected)}\n      <div className=\"message-text with-message-color\">\n        <p className=\"embedded-text-wrapper\">\n          {isExpiredStory && (\n            <Icon name=\"story-expired\" className=\"embedded-origin-icon\" />\n          )}\n          {isFullStory && (\n            <Icon name=\"story-reply\" className=\"embedded-origin-icon\" />\n          )}\n          {lang(title)}\n        </p>\n        <div className=\"message-title\">{renderText(senderTitle || NBSP)}</div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  srcUrl: string,\n  isProtected?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  return (\n    <div className=\"embedded-thumb\">\n      <img\n        src={srcUrl}\n        width={width}\n        height={height}\n        alt=\"\"\n        className=\"pictogram\"\n        draggable={false}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedStory;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getTopicColorCssVariable } from '../../util/forumColors';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\n\nimport styles from './TopicChip.module.scss';\n\nimport blankSrc from '../../assets/blank.png';\n\ntype OwnProps = {\n  topic?: ApiTopic;\n  className?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst TOPIC_ICON_SIZE = 1.125 * REM;\n\nconst TopicChip: FC<OwnProps> = ({\n  topic,\n  className,\n  onClick,\n}) => {\n  const lang = useOldLang();\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={`--topic-button-accent-color: var(${getTopicColorCssVariable(topic?.iconColor)})`}\n      onClick={onClick}\n    >\n      {topic\n        ? <TopicIcon topic={topic} size={TOPIC_ICON_SIZE} />\n        : <img src={blankSrc} alt=\"\" draggable={false} />}\n      {topic?.title ? renderText(topic.title) : lang('Loading')}\n      {topic?.isClosed && <Icon name=\"lock\" />}\n      <Icon name=\"next\" />\n    </div>\n  );\n};\n\nexport default memo(TopicChip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"JldIqqof\"};","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { OwnProps as PhotoProps } from '../Photo';\nimport type { OwnProps as VideoProps } from '../Video';\n\nimport {\n  selectIsInSelectMode,\n  selectIsMessageSelected,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Icon from '../../../common/icons/Icon';\n\ntype OwnProps<T> =\n  (PhotoProps<T> | VideoProps<T>) & {\n    clickArg: number;\n    noSelectControls?: boolean;\n  };\n\ntype StateProps = {\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n};\n\nexport default function withSelectControl(WrappedComponent: FC) {\n  // eslint-disable-next-line @typescript-eslint/comma-dangle\n  const ComponentWithSelectControl = <T,>(props: OwnProps<T> & StateProps) => {\n    const {\n      isInSelectMode,\n      isSelected,\n      dimensions,\n      clickArg,\n    } = props;\n    const { toggleMessageSelection } = getActions();\n\n    const handleMessageSelect = useLastCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n      e.stopPropagation();\n      toggleMessageSelection({ messageId: clickArg, withShift: e?.shiftKey });\n    });\n\n    const newProps = useMemo(() => {\n      const { dimensions: dims, onClick } = props;\n      return {\n        ...props,\n        isInSelectMode,\n        isSelected,\n        dimensions: {\n          ...dims,\n          x: 0,\n          y: 0,\n        },\n        onClick: isInSelectMode ? undefined : onClick,\n      };\n    }, [props, isInSelectMode, isSelected]);\n\n    return (\n      <div\n        className={buildClassName('album-item-select-wrapper', isSelected && 'is-selected')}\n        style={dimensions ? `left: ${dimensions.x}px; top: ${dimensions.y}px;` : ''}\n        onClick={isInSelectMode ? handleMessageSelect : undefined}\n      >\n        {isInSelectMode && (\n          <div className=\"message-select-control\">\n            {isSelected && (\n              <Icon name=\"select\" />\n            )}\n          </div>\n        )}\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n        <WrappedComponent {...newProps} />\n      </div>\n    );\n  };\n\n  return memo(withGlobal<OwnProps<unknown>>(\n    (global, ownProps) => {\n      const { clickArg, noSelectControls } = ownProps;\n      return {\n        isInSelectMode: !noSelectControls && selectIsInSelectMode(global),\n        isSelected: !noSelectControls && selectIsMessageSelected(global, clickArg),\n      };\n    },\n  )(ComponentWithSelectControl)) as typeof ComponentWithSelectControl;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IAlbum, ISettings } from '../../../types';\nimport type { IAlbumLayout } from './helpers/calculateAlbumLayout';\n\nimport {\n  getIsDownloading, getMessageContent, getMessageHtmlId, getMessagePhoto,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectTheme,\n} from '../../../global/selectors';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { AlbumRectPart } from './helpers/calculateAlbumLayout';\nimport withSelectControl from './hocs/withSelectControl';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './Album.scss';\n\nconst PhotoWithSelect = withSelectControl(Photo);\nconst VideoWithSelect = withSelectControl(Video);\n\ntype OwnProps = {\n  album: IAlbum;\n  observeIntersection: ObserveFn;\n  hasCustomAppendix?: boolean;\n  isOwn: boolean;\n  isProtected?: boolean;\n  albumLayout: IAlbumLayout;\n  onMediaClick: (messageId: number, index?: number) => void;\n};\n\ntype StateProps = {\n  theme: ISettings['theme'];\n  uploadsByKey: GlobalState['fileUploads']['byMessageKey'];\n  activeDownloads: TabState['activeDownloads'];\n};\n\nconst Album: FC<OwnProps & StateProps> = ({\n  album,\n  observeIntersection,\n  hasCustomAppendix,\n  isOwn,\n  isProtected,\n  albumLayout,\n  onMediaClick,\n  uploadsByKey,\n  activeDownloads,\n  theme,\n}) => {\n  const { cancelUploadMedia } = getActions();\n\n  const { content: { paidMedia } } = album.mainMessage;\n\n  const mediaCount = album.isPaidMedia ? paidMedia!.extendedMedia.length : album.messages.length;\n\n  const handlePaidMediaClick = useLastCallback((index: number) => {\n    onMediaClick(album.mainMessage.id, index);\n  });\n\n  const handleAlbumMessageClick = useLastCallback((messageId: number) => {\n    onMediaClick(messageId);\n  });\n\n  const handleCancelUpload = useLastCallback((messageId: number) => {\n    cancelUploadMedia({ chatId: album.mainMessage.chatId, messageId });\n  });\n\n  const messages = useMemo(() => {\n    if (album.isPaidMedia) {\n      return album.mainMessage.content.paidMedia!.extendedMedia.map(() => album.mainMessage);\n    }\n\n    return album.messages;\n  }, [album]);\n\n  function renderAlbumMessage(message: ApiMessage, index: number) {\n    const renderingPaidMedia = album.isPaidMedia ? message.content.paidMedia?.extendedMedia[index] : undefined;\n    const paidPhotoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.photo;\n    const paidVideoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.video;\n    const photo = paidPhotoOrPreview || getMessagePhoto(message);\n    const video = paidVideoOrPreview || getMessageContent(message).video;\n\n    const fileUpload = uploadsByKey[getMessageKey(message)];\n    const uploadProgress = fileUpload?.progress;\n    const { dimensions, sides } = albumLayout.layout[index];\n\n    // Ignoring global updates is a known drawback here\n    const canAutoLoad = selectCanAutoLoadMedia(getGlobal(), message);\n    const canAutoPlay = selectCanAutoPlayMedia(getGlobal(), message);\n\n    if (photo) {\n      const shouldAffectAppendix = hasCustomAppendix && (\n        // eslint-disable-next-line no-bitwise\n        (isOwn ? index === mediaCount - 1 : Boolean(sides & AlbumRectPart.Left && sides & AlbumRectPart.Bottom))\n      );\n\n      return (\n        <PhotoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id, album.isPaidMedia ? index : undefined)}`}\n          photo={photo}\n          isOwn={isOwn}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          shouldAffectAppendix={shouldAffectAppendix}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={photo.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, photo)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    } else if (video) {\n      return (\n        <VideoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id)}`}\n          video={video}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          canAutoPlay={canAutoPlay}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={video.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, video)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    }\n\n    return undefined;\n  }\n\n  const { width: containerWidth, height: containerHeight } = albumLayout.containerStyle;\n\n  return (\n    <div\n      className=\"Album\"\n      style={`width: ${containerWidth}px; height: ${containerHeight}px;`}\n    >\n      {messages.map(renderAlbumMessage)}\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const activeDownloads = selectActiveDownloads(global);\n\n    return {\n      theme,\n      uploadsByKey: global.fileUploads.byMessageKey,\n      activeDownloads,\n    };\n  },\n)(Album);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport buildStyle from '../../../util/buildStyle';\nimport safePlay from '../../../util/safePlay';\nimport { IS_ELECTRON } from '../../../util/windowEnvironment';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\n\nconst SIZE = 7 * REM;\nconst INTERACTION_BUNCH_TIME = 1000;\nconst MS_DIVIDER = 1000;\nconst TIME_DEFAULT = 0;\n\nexport default function useAnimatedEmoji(\n  chatId?: string,\n  messageId?: number,\n  soundId?: string,\n  activeEmojiInteractions?: ActiveEmojiInteraction[],\n  isOwn?: boolean,\n  emoji?: string,\n  preferredSize?: number,\n) {\n  const {\n    interactWithAnimatedEmoji, sendEmojiInteraction, sendWatchingEmojiInteraction,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const audioRef = useRef<HTMLAudioElement | undefined>(null);\n\n  const soundMediaData = useMedia(soundId ? `document${soundId}` : undefined, !soundId);\n\n  const size = preferredSize || SIZE;\n  const style = buildStyle(`width: ${size}px`, `height: ${size}px`, emoji && !IS_ELECTRON && 'cursor: pointer');\n\n  const interactions = useRef<number[] | undefined>(undefined);\n  const startedInteractions = useRef<number | undefined>(undefined);\n  const sendInteractionBunch = useLastCallback(() => {\n    const container = ref.current;\n\n    if (!container) return;\n\n    sendEmojiInteraction({\n      chatId: chatId!,\n      messageId: messageId!,\n      emoji: emoji!,\n      interactions: interactions.current!,\n    });\n    startedInteractions.current = undefined;\n    interactions.current = undefined;\n  });\n\n  const play = useLastCallback(() => {\n    const audio = audioRef.current;\n    if (soundMediaData) {\n      if (audio) {\n        audio.pause();\n        audio.remove();\n      }\n      audioRef.current = new Audio();\n      audioRef.current.src = soundMediaData;\n      safePlay(audioRef.current);\n      audioRef.current.addEventListener('ended', () => {\n        audioRef.current = undefined;\n      }, { once: true });\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    play();\n\n    const container = ref.current;\n\n    if (!emoji || !container || !messageId || !chatId) {\n      return;\n    }\n\n    const { x, y } = container.getBoundingClientRect();\n\n    interactWithAnimatedEmoji({\n      emoji: emoji!,\n      x,\n      y,\n      startSize: size,\n      isReversed: !isOwn,\n    });\n\n    if (!interactions.current) {\n      interactions.current = [];\n      startedInteractions.current = performance.now();\n      setTimeout(sendInteractionBunch, INTERACTION_BUNCH_TIME);\n    }\n\n    interactions.current.push(startedInteractions.current\n      ? (performance.now() - startedInteractions.current) / MS_DIVIDER\n      : TIME_DEFAULT);\n  });\n\n  // Set an end anchor for remote activated interaction\n  useEffect(() => {\n    const container = ref.current;\n\n    if (!container || !activeEmojiInteractions) return;\n\n    activeEmojiInteractions.forEach(({\n      id,\n      startSize,\n      messageId: interactionMessageId,\n    }) => {\n      if (startSize || messageId !== interactionMessageId) {\n        return;\n      }\n\n      const { x, y } = container.getBoundingClientRect();\n\n      sendWatchingEmojiInteraction({\n        id,\n        chatId: chatId!,\n        emoticon: emoji!,\n        startSize: size,\n        x,\n        y,\n        isReversed: !isOwn,\n      });\n      play();\n    });\n  }, [activeEmojiInteractions, chatId, emoji, isOwn, messageId, play, sendWatchingEmojiInteraction, size]);\n\n  return {\n    ref,\n    size,\n    style,\n    handleClick,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n  selectCanPlayAnimatedEmojis,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\n\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  customEmojiId: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  observeIntersection?: ObserveFn;\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n  noPlay?: boolean;\n}\n\nconst AnimatedCustomEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  customEmojiId,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n  noPlay,\n  observeIntersection,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(\n    chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji, getCustomEmojiSize(1),\n  );\n\n  return (\n    <CustomEmoji\n      ref={ref}\n      documentId={customEmojiId}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      size={size}\n      isBig\n      noPlay={noPlay}\n      withSharedAnimation\n      forceOnHeavyAnimation={Boolean(effect && activeEmojiInteractions?.length)}\n      observeIntersectionForLoading={observeIntersection}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { customEmojiId, withEffects }) => {\n  const sticker = global.customEmojis.byId[customEmojiId];\n\n  return {\n    sticker,\n    effect: sticker?.emoji && withEffects ? selectAnimatedEmojiEffect(global, sticker.emoji) : undefined,\n    soundId: sticker?.emoji && selectAnimatedEmojiSound(global, sticker.emoji),\n    noPlay: !selectCanPlayAnimatedEmojis(global),\n  };\n})(AnimatedCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmoji,\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\n\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  emoji: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n}\n\nconst QUALITY = 1;\n\nconst AnimatedEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  observeIntersection,\n  forceLoadPreview,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji);\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  return (\n    <AnimatedIconFromSticker\n      sticker={sticker}\n      size={size}\n      quality={QUALITY}\n      noLoad={!isIntersecting}\n      forcePreview={forceLoadPreview}\n      play={isIntersecting}\n      forceAlways\n      ref={ref}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { emoji, withEffects }) => {\n  return {\n    sticker: selectAnimatedEmoji(global, emoji),\n    effect: withEffects ? selectAnimatedEmojiEffect(global, emoji) : undefined,\n    soundId: selectAnimatedEmojiSound(global, emoji),\n  };\n})(AnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiCommentsInfo } from '../../../api/types';\n\nimport { selectPeer } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Spinner from '../../ui/Spinner';\n\nimport './CommentButton.scss';\n\ntype OwnProps = {\n  threadInfo: ApiCommentsInfo;\n  disabled?: boolean;\n  isLoading?: boolean;\n  isCustomShape?: boolean;\n  asActionButton?: boolean;\n};\n\nconst SHOW_LOADER_DELAY = 450;\n\nconst CommentButton: FC<OwnProps> = ({\n  isCustomShape,\n  threadInfo,\n  disabled,\n  isLoading,\n  asActionButton,\n}) => {\n  const { openThread } = getActions();\n\n  const shouldRenderLoading = useAsyncRendering([isLoading], SHOW_LOADER_DELAY);\n\n  const lang = useOldLang();\n  const {\n    originMessageId, chatId, messagesCount, lastMessageId, lastReadInboxMessageId, recentReplierIds, originChannelId,\n  } = threadInfo;\n\n  const handleClick = useLastCallback(() => {\n    openThread({\n      isComments: true, chatId, originMessageId, originChannelId,\n    });\n  });\n\n  const recentRepliers = useMemo(() => {\n    if (!recentReplierIds?.length) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on chats and users, so we avoid them\n    const global = getGlobal();\n\n    return recentReplierIds.map((peerId) => {\n      return selectPeer(global, peerId);\n    }).filter(Boolean);\n  }, [recentReplierIds]);\n\n  if (messagesCount === undefined) {\n    return undefined;\n  }\n\n  function renderRecentRepliers() {\n    return (\n      Boolean(recentRepliers?.length) && (\n        <div className=\"recent-repliers\" dir={lang.isRtl ? 'rtl' : 'ltr'}>\n          {recentRepliers!.map((peer) => (\n            <Avatar\n              key={peer.id}\n              size=\"small\"\n              peer={peer}\n            />\n          ))}\n        </div>\n      )\n    );\n  }\n\n  const hasUnread = Boolean(lastReadInboxMessageId && lastMessageId && lastReadInboxMessageId < lastMessageId);\n\n  const commentsText = messagesCount ? (lang('CommentsCount', '%COMMENTS_COUNT%', undefined, messagesCount) as string)\n    .split('%')\n    .map((s) => {\n      return (s === 'COMMENTS_COUNT' ? <AnimatedCounter text={formatIntegerCompact(messagesCount)} /> : s);\n    })\n    : undefined;\n\n  return (\n    <div\n      data-cnt={formatIntegerCompact(messagesCount)}\n      className={buildClassName(\n        'CommentButton',\n        hasUnread && 'has-unread',\n        disabled && 'disabled',\n        isCustomShape && 'CommentButton-custom-shape',\n        isLoading && 'loading',\n        asActionButton && 'as-action-button',\n      )}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n      onClick={handleClick}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <Icon\n        name=\"comments-sticker\"\n        className={buildClassName(\n          'CommentButton_icon-comments',\n          isLoading && shouldRenderLoading && 'CommentButton_hidden',\n        )}\n      />\n      {!recentRepliers?.length && <Icon name=\"comments\" />}\n      {renderRecentRepliers()}\n      <div className=\"label\" dir=\"auto\">\n        {messagesCount ? commentsText : lang('LeaveAComment')}\n      </div>\n      <div className=\"CommentButton_right\">\n        {isLoading && (\n          <Spinner\n            className={buildClassName(\n              'CommentButton_loading',\n              !shouldRenderLoading && 'CommentButton_hidden',\n            )}\n            color={isCustomShape ? 'white' : 'blue'}\n          />\n        ) }\n        <Icon\n          name=\"next\"\n          className={buildClassName(\n            'CommentButton_icon-open',\n            isLoading && shouldRenderLoading && 'CommentButton_hidden',\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(CommentButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AAHWWWvU\",\"info-container\":\"tpDpg82n\",\"infoContainer\":\"tpDpg82n\",\"info\":\"fpYynE5s\",\"name\":\"_PNTJc_V\",\"phone\":\"JP_3wes8\",\"divider\":\"_OSJcuqH\",\"buttons\":\"Blui4M4G\",\"button\":\"ReDHhQHm\",\"disabled\":\"XAeKpuIZ\",\"emoji-icon-background\":\"SjZYi3sJ\",\"emojiIconBackground\":\"SjZYi3sJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiContact, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { getCanAddContact, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\n\nimport styles from './Contact.module.scss';\n\ntype OwnProps = {\n  contact: ApiContact;\n  noUserColors?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst UNREGISTERED_CONTACT_ID = '0';\n\nconst Contact: FC<OwnProps & StateProps> = ({\n  contact, user, phoneCodeList, noUserColors,\n}) => {\n  const lang = useOldLang();\n  const {\n    openChat, openAddContactDialog, showNotification, openChatWithInfo,\n  } = getActions();\n\n  const { phoneNumber, userId } = contact;\n  const isRegistered = userId !== UNREGISTERED_CONTACT_ID;\n  const canAddContact = isRegistered && user && getCanAddContact(user);\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: userId });\n  });\n\n  const handleAddContact = useLastCallback(() => {\n    openAddContactDialog({ userId: user?.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (user) {\n      openChatWithInfo({ id: userId });\n    } else {\n      copyTextToClipboard(phoneNumber);\n      showNotification({ message: lang('PhoneCopied') });\n    }\n  });\n\n  return (\n    <PeerColorWrapper\n      noUserColors={noUserColors}\n      peer={user}\n      emojiIconClassName={styles.emojiIconBackground}\n      className={styles.root}\n    >\n      <div className={styles.infoContainer} onClick={handleClick}>\n        <Avatar size=\"medium\" peer={user} text={getContactName(contact)} />\n        <div className={styles.info}>\n          <div className={styles.name}>\n            {user ? getUserFullName(user) : getContactName(contact)}\n          </div>\n          <div className={styles.phone}>\n            {formatPhoneNumberWithCode(phoneCodeList, phoneNumber)}\n          </div>\n        </div>\n      </div>\n      {isRegistered && (\n        <>\n          <div className={styles.divider} />\n          <div className={styles.buttons}>\n            <Button\n              isText\n              color=\"translucent\"\n              ripple\n              size=\"tiny\"\n              onClick={handleOpenChat}\n              className={styles.button}\n            >\n              {lang('SharedContactMessage')}\n            </Button>\n            {canAddContact && (\n              <Button\n                isText\n                color=\"translucent\"\n                ripple\n                size=\"tiny\"\n                onClick={handleAddContact}\n                className={styles.button}\n              >\n                {lang('SharedContactAdd')}\n              </Button>\n            )}\n          </div>\n        </>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nfunction getContactName(contact: ApiContact) {\n  if (contact.firstName && contact.lastName) {\n    return `${contact.firstName} ${contact.lastName}`;\n  }\n\n  if (contact.firstName) {\n    return contact.firstName;\n  }\n\n  if (contact.lastName) {\n    return contact.lastName;\n  }\n\n  return '';\n}\n\nexport default withGlobal<OwnProps>((global, { contact }): StateProps => {\n  const {\n    countryList: { phoneCodes: phoneCodeList },\n  } = global;\n  const user = selectUser(global, contact.userId);\n\n  return {\n    user,\n    phoneCodeList,\n  };\n})(Contact);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HMB5LgeX\",\"title\":\"vZnCPl3t\",\"content\":\"k_dGolcu\",\"separator\":\"qRaSs5iA\",\"footnote\":\"EDmr0wJG\",\"collapsed\":\"hYzpXwTM\",\"cutoutWrapper\":\"nfCzKu78\",\"collapseIcon\":\"mxPizZpR\",\"clickable\":\"Cj2cLczd\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiFactCheck } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useCollapsibleLines from '../../../hooks/element/useCollapsibleLines';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Separator from '../../ui/Separator';\n\nimport styles from './FactCheck.module.scss';\n\ntype OwnProps = {\n  factCheck: ApiFactCheck;\n  isToggleDisabled?: boolean;\n};\n\nconst COLOR = {\n  color: 0,\n};\nconst MAX_LINES = 4;\n\nconst FactCheck = ({ factCheck, isToggleDisabled }: OwnProps) => {\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cutoutRef = useRef<HTMLDivElement>(null);\n  const {\n    isCollapsed, isCollapsible, setIsCollapsed,\n  } = useCollapsibleLines(ref, MAX_LINES, cutoutRef);\n\n  const countryLocalized = useMemo(() => {\n    if (!factCheck.countryCode || !lang.code) return undefined;\n\n    const displayNames = new Intl.DisplayNames([lang.code], { type: 'region' });\n    return displayNames.of(factCheck.countryCode);\n  }, [factCheck.countryCode, lang.code]);\n\n  const canExpand = !isToggleDisabled && isCollapsed;\n\n  const handleExpand = useLastCallback(() => {\n    setIsCollapsed(false);\n  });\n\n  const handleToggle = useLastCallback(() => {\n    setIsCollapsed((prev) => !prev);\n  });\n\n  if (!factCheck.text) {\n    return undefined;\n  }\n\n  return (\n    <PeerColorWrapper peerColor={COLOR} className={styles.root} onClick={canExpand ? handleExpand : undefined}>\n      <div\n        ref={cutoutRef}\n        className={buildClassName(styles.cutoutWrapper, isCollapsed && styles.collapsed)}\n      >\n        <div className={styles.title}>{lang('FactCheck')}</div>\n        <div ref={ref} className={styles.content}>\n          {renderTextWithEntities({\n            text: factCheck.text.text,\n            entities: factCheck.text.entities,\n          })}\n        </div>\n        <Separator className={styles.separator} />\n        <div className={styles.footnote}>{lang('FactCheckFooter', countryLocalized)}</div>\n      </div>\n      {isCollapsible && (\n        <div\n          className={buildClassName(styles.collapseIcon, !isToggleDisabled && styles.clickable)}\n          onClick={!isToggleDisabled ? handleToggle : undefined}\n          aria-hidden\n        >\n          <Icon name={isCollapsed ? 'down' : 'up'} />\n        </div>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(FactCheck);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getGamePreviewPhotoHash, getGamePreviewVideoHash, getMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Game.scss';\n\nconst DEFAULT_PREVIEW_DIMENSIONS = {\n  width: 480,\n  height: 270,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  canAutoLoadMedia?: boolean;\n};\n\nconst Game: FC<OwnProps> = ({\n  message,\n  canAutoLoadMedia,\n}) => {\n  const { clickBotInlineButton } = getActions();\n  const game = message.content.game!;\n  const {\n    title, description,\n  } = game;\n\n  const photoHash = getGamePreviewPhotoHash(game);\n  const videoHash = getGamePreviewVideoHash(game);\n  const photoBlobUrl = useMedia(photoHash, !canAutoLoadMedia);\n  const videoBlobUrl = useMedia(videoHash, !canAutoLoadMedia);\n\n  const handleGameClick = () => {\n    clickBotInlineButton({\n      chatId: message.chatId,\n      messageId: message.id,\n      button: message.inlineButtons![0][0],\n    });\n  };\n\n  return (\n    <div className=\"Game\">\n      <div\n        className=\"preview\"\n        style={`width: ${DEFAULT_PREVIEW_DIMENSIONS.width}px; height: ${DEFAULT_PREVIEW_DIMENSIONS.height}px`}\n        onClick={handleGameClick}\n      >\n        {!photoBlobUrl && !videoBlobUrl && (\n          <Skeleton className=\"skeleton preview-content\" />\n        )}\n        {photoBlobUrl && (\n          <img\n            className=\"preview-content\"\n            src={photoBlobUrl}\n            alt={title}\n            draggable={false}\n          />\n        )}\n        {videoBlobUrl && (\n          <video\n            className=\"preview-content\"\n            playsInline\n            muted\n            disablePictureInPicture\n            autoPlay\n            loop\n            src={videoBlobUrl}\n          />\n        )}\n      </div>\n      <div className=\"title\">{title}</div>\n      {!getMessageText(message) && <div className=\"description\">{description}</div>}\n    </div>\n  );\n};\n\nexport default memo(Game);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CbpKtOey\",\"title\":\"ogvcv3mr\",\"sticker\":\"hjjKhvVv\",\"resultSticker\":\"JEiR48jJ\",\"count\":\"n_QCMv_A\",\"section\":\"MSFa9BPf\",\"description\":\"HfZ6SuLI\",\"peers\":\"rPyyNYxK\",\"peer\":\"FV70u896\",\"button\":\"jMBw7STU\",\"result\":\"ZQ4aVVkI\",\"separator\":\"ao0x1YnS\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiGiveaway, ApiGiveawayInfo, ApiGiveawayResults, ApiMessage, ApiPeer, ApiSticker,\n} from '../../../api/types';\n\nimport {\n  getChatTitle, getUserFullName, isOwnMessage,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectForwardedSender,\n  selectGiftStickerForDuration,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateAtTime, formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { isoToEmoji } from '../../../util/emoji/emoji';\nimport { getServerTime } from '../../../util/serverTime';\nimport { callApi } from '../../../api/gramjs';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Separator from '../../ui/Separator';\n\nimport styles from './Giveaway.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  sender?: ApiPeer;\n  giftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst NBSP = '\\u00A0';\nconst GIFT_STICKER_SIZE = 175;\nconst RESULT_STICKER_SIZE = 150;\n\nconst Giveaway = ({\n  chat,\n  sender,\n  message,\n  canPlayAnimatedEmojis,\n  giftSticker,\n}: OwnProps & StateProps) => {\n  const { openChat } = getActions();\n\n  const isLoadingInfo = useRef(false);\n  const [giveawayInfo, setGiveawayInfo] = useState<ApiGiveawayInfo | undefined>();\n\n  const lang = useOldLang();\n  const { giveaway, giveawayResults } = message.content;\n  const isResults = Boolean(giveawayResults);\n  const {\n    months, untilDate, prizeDescription, stars,\n  } = (giveaway || giveawayResults)!;\n\n  const isOwn = isOwnMessage(message);\n\n  const quantity = isResults ? giveawayResults.winnersCount : giveaway!.quantity;\n\n  const hasEnded = getServerTime() > untilDate;\n\n  const countryList = useMemo(() => {\n    if (isResults) return undefined;\n    const translatedNames = new Intl.DisplayNames([lang.code!, 'en'].filter(Boolean), { type: 'region' });\n    return giveaway?.countries?.map((countryCode) => (\n      `${isoToEmoji(countryCode)}${NBSP}${translatedNames.of(countryCode)}`\n    )).join(', ');\n  }, [giveaway, isResults, lang.code]);\n\n  const handlePeerClick = useLastCallback((channelId: string) => {\n    openChat({ id: channelId });\n  });\n\n  const handleShowInfoClick = useLastCallback(async () => {\n    if (isLoadingInfo.current) return;\n\n    isLoadingInfo.current = true;\n    const result = await callApi('fetchGiveawayInfo', {\n      peer: chat,\n      messageId: message.id,\n    });\n    setGiveawayInfo(result);\n    isLoadingInfo.current = false;\n  });\n\n  const handleCloseInfo = useLastCallback(() => {\n    setGiveawayInfo(undefined);\n  });\n\n  const giveawayInfoTitle = useMemo(() => {\n    if (!giveawayInfo) return undefined;\n    return lang(giveawayInfo.type === 'results' ? 'BoostingGiveawayEnd' : 'BoostingGiveAwayAbout');\n  }, [giveawayInfo, lang]);\n\n  function renderGiveawayDescription(media: ApiGiveaway) {\n    const channelIds = media.channelIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayPrizes'), ['simple_markdown'])}\n          </strong>\n          {prizeDescription && (\n            <>\n              <p className={styles.description}>\n                {renderText(\n                  lang('BoostingGiveawayMsgPrizes', [quantity, prizeDescription], undefined, quantity),\n                  ['simple_markdown'],\n                )}\n              </p>\n              <Separator>{lang('BoostingGiveawayMsgWithDivider')}</Separator>\n            </>\n          )}\n          <p className={styles.description}>\n            {message?.content?.giveaway?.stars ? (\n              <>\n                {renderText(\n                  lang('Chat.Giveaway.Message.Stars.PrizeText', lang('Stars', message?.content?.giveaway?.stars)),\n                  ['simple_markdown'],\n                )}\n                <br />\n                {renderText(lang('AmongWinners', quantity), ['simple_markdown'])}\n              </>\n            ) : (\n              <>\n                {renderText(lang('Chat.Giveaway.Info.Subscriptions', quantity), ['simple_markdown'])}\n                <br />\n                {renderText(lang(\n                  'ActionGiftPremiumSubtitle',\n                  lang('Chat.Giveaway.Info.Months', months),\n                ), ['simple_markdown'])}\n              </>\n            )}\n          </p>\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayMsgParticipants'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayMsgAllSubsPlural', channelIds.length), ['simple_markdown'])}\n          </p>\n          <div className={styles.peers}>\n            {channelIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n          {countryList && (\n            <span>{renderText(lang('Chat.Giveaway.Message.CountriesFrom', countryList))}</span>\n          )}\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingWinnersDate'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {formatDateTimeToString(untilDate * 1000, lang.code, true)}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayResultsDescription(media: ApiGiveawayResults) {\n    const winnerIds = media.winnerIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersSelected'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersTitle', winnerIds.length), ['simple_markdown'])}\n          </p>\n          <strong className={styles.title}>\n            {lang('lng_prizes_results_winners')}\n          </strong>\n          <div className={styles.peers}>\n            {winnerIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <p className={styles.description}>\n            {lang('BoostingGiveawayResultsMsgAllWinnersReceivedLinks')}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayInfo() {\n    if (!sender || !giveawayInfo) return undefined;\n    const isResultsInfo = giveawayInfo.type === 'results';\n\n    const chatTitle = isApiPeerChat(sender) ? getChatTitle(lang, sender) : getUserFullName(sender);\n    const endDate = formatDateAtTime(lang, untilDate * 1000);\n    const otherChannelsCount = giveaway?.channelIds ? giveaway.channelIds.length - 1 : 0;\n    const otherChannelsString = lang('Chat.Giveaway.Info.OtherChannels', otherChannelsCount);\n    const isSeveral = otherChannelsCount > 0;\n\n    const firstKey = isResultsInfo ? 'BoostingGiveawayHowItWorksTextEnd' : 'BoostingGiveawayHowItWorksText';\n    const giveawayDuration = isResultsInfo ? lang('Chat.Giveaway.Info.Months', months) : lang('Stars', stars, 'i');\n    const firstParagraph = lang(firstKey, [chatTitle, quantity, giveawayDuration], undefined, quantity);\n\n    const additionalPrizes = prizeDescription\n      ? lang('BoostingGiveawayHowItWorksIncludeText', [chatTitle, quantity, prizeDescription], undefined, quantity)\n      : undefined;\n\n    let secondKey = '';\n    if (isResultsInfo) {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveralEnd' : 'BoostingGiveawayHowItWorksSubTextEnd';\n    } else {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveral' : 'BoostingGiveawayHowItWorksSubText';\n    }\n    let secondParagraph = lang(secondKey, [endDate, quantity, chatTitle, otherChannelsCount], undefined, quantity);\n    if (isResultsInfo && giveawayInfo.activatedCount) {\n      secondParagraph += ` ${lang('BoostingGiveawayUsedLinksPlural', giveawayInfo.activatedCount)}`;\n    }\n\n    let result = '';\n\n    if (isResultsInfo) {\n      if (giveawayInfo.isRefunded) {\n        result = lang('BoostingGiveawayCanceledByPayment');\n      } else {\n        result = lang(giveawayInfo.isWinner ? 'BoostingGiveawayYouWon' : 'BoostingGiveawayYouNotWon');\n      }\n    }\n\n    let lastParagraph = '';\n    if (isResultsInfo) {\n      // Nothing\n    } else if (giveawayInfo.disallowedCountry) {\n      lastParagraph = lang('BoostingGiveawayNotEligibleCountry');\n    } else if (giveawayInfo.adminDisallowedChatId) {\n      // Since rerenders are not expected, we can use the global state directly\n      const chatsById = getGlobal().chats.byId;\n      const disallowedChat = chatsById[giveawayInfo.adminDisallowedChatId];\n      const disallowedChatTitle = disallowedChat && getChatTitle(lang, disallowedChat);\n      lastParagraph = lang('BoostingGiveawayNotEligibleAdmin', disallowedChatTitle);\n    } else if (giveawayInfo.joinedTooEarlyDate) {\n      const joinedTooEarlyDate = formatDateAtTime(lang, giveawayInfo.joinedTooEarlyDate * 1000);\n      lastParagraph = lang('BoostingGiveawayNotEligible', joinedTooEarlyDate);\n    } else if (giveawayInfo.isParticipating) {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.ParticipatingMany', [chatTitle, otherChannelsCount])\n        : lang('Chat.Giveaway.Info.Participating', chatTitle);\n    } else {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.NotQualifiedMany', [chatTitle, otherChannelsString, endDate])\n        : lang('Chat.Giveaway.Info.NotQualified', [chatTitle, endDate]);\n    }\n\n    return (\n      <>\n        {result && (\n          <p className={styles.result}>\n            {renderText(result, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(firstParagraph, ['simple_markdown'])}\n        </p>\n        {additionalPrizes && (\n          <p>\n            {renderText(additionalPrizes, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(secondParagraph, ['simple_markdown'])}\n        </p>\n        {lastParagraph && (\n          <p>\n            {renderText(lastParagraph, ['simple_markdown'])}\n          </p>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.sticker, isResults && styles.resultSticker)}>\n        {isResults ? (\n          <AnimatedIconWithPreview\n            size={RESULT_STICKER_SIZE}\n            tgsUrl={LOCAL_TGS_URLS.PartyPopper}\n            nonInteractive\n            noLoop\n          />\n        ) : (\n          <AnimatedIconFromSticker\n            sticker={giftSticker}\n            play={canPlayAnimatedEmojis && hasEnded}\n            noLoop\n            nonInteractive\n            size={GIFT_STICKER_SIZE}\n          />\n        )}\n        <span className={styles.count}>\n          {`x${quantity}`}\n        </span>\n      </div>\n      {isResults ? renderGiveawayResultsDescription(giveawayResults) : renderGiveawayDescription(giveaway!)}\n      <Button\n        className={styles.button}\n        color=\"adaptive\"\n        size=\"smaller\"\n        onClick={handleShowInfoClick}\n      >\n        {lang('BoostingHowItWork')}\n      </Button>\n      <ConfirmDialog\n        isOpen={Boolean(giveawayInfo)}\n        isOnlyConfirm\n        title={giveawayInfoTitle}\n        confirmHandler={handleCloseInfo}\n        onClose={handleCloseInfo}\n      >\n        {renderGiveawayInfo()}\n      </ConfirmDialog>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message }): StateProps => {\n    const { giveaway } = message.content;\n    const chat = selectChat(global, message.chatId)!;\n    const sender = selectChat(global, giveaway?.channelIds[0]!)\n      || selectForwardedSender(global, message) || chat;\n\n    const sticker = giveaway && selectGiftStickerForDuration(global, giveaway.months);\n\n    return {\n      chat,\n      sender,\n      giftSticker: sticker,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(Giveaway));\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton, ApiMessage } from '../../../api/types';\nimport type { ActionPayloads } from '../../../global/types';\n\nimport { RE_TME_LINK } from '../../../config';\nimport renderKeyboardButtonText from '../composer/helpers/renderKeyboardButtonText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport './InlineButtons.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  onClick: (payload: ActionPayloads['clickBotInlineButton']) => void;\n};\n\nconst InlineButtons: FC<OwnProps> = ({ message, onClick }) => {\n  const lang = useOldLang();\n\n  const renderIcon = (button: ApiKeyboardButton) => {\n    const { type } = button;\n    switch (type) {\n      case 'url': {\n        if (!RE_TME_LINK.test(button.url)) {\n          return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n        }\n        break;\n      }\n      case 'urlAuth':\n        return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n      case 'buy':\n      case 'receipt':\n        return <Icon className=\"corner-icon\" name=\"card\" />;\n      case 'switchBotInline':\n        return <Icon className=\"corner-icon\" name=\"share-filled\" />;\n      case 'webView':\n      case 'simpleWebView':\n        return <Icon className=\"corner-icon\" name=\"webapp\" />;\n      case 'copy':\n        return <Icon className=\"corner-icon\" name=\"copy\" />;\n    }\n    return undefined;\n  };\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message.inlineButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n    return texts;\n  }, [lang, message.inlineButtons]);\n\n  return (\n    <div className=\"InlineButtons\">\n      {message.inlineButtons!.map((row, i) => (\n        <div className=\"row\">\n          {row.map((button, j) => (\n            <Button\n              size=\"tiny\"\n              ripple\n              disabled={button.type === 'unsupported'}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onClick({ chatId: message.chatId, messageId: message.id, button })}\n            >\n              <span className=\"inline-button-text\">\n                {buttonTexts[i][j]}\n              </span>\n              {renderIcon(button)}\n            </Button>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(InlineButtons);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageInvoice, getWebDocumentHash } from '../../../global/helpers';\nimport buildStyle from '../../../util/buildStyle';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\n\nimport useLang from '../../../hooks/useLang';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Invoice.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldAffectAppendix?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ISettings['theme'];\n  forcedWidth?: number;\n};\n\nconst Invoice: FC<OwnProps> = ({\n  message,\n  shouldAffectAppendix,\n  isInSelectMode,\n  isSelected,\n  theme,\n  forcedWidth,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const invoice = getMessageInvoice(message);\n\n  const {\n    title,\n    description,\n    amount,\n    currency,\n    isTest,\n    photo,\n  } = invoice!;\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n  const withBlurredBackground = Boolean(forcedWidth);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photoUrl, !withBlurredBackground);\n  const messageId = message.id;\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    if (photoUrl) {\n      const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n      getCustomAppendixBg(photoUrl, false, messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    }\n  }, [shouldAffectAppendix, photoUrl, isInSelectMode, isSelected, theme, messageId]);\n\n  const width = forcedWidth || photo?.dimensions?.width;\n\n  const style = buildStyle(\n    photo?.dimensions && `width: ${width}px`,\n    photo?.dimensions && `aspect-ratio: ${photo.dimensions.width} / ${photo.dimensions.height}`,\n    Boolean(!photo?.dimensions && forcedWidth) && `width: ${forcedWidth}px`,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className=\"Invoice\"\n    >\n      {title && (\n        <p className=\"title\">{renderText(title)}</p>\n      )}\n      {description && (\n        <div className=\"info\">{renderText(description, ['emoji', 'br'])}</div>\n      )}\n      <div className={`description ${photo ? 'has-image' : ''}`}>\n        {Boolean(photo) && (\n          <div className=\"invoice-image-container\">\n            {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n            {photoUrl && (\n              <img\n                className=\"invoice-image\"\n                src={photoUrl}\n                alt=\"\"\n                style={style}\n                crossOrigin=\"anonymous\"\n                draggable={false}\n              />\n            )}\n            {!photoUrl && photo && (\n              <Skeleton\n                width={width}\n                height={photo.dimensions?.height}\n                forceAspectRatio\n              />\n            )}\n          </div>\n        )}\n        <p className=\"description-text\">\n          {formatCurrency(lang, amount, currency, { iconClassName: 'invoice-currency-icon' })}\n          {isTest && <span className=\"test-invoice\">{oldLang('PaymentTestInvoice')}</span>}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Invoice);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dCK8GQ_8\",\"duration\":\"CWT8ZMwV\",\"buy\":\"C38zhCDM\",\"spoiler\":\"CG55VZP1\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getMessageInvoice } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './InvoiceMediaPreview.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  isConnected: boolean;\n};\n\nconst POLLING_INTERVAL = 30000;\n\nconst InvoiceMediaPreview: FC<OwnProps> = ({\n  message,\n  isConnected,\n}) => {\n  const { openInvoice, loadExtendedMedia } = getActions();\n  const lang = useOldLang();\n  const invoice = getMessageInvoice(message);\n\n  const { chatId, id } = message;\n\n  const refreshExtendedMedia = useLastCallback(() => {\n    loadExtendedMedia({ chatId, ids: [id] });\n  });\n\n  useInterval(refreshExtendedMedia, isConnected ? POLLING_INTERVAL : undefined);\n\n  const {\n    amount,\n    currency,\n    extendedMedia,\n  } = invoice!;\n\n  const {\n    width, height, thumbnail, duration,\n  } = extendedMedia!;\n\n  const handleClick = useLastCallback(() => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId: id,\n      isExtendedMedia: true,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, 'media-inner')}\n      onClick={handleClick}\n    >\n      <MediaSpoiler\n        thumbDataUri={thumbnail?.dataUri}\n        width={width}\n        height={height}\n        isVisible\n        className={styles.spoiler}\n      />\n      {Boolean(duration) && <div className={styles.duration}>{formatMediaDuration(duration)}</div>}\n      <div className={styles.buy}>\n        <Icon name=\"lock\" className={styles.lock} />\n        {lang('Checkout.PayPrice', formatCurrencyAsString(amount, currency))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(InvoiceMediaPreview);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  buildStaticMapHash,\n  getMessageLocation,\n  isGeoLiveExpired,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCountdownShort, formatLastUpdated } from '../../../util/dates/dateFormat';\nimport {\n  getMetersPerPixel, getVenueColor, getVenueIconUrl,\n} from '../../../util/map';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../common/Avatar';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Location.scss';\n\nimport mapPin from '../../../assets/map-pin.svg';\n\nconst TIMER_RADIUS = 12;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst MOVE_THRESHOLD = 0.0001; // ~11m\nconst DEFAULT_MAP_CONFIG = {\n  width: 400,\n  height: 300,\n  zoom: 16,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  peer?: ApiPeer;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ISettings['theme'];\n};\n\nconst Location: FC<OwnProps> = ({\n  message,\n  peer,\n}) => {\n  const { openMapModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const countdownRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  const location = getMessageLocation(message)!;\n  const { mediaType, geo } = location;\n\n  const serverTime = getServerTime();\n  const isExpired = isGeoLiveExpired(message);\n  const secondsBeforeEnd = (mediaType === 'geoLive' && !isExpired) ? message.date + location.period - serverTime\n    : undefined;\n\n  const [point, setPoint] = useState(geo);\n\n  const shouldRenderText = mediaType === 'venue' || (mediaType === 'geoLive' && !isExpired);\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n\n  const mediaHash = buildStaticMapHash(point, width, height, zoom, dpr);\n  const mediaBlobUrl = useMedia(mediaHash);\n  const prevMediaBlobUrl = usePreviousDeprecated(mediaBlobUrl, true);\n  const mapBlobUrl = mediaBlobUrl || prevMediaBlobUrl;\n\n  const accuracyRadiusPx = useMemo(() => {\n    if (mediaType !== 'geoLive' || !point.accuracyRadius) {\n      return 0;\n    }\n\n    const { lat, accuracyRadius } = point;\n    return accuracyRadius / getMetersPerPixel(lat, zoom);\n  }, [mediaType, point, zoom]);\n\n  const handleClick = () => {\n    openMapModal({ geoPoint: point, zoom });\n  };\n\n  const updateCountdown = useLastCallback((countdownEl: HTMLDivElement) => {\n    if (mediaType !== 'geoLive') return;\n    const svgEl = countdownEl.lastElementChild!;\n    const timerEl = countdownEl.firstElementChild!;\n\n    const timeLeft = message.date + location.period - getServerTime();\n    const strokeDashOffset = (1 - timeLeft / location.period) * TIMER_CIRCUMFERENCE;\n    const text = formatCountdownShort(lang, timeLeft * 1000);\n    timerEl.textContent = text;\n    svgEl.firstElementChild!.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  });\n\n  useLayoutEffect(() => {\n    if (countdownRef.current) {\n      updateCountdown(countdownRef.current);\n    }\n  }, [updateCountdown]);\n\n  useEffect(() => {\n    // Prevent map refetching for slight location changes\n    if (Math.abs(geo.lat - point.lat) < MOVE_THRESHOLD && Math.abs(geo.long - point.long) < MOVE_THRESHOLD) {\n      if (point.accuracyRadius !== geo.accuracyRadius) {\n        setPoint({\n          ...point,\n          accuracyRadius: geo.accuracyRadius,\n        });\n      }\n      return;\n    }\n    setPoint(geo);\n  }, [geo, point]);\n\n  useTimeout(() => {\n    forceUpdate();\n  }, !isExpired ? (secondsBeforeEnd || 0) * 1000 : undefined);\n\n  useInterval(() => {\n    requestMutation(() => {\n      const countdownEl = countdownRef.current;\n      if (countdownEl) {\n        updateCountdown(countdownEl);\n      }\n    });\n  }, secondsBeforeEnd ? 1000 : undefined);\n\n  function renderInfo() {\n    if (!shouldRenderText) return undefined;\n    if (mediaType === 'venue') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">\n            {location.title}\n          </div>\n          <div className=\"location-info-subtitle\">\n            {location.address}\n          </div>\n        </div>\n      );\n    }\n    if (mediaType === 'geoLive') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">{lang('AttachLiveLocation')}</div>\n          <div className=\"location-info-subtitle\">\n            {formatLastUpdated(lang, serverTime, message.editDate)}\n          </div>\n          {!isExpired && (\n            <div className=\"geo-countdown\" ref={countdownRef}>\n              <span className=\"geo-countdown-text\" />\n              <svg width=\"32px\" height=\"32px\">\n                <circle\n                  cx=\"16\"\n                  cy=\"16\"\n                  r={TIMER_RADIUS}\n                  className=\"geo-countdown-progress\"\n                  transform=\"rotate(-90, 16, 16)\"\n                  stroke-dasharray={TIMER_CIRCUMFERENCE}\n                  stroke-dashoffset=\"0\"\n                />\n              </svg>\n            </div>\n          )}\n        </div>\n      );\n    }\n    return undefined;\n  }\n\n  function renderMap() {\n    if (!mapBlobUrl) return <Skeleton width={width} height={height} />;\n    return (\n      <img\n        className=\"full-media map\"\n        src={mapBlobUrl}\n        alt=\"Location on a map\"\n        draggable={false}\n        style={`width: ${DEFAULT_MAP_CONFIG.width}px; height: ${DEFAULT_MAP_CONFIG.height}px;`}\n      />\n    );\n  }\n\n  function renderPin() {\n    const pinClassName = buildClassName(\n      'pin',\n      mediaType,\n      isExpired && 'expired',\n    );\n    if (mediaType === 'geoLive') {\n      return (\n        <div className={pinClassName}>\n          <PinSvg />\n          <Avatar peer={peer} className=\"location-avatar\" />\n          {location.heading !== undefined && (\n            <div className=\"direction\" style={`--direction: ${location.heading}deg`} />\n          )}\n        </div>\n      );\n    }\n\n    if (mediaType === 'venue') {\n      const color = getVenueColor(location.venueType);\n      const iconSrc = getVenueIconUrl(location.venueType);\n      if (iconSrc) {\n        return (\n          <div className={pinClassName} style={`--pin-color: ${color}`}>\n            <PinSvg />\n            <img src={iconSrc} draggable={false} className=\"venue-icon\" alt=\"\" />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <img className={pinClassName} draggable={false} src={mapPin} alt=\"\" />\n    );\n  }\n\n  function renderOverlay() {\n    if (!mapBlobUrl) return undefined;\n\n    return (\n      <>\n        {Boolean(accuracyRadiusPx) && !isExpired && (\n          <div\n            className=\"location-accuracy\"\n            style={`width: ${accuracyRadiusPx * 2}px; height: ${accuracyRadiusPx * 2}px`}\n          />\n        )}\n        {renderPin()}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className=\"Location media-inner interactive\"\n      onClick={handleClick}\n    >\n      <div className=\"map-wrapper\">\n        {renderMap()}\n        {renderOverlay()}\n      </div>\n      {renderInfo()}\n    </div>\n  );\n};\n\nfunction PinSvg() {\n  return (\n    <svg className=\"round-pin\" style=\"enable-background:new 0 0 64 64\" viewBox=\"0 0 64 64\">\n      <circle cx=\"32\" cy=\"32\" r=\"24.5\" />\n      <path d=\"M32 8c13.23 0 24 10.77 24 24S45.23 56 32 56 8 45.23 8 32 18.77 8 32 8m0-1C18.19 7 7 18.19 7 32s11.19 25 25 25 25-11.19 25-25S45.81 7 32 7z\" />\n      <path d=\"m29.38 57.67-1.98-1.59 3.02-1.66L32 51.54l1.58 2.88 3.02 1.66-1.91 1.53L32 60.73z\" />\n      <path d=\"m32 52.58 1.07 1.95.14.26.26.14 2.24 1.22-1.33 1.06-.07.06-.06.07L32 59.96l-2.24-2.61-.06-.07-.07-.06-1.33-1.06 2.24-1.22.26-.14.14-.26L32 52.58m0-2.08-1.94 3.56L26.5 56l2.5 2 3 3.5 3-3.5 2.5-2-3.56-1.94L32 50.5z\" />\n    </svg>\n  );\n}\n\nexport default memo(Location);\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiMessage, ApiMessageOutgoingStatus, ApiThreadInfo,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString, formatPastTimeShort, formatTime } from '../../../util/dates/dateFormat';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport MessageOutgoingStatus from '../../common/MessageOutgoingStatus';\n\nimport './MessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  withReactionOffset?: boolean;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  signature?: string;\n  availableReactions?: ApiAvailableReaction[];\n  noReplies?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  isTranslated?: boolean;\n  isPinned?: boolean;\n  withFullDate?: boolean;\n  effectEmoji?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onTranslationClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onEffectClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  renderQuickReactionButton?: () => TeactNode | undefined;\n  onOpenThread: NoneToVoidFunction;\n};\n\nconst MessageMeta: FC<OwnProps> = ({\n  message,\n  outgoingStatus,\n  signature,\n  withReactionOffset,\n  repliesThreadInfo,\n  renderQuickReactionButton,\n  noReplies,\n  isTranslated,\n  isPinned,\n  withFullDate,\n  effectEmoji,\n  onClick,\n  onTranslationClick,\n  onEffectClick,\n  onOpenThread,\n}) => {\n  const { showNotification } = getActions();\n\n  const [isActivated, markActivated] = useFlag();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function handleImportedClick(e: React.MouseEvent) {\n    e.stopPropagation();\n\n    showNotification({\n      message: {\n        key: 'ImportedInfo',\n      },\n    });\n  }\n\n  function handleOpenThread(e: React.MouseEvent) {\n    e.stopPropagation();\n    onOpenThread();\n  }\n\n  const dateTitle = useMemo(() => {\n    if (!isActivated) return undefined;\n    const createDateTime = formatDateTimeToString(message.date * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const editDateTime = message.isEdited\n      && formatDateTimeToString(message.editDate! * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const forwardedDateTime = message.forwardInfo\n      && formatDateTimeToString(\n        (message.forwardInfo.savedDate || message.forwardInfo.date) * 1000,\n        oldLang.code,\n        undefined,\n        oldLang.timeFormat,\n      );\n\n    let text = createDateTime;\n    if (editDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipEditedDate', { date: editDateTime });\n    }\n    if (forwardedDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipForwardedDate', { date: forwardedDateTime });\n    }\n\n    return text;\n    // We need to listen to timeformat change\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [isActivated, oldLang, message, oldLang.timeFormat]);\n\n  const viewsTitle = useMemo(() => {\n    if (!message.viewsCount) return undefined;\n    let text = lang('MessageTooltipViews', { count: message.viewsCount }, { pluralValue: message.viewsCount });\n    if (message.forwardsCount) {\n      text += '\\n';\n      text += lang('MessageTooltipForwards', { count: message.forwardsCount }, { pluralValue: message.forwardsCount });\n    }\n\n    return text;\n  }, [lang, message.forwardsCount, message.viewsCount]);\n\n  const repliesTitle = useMemo(() => {\n    const count = repliesThreadInfo?.messagesCount;\n    if (!count) return undefined;\n    return lang('MessageTooltipReplies', { count }, { pluralValue: count });\n  }, [lang, repliesThreadInfo]);\n\n  const date = useMemo(() => {\n    const time = formatTime(oldLang, message.date * 1000);\n    if (!withFullDate) {\n      return time;\n    }\n\n    return formatPastTimeShort(oldLang, (message.forwardInfo?.date || message.date) * 1000, true);\n  }, [oldLang, message.date, message.forwardInfo?.date, withFullDate]);\n\n  const fullClassName = buildClassName(\n    'MessageMeta',\n    withReactionOffset && 'reactions-offset',\n    message.forwardInfo?.isImported && 'is-imported',\n  );\n\n  return (\n    <span\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n      onClick={onClick}\n      data-ignore-on-paste\n    >\n      {effectEmoji && (\n        <span className=\"message-effect-icon\" onClick={onEffectClick}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {isTranslated && (\n        <Icon name=\"language\" className=\"message-translated\" onClick={onTranslationClick} />\n      )}\n      {Boolean(message.viewsCount) && (\n        <>\n          <span className=\"message-views\" title={viewsTitle}>\n            {formatIntegerCompact(message.viewsCount!)}\n          </span>\n          <Icon name=\"channelviews\" />\n        </>\n      )}\n      {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n        <span onClick={handleOpenThread} className=\"message-replies-wrapper\" title={repliesTitle}>\n          <span className=\"message-replies\">\n            <AnimatedCounter text={formatIntegerCompact(repliesThreadInfo!.messagesCount!)} />\n          </span>\n          <Icon name=\"reply-filled\" />\n        </span>\n      )}\n      {isPinned && (\n        <Icon name=\"pinned-message\" className=\"message-pinned\" />\n      )}\n      {signature && (\n        <span className=\"message-signature\">{renderText(signature)}</span>\n      )}\n      <span className=\"message-time\" title={dateTitle} onMouseEnter={markActivated}>\n        {message.forwardInfo?.isImported && (\n          <>\n            <span className=\"message-imported\" onClick={handleImportedClick}>\n              {formatDateTimeToString(message.forwardInfo.date * 1000, lang.code, true)}\n            </span>\n            <span className=\"message-imported\" onClick={handleImportedClick}>{lang('MessageMetaImported')}</span>\n          </>\n        )}\n        {message.isEdited && `${lang('MessageMetaEdited')} `}\n        {message.isVideoProcessingPending && `${lang('MessageMetaApproximate')} `}\n        {date}\n      </span>\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      {renderQuickReactionButton && renderQuickReactionButton()}\n    </span>\n  );\n};\n\nexport default memo(MessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wqsZyy8u\",\"button\":\"NGmo4ADz\",\"info\":\"iFn6m6hd\",\"reason\":\"l8QfocIQ\",\"arrow\":\"ONmpzmUS\",\"incoming\":\"BfgDXljM\",\"missed\":\"Alra_BWu\",\"canceled\":\"J7xsuCAm\",\"meta\":\"rF5tkx92\",\"duration\":\"kKPKwFzu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ApiMessageActionPhoneCall } from '../../../api/types/messageActions';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatTimeDuration } from '../../../util/dates/dateFormat';\nimport { ARE_CALLS_SUPPORTED } from '../../../util/windowEnvironment';\nimport { getCallMessageKey } from './helpers/messageActions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MessagePhoneCall.module.scss';\n\ntype OwnProps = {\n  phoneCall: ApiMessageActionPhoneCall;\n  message: ApiMessage;\n  chatId: string;\n};\n\nconst MessagePhoneCall: FC<OwnProps> = ({\n  phoneCall,\n  message,\n  chatId,\n}) => {\n  const { requestMasterAndRequestCall } = getActions();\n\n  const lang = useOldLang();\n  const {\n    isVideo, reason, duration,\n  } = phoneCall;\n  const isOutgoing = message.isOutgoing;\n  const isMissed = reason === 'missed';\n  const isCancelled = reason === 'busy' || duration === undefined;\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ isVideo, userId: chatId });\n  });\n\n  const formattedDuration = useMemo(() => {\n    return phoneCall.duration ? formatTimeDuration(lang, phoneCall.duration) : undefined;\n  }, [lang, phoneCall.duration]);\n\n  const timeFormatted = formatTime(lang, message.date * 1000);\n  return (\n    <div className={styles.root}>\n      <Button\n        size=\"smaller\"\n        color=\"translucent\"\n        round\n        ripple\n        onClick={handleCall}\n        className={styles.button}\n        disabled={!ARE_CALLS_SUPPORTED}\n        ariaLabel={lang(isOutgoing ? 'CallAgain' : 'CallBack')}\n      >\n        <Icon name={isVideo ? 'video-outlined' : 'phone'} />\n      </Button>\n      <div className={styles.info}>\n        <div className={styles.reason}>{lang(getCallMessageKey(phoneCall, message.isOutgoing))}</div>\n        <div className={styles.meta}>\n          <Icon\n            name=\"arrow-right\"\n            className={buildClassName(\n              styles.arrow,\n              isMissed && styles.missed,\n              isCancelled && styles.canceled,\n              !isOutgoing && styles.incoming,\n            )}\n          />\n          <span className={styles.duration}>\n            {formattedDuration ? lang('CallMessageWithDuration', [timeFormatted, formattedDuration]) : timeFormatted}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MessagePhoneCall);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mVaSjZRJ\",\"buyButton\":\"GnKGu6D9\",\"boughtStatus\":\"IGXW5hWr\",\"star\":\"ywiOugiH\",\"buttonText\":\"gLaaVQXr\"};","import React, { memo, type TeactNode, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPaidMedia } from '../../../api/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { replaceWithTeact } from '../../../util/replaceWithTeact';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './PaidMediaOverlay.module.scss';\n\ntype OwnProps = {\n  paidMedia: ApiPaidMedia;\n  chatId: string;\n  messageId: number;\n  isOutgoing?: boolean;\n  children?: TeactNode;\n};\n\nconst PaidMediaOverlay = ({\n  paidMedia,\n  chatId,\n  messageId,\n  isOutgoing,\n  children,\n}: OwnProps) => {\n  const { openInvoice } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isClickable = !paidMedia.isBought;\n\n  const buttonText = useMemo(() => {\n    const value = oldLang('UnlockPaidContent', paidMedia.starsAmount);\n\n    return replaceWithTeact(\n      value, STARS_ICON_PLACEHOLDER, <StarIcon className={styles.star} type=\"gold\" size=\"adaptive\" />,\n    );\n  }, [oldLang, paidMedia]);\n\n  const handleClick = useLastCallback((e: React.MouseEvent) => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId,\n    });\n    stopEvent(e);\n  });\n\n  return (\n    <div\n      className={styles.root}\n      onClick={isClickable ? handleClick : undefined}\n    >\n      {children}\n      {isClickable && (\n        <Button\n          className={styles.buyButton}\n          color=\"dark\"\n          size=\"tiny\"\n          fluid\n          pill\n        >\n          <span className={styles.buttonText}>{buttonText}</span>\n        </Button>\n      )}\n      {paidMedia.isBought && (\n        <div className={buildClassName('message-paid-media-status', styles.boughtStatus)}>\n          {isOutgoing\n            ? formatStarsAsIcon(lang, paidMedia.starsAmount)\n            : oldLang('Chat.PaidMedia.Purchased')}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(PaidMediaOverlay);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiPollAnswer, ApiPollResult } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './PollOption.scss';\n\ntype OwnProps = {\n  answer: ApiPollAnswer;\n  voteResults?: ApiPollResult[];\n  totalVoters?: number;\n  maxVotersCount?: number;\n  correctResults: string[];\n  shouldAnimate: boolean;\n};\n\nconst PollOption: FC<OwnProps> = ({\n  answer,\n  voteResults,\n  totalVoters,\n  maxVotersCount,\n  correctResults,\n  shouldAnimate,\n}) => {\n  const result = voteResults && voteResults.find((r) => r.option === answer.option);\n  const correctAnswer = correctResults.length === 0 || correctResults.indexOf(answer.option) !== -1;\n  const showIcon = (correctResults.length > 0 && correctAnswer) || (result?.isChosen);\n  const answerPercent = result ? getPercentage(result.votersCount, totalVoters || 0) : 0;\n  const [finalPercent, setFinalPercent] = useState(shouldAnimate ? 0 : answerPercent);\n  const lineWidth = result ? getPercentage(result.votersCount, maxVotersCount || 0) : 0;\n  const isAnimationDoesNotStart = finalPercent !== answerPercent;\n\n  useEffect(() => {\n    if (shouldAnimate) {\n      setFinalPercent(answerPercent);\n    }\n  }, [shouldAnimate, answerPercent]);\n\n  if (!voteResults || !result) {\n    return undefined;\n  }\n\n  const lineStyle = `width: ${lineWidth}%; transform:scaleX(${isAnimationDoesNotStart ? 0 : 1})`;\n\n  return (\n    <div className=\"PollOption\" dir=\"ltr\">\n      <div className={`poll-option-share ${answerPercent === '100' ? 'limit-width' : ''}`}>\n        {answerPercent}%\n        {showIcon && (\n          <span className={buildClassName(\n            'poll-option-chosen',\n            !correctAnswer && 'wrong',\n            shouldAnimate && 'animate',\n          )}\n          >\n            <Icon name={correctAnswer ? 'check' : 'close'} className=\"poll-option-icon\" />\n          </span>\n        )}\n      </div>\n      <div className=\"poll-option-right\">\n        <div className=\"poll-option-text\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: answer.text.text,\n            entities: answer.text.entities,\n          })}\n        </div>\n        <div className={buildClassName('poll-option-answer', showIcon && !correctAnswer && 'wrong')}>\n          {shouldAnimate && (\n            <svg\n              className=\"poll-line\"\n              style={!isAnimationDoesNotStart ? 'stroke-dasharray: 100% 200%; stroke-dashoffset: -44' : ''}\n            >\n              <path d=\"M4.47 5.33v13.6a9 9 0 009 9h13\" />\n            </svg>\n          )}\n          <div\n            className=\"poll-option-line\"\n            style={lineStyle}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default PollOption;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPoll, ApiPollAnswer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { selectPeer } from '../../../global/selectors';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getServerTime } from '../../../util/serverTime';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PollOption from './PollOption';\n\nimport './Poll.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  poll: ApiPoll;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onSendVote: (options: string[]) => void;\n};\n\nconst SOLUTION_CONTAINER_ID = '#middle-column-portals';\nconst SOLUTION_DURATION = 5000;\nconst TIMER_RADIUS = 6;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst TIMER_UPDATE_INTERVAL = 1000;\nconst NBSP = '\\u00A0';\n\nconst Poll: FC<OwnProps> = ({\n  message,\n  poll,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onSendVote,\n}) => {\n  const {\n    loadMessage, openPollResults, requestConfetti, showNotification,\n  } = getActions();\n\n  const { id: messageId, chatId } = message;\n  const { summary, results } = poll;\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [chosenOptions, setChosenOptions] = useState<string[]>([]);\n  const [wasSubmitted, setWasSubmitted] = useState<boolean>(false);\n  const [closePeriod, setClosePeriod] = useState<number>(\n    !summary.closed && summary.closeDate && summary.closeDate > 0\n      ? Math.min(summary.closeDate - getServerTime(), summary.closePeriod!)\n      : 0,\n  );\n  // eslint-disable-next-line no-null/no-null\n  const countdownRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const timerCircleRef = useRef<SVGCircleElement>(null);\n  const { results: voteResults, totalVoters } = results;\n  const hasVoted = voteResults && voteResults.some((r) => r.isChosen);\n  const canVote = !summary.closed && !hasVoted;\n  const canViewResult = !canVote && summary.isPublic && Number(results.totalVoters) > 0;\n  const isMultiple = canVote && summary.multipleChoice;\n  const recentVoterIds = results.recentVoterIds;\n  const maxVotersCount = voteResults ? Math.max(...voteResults.map((r) => r.votersCount)) : totalVoters;\n  const correctResults = useMemo(() => {\n    return voteResults?.filter((r) => r.isCorrect).map((r) => r.option) || [];\n  }, [voteResults]);\n  const answers = useMemo(() => summary.answers.map((a) => ({\n    label: renderTextWithEntities({\n      text: a.text.text,\n      entities: a.text.entities,\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    }),\n    value: a.option,\n    hidden: Boolean(summary.quiz && summary.closePeriod && closePeriod <= 0),\n  })), [\n    closePeriod, observeIntersectionForLoading, observeIntersectionForPlaying,\n    summary.answers, summary.closePeriod, summary.quiz,\n  ]);\n\n  useEffect(() => {\n    const chosen = poll.results.results?.find((result) => result.isChosen);\n    if (isSubmitting && chosen) {\n      if (chosen.isCorrect) {\n        requestConfetti({});\n      }\n      setIsSubmitting(false);\n    }\n  }, [isSubmitting, poll.results.results, requestConfetti]);\n\n  useLayoutEffect(() => {\n    if (closePeriod > 0) {\n      setTimeout(() => setClosePeriod(closePeriod - 1), TIMER_UPDATE_INTERVAL);\n    }\n    if (!timerCircleRef.current) return;\n\n    if (closePeriod <= 5) {\n      countdownRef.current!.classList.add('hurry-up');\n    }\n\n    const strokeDashOffset = ((summary.closePeriod! - closePeriod) / summary.closePeriod!) * TIMER_CIRCUMFERENCE;\n    timerCircleRef.current.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  }, [closePeriod, summary.closePeriod]);\n\n  useEffect(() => {\n    if (summary.quiz && (closePeriod <= 0 || (hasVoted && !summary.closed))) {\n      loadMessage({ chatId, messageId });\n    }\n  }, [chatId, closePeriod, hasVoted, loadMessage, messageId, summary.closed, summary.quiz]);\n\n  // If the client time is not synchronized, the poll must be updated after the closePeriod time has expired.\n  useEffect(() => {\n    let timer: number | undefined;\n\n    if (summary.quiz && !summary.closed && summary.closePeriod && summary.closePeriod > 0) {\n      timer = window.setTimeout(() => {\n        loadMessage({ chatId, messageId });\n      }, summary.closePeriod * 1000);\n    }\n\n    return () => {\n      if (timer) {\n        window.clearTimeout(timer);\n      }\n    };\n  }, [canVote, chatId, loadMessage, messageId, summary.closePeriod, summary.closed, summary.quiz]);\n\n  const recentVoters = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const global = getGlobal();\n    return recentVoterIds ? recentVoterIds.reduce((result: ApiPeer[], id) => {\n      const peer = selectPeer(global, id);\n      if (peer) {\n        result.push(peer);\n      }\n\n      return result;\n    }, []) : [];\n  }, [recentVoterIds]);\n\n  const handleRadioChange = useLastCallback((option: string) => {\n    setChosenOptions([option]);\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote([option]);\n  });\n\n  const handleCheckboxChange = useLastCallback((options: string[]) => {\n    setChosenOptions(options);\n  });\n\n  const handleVoteClick = useLastCallback(() => {\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote(chosenOptions);\n  });\n\n  const handleViewResultsClick = useLastCallback(() => {\n    openPollResults({ chatId, messageId });\n  });\n\n  const showSolution = useLastCallback(() => {\n    showNotification({\n      localId: getMessageKey(message),\n      message: renderTextWithEntities({ text: poll.results.solution!, entities: poll.results.solutionEntities }),\n      duration: SOLUTION_DURATION,\n      containerSelector: SOLUTION_CONTAINER_ID,\n    });\n  });\n\n  // Show the solution to quiz if the answer was incorrect\n  useEffect(() => {\n    if (wasSubmitted && hasVoted && summary.quiz && results.results && poll.results.solution) {\n      const correctResult = results.results.find((r) => r.isChosen && r.isCorrect);\n      if (!correctResult) {\n        showSolution();\n      }\n    }\n  }, [hasVoted, wasSubmitted, results.results, summary.quiz, poll.results.solution]);\n\n  const lang = useOldLang();\n\n  function renderResultOption(answer: ApiPollAnswer) {\n    return (\n      <PollOption\n        key={answer.option}\n        shouldAnimate={wasSubmitted || !canVote}\n        answer={answer}\n        voteResults={voteResults}\n        totalVoters={totalVoters}\n        maxVotersCount={maxVotersCount}\n        correctResults={correctResults}\n      />\n    );\n  }\n\n  function renderRecentVoters() {\n    return (\n      recentVoters.length > 0 && (\n        <div className=\"poll-recent-voters\">\n          <AvatarList\n            size=\"micro\"\n            peers={recentVoters}\n          />\n        </div>\n      )\n    );\n  }\n\n  return (\n    <div className=\"Poll\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"poll-question\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n          observeIntersectionForLoading,\n          observeIntersectionForPlaying,\n        })}\n      </div>\n      <div className=\"poll-type\">\n        {lang(getPollTypeString(summary))}\n        {renderRecentVoters()}\n        {closePeriod > 0 && canVote && (\n          <div ref={countdownRef} className=\"poll-countdown\">\n            <span>{formatMediaDuration(closePeriod)}</span>\n            <svg width=\"16px\" height=\"16px\">\n              <circle\n                ref={timerCircleRef}\n                cx=\"8\"\n                cy=\"8\"\n                r={TIMER_RADIUS}\n                className=\"poll-countdown-progress\"\n                transform=\"rotate(-90, 8, 8)\"\n                stroke-dasharray={TIMER_CIRCUMFERENCE}\n                stroke-dashoffset=\"0\"\n              />\n            </svg>\n          </div>\n        )}\n        {summary.quiz && poll.results.solution && !canVote && (\n          <Button\n            round\n            size=\"tiny\"\n            color=\"translucent\"\n            className=\"poll-quiz-help\"\n            onClick={showSolution}\n            ariaLabel=\"Show Solution\"\n          >\n            <Icon name=\"lamp\" />\n          </Button>\n        )}\n      </div>\n      {canVote && (\n        <div className=\"poll-answers\" onClick={stopPropagation}>\n          {isMultiple\n            ? (\n              <CheckboxGroup\n                options={answers}\n                onChange={handleCheckboxChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOptions={isSubmitting ? chosenOptions : undefined}\n                isRound\n              />\n            )\n            : (\n              <RadioGroup\n                name={`poll-${messageId}`}\n                options={answers}\n                onChange={handleRadioChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOption={isSubmitting ? chosenOptions[0] : undefined}\n              />\n            )}\n        </div>\n      )}\n      {!canVote && (\n        <div className=\"poll-results\">\n          {summary.answers.map(renderResultOption)}\n        </div>\n      )}\n      {!canViewResult && !isMultiple && (\n        <div className=\"poll-voters-count\">{getReadableVotersCount(lang, summary.quiz, results.totalVoters)}</div>\n      )}\n      {isMultiple && (\n        <Button\n          isText\n          disabled={chosenOptions.length === 0}\n          size=\"tiny\"\n          onClick={handleVoteClick}\n        >\n          {lang('PollSubmitVotes')}\n        </Button>\n      )}\n      {canViewResult && (\n        <Button\n          isText\n          size=\"tiny\"\n          onClick={handleViewResultsClick}\n        >\n          {lang('PollViewResults')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nfunction getPollTypeString(summary: ApiPoll['summary']) {\n  // When we just created the poll, some properties don't exist.\n  if (typeof summary.isPublic === 'undefined') {\n    return NBSP;\n  }\n\n  if (summary.closed) {\n    return 'FinalResults';\n  }\n\n  if (summary.quiz) {\n    return summary.isPublic ? 'QuizPoll' : 'AnonymousQuizPoll';\n  }\n\n  return summary.isPublic ? 'PublicPoll' : 'AnonymousPoll';\n}\n\nfunction getReadableVotersCount(lang: OldLangFn, isQuiz: true | undefined, count?: number) {\n  if (!count) {\n    return lang(isQuiz ? 'Chat.Quiz.TotalVotesEmpty' : 'Chat.Poll.TotalVotesResultEmpty');\n  }\n\n  return lang(isQuiz ? 'Answer' : 'Vote', count, 'i');\n}\n\nfunction stopPropagation(e: React.MouseEvent<HTMLDivElement>) {\n  e.stopPropagation();\n}\n\nexport default memo(Poll);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FPceNkgD\",\"inactive\":\"hruUWBuj\",\"mirrored\":\"GydRBA08\",\"effect\":\"WMMaWlOL\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_WEBM_SUPPORTED } from '../../../util/windowEnvironment';\nimport { getStickerDimensions } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport StickerView from '../../common/StickerView';\nimport Portal from '../../ui/Portal';\n\nimport styles from './Sticker.module.scss';\n\n// https://github.com/telegramdesktop/tdesktop/blob/master/Telegram/SourceFiles/history/view/media/history_view_sticker.cpp#L42\nconst EFFECT_SIZE_MULTIPLIER = 1 + 0.245 * 2;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection: ObserveFn;\n  observeIntersectionForPlaying: ObserveFn;\n  shouldLoop?: boolean;\n  shouldPlayEffect?: boolean;\n  withEffect?: boolean;\n  onStopEffect?: VoidFunction;\n};\n\nconst Sticker: FC<OwnProps> = ({\n  message, observeIntersection, observeIntersectionForPlaying, shouldLoop,\n  shouldPlayEffect, withEffect, onStopEffect,\n}) => {\n  const { showNotification, openStickerSet } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const effectRef = useRef<HTMLDivElement>(null);\n\n  const sticker = message.content.sticker!;\n  const { stickerSetInfo, isVideo, hasEffect } = sticker;\n  const isMirrored = !message.isOutgoing;\n\n  const mediaHash = sticker.isPreloadedGlobally ? undefined : (\n    getStickerMediaHash(sticker, isVideo && !IS_WEBM_SUPPORTED ? 'pictogram' : 'inline')!\n  );\n\n  const canLoad = useIsIntersecting(ref, observeIntersection);\n  const canPlay = useIsIntersecting(ref, observeIntersectionForPlaying);\n  const mediaHashEffect = `sticker${sticker.id}?size=f`;\n  const effectBlobUrl = useMedia(\n    mediaHashEffect,\n    !canLoad || !hasEffect || !withEffect,\n    ApiMediaFormat.BlobUrl,\n  );\n  const [isPlayingEffect, startPlayingEffect, stopPlayingEffect] = useFlag();\n\n  const handleEffectEnded = useLastCallback(() => {\n    stopPlayingEffect();\n    onStopEffect?.();\n  });\n\n  useEffect(() => {\n    if (hasEffect && withEffect && canPlay && shouldPlayEffect) {\n      startPlayingEffect();\n    }\n  }, [hasEffect, canPlay, shouldPlayEffect, startPlayingEffect, withEffect]);\n\n  const shouldRenderEffect = hasEffect && withEffect && effectBlobUrl && isPlayingEffect;\n  useOverlayPosition({\n    anchorRef: ref,\n    overlayRef: effectRef,\n    isMirrored,\n    isDisabled: !shouldRenderEffect,\n  });\n\n  const openModal = useLastCallback(() => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (hasEffect) {\n      if (isPlayingEffect || !withEffect) {\n        showNotification({\n          message: lang('PremiumStickerTooltip'),\n          action: {\n            action: 'openStickerSet',\n            payload: {\n              stickerSetInfo: sticker.stickerSetInfo,\n            },\n          },\n          actionText: lang('ViewAction'),\n        });\n        return;\n      } else if (withEffect) {\n        startPlayingEffect();\n        return;\n      }\n    }\n    openModal();\n  });\n\n  const isMemojiSticker = 'isMissing' in stickerSetInfo;\n  const { width, height } = getStickerDimensions(sticker, isMobile);\n  const className = buildClassName(\n    'media-inner',\n    styles.root,\n    isMemojiSticker && styles.inactive,\n    hasEffect && isMirrored && styles.mirrored,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      style={`width: ${width}px; height: ${height}px;`}\n      onClick={!isMemojiSticker ? handleClick : undefined}\n    >\n      <StickerView\n        containerRef={ref}\n        sticker={sticker}\n        fullMediaHash={mediaHash}\n        fullMediaClassName=\"full-media\"\n        size={width}\n        shouldLoop={shouldLoop}\n        noLoad={!canLoad}\n        noPlay={!canPlay}\n        withSharedAnimation\n      />\n      {shouldRenderEffect && (\n        <Portal>\n          <AnimatedSticker\n            ref={effectRef}\n            key={mediaHashEffect}\n            className={buildClassName(styles.effect, isMirrored && styles.mirrored)}\n            tgsUrl={effectBlobUrl}\n            size={width * EFFECT_SIZE_MULTIPLIER}\n            play\n            isLowPriority\n            noLoop\n            onEnded={handleEffectEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nexport default Sticker;\n","import React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiTypeStory,\n} from '../../../api/types';\n\nimport { selectPeerStory } from '../../../global/selectors';\n\nimport BaseStory from './BaseStory';\n\ninterface OwnProps {\n  message: ApiMessage;\n  isProtected?: boolean;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  isConnected?: boolean;\n}\n\nfunction Story({\n  message, story, isProtected, isConnected,\n}: OwnProps & StateProps) {\n  const { storyData } = message.content;\n\n  return (\n    <BaseStory\n      story={story || storyData}\n      isProtected={isProtected}\n      isConnected={isConnected}\n    />\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const { id, peerId } = message.content.storyData!;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    isConnected: global.connectionState === 'connectionStateReady',\n  };\n})(Story));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiTypeStory, ApiUser,\n} from '../../../api/types';\n\nimport { getPeerTitle, getStoryMediaHash, getUserFirstOrLastName } from '../../../global/helpers';\nimport {\n  selectPeer,\n  selectPeerStories,\n  selectPeerStory,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\ninterface OwnProps {\n  message: ApiMessage;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  peer?: ApiPeer;\n  targetUser?: ApiUser;\n  isUnread?: boolean;\n}\n\nfunction StoryMention({\n  message, story, peer, isUnread, targetUser,\n}: OwnProps & StateProps) {\n  const { openStoryViewer } = getActions();\n\n  const lang = useOldLang();\n\n  const { storyData } = message.content;\n\n  const handleClick = useLastCallback(() => {\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  const isDeleted = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded\n    ? getStoryMediaHash(story, 'pictogram')\n    : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  useEnsureStory(storyData!.peerId, storyData!.id, story);\n\n  function getTitle() {\n    if (peer && 'isSelf' in peer && peer.isSelf) {\n      return isDeleted\n        ? lang('ExpiredStoryMentioned', getUserFirstOrLastName(targetUser))\n        : lang('StoryYouMentionedTitle', getUserFirstOrLastName(targetUser));\n    }\n\n    return isDeleted\n      ? lang('ExpiredStoryMention')\n      : lang('StoryMentionedTitle', getPeerTitle(lang, peer!));\n  }\n\n  return (\n    <div\n      className={buildClassName('action-message-story-mention', isUnread && 'is-unread', isLoaded && 'with-preview')}\n      tabIndex={0}\n      role=\"button\"\n      onClick={isLoaded ? handleClick : undefined}\n    >\n      {isLoaded && (\n        <span className=\"story-media-wrapper\">\n          {thumbUrl && (\n            <img src={thumbUrl} alt=\"\" className=\"story-media\" />\n          )}\n        </span>\n      )}\n\n      <span className=\"story-title\">{renderText(getTitle(), ['emoji', 'simple_markdown'])}</span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const { id, peerId } = message.content.storyData!;\n  const lastReadId = selectPeerStories(global, peerId)?.lastReadId;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    peer: selectPeer(global, peerId),\n    targetUser: selectUser(global, message.chatId),\n    isUnread: Boolean(lastReadId && lastReadId < id),\n  };\n})(StoryMention));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatMember,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n  ApiThreadInfo,\n  ApiTopic,\n  ApiTypeStory,\n  ApiUser,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ActiveEmojiInteraction,\n  ChatTranslatedMessages,\n  FocusDirection,\n  IAlbum,\n  ISettings,\n  MessageListType,\n  ScrollTargetPosition,\n  ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport type { OnIntersectPinnedMessage } from '../hooks/usePinnedMessage';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { EMOJI_STATUS_LOOP_LIMIT, MESSAGE_APPEARANCE_DELAY } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getIsDownloading,\n  getMessageContent,\n  getMessageCustomShape,\n  getMessageDownloadableMedia,\n  getMessageHtmlId,\n  getMessageSingleCustomEmoji,\n  getMessageSingleRegularEmoji,\n  getPeerTitle,\n  hasMessageText,\n  hasMessageTtl,\n  isAnonymousForwardsChat,\n  isAnonymousOwnMessage,\n  isChatChannel,\n  isChatGroup,\n  isChatPublic,\n  isGeoLiveExpired,\n  isMessageLocal,\n  isMessageTranslatable,\n  isOwnMessage,\n  isReplyToMessage,\n  isSystemBot,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo, getStoryReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectActiveDownloads,\n  selectAnimatedEmoji,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectCanReplyToMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatTranslations,\n  selectCurrentMiddleSearch,\n  selectDefaultReaction,\n  selectForwardedSender,\n  selectIsChatProtected,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsDocumentGroupSelected,\n  selectIsInSelectMode,\n  selectIsMessageFocused,\n  selectIsMessageProtected,\n  selectIsMessageSelected,\n  selectMessageIdsByGroupId,\n  selectMessageLastPlaybackTimestamp,\n  selectMessageTimestampableDuration,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectPollFromMessage,\n  selectReplyMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectSender,\n  selectSenderFromHeader,\n  selectShouldDetectChatLanguage,\n  selectShouldLoopStickers,\n  selectTabState,\n  selectTheme,\n  selectThreadInfo,\n  selectTopicFromMessage,\n  selectUploadProgress,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport stopEvent from '../../../util/stopEvent';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport { IS_ANDROID, IS_ELECTRON, IS_TRANSLATION_SUPPORTED } from '../../../util/windowEnvironment';\nimport { calculateDimensionsForMessageMedia, getStickerDimensions, REM } from '../../common/helpers/mediaDimensions';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\nimport renderText from '../../common/helpers/renderText';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\nimport { buildContentClassName } from './helpers/buildContentClassName';\nimport { calculateAlbumLayout } from './helpers/calculateAlbumLayout';\nimport getSingularPaidMedia from './helpers/getSingularPaidMedia';\nimport { calculateMediaDimensions, getMinMediaWidth, MIN_MEDIA_WIDTH_WITH_TEXT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useFlag from '../../../hooks/useFlag';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useMessageResizeObserver from '../../../hooks/useResizeMessageObserver';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useTextLanguage from '../../../hooks/useTextLanguage';\nimport useDetectChatLanguage from './hooks/useDetectChatLanguage';\nimport useFocusMessage from './hooks/useFocusMessage';\nimport useInnerHandlers from './hooks/useInnerHandlers';\nimport useMessageTranslation from './hooks/useMessageTranslation';\nimport useOuterHandlers from './hooks/useOuterHandlers';\n\nimport Audio from '../../common/Audio';\nimport Avatar from '../../common/Avatar';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Document from '../../common/Document';\nimport DotAnimation from '../../common/DotAnimation';\nimport EmbeddedMessage from '../../common/embedded/EmbeddedMessage';\nimport EmbeddedStory from '../../common/embedded/EmbeddedStory';\nimport FakeIcon from '../../common/FakeIcon';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport MessageText from '../../common/MessageText';\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport TopicChip from '../../common/TopicChip';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Button from '../../ui/Button';\nimport Album from './Album';\nimport AnimatedCustomEmoji from './AnimatedCustomEmoji';\nimport AnimatedEmoji from './AnimatedEmoji';\nimport CommentButton from './CommentButton';\nimport Contact from './Contact';\nimport ContextMenuContainer from './ContextMenuContainer.async';\nimport FactCheck from './FactCheck';\nimport Game from './Game';\nimport Giveaway from './Giveaway';\nimport InlineButtons from './InlineButtons';\nimport Invoice from './Invoice';\nimport InvoiceMediaPreview from './InvoiceMediaPreview';\nimport Location from './Location';\nimport MessageAppendix from './MessageAppendix';\nimport MessageEffect from './MessageEffect';\nimport MessageMeta from './MessageMeta';\nimport MessagePhoneCall from './MessagePhoneCall';\nimport PaidMediaOverlay from './PaidMediaOverlay';\nimport Photo from './Photo';\nimport Poll from './Poll';\nimport Reactions from './reactions/Reactions';\nimport RoundVideo from './RoundVideo';\nimport Sticker from './Sticker';\nimport Story from './Story';\nimport StoryMention from './StoryMention';\nimport Video from './Video';\nimport WebPage from './WebPage';\n\nimport './Message.scss';\n\ntype MessagePositionProperties = {\n  isFirstInGroup: boolean;\n  isLastInGroup: boolean;\n  isFirstInDocumentGroup: boolean;\n  isLastInDocumentGroup: boolean;\n  isLastInList: boolean;\n};\n\ntype OwnProps =\n  {\n    message: ApiMessage;\n    observeIntersectionForBottom?: ObserveFn;\n    observeIntersectionForLoading?: ObserveFn;\n    observeIntersectionForPlaying?: ObserveFn;\n    album?: IAlbum;\n    noAvatars?: boolean;\n    withAvatar?: boolean;\n    withSenderName?: boolean;\n    threadId: ThreadId;\n    messageListType: MessageListType;\n    noComments: boolean;\n    noReplies: boolean;\n    appearanceOrder: number;\n    isJustAdded: boolean;\n    memoFirstUnreadIdRef?: { current: number | undefined };\n    getIsMessageListReady?: Signal<boolean>;\n    onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n  }\n  & MessagePositionProperties;\n\ntype StateProps = {\n  theme: ISettings['theme'];\n  forceSenderName?: boolean;\n  sender?: ApiPeer;\n  canShowSender: boolean;\n  originSender?: ApiPeer;\n  botSender?: ApiUser;\n  isThreadTop?: boolean;\n  shouldHideReply?: boolean;\n  replyMessage?: ApiMessage;\n  replyMessageSender?: ApiPeer;\n  replyMessageForwardSender?: ApiPeer;\n  replyMessageChat?: ApiChat;\n  isReplyPrivate?: boolean;\n  replyStory?: ApiTypeStory;\n  storySender?: ApiPeer;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  uploadProgress?: number;\n  isInDocumentGroup: boolean;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  focusedQuote?: string;\n  noFocusHighlight?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n  isResizingContainer?: boolean;\n  isForwarding?: boolean;\n  isChatWithSelf?: boolean;\n  isRepliesChat?: boolean;\n  isAnonymousForwards?: boolean;\n  isChannel?: boolean;\n  isGroup?: boolean;\n  canReply?: boolean;\n  highlight?: string;\n  animatedEmoji?: string;\n  animatedCustomEmoji?: string;\n  hasActiveReactions?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  isGroupSelected?: boolean;\n  isDownloading?: boolean;\n  threadId?: ThreadId;\n  isPinnedList?: boolean;\n  isPinned?: boolean;\n  canAutoLoadMedia?: boolean;\n  canAutoPlayMedia?: boolean;\n  hasLinkedChat?: boolean;\n  shouldLoopStickers?: boolean;\n  autoLoadFileMaxSizeMb: number;\n  repliesThreadInfo?: ApiThreadInfo;\n  reactionMessage?: ApiMessage;\n  availableReactions?: ApiAvailableReaction[];\n  defaultReaction?: ApiReaction;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  hasUnreadReaction?: boolean;\n  isTranscribing?: boolean;\n  transcribedText?: string;\n  isTranscriptionError?: boolean;\n  isPremium: boolean;\n  senderAdminMember?: ApiChatMember;\n  messageTopic?: ApiTopic;\n  hasTopicChip?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  areTranslationsEnabled?: boolean;\n  shouldDetectChatLanguage?: boolean;\n  requestedTranslationLanguage?: string;\n  requestedChatTranslationLanguage?: string;\n  withAnimatedEffects?: boolean;\n  webPageStory?: ApiTypeStory;\n  isConnected: boolean;\n  isLoadingComments?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  senderBoosts?: number;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  canTranscribeVoice?: boolean;\n  viaBusinessBot?: ApiUser;\n  effect?: ApiAvailableEffect;\n  poll?: ApiPoll;\n  maxTimestamp?: number;\n  lastPlaybackTimestamp?: number;\n};\n\ntype MetaPosition =\n  'in-text'\n  | 'standalone'\n  | 'none';\ntype ReactionsPosition =\n  'inside'\n  | 'outside'\n  | 'none';\ntype QuickReactionPosition =\n  'in-content'\n  | 'in-meta';\n\nconst NBSP = '\\u00A0';\nconst NO_MEDIA_CORNERS_THRESHOLD = 18;\nconst QUICK_REACTION_SIZE = 1.75 * REM;\nconst EXTRA_SPACE_FOR_REACTIONS = 2.25 * REM;\n\nconst Message: FC<OwnProps & StateProps> = ({\n  message,\n  observeIntersectionForBottom,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  album,\n  noAvatars,\n  withAvatar,\n  withSenderName,\n  noComments,\n  noReplies,\n  appearanceOrder,\n  isJustAdded,\n  isFirstInGroup,\n  isPremium,\n  isLastInGroup,\n  isFirstInDocumentGroup,\n  isLastInDocumentGroup,\n  isTranscribing,\n  transcribedText,\n  isLastInList,\n  theme,\n  forceSenderName,\n  sender,\n  canShowSender,\n  originSender,\n  botSender,\n  isThreadTop,\n  shouldHideReply,\n  replyMessage,\n  replyMessageSender,\n  replyMessageForwardSender,\n  replyMessageChat,\n  replyStory,\n  isReplyPrivate,\n  storySender,\n  outgoingStatus,\n  uploadProgress,\n  isInDocumentGroup,\n  isLoadingComments,\n  isProtected,\n  isChatProtected,\n  isFocused,\n  focusDirection,\n  focusedQuote,\n  noFocusHighlight,\n  scrollTargetPosition,\n  isResizingContainer,\n  isForwarding,\n  isChatWithSelf,\n  isRepliesChat,\n  isAnonymousForwards,\n  isChannel,\n  isGroup,\n  canReply,\n  highlight,\n  animatedEmoji,\n  animatedCustomEmoji,\n  hasActiveReactions,\n  hasLinkedChat,\n  isInSelectMode,\n  isSelected,\n  isGroupSelected,\n  threadId,\n  reactionMessage,\n  availableReactions,\n  defaultReaction,\n  activeEmojiInteractions,\n  messageListType,\n  isPinnedList,\n  isPinned,\n  isDownloading,\n  canAutoLoadMedia,\n  canAutoPlayMedia,\n  shouldLoopStickers,\n  autoLoadFileMaxSizeMb,\n  repliesThreadInfo,\n  hasUnreadReaction,\n  memoFirstUnreadIdRef,\n  senderAdminMember,\n  messageTopic,\n  hasTopicChip,\n  chatTranslations,\n  areTranslationsEnabled,\n  shouldDetectChatLanguage,\n  requestedTranslationLanguage,\n  requestedChatTranslationLanguage,\n  withAnimatedEffects,\n  webPageStory,\n  isConnected,\n  getIsMessageListReady,\n  shouldWarnAboutSvg,\n  senderBoosts,\n  tags,\n  canTranscribeVoice,\n  viaBusinessBot,\n  effect,\n  poll,\n  maxTimestamp,\n  lastPlaybackTimestamp,\n  onIntersectPinnedMessage,\n}) => {\n  const {\n    toggleMessageSelection,\n    clickBotInlineButton,\n    disableContextMenuHint,\n    animateUnreadReaction,\n    focusLastMessage,\n    markMentionsRead,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const bottomMarkerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const quickReactionRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [isTranscriptionHidden, setTranscriptionHidden] = useState(false);\n  const [isPlayingSnapAnimation, setIsPlayingSnapAnimation] = useState(false);\n  const [isPlayingDeleteAnimation, setIsPlayingDeleteAnimation] = useState(false);\n  const [shouldPlayEffect, requestEffect, hideEffect] = useFlag();\n  const { isMobile, isTouchScreen } = useAppLayout();\n\n  useOnIntersect(bottomMarkerRef, observeIntersectionForBottom);\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    contextMenuTarget,\n    handleBeforeContextMenu,\n    handleContextMenu: onContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(\n    ref,\n    isTouchScreen && isInSelectMode,\n    !IS_ELECTRON,\n    IS_ANDROID,\n    getIsMessageListReady,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      disableContextMenuHint();\n    }\n  }, [isContextMenuOpen, disableContextMenuHint]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * MESSAGE_APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  useShowTransition({\n    ref,\n    isOpen: isShown || isJustAdded,\n    noMountTransition: noAppearanceAnimation && !isJustAdded,\n    className: false,\n  });\n\n  const {\n    id: messageId, chatId, forwardInfo, viaBotId, isTranscriptionError, factCheck,\n  } = message;\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      const id = album ? album.mainMessage.id : messageId;\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [id] });\n    }\n  });\n\n  const isLocal = isMessageLocal(message);\n  const isOwn = isOwnMessage(message);\n  const isScheduled = messageListType === 'scheduled' || message.isScheduled;\n  const hasMessageReply = isReplyToMessage(message) && !shouldHideReply;\n\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo, audio,\n    voice, document, sticker, contact,\n    webPage, invoice, location,\n    action, game, storyData, giveaway,\n    giveawayResults,\n  } = getMessageContent(message);\n\n  const messageReplyInfo = getMessageReplyInfo(message);\n  const storyReplyInfo = getStoryReplyInfo(message);\n\n  const withVoiceTranscription = Boolean(!isTranscriptionHidden && (isTranscriptionError || transcribedText));\n\n  const hasStoryReply = Boolean(storyReplyInfo);\n  const hasThread = Boolean(repliesThreadInfo) && messageListType === 'thread';\n  const isCustomShape = !withVoiceTranscription && getMessageCustomShape(message);\n  const hasAnimatedEmoji = isCustomShape && (animatedEmoji || animatedCustomEmoji);\n  const hasReactions = reactionMessage?.reactions && !areReactionsEmpty(reactionMessage.reactions);\n  const asForwarded = (\n    forwardInfo\n    && (!isChatWithSelf || isScheduled)\n    && !isRepliesChat\n    && !forwardInfo.isLinkedChannelPost\n    && !isAnonymousForwards\n    && !botSender\n  ) || Boolean(storyData && !storyData.isMention);\n  const canShowSenderBoosts = Boolean(senderBoosts) && !asForwarded && isFirstInGroup;\n  const isStoryMention = storyData?.isMention;\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isAlbum = Boolean(album)\n    && (\n      (album.isPaidMedia && paidMedia!.extendedMedia.length > 1)\n      || album.messages.length > 1\n    ) && !album.messages.some((msg) => Object.keys(msg.content).length === 0);\n  const isInDocumentGroupNotFirst = isInDocumentGroup && !isFirstInDocumentGroup;\n  const isInDocumentGroupNotLast = isInDocumentGroup && !isLastInDocumentGroup;\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n  const canShowActionButton = (\n    !(isContextMenuShown || isInSelectMode || isForwarding)\n    && !isInDocumentGroupNotLast\n    && !isStoryMention\n    && !((sticker || hasAnimatedEmoji) && asForwarded)\n  );\n  const canForward = isChannel && !isScheduled && message.isForwardingAllowed\n  && !isChatProtected;\n  const canFocus = Boolean(isPinnedList\n    || (forwardInfo\n      && (forwardInfo.isChannelPost || isChatWithSelf || isRepliesChat || isAnonymousForwards)\n      && forwardInfo.fromMessageId\n    ));\n\n  const hasFactCheck = Boolean(factCheck?.text);\n\n  const hasForwardedCustomShape = asForwarded && isCustomShape;\n  const hasSubheader = hasTopicChip || hasMessageReply || hasStoryReply || hasForwardedCustomShape;\n\n  const selectMessage = useLastCallback((e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => {\n    toggleMessageSelection({\n      messageId,\n      groupedId,\n      ...(e?.shiftKey && { withShift: true }),\n      ...(isAlbum && { childMessageIds: album!.messages.map(({ id }) => id) }),\n    });\n  });\n\n  const messageSender = canShowSender ? sender : undefined;\n\n  const shouldPreferOriginSender = forwardInfo\n    && (isChatWithSelf || isRepliesChat || isAnonymousForwards || !messageSender);\n  const avatarPeer = shouldPreferOriginSender ? originSender : messageSender;\n\n  const messageColorPeer = asForwarded ? originSender : sender;\n  const noUserColors = isOwn && !isCustomShape;\n\n  const senderPeer = (forwardInfo || storyData) ? originSender : messageSender;\n  const hasTtl = hasMessageTtl(message);\n\n  const {\n    handleMouseDown,\n    handleClick,\n    handleContextMenu,\n    handleDoubleClick,\n    handleContentDoubleClick,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  } = useOuterHandlers(\n    selectMessage,\n    ref,\n    messageId,\n    Boolean(isInSelectMode),\n    Boolean(canReply),\n    Boolean(isProtected),\n    onContextMenu,\n    handleBeforeContextMenu,\n    chatId,\n    isContextMenuShown,\n    quickReactionRef,\n    isInDocumentGroupNotLast,\n    getIsMessageListReady,\n  );\n\n  const {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleMediaClick,\n    handleDocumentClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll,\n    handleTopicChipClick,\n    handleStoryClick,\n  } = useInnerHandlers({\n    lang,\n    selectMessage,\n    message,\n    chatId,\n    threadId,\n    isInDocumentGroup,\n    asForwarded,\n    isScheduled,\n    album,\n    avatarPeer,\n    senderPeer,\n    botSender,\n    messageTopic,\n    isTranslatingChat: Boolean(requestedChatTranslationLanguage),\n    story: replyStory && 'content' in replyStory ? replyStory : undefined,\n    isReplyPrivate,\n    isRepliesChat,\n    isSavedMessages: isChatWithSelf,\n    lastPlaybackTimestamp,\n  });\n\n  const handleEffectClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    requestEffect();\n  });\n\n  useEffect(() => {\n    if (!isLastInList) {\n      return;\n    }\n\n    if (withVoiceTranscription && transcribedText) {\n      focusLastMessage();\n    }\n  }, [focusLastMessage, isLastInList, transcribedText, withVoiceTranscription]);\n\n  useEffect(() => {\n    const element = ref.current;\n    const isPartialAlbumDelete = message.isInAlbum && album?.messages.some((msg) => !msg.isDeleting);\n    if (message.isDeleting && element && !isPartialAlbumDelete) {\n      if (animateSnap(element)) {\n        setIsPlayingSnapAnimation(true);\n      } else {\n        setIsPlayingDeleteAnimation(true);\n      }\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- Only start animation on `isDeleting` change\n  }, [message.isDeleting]);\n\n  const textMessage = album?.hasMultipleCaptions ? undefined : (album?.captionMessage || message);\n  const hasTextContent = textMessage && hasMessageText(textMessage);\n  const hasText = hasTextContent || hasFactCheck;\n\n  const containerClassName = buildClassName(\n    'Message message-list-item',\n    isFirstInGroup && 'first-in-group',\n    isProtected && 'hide-on-print',\n    isProtected && !hasTextContent ? 'is-protected' : 'allow-selection',\n    isLastInGroup && 'last-in-group',\n    isFirstInDocumentGroup && 'first-in-document-group',\n    isLastInDocumentGroup && 'last-in-document-group',\n    isLastInList && 'last-in-list',\n    isOwn && 'own',\n    Boolean(message.viewsCount) && 'has-views',\n    message.isEdited && 'was-edited',\n    hasMessageReply && 'has-reply',\n    isContextMenuOpen && 'has-menu-open',\n    isFocused && !noFocusHighlight && 'focused',\n    isForwarding && 'is-forwarding',\n    isPlayingDeleteAnimation && 'is-deleting',\n    isPlayingSnapAnimation && 'is-dissolving',\n    isInDocumentGroup && 'is-in-document-group',\n    isAlbum && 'is-album',\n    message.hasUnreadMention && 'has-unread-mention',\n    isSelected && 'is-selected',\n    isInSelectMode && 'is-in-selection-mode',\n    isThreadTop && !withAvatar && 'is-thread-top',\n    Boolean(message.inlineButtons) && 'has-inline-buttons',\n    isSwiped && 'is-swiped',\n    isJustAdded && 'is-just-added',\n    (hasActiveReactions || shouldPlayEffect) && 'has-active-effect',\n    isStoryMention && 'is-story-mention',\n    !canShowActionButton && 'no-action-button',\n  );\n\n  const text = textMessage && getMessageContent(textMessage).text;\n  const isInvertedMedia = Boolean(message.isInvertedMedia);\n\n  const { replyToMsgId, replyToPeerId, isQuote } = messageReplyInfo || {};\n  const { peerId: storyReplyPeerId, storyId: storyReplyId } = storyReplyInfo || {};\n\n  useEffect(() => {\n    if ((sticker?.hasEffect || effect) && ((\n      memoFirstUnreadIdRef?.current && messageId >= memoFirstUnreadIdRef.current\n    ) || isLocal)) {\n      requestEffect();\n    }\n  }, [effect, isLocal, memoFirstUnreadIdRef, messageId, sticker?.hasEffect]);\n\n  const detectedLanguage = useTextLanguage(\n    text?.text,\n    !(areTranslationsEnabled || shouldDetectChatLanguage),\n    getIsMessageListReady,\n  );\n  useDetectChatLanguage(message, detectedLanguage, !shouldDetectChatLanguage, getIsMessageListReady);\n\n  const shouldTranslate = isMessageTranslatable(message, !requestedChatTranslationLanguage);\n  const { isPending: isTranslationPending, translatedText } = useMessageTranslation(\n    chatTranslations, chatId, shouldTranslate ? messageId : undefined, requestedTranslationLanguage,\n  );\n  // Used to display previous result while new one is loading\n  const previousTranslatedText = usePreviousDeprecated(translatedText, Boolean(shouldTranslate));\n\n  const currentTranslatedText = translatedText || previousTranslatedText;\n\n  const phoneCall = action?.type === 'phoneCall' ? action : undefined;\n\n  const isMediaWithCommentButton = (repliesThreadInfo || (hasLinkedChat && isChannel && isLocal))\n    && !isInDocumentGroupNotLast\n    && messageListType === 'thread'\n    && !noComments;\n  const withCommentButton = repliesThreadInfo?.isCommentsInfo\n    && !isInDocumentGroupNotLast && messageListType === 'thread'\n    && !noComments;\n  const withQuickReactionButton = !isTouchScreen && !phoneCall && !isInSelectMode && defaultReaction\n    && !isInDocumentGroupNotLast && !isStoryMention && !hasTtl;\n\n  const hasOutsideReactions = !withVoiceTranscription && hasReactions\n    && (isCustomShape || ((photo || video || storyData || (location?.mediaType === 'geo')) && !hasText));\n\n  const contentClassName = buildContentClassName(message, album, {\n    poll,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread: hasThread && !noComments,\n    forceSenderName,\n    hasCommentCounter: hasThread && repliesThreadInfo.messagesCount > 0,\n    hasCommentButton: withCommentButton,\n    hasActionButton: canForward || canFocus,\n    hasReactions,\n    isGeoLiveActive: location?.mediaType === 'geoLive' && !isGeoLiveExpired(message),\n    withVoiceTranscription,\n    peerColorClass: getPeerColorClass(messageColorPeer, noUserColors, true),\n    hasOutsideReactions,\n  });\n\n  const withAppendix = contentClassName.includes('has-appendix');\n  const emojiSize = getCustomEmojiSize(message.emojiOnlyCount);\n\n  let metaPosition!: MetaPosition;\n  if (phoneCall) {\n    metaPosition = 'none';\n  } else if (isInDocumentGroupNotLast) {\n    metaPosition = 'none';\n  } else if (hasText && !webPage && !emojiSize && !isInvertedMedia) {\n    metaPosition = 'in-text';\n  } else if (isInvertedMedia && !emojiSize && (hasFactCheck || webPage)) {\n    metaPosition = 'in-text';\n  } else {\n    metaPosition = 'standalone';\n  }\n\n  let reactionsPosition!: ReactionsPosition;\n  if (hasReactions) {\n    if (hasOutsideReactions) {\n      reactionsPosition = 'outside';\n    } else if (asForwarded) {\n      metaPosition = 'standalone';\n      reactionsPosition = 'inside';\n    } else {\n      reactionsPosition = 'inside';\n    }\n  } else {\n    reactionsPosition = 'none';\n  }\n\n  const quickReactionPosition: QuickReactionPosition = isCustomShape ? 'in-meta' : 'in-content';\n\n  useEnsureMessage(\n    replyToPeerId || chatId,\n    replyToMsgId,\n    replyMessage,\n    message.id,\n    shouldHideReply || isQuote || isReplyPrivate,\n  );\n\n  useEnsureStory(\n    storyReplyPeerId || chatId,\n    storyReplyId,\n    replyStory,\n  );\n\n  useFocusMessage({\n    elementRef: ref,\n    chatId,\n    isFocused,\n    focusDirection,\n    noFocusHighlight,\n    isResizingContainer,\n    isJustAdded,\n    isQuote: Boolean(focusedQuote),\n    scrollTargetPosition,\n  });\n\n  const viaBusinessBotTitle = viaBusinessBot ? getPeerTitle(lang, viaBusinessBot) : undefined;\n\n  const canShowPostAuthor = !message.senderId;\n  const signature = viaBusinessBotTitle || (canShowPostAuthor && message.postAuthorTitle)\n    || ((asForwarded || isChatWithSelf) && forwardInfo?.postAuthorTitle)\n    || undefined;\n\n  useMessageResizeObserver(ref, isLastInList);\n\n  useEffect(() => {\n    const bottomMarker = bottomMarkerRef.current;\n    if (!bottomMarker || !isElementInViewport(bottomMarker)) return;\n\n    if (hasUnreadReaction) {\n      animateUnreadReaction({ messageIds: [messageId] });\n    }\n\n    let unreadMentionIds: number[] = [];\n    if (message.hasUnreadMention) {\n      unreadMentionIds = [messageId];\n    }\n\n    if (album) {\n      unreadMentionIds = album.messages.filter((msg) => msg.hasUnreadMention).map((msg) => msg.id);\n    }\n\n    if (unreadMentionIds.length) {\n      markMentionsRead({ chatId, messageIds: unreadMentionIds });\n    }\n  }, [hasUnreadReaction, album, chatId, messageId, animateUnreadReaction, message.hasUnreadMention]);\n\n  const albumLayout = useMemo(() => {\n    return isAlbum\n      ? calculateAlbumLayout(isOwn, Boolean(noAvatars), album!, isMobile)\n      : undefined;\n  }, [isAlbum, isOwn, noAvatars, album, isMobile]);\n\n  const extraPadding = asForwarded && !isCustomShape ? 28 : 0;\n\n  const sizeCalculations = useMemo(() => {\n    let calculatedWidth;\n    let contentWidth: number | undefined;\n    let noMediaCorners = false;\n    let style = '';\n    let reactionsMaxWidth;\n\n    if (!isAlbum && (photo || video || invoice?.extendedMedia)) {\n      let width: number | undefined;\n      if (photo || video) {\n        const media = (photo || video);\n        if (media && !isRoundVideo) {\n          width = calculateMediaDimensions({\n            media,\n            isOwn,\n            asForwarded,\n            noAvatars,\n            isMobile,\n          }).width;\n        }\n      } else if (invoice?.extendedMedia && (\n        invoice.extendedMedia.width && invoice.extendedMedia.height\n      )) {\n        const { width: previewWidth, height: previewHeight } = invoice.extendedMedia;\n        width = calculateDimensionsForMessageMedia({\n          width: previewWidth,\n          height: previewHeight,\n          fromOwnMessage: isOwn,\n          asForwarded,\n          noAvatars,\n          isMobile,\n        }).width;\n      }\n\n      if (width) {\n        if (width < MIN_MEDIA_WIDTH_WITH_TEXT) {\n          contentWidth = width;\n        }\n        calculatedWidth = Math.max(getMinMediaWidth(text?.text, isMediaWithCommentButton), width);\n        if (!asForwarded && invoice?.extendedMedia && calculatedWidth - width > NO_MEDIA_CORNERS_THRESHOLD) {\n          noMediaCorners = true;\n        }\n      }\n    } else if (albumLayout) {\n      calculatedWidth = Math.max(\n        getMinMediaWidth(text?.text, isMediaWithCommentButton), albumLayout.containerStyle.width,\n      );\n      if (calculatedWidth - albumLayout.containerStyle.width > NO_MEDIA_CORNERS_THRESHOLD) {\n        noMediaCorners = true;\n      }\n    }\n\n    if (calculatedWidth) {\n      style = `width: ${calculatedWidth}px`;\n      reactionsMaxWidth = calculatedWidth + EXTRA_SPACE_FOR_REACTIONS;\n    } else if (sticker && !hasSubheader) {\n      const { width } = getStickerDimensions(sticker, isMobile);\n      style = `width: ${width + extraPadding}px`;\n      reactionsMaxWidth = width + EXTRA_SPACE_FOR_REACTIONS;\n    }\n\n    return {\n      contentWidth, noMediaCorners, style, reactionsMaxWidth,\n    };\n  }, [\n    albumLayout, asForwarded, extraPadding, hasSubheader, invoice?.extendedMedia, isAlbum, isMediaWithCommentButton,\n    isMobile, isOwn, noAvatars, photo, sticker, text?.text, video, isRoundVideo,\n  ]);\n\n  const {\n    contentWidth, noMediaCorners, style, reactionsMaxWidth,\n  } = sizeCalculations;\n\n  function renderMessageText(isForAnimation?: boolean) {\n    if (!textMessage) return undefined;\n    return (\n      <MessageText\n        messageOrStory={textMessage}\n        translatedText={requestedTranslationLanguage ? currentTranslatedText : undefined}\n        isForAnimation={isForAnimation}\n        focusedQuote={focusedQuote}\n        emojiSize={emojiSize}\n        highlight={highlight}\n        isProtected={isProtected}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        withTranslucentThumbs={isCustomShape}\n        isInSelectMode={isInSelectMode}\n        canBeEmpty={hasFactCheck}\n        maxTimestamp={maxTimestamp}\n        threadId={threadId}\n      />\n    );\n  }\n\n  const renderQuickReactionButton = useCallback(() => {\n    if (!defaultReaction) return undefined;\n\n    return (\n      <div\n        className={buildClassName('quick-reaction', isQuickReactionVisible && !hasActiveReactions && 'visible')}\n        onClick={handleSendQuickReaction}\n        ref={quickReactionRef}\n      >\n        <ReactionStaticEmoji\n          reaction={defaultReaction}\n          size={QUICK_REACTION_SIZE}\n          availableReactions={availableReactions}\n          observeIntersection={observeIntersectionForPlaying}\n        />\n      </div>\n    );\n  }, [\n    hasActiveReactions, availableReactions, defaultReaction, handleSendQuickReaction, isQuickReactionVisible,\n    observeIntersectionForPlaying,\n  ]);\n\n  function renderReactionsAndMeta() {\n    const meta = (\n      <MessageMeta\n        message={message}\n        isPinned={isPinned}\n        withFullDate={isChatWithSelf && !isOwn}\n        noReplies={noReplies}\n        repliesThreadInfo={repliesThreadInfo}\n        outgoingStatus={outgoingStatus}\n        signature={signature}\n        withReactionOffset={reactionsPosition === 'inside'}\n        renderQuickReactionButton={\n          withQuickReactionButton && quickReactionPosition === 'in-meta' ? renderQuickReactionButton : undefined\n        }\n        availableReactions={availableReactions}\n        isTranslated={Boolean(requestedTranslationLanguage ? currentTranslatedText : undefined)}\n        effectEmoji={effect?.emoticon}\n        onClick={handleMetaClick}\n        onEffectClick={handleEffectClick}\n        onTranslationClick={handleTranslationClick}\n        onOpenThread={handleOpenThread}\n      />\n    );\n\n    if (reactionsPosition !== 'inside') {\n      return meta;\n    }\n\n    return (\n      <Reactions\n        message={reactionMessage!}\n        threadId={threadId}\n        metaChildren={meta}\n        observeIntersection={observeIntersectionForPlaying}\n        noRecentReactors={isChannel}\n        tags={tags}\n        isCurrentUserPremium={isPremium}\n      />\n    );\n  }\n\n  function renderContent() {\n    const className = buildClassName(\n      'content-inner',\n      asForwarded && 'forwarded-message',\n      hasForwardedCustomShape && 'forwarded-custom-shape',\n      hasSubheader && 'with-subheader',\n      noMediaCorners && 'no-media-corners',\n    );\n    const hasCustomAppendix = isLastInGroup\n      && (!hasText || (isInvertedMedia && !hasFactCheck && !hasReactions)) && !withCommentButton;\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n    const shouldReadMedia = !hasTtl || !isOwn || isChatWithSelf;\n\n    return (\n      <div className={className} onDoubleClick={handleContentDoubleClick} dir=\"auto\">\n        {!asForwarded && shouldRenderSenderName() && renderSenderName()}\n        {hasSubheader && (\n          <div className=\"message-subheader\">\n            {hasTopicChip && (\n              <TopicChip\n                topic={messageTopic}\n                onClick={handleTopicChipClick}\n                className=\"message-topic\"\n              />\n            )}\n            {hasForwardedCustomShape && (\n              <div className=\"forward-custom-shape-subheader\">\n                <div className=\"message-title\">\n                  {renderForwardTitle()}\n                </div>\n                {renderSenderName(true, true)}\n              </div>\n            )}\n            {hasMessageReply && (\n              <EmbeddedMessage\n                message={replyMessage}\n                replyInfo={messageReplyInfo}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                sender={replyMessageSender}\n                senderChat={replyMessageChat}\n                forwardSender={replyMessageForwardSender}\n                chatTranslations={chatTranslations}\n                requestedChatTranslationLanguage={requestedChatTranslationLanguage}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                observeIntersectionForPlaying={observeIntersectionForPlaying}\n                onClick={handleReplyClick}\n              />\n            )}\n            {hasStoryReply && (\n              <EmbeddedStory\n                story={replyStory}\n                sender={storySender}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                onClick={handleStoryClick}\n              />\n            )}\n          </div>\n        )}\n        {sticker && observeIntersectionForLoading && observeIntersectionForPlaying && (\n          <Sticker\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            shouldLoop={shouldLoopStickers}\n            shouldPlayEffect={shouldPlayEffect}\n            withEffect={withAnimatedEffects}\n            onStopEffect={hideEffect}\n          />\n        )}\n        {hasAnimatedEmoji && animatedCustomEmoji && (\n          <AnimatedCustomEmoji\n            customEmojiId={animatedCustomEmoji}\n            withEffects={withAnimatedEffects && isUserId(chatId) && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {hasAnimatedEmoji && animatedEmoji && (\n          <AnimatedEmoji\n            emoji={animatedEmoji}\n            withEffects={withAnimatedEffects && isUserId(chatId) && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {withAnimatedEffects && effect && !isLocal && (\n          <MessageEffect\n            shouldPlay={shouldPlayEffect}\n            messageId={message.id}\n            isMirrored={!message.isOutgoing}\n            effect={effect}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onStop={hideEffect}\n          />\n        )}\n        {phoneCall && (\n          <MessagePhoneCall\n            message={message}\n            phoneCall={phoneCall}\n            chatId={chatId}\n          />\n        )}\n        {!isAlbum && isRoundVideo && !withVoiceTranscription && (\n          <RoundVideo\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            isDownloading={isDownloading}\n            onReadMedia={shouldReadMedia ? handleReadMedia : undefined}\n            onHideTranscription={setTranscriptionHidden}\n            isTranscriptionError={isTranscriptionError}\n            isTranscribed={Boolean(transcribedText)}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribing={isTranscribing}\n          />\n        )}\n        {(audio || voice || withVoiceTranscription) && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            noAvatars={noAvatars}\n            onPlay={handleAudioPlay}\n            onReadMedia={voice && shouldReadMedia ? handleReadMedia : undefined}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            isTranscribing={isTranscribing}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribed={Boolean(transcribedText)}\n            isTranscriptionError={isTranscriptionError}\n            canDownload={!isProtected}\n            onHideTranscription={setTranscriptionHidden}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n          />\n        )}\n        {document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            onMediaClick={handleDocumentClick}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {storyData && !isStoryMention && (\n          <Story\n            message={message}\n            isProtected={isProtected}\n          />\n        )}\n        {isStoryMention && <StoryMention message={message} />}\n        {contact && (\n          <Contact contact={contact} noUserColors={isOwn} />\n        )}\n        {poll && (\n          <Poll message={message} poll={poll} onSendVote={handleVoteSend} />\n        )}\n        {(giveaway || giveawayResults) && (\n          <Giveaway message={message} />\n        )}\n        {game && (\n          <Game\n            message={message}\n            canAutoLoadMedia={canAutoLoadMedia}\n          />\n        )}\n        {invoice?.extendedMedia && (\n          <InvoiceMediaPreview\n            message={message}\n            isConnected={isConnected}\n          />\n        )}\n\n        {withVoiceTranscription && (\n          <p\n            className={buildClassName(\n              'transcription',\n              !isTranscriptionHidden && isTranscriptionError && 'transcription-error',\n            )}\n            dir=\"auto\"\n          >\n            {(isTranscriptionError ? lang('NoWordsRecognized') : (\n              isTranscribing && transcribedText ? <DotAnimation content={transcribedText} /> : transcribedText\n            ))}\n          </p>\n        )}\n\n        {isInvertedMedia && renderInvertedMediaContent(hasCustomAppendix)}\n\n        {!isInvertedMedia && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {hasText && !hasAnimatedEmoji && (\n              <div className={textContentClass} dir=\"auto\">\n                {renderMessageText()}\n                {isTranslationPending && (\n                  <div className=\"translation-animation\">\n                    <div className=\"text-loading\">\n                      {renderMessageText(true)}\n                    </div>\n                  </div>\n                )}\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {metaPosition === 'in-text' && renderReactionsAndMeta()}\n              </div>\n            )}\n            {renderWebPage()}\n          </>\n        )}\n\n        {invoice && !invoice.extendedMedia && (\n          <Invoice\n            message={message}\n            shouldAffectAppendix={hasCustomAppendix && !hasReactions}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            forcedWidth={contentWidth}\n          />\n        )}\n        {location && (\n          <Location\n            message={message}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            peer={sender}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderInvertedMediaContent(hasCustomAppendix: boolean) {\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n    );\n    const footerClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n\n    const hasMediaAfterText = isAlbum || (!isAlbum && photo) || (!isAlbum && video && !isRoundVideo);\n    const hasContentAfterText = hasMediaAfterText || (!hasAnimatedEmoji && hasFactCheck);\n    const isMetaInText = metaPosition === 'in-text';\n\n    return (\n      <>\n        {renderWebPage()}\n        {hasText && !hasAnimatedEmoji && (\n          <div className={textContentClass} dir=\"auto\">\n            {renderMessageText()}\n            {isTranslationPending && (\n              <div className=\"translation-animation\">\n                <div className=\"text-loading\">\n                  {renderMessageText(true)}\n                </div>\n              </div>\n            )}\n            {!hasContentAfterText && isMetaInText && renderReactionsAndMeta()}\n          </div>\n        )}\n\n        {hasContentAfterText && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {!hasAnimatedEmoji && (\n              <div className={footerClass} dir=\"auto\">\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {isMetaInText && renderReactionsAndMeta()}\n              </div>\n            )}\n          </>\n        )}\n\n      </>\n    );\n  }\n\n  function renderWebPage() {\n    return webPage && (\n      <WebPage\n        message={message}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        noAvatars={noAvatars}\n        canAutoLoad={canAutoLoadMedia}\n        canAutoPlay={canAutoPlayMedia}\n        asForwarded={asForwarded}\n        isDownloading={isDownloading}\n        isProtected={isProtected}\n        theme={theme}\n        story={webPageStory}\n        isConnected={isConnected}\n        lastPlaybackTimestamp={lastPlaybackTimestamp}\n        backgroundEmojiId={messageColorPeer?.color?.backgroundEmojiId}\n        shouldWarnAboutSvg={shouldWarnAboutSvg}\n        autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n        onAudioPlay={handleAudioPlay}\n        onMediaClick={handleMediaClick}\n        onDocumentClick={handleDocumentClick}\n        onCancelMediaTransfer={handleCancelUpload}\n      />\n    );\n  }\n\n  function renderInvertibleMediaContent(hasCustomAppendix: boolean) {\n    const content = (\n      <>\n        {isAlbum && observeIntersectionForLoading && (\n          <Album\n            album={album!}\n            albumLayout={albumLayout!}\n            observeIntersection={observeIntersectionForLoading}\n            isOwn={isOwn}\n            isProtected={isProtected}\n            hasCustomAppendix={hasCustomAppendix}\n            onMediaClick={handleAlbumMediaClick}\n          />\n        )}\n        {!isAlbum && photo && (\n          <Photo\n            messageText={text?.text}\n            photo={photo}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            uploadProgress={uploadProgress}\n            shouldAffectAppendix={hasCustomAppendix}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            theme={theme}\n            forcedWidth={contentWidth}\n            onClick={handlePhotoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n        {!isAlbum && video && !isRoundVideo && (\n          <Video\n            video={video}\n            isOwn={isOwn}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            forcedWidth={contentWidth}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            canAutoPlay={canAutoPlayMedia}\n            uploadProgress={uploadProgress}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            lastPlaybackTimestamp={lastPlaybackTimestamp}\n            onClick={handleVideoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n      </>\n    );\n\n    if (paidMedia) {\n      return (\n        <PaidMediaOverlay chatId={chatId} messageId={messageId} paidMedia={paidMedia} isOutgoing={isOwn}>\n          {content}\n        </PaidMediaOverlay>\n      );\n    }\n\n    return content;\n  }\n\n  function shouldRenderSenderName() {\n    const media = photo || video || location || paidMedia;\n    return !(isCustomShape && !viaBotId) && (\n      (withSenderName && (!media || hasTopicChip)) || asForwarded || viaBotId || forceSenderName\n    ) && !isInDocumentGroupNotFirst && !(hasMessageReply && isCustomShape);\n  }\n\n  function renderForwardTitle() {\n    return (\n      <span className=\"forward-title-container\">\n        {asForwarded && (\n          <Icon name={forwardInfo?.hiddenUserName ? 'forward' : 'share-filled'} />\n        )}\n        {asForwarded && (\n          <span className=\"forward-title\">\n            {lang('ForwardedFrom')}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderSenderName(shouldSkipRenderForwardTitle:boolean = false, shouldSkipRenderAdminTitle: boolean = false) {\n    let senderTitle;\n    let senderColor;\n    if (senderPeer && !(isCustomShape && viaBotId)) {\n      senderTitle = getPeerTitle(lang, senderPeer);\n    } else if (forwardInfo?.hiddenUserName) {\n      senderTitle = forwardInfo.hiddenUserName;\n    } else if (storyData && originSender) {\n      senderTitle = getPeerTitle(lang, originSender!);\n    }\n    const senderEmojiStatus = senderPeer && 'emojiStatus' in senderPeer && senderPeer.emojiStatus;\n    const senderIsPremium = senderPeer && 'isPremium' in senderPeer && senderPeer.isPremium;\n\n    const shouldRenderForwardAvatar = asForwarded && senderPeer;\n    const hasBotSenderUsername = botSender?.usernames?.length;\n    return (\n      <div className=\"message-title\" dir=\"ltr\">\n        {(senderTitle || asForwarded) ? (\n          <span\n            className={buildClassName(\n              'message-title-name-container',\n              forwardInfo?.hiddenUserName ? 'sender-hidden' : 'interactive',\n              senderColor,\n            )}\n            dir=\"ltr\"\n          >\n            {!shouldSkipRenderForwardTitle && renderForwardTitle()}\n            <span className=\"message-title-name\">\n              {storyData && <Icon name=\"play-story\" />}\n              {shouldRenderForwardAvatar && (\n                <Avatar\n                  className=\"forward-avatar\"\n                  peer={senderPeer}\n                  size=\"micro\"\n                />\n              )}\n              <span\n                className=\"sender-title\"\n                onClick={handleSenderClick}\n              >\n                {senderTitle ? renderText(senderTitle) : (asForwarded ? NBSP : undefined)}\n              </span>\n              {!asForwarded && senderEmojiStatus && (\n                <CustomEmoji\n                  documentId={senderEmojiStatus.documentId}\n                  className=\"no-selection\"\n                  loopLimit={EMOJI_STATUS_LOOP_LIMIT}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                />\n              )}\n              {!asForwarded && !senderEmojiStatus && senderIsPremium && <StarIcon />}\n              {senderPeer?.fakeType && <FakeIcon fakeType={senderPeer.fakeType} />}\n            </span>\n          </span>\n        ) : !botSender ? (\n          NBSP\n        ) : undefined}\n        {botSender?.usernames?.length && (\n          <span className=\"interactive\">\n            <span className=\"via\">{lang('ViaBot')}</span>\n            <span\n              className=\"sender-title\"\n              onClick={handleViaBotClick}\n            >\n              {renderText(`@${botSender.usernames[0].username}`)}\n            </span>\n          </span>\n        )}\n        <div className=\"title-spacer\" />\n        {!shouldSkipRenderAdminTitle && !hasBotSenderUsername ? (forwardInfo?.isLinkedChannelPost ? (\n          <span className=\"admin-title\" dir=\"auto\">{lang('DiscussChannel')}</span>\n        ) : message.postAuthorTitle && isGroup && !asForwarded ? (\n          <span className=\"admin-title\" dir=\"auto\">{message.postAuthorTitle}</span>\n        ) : senderAdminMember && !asForwarded && !viaBotId ? (\n          <span className=\"admin-title\" dir=\"auto\">\n            {senderAdminMember.customTitle || lang(\n              senderAdminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin',\n            )}\n          </span>\n        ) : undefined) : undefined}\n        {canShowSenderBoosts && (\n          <span className=\"sender-boosts\" aria-hidden>\n            <Icon name={senderBoosts > 1 ? 'boosts' : 'boost'} />\n            {senderBoosts > 1 ? senderBoosts : undefined}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  const forwardAuthor = isGroup && asForwarded ? message.postAuthorTitle : undefined;\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={containerClassName}\n      data-message-id={messageId}\n      onCopy={isProtected ? stopEvent : undefined}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n      onDoubleClick={handleDoubleClick}\n      onMouseEnter={isInDocumentGroupNotLast ? handleDocumentGroupMouseEnter : undefined}\n      onMouseMove={withQuickReactionButton ? handleMouseMove : undefined}\n      onMouseLeave={(withQuickReactionButton || isInDocumentGroupNotLast) ? handleMouseLeave : undefined}\n    >\n      <div\n        ref={bottomMarkerRef}\n        className=\"bottom-marker\"\n        data-message-id={messageId}\n        data-last-message-id={album ? album.messages[album.messages.length - 1].id : undefined}\n        data-album-main-id={album ? album.mainMessage.id : undefined}\n        data-has-unread-mention={message.hasUnreadMention || undefined}\n        data-has-unread-reaction={hasUnreadReaction || undefined}\n        data-is-pinned={isPinned || undefined}\n        data-should-update-views={message.viewsCount !== undefined}\n      />\n      {!isInDocumentGroup && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {isLastInDocumentGroup && (\n        <div\n          className={buildClassName(\n            'message-select-control group-select no-selection', isGroupSelected && 'is-selected',\n          )}\n          onClick={handleDocumentGroupSelectAll}\n        >\n          {isGroupSelected && (\n            <Icon name=\"select\" />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName('message-content-wrapper',\n          contentClassName.includes('text') && 'can-select-text',\n          contentClassName.includes('giveaway') && 'giveaway-result-content')}\n      >\n        <div\n          className={contentClassName}\n          style={style}\n          dir=\"auto\"\n        >\n          {asForwarded && !isInDocumentGroupNotFirst && (\n            <>\n              {shouldRenderSenderName() && renderSenderName()}\n              {forwardAuthor && <span className=\"admin-title\" dir=\"auto\">{forwardAuthor}</span>}\n            </>\n          )}\n          {renderContent()}\n          {!isInDocumentGroupNotLast && metaPosition === 'standalone' && !isStoryMention && renderReactionsAndMeta()}\n          {canShowActionButton && (\n            <div className={buildClassName(\n              'message-action-buttons',\n              isLoadingComments && 'message-action-buttons-shown',\n            )}\n            >\n              {withCommentButton && isCustomShape && (\n                <CommentButton\n                  threadInfo={repliesThreadInfo}\n                  disabled={noComments}\n                  isLoading={isLoadingComments}\n                  isCustomShape\n                  asActionButton\n                />\n              )}\n              {canForward && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel={lang('lng_context_forward_msg')}\n                  onClick={isLastInDocumentGroup ? handleGroupForward : handleForward}\n                >\n                  <Icon name=\"share-filled\" />\n                </Button>\n              )}\n              {canFocus && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel=\"Focus message\"\n                  onClick={isPinnedList ? handleFocus : handleFocusForwarded}\n                >\n                  <Icon name=\"arrow-right\" />\n                </Button>\n              )}\n            </div>\n          )}\n          {withCommentButton && !(canShowActionButton && isCustomShape) && (\n            <CommentButton\n              threadInfo={repliesThreadInfo}\n              disabled={noComments}\n              isLoading={isLoadingComments}\n            />\n          )}\n          {withAppendix && <MessageAppendix isOwn={isOwn} />}\n          {withQuickReactionButton && quickReactionPosition === 'in-content' && renderQuickReactionButton()}\n        </div>\n        {message.inlineButtons && (\n          <InlineButtons message={message} onClick={clickBotInlineButton} />\n        )}\n        {reactionsPosition === 'outside' && !isStoryMention && (\n          <Reactions\n            message={reactionMessage!}\n            threadId={threadId}\n            isOutside\n            isCurrentUserPremium={isPremium}\n            maxWidth={reactionsMaxWidth}\n            observeIntersection={observeIntersectionForPlaying}\n            noRecentReactors={isChannel}\n            tags={tags}\n          />\n        )}\n      </div>\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          targetHref={contextMenuTarget?.matches('a[href]') ? (contextMenuTarget as HTMLAnchorElement).href : undefined}\n          message={message}\n          album={album}\n          messageListType={messageListType}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          repliesThreadInfo={repliesThreadInfo}\n          noReplies={noReplies}\n          detectedLanguage={detectedLanguage}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): StateProps => {\n    const {\n      focusedMessage, forwardMessages, activeReactions, activeEmojiInteractions,\n      loadingThread,\n    } = selectTabState(global);\n    const {\n      message, album, withSenderName, withAvatar, threadId, messageListType, isLastInDocumentGroup, isFirstInGroup,\n    } = ownProps;\n    const {\n      id, chatId, viaBotId, isOutgoing, forwardInfo, transcriptionId, isPinned, viaBusinessBotId, effectId,\n    } = message;\n\n    const chat = selectChat(global, chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isSystemBotChat = isSystemBot(chatId);\n    const isAnonymousForwards = isAnonymousForwardsChat(chatId);\n    const isChannel = chat && isChatChannel(chat);\n    const isGroup = chat && isChatGroup(chat);\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const webPageStoryData = message.content.webPage?.story;\n    const webPageStory = webPageStoryData\n      ? selectPeerStory(global, webPageStoryData.peerId, webPageStoryData.id)\n      : undefined;\n\n    const isForwarding = forwardMessages.messageIds && forwardMessages.messageIds.includes(id);\n    const forceSenderName = !isChatWithSelf && isAnonymousOwnMessage(message);\n    const canShowSender = withSenderName || withAvatar || forceSenderName;\n    const sender = selectSender(global, message);\n    const originSender = selectForwardedSender(global, message);\n    const botSender = viaBotId ? selectUser(global, viaBotId) : undefined;\n    const senderAdminMember = sender?.id && isGroup\n      ? chatFullInfo?.adminMembersById?.[sender?.id]\n      : undefined;\n\n    const isThreadTop = message.id === threadId;\n\n    const { replyToMsgId, replyToPeerId, replyFrom } = getMessageReplyInfo(message) || {};\n    const { peerId: storyReplyPeerId, storyId: storyReplyId } = getStoryReplyInfo(message) || {};\n\n    const shouldHideReply = replyToMsgId && replyToMsgId === threadId;\n    const replyMessage = selectReplyMessage(global, message);\n    const forwardHeader = forwardInfo || replyFrom;\n    const replyMessageSender = replyMessage ? selectSender(global, replyMessage)\n      : forwardHeader && !isSystemBotChat && !isAnonymousForwards\n        ? selectSenderFromHeader(global, forwardHeader) : undefined;\n    const replyMessageForwardSender = replyMessage && selectForwardedSender(global, replyMessage);\n    const replyMessageChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n    const isReplyPrivate = !isSystemBotChat && !isAnonymousForwards && replyMessageChat\n      && !isChatPublic(replyMessageChat)\n      && (replyMessageChat.isNotJoined || replyMessageChat.isRestricted);\n    const isReplyToTopicStart = replyMessage?.content.action?.type === 'topicCreate';\n    const replyStory = storyReplyId && storyReplyPeerId\n      ? selectPeerStory(global, storyReplyPeerId, storyReplyId)\n      : undefined;\n    const storySender = storyReplyPeerId ? selectPeer(global, storyReplyPeerId) : undefined;\n\n    const uploadProgress = selectUploadProgress(global, message);\n    const isFocused = messageListType === 'thread' && (\n      album\n        ? album.messages.some((m) => selectIsMessageFocused(global, m, threadId))\n        : selectIsMessageFocused(global, message, threadId)\n    );\n\n    const {\n      direction: focusDirection, noHighlight: noFocusHighlight, isResizingContainer,\n      quote: focusedQuote, scrollTargetPosition,\n    } = (isFocused && focusedMessage) || {};\n\n    const middleSearch = selectCurrentMiddleSearch(global);\n    const highlight = middleSearch?.results?.query\n      && `${middleSearch.isHashtag ? '#' : ''}${middleSearch.results.query}`;\n\n    const singleEmoji = getMessageSingleRegularEmoji(message);\n    const animatedEmoji = singleEmoji && selectAnimatedEmoji(global, singleEmoji) ? singleEmoji : undefined;\n    const animatedCustomEmoji = getMessageSingleCustomEmoji(message);\n\n    let isSelected: boolean;\n    if (album?.messages) {\n      isSelected = album.messages.every(({ id: messageId }) => selectIsMessageSelected(global, messageId));\n    } else {\n      isSelected = selectIsMessageSelected(global, id);\n    }\n\n    const canReply = messageListType === 'thread' && selectCanReplyToMessage(global, message, threadId);\n    const activeDownloads = selectActiveDownloads(global);\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    const isDownloading = downloadableMedia && getIsDownloading(activeDownloads, downloadableMedia);\n\n    const repliesThreadInfo = selectThreadInfo(global, chatId, album?.commentsMessage?.id || id);\n\n    const isInDocumentGroup = Boolean(message.groupedId) && !message.isInAlbum;\n    const documentGroupFirstMessageId = isInDocumentGroup\n      ? selectMessageIdsByGroupId(global, chatId, message.groupedId!)![0]\n      : undefined;\n    const reactionMessage = isInDocumentGroup ? (\n      isLastInDocumentGroup ? selectChatMessage(global, chatId, documentGroupFirstMessageId!) : undefined\n    ) : message;\n\n    const hasUnreadReaction = chat?.unreadReactions?.includes(message.id);\n\n    const hasTopicChip = threadId === MAIN_THREAD_ID && chat?.isForum && isFirstInGroup;\n    const messageTopic = hasTopicChip ? selectTopicFromMessage(global, message) : undefined;\n\n    const chatTranslations = selectChatTranslations(global, chatId);\n\n    const requestedTranslationLanguage = selectRequestedMessageTranslationLanguage(global, chatId, message.id);\n    const requestedChatTranslationLanguage = selectRequestedChatTranslationLanguage(global, chatId);\n\n    const areTranslationsEnabled = IS_TRANSLATION_SUPPORTED && global.settings.byKey.canTranslate\n      && !requestedChatTranslationLanguage; // Stop separate language detection if chat translation is requested\n\n    const isConnected = global.connectionState === 'connectionStateReady';\n\n    const hasActiveReactions = Boolean(reactionMessage && activeReactions[getMessageKey(reactionMessage)]?.length);\n\n    const isPremium = selectIsCurrentUserPremium(global);\n    const senderBoosts = sender && selectIsChatWithSelf(global, sender.id)\n      ? (chatFullInfo?.boostsApplied ?? message.senderBoosts) : message.senderBoosts;\n\n    const chatLevel = chat?.boostLevel || 0;\n    const transcribeMinLevel = global.appConfig?.groupTranscribeLevelMin;\n    const canTranscribeVoice = isPremium || Boolean(transcribeMinLevel && chatLevel >= transcribeMinLevel);\n\n    const viaBusinessBot = viaBusinessBotId ? selectUser(global, viaBusinessBotId) : undefined;\n\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n\n    const poll = selectPollFromMessage(global, message);\n\n    const maxTimestamp = selectMessageTimestampableDuration(global, message);\n\n    const lastPlaybackTimestamp = selectMessageLastPlaybackTimestamp(global, chatId, message.id);\n\n    return {\n      theme: selectTheme(global),\n      forceSenderName,\n      sender,\n      canShowSender,\n      originSender,\n      botSender,\n      shouldHideReply: shouldHideReply || isReplyToTopicStart,\n      isThreadTop,\n      replyMessage,\n      replyMessageSender,\n      replyMessageForwardSender,\n      replyMessageChat,\n      replyStory,\n      isReplyPrivate,\n      storySender,\n      isInDocumentGroup,\n      isProtected: selectIsMessageProtected(global, message),\n      isChatProtected: selectIsChatProtected(global, chatId),\n      isFocused,\n      isForwarding,\n      reactionMessage,\n      isChatWithSelf,\n      isRepliesChat: isSystemBotChat,\n      isAnonymousForwards,\n      isChannel,\n      isGroup,\n      canReply,\n      highlight,\n      animatedEmoji,\n      animatedCustomEmoji,\n      isInSelectMode: selectIsInSelectMode(global),\n      isSelected,\n      isGroupSelected: (\n        Boolean(message.groupedId)\n        && !message.isInAlbum\n        && selectIsDocumentGroupSelected(global, chatId, message.groupedId)\n      ),\n      threadId,\n      isDownloading,\n      isPinnedList: messageListType === 'pinned',\n      isPinned,\n      canAutoLoadMedia: selectCanAutoLoadMedia(global, message),\n      canAutoPlayMedia: selectCanAutoPlayMedia(global, message),\n      autoLoadFileMaxSizeMb: global.settings.byKey.autoLoadFileMaxSizeMb,\n      shouldLoopStickers: selectShouldLoopStickers(global),\n      repliesThreadInfo,\n      availableReactions: global.reactions.availableReactions,\n      defaultReaction: isMessageLocal(message) || messageListType === 'scheduled'\n        ? undefined : selectDefaultReaction(global, chatId),\n      hasActiveReactions,\n      activeEmojiInteractions,\n      hasUnreadReaction,\n      isTranscribing: transcriptionId !== undefined && global.transcriptions[transcriptionId]?.isPending,\n      transcribedText: transcriptionId !== undefined ? global.transcriptions[transcriptionId]?.text : undefined,\n      isPremium,\n      senderAdminMember,\n      messageTopic,\n      hasTopicChip,\n      chatTranslations,\n      areTranslationsEnabled,\n      shouldDetectChatLanguage: selectShouldDetectChatLanguage(global, chatId),\n      requestedTranslationLanguage,\n      requestedChatTranslationLanguage,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      withAnimatedEffects: selectPerformanceSettingsValue(global, 'stickerEffects'),\n      webPageStory,\n      isConnected,\n      isLoadingComments: repliesThreadInfo?.isCommentsInfo\n        && loadingThread?.loadingChatId === repliesThreadInfo?.originChannelId\n        && loadingThread?.loadingMessageId === repliesThreadInfo?.originMessageId,\n      shouldWarnAboutSvg: global.settings.byKey.shouldWarnAboutSvg,\n      ...(isOutgoing && { outgoingStatus: selectOutgoingStatus(global, message, messageListType === 'scheduled') }),\n      ...(typeof uploadProgress === 'number' && { uploadProgress }),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n        isResizingContainer,\n        focusedQuote,\n        scrollTargetPosition,\n      }),\n      senderBoosts,\n      tags: global.savedReactionTags?.byKey,\n      canTranscribeVoice,\n      viaBusinessBot,\n      effect,\n      poll,\n      maxTimestamp,\n      lastPlaybackTimestamp,\n    };\n  },\n)(Message));\n","import { getActions } from '../../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiStory, ApiTopic, ApiUser,\n} from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IAlbum, ThreadId } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\nimport { MediaViewerOrigin } from '../../../../types';\n\nimport { getMessagePhoto, getMessageWebPagePhoto } from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport { tryParseDeepLink } from '../../../../util/deepLinkParser';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useInnerHandlers({\n  lang,\n  selectMessage,\n  message,\n  chatId,\n  threadId,\n  isInDocumentGroup,\n  asForwarded,\n  isScheduled,\n  album,\n  senderPeer,\n  botSender,\n  messageTopic,\n  isTranslatingChat,\n  story,\n  isReplyPrivate,\n  isRepliesChat,\n  isSavedMessages,\n  lastPlaybackTimestamp,\n}: {\n  lang: OldLangFn;\n  selectMessage: (e: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void;\n  message: ApiMessage;\n  chatId: string;\n  threadId: ThreadId;\n  isInDocumentGroup: boolean;\n  asForwarded?: boolean;\n  isScheduled?: boolean;\n  album?: IAlbum;\n  avatarPeer?: ApiPeer;\n  senderPeer?: ApiPeer;\n  botSender?: ApiUser;\n  messageTopic?: ApiTopic;\n  isTranslatingChat?: boolean;\n  story?: ApiStory;\n  isReplyPrivate?: boolean;\n  isRepliesChat?: boolean;\n  isSavedMessages?: boolean;\n  lastPlaybackTimestamp?: number;\n}) {\n  const {\n    openChat, showNotification, focusMessage, openMediaViewer, openAudioPlayer,\n    markMessagesRead, cancelUploadMedia, sendPollVote, openForwardMenu,\n    openChatLanguageModal, openThread, openStoryViewer, searchChatMediaMessages,\n  } = getActions();\n\n  const {\n    id: messageId, forwardInfo, groupedId, content: { paidMedia, video, webPage },\n  } = message;\n\n  const {\n    replyToMsgId, replyToPeerId, replyToTopId, isQuote, quoteText,\n  } = getMessageReplyInfo(message) || {};\n\n  const handleSenderClick = useLastCallback(() => {\n    if (!senderPeer) {\n      showNotification({ message: lang('HidAccount') });\n\n      return;\n    }\n\n    if (asForwarded && forwardInfo?.channelPostId) {\n      focusMessage({ chatId: senderPeer.id, messageId: forwardInfo.channelPostId });\n    } else {\n      openChat({ id: senderPeer.id });\n    }\n  });\n\n  const handleViaBotClick = useLastCallback(() => {\n    if (!botSender) {\n      return;\n    }\n\n    openChat({ id: botSender.id });\n  });\n\n  const handleReplyClick = useLastCallback((): void => {\n    if (!replyToMsgId || isReplyPrivate) {\n      showNotification({\n        message: isQuote ? lang('QuotePrivate') : lang('ReplyPrivate'),\n      });\n      return;\n    }\n\n    if (isRepliesChat && replyToPeerId && replyToTopId) {\n      openThread({\n        isComments: true,\n        originChannelId: replyToPeerId,\n        originMessageId: replyToTopId,\n        focusMessageId: replyToMsgId,\n      });\n      return;\n    }\n\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: isRepliesChat ? replyToTopId : threadId, // Open comments from Replies bot, otherwise, keep current thread\n      messageId: replyToMsgId,\n      replyMessageId: replyToPeerId ? undefined : messageId,\n      noForumTopicPanel: !replyToPeerId, // Open topic panel for cross-chat replies\n      ...(isQuote && { quote: quoteText?.text }),\n    });\n  });\n\n  const handleDocumentClick = useLastCallback((): void => {\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n    });\n  });\n\n  const openMediaViewerWithPhotoOrVideo = useLastCallback((withDynamicLoading: boolean): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n    if (withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    }\n\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage.url);\n\n    const videoContent = video || webPage?.video;\n    const webpageTimestamp = parsedLink && 'timestamp' in parsedLink ? parsedLink.timestamp : undefined;\n\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n      timestamp: lastPlaybackTimestamp || videoContent?.timestamp || webpageTimestamp,\n      withDynamicLoading,\n    });\n  });\n  const handlePhotoMediaClick = useLastCallback((): void => {\n    const withDynamicLoading = !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n  const handleVideoMediaClick = useLastCallback(() => {\n    const isGif = message.content?.video?.isGif;\n    const withDynamicLoading = !isGif && !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n\n  const handleMediaClick = useLastCallback((): void => {\n    const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n    if (photo) {\n      handlePhotoMediaClick();\n    }\n\n    handleVideoMediaClick();\n  });\n\n  const handleAudioPlay = useLastCallback((): void => {\n    openAudioPlayer({ chatId, messageId });\n  });\n\n  const handleAlbumMediaClick = useLastCallback((albumMessageId: number, albumIndex?: number): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n\n    searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId: albumMessageId,\n      mediaIndex: albumIndex,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledAlbum : MediaViewerOrigin.Album,\n      withDynamicLoading: !paidMedia,\n    });\n  });\n\n  const handleReadMedia = useLastCallback((): void => {\n    markMessagesRead({ messageIds: [messageId] });\n  });\n\n  const handleCancelUpload = useLastCallback(() => {\n    cancelUploadMedia({ chatId, messageId });\n  });\n\n  const handleVoteSend = useLastCallback((options: string[]) => {\n    sendPollVote({ chatId, messageId, options });\n  });\n\n  const handleGroupForward = useLastCallback(() => {\n    openForwardMenu({ fromChatId: chatId, groupedId });\n  });\n\n  const handleForward = useLastCallback(() => {\n    if (album && album.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: chatId, messageIds: [messageId] });\n    }\n  });\n\n  const handleFocus = useLastCallback(() => {\n    focusMessage({\n      chatId, threadId: MAIN_THREAD_ID, messageId,\n    });\n  });\n\n  const handleFocusForwarded = useLastCallback(() => {\n    const originalChatId = (isSavedMessages && forwardInfo!.savedFromPeerId) || forwardInfo!.fromChatId!;\n\n    if (isInDocumentGroup) {\n      focusMessage({\n        chatId: originalChatId, groupedId, groupedChatId: chatId, messageId: forwardInfo!.fromMessageId!,\n      });\n      return;\n    }\n\n    if (replyToPeerId && replyToTopId) {\n      if (isRepliesChat) {\n        openThread({\n          isComments: true,\n          originChannelId: replyToPeerId,\n          originMessageId: replyToTopId,\n          focusMessageId: forwardInfo!.fromMessageId!,\n        });\n      } else {\n        focusMessage({\n          chatId: replyToPeerId,\n          threadId: replyToTopId,\n          messageId: forwardInfo!.fromMessageId!,\n        });\n      }\n    } else {\n      focusMessage({\n        chatId: originalChatId, messageId: forwardInfo!.fromMessageId!,\n      });\n    }\n  });\n\n  const selectWithGroupedId = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    selectMessage(e, groupedId);\n  });\n\n  const handleTranslationClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    openChatLanguageModal({ chatId, messageId: !isTranslatingChat ? messageId : undefined });\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n  });\n\n  const handleTopicChipClick = useLastCallback(() => {\n    if (!messageTopic) return;\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: messageTopic.id,\n      messageId,\n    });\n  });\n\n  const handleStoryClick = useLastCallback(() => {\n    if (!story) return;\n    openStoryViewer({\n      peerId: story.peerId,\n      storyId: story.id,\n      isSingleStory: true,\n    });\n  });\n\n  return {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleDocumentClick,\n    handleMediaClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick: selectWithGroupedId,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll: selectWithGroupedId,\n    handleTopicChipClick,\n    handleStoryClick,\n  };\n}\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport { detectLanguage } from '../util/languageDetection';\n\nexport default function useTextLanguage(text?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>) {\n  const [language, setLanguage] = useState<string | undefined>();\n\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    if (text) {\n      detectLanguage(text).then(setLanguage);\n    } else {\n      setLanguage(undefined);\n    }\n  }, [isDisabled, text, getIsReady]);\n\n  return language;\n}\n","import type { ApiMessage, ApiPoll } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { EMOJI_SIZES, MESSAGE_CONTENT_CLASS_NAME } from '../../../../config';\nimport { getMessageContent } from '../../../../global/helpers';\nimport getSingularPaidMedia from './getSingularPaidMedia';\n\nexport function buildContentClassName(\n  message: ApiMessage,\n  album?: IAlbum,\n  {\n    poll,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread,\n    forceSenderName,\n    hasCommentCounter,\n    hasCommentButton,\n    hasActionButton,\n    hasReactions,\n    isGeoLiveActive,\n    withVoiceTranscription,\n    peerColorClass,\n    hasOutsideReactions,\n  }: {\n    poll?: ApiPoll;\n    hasSubheader?: boolean;\n    isCustomShape?: boolean | number;\n    isLastInGroup?: boolean;\n    asForwarded?: boolean;\n    hasThread?: boolean;\n    forceSenderName?: boolean;\n    hasCommentCounter?: boolean;\n    hasCommentButton?: boolean;\n    hasActionButton?: boolean;\n    hasReactions?: boolean;\n    isGeoLiveActive?: boolean;\n    withVoiceTranscription?: boolean;\n    peerColorClass?: string;\n    hasOutsideReactions?: boolean;\n  } = {},\n) {\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const content = getMessageContent(message);\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo,\n    audio, voice, document, webPage, contact, location, invoice, storyData,\n    giveaway, giveawayResults,\n  } = content;\n  const text = album?.hasMultipleCaptions ? undefined : getMessageContent(album?.captionMessage || message).text;\n  const hasFactCheck = Boolean(message.factCheck?.text);\n\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isInvertedMedia = message.isInvertedMedia;\n  const isInvertibleMedia = photo || (video && !isRoundVideo) || album || webPage;\n\n  const classNames = [MESSAGE_CONTENT_CLASS_NAME];\n  const isMedia = storyData || photo || video || location || invoice?.extendedMedia || paidMedia;\n  const hasText = text || location?.mediaType === 'venue' || isGeoLiveActive || hasFactCheck;\n  const isMediaWithNoText = isMedia && !hasText;\n  const hasInlineKeyboard = Boolean(message.inlineButtons);\n  const isViaBot = Boolean(message.viaBotId);\n\n  const hasFooter = (() => {\n    if (isInvertedMedia && isInvertibleMedia) {\n      if (hasReactions && !hasOutsideReactions) return true;\n      if (hasFactCheck) return true;\n      if (webPage && hasText) return true;\n      return false;\n    }\n    return hasText;\n  })();\n\n  if (peerColorClass) {\n    classNames.push(peerColorClass);\n  }\n\n  if (!isMedia && message.emojiOnlyCount) {\n    classNames.push('emoji-only');\n    if (message.emojiOnlyCount <= EMOJI_SIZES) {\n      classNames.push(`emoji-only-${message.emojiOnlyCount}`);\n    }\n  } else if (hasText) {\n    classNames.push('text');\n  } else {\n    classNames.push('no-text');\n  }\n\n  if (!Object.keys(content).length) {\n    classNames.push('unsupported');\n  }\n\n  if (hasActionButton) {\n    classNames.push('has-action-button');\n  }\n\n  if (isCustomShape) {\n    classNames.push('custom-shape');\n\n    if (isRoundVideo) {\n      classNames.push('round');\n    }\n\n    if (hasCommentCounter) {\n      classNames.push('has-comment-counter');\n    }\n  }\n  if (isMedia && !withVoiceTranscription) {\n    classNames.push('media');\n  } else if (video) {\n    classNames.push('video');\n  } else if (audio) {\n    classNames.push('audio');\n  } else if (voice) {\n    classNames.push('voice');\n    if (withVoiceTranscription) {\n      classNames.push('with-voice-transcription');\n    }\n  } else if (document) {\n    classNames.push('document');\n  } else if (contact) {\n    classNames.push('contact');\n  } else if (poll) {\n    classNames.push('poll');\n  } else if (giveaway || giveawayResults) {\n    classNames.push('giveaway');\n  } else if (webPage) {\n    classNames.push('web-page');\n\n    if (webPage.photo || webPage.video) {\n      classNames.push('media');\n    }\n\n    if (webPage.document) {\n      classNames.push('document');\n    }\n\n    if (webPage.gift) {\n      classNames.push('gift');\n    }\n  }\n\n  if (invoice && !invoice.extendedMedia) {\n    classNames.push('invoice');\n  }\n\n  if (invoice && invoice.photo) {\n    classNames.push('has-photo');\n  }\n\n  if (storyData) {\n    classNames.push('story');\n  }\n\n  if (asForwarded) {\n    classNames.push('is-forwarded');\n  }\n\n  if (hasSubheader) {\n    classNames.push('has-subheader');\n  }\n\n  if (hasThread) {\n    classNames.push('has-replies');\n  }\n\n  if (hasReactions) {\n    classNames.push('has-reactions');\n  }\n\n  if (hasOutsideReactions) {\n    classNames.push('has-outside-reactions');\n  }\n\n  if (isViaBot) {\n    classNames.push('is-via-bot');\n  }\n\n  if (forceSenderName) {\n    classNames.push('force-sender-name');\n  }\n\n  if (!isCustomShape) {\n    classNames.push('has-shadow');\n\n    if (isMedia && hasThread) {\n      classNames.push('has-background');\n    }\n\n    if (hasSubheader || asForwarded || isViaBot || !isMediaWithNoText\n      || forceSenderName || hasFactCheck || withVoiceTranscription) {\n      classNames.push('has-solid-background');\n    }\n\n    if (hasFactCheck) {\n      classNames.push('has-fact-check');\n    }\n\n    if (isLastInGroup && !hasInlineKeyboard && (photo || !isMediaWithNoText || hasCommentButton)) {\n      classNames.push('has-appendix');\n    }\n  }\n\n  if (isInvertibleMedia && isInvertedMedia) {\n    classNames.push('is-inverted-media');\n  }\n\n  if (hasFooter) {\n    classNames.push('has-footer');\n  } else {\n    classNames.push('no-footer');\n  }\n\n  return classNames.join(' ');\n}\n","import React from '../../../lib/teact/teact';\n\ninterface OwnProps {\n  isOwn?: boolean;\n}\n\nfunction MessageAppendix({ isOwn } : OwnProps) {\n  const path = isOwn\n    ? 'M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z'\n    : 'M3 17h6V0c-.193 2.84-.876 5.767-2.05 8.782-.904 2.325-2.446 4.485-4.625 6.48A1 1 0 003 17z';\n  return (\n    <svg width=\"9\" height=\"20\" className=\"svg-appendix\">\n      <defs>\n        <filter x=\"-50%\" y=\"-14.7%\" width=\"200%\" height=\"141.2%\" filterUnits=\"objectBoundingBox\" id=\"messageAppendix\">\n          <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n          <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n          <feColorMatrix\n            values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n            in=\"shadowBlurOuter1\"\n          />\n        </filter>\n      </defs>\n      <g fill=\"none\" fill-rule=\"evenodd\">\n        <path d={path} fill=\"#000\" filter=\"url(#messageAppendix)\" />\n        <path d={path} fill={isOwn ? '#EEFFDE' : 'FFF'} className=\"corner\" />\n      </g>\n    </svg>\n  );\n}\n\nexport default MessageAppendix;\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const anchorRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || photo.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, photo]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {fullMediaData && (\n        <img\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <Icon ref={downloadButtonRef} name=\"download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getMessageMediaThumbDataUri,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n  const isMediaUnread = message.isMediaUnread;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isActivated) {\n      onReadMedia();\n    }\n  }, [isActivated, isMediaUnread, onReadMedia]);\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            defaultMuted\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <Icon name=\"download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div\n          className={buildClassName(\n            'message-media-duration', isMediaUnread && 'unread',\n          )}\n        >\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type {\n  ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  message: ApiSponsoredMessage;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenu: FC<OwnProps> = ({\n  isOpen,\n  message,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = message.sponsorInfo || !shouldSkipAbout || message.canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {message.sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(message.canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {message.canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredMessageContextMenu from './SponsoredMessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  message,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsoredMessage,\n    hideSponsoredMessages,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({ chatId: message.chatId });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsoredMessages();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsoredMessage({ peerId: message.chatId, randomId: message.randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredMessageContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        message={message}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  lastPlaybackTimestamp?: number;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  lastPlaybackTimestamp,\n  clickArg,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const { cancelMediaDownload } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || video.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, video]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const shouldHidePreview = isPlayerReady && !isUnsupported;\n  const previewRef = useMediaTransition<HTMLImageElement>((hasThumb || previewBlobUrl) && !shouldHidePreview);\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) && !isUnsupported\n    ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          defaultMuted\n          muted\n          loop\n          playsInline\n          disablePictureInPicture\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <Icon ref={playButtonRef} name=\"large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <Icon name=\"download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <Icon name=\"message-failed\" className=\"playback-failed\" />}\n        </div>\n      )}\n      {Boolean(lastPlaybackTimestamp) && (\n        <div\n          className=\"message-media-last-progress\"\n          style={`--_progress: ${Math.floor((lastPlaybackTimestamp / duration) * 100)}%`}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LaOdPURl\",\"backgroundWrapper\":\"zDnMa37m\",\"background\":\"EdXfeKWY\",\"stickerWrapper\":\"o_DYZEMV\"};","import React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiStarGiftUnique } from '../../../api/types';\n\nimport { getGiftAttributes } from '../../common/helpers/gifts';\n\nimport { type ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport StickerView from '../../common/StickerView';\n\nimport styles from './WebPageUniqueGift.module.scss';\n\ntype OwnProps = {\n  gift: ApiStarGiftUnique;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst WebPageUniqueGift = ({\n  gift,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const stickerRef = useRef<HTMLDivElement>(null);\n  const {\n    backdrop, model, pattern,\n  } = getGiftAttributes(gift)!;\n\n  const backgroundColors = [backdrop!.centerColor, backdrop!.edgeColor];\n\n  return (\n    <div\n      className={styles.root}\n      onClick={onClick}\n    >\n      <div className={styles.backgroundWrapper}>\n        <RadialPatternBackground\n          className={styles.background}\n          backgroundColors={backgroundColors}\n          patternColor={backdrop!.patternColor}\n          patternIcon={pattern!.sticker}\n        />\n      </div>\n      <div ref={stickerRef} className={styles.stickerWrapper}>\n        <StickerView\n          containerRef={stickerRef}\n          sticker={model!.sticker}\n          size={STAR_GIFT_STICKER_SIZE}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n          observeIntersectionForLoading={observeIntersectionForLoading}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WebPageUniqueGift);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { tryParseDeepLink } from '../../../util/deepLinkParser';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonLangKey } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\nimport WebPageUniqueGift from './WebPageUniqueGift';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst WEBPAGE_GIFT_TYPE = 'telegram_nft';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  lastPlaybackTimestamp?: number;\n  isEditing?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onDocumentClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n};\ntype StateProps = {\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst WebPage: FC<OwnProps & StateProps> = ({\n  message,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  lastPlaybackTimestamp,\n  isEditing,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onMediaClick,\n  onDocumentClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n}) => {\n  const { openUrl, openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const handleOpenTelegramLink = useLastCallback(() => {\n    if (!webPage) return;\n\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, undefined, !hasCustomColor);\n\n  const linkTimestamp = useMemo(() => {\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage?.url);\n    if (!parsedLink || !('timestamp' in parsedLink)) return undefined;\n    return parsedLink.timestamp;\n  }, [webPage?.url]);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n    mediaSize,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isGift = type === WEBPAGE_GIFT_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonLangKey(type) : undefined;\n  const quickButtonTitle = quickButtonLangKey && lang(quickButtonLangKey);\n\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    const { width, height } = calculateMediaDimensions({\n      media: webPage.photo,\n      isOwn: message.isOutgoing,\n      isInWebPage: true,\n      asForwarded,\n      noAvatars,\n      isMobile,\n    });\n    isSquarePhoto = (width === height || mediaSize === 'small') && mediaSize !== 'large';\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    !isEditing && inPreview && 'interactive',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonTitle && 'with-quick-button',\n    isGift && 'with-gift',\n  );\n\n  function renderQuickButton(caption: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        noForcedUpperCase\n        onClick={handleOpenTelegramLink}\n      >\n        {caption}\n      </Button>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={oldLang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName(\n        'WebPage--content',\n        isStory && 'is-story',\n        isGift && 'is-gift',\n      )}\n      >\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {isGift && !inPreview && (\n          <WebPageUniqueGift\n            gift={webPage.gift!}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onClick={handleOpenTelegramLink}\n          />\n        )}\n        {isArticle && (\n          <div\n            className={buildClassName('WebPage-text', !inPreview && 'WebPage-text_interactive')}\n            onClick={!inPreview ? () => openUrl({ url, shouldSkipModal: true }) : undefined}\n          >\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {(!inPreview || isGift) && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && !isGift && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {photo && !isGift && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && video && (\n          <Video\n            video={video}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            lastPlaybackTimestamp={lastPlaybackTimestamp || linkTimestamp}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={onDocumentClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{oldLang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonTitle && renderQuickButton(quickButtonTitle)}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(WebPage));\n","import type { RegularLangKey } from '../../../../types/language';\n\n// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonLangKey(type?: string): RegularLangKey | undefined {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'ViewButtonRequestJoin';\n    case 'telegram_message':\n      return 'ViewButtonMessage';\n    case 'telegram_bot':\n      return 'ViewButtonBot';\n    case 'telegram_voicechat':\n      return 'ViewButtonVoiceChat';\n    case 'telegram_livestream':\n      return 'ViewButtonVoiceChatChannel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'ViewButtonGroup';\n    case 'telegram_channel':\n      return 'ViewButtonChannel';\n    case 'telegram_user':\n      return 'ViewButtonUser';\n    case 'telegram_botapp':\n      return 'ViewButtonBotApp';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'ViewButtonStory';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'ViewButtonBoost';\n    case 'telegram_stickerset':\n      return 'ViewButtonStickerset';\n    case 'telegram_nft':\n      return 'ViewButtonGiftUnique';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n} : {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport cycleRestrict from '../util/cycleRestrict';\nimport { preloadImage } from '../util/files';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\nimport useLastCallback from './useLastCallback';\n\nconst RADIUS_RATIO = 0.1; // Use 10% of the smallest dimension as the blur radius\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  const blurThumb = useLastCallback(async (canvas: HTMLCanvasElement, uri: string) => {\n    const image = await preloadImage(uri);\n    if (!image) {\n      return;\n    }\n\n    requestMutation(() => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      offscreenRef.current = canvas.transferControlToOffscreen();\n\n      const radius = Math.ceil(Math.min(image.width, image.height) * RADIUS_RATIO);\n\n      requestMediaWorker({\n        name: 'offscreen-canvas:blurThumb',\n        args: [offscreenRef.current, uri, radius],\n        transferables: [offscreenRef.current],\n      }, workerIndex);\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    blurThumb(canvas, thumbData);\n  }, [blurThumb, isDisabled, thumbData]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean) : CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { type RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n} : {\n  anchorRef: RefObject<HTMLDivElement>;\n  overlayRef: RefObject<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n  ApiChannelStatistics |\n  ApiGroupStatistics |\n  ApiPostStatistics |\n  ApiBoostStatistics |\n  ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const lang = useOldLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}<span className={styles.decimalPart}>.{decimalTonPart}</span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ ${integerUsdPart}<span className={styles.decimalUsdPart}>.{decimalUsdPart}</span>\n        </span>\n        <h3 className={styles.tableHeading}>{lang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n  const { balances, usdRate } = (statistics as ApiChannelMonetizationStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getPeerTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getPeerTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n\n            callbacks.delete(cb);\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n\n          callbacks.delete(cb);\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressiveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideos) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): StateProps => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst NO_SHINY_TYPES = new Set<ApiMediaArea['type']>(['channelPost', 'uniqueGift']);\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, openUniqueGiftBySlug, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element!.clientWidth!);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n      case 'uniqueGift': {\n        openUniqueGiftBySlug({ slug: mediaArea.slug });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url':\n          case 'uniqueGift': {\n            const isShiny = isActive && !NO_SHINY_TYPES.has(mediaArea.type);\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","import type { ApiLimitType } from '../../api/types';\nimport type { GlobalState } from '../types';\n\nimport { DEFAULT_LIMITS } from '../../config';\nimport { selectIsCurrentUserPremium } from './users';\n\nexport function selectCurrentLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) {\n    return DEFAULT_LIMITS[limit][0];\n  }\n\n  const isPremium = selectIsCurrentUserPremium(global);\n  const { limits } = appConfig;\n\n  // When there are new limits when updating a layer, until we get a new configuration, we must use the default values\n  const value = limits[limit]?.[isPremium ? 1 : 0] ?? DEFAULT_LIMITS[limit][isPremium ? 1 : 0];\n  if (limit === 'dialogFilters') return value + 1; // Server does not count \"All\" as folder, but we need to\n  return value;\n}\n\nexport function selectPremiumLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) return DEFAULT_LIMITS[limit][1];\n\n  const { limits } = appConfig;\n\n  return limits[limit][1];\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: { text: '' },\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n): FoldersState => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: { text: action.payload },\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : { text: getSuggestedFolderName(state.includeFilters) },\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import useForceUpdate from '../useForceUpdate';\nimport useInterval from './useInterval';\n\nexport default function useIntervalForceUpdate(interval?: number) {\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, interval, true);\n}\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useOldLang from './useOldLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useOldLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      markChatRead,\n      markChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => markChatRead({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => markChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import { useCallback, useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  }, [onStart, threshold]);\n\n  const cancel = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd, onClick]);\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import type { RefObject } from '../../lib/teact/teact';\nimport { useEffect } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { throttle } from '../../util/schedulers';\n\nconst THROTTLE_DELAY = 100;\n\nconst useMarkScrolled = ({\n  containerRef, selector,\n}: {\n  containerRef: RefObject<HTMLDivElement | null>;\n  selector: string;\n}, deps: unknown[]) => {\n  useEffect(() => {\n    const elements = containerRef?.current?.querySelectorAll(selector);\n    if (!elements?.length) return undefined;\n\n    const handleScroll = throttle((event: Event) => {\n      const target = event.target as HTMLElement;\n      const isScrolled = target.scrollTop > 0;\n      requestMutation(() => {\n        target.classList.toggle('scrolled', isScrolled);\n      });\n    }, THROTTLE_DELAY);\n\n    elements.forEach((el) => el.addEventListener('scroll', handleScroll, { passive: true }));\n    // Trigger the scroll handler immediately to apply the current state\n    elements.forEach((el) => el.dispatchEvent(new Event('scroll', { bubbles: false })));\n\n    return () => {\n      elements.forEach((el) => el.removeEventListener('scroll', handleScroll));\n    };\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [containerRef, selector, ...deps]);\n};\n\nexport default useMarkScrolled;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { makeProgressiveLoader } from '../util/progressiveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { ElectronEvent } from '../../types/electron';\n\nimport { IS_IOS } from '../../util/windowEnvironment';\n\ntype ElementType = HTMLElement;\ntype RefType = {\n  current: ElementType | null;\n};\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen(elRef: RefType, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: ElementType) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_AVAILABLE = 'update-available',\n  DEEPLINK = 'deeplink',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_TRAFFIC_LIGHT_POSITION = 'set-traffic-light-position',\n  SET_IS_AUTO_UPDATE_ENABLED = 'set-is-auto-update-enabled',\n  GET_IS_AUTO_UPDATE_ENABLED = 'get-is-auto-update-enabled',\n  SET_IS_TRAY_ICON_ENABLED = 'set-is-tray-icon-enabled',\n  GET_IS_TRAY_ICON_ENABLED = 'get-is-tray-icon-enabled',\n  RESTORE_LOCAL_STORAGE = 'restore-local-storage',\n}\n\nexport type TrafficLightPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setTrafficLightPosition: (position: TrafficLightPosition) => Promise<void>;\n  setIsAutoUpdateEnabled: (value: boolean) => Promise<void>;\n  getIsAutoUpdateEnabled: () => Promise<boolean>;\n  setIsTrayIconEnabled: (value: boolean) => Promise<void>;\n  getIsTrayIconEnabled: () => Promise<boolean>;\n  restoreLocalStorage: () => Promise<void>;\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.target = '_blank';\n  link.rel = 'noopener noreferrer';\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","GroupCallTopPane","className","onPaneStateChange","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useOldLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","filter","useEffect","subscribed","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","isRendering","ref","shouldRender","useHeaderPane","isOpen","onStateChange","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","start","end","style","Audio","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMediaDownload","downloadMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","media","mediaSource","isVoice","isSeeking","useRef","isRtl","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMediaHash","coverBlobUrl","useMedia","ApiMediaFormat","BlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","useLastCallback","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","i","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","current","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","originMessage","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","push","contentClassName","renderWithTitle","dir","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","Icon","name","ripple","color","ariaLabel","backgroundImage","nonInteractive","AnimatedIcon","tgsUrl","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","draggable","viewBox","rx","ry","stroke","renderVoice","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","add","body","appendChild","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","href","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","VALID_TARGET_IDS","Set","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","target","closest","has","preventDefault","activeElement","pastedText","getData","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","getFilesFromDataTransferItems","textToPaste","entities","text","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","setTimeout","pause","props","AttachmentModal","useModuleLoader","Bundles","Extra","AttachMenu","threadId","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","canEditMedia","editingMessage","isAttachMenuOpen","openAttachMenu","closeAttachMenu","useFlag","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","includes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","selectCurrentMessageList","selectChatMessage","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","renderKeyboardButtonText","noCompact","j","BotMenuButton","isDisabled","textRef","textEl","scrollWidth","setProperty","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","shouldAnimate","selectCanAnimateInterface","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","selectSender","selectForwardedSender","selectPeer","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","currentUserId","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","oldLang","useLang","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShown","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","querySelector","renderingSender","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","attachmentSettings","selectTheme","webPagePreview","WebPagePreview","getHtml","isEditing","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","updateAttachmentSettings","formattedTextWithLinkRef","isInvertedMedia","isSmallerMedia","webPageMediaSize","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","entity","url","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","hasMediaSizeOptions","hasLargeMedia","renderingWebPage","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","onContainerClick","MainButtonState","storyId","chatBot","isSystemBot","selectBot","isChatWithBot","isChatWithUser","isUserId","userFullInfo","selectUserFullInfo","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","peer","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","isSilentPosting","getChatNotifySettings","selectNotifyDefaults","selectNotifyException","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","maxMessageLength","config","DEFAULT_MAX_MESSAGE_LENGTH","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","hasScheduledMessages","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","isContactRequirePremium","Composer","dropAreaState","isReady","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onDropHide","onFocus","onBlur","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","updateChatSilentPosting","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePreviousDeprecated","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","limit","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","substring","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","EDITABLE_INPUT_CSS_SELECTOR","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSend","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","webPageUrl","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","sticker","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","handleToggleSilentPosting","localId","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholder","topic","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","emoticon","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","isQuiz","shouldBeAnonymous","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","Avatar","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","Transition","slideClassName","activeKey","direction","formatVoiceRecordDuration","CustomEmojiTooltip","key","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","allowDisabledClick","noFastClick","MessageEffect","shouldPlay","onStop","CustomSendMenu","canSchedule","onSendSchedule","onRemoveEffect","withEffects","hasCurrentEffect","isSavedDialog","isPrivateChat","user","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","DeleteChatModal","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","Document","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","getDocumentMediaHash","hasPreview","getDocumentHasPreview","thumbDataUri","getMediaThumbUri","localBlobUrl","previewBlobUrl","previewData","withMediaViewer","innerMediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","checked","label","onCheck","DotAnimation","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","src","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","selectTopic","messagesCount","selectThreadMessagesCount","GroupChatInfo","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadMoreProfilePhotos","isTopic","isMin","isRestricted","isPreload","handleAvatarViewerOpen","hasMedia","isAvatarView","mediaIndex","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","TypingStatus","shouldRestoreHeight","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","renderStatusOrTyping","LastMessageMeta","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","Media","isProtected","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isVisible","isGif","Keys","NothingFound","description","forceShowSelf","isSynced","userStatus","selectUserStatus","isSelf","PrivateChatInfo","customPeer","noFake","noVerified","adminMember","iconElement","rightElement","loadFullUser","useIntervalForceUpdate","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","ProfilePhoto","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getPhotoMediaHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","thumbnail","dataUri","blurredThumbCanvasRef","currentTime","specialIcon","role","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","emojiStatus","emojiStatusSticker","emojiStatusSlug","slug","ProfileInfo","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","openUniqueGiftBySlug","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaHash","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","styles","selectorToPreventScroll","onSwipe","SwipeDirection","Right","Left","letterClassName","noLoopLimit","totalPhotosLength","count","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","_","renderPhotoTabs","personalPhoto","fallbackPhoto","renderPhoto","canCopyTitle","isSystemBotChat","isReadDateRestrictedByMe","membersCount","renderStatus","iconEmojiId","observeIntersectionForPlaying","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","WebLink","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","SafeLink","NBSP","EmbeddedMessage","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getPeerTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","PeerColorWrapper","emojiIconClassName","shouldReset","blobUrl","isFullVideo","getPictogramDimensions","srcUrl","shouldRenderVideo","renderPictogram","renderTextWithEntities","asPreview","emojiSize","MessageSummary","noEmoji","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isChatGroup","isReplyToQuote","renderSender","freezeWhenClosed","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shift","shiftedRanges","startMinute","endMinute","sort","a","b","last","DAYS","BusinessHours","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","forceUpdate","useForceUpdate","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","ListItem","iconClassName","multiline","isStatic","narrow","withColorTransition","tabIndex","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","UserBirthday","birthday","isInSettings","openGiftModal","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","buildCollectionByKey","split","digit","effectSticker","randomEffect","random","hash","getStickerMediaHash","effectHash","column","valueKey","canGiftPremium","isPremium","handleOpenGiftModal","forUserId","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","index","StickerView","containerRef","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","chatOrUserId","countryList","phoneCodes","phoneCodeList","botAppPermissions","selectBotAppPermissions","isMuted","getIsChatMuted","botVerification","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","hasMainMiniApp","isBotCanManageEmojiStatus","ChatExtra","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","requestMainWebView","toggleUserEmojiStatusPermission","toggleUserLocationPermission","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","prevPeerId","dpr","useDevicePixelRatio","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","manageEmojiStatusChange","handleLocationPermissionChange","isAccessGranted","geolocation","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","handleOpenApp","extractCurrentThemeParams","shouldMarkBotTrusted","appTermsInfo","terms","withNodes","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","Switcher","inactive","iconId","usernameList","otherUsernames","usernameLinks","s","ChatFolderModal","MuteChatModal","ChatCallStatus","lastMessageId","selectChatLastMessageId","lastMessage","selectChatLastMessage","isOutgoing","savedDialogSender","fromId","messageSender","lastMessageSender","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","topicsInfo","selectTopicsInfo","lastMessageStory","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","listedTopicIds","topics","topicsById","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","useEnsureMessage","renderSubtitle","useChatListEntry","statefulMediaContent","groupStatefulContent","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","handleReport","contextActions","useChatContextActions","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","subscriptionUntil","StoryViewerOrigin","ChatList","StarIcon","ChatBadge","shouldShowOnlyMostImportant","forceHidden","hasMiniApp","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeUnMuted","notifySettings","mutedUntil","isEveryUnreadMuted","every","hasUnreadMark","isSignal","isUnread","ShowTransition","isCustom","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","miniAppButton","pill","visiblePinnedElement","elements","renderContent","ARCHIVE_CUSTOM_PEER","isCustomPeer","avatarIcon","customPeerAvatarColor","Archive","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","isMinimized","handler","actionExpand","actionHide","isHidden","compact","root","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","fluid","UnconfirmedSession","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","useResizeObserver","entry","borderBoxSize","blockSize","contentRect","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","isArchiveInList","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","rect","currentTarget","clientY","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","event","container","scrollHeight","deltaY","passive","useTopOverscroll","InfiniteScroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onLoadMore","onDragLeave","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","Loading","ICON_SIZE","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","selectTopics","isChatMuted","canDelete","selectCanDeleteTopic","Topic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","ForumPanel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","beginHeavyAnimation","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","renderTopics","GENERAL_TOPIC_ID","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","shouldTryLoadingStory","useEnsureStory","mediaContent","mediaHasPreview","getMessageSticker","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","opacity","ANIMATION_END_DELAY","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","senderId","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","scrollX","scrollY","innerWidth","innerHeight","seed","filterId","SNAP_EFFECT_ID","generateUniqueId","component","ghost","smallestSide","baseSeed","xmlns","SVG_NAMESPACE","baseFrequency","numOctaves","slope","intercept","attributeName","dur","in2","operator","xChannelSelector","yChannelSelector","createFilter","elementContainer","svg","jsxToHtml","foreignObject","computedStyle","getComputedStyle","clone","getPropertyValue","snapContainer","once","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","screen","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","AttachBotIcon","isTouchScreen","Text","iconSvg","mediaDataWithReplacedColors","doc","path","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","shortName","isDisclaimerNeeded","withPortal","CustomSend","DropTarget","isQuick","isGeneric","svgRef","isHovered","markHovered","unmarkHovered","relatedTarget","toTarget","handleResize","baseVal","useEffectOnce","onDrop","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","containerSelector","onDragOver","handleDragOver","clearTimeout","AbsoluteVideo","constructor","videoUrl","options","_defineProperty","this","load","recalculatePositionAndSize","play","paused","safePlay","destroy","updatePosition","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","customColor","useDynamicColorListener","colorFilter","useColorFilter","playersById","Map","clearPlayers","player","delete","synchronizeElements","playerIdsToClear","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","isLottie","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","r","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","then","animation","set","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","getIsHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","onChange","onKeyDown","isComposing","altKey","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onLoad","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","mimeType","quick","shouldSendAsFile","img","preloadImage","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","replaceWithTeact","STARS_ICON_PLACEHOLDER","MAX_NESTING_PARENTS","commonAncestorContainer","parentNode","iterations","parentElement","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterPeersByQuery","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","CLOSE_DURATION","RESIZE_THROTTLE","providedRef","withResizeObserver","setShouldRender","localRef","lastHeightRef","reset","useUnmountCleanup","handleUpdate","applyAnimationState","list","noTransition","cumulativeHeight","state","shiftPx","apply","setExtraStyles","zIndex","String","transition","isPanelOpen","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","getSingularPaidMedia","extendedMedia","singularMedia","AlbumRectPart","Top","Bottom","accumulate","initValue","accumulator","calculateContainerSize","layout","dimensions","sides","calculateAlbumLayout","album","ratios","messages","isSingleMessage","paidMedia","getMessageContent","calculateMediaDimensions","getRatios","isPaidMedia","proportions","ratio","getProportions","averageRatio","getAverageRatio","albumCount","forceCalc","maxWidth","getAvailableWidth","params","minWidth","spacing","originalRatios","clamp","cropRatios","attempts","pushAttempt","lineCounts","heights","currentCount","multiHeight","attemptCount","sum","first","second","third","fourth","optimalAttempt","optimalDiff","lineCount","totalHeight","bad1","bad2","line","optimalCounts","optimalHeights","rowCount","colCount","lineHeight","col","layoutWithComplexLayouter","layoutTwoTopBottom","layoutTwoLeftRightEqual","minimalWidth","secondWidth","firstWidth","layoutTwoLeftRight","layoutTwo","firstHeight","thirdHeight","secondHeight","rightWidth","leftWidth","layoutThreeLeftAndOther","thirdWidth","layoutThreeTopAndOther","layoutThree","w","h0","h","w0","w2","w1","h1","layoutFourTopAndOther","h2","layoutFourLeftAndOther","layoutFour","containerStyle","worker","initializationDeferred","Deferred","IS_TRANSLATION_SUPPORTED","createConnector","Worker","CHAT_STATS","throttledMakeChatDecision","throttle","updateChatDetectedLanguage","chatStats","messagesChecked","translatableCount","detectableCount","languageOccurrences","isTranslatable","occurrences","QUICK_REACTION_AREA_WIDTH","QUICK_REACTION_AREA_HEIGHT","GROUP_MESSAGE_HOVER_ATTRIBUTE","useOuterHandlers","selectMessage","isInSelectMode","canReply","isContextMenuShown","quickReactionRef","shouldHandleMouseLeave","getIsMessageListReady","sendDefaultReaction","isQuickReactionVisible","markQuickReactionVisible","unmarkQuickReactionVisible","isSwiped","markSwiped","unmarkSwiped","doubleTapTimeoutRef","handleMouseMove","quickReactionContainer","quickReactionX","quickReactionWidth","quickReactionY","quickReactionHeight","isVisibleX","isVisibleY","excludedClosestSelector","preventMessageInputBlur","clearInterval","contains","getIsKeyboardVisible","handleTap","handleDoubleClick","handleContentDoubleClick","handleSendQuickReaction","lastGroupElement","getLastElementInDocumentGroup","handleDocumentGroupMouseLeave","handleDocumentGroupMouseEnter","nextElementSibling","EmbeddedStory","isFullStory","isExpiredStory","isVideoStory","pictogramUrl","handleFastClick","peerColor","TopicChip","getTopicColorCssVariable","blankSrc","withSelectControl","WrappedComponent","ownProps","clickArg","noSelectControls","selectIsMessageSelected","toggleMessageSelection","handleMessageSelect","withShift","newProps","dims","PhotoWithSelect","Photo","VideoWithSelect","Video","activeDownloads","selectActiveDownloads","uploadsByKey","fileUploads","byMessageKey","Album","hasCustomAppendix","albumLayout","cancelUploadMedia","mainMessage","mediaCount","handlePaidMediaClick","handleAlbumMessageClick","handleCancelUpload","containerWidth","containerHeight","renderingPaidMedia","paidPhotoOrPreview","paidVideoOrPreview","fileUpload","getMessageKey","selectCanAutoLoadMedia","canAutoPlay","selectCanAutoPlayMedia","shouldAffectAppendix","mediaType","getIsDownloading","useAnimatedEmoji","soundId","activeEmojiInteractions","preferredSize","interactWithAnimatedEmoji","sendEmojiInteraction","sendWatchingEmojiInteraction","audioRef","soundMediaData","buildStyle","IS_ELECTRON","interactions","startedInteractions","sendInteractionBunch","startSize","isReversed","performance","interactionMessageId","customEmojiId","selectAnimatedEmojiEffect","selectAnimatedEmojiSound","noPlay","AnimatedCustomEmoji","getCustomEmojiSize","LIKE_STICKER_ID","isBig","withSharedAnimation","AnimatedEmoji","forceLoadPreview","quality","noLoad","forcePreview","CommentButton","isCustomShape","asActionButton","shouldRenderLoading","useAsyncRendering","originMessageId","recentReplierIds","originChannelId","isComments","recentRepliers","hasUnread","commentsText","getContactName","contact","firstName","lastName","Contact","openAddContactDialog","isRegistered","canAddContact","getCanAddContact","handleOpenChat","handleAddContact","ContextMenuContainer","COLOR","FactCheck","factCheck","isToggleDisabled","cutoutRef","isCollapsible","setIsCollapsed","useCollapsibleLines","countryLocalized","countryCode","canExpand","handleExpand","handleToggle","prev","Separator","Game","canAutoLoadMedia","game","getGamePreviewPhotoHash","getGamePreviewVideoHash","videoBlobUrl","handleGameClick","inlineButtons","giveaway","channelIds","giftSticker","selectGiftStickerForDuration","months","Giveaway","isLoadingInfo","giveawayInfo","setGiveawayInfo","giveawayResults","isResults","untilDate","prizeDescription","stars","quantity","winnersCount","hasEnded","translatedNames","countries","isoToEmoji","handlePeerClick","channelId","handleShowInfoClick","callApi","handleCloseInfo","giveawayInfoTitle","AnimatedIconWithPreview","PartyPopper","winnerIds","PeerChip","withPeerColors","renderGiveawayResultsDescription","formatDateTimeToString","renderGiveawayDescription","isOnlyConfirm","isResultsInfo","isApiPeerChat","endDate","formatDateAtTime","otherChannelsCount","otherChannelsString","isSeveral","firstKey","giveawayDuration","firstParagraph","additionalPrizes","secondKey","secondParagraph","activatedCount","isRefunded","isWinner","lastParagraph","disallowedCountry","adminDisallowedChatId","disallowedChat","disallowedChatTitle","joinedTooEarlyDate","isParticipating","renderGiveawayInfo","InlineButtons","RE_TME_LINK","renderIcon","Invoice","forcedWidth","invoice","getMessageInvoice","amount","currency","isTest","photoUrl","getWebDocumentHash","withBlurredBackground","useBlurredMediaThumbRef","prevShouldAffectAppendix","contentEl","MESSAGE_CONTENT_SELECTOR","getCustomAppendixBg","appendixBg","CUSTOM_APPENDIX_ATTRIBUTE","crossOrigin","forceAspectRatio","formatCurrency","InvoiceMediaPreview","openInvoice","loadExtendedMedia","refreshExtendedMedia","isExtendedMedia","spoiler","buy","lock","formatCurrencyAsString","TIMER_CIRCUMFERENCE","TIMER_RADIUS","PI","MOVE_THRESHOLD","PinSvg","cx","cy","Location","countdownRef","location","getMessageLocation","serverTime","isGeoLiveExpired","secondsBeforeEnd","period","point","setPoint","shouldRenderText","prevMediaBlobUrl","mapBlobUrl","accuracyRadiusPx","accuracyRadius","lat","getMetersPerPixel","updateCountdown","countdownEl","svgEl","lastElementChild","timerEl","firstElementChild","timeLeft","strokeDashOffset","formatCountdownShort","long","pinClassName","heading","getVenueColor","venueType","iconSrc","getVenueIconUrl","mapPin","renderPin","renderOverlay","formatLastUpdated","editDate","renderInfo","MessageMeta","signature","withReactionOffset","repliesThreadInfo","renderQuickReactionButton","noReplies","isTranslated","withFullDate","onTranslationClick","onEffectClick","onOpenThread","markActivated","handleImportedClick","dateTitle","createDateTime","timeFormat","editDateTime","isEdited","forwardedDateTime","savedDate","viewsTitle","viewsCount","pluralValue","forwardsCount","repliesTitle","time","isImported","isVideoProcessingPending","MessagePhoneCall","phoneCall","reason","isMissed","isCancelled","handleCall","formattedDuration","formatTimeDuration","timeFormatted","getCallMessageKey","PaidMediaOverlay","children","isClickable","isBought","starsAmount","formatStarsAsIcon","getPercentage","total","toFixed","PollOption","answer","voteResults","totalVoters","maxVotersCount","correctResults","option","correctAnswer","showIcon","isChosen","answerPercent","votersCount","finalPercent","setFinalPercent","lineWidth","isAnimationDoesNotStart","lineStyle","Poll","onSendVote","loadMessage","openPollResults","summary","isSubmitting","setIsSubmitting","chosenOptions","setChosenOptions","wasSubmitted","setWasSubmitted","closePeriod","setClosePeriod","closed","closeDate","timerCircleRef","hasVoted","canVote","canViewResult","isPublic","isMultiple","multipleChoice","recentVoterIds","isCorrect","answers","hidden","quiz","chosen","timer","recentVoters","handleRadioChange","handleCheckboxChange","handleVoteClick","handleViewResultsClick","showSolution","solution","solutionEntities","question","getPollTypeString","CheckboxGroup","loadingOptions","isRound","RadioGroup","loadingOption","getReadableVotersCount","Sticker","withEffect","onStopEffect","effectRef","hasEffect","isMirrored","IS_WEBM_SUPPORTED","canLoad","mediaHashEffect","effectBlobUrl","isPlayingEffect","startPlayingEffect","stopPlayingEffect","handleEffectEnded","shouldRenderEffect","useOverlayPosition","anchorRef","overlayRef","openModal","isMemojiSticker","getStickerDimensions","fullMediaHash","fullMediaClassName","AnimatedSticker","onEnded","connectionState","BaseStory","lastReadId","selectPeerStories","targetUser","thumbUrl","QUICK_REACTION_SIZE","EXTRA_SPACE_FOR_REACTIONS","focusedMessage","activeReactions","loadingThread","withSenderName","isLastInDocumentGroup","isFirstInGroup","viaBotId","transcriptionId","viaBusinessBotId","isGroup","webPageStoryData","webPageStory","forceSenderName","isAnonymousOwnMessage","canShowSender","originSender","botSender","senderAdminMember","adminMembersById","isThreadTop","getMessageReplyInfo","storyReplyPeerId","storyReplyId","getStoryReplyInfo","shouldHideReply","replyMessage","selectReplyMessage","forwardHeader","replyMessageSender","selectSenderFromHeader","replyMessageForwardSender","replyMessageChat","isReplyPrivate","isChatPublic","replyStory","storySender","selectUploadProgress","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","isResizingContainer","quote","focusedQuote","scrollTargetPosition","middleSearch","selectCurrentMiddleSearch","highlight","isHashtag","getMessageSingleRegularEmoji","animatedCustomEmoji","getMessageSingleCustomEmoji","selectCanReplyToMessage","downloadableMedia","getMessageDownloadableMedia","commentsMessage","isInDocumentGroup","documentGroupFirstMessageId","selectMessageIdsByGroupId","reactionMessage","hasUnreadReaction","unreadReactions","hasTopicChip","messageTopic","selectChatTranslations","requestedTranslationLanguage","selectRequestedMessageTranslationLanguage","areTranslationsEnabled","hasActiveReactions","senderBoosts","boostsApplied","chatLevel","boostLevel","transcribeMinLevel","appConfig","groupTranscribeLevelMin","canTranscribeVoice","viaBusinessBot","selectPollFromMessage","maxTimestamp","selectMessageTimestampableDuration","lastPlaybackTimestamp","selectMessageLastPlaybackTimestamp","selectIsMessageProtected","isChatProtected","selectIsChatProtected","isGroupSelected","selectIsDocumentGroupSelected","isPinnedList","canAutoPlayMedia","shouldLoopStickers","selectShouldLoopStickers","defaultReaction","selectDefaultReaction","transcriptions","isPending","transcribedText","shouldDetectChatLanguage","selectShouldDetectChatLanguage","hasLinkedChat","linkedChatId","withAnimatedEffects","isLoadingComments","isCommentsInfo","loadingChatId","loadingMessageId","tags","savedReactionTags","Message","observeIntersectionForBottom","noComments","appearanceOrder","isJustAdded","isLastInGroup","isFirstInDocumentGroup","isLastInList","memoFirstUnreadIdRef","onIntersectPinnedMessage","disableContextMenuHint","animateUnreadReaction","markMentionsRead","bottomMarkerRef","setTranscriptionHidden","isPlayingSnapAnimation","setIsPlayingSnapAnimation","isPlayingDeleteAnimation","setIsPlayingDeleteAnimation","requestEffect","hideEffect","contextMenuTarget","noAppearanceAnimation","markShown","MESSAGE_APPEARANCE_DELAY","useShowTransition","noMountTransition","viewportPinnedIdsToRemove","hasMessageReply","isReplyToMessage","paidMediaPhoto","paidMediaVideo","messageReplyInfo","storyReplyInfo","withVoiceTranscription","hasStoryReply","hasThread","getMessageCustomShape","hasAnimatedEmoji","hasReactions","areReactionsEmpty","asForwarded","isLinkedChannelPost","isMention","canShowSenderBoosts","isStoryMention","isAlbum","msg","isInDocumentGroupNotFirst","isInDocumentGroupNotLast","canShowActionButton","canForward","isForwardingAllowed","canFocus","fromMessageId","hasFactCheck","hasForwardedCustomShape","hasSubheader","childMessageIds","avatarPeer","messageColorPeer","senderPeer","handleSenderClick","handleViaBotClick","handleReplyClick","handleMediaClick","handleDocumentClick","handleAudioPlay","handleAlbumMediaClick","handlePhotoMediaClick","handleVideoMediaClick","handleMetaClick","handleTranslationClick","handleOpenThread","handleReadMedia","handleVoteSend","handleGroupForward","handleForward","handleFocus","handleFocusForwarded","handleDocumentGroupSelectAll","handleTopicChipClick","handleStoryClick","isTranslatingChat","openAudioPlayer","markMessagesRead","sendPollVote","openForwardMenu","searchChatMediaMessages","replyToTopId","channelPostId","focusMessageId","replyMessageId","ScheduledInline","openMediaViewerWithPhotoOrVideo","withDynamicLoading","currentMediaMessageId","videoContent","webpageTimestamp","albumMessageId","albumIndex","ScheduledAlbum","originalChatId","savedFromPeerId","groupedChatId","selectWithGroupedId","useInnerHandlers","handleEffectClick","isPartialAlbumDelete","isDeleting","textMessage","hasMultipleCaptions","captionMessage","hasTextContent","hasMessageText","containerClassName","hasUnreadMention","getIsReady","setLanguage","threshold","promise","request","detectLanguage","useTextLanguage","LimitedMap","previousMetadata","processMessageMetadata","useDetectChatLanguage","isTranslationPending","previousTranslatedText","currentTranslatedText","isMediaWithCommentButton","withCommentButton","withQuickReactionButton","hasOutsideReactions","hasCommentCounter","hasCommentButton","hasActionButton","isGeoLiveActive","peerColorClass","isInvertibleMedia","classNames","MESSAGE_CONTENT_CLASS_NAME","isMedia","isMediaWithNoText","hasInlineKeyboard","isViaBot","hasFooter","emojiOnlyCount","EMOJI_SIZES","gift","buildContentClassName","withAppendix","metaPosition","reactionsPosition","quickReactionPosition","useFocusMessage","viaBusinessBotTitle","canShowPostAuthor","postAuthorTitle","useMessageResizeObserver","bottomMarker","isElementInViewport","unreadMentionIds","extraPadding","sizeCalculations","calculatedWidth","contentWidth","reactionsMaxWidth","noMediaCorners","previewWidth","previewHeight","calculateDimensionsForMessageMedia","fromOwnMessage","MIN_MEDIA_WIDTH_WITH_TEXT","getMinMediaWidth","renderMessageText","isForAnimation","MessageText","messageOrStory","canBeEmpty","ReactionStaticEmoji","renderReactionsAndMeta","meta","Reactions","metaChildren","noRecentReactors","renderWebPage","backgroundEmojiId","onAudioPlay","onDocumentClick","onCancelMediaTransfer","renderInvertibleMediaContent","messageText","shouldRenderSenderName","renderForwardTitle","renderSenderName","shouldSkipRenderForwardTitle","shouldSkipRenderAdminTitle","senderEmojiStatus","senderIsPremium","shouldRenderForwardAvatar","hasBotSenderUsername","senderColor","EMOJI_STATUS_LOOP_LIMIT","fakeType","FakeIcon","forwardAuthor","onCopy","onDoubleClick","onMouseMove","textContentClass","shouldReadMedia","RoundVideo","Story","StoryMention","footerClass","hasContentAfterText","isMetaInText","renderInvertedMediaContent","MessageAppendix","isOutside","targetHref","startPlaying","stopPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","handleEnded","isForMessageEffect","effectClassName","isInWebPage","isPaidPreview","useMediaTransition","showSpoiler","wasLoadDisabled","spinnerRef","withShouldRender","downloadButtonRef","shouldRenderDownloadButton","isAllowed","isSmall","componentClassName","MIN_MEDIA_HEIGHT","dimensionsStyle","withAnimation","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","stopPrevious","playerRef","circleRef","getVideoMediaHash","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","capturePlaying","togglePlaying","stopCurrentAudio","handleTimeUpdate","defaultMuted","isPriority","onTimeUpdate","SponsoredMessageContextMenu","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","sponsorInfo","canReport","SponsoredMessageContextMenuContainer","onItemClick","openAboutAdsModal","reportSponsoredMessage","hideSponsoredMessages","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","additionalInfo","handleReportSponsoredMessage","randomId","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","isFullMediaPreloaded","hasThumb","isInline","isUnsupported","useUnsupportedMedia","previewMediaHash","isPreviewPreloaded","canLoadPreview","shouldHidePreview","previewRef","playButtonRef","setPlayProgress","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","handleClickOnSpinner","WebPageUniqueGift","stickerRef","backdrop","model","pattern","getGiftAttributes","backgroundColors","centerColor","edgeColor","RadialPatternBackground","patternColor","patternIcon","openUrl","openTelegramLink","stickersRef","handleContainerClick","handleOpenTelegramLink","hasCustomColor","isWithTextColor","documents","linkTimestamp","mediaSize","isStory","isGift","quickButtonLangKey","getWebpageButtonLangKey","quickButtonTitle","isArticle","isSquarePhoto","isMediaInteractive","EmojiIconBackground","emojiDocumentId","shouldSkipModal","isEmoji","caption","isRectangular","noForcedUpperCase","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","requestMediaWorker","MAX_WORKERS","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH","isPhoto","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","RADIUS_RATIO","lastWorkerIndex","thumbData","workerIndex","cycleRestrict","offscreenRef","blurThumb","uri","image","transferControlToOffscreen","ceil","transferables","useOffscreenCanvasBlur","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","OFFSET_X","anchorRect","elementRect","anchorCenterY","anchorBottomY","messagesContainer","selectCurrentChat","DeleteMemberModal","deleteChatMember","handleDeleteChatMember","textParts","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","isToncoin","renderBalanceCell","balance","usdRate","integerTonPart","decimalTonPart","integerUsdPart","decimalUsdPart","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","part","percentage","renderOverviewItemValue","change","isChangeNegative","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","active","archived","isClosing","closing","useHorizontalScroll","StoryRibbonButton","byPeerId","isRibbonShown","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","avatar","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","toggleAvatar","selectByPeerId","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","drawImage","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","isArray","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","unloadVideo","preloadProgressive","preloadHashes","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideos","getPreloadMediaHashes","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","effectSize","shouldPause","restrictedEmoji","selectRestrictedEmoji","MediaAreaWeather","temperatureC","backgroundColor","convertToRGBA","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","withTranslucentThumb","navigator","formatTemperature","STORY_ASPECT_RATIO","NO_SHINY_TYPES","prepareStyle","mediaWidth","rotation","coordinates","pixelRadius","pixelWidth","pixelHeight","isStoryPlaying","closeStoryViewer","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","handleMediaAreaClick","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","adminId","selectCanInviteToActiveGroupCall","DEFAULT_LIMITS","limits","selectPremiumLimit","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","interval","resolver","deps","msOrSchedulerFn","noFirst","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","audioProxy","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","markChatRead","markChatUnread","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","loadStoryThrottled","throttled","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","shouldFireEvent","hotkey","ctrl","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","isLongPressActive","isPressed","timerId","canProcessEvent","touches","cancel","onMouseUp","onTouchStart","onTouchEnd","useMarkScrolled","selector","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeElectronListener","electron","on","ElectronEvent","FULLSCREEN_CHANGE","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","ConnectorClass","channel","throttleWithTickEnd","payloads","pendingPayloads","pendingTransferables","postMessage","postMessageOnTickEnd","messageData","requestStates","requestStatesByCallback","restMessageData","requestState","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","postMessagesOnTickEnd","connector","handleMessage","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","parseMessageKey","splitTrackId","messageKey","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","rel","click","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","LUMA_THRESHOLD","outputType","Image","onload","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","averageColor","getAverageColor","fillColor","getColorLuma","res","ctx2D","fillRect","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","globalCompositeOperation","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","providerUrl","cos","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","fullSize","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","cloneContents","caretRange","endContainer","endOffset","Node","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange"],"sourceRoot":""}