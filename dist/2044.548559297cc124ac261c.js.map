{"version":3,"file":"2044.548559297cc124ac261c.js","mappings":"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B,uBACAkI,wBACA0D,mBAAoBr8B,EAAOq8B,mBAC3BxD,WACAJ,qBACA6D,sBAAsBC,EAAAA,EAAAA,KAA2Bv8B,GACjDw8B,eAAgB/L,KAAyBgM,EAAAA,EAAAA,KAA+Bz8B,GACxE08B,uBAAuBC,EAAAA,EAAAA,KAA4B38B,GACnD48B,oBAAqBrG,IAAmBD,IAAkBmD,EAC1DhR,uBAAwBzoB,EAAOk3B,SAASC,MAAM1O,uBAC9C0Q,oBACA0D,YAAa78B,EAAO88B,QAAQD,YAC5BvD,eACD,GA9Hev5B,EAroDwBg9B,EAC1ChY,OACA8U,gBACAmD,gBACAvD,oBACAM,yBACAkD,UACAtyB,WACAuyB,aACAC,UACAC,SACArU,iBACA9oB,SACA6V,WACAogB,UACAuC,qBACArK,kBACAa,QACA/uB,OACAu2B,gBACA6C,gBACAZ,2BACAjI,wBACAkI,yBACArC,iBACA7G,kBACAwK,aACAgC,iBACA/B,sBACAE,sBACAkC,wBACAvN,gBACA0L,aACAlD,wBACAgD,0BACA8C,oBACA/C,uBACAI,oBACAG,uBACAE,mBACAtD,iBACAC,eACA0E,gBACAlB,wBACAnE,yBACAC,4BACAI,qBACAC,iBACA8D,gBACAE,cACAE,sBACAE,eACAzD,cACAC,cACAL,YACAkB,gBACAZ,sBACAE,uBACAwD,iBACAtT,cACAyT,sBACAM,sBACA9zB,SACAswB,YACA5B,+BACAqG,4BACAC,mBACAC,WACAr8B,aACAu4B,sBACAE,gBACA4C,iBACAE,yBACAjU,0BACA0Q,qBACA0D,eACAD,uBACAa,iBAEA,MAAM,YACJC,GAAW,WACXC,GAAU,WACVC,GAAU,gBACVvP,GAAe,cACfwP,GAAa,eACbC,GAAc,qBACdC,GAAoB,WACpBC,GAAU,eACVC,GAAc,oBACdC,GAAmB,WACnBC,GAAU,uBACVC,GAAsB,cACtBC,GAAa,qBACbC,GAAoB,iBACpBhnB,GAAgB,oCAChBinB,GAAmC,wBACnCC,GAAuB,oBACvBC,GAAmB,kBACnBC,GAAiB,YACjBC,KACEp9B,EAAAA,EAAAA,MAEEC,IAAOC,EAAAA,EAAAA,KAGPm9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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/ChatExtra.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useBotCommandTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.async.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/Picker.tsx","webpack://telegram-t/./src/components/common/PickerSelectedItem.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/common/ReportModal.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/hooks/useSelectorSignal.ts","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/message/SimilarChannels.module.scss?86cb","webpack://telegram-t/./src/components/middle/message/SimilarChannels.tsx","webpack://telegram-t/./src/hooks/useAverageColor.ts","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useDerivedSignal.ts","webpack://telegram-t/./src/hooks/useDerivedState.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useSignal.ts","webpack://telegram-t/./src/hooks/useSignalEffect.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/emoji/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/progressieveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  hasPinnedOffset: boolean;\n  className?: string;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  hasPinnedOffset,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransition(Boolean(groupCall && isActive));\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      className={buildClassName(\n        'GroupCallTopPane',\n        hasPinnedOffset && 'has-pinned-offset',\n        className,\n        transitionClassNames,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      <div className=\"avatars\">\n        {renderingFetchedParticipants?.map((peer) => (\n          <Avatar\n            key={peer.id}\n            peer={peer}\n          />\n        ))}\n      </div>\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n};\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n}) => {\n  const lang = useLang();\n\n  const prevTextRef = useRef<string>();\n  const [isAnimating, markAnimating, unmarkAnimating] = useFlag(false);\n\n  const shouldAnimate = selectCanAnimateInterface(getGlobal());\n\n  const textElement = useMemo(() => {\n    if (!shouldAnimate) {\n      return text;\n    }\n    if (!isAnimating) {\n      return prevTextRef.current || text;\n    }\n\n    const prevText = prevTextRef.current;\n\n    const elements = [];\n    for (let i = 0; i < text.length; i++) {\n      if (prevText && text[i] !== prevText[i]) {\n        elements.push(\n          <div className={styles.characterContainer}>\n            <div className={styles.character}>{text[i]}</div>\n            <div className={styles.characterOld} onAnimationEnd={unmarkAnimating}>{prevText[i]}</div>\n            <div className={styles.characterNew} onAnimationEnd={unmarkAnimating}>{text[i]}</div>\n          </div>,\n        );\n      } else {\n        elements.push(<span>{text[i]}</span>);\n      }\n    }\n\n    prevTextRef.current = text;\n\n    return elements;\n  }, [shouldAnimate, isAnimating, text]);\n\n  useEffect(() => {\n    markAnimating();\n  }, [text]);\n\n  return (\n    <span className={buildClassName(styles.root, className)} dir={lang.isRtl ? 'rtl' : undefined}>\n      {textElement}\n    </span>\n  );\n};\n\nexport default AnimatedCounter;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerPreviewHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && `sticker${sticker.id}`;\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerPreviewHash(sticker.id) : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransition(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransition(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiAudio, ApiMessage, ApiVoice } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { LangFn } from '../../hooks/useLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMessageMediaDownload, downloadMessageMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMessageMediaHash(message, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    voice,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n    } else {\n      downloadMessageMedia({ message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && (voice || video) && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal) && voice && (\n        renderVoice(\n          voice,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: LangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  voice: ApiVoice,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"var(--accent-color)\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(voice.duration) : formatMediaDuration(voice.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  voice?: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!voice) {\n      return undefined;\n    }\n\n    const { waveform, duration } = voice;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, voice, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"size-micro\":\"bnYA0Wm9\",\"sizeMicro\":\"bnYA0Wm9\",\"size-mini\":\"ZGpPX4Wb\",\"sizeMini\":\"ZGpPX4Wb\",\"size-tiny\":\"ufyZRVf5\",\"sizeTiny\":\"ufyZRVf5\",\"size-small\":\"UA2exR6e\",\"sizeSmall\":\"UA2exR6e\",\"size-small-mobile\":\"PTbjjZjF\",\"sizeSmallMobile\":\"PTbjjZjF\",\"size-medium\":\"jncPG8PA\",\"sizeMedium\":\"jncPG8PA\",\"size-large\":\"pd70AQAO\",\"sizeLarge\":\"pd70AQAO\",\"size-jumbo\":\"KpwfP5mr\",\"sizeJumbo\":\"KpwfP5mr\",\"avatar\":\"XND8fhC1\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n}) => {\n  const lang = useLang();\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUsername,\n} from '../../api/types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport {\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { debounce } from '../../util/schedulers';\nimport stopEvent from '../../util/stopEvent';\nimport renderText from './helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport ListItem from '../ui/ListItem';\nimport Switcher from '../ui/Switcher';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    chat?: ApiChat;\n    canInviteUsers?: boolean;\n    isMuted?: boolean;\n    phoneCodeList: ApiCountryCode[];\n    topicId?: number;\n    description?: string;\n    chatInviteLink?: string;\n    topicLink?: string;\n    hasSavedMessages?: boolean;\n  };\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n}) => {\n  const {\n    loadFullUser,\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    if (!userId) return;\n    loadFullUser({ userId });\n  }, [userId]);\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  if (!chat || chat.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (lang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map(({ username: nick }, idx) => {\n                const textToCopy = isChat ? `${TME_LINK_PREFIX}${nick}` : `@${nick}`;\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={nick}\n                      href={`${TME_LINK_PREFIX}${nick}`}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        copy(textToCopy, lang(isChat ? 'Link' : 'Username'));\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {`@${nick}`}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    const username = isChat ? `t.me/${mainUsername.username}` : mainUsername.username;\n    const textToCopy = isChat ? `${TME_LINK_PREFIX}${mainUsername.username}` : `@${mainUsername.username}`;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => copy(textToCopy, lang(isChat ? 'Link' : 'Username'))}\n      >\n        <span className=\"title\" dir=\"auto\">{username}</span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {lang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {formattedNumber && Boolean(formattedNumber.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={() => copy(formattedNumber, lang('Phone'))}>\n          <span className=\"title\" dir=\"auto\">{formattedNumber}</span>\n          <span className=\"subtitle\">{lang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n        >\n          <span className=\"title word-break allow-selection\" dir=\"auto\">\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{lang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, lang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{lang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" ripple onClick={handleNotificationChange}>\n          <span>{lang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" ripple onClick={handleOpenSavedDialog}>\n          <span>{lang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isUserId(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum ? Number(threadId) : undefined;\n    const chatInviteLink = chat ? selectChatFullInfo(global, chat.id)?.inviteLink : undefined;\n    let description = user ? selectUserFullInfo(global, user.id)?.bio : undefined;\n    if (!description && chat) {\n      description = selectChatFullInfo(global, chat.id)?.about;\n    }\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n    };\n  },\n)(ChatExtra));\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useBotCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || !commands) {\n      setFilteredBotCommands(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean(filteredBotCommands?.length && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n  };\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../../hooks/useLang';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE, EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport {\n  requestMeasure, requestNextMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      saveDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        text: parseHtmlAsFormattedText(html),\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n\n    if (!IS_TOUCH_ENV) {\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    }\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { ApiDraft, MessageListType } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  openDeleteModal: () => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const { editMessage, setEditingDraft, toggleMessageWebPage } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteModal();\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Icon from '../../common/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  hasReplaceableMedia?: boolean;\n  editingMessage?: ApiMessage;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  hasReplaceableMedia,\n  editingMessage,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_IMAGE_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && hasReplaceableMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !hasReplaceableMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandTooltip = useModuleLoader(Bundles.Extra, 'BotCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandTooltip ? <BotCommandTooltip {...props} /> : undefined;\n};\n\nexport default BotCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row) => (\n          <div className=\"row\">\n            {row.map((button) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ messageId: message.id, button })}\n              >\n                {button.text}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <i className={buildClassName('bot-menu-icon', 'icon', 'icon-webapp', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{text}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo, ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n};\n\nconst FORWARD_RENDERING_DELAY = 300;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeForwardRecipient,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n  const isShown = Boolean(\n    ((replyInfo || editingId) && message)\n    || (sender && forwardedMessagesCount),\n  );\n  const canAnimate = useAsyncRendering(\n    [isShown, isForwarding],\n    isShown && isForwarding ? FORWARD_RENDERING_DELAY : undefined,\n  );\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransition(\n    canAnimate && isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n  );\n\n  const clearEmbedded = useLastCallback(() => {\n    if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    } else if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const handleMessageClick = useLastCallback((): void => {\n    if (isForwarding) return;\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n  });\n\n  const handleChangeRecipientClick = useLastCallback(() => {\n    changeForwardRecipient();\n  });\n\n  const {\n    isContextMenuOpen, contextMenuPosition, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  useEffect(() => {\n    if (!shouldRender) handleContextMenuClose();\n  }, [handleContextMenuClose, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n\n  const leftIcon = useMemo(() => {\n    if (isShowingReply) {\n      return 'reply';\n    }\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? lang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu} onClick={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\">\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? lang('EditMessage')\n            : noAuthors ? lang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {isForwarding && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            transformOriginX={transformOriginX}\n            transformOriginY={transformOriginY}\n            positionX={positionX}\n            positionY={positionY}\n            style={menuStyle}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            <MenuItem\n              icon={!noAuthors ? 'message-succeeded' : undefined}\n              customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: false,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n            </MenuItem>\n            <MenuItem\n              icon={noAuthors ? 'message-succeeded' : undefined}\n              customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => setForwardNoAuthors({\n                noAuthors: true,\n              })}\n            >\n              {lang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n            </MenuItem>\n            {forwardsHaveCaptions && (\n              <>\n                <MenuSeparator />\n                <MenuItem\n                  icon={!noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: false,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                </MenuItem>\n                <MenuItem\n                  icon={noCaptions ? 'message-succeeded' : undefined}\n                  customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoCaptions({\n                    noCaptions: true,\n                  })}\n                >\n                  {lang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                </MenuItem>\n              </>\n            )}\n            <MenuSeparator />\n            <MenuItem icon=\"replace\" onClick={handleChangeRecipientClick}>\n              {lang('ChangeRecipient')}\n            </MenuItem>\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { shouldForceShowEditing }): StateProps => {\n    const { chatId, threadId, type: messageListType } = selectCurrentMessageList(global) || {};\n    if (!chatId || !threadId || !messageListType) {\n      return {};\n    }\n\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global);\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n\n    let message: ApiMessage | undefined;\n    if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    } else if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    }\n\n    let sender: ApiPeer | undefined;\n    if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (editingId && message) {\n      sender = selectSender(global, message);\n    }\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n  } = getActions();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransition(isShown);\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\">\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage message={messageStub} inPreview theme={theme} />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './DeleteMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst DeleteMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DeleteMessageModal = useModuleLoader(Bundles.Extra, 'DeleteMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DeleteMessageModal ? <DeleteMessageModal {...props} /> : undefined;\n};\n\nexport default DeleteMessageModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n} from '../../api/types';\nimport type {\n  ApiDraft, GlobalState, MessageList,\n  MessageListType, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition, InlineBotSettings, ISettings, ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  REPLIES_USER_ID,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getAllowedAttachmentOptions,\n  getStoryKey,\n  hasReplaceableMedia,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectPeerStory,\n  selectRequestedDraftFiles,\n  selectRequestedDraftText,\n  selectScheduledIds,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dateFormat';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { escapeHtml } from '../middle/composer/helpers/cleanHtml';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useSignal from '../../hooks/useSignal';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useBotCommandTooltip from '../middle/composer/hooks/useBotCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotCommandTooltip from '../middle/composer/BotCommandTooltip.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport DeleteMessageModal from './DeleteMessageModal.async';\nimport Icon from './Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraftText?: string;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraftText,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  onForward,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n  } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePrevious(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && hasReplaceableMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && 'emoticon' in sentStoryReaction\n    ? sentStoryReaction.emoticon === HEART_REACTION.emoticon : false;\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    if (chatId && chat && !sendAsPeerIds && isReady && isChatSuperGroup(chat)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot, isInStoryViewer),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer],\n  );\n\n  const isComposerBlocked = !canSendPlainText && !editingMessage;\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const {\n    isOpen: isBotCommandTooltipOpen,\n    close: closeBotCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n  } = useBotCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length)),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer,\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    openDeleteModal,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuPosition: storyReactionPickerPosition,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerPosition) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerPosition,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerPosition]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    callAttachBot({\n      chatId, url: botMenuButton.url, threadId,\n    });\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraftText) {\n      setHtml(escapeHtml(requestedDraftText));\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraftText, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isDeleteModalOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isBotCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransition(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const prevEditedMessage = usePrevious(editingMessage, true);\n  const renderedEditedMessage = editingMessage || prevEditedMessage;\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('emoticon' in reaction) {\n      text = reaction.emoticon;\n    } else {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({ sendCompressed, sendGrouped }, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilentAttachments = useLastCallback((sendCompressed: boolean, sendGrouped: boolean) => {\n    sendSilent({ sendCompressed, sendGrouped });\n  });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachments}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      {renderedEditedMessage && (\n        <DeleteMessageModal\n          isOpen={isDeleteModalOpen}\n          isSchedule={messageListType === 'scheduled'}\n          onClose={closeDeleteModal}\n          message={renderedEditedMessage}\n        />\n      )}\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <BotCommandTooltip\n        isOpen={isBotCommandTooltipOpen}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        getHtml={getHtml}\n        onClick={handleBotCommandSelect}\n        onClose={closeBotCommandTooltip}\n      />\n      <div className={buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks')}>\n        <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n          <defs>\n            <filter\n              x=\"-50%\"\n              y=\"-14.7%\"\n              width=\"200%\"\n              height=\"141.2%\"\n              filterUnits=\"objectBoundingBox\"\n              id=\"composerAppendix\"\n            >\n              <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n              <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n              <feColorMatrix\n                values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                in=\"shadowBlurOuter1\"\n              />\n            </filter>\n          </defs>\n          <g fill=\"none\" fill-rule=\"evenodd\">\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n            <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n          </g>\n        </svg>\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {(!isComposerBlocked || canSendGifs || canSendStickers) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <i className=\"icon icon-schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          <AttachMenu\n            chatId={chatId}\n            threadId={threadId}\n            editingMessage={editingMessage}\n            hasReplaceableMedia={canMediaBeReplaced}\n            isButtonVisible={!activeVoiceRecording}\n            canAttachMedia={canAttachMedia}\n            canAttachPolls={canAttachPolls}\n            canSendPhotos={canSendPhotos}\n            canSendVideos={canSendVideos}\n            canSendDocuments={canSendDocuments}\n            canSendAudios={canSendAudios}\n            onFileSelect={handleFileSelect}\n            onPollCreate={openPollModal}\n            isScheduled={isInScheduledList}\n            attachBots={isInMessageList ? attachBots : undefined}\n            peerType={attachMenuPeerType}\n            shouldCollectDebugLogs={shouldCollectDebugLogs}\n            theme={theme}\n            onMenuOpen={onAttachMenuOpen}\n            onMenuClose={onAttachMenuClose}\n          />\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={lang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={'documentId' in sentStoryReaction ? sentStoryReaction.documentId : sentStoryReaction.emoticon}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <i\n              className={buildClassName(\n                'icon',\n                'icon-heart',\n                isSentStoryReactionHeart && 'story-reaction-heart',\n              )}\n              aria-hidden\n            />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <i className=\"icon icon-send\" />\n        <i className=\"icon icon-microphone-alt\" />\n        {onForward && <i className=\"icon icon-forward\" />}\n        {isInMessageList && <i className=\"icon icon-schedule\" />}\n        {isInMessageList && <i className=\"icon icon-check\" />}\n      </Button>\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = chatId !== REPLIES_USER_ID ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const chatBotFullInfo = isChatWithBot ? selectUserFullInfo(global, chatBot.id) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const scheduledIds = selectScheduledIds(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraftText = selectRequestedDraftText(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !selectUserFullInfo(global, user.id)?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    return {\n      availableReactions: type === 'story' ? global.reactions.availableReactions : undefined,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && Boolean(scheduledIds?.length)\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: chatBotFullInfo ? (chatBotFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: chatBotFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraftText,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'image' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'image' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n        setShouldSuggestCompression(undefined);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { SUPPORTED_IMAGE_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../config';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageWebPageDocument,\n  isMessageDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n  onDateClick?: (messageId: number, chatId: string) => void;\n};\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}) => {\n  const { cancelMessageMediaDownload, downloadMessageMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const document = message.content.document! || getMessageWebPageDocument(message);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getMessageMediaHash(message, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMessageMediaFormat(message, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && Boolean(document.mediaType) && (\n    SUPPORTED_VIDEO_CONTENT_TYPES.has(document.mimeType) || SUPPORTED_IMAGE_CONTENT_TYPES.has(document.mimeType)\n  );\n\n  const handleDownload = useLastCallback(() => {\n    downloadMessageMedia({ message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isMessageDocumentVideo(message) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLang from '../../hooks/useLang';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { LangFn } from '../../hooks/useLang';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: chatId });\n    }\n  }, [chatId, isMin, withFullInfo, loadFullChat, loadProfilePhotos, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: chat.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(lang: LangFn, chat: ApiChat) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? chat?.topics?.[threadId] : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport { formatPastTimeShort } from '../../util/dateFormat';\n\nimport useLang from '../../hooks/useLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus, draftDate }) => {\n  const lang = useLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: link });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransition(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\",\"-7s\":\"kFel0ZLm\",\"7S\":\"kFel0ZLm\",\"-14s\":\"C63lwaZj\",\"14S\":\"C63lwaZj\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    ref.current.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas ref={canvasRef} className={styles.canvas} width={width} height={height} />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <i className=\"icon icon-message-failed\" />\n          </div>\n        ) : <i className={`icon icon-message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useLang();\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Checkbox from '../ui/Checkbox';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport GroupChatInfo from './GroupChatInfo';\nimport PickerSelectedItem from './PickerSelectedItem';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport './Picker.scss';\n\ntype OwnProps = {\n  className?: string;\n  itemIds: string[];\n  selectedIds: string[];\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  isRoundCheckbox?: boolean;\n  lockedIds?: string[];\n  forceShowSelf?: boolean;\n  onSelectedIdsChange?: (ids: string[]) => void;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string) => void;\n  onLoadMore?: () => void;\n};\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst Picker: FC<OwnProps> = ({\n  className,\n  itemIds,\n  selectedIds,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  isRoundCheckbox,\n  lockedIds,\n  forceShowSelf,\n  onSelectedIdsChange,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return;\n    setTimeout(() => {\n      requestMutation(() => {\n        inputRef.current!.focus();\n      });\n    }, FOCUS_DELAY_MS);\n  }, [isSearchable]);\n\n  const [lockedSelectedIds, unlockedSelectedIds] = useMemo(() => {\n    if (!lockedIds?.length) return [MEMO_EMPTY_ARRAY, selectedIds];\n    const unlockedIds = selectedIds.filter((id) => !lockedIds.includes(id));\n    return [lockedIds, unlockedIds];\n  }, [selectedIds, lockedIds]);\n\n  const lockedIdsSet = useMemo(() => new Set(lockedIds), [lockedIds]);\n\n  const sortedItemIds = useMemo(() => {\n    return itemIds.sort((a, b) => {\n      const aIsLocked = lockedIdsSet.has(a);\n      const bIsLocked = lockedIdsSet.has(b);\n      if (aIsLocked && !bIsLocked) {\n        return -1;\n      }\n      if (!aIsLocked && bIsLocked) {\n        return 1;\n      }\n      return 0;\n    });\n  }, [itemIds, lockedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedIdsSet.has(id)) {\n      onDisabledClick?.(id);\n      return;\n    }\n\n    const newSelectedIds = selectedIds.slice();\n    if (newSelectedIds.includes(id)) {\n      newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n    } else {\n      newSelectedIds.push(id);\n    }\n    onSelectedIdsChange?.(newSelectedIds);\n    onFilterChange?.('');\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(onLoadMore, sortedItemIds, Boolean(filterValue));\n\n  const lang = useLang();\n\n  return (\n    <div className={buildClassName('Picker', className)}>\n      {isSearchable && (\n        <div className=\"picker-header custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PickerSelectedItem\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + lockedSelectedIds.length < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName('picker-list', 'custom-scroll', isRoundCheckbox && 'withRoundedCheckbox')}\n          items={viewportIds}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => {\n            const renderCheckbox = () => {\n              return (\n                <Checkbox\n                  label=\"\"\n                  disabled={lockedIdsSet.has(id)}\n                  checked={selectedIds.includes(id)}\n                  round={isRoundCheckbox}\n                />\n              );\n            };\n            return (\n              <ListItem\n                key={id}\n                className={buildClassName('chat-item-clickable picker-list-item', isRoundCheckbox && 'chat-item')}\n                disabled={lockedIdsSet.has(id)}\n                allowDisabledClick={Boolean(onDisabledClick)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleItemClick(id)}\n                ripple\n              >\n                {!isRoundCheckbox ? renderCheckbox() : undefined}\n                {isUserId(id) ? (\n                  <PrivateChatInfo forceShowSelf={forceShowSelf} userId={id} />\n                ) : (\n                  <GroupChatInfo chatId={id} />\n                )}\n                {isRoundCheckbox ? renderCheckbox() : undefined}\n              </ListItem>\n            );\n          })}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\">{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Picker);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getChatTitle, getUserFirstOrLastName } from '../../global/helpers';\nimport { selectChat, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  peerId?: string;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  forceShowSelf?: boolean;\n  clickArg?: any;\n  className?: string;\n  fluid?: boolean;\n  withPeerColors?: boolean;\n  onClick: (arg: any) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  clickArg,\n  chat,\n  user,\n  className,\n  fluid,\n  isSavedMessages,\n  withPeerColors,\n  onClick,\n}) => {\n  const lang = useLang();\n\n  let iconElement: TeactNode | undefined;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={buildClassName('icon', `icon-${icon}`)} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (user || chat) {\n    iconElement = (\n      <Avatar\n        peer={user || chat}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    const name = !chat || (user && !isSavedMessages)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(lang, chat, isSavedMessages);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    chat?.isForum && 'forum-avatar',\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n    fluid && 'fluid',\n    withPeerColors && getPeerColorClass(chat || user),\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\" dir=\"auto\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const chat = selectChat(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      chat,\n      user,\n      isSavedMessages,\n    };\n  },\n)(PickerSelectedItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useLang from '../../hooks/useLang';\n\nimport Icon from './Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  className?: string;\n};\n\nconst PROGRESS_LOCK = 0.1;\n\nconst LimitPreview: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  className,\n}) => {\n  const lang = useLang();\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  const tailPosition = progress && (progress < PROGRESS_LOCK ? 0 : progress > 1 - PROGRESS_LOCK ? 1 : 0.5);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(LimitPreview);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { getMainUsername, getUserStatus, isUserOnline } from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId: string;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadProfilePhotos,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo) loadFullUser({ userId });\n      if (withMediaViewer) loadProfilePhotos({ profileId: userId });\n    }\n  }, [userId, withFullInfo, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          avatarOwnerId: user.id,\n          mediaId: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={user!}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        peer={user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const user = selectUser(global, userId);\n    const userStatus = selectUserStatus(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getUserFullName,\n  getVideoAvatarMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = user || chat;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = canHaveMedia && getChatAvatarHash(peer, 'normal');\n  const avatarBlobUrl = useMedia(avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && `photo${photo.id}?size=c`;\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoAvatarMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransition(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !avatarBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || avatarBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={avatarBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"DnvLcTfv\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPhoto, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isUserId, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectUser,\n  selectUserFullInfo,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePrevious from '../../hooks/usePrevious';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  userId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaId?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    userPersonalPhoto?: ApiPhoto;\n    userProfilePhoto?: ApiPhoto;\n    userFallbackPhoto?: ApiPhoto;\n    chatProfilePhoto?: ApiPhoto;\n    emojiStatusSticker?: ApiSticker;\n  }\n  & Pick<GlobalState, 'connectionState'>;\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  connectionState,\n  mediaId,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  userPersonalPhoto,\n  userProfilePhoto,\n  userFallbackPhoto,\n  chatProfilePhoto,\n  emojiStatusSticker,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { id: userId } = user || {};\n  const { id: chatId } = chat || {};\n  const photos = user?.photos || chat?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaId = usePrevious(mediaId);\n  const prevAvatarOwnerId = usePrevious(avatarOwnerId);\n  const mediaIdRef = useStateRef(mediaId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaId !== undefined && mediaId === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaId);\n    }\n  }, [mediaId, prevMediaId, prevAvatarOwnerId]);\n\n  // Reset the current avatar photo to the one selected in Media Viewer if photos have changed\n  useEffect(() => {\n    setHasSlideAnimation(false);\n    setCurrentPhotoIndex(mediaIdRef.current || 0);\n  }, [mediaIdRef, photos]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  useEffect(() => {\n    if (connectionState === 'connectionStateReady' && userId && !forceShowSelf) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, connectionState, forceShowSelf]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      avatarOwnerId: userId || chatId,\n      mediaId: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!userId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: userId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    if (!photos || photos.length <= 1) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.photoDashes}>\n        {photos.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === currentPhotoIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n    const profilePhoto = photo || userPersonalPhoto || userProfilePhoto || chatProfilePhoto || userFallbackPhoto;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={profilePhoto}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const peerId = (chatId || userId)!;\n\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    if (isAnonymousForwards) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && userPersonalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(userPersonalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && userFallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={userFallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(userFallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const { connectionState } = global;\n    const user = selectUser(global, userId);\n    const isPrivate = isUserId(userId);\n    const userStatus = selectUserStatus(global, userId);\n    const chat = selectChat(global, userId);\n    const { mediaId, avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? chat?.topics?.[currentTopicId] : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, userId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, userId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n\n    return {\n      connectionState,\n      user,\n      userStatus,\n      chat,\n      userPersonalPhoto: userFullInfo?.personalPhoto,\n      userProfilePhoto: userFullInfo?.profilePhoto,\n      userFallbackPhoto: userFullInfo?.fallbackPhoto,\n      chatProfilePhoto: chatFullInfo?.profilePhoto,\n      mediaId,\n      avatarOwnerId,\n      emojiStatusSticker,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, userId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaData = mediaLoader.getFromMemory(`photo${photo.id}?size=c`);\n      if (!mediaData) {\n        mediaLoader.fetch(`photo${photo.id}?size=c`, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { isSameReaction } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\n\nimport CustomEmoji from './CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const isCustom = 'documentId' in reaction;\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaData = useMedia(`document${staticIconId}`, !staticIconId, ApiMediaFormat.BlobUrl);\n\n  const transitionClassNames = useMediaTransition(mediaData);\n\n  const shouldApplySizeFix = 'emoticon' in reaction && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && 'emoticon' in reaction && reaction.emoticon === '❤';\n\n  if (isCustom) {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  subject?: 'peer' | 'messages' | 'media' | 'story';\n  peerId?: string;\n  photo?: ApiPhoto;\n  messageIds?: number[];\n  storyId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportModal: FC<OwnProps> = ({\n  isOpen,\n  subject = 'messages',\n  peerId,\n  photo,\n  messageIds,\n  storyId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    reportMessages,\n    reportPeer,\n    reportProfilePhoto,\n    reportStory,\n    exitMessageSelectMode,\n  } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    switch (subject) {\n      case 'messages':\n        reportMessages({ messageIds: messageIds!, reason: selectedReason, description });\n        exitMessageSelectMode();\n        break;\n      case 'peer':\n        reportPeer({ chatId: peerId, reason: selectedReason, description });\n        break;\n      case 'media':\n        reportProfilePhoto({\n          chatId: peerId, photo, reason: selectedReason, description,\n        });\n        break;\n      case 'story':\n        reportStory({\n          peerId: peerId!, storyId: storyId!, reason: selectedReason, description,\n        });\n    }\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (\n    (subject === 'messages' && !messageIds)\n    || (subject === 'peer' && !peerId)\n    || (subject === 'media' && (!peerId || !photo))\n    || (subject === 'story' && (!storyId || !peerId))\n  ) {\n    return undefined;\n  }\n\n  const title = subject === 'messages'\n    ? lang('lng_report_message_title')\n    : lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className={buildClassName('narrow', subject === 'story' && 'component-theme-dark')}\n      title={title}\n    >\n      <RadioGroup\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (messageId: number, chatId: string) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo,\n} from '../../../api/types';\nimport type { ChatTranslatedMessages } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getSenderTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useMedia from '../../../hooks/useMedia';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport Icon from '../Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const wrappedMedia = useMemo(() => {\n    const replyMedia = replyInfo?.type === 'message' && replyInfo.replyMedia;\n    if (!replyMedia) return undefined;\n    return {\n      content: replyMedia,\n    };\n  }, [replyInfo]);\n\n  const mediaBlobUrl = useMedia(message && getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = useThumbnail(message || wrappedMedia);\n  const isRoundVideo = Boolean(message && getMessageRoundVideo(message));\n  const isSpoiler = Boolean(message && getMessageIsSpoiler(message));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getSenderTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        noLineBreaks: isInComposer,\n      });\n    }\n\n    if (!message) {\n      return customText || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        lang={lang}\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isChatSender = senderChat && senderChat.id === sender?.id;\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <>\n        {!isChatSender && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && renderText(senderChatTitle)}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {mediaThumbnail && renderPictogram(mediaThumbnail, mediaBlobUrl, isRoundVideo, isProtected, isSpoiler)}\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      <MediaSpoiler thumbDataUri={srcUrl} isVisible={Boolean(isSpoiler)} width={width} height={height} />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pTWe_CYU\"};","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { preloadImage } from '../../../util/files';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 22, block: 38, opacity: 0.35, scale: 0.75,\n  },\n  {\n    inline: 32, block: 12, opacity: 0.3, scale: 1,\n  },\n  {\n    inline: 60, block: 22, opacity: 0.25, scale: 0.75,\n  },\n  {\n    inline: 75, block: 44, opacity: 0.25, scale: 1,\n  },\n  {\n    inline: 75, block: 2, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 95, block: 18, opacity: 0.2, scale: 1,\n  },\n  {\n    inline: 115, block: 38, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 125, block: 12, opacity: 0.1, scale: 0.75,\n  },\n];\n\nconst EMOJI_SIZE = REM;\nconst LOTTIE_TINT_OPACITY = 'ff';\nconst NON_LOTTIE_TINT_OPACITY = 'bb';\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const dpr = useDevicePixelRatio();\n\n  const lang = useLang();\n\n  const { customEmoji } = useCustomEmoji(emojiDocumentId);\n  const previewMediaHash = customEmoji ? getStickerPreviewHash(customEmoji.id) : undefined;\n  const previewUrl = useMedia(previewMediaHash);\n\n  const customColor = useDynamicColorListener(containerRef);\n\n  useEffect(() => {\n    if (!previewUrl) return;\n\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  const updateCanvas = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage || !customColor) return;\n\n    const context = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n\n    context.clearRect(0, 0, width, height);\n\n    ICON_POSITIONS.forEach(({\n      inline, block, opacity, scale,\n    }) => {\n      const x = (lang.isRtl ? inline : width / dpr - inline) * dpr;\n      const y = block * dpr;\n\n      const emojiSize = EMOJI_SIZE * dpr;\n\n      context.save();\n      context.globalAlpha = opacity;\n      context.translate(x, y);\n      context.scale(scale, scale);\n      context.drawImage(emojiImage, -emojiSize / 2, -emojiSize / 2, emojiSize, emojiSize);\n      context.restore();\n    });\n\n    const tintColor = `${customColor}${customEmoji!.isLottie ? LOTTIE_TINT_OPACITY : NON_LOTTIE_TINT_OPACITY}`;\n\n    context.save();\n    context.fillStyle = tintColor;\n    context.globalCompositeOperation = 'source-atop';\n    context.fillRect(0, 0, width, height);\n    context.restore();\n  });\n\n  useEffect(() => {\n    updateCanvas();\n  }, [emojiImage, lang.isRtl, customColor]);\n\n  const updateCanvasSize = useLastCallback((parentWidth: number, parentHeight: number) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    canvas.width = parentWidth * dpr;\n    canvas.height = parentHeight * dpr;\n\n    canvas.style.width = `${parentWidth}px`;\n    canvas.style.height = `${parentHeight}px`;\n\n    updateCanvas();\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    const { width, height } = entry.contentRect;\n\n    requestMutation(() => {\n      updateCanvasSize(width, height);\n    });\n  });\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const { width, height } = container.getBoundingClientRect();\n\n    requestMutation(() => {\n      updateCanvasSize(width, height);\n    });\n  }, [dpr]);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={containerRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n  };\n}\n","import type { ApiMessage } from '../../../api/types';\nimport type { LangFn } from '../../../hooks/useLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  getMessageText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers';\nimport { getMessageKey } from '../../../util/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: LangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n  return orderBy(chatIds, (id) => {\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerPreviewHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerPreviewHash(reaction.documentId);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction, ApiReaction, ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport ReactionStaticEmoji from '../ReactionStaticEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = 'documentId' in reaction;\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && `sticker${centerIconId}`;\n  const mediaHashEffect = effectId && `sticker${effectId}`;\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon, !centerIconId);\n  const mediaDataEffect = useMedia(mediaHashEffect, !effectId);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransition(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransition(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransition(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          loopLimit={loopLimit}\n          forceAlways\n          observeIntersectionForPlaying={observeIntersection}\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          forceAlways\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic, chat, isPinned, isMuted, shouldShowOnlyMostImportant, wasTopicOpened, forceHidden, isSavedDialog,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && chat?.topics ? Object.values(chat.topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [chat, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = chat.topics\n      && Object.values(chat.topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (chat.topics && !hasUnmutedUnreadTopics);\n  }, [chat, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useLang from '../../../hooks/useLang';\n\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","import { addCallback } from '../lib/teact/teactn';\nimport { getGlobal } from '../global';\n\nimport type { GlobalState } from '../global/types';\nimport type { Signal, SignalSetter } from '../util/signals';\n\nimport { createSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\n/*\n  This hook is a more performant variation of the standard React `useSelector` hook. It allows to:\n  a) Avoid multiple subscriptions to global updates by leveraging a single selector reference.\n  b) Return a signal instead of forcing a component update right away.\n */\n\ntype Selector<T extends any> = (global: GlobalState) => T;\n\ninterface State<T extends any> {\n  clientsCount: number;\n  getter: Signal<T>;\n  setter: SignalSetter;\n}\n\nconst bySelector = new Map<Selector<any>, State<any>>();\n\naddCallback((global: GlobalState) => {\n  for (const [selector, { setter }] of bySelector) {\n    setter(selector(global));\n  }\n});\n\nfunction useSelectorSignal<T extends any>(selector: Selector<T>): Signal<T> {\n  let state = bySelector.get(selector);\n\n  if (!state) {\n    const [getter, setter] = createSignal(selector(getGlobal()));\n    state = { clientsCount: 0, getter, setter };\n    bySelector.set(selector, state);\n  }\n\n  useEffectOnce(() => {\n    state!.clientsCount++;\n\n    return () => {\n      state!.clientsCount--;\n\n      if (!state!.clientsCount) {\n        bySelector.delete(selector);\n      }\n    };\n  });\n\n  return state.getter;\n}\n\nexport default useSelectorSignal;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSelectorSignal from '../../../hooks/useSelectorSignal';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ReportModal from '../../common/ReportModal';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop: number;\n  isSavedDialog?: boolean;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  observeIntersection,\n  chat,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [isReportModalOpen, openReportModal, closeReportModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderReportModal, markRenderReportModal, unmarkRenderReportModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    markRenderReportModal();\n    openReportModal();\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && chat && chat.listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chat, chatId, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransition(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div className={buildClassName('avatar-online', isAvatarOnlineShown && 'avatar-online-shown')} />\n          <ChatBadge chat={chat} isMuted={isMuted} shouldShowOnlyMostImportant forceHidden={getIsForumPanelClosed} />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge chat={chat} isPinned={isPinned} isMuted={isMuted} isSavedDialog={isSavedDialog} />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderReportModal && (\n        <ReportModal\n          isOpen={isReportModalOpen}\n          onClose={closeReportModal}\n          onCloseAnimationEnd={unmarkRenderReportModal}\n          peerId={chatId}\n          subject=\"peer\"\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isSavedDialog }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { senderId, isOutgoing, forwardInfo } = lastMessage || {};\n    const actualSenderId = isSavedDialog ? forwardInfo?.fromId : senderId;\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = actualSenderId ? selectPeer(global, actualSenderId) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n    };\n  },\n)(Chat));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined);\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectThreadInfo,\n  selectThreadParam,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { senderId, isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLang from '../../../../hooks/useLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface, selectChat, selectCurrentMessageList, selectIsForumPanelOpen, selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { dispatchHeavyAnimationEvent } from '../../../hooks/useHeavyAnimationCheck';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (chat && !chat.topics) {\n      loadTopics({ chatId: chat.id });\n    }\n  }, [chat, loadTopics]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return chat?.topics\n      ? getOrderedTopics(Object.values(chat.topics), chat.orderedPinnedTopicIds).map(({ id }) => id)\n      : [];\n  }, [chat]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !chat?.topicsCount || orderedIds.length >= chat.topicsCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePrevious(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const dispatchHeavyAnimationStop = dispatchHeavyAnimationEvent();\n        waitForTransitionEnd(ref.current, dispatchHeavyAnimationStop);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={chat!.topics![id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = chat?.topics === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} hasPinnedOffset={false} className={styles.groupCall} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chat.id} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"group-call\":\"wUpRjGJ2\",\"groupCall\":\"wUpRjGJ2\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useLang from '../../hooks/useLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!chat.topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(chat.topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [chat.topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getExpiredMessageDescription,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n  isExpiredMessage,\n} from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useLang from '../../../../hooks/useLang';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  lastMessage,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n}: {\n  chat?: ApiChat;\n  lastMessage?: ApiMessage;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isExpiredMessage(lastMessage)) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {getExpiredMessageDescription(lang, lastMessage)}\n        </p>\n      );\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            lang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(lang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lang, lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, lang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus, isSavedDialog,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  lang: LangFn, message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      lang={lang}\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePrevious(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePrevious from '../../../../hooks/usePrevious';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePrevious(orderById);\n  const prevChatId = usePrevious(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { LangFn } from '../../../../hooks/useLang';\n\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: LangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { ApiMediaFormat, MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getMessageMediaHash } from '../../global/helpers';\nimport * as mediaLoader from '../../util/mediaLoader';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const suggestedPhotoUrl = useMedia(getMessageMediaHash(message, 'full'));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const photo = message.content.action!.photo!;\n    const blobUrl = await mediaLoader.fetch(`videoAvatar${photo.id}?size=u`, ApiMediaFormat.BlobUrl);\n    const blob = await fetch(blobUrl).then((r) => r.blob());\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetch(suggestedPhotoUrl).then((r) => r.blob()));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        mediaId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"V3RHiOJR\",\"notch\":\"tfG_BSDt\",\"notch-path\":\"HVbeGv4t\",\"notchPath\":\"HVbeGv4t\",\"join-text\":\"UHAMd4fI\",\"joinText\":\"UHAMd4fI\",\"header\":\"s7QOi22Q\",\"title\":\"JstcOhAN\",\"close\":\"meewH7t_\",\"icon\":\"d8axZxyN\",\"skeleton\":\"xKVZv7KE\",\"inner\":\"njAC8dR9\",\"is-appearing\":\"eb8rX09E\",\"isAppearing\":\"eb8rX09E\",\"channels-appear\":\"AL2cLQ4i\",\"channelsAppear\":\"AL2cLQ4i\",\"is-hiding\":\"XR6_qLCc\",\"isHiding\":\"XR6_qLCc\",\"channels-disappear\":\"TwwnoiuD\",\"channelsDisappear\":\"TwwnoiuD\",\"channel-list\":\"h4gWlNen\",\"channelList\":\"h4gWlNen\",\"item\":\"glDpC2av\",\"last-item\":\"MBChXyXk\",\"lastItem\":\"MBChXyXk\",\"avatar\":\"gqCs9fSo\",\"badge\":\"gnYhwnvf\",\"members-count\":\"HWgwnKui\",\"membersCount\":\"HWgwnKui\",\"channel-title\":\"BTNQ4KBH\",\"channelTitle\":\"BTNQ4KBH\",\"fake-avatar\":\"Xl9MVMTn\",\"fakeAvatar\":\"Xl9MVMTn\",\"fake-avatar-inner\":\"Qizai7yv\",\"fakeAvatarInner\":\"Qizai7yv\",\"last-fake-avatar\":\"JxSmtOFi\",\"lastFakeAvatar\":\"JxSmtOFi\"};","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectSimilarChannelIds,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useAverageColor from '../../../hooks/useAverageColor';\nimport useFlag from '../../../hooks/useFlag';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/Icon';\nimport Button from '../../ui/Button';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './SimilarChannels.module.scss';\n\nconst DEFAULT_BADGE_COLOR = '#3C3C4399';\nconst SHOW_CHANNELS_NUMBER = 10;\nconst MIN_SKELETON_DELAY = 300;\nconst MAX_SKELETON_DELAY = 2000;\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  similarChannelIds?: string[];\n  shouldShowInChat?: boolean;\n  count: number;\n  isCurrentUserPremium: boolean;\n};\n\nconst SimilarChannels = ({\n  chatId,\n  similarChannelIds,\n  shouldShowInChat,\n  count,\n  isCurrentUserPremium,\n}: StateProps & OwnProps) => {\n  const lang = useLang();\n  const { toggleChannelRecommendations } = getActions();\n  const [isShowing, markShowing, markNotShowing] = useFlag(false);\n  const [isHiding, markHiding, markNotHiding] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const similarChannels = useMemo(() => {\n    if (!similarChannelIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return similarChannelIds.map((id) => selectChat(global, id)).filter(Boolean);\n  }, [similarChannelIds]);\n  // Show skeleton while loading similar channels\n  const [shoulRenderSkeleton, setShoulRenderSkeleton] = useState(!similarChannelIds);\n  const firstSimilarChannels = useMemo(() => similarChannels?.slice(0, SHOW_CHANNELS_NUMBER), [similarChannels]);\n  const areSimilarChannelsPresent = Boolean(firstSimilarChannels?.length);\n  useHorizontalScroll(ref, !areSimilarChannelsPresent || !shouldShowInChat || shoulRenderSkeleton, true);\n  const isAnimating = isHiding || isShowing;\n  const shouldRenderChannels = Boolean(\n    !shoulRenderSkeleton\n      && (shouldShowInChat || isAnimating)\n      && areSimilarChannelsPresent,\n  );\n\n  useTimeout(() => setShoulRenderSkeleton(false), MAX_SKELETON_DELAY);\n\n  useEffect(() => {\n    if (shoulRenderSkeleton && similarChannels && shouldShowInChat) {\n      const id = setTimeout(() => {\n        setShoulRenderSkeleton(false);\n      }, MIN_SKELETON_DELAY);\n\n      return () => clearTimeout(id);\n    }\n\n    return undefined;\n  }, [similarChannels, shouldShowInChat, shoulRenderSkeleton]);\n\n  const handleToggle = useLastCallback(() => {\n    toggleChannelRecommendations({ chatId });\n    if (shouldShowInChat) {\n      markNotShowing();\n      markHiding();\n    } else {\n      markShowing();\n      markNotHiding();\n    }\n  });\n\n  return (\n    <div className={buildClassName(styles.root)}>\n      <div className=\"join-text\">\n        <span\n          className={buildClassName(areSimilarChannelsPresent && styles.joinText)}\n          onClick={areSimilarChannelsPresent ? handleToggle : undefined}\n        >\n          {lang('ChannelJoined')}\n        </span>\n      </div>\n      {shoulRenderSkeleton && <Skeleton className={styles.skeleton} />}\n      {shouldRenderChannels && (\n        <div\n          className={buildClassName(\n            isShowing && styles.isAppearing,\n            isHiding && styles.isHiding,\n          )}\n        >\n          <div className={styles.notch}>\n            <svg\n              width=\"19\"\n              height=\"7\"\n              viewBox=\"0 0 19 7\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                className={styles.notchPath}\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M19 7C16.8992 7 13.59 3.88897 11.5003 1.67424C10.7648 0.894688 10.397 0.50491 10.0434 0.385149C9.70568 0.270811 9.4225 0.270474 9.08456 0.38401C8.73059 0.50293 8.36133 0.892443 7.62279 1.67147C5.52303 3.88637 2.18302 7 0 7L19 7Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </div>\n          <div className={styles.inner}>\n            <div className={styles.header}>\n              <span className={styles.title}>{lang('SimilarChannels')}</span>\n              <Button\n                className={styles.close}\n                color=\"translucent\"\n                onClick={handleToggle}\n              >\n                <Icon name=\"close\" />\n              </Button>\n            </div>\n            <div ref={ref} className={buildClassName(styles.channelList, 'no-scrollbar')}>\n              {firstSimilarChannels?.map((channel, i) => {\n                return i === SHOW_CHANNELS_NUMBER - 1 ? (\n                  <MoreChannels\n                    channel={channel}\n                    chatId={chatId}\n                    channelsCount={count - SHOW_CHANNELS_NUMBER + 1}\n                    isCurrentUserPremium={isCurrentUserPremium}\n                  />\n                ) : (\n                  <SimilarChannel channel={channel} />\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SimilarChannel({ channel }: { channel: ApiChat }) {\n  const { openChat } = getActions();\n  const color = useAverageColor(channel, DEFAULT_BADGE_COLOR);\n\n  return (\n    <div className={styles.item} onClick={() => openChat({ id: channel.id })}>\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div style={`background: ${color}`} className={styles.badge}>\n        <i className={buildClassName(styles.icon, 'icon icon-user-filled')} />\n        <span className={styles.membersCount}>{formatIntegerCompact(channel?.membersCount || 0)}\n        </span>\n      </div>\n      <span className={styles.channelTitle}>{channel.title}</span>\n    </div>\n  );\n}\n\nfunction MoreChannels({\n  channel,\n  chatId,\n  channelsCount,\n  isCurrentUserPremium,\n}: {\n  channel: ApiChat;\n  chatId: string;\n  channelsCount: number;\n  isCurrentUserPremium: boolean;\n}) {\n  const { openPremiumModal, openChatWithInfo } = getActions();\n  const lang = useLang();\n\n  const handleClickMore = () => {\n    if (isCurrentUserPremium) {\n      openChatWithInfo({\n        id: chatId, shouldReplaceHistory: true, profileTab: 'similarChannels', forceScrollProfileTab: true,\n      });\n    } else {\n      openPremiumModal();\n    }\n  };\n\n  return (\n    <div\n      className={buildClassName(styles.item, styles.lastItem)}\n      onClick={() => handleClickMore()}\n    >\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div className={styles.fakeAvatar}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={buildClassName(styles.fakeAvatar, styles.lastFakeAvatar)}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={styles.badge}>\n        <span className={styles.membersCount}>{`+${channelsCount}`}</span>\n        {!isCurrentUserPremium && <Icon name=\"lock-badge\" className={styles.icon} />}\n      </div>\n      <span className={styles.channelTitle}>{lang('MoreSimilar')}</span>\n    </div>\n  );\n}\n\nexport default memo(\n  withGlobal<OwnProps>((global, { chatId }): StateProps => {\n    const { similarChannelIds, shouldShowInChat, count } = selectSimilarChannelIds(global, chatId) || {};\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      similarChannelIds,\n      shouldShowInChat,\n      count,\n      isCurrentUserPremium,\n    };\n  })(SimilarChannels),\n);\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { ApiChat } from '../api/types';\nimport { ApiMediaFormat } from '../api/types';\n\nimport { getChatAvatarHash } from '../global/helpers';\nimport { getAverageColor, rgb2hex } from '../util/colors';\nimport useMedia from './useMedia';\n\nfunction useAverageColor(chat: ApiChat, fallbackColor = '#00000000') {\n  const [color, setColor] = useState(fallbackColor);\n  const imgBlobUrl = useMedia(getChatAvatarHash(chat), false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    (async () => {\n      if (!imgBlobUrl) {\n        return;\n      }\n\n      const averageColor = await getAverageColor(imgBlobUrl);\n      setColor(`#${rgb2hex(averageColor)}`);\n    })();\n  }, [imgBlobUrl]);\n\n  return color;\n}\n\nexport default useAverageColor;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { MessageListType } from '../../global/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection, ThreadId } from '../../types';\nimport type { PinnedIntersectionChangedCallback } from './hooks/usePinnedMessage';\n\nimport {\n  getChatTitle, getMessageHtmlId, isChatChannel, isJoinedChannelMessage,\n} from '../../global/helpers';\nimport { getMessageReplyInfo } from '../../global/helpers/replies';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectGiftStickerForDuration,\n  selectIsMessageFocused,\n  selectTabState,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport renderText from '../common/helpers/renderText';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\nimport SimilarChannels from './message/SimilarChannels';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onPinnedIntersectionChange?: PinnedIntersectionChangedCallback;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  targetChat?: ApiChat;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  targetChat,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onPinnedIntersectionChange,\n}) => {\n  const { openPremiumModal, requestConfetti, checkGiftCode } = getActions();\n\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(\n    message.chatId,\n    message.replyInfo?.type === 'message' ? message.replyInfo.replyToMsgId : undefined,\n    targetMessage,\n  );\n  useFocusMessage(ref, message.chatId, isFocused, focusDirection, noFocusHighlight, isJustAdded);\n\n  useEffect(() => {\n    if (!message.isPinned) return undefined;\n\n    return () => {\n      onPinnedIntersectionChange?.({ viewportPinnedIdsToRemove: [message.id], isUnmount: true });\n    };\n  }, [onPinnedIntersectionChange, message.isPinned, message.id]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isGift = Boolean(message.content.action?.text.startsWith('ActionGift'));\n  const isGiftCode = Boolean(message.content.action?.text.startsWith('BoostingReceivedGift'));\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n  const isJoinedMessage = isJoinedChannelMessage(message);\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti({});\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransition(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      lang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, lang, message, observeIntersectionForLoading, observeIntersectionForPlaying,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuPosition !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  const handleGiftCodeClick = () => {\n    const slug = message.content.action?.slug;\n    if (!slug) return;\n    checkGiftCode({ slug, message: { chatId: message.chatId, messageId: message.id } });\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    return (\n      <span className=\"action-message-gift\" tabIndex={0} role=\"button\" onClick={handlePremiumGiftClick}>\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang('ActionGiftPremiumTitle')}</strong>\n        <span>{lang('ActionGiftPremiumSubtitle', lang('Months', message.content.action?.months, 'i'))}</span>\n\n        <span className=\"action-message-button\">{lang('ActionGiftPremiumView')}</span>\n      </span>\n    );\n  }\n\n  function renderGiftCode() {\n    const isFromGiveaway = message.content.action?.isGiveaway;\n    const isUnclaimed = message.content.action?.isUnclaimed;\n    return (\n      <span\n        className=\"action-message-gift action-message-gift-code\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleGiftCodeClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{lang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}</strong>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(isFromGiveaway ? 'BoostingReceivedGiftFrom' : isUnclaimed\n            ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize',\n          getChatTitle(lang, targetChat!)),\n          ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(\n            'BoostingUnclaimedPrizeDuration',\n            lang('Months', message.content.action?.months, 'i'),\n          ), ['simple_markdown'])}\n        </span>\n\n        <span className=\"action-message-button\">{lang('BoostingReceivedGiftOpenBtn')}</span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isGift || isSuggestedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && !isGiftCode && !isJoinedMessage && (\n        <span className=\"action-message-content\">{renderContent()}</span>\n      )}\n      {isGift && renderGift()}\n      {isGiftCode && renderGiftCode()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isJoinedMessage && <SimilarChannels chatId={targetChatId!} />}\n      {contextMenuPosition && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuPosition}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, content,\n    } = message;\n\n    const userId = senderId;\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = getMessageReplyInfo(message)?.replyToMsgId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const chat = selectChat(global, chatId);\n    const isChat = chat && (isChatChannel(chat) || userId === chatId);\n    const senderUser = !isChat && userId ? selectUser(global, userId) : undefined;\n    const senderChat = isChat ? chat : undefined;\n\n    const targetChat = targetChatId ? selectChat(global, targetChatId) : undefined;\n\n    const giftDuration = content.action?.months;\n    const premiumGiftSticker = selectGiftStickerForDuration(global, giftDuration);\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      topic,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openLocalTextSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openLocalTextSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      const searchInput = document.querySelector<HTMLInputElement>('#MobileSearch input')!;\n      searchInput.focus();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys({\n    'Mod+F': handleHotkeySearchClick,\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuPosition && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuPosition}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewBoosts = isMainThread && isChannel && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('.RightHeader .SearchInput input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n      const isFileSticker = newAttachment && isUploadingFileSticker(newAttachment);\n\n      if (canReplace || isFileSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerId=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport { isHeavyAnimating } from '../../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (isHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS)}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className=\"input-scroller-content\">\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={onFocus}\n            onBlur={onBlur}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div ref={scrollerCloneRef} className={buildClassName('custom-scroll', SCROLLER_CLASS, 'clone')}>\n        <div className=\"input-scroller-content\">\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../hooks/useMenuPosition';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuPosition({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        positionX={isAttachmentModal ? positionX : undefined}\n        positionY={isAttachmentModal ? positionY : undefined}\n        transformOriginX={isAttachmentModal ? transformOriginX : undefined}\n        transformOriginY={isAttachmentModal ? transformOriginY : undefined}\n        style={isAttachmentModal ? menuStyle : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { ensureProtocol } from '../../../util/ensureProtocol';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <i className=\"icon icon-eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_IMAGE_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_IMAGE_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !attach.voice ? true : undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransition(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessagePhoto,\n  getMessageWebPagePhoto,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Photo: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const photo = (getMessagePhoto(message) || getMessageWebPagePhoto(message))!;\n  const localBlobUrl = photo.blobUrl;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(getMessageMediaHash(message, size), !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(photo.isSpoiler);\n\n  useEffect(() => {\n    if (photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [photo.isSpoiler]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'), !isDownloading, getMessageMediaFormat(message, 'download'),\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled, 'slow');\n  const {\n    shouldRender: shouldRenderDownloadButton,\n    transitionClassNames: downloadButtonClassNames,\n  } = useShowTransition(!fullMediaData && !isLoadAllowed);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const isOwn = isOwnMessage(message);\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      getCustomAppendixBg(fullMediaData, isOwn, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions(message, asForwarded, noAvatars, isMobile);\n\n  const className = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    width === height && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      <img\n        src={fullMediaData}\n        className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        draggable={!isProtected}\n      />\n      {withThumb && (\n        <canvas ref={thumbRef} className={buildClassName('thumbnail', thumbClassNames)} />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton\n        && <i className={buildClassName('icon', 'icon-download', downloadButtonClassNames)} />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMessageMediaFormat, getMessageMediaHash, getMessageMediaThumbDataUri, hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useSignal from '../../../hooks/useSignal';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const video = message.content.video!;\n\n  const { cancelMessageMediaDownload, openOneTimeMediaModal } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'inline'),\n    !shouldLoad,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const thumbClassNames = useMediaTransition(!noThumb);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, wasLoadDisabled);\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const tooglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    tooglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback(() => {\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    tooglePlaying();\n  });\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            loop={!isActivated}\n            playsInline\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', thumbClassNames)}\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldSpinnerRender && (\n        <div className={`media-loading ${spinnerClassNames}`}>\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldSpinnerRender && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <i className=\"icon icon-download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div className=\"message-media-duration\">\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaTransferState,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePrevious from '../../../hooks/usePrevious';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps = {\n  id?: string;\n  message: ApiMessage;\n  observeIntersectionForLoading: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  onClick?: (id: number) => void;\n  onCancelUpload?: (message: ApiMessage) => void;\n};\n\nconst Video: FC<OwnProps> = ({\n  id,\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  onClick,\n  onCancelUpload,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const video = (getMessageVideo(message) || getMessageWebPageVideo(message))!;\n  const localBlobUrl = video.blobUrl;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(video.isSpoiler);\n\n  useEffect(() => {\n    if (video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [video.isSpoiler]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = getMessageMediaHash(message, 'inline');\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash, !shouldLoad, getMessageMediaFormat(message, 'inline'),\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const previewMediaHash = getMessageMediaHash(message, 'preview');\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const previewClassNames = useMediaTransition((hasThumb || previewBlobUrl) && !isPlayerReady);\n\n  const noThumb = !hasThumb || previewBlobUrl || isPlayerReady;\n  const thumbRef = useBlurredMediaThumbRef(message, noThumb);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(message, !withBlurredBackground);\n  const thumbClassNames = useMediaTransition(!noThumb);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMessageMediaHash(message, 'download'),\n    !isDownloading,\n    getMessageMediaFormat(message, 'download'),\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    message,\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePrevious(isLoadAllowed) === false;\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring && !isUnsupported, undefined, wasLoadDisabled);\n  const {\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransition(Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner));\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) ? videoRef.current?.duration : video.duration) || 0;\n\n  const isOwn = isOwnMessage(message);\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const {\n    width, height,\n  } = dimensions || calculateVideoDimensions(video, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.(message);\n      return;\n    }\n\n    if (isDownloading) {\n      getActions().cancelMessageMediaDownload({ message });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(message.id);\n  });\n\n  const className = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={className}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', previewClassNames, withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas\n          ref={thumbRef}\n          className={buildClassName('thumbnail', thumbClassNames)}\n        />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i className={buildClassName('icon', 'icon-large-play', playButtonClassNames)} />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames)}>\n          <ProgressSpinner progress={transferProgress} onClick={handleClick} />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  onMediaClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n}) => {\n  const { openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = false;\n  if (isArticle && webPage?.photo && !webPage.video) {\n    const { width, height } = calculateMediaDimensions(message, undefined, undefined, isMobile);\n    isSquarePhoto = width === height;\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : 'auto'}\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {photo && !video && (\n          <Photo\n            message={message}\n            observeIntersection={observeIntersection}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {isArticle && (\n          <div className=\"WebPage-text\">\n            {backgroundEmojiId && (\n              <EmojiIconBackground\n                emojiDocumentId={backgroundEmojiId}\n                className=\"WebPage--background-icons\"\n              />\n            )}\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {!inPreview && video && (\n          <Video\n            message={message}\n            observeIntersectionForLoading={observeIntersection!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            message={message}\n            observeIntersection={observeIntersection}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={handleMediaClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            {backgroundEmojiId && (\n              <EmojiIconBackground\n                emojiDocumentId={backgroundEmojiId}\n                className=\"WebPage--background-icons\"\n              />\n            )}\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{lang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </div>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'lng_view_button_story';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'lng_view_button_boost';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n  return getAppendixColorFromImage(src, isOwn);\n}\n\nasync function getAppendixColorFromImage(src: string, isOwn: boolean) {\n  const img = new Image();\n  img.src = src;\n  img.crossOrigin = 'anonymous';\n\n  if (!img.width) {\n    await new Promise((resolve) => {\n      img.onload = resolve;\n    });\n  }\n\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n\n  canvas.width = img.width;\n  canvas.height = img.height;\n\n  ctx.drawImage(img, 0, 0, img.width, img.height);\n\n  const x = isOwn ? img.width - 1 : 0;\n  const y = img.height - 1;\n\n  const pixel = Array.from(ctx.getImageData(x, y, 1, 1).data);\n  return `rgba(${pixel.join(',')})`;\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport {\n  getMessagePhoto,\n  getMessageText,\n  getMessageVideo,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  isOwnMessage,\n} from '../../../../global/helpers';\nimport { calculateInlineImageDimensions, calculateVideoDimensions, REM } from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions(\n  message: ApiMessage, asForwarded?: boolean, noAvatars?: boolean, isMobile?: boolean,\n) {\n  const isOwn = isOwnMessage(message);\n  const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n  const video = getMessageVideo(message);\n\n  const isWebPagePhoto = Boolean(getMessageWebPagePhoto(message));\n  const isWebPageVideo = Boolean(getMessageWebPageVideo(message));\n  const { width, height } = photo\n    ? calculateInlineImageDimensions(photo, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : calculateVideoDimensions(video!, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile);\n\n  const messageText = getMessageText(message);\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import type { ApiMessage } from '../../../../api/types';\n\nimport { getMessageMediaThumbDataUri } from '../../../../global/helpers';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\n\nexport default function useBlurredMediaThumbRef(\n  message: ApiMessage,\n  isDisabled?: boolean | string,\n  forcedUri?: string,\n) {\n  const { isMobile } = useAppLayout();\n\n  const dataUri = forcedUri || getMessageMediaThumbDataUri(message);\n\n  return useCanvasBlur(\n    dataUri,\n    Boolean(isDisabled),\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection } from '../../../../types';\n\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = 750;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage(\n  elementRef: { current: HTMLDivElement | null },\n  chatId: string,\n  isFocused?: boolean,\n  focusDirection?: FocusDirection,\n  noFocusHighlight?: boolean,\n  isResizingContainer?: boolean,\n  isJustAdded?: boolean,\n  isQuote?: boolean,\n) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n\n      const exec = () => {\n        const result = animateScroll(\n          messagesContainer,\n          elementRef.current!,\n          isToBottom ? 'end' : 'centerOrTop',\n          FOCUS_MARGIN,\n          focusDirection !== undefined ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined,\n          focusDirection,\n          undefined,\n          isResizingContainer,\n          true,\n        );\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote,\n  ]);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../global/types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n}) => {\n  function handleClick() {\n    onToggleReaction(reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      style={style}\n      onClick={handleClick}\n    >\n      <CustomEmoji\n        documentId={reaction.documentId}\n        size={REACTION_SIZE}\n      />\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  maxUniqueReactions?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  maxUniqueReactions,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  onClose,\n  onToggleReaction,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const availableReactions = useMemo(() => {\n    const reactions = isInSavedMessages ? defaultTagReactions\n      : (enabledReactions?.type === 'some' ? enabledReactions.allowed\n        : allAvailableReactions?.map((reaction) => reaction.reaction));\n    const filteredReactions = reactions?.map((reaction) => {\n      const isCustomReaction = 'documentId' in reaction;\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      if (maxUniqueReactions && currentReactions && currentReactions.length >= maxUniqueReactions\n        && !currentReactions.some(({ reaction: currentReaction }) => isSameReaction(reaction, currentReaction))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    return sortReactions(filteredReactions, topReactions);\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    maxUniqueReactions, topReactions,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&', lang.isRtl && 'isRtl'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <i className=\"icon icon-down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction, ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMenuPosition from '../../../../hooks/useMenuPosition';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\nconst SavedTagButton: FC<{\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n}> = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuPosition,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n\n  const getLayout = () => ({ withPortal: true, shouldAvoidNegativePosition: true });\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuPosition && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLang from '../../../hooks/useLang';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  statistics: ApiChannelStatistics | ApiGroupStatistics | ApiPostStatistics | ApiBoostStatistics;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  className,\n}) => {\n  const lang = useLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMenuPosition from '../../hooks/useMenuPosition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const {\n    positionX, positionY, transformOriginX, transformOriginY, style: menuStyle,\n  } = useMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n    getLayout,\n  );\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getSenderTitle(lang, peer)}\n      </div>\n      {contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          transformOriginX={transformOriginX}\n          transformOriginY={transformOriginY}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport {\n  selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useLang from '../../hooks/useLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { shouldRender, transitionClassNames } = useShowTransition(isVisible, undefined, undefined, 'slow');\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={buildClassName(styles.root, transitionClassNames)}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressieveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideo) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"suggestedReaction\":\"WQ5DA3P_\",\"dark\":\"eic2vQ8c\",\"background\":\"j4MKFabm\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.suggestedReaction, isDark && styles.dark, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.background, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\n\nconst MediaAreaOverlay = ({\n  story, isActive, className,\n}: OwnProps) => {\n  const { openMapModal, focusMessage, closeStoryViewer } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isActive) return;\n    const element = ref.current;\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost': {\n            const isShiny = isActive && (mediaArea.type === 'geoPoint' || mediaArea.type === 'venue');\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea) {\n  const {\n    x, y, width, height, rotation,\n  } = mediaArea.coordinates;\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLang from '../useLang';\nimport useLastCallback from '../useLastCallback';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nexport const INCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'user', title: 'FilterContacts', key: 'contacts' },\n  { icon: 'non-contacts', title: 'FilterNonContacts', key: 'nonContacts' },\n  { icon: 'group', title: 'FilterGroups', key: 'groups' },\n  { icon: 'channel', title: 'FilterChannels', key: 'channels' },\n  { icon: 'bots', title: 'FilterBots', key: 'bots' },\n];\n\nexport const EXCLUDED_CHAT_TYPES: FolderChatType[] = [\n  { icon: 'mute', title: 'FilterMuted', key: 'excludeMuted' },\n  { icon: 'archive', title: 'FilterArchived', key: 'excludeArchived' },\n  { icon: 'readchats', title: 'FilterRead', key: 'excludeRead' },\n];\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  return {\n    selectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useLang from './useLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && (isChatChannel(chat) || isChatGroup(chat) || (user && !user.isSelf));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n  ]);\n};\n\nexport default useChatContextActions;\n","import type { Signal } from '../util/signals';\n\nimport useSignal from './useSignal';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedSignal<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): Signal<T>;\nfunction useDerivedSignal<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): Signal<T>;\nfunction useDerivedSignal<T>(dependency: T): Signal<T>;\n\nfunction useDerivedSignal<T>(resolverOrDependency: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrDependency as Resolver<T> : () => (resolverOrDependency as T);\n  dependencies ??= [resolverOrDependency];\n\n  const [getValue, setValue] = useSignal<T>();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver() {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)(setValue);\n    } else {\n      setValue((currentResolver as SyncResolver<T>)());\n    }\n  }\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSyncEffect(runCurrentResolver, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return getValue as Signal<T>;\n}\n\nexport default useDerivedSignal;\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useForceUpdate from './useForceUpdate';\nimport { useSignalEffect } from './useSignalEffect';\nimport { useStateRef } from './useStateRef';\nimport useSyncEffect from './useSyncEffect';\n\ntype SyncResolver<T> = () => T;\ntype AsyncResolver<T> = (setter: (newValue: T) => void) => void;\ntype Resolver<T> =\n  SyncResolver<T>\n  | AsyncResolver<T>;\n\nfunction useDerivedState<T>(resolver: SyncResolver<T>, dependencies: readonly any[]): T;\nfunction useDerivedState<T>(resolver: AsyncResolver<T>, dependencies: readonly any[], isAsync: true): T;\nfunction useDerivedState<T>(signal: Signal<T>): T;\n\nfunction useDerivedState<T>(resolverOrSignal: Resolver<T> | T, dependencies?: readonly any[], isAsync = false) {\n  const resolver = dependencies ? resolverOrSignal as Resolver<T> : () => ((resolverOrSignal as Signal<T>)());\n  dependencies ??= [resolverOrSignal];\n\n  const valueRef = useRef<T>();\n  const forceUpdate = useForceUpdate();\n  const resolverRef = useStateRef(resolver);\n\n  function runCurrentResolver(isSync = false) {\n    const currentResolver = resolverRef.current;\n    if (isAsync) {\n      (currentResolver as AsyncResolver<T>)((newValue) => {\n        if (valueRef.current !== newValue) {\n          valueRef.current = newValue;\n          forceUpdate();\n        }\n      });\n    } else {\n      const newValue = (currentResolver as SyncResolver<T>)();\n      if (valueRef.current !== newValue) {\n        valueRef.current = newValue;\n\n        if (!isSync) {\n          forceUpdate();\n        }\n      }\n    }\n  }\n\n  useSyncEffect(() => {\n    runCurrentResolver(true);\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  useSignalEffect(runCurrentResolver, dependencies);\n\n  return valueRef.current as T;\n}\n\nexport default useDerivedState;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport useSignal from './useSignal';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, forceUpdate, isStreaming, delay, handleProgress, isHtmlAllowed, id,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number) {\n  const prev = usePrevious(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return !timeoutRef.current || !duration || isCurrentPresent ? current : prev;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLang from './useLang';\nimport useLastCallback from './useLastCallback';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import { useRef } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport default function useSignal<T>(initial?: T) {\n  const signalRef = useRef<ReturnType<typeof createSignal<T>>>();\n  signalRef.current ??= createSignal<T>(initial);\n  return signalRef.current;\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport { cleanupEffect, isSignal } from '../util/signals';\nimport useEffectOnce from './useEffectOnce';\n\nexport function useSignalEffect(effect: NoneToVoidFunction, dependencies: readonly any[]) {\n  // The is extracted from `useEffectOnce` to run before all effects\n  const isFirstRun = useRef(true);\n  if (isFirstRun.current) {\n    isFirstRun.current = false;\n\n    dependencies?.forEach((dependency) => {\n      if (isSignal(dependency)) {\n        dependency.subscribe(effect);\n      }\n    });\n  }\n\n  useEffectOnce(() => {\n    return () => {\n      cleanupEffect(effect);\n    };\n  });\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { makeProgressiveLoader } from '../util/progressieveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import generateUniqueId from './generateUniqueId';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitData = {\n  channel?: string;\n  type: 'init';\n  messageId?: string;\n  name: 'init';\n  args: any;\n};\n\ntype CallMethodData = {\n  channel?: string;\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\nexport type OriginMessageData = InitData | CallMethodData | {\n  channel?: string;\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerMessageData = {\n  channel?: string;\n  type: 'update';\n  update: ApiUpdate;\n} | {\n  channel?: string;\n  type: 'methodResponse';\n  messageId: string;\n  response?: any;\n  error?: { message: string };\n} | {\n  channel?: string;\n  type: 'methodCallback';\n  messageId: string;\n  callbackArgs: any[];\n} | {\n  channel?: string;\n  type: 'unhandledError';\n  error?: { message: string };\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestStates {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestStates>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestStates>();\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessage({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodData = {\n      type: 'callMethod',\n      messageId,\n      ...messageData,\n    };\n\n    const requestState = { messageId } as RequestStates;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessage(payload);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessage({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    if (data.type === 'update' && this.onUpdate) {\n      this.onUpdate(data.update);\n    }\n    if (data.type === 'methodResponse') {\n      const requestState = requestStates.get(data.messageId);\n      if (requestState) {\n        if (data.error) {\n          requestState.reject(data.error);\n        } else {\n          requestState.resolve(data.response);\n        }\n      }\n    } else if (data.type === 'methodCallback') {\n      const requestState = requestStates.get(data.messageId);\n      requestState?.callback?.(...data.callbackArgs);\n    } else if (data.type === 'unhandledError') {\n      throw new Error(data.error?.message);\n    }\n  }\n\n  private postMessage(data: AnyLiteral) {\n    data.channel = this.channel;\n\n    this.target.postMessage(data);\n  }\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { getGlobal } from '../global';\n\nimport { FocusDirection } from '../types';\n\nimport {\n  FAST_SMOOTH_MAX_DISTANCE,\n  FAST_SMOOTH_MAX_DURATION,\n  FAST_SMOOTH_MIN_DURATION,\n  FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\n\ntype Params = Parameters<typeof createMutateFunction>;\n\nlet isAnimating = false;\nlet currentArgs: Parameters<typeof createMutateFunction> | undefined;\n\nexport default function animateScroll(...args: Params | [...Params, boolean]) {\n  currentArgs = args.slice(0, 8) as Params;\n\n  const mutate = createMutateFunction(...currentArgs);\n\n  const shouldReturnMutationFn = args[8];\n  if (shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(...currentArgs!));\n  });\n}\n\nfunction createMutateFunction(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition | 'centerOrTop',\n  margin = 0,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  forceNormalContainerHeight?: boolean,\n) {\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    isAnimating = true;\n\n    const transition = absPath <= FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      FAST_SMOOTH_MIN_DURATION\n      + (absPath / FAST_SMOOTH_MAX_DISTANCE) * (FAST_SMOOTH_MAX_DURATION - FAST_SMOOTH_MIN_DURATION)\n    );\n    const startAt = Date.now();\n    const onHeavyAnimationStop = dispatchHeavyAnimationEvent();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n        onHeavyAnimationStop();\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = FAST_SMOOTH_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6.5);\n}\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageServerKey, parseMessageKey } from './messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import twemojiRegex from '../../lib/twemojiRegex';\nimport fixNonStandardEmoji from './fixNonStandardEmoji';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 per one emoji.\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${twemojiRegex.source})+$`, '');\n\nconst parseEmojiOnlyString = (text: string): number | false => {\n  const standardizedText = fixNonStandardEmoji(text);\n  const lines = standardizedText.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const isEmojiOnly = Boolean(textWithoutNewlines.match(RE_EMOJI_ONLY));\n  if (!isEmojiOnly) {\n    return false;\n  }\n  const countPerLine = lines.map((line) => {\n    let emojiCount = 0;\n    while (twemojiRegex.exec(line)) {\n      emojiCount++;\n\n      if (emojiCount > DETECT_UP_TO) {\n        twemojiRegex.lastIndex = 0;\n        return -1;\n      }\n    }\n\n    return emojiCount;\n  });\n\n  let max = lines.length;\n  for (let i = 0; i < countPerLine.length; i++) {\n    if (countPerLine[i] === -1) {\n      return false;\n    }\n    if (countPerLine[i] > max) {\n      max = countPerLine[i];\n    }\n  }\n\n  return max;\n};\n\nexport default parseEmojiOnlyString;\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","GroupCallTopPane","className","hasPinnedOffset","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","filter","useEffect","subscribed","shouldRender","transitionClassNames","useShowTransition","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","React","createElement","buildClassName","onClick","peer","Avatar","key","Button","round","AnimatedCounter","text","prevTextRef","useRef","isAnimating","markAnimating","unmarkAnimating","useFlag","shouldAnimate","selectCanAnimateInterface","textElement","current","prevText","elements","i","length","push","onAnimationEnd","dir","isRtl","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","previewBlobUrl","useMedia","getStickerPreviewHash","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","thumbClassNames","useMediaTransition","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","setTimeout","size","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","ref","start","end","Audio","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMessageMediaDownload","downloadMessageMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","isVoice","isSeeking","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMessageMediaHash","coverBlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMessageMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","decodedWaveform","decodeWaveform","Uint8Array","interpolateArray","useLayoutEffect","canvas","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","spinnerClassNames","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","contentClassName","renderWithTitle","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","ariaLabel","backgroundImage","nonInteractive","Icon","name","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","viewBox","rx","ry","stroke","renderVoice","AvatarList","peers","root","avatar","runDebounced","debounce","cb","chatOrUserId","isSavedDialog","countryList","phoneCodes","phoneCodeList","user","isUserId","selectUser","isForum","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","threadId","selectCurrentMessageList","topicId","Number","chatInviteLink","selectChatFullInfo","inviteLink","description","selectUserFullInfo","bio","about","canInviteUsers","isChatChannel","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","includes","ChatExtra","isInSettings","loadFullUser","showNotification","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","userId","usernames","phoneNumber","isSelf","chatUsernames","peerId","areNotificationsEnabled","setAreNotificationsEnabled","useEffectWithPrevDeps","prevPeerId","isTopicInfo","MAIN_THREAD_ID","shouldRenderAllLinks","isPremium","activeUsernames","result","u","activeChatUsernames","link","getChatLink","handleNotificationChange","newAreNotificationsEnabled","handleOpenSavedDialog","isRestricted","copy","entity","copyTextToClipboard","formattedNumber","formatPhoneNumberWithCode","renderUsernames","usernameList","isChat","mainUsername","otherUsernames","usernameLinks","split","s","username","nick","idx","textToCopy","TME_LINK_PREFIX","href","stopEvent","ListItem","icon","multiline","narrow","isStatic","Switcher","label","checked","inactive","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","body","appendChild","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","RE_COMMAND","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","pastedText","getData","substring","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","pause","AttachmentModal","useModuleLoader","Bundles","Extra","AttachMenu","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","hasReplaceableMedia","editingMessage","isAttachMenuOpen","openAttachMenu","closeAttachMenu","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_IMAGE_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","isOpen","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","BotCommandTooltip","selectChatMessage","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","keyboardButtons","noCompact","row","BotMenuButton","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","editingId","selectEditingScheduledId","selectEditingId","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","sender","replyToPeerId","replyToMsgId","selectEditingMessage","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","selectForwardedSender","hiddenUserName","quoteText","selectSender","selectPeer","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","setEditingId","focusMessage","changeForwardRecipient","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","isReplyToTopicStart","action","isShown","canAnimate","useAsyncRendering","clearEmbedded","captureEscKeyListener","handleMessageClick","noForumTopicPanel","handleClearClick","handleChangeRecipientClick","isContextMenuOpen","contextMenuPosition","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","getMenuElement","querySelector","transformOriginX","transformOriginY","menuStyle","useMenuPosition","renderingSender","innerClassName","getPeerColorClass","isShowingReply","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","selectTheme","webPagePreview","WebPagePreview","getHtml","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","formattedTextWithLinkRef","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","url","getLink","useDerivedSignal","useSyncEffect","useDerivedState","renderingWebPage","handleClearWebpagePreview","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","DeleteMessageModal","MainButtonState","storyId","chatBot","REPLIES_USER_ID","selectBot","isChatWithBot","isChatWithUser","chatBotFullInfo","chatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","scheduledIds","selectScheduledIds","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUserId","currentUser","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraftText","selectRequestedDraftText","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForumAsMessages","selectTopicFromMessage","isInScheduledList","availableReactions","reactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","attachmentSettings","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","Composer","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePrevious","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","emoticon","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentType","limit","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","isBotCommandTooltipOpen","close","closeBotCommandTooltip","filteredBotCommands","botTooltipCommands","setFilteredBotCommands","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","useBotCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","isEditing","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","EDITABLE_INPUT_CSS_SELECTOR","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","setShouldForceShowEditing","replyingToId","prevEditedMessage","prevReplyingToId","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerPosition","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","floor","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachments","handleSend","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","handleClickBotMenu","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","escapeHtml","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","renderedEditedMessage","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","customEmojiMessage","isReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","onSend","withBotCommands","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","isQuiz","shouldBeAnonymous","isSchedule","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","CustomEmojiTooltip","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","withEffectOnly","allowDisabledClick","noFastClick","CustomSendMenu","canSchedule","onSendSchedule","onSendWhenOnline","isPrivateChat","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","DeleteChatModal","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","Document","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","getMessageWebPageDocument","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","hasPreview","getDocumentHasPreview","getMessageMediaThumbDataUri","localBlobUrl","previewData","withMediaViewer","mediaType","mimeType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isMessageDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","onCheck","DotAnimation","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","topics","messagesCount","selectThreadMessagesCount","self","GroupChatInfo","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadProfilePhotos","isTopic","isMin","profileId","handleAvatarViewerOpen","hasMedia","avatarOwnerId","mediaId","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","TypingStatus","Transition","shouldRestoreHeight","activeKey","getChatTypeString","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","LastMessageMeta","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","value","readOnly","DropdownMenu","trigger","destructive","Media","isProtected","mediaBlobUrl","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","MediaSpoiler","isVisible","isGif","withAnimation","rect","currentTarget","clientY","shiftX","shiftY","Keys","NothingFound","PasswordForm","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","Picker","itemIds","selectedIds","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","isRoundCheckbox","lockedIds","forceShowSelf","onSelectedIdsChange","onFilterChange","onDisabledClick","onLoadMore","shouldMinimize","lockedSelectedIds","unlockedSelectedIds","unlockedIds","lockedIdsSet","sortedItemIds","sort","a","b","aIsLocked","bIsLocked","handleItemClick","newSelectedIds","splice","handleFilterChange","viewportIds","getMore","useInfiniteScroll","PickerSelectedItem","isMinimized","clickArg","canClose","InputText","InfiniteScroll","renderCheckbox","PrivateChatInfo","Loading","fluid","withPeerColors","iconElement","titleText","LimitPreview","leftText","rightText","floatingBadgeText","floatingBadgeIcon","hasFloatingBadge","isProgressFull","tailPosition","userStatus","selectUserStatus","adminMember","customTitle","isOwner","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","ProfilePhoto","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","getChatAvatarHash","avatarBlobUrl","photoHash","photoBlobUrl","videoHash","getVideoAvatarMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","blurredThumbCanvasRef","currentTime","specialIcon","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","connectionState","mediaViewer","currentTopicId","userFullInfo","emojiStatus","emojiStatusSticker","userPersonalPhoto","personalPhoto","userProfilePhoto","profilePhoto","userFallbackPhoto","fallbackPhoto","chatProfilePhoto","ProfileInfo","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","photos","prevMediaId","prevAvatarOwnerId","mediaIdRef","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","_","renderPhotoTabs","renderPhoto","canCopyTitle","isReadDateRestrictedByMe","renderStatus","ReactionStaticEmoji","withIconHeart","isCustom","availableReaction","available","isSameReaction","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","observeIntersectionForPlaying","blankUrl","ReportModal","subject","reportMessages","reportPeer","reportProfilePhoto","reportStory","exitMessageSelectMode","selectedReason","setSelectedReason","setDescription","handleReport","reason","handleSelectReason","handleDescriptionChange","REPORT_OPTIONS","onEnter","RadioGroup","options","selected","iconEmojiId","loopLimit","TopicDefaultIcon","iconColor","typingUser","typingUserName","WebLink","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","SafeLink","EmbeddedMessage","senderChat","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","wrappedMedia","replyMedia","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","blobUrl","getPictogramDimensions","srcUrl","renderPictogram","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","noLineBreaks","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","emojiSize","isChatGroup","isChatSender","isReplyToQuote","renderSender","freezeWhenClosed","ICON_POSITIONS","inline","block","opacity","EMOJI_SIZE","containerRef","emojiImage","setEmojiImage","dpr","useDevicePixelRatio","customEmoji","useCustomEmoji","previewMediaHash","customColor","useDynamicColorListener","preloadImage","then","updateCanvas","clearRect","save","translate","drawImage","restore","tintColor","isLottie","globalCompositeOperation","fillRect","updateCanvasSize","parentWidth","parentHeight","handleResize","entry","contentRect","useResizeObserver","container","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","renderMessageText","highlight","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","orderBy","priority","lastMessage","selectChatLastMessage","isVerified","CustomEmojiEffect","particleSize","onEnded","stickerHash","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","random","generateRandomDropPath","path","withSharedAnimation","ICON_SIZE","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","activeReactions","withEffects","selectPerformanceSettingsValue","genericEffects","effectSize","shouldPause","shouldLoop","stopActiveReaction","r","centerIconId","centerIcon","assignedEffectId","aroundAnimation","assignedId","effectId","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayEffect","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","noPlay","forceAlways","AnimatedSticker","animatedIcon","roundToNearestEven","play","effect","ChatFolderModal","MuteChatModal","ChatBadge","isPinned","shouldShowOnlyMostImportant","wasTopicOpened","forceHidden","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","formatIntegerCompact","pinnedElement","renderContent","Archive","archiveSettings","onDragEnter","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","contextActions","actionMinimize","handler","actionExpand","actionHide","isHidden","compact","handleDragEnter","minimized","buttonClassName","withPortalForMenu","info","Badge","avatarWrapper","chatsPreview","bySelector","Map","addCallback","selector","setter","ChatCallStatus","lastMessageId","selectChatLastMessageId","senderId","isOutgoing","actualSenderId","fromId","replyToMessageId","getMessageReplyInfo","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","Chat","folderId","orderDiff","animationType","offsetTop","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","isReportModalOpen","openReportModal","closeReportModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderReportModal","markRenderReportModal","unmarkRenderReportModal","useEnsureMessage","renderSubtitle","useChatListEntry","getIsForumPanelClosed","state","getter","createSignal","clientsCount","set","useEffectOnce","delete","useSelectorSignal","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDelete","handleMute","handleChatFolderChange","useChatContextActions","listedTopicIds","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","withStoryGap","StoryViewerOrigin","ChatList","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","pill","UnconfirmedSession","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","hash","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","code","digit","isArchiveInList","shift","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","scrollHeight","offsetHeight","deltaY","passive","useTopOverscroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onDragLeave","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","canDelete","selectCanDeleteTopic","Topic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","ForumPanel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","topicsCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","dispatchHeavyAnimationStop","dispatchHeavyAnimationEvent","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","renderTopics","GENERAL_TOPIC_ID","ChatAnimationTypes","useChatAnimationType","orderDiffs","numberOfUp","diff","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","isExpiredMessage","getExpiredMessageDescription","renderActionMessageText","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","ANIMATION_END_DELAY","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","forceUpdate","useForceUpdate","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","ActionMessageSuggestedAvatar","uploadProfilePhoto","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","suggestedPhotoUrl","showAvatarNotification","screen","Main","handleSetSuggestedAvatar","handleCloseCropModal","handleSetVideo","fetch","videoTs","videoSizes","l","videoStartTs","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","textParts","SimilarChannel","channel","fallbackColor","setColor","imgBlobUrl","averageColor","getAverageColor","rgb2hex","useAverageColor","MoreChannels","channelsCount","profileTab","forceScrollProfileTab","similarChannelIds","shouldShowInChat","count","selectSimilarChannelIds","SimilarChannels","toggleChannelRecommendations","isShowing","markShowing","markNotShowing","isHiding","markHiding","markNotHiding","similarChannels","shoulRenderSkeleton","setShoulRenderSkeleton","firstSimilarChannels","areSimilarChannelsPresent","useHorizontalScroll","shouldRenderChannels","clearTimeout","handleToggle","Skeleton","xmlns","SHOW_CHANNELS_NUMBER","targetMessageId","targetMessage","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","targetChat","giftDuration","months","premiumGiftSticker","selectGiftStickerForDuration","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","onPinnedIntersectionChange","requestConfetti","checkGiftCode","useFocusMessage","viewportPinnedIdsToRemove","isUnmount","noAppearanceAnimation","markShown","isGift","isGiftCode","isSuggestedAvatar","isJoinedMessage","isJoinedChannelMessage","shouldShowConfettiRef","targetUsers","isContextMenuShown","handleGiftCodeClick","slug","preventMessageInputBlur","handlePremiumGiftClick","toUserId","monthsAmount","isFromGiveaway","isGiveaway","isUnclaimed","renderGiftCode","ContextMenuContainer","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openLocalTextSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuPosition","setMenuPosition","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","AttachBotIcon","isTouchScreen","getDocumentMediaHash","Text","iconSvg","mediaDataWithReplacedColors","doc","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","shortName","isDisclaimerNeeded","withPortal","CustomSend","DropTarget","isQuick","isGeneric","isHovered","markHovered","unmarkHovered","onDrop","relatedTarget","toTarget","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","isFileSticker","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","onDragOver","handleDragOver","AbsoluteVideo","constructor","videoUrl","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","colorFilter","useColorFilter","playersById","clearPlayers","player","synchronizeElements","playerIdsToClear","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","addCustomEmojiInputRenderCallback","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","clone","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","isHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","onKeyDown","isComposing","altKey","once","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","TextFormatter","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuPosition","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onSearchOpen","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","textFormat","restoreSelection","updateSelectedRange","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","getSelectedElement","updateInputStyles","scrollLeft","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","handleBoldText","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","ensureProtocol","encodeURI","k","m","p","getKeyFromEvent","linkUrlConfirmClassName","inputMode","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","quick","shouldSendAsFile","img","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","MAX_NESTING_PARENTS","parentNode","iterations","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","buildCollectionByKey","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","endsWith","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","isPreview","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","Photo","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","withBlurredBackground","useBlurredMediaThumbRef","showSpoiler","wasLoadDisabled","shouldRenderDownloadButton","downloadButtonClassNames","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","MIN_MEDIA_HEIGHT","dimensionsStyle","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","PI","stopPrevious","RoundVideo","onStop","playerRef","circleRef","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","strokeDashOffset","shouldPlay","stopPlaying","capturePlaying","tooglePlaying","stopCurrentAudio","handleTimeUpdate","onTimeUpdate","cx","cy","Video","canAutoPlay","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","hasThumb","isPreviewPreloaded","canLoadPreview","isInline","isUnsupported","useUnsupportedMedia","playButtonClassNames","setPlayProgress","isFinite","isWebPageVideo","calculateVideoDimensions","onAudioPlay","onCancelMediaTransfer","openTelegramLink","handleMediaClick","handleQuickButtonClick","useEnsureStory","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","BaseStory","isRectangular","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","Image","crossOrigin","onload","getImageData","getAppendixColorFromImage","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isWebPagePhoto","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","forcedUri","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","FOCUS_MARGIN","isResizingContainer","isRelocatedRef","isRelocated","messagesContainer","isToBottom","animateScroll","firstQuote","addExtraClass","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","REACTION_SIZE","ReactionSelectorCustomReaction","chosen","noAppearAnimation","isLocked","ReactionSelectorReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","cn","createClassNameBuilder","defaultTagReactions","enabledReactions","currentReactions","maxUniqueReactions","areReactionsLocked","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","currentReaction","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","handleOpenPremiumModal","hintText","parts","isPrimary","getReactionKey","PromptDialog","submitText","initialValue","setText","handleTextChange","handleSubmit","isSlim","teactExperimentControlled","SavedTagButton","tag","isChosen","chosenClassName","withCount","withContextMenu","onRemove","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","handleRemoveClick","handleRenameTag","newTitle","shouldAvoidNegativePosition","own","tagText","tail","tailFill","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","period","schema","getSchemaByType","formatFullDate","minDate","maxDate","cell","field","formatInteger","part","percentage","renderOverviewItemValue","change","isChangeNegative","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","archived","isClosing","hidden","closing","StoryRibbonButton","byPeerId","isRibbonShown","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","index","toggleAvatar","selectByPeerId","zIndex","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","ghost","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","unloadVideo","preloadProgressive","preloadHashes","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideo","getPreloadMediaHashes","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","STORY_ASPECT_RATIO","prepareStyle","rotation","coordinates","openMapModal","closeStoryViewer","useWindowSize","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","clientWidth","mediaAreas","isShiny","geoPoint","geo","channelId","handleMediaAreaClick","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDED_CHAT_TYPES","EXCLUDED_CHAT_TYPES","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","savedCallback","resolver","deps","msOrSchedulerFn","noFirst","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","RADIUS","ITERATIONS","withRaf","preferredWidth","preferredHeight","isStarted","processBlur","alpha","fastBlur","isInSearch","isServiceNotifications","SERVICE_NOTIFICATIONS_USER_ID","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","resolverOrDependency","isAsync","resolverRef","runCurrentResolver","currentResolver","useSignalEffect","resolverOrSignal","valueRef","isSync","replyOriginForId","loadMessage","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","shouldPreventDefault","deltaX","IGNORE_TAGS","createCallbackManager","hotkeys","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaHash","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getTime","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","initial","signalRef","isFirstRun","dependency","subscribe","cleanupEffect","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","mediaSource","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","ConnectorClass","postMessage","request","messageData","requestStates","requestStatesByCallback","generateUniqueId","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","createConnector","worker","connector","handleMessage","DEFAULT_DURATION","stopById","animateHorizontalScroll","containerWidth","scrollId","remainingPath","isStopped","scrollSnapType","startAt","animate","t","currentPath","transition","currentArgs","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","margin","maxDistance","FAST_SMOOTH_MAX_DISTANCE","forceDirection","forceDuration","forceNormalContainerHeight","FocusDirection","Static","elementTop","elementHeight","currentScrollTop","containerHeight","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","FAST_SMOOTH_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","FAST_SMOOTH_MIN_DURATION","FAST_SMOOTH_MAX_DURATION","onHeavyAnimationStop","animateSingle","isAnimatingScroll","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","hex2rgb","param","parseInt","p0","p1","p2","rgb2hsb","v","hsb2rgb","f","q","defaultRGB","rgb","image","naturalHeight","naturalWidth","getColorLuma","rgbColor","getPatternColor","hue","saturation","cycleRestrict","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","click","RE_EMOJI_ONLY","lines","fixNonStandardEmoji","textWithoutNewlines","DETECT_UP_TO","countPerLine","line","emojiCount","lastIndex","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","collapse","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","fillColor","res","ctx2D","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","isElementInViewport","windowHeight","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","zoom","lat","long","providerUrl","getMetersPerPixel","cos","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","navigator","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","Bold","Italic","INS","Underline","S","Strike","STRIKE","Code","PRE","Pre","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","callApi","fullSize","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange","encoded5bit","bitsCount","valuesCount","bitsData","byteIndex","bitShift","lastByteIndex","lastBitShift","lastValue","fitCount","newData","springFactor","leftFiller","rightFiller","val"],"sourceRoot":""}