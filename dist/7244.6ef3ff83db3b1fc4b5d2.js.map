{"version":3,"file":"7244.6ef3ff83db3b1fc4b5d2.js","mappings":"sFAsKAA,EAAOC,QA7JP,SAAcC,GAQZ,MAAO,CACLC,KAAM,OACNC,QAAS,CAAE,MACXC,SAAU,CACRC,QAAS,+SAITC,SACE,aACFC,QACE,qBAEJC,SAAU,CACR,CACEC,UAAW,SACXC,MAAO,IACPC,IAAK,IACLH,SAAU,CACRP,EAAKW,iBACL,CACEH,UAAW,QACXC,MAAO,OACPC,IAAK,MAEP,CACEF,UAAW,QACXC,MAAO,KACPC,IAAK,UAIXV,EAAKY,kBACLZ,EAAKa,oBACLb,EAAKc,qBACL,CACEN,UAAW,SACXC,MAzCiB,0FA0CjBM,UAAW,GAEb,CACEP,UAAW,WACXC,MAAO,+BAET,CACED,UAAW,OACXC,MAAO,MACPC,IAAK,OACLM,YAAY,GAEd,CACER,UAAW,OACXC,MAAO,IACPC,IAAK,IACLP,SAAU,CAAEC,QAAS,6BAEvB,CACEI,UAAW,OACXC,MAAO,UACPC,IAAK,sBACLO,cAAc,EACdD,YAAY,EACZD,UAAW,GAEb,CACEP,UAAW,OACXC,MAAO,UACPC,IAAK,KACLO,cAAc,EACdD,YAAY,GAEd,CACER,UAAW,OACXU,cAAe,MACfR,IAAK,KACLO,cAAc,EACdD,YAAY,GAEd,CACER,UAAW,cACXU,cAAe,OACfR,IAAK,KACLH,SAAU,CAAEP,EAAKmB,aAEnB,CACEX,UAAW,cACXC,MAAO,wBAA0BT,EAAKoB,SAAW,WACjDV,IAAK,QACLH,SAAU,CACR,CACEC,UAAW,OACXC,MAAO,KACPC,IAAK,KACLO,cAAc,EACdD,YAAY,GAEd,CACER,UAAW,OACXC,MAAO,SACPC,IAAK,KACLO,cAAc,EACdD,YAAY,GAEd,CACER,UAAW,OACXC,MAAO,OACPC,IAAK,KACLO,cAAc,EACdD,YAAY,GAEdhB,EAAKmB,YAEPhB,SAAU,CAAEC,QAAS,qBAEvB,CACEI,UAAW,cACXC,MAAO,wBACPC,IAAK,QACLM,YAAY,EACZb,SAAU,kBACVI,SAAU,CACR,CACEC,UAAW,UACXC,MAAO,2BACPN,SAAU,qBACVI,SAAU,CACR,CACEC,UAAW,OACXC,MAAOT,EAAKoB,SACZL,UAAW,KAIjBf,EAAKmB,aAGT,CACEX,UAAW,iBACXU,cAAe,WACfR,IAAK,KACLM,YAAY,EACZK,QAAS,KACTd,SAAU,CAAEP,EAAKmB,cAGrBE,QAAS,MAEb,C","sources":["webpack://telegram-t/./node_modules/highlight.js/lib/languages/haxe.js"],"sourcesContent":["/*\nLanguage: Haxe\nDescription: Haxe is an open source toolkit based on a modern, high level, strictly typed programming language.\nAuthor: Christopher Kaster <ikasoki@gmail.com> (Based on the actionscript.js language file by Alexander Myadzel)\nContributors: Kenton Hamaluik <kentonh@gmail.com>\nWebsite: https://haxe.org\nCategory: system\n*/\n\nfunction haxe(hljs) {\n  const IDENT_RE = '[a-zA-Z_$][a-zA-Z0-9_$]*';\n\n  // C_NUMBER_RE with underscores and literal suffixes\n  const HAXE_NUMBER_RE = /(-?)(\\b0[xX][a-fA-F0-9_]+|(\\b\\d+(\\.[\\d_]*)?|\\.[\\d_]+)(([eE][-+]?\\d+)|i32|u32|i64|f64)?)/;\n\n  const HAXE_BASIC_TYPES = 'Int Float String Bool Dynamic Void Array ';\n\n  return {\n    name: 'Haxe',\n    aliases: [ 'hx' ],\n    keywords: {\n      keyword: 'abstract break case cast catch continue default do dynamic else enum extern '\n               + 'final for function here if import in inline is macro never new override package private get set '\n               + 'public return static super switch this throw trace try typedef untyped using var while '\n               + HAXE_BASIC_TYPES,\n      built_in:\n        'trace this',\n      literal:\n        'true false null _'\n    },\n    contains: [\n      {\n        className: 'string', // interpolate-able strings\n        begin: '\\'',\n        end: '\\'',\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          {\n            className: 'subst', // interpolation\n            begin: /\\$\\{/,\n            end: /\\}/\n          },\n          {\n            className: 'subst', // interpolation\n            begin: /\\$/,\n            end: /\\W\\}/\n          }\n        ]\n      },\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'number',\n        begin: HAXE_NUMBER_RE,\n        relevance: 0\n      },\n      {\n        className: 'variable',\n        begin: \"\\\\$\" + IDENT_RE,\n      },\n      {\n        className: 'meta', // compiler meta\n        begin: /@:?/,\n        end: /\\(|$/,\n        excludeEnd: true,\n      },\n      {\n        className: 'meta', // compiler conditionals\n        begin: '#',\n        end: '$',\n        keywords: { keyword: 'if else elseif end error' }\n      },\n      {\n        className: 'type', // function types\n        begin: /:[ \\t]*/,\n        end: /[^A-Za-z0-9_ \\t\\->]/,\n        excludeBegin: true,\n        excludeEnd: true,\n        relevance: 0\n      },\n      {\n        className: 'type', // types\n        begin: /:[ \\t]*/,\n        end: /\\W/,\n        excludeBegin: true,\n        excludeEnd: true\n      },\n      {\n        className: 'type', // instantiation\n        beginKeywords: 'new',\n        end: /\\W/,\n        excludeBegin: true,\n        excludeEnd: true\n      },\n      {\n        className: 'title.class', // enums\n        beginKeywords: 'enum',\n        end: /\\{/,\n        contains: [ hljs.TITLE_MODE ]\n      },\n      {\n        className: 'title.class', // abstracts\n        begin: '\\\\babstract\\\\b(?=\\\\s*' + hljs.IDENT_RE + '\\\\s*\\\\()',\n        end: /[\\{$]/,\n        contains: [\n          {\n            className: 'type',\n            begin: /\\(/,\n            end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true\n          },\n          {\n            className: 'type',\n            begin: /from +/,\n            end: /\\W/,\n            excludeBegin: true,\n            excludeEnd: true\n          },\n          {\n            className: 'type',\n            begin: /to +/,\n            end: /\\W/,\n            excludeBegin: true,\n            excludeEnd: true\n          },\n          hljs.TITLE_MODE\n        ],\n        keywords: { keyword: 'abstract from to' }\n      },\n      {\n        className: 'title.class', // classes\n        begin: /\\b(class|interface) +/,\n        end: /[\\{$]/,\n        excludeEnd: true,\n        keywords: 'class interface',\n        contains: [\n          {\n            className: 'keyword',\n            begin: /\\b(extends|implements) +/,\n            keywords: 'extends implements',\n            contains: [\n              {\n                className: 'type',\n                begin: hljs.IDENT_RE,\n                relevance: 0\n              }\n            ]\n          },\n          hljs.TITLE_MODE\n        ]\n      },\n      {\n        className: 'title.function',\n        beginKeywords: 'function',\n        end: /\\(/,\n        excludeEnd: true,\n        illegal: /\\S/,\n        contains: [ hljs.TITLE_MODE ]\n      }\n    ],\n    illegal: /<\\//\n  };\n}\n\nmodule.exports = haxe;\n"],"names":["module","exports","hljs","name","aliases","keywords","keyword","built_in","literal","contains","className","begin","end","BACKSLASH_ESCAPE","QUOTE_STRING_MODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","relevance","excludeEnd","excludeBegin","beginKeywords","TITLE_MODE","IDENT_RE","illegal"],"sourceRoot":""}