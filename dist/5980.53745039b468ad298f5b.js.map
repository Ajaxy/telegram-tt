{"version":3,"file":"5980.53745039b468ad298f5b.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/hooks/useHeaderPane.tsx","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/global/selectors/limits.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useInterval.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/emoji/parseEmojiOnlyString.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/isElementInViewport.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/progressieveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <i className={buildClassName('icon', isDownloading ? 'icon-close' : 'icon-arrow-down')} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <i className={buildClassName(\n              'transcribe-icon',\n              'icon',\n              (isTranscribed || isTranscriptionError) ? 'icon-down' : 'icon-transcribe',\n              (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n            )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media!.duration) : formatMediaDuration(media!.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"size-micro\":\"bnYA0Wm9\",\"sizeMicro\":\"bnYA0Wm9\",\"size-mini\":\"ZGpPX4Wb\",\"sizeMini\":\"ZGpPX4Wb\",\"size-tiny\":\"ufyZRVf5\",\"sizeTiny\":\"ufyZRVf5\",\"size-small\":\"UA2exR6e\",\"sizeSmall\":\"UA2exR6e\",\"size-small-mobile\":\"PTbjjZjF\",\"sizeSmallMobile\":\"PTbjjZjF\",\"size-medium\":\"jncPG8PA\",\"sizeMedium\":\"jncPG8PA\",\"size-large\":\"pd70AQAO\",\"sizeLarge\":\"pd70AQAO\",\"size-huge\":\"ceLzD19m\",\"sizeHuge\":\"ceLzD19m\",\"size-jumbo\":\"KpwfP5mr\",\"sizeJumbo\":\"KpwfP5mr\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root, styles[`size-${size}`])}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nconst MAX_MESSAGE_LENGTH = 4096;\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = document.activeElement;\n      if (input && ![EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID].includes(input.id)) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text').substring(0, MAX_MESSAGE_LENGTH);\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      e.preventDefault();\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { ApiDraft, MessageListType } from '../../../../global/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({ isSchedule: type === 'scheduled', message: editedMessage });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  canEditMedia,\n  editingMessage,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useOldLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ chatId: message.chatId, messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <i className={buildClassName('bot-menu-icon', 'icon', 'icon-webapp', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType } from '../../../global/types';\nimport type { ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (sender && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <i className=\"icon icon-placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <i className=\"icon icon-placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { GlobalState, WebPageMediaSize } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n  attachmentSettings,\n  isEditing,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isShown);\n\n  const hasMediaSizeOptions = webPagePreview?.hasLargeMedia;\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector('.web-page-preview-context-menu .bubble'),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"web-page-preview-context-menu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('PreviewSender.MoveTextUp')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang(('PreviewSender.MoveTextDown'))}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ChatInput.EditLink.LargerMedia')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang(('ChatInput.EditLink.SmallerMedia'))}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ChatInput.EditLink.RemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)} ref={ref}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\" onClick={handlePreviewClick}>\n          <i className=\"icon icon-link\" />\n        </div>\n        <WebPage\n          message={messageStub}\n          inPreview\n          theme={theme}\n          onContainerClick={handlePreviewClick}\n          isEditing={isEditing}\n        />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  ApiDraft, GlobalState, MessageList, MessageListType, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition, InlineBotSettings, ISettings, ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNoWebPage,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectScheduledIds,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst MESSAGE_MAX_LENGTH = 4096;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  onForward,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    if (chatId && chat && !sendAsPeerIds && isReady && (isChatSuperGroup(chat) || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot, isInStoryViewer),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : MESSAGE_MAX_LENGTH;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    const effectId = effect?.id;\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n      if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        isInvertedMedia,\n        effectId,\n        webPageMediaSize: attachmentSettings.webPageMediaSize,\n        webPageUrl: hasWebPagePreview ? webPagePreview!.url : undefined,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n    clearDraft({\n      chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n    });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ sendCompressed, sendGrouped, isInvertedMedia }, scheduledAt, currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      sendSilent({ sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => { saveEffectInDraft({ chatId, threadId, effectId: undefined }); });\n\n  const handleStopEffect = useLastCallback(() => { hideEffectInComposer({ }); });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : isInStoryViewer ? lang('StoryRepliesLocked') : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <i className=\"icon icon-schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <i className=\"icon icon-bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={lang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <i className=\"icon icon-delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <i\n              className={buildClassName(\n                'icon',\n                'icon-heart',\n                isSentStoryReactionHeart && 'story-reaction-heart',\n              )}\n              aria-hidden\n            />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <i className=\"icon icon-send\" />\n        <i className=\"icon icon-microphone-alt\" />\n        {onForward && <i className=\"icon icon-forward\" />}\n        {isInMessageList && <i className=\"icon icon-schedule\" />}\n        {isInMessageList && <i className=\"icon icon-check\" />}\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const chatBotFullInfo = isChatWithBot ? selectUserFullInfo(global, chatBot.id) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const scheduledIds = selectScheduledIds(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !selectUserFullInfo(global, user.id)?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n\n    const isContactRequirePremium = selectUserFullInfo(global, chatId)?.isContactRequirePremium;\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n    && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && Boolean(scheduledIds?.length)\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: chatBotFullInfo ? (chatBotFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: chatBotFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview: selectTabState(global).webPagePreview,\n      isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useOldLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <i\n            className={buildClassName(\n              'action-icon',\n              'icon',\n              actionIcon ? `icon-${actionIcon}` : 'icon-download',\n              shouldSpinnerRender && 'hidden',\n            )}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <i className=\"icon icon-more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <i className={buildClassName('icon', isPasswordVisible ? 'icon-eye' : 'icon-eye-closed')} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"DnvLcTfv\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPeerPhotos, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectPeerPhotos,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    emojiStatusSticker?: ApiSticker;\n    profilePhotos?: ApiPeerPhotos;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  emojiStatusSticker,\n  profilePhotos,\n  peerId,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo', forceShowSelf && styles.self)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && profilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && profilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={profilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      emojiStatusSticker,\n      profilePhotos,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ChatTranslatedMessages } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getSenderTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = containedMedia && getMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useOldLang();\n\n  const senderTitle = sender ? getSenderTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getSenderTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getSenderTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        noLineBreaks: isInComposer,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content, {});\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <>\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pTWe_CYU\"};","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { preloadImage } from '../../../util/files';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport { useThrottleForHeavyAnimation } from '../../../hooks/useHeavyAnimation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 22, block: 38, opacity: 0.35, scale: 0.75,\n  },\n  {\n    inline: 32, block: 12, opacity: 0.3, scale: 1,\n  },\n  {\n    inline: 60, block: 22, opacity: 0.25, scale: 0.75,\n  },\n  {\n    inline: 75, block: 44, opacity: 0.25, scale: 1,\n  },\n  {\n    inline: 75, block: 2, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 95, block: 18, opacity: 0.2, scale: 1,\n  },\n  {\n    inline: 115, block: 38, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 125, block: 12, opacity: 0.1, scale: 0.75,\n  },\n];\n\nconst EMOJI_SIZE = REM;\nconst LOTTIE_TINT_OPACITY = 'ff';\nconst NON_LOTTIE_TINT_OPACITY = 'bb';\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const dpr = useDevicePixelRatio();\n\n  const lang = useOldLang();\n\n  const { customEmoji } = useCustomEmoji(emojiDocumentId);\n  const previewMediaHash = customEmoji ? getStickerMediaHash(customEmoji, 'preview') : undefined;\n  const previewUrl = useMedia(previewMediaHash);\n\n  const customColor = useDynamicColorListener(containerRef);\n\n  const preloadAfterHeavyAnimation = useThrottleForHeavyAnimation(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  useEffect(() => {\n    preloadAfterHeavyAnimation();\n  }, [preloadAfterHeavyAnimation]);\n\n  const updateCanvas = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage || !customColor) return;\n\n    const context = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n\n    context.clearRect(0, 0, width, height);\n\n    ICON_POSITIONS.forEach(({\n      inline, block, opacity, scale,\n    }) => {\n      const x = (lang.isRtl ? inline : width / dpr - inline) * dpr;\n      const y = block * dpr;\n\n      const emojiSize = EMOJI_SIZE * dpr;\n\n      context.save();\n      context.globalAlpha = opacity;\n      context.translate(x, y);\n      context.scale(scale, scale);\n      context.drawImage(emojiImage, -emojiSize / 2, -emojiSize / 2, emojiSize, emojiSize);\n      context.restore();\n    });\n\n    const tintColor = `${customColor}${customEmoji!.isLottie ? LOTTIE_TINT_OPACITY : NON_LOTTIE_TINT_OPACITY}`;\n\n    context.save();\n    context.fillStyle = tintColor;\n    context.globalCompositeOperation = 'source-atop';\n    context.fillRect(0, 0, width, height);\n    context.restore();\n  });\n\n  const updateCanvasAfterHeavyAnimation = useThrottleForHeavyAnimation(updateCanvas, [updateCanvas]);\n\n  useEffect(() => {\n    updateCanvasAfterHeavyAnimation();\n  }, [emojiImage, lang.isRtl, customColor, updateCanvasAfterHeavyAnimation]);\n\n  const updateCanvasSize = useThrottleForHeavyAnimation((parentWidth: number, parentHeight: number) => {\n    requestMutation(() => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      canvas.width = parentWidth * dpr;\n      canvas.height = parentHeight * dpr;\n\n      canvas.style.width = `${parentWidth}px`;\n      canvas.style.height = `${parentHeight}px`;\n\n      updateCanvas();\n    });\n  }, [dpr]);\n\n  const handleResize = useThrottleForHeavyAnimation((entry: ResizeObserverEntry) => {\n    const { width, height } = entry.contentRect;\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const { width, height } = container.getBoundingClientRect();\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={containerRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import { getGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiSponsoredMessage } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageStatefulContent,\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage | ApiSponsoredMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: OldLangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const global = getGlobal();\n  const statefulContent = getMessageStatefulContent(global, message);\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, statefulContent, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, statefulContent, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(lang(valueKey, [formattedDate, age], undefined, age))}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"sectionInfo\":\"IrqRJFxm\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiCountryCode, ApiUser, ApiUserFullInfo, ApiUsername,\n} from '../../../api/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { debounce } from '../../../util/schedulers';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [areNotificationsEnabled, setAreNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setAreNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    setAreNotificationsEnabled((current) => {\n      const newAreNotificationsEnabled = !current;\n\n      runDebounced(() => {\n        if (isTopicInfo) {\n          updateTopicMutedState({\n            chatId: chatId!,\n            topicId: topicId!,\n            isMuted: !newAreNotificationsEnabled,\n          });\n        } else {\n          updateChatMutedState({ chatId: chatId!, isMuted: !newAreNotificationsEnabled });\n        }\n      });\n\n      return newAreNotificationsEnabled;\n    });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    if (!chat) {\n      return;\n    }\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  if (!chat || chat.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      { hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            size=\"smaller\"\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" narrow ripple onClick={handleNotificationChange}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={areNotificationsEnabled}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n    };\n  },\n)(ChatExtra));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId, true);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { getStickerHashById, isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\nimport ReactionStaticEmoji from './ReactionStaticEmoji';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = reaction.type === 'custom';\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && getStickerHashById(centerIconId);\n  const mediaHashEffect = effectId && getStickerHashById(effectId);\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon);\n  const mediaDataEffect = useMedia(mediaHashEffect);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransitionDeprecated(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          noVideoOnMobile\n          loopLimit={loopLimit}\n          observeIntersectionForPlaying={observeIntersection}\n          forceAlways\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n          forceAlways\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            onEnded={handleEnded}\n            forceAlways\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaHash = staticIconId ? `document${staticIconId}` : undefined;\n  const mediaData = useMedia(mediaHash);\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  const shouldApplySizeFix = reaction.type === 'emoji' && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && reaction.type === 'emoji' && reaction.emoticon === '❤';\n\n  if (reaction.type === 'custom') {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <i className=\"ReactionStaticEmoji icon icon-heart\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  getPrivateChatUserId,\n  groupStatetefulContent,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatetefulContent({ story: lastMessageStory }),\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              topics={topics}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { senderId, isOutgoing, forwardInfo } = lastMessage || {};\n    const actualSenderId = isSavedDialog ? forwardInfo?.fromId : senderId;\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = actualSenderId ? selectPeer(global, actualSenderId) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const user = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n    const userStatus = privateChatUserId ? selectUserStatus(global, privateChatUserId) : undefined;\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n}) => {\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = topics\n      && Object.values(topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (topics && !hasUnmutedUnreadTopics);\n  }, [topics, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <i className=\"icon icon-heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <i className=\"icon icon-mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <i className=\"icon icon-pinned-chat\" />\n      </div>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <i className={buildClassName(styles.icon, 'icon', 'icon-archive-filled')} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <div className={buildClassName('Avatar', styles.avatar)}>\n            <i className=\"icon icon-archive-filled\" />\n          </div>\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <i className=\"icon icon-settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ApiDraft } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction, groupStatetefulContent } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatetefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <i className=\"icon icon-muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <i className={buildClassName(\n              'icon',\n              'icon-lock-badge',\n              styles.closedIcon,\n            )}\n            />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { senderId, isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = senderId\n      ? (selectUser(global, senderId) || selectChat(global, senderId)) : undefined;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../global/types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <i className=\"icon icon-close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus, ApiUser,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ApiDraft } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getExpiredMessageDescription,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isChatChannel,\n  isExpiredMessage,\n} from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const oldLang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? getMessageMediaThumbDataUri(mediaContent) : undefined;\n  const mediaBlobUrl = useMedia(mediaHasPreview ? getMessageMediaHash(mediaContent, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{oldLang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isExpiredMessage(lastMessage)) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          {getExpiredMessageDescription(oldLang, lastMessage)}\n        </p>\n      );\n    }\n\n    if (isAction) {\n      const isChat = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId);\n\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            oldLang,\n            lastMessage,\n            !isChat ? lastMessageSender as ApiUser : undefined,\n            isChat ? chat : undefined,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(oldLang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<i className=\"icon icon-share-filled chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<i className=\"icon icon-story-reply chat-prefix-icon\" />)}\n        {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, oldLang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <i className=\"icon icon-play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  getSenderTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getSenderTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport generateUniqueId from '../../../util/generateUniqueId';\nimport { SVG_NAMESPACE } from '../../../util/svgController';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const svg = document.createElementNS(SVG_NAMESPACE, 'svg');\n  svg.setAttribute('class', styles.ghost);\n  svg.setAttribute('width', `${width}px`);\n  svg.setAttribute('height', `${height}px`);\n  svg.setAttribute('style', `left: ${x}px; top: ${y}px;`);\n  svg.setAttribute('viewBox', `0 0 ${width} ${height}`);\n\n  const defs = document.createElementNS(SVG_NAMESPACE, 'defs');\n  svg.appendChild(defs);\n\n  const filter = createFilter(Math.min(width, height), seed);\n  filter.setAttribute('id', filterId);\n  defs.appendChild(filter);\n\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n  g.setAttribute('filter', `url(#${filterId})`);\n  svg.appendChild(g);\n\n  const foreignObject = document.createElementNS(SVG_NAMESPACE, 'foreignObject');\n  foreignObject.setAttribute('class', styles.elementContainer);\n  foreignObject.setAttribute('width', `${width}px`);\n  foreignObject.setAttribute('height', `${height}px`);\n  g.appendChild(foreignObject);\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(smallestSide: number, baseSeed: number = 42) {\n  const filter = document.createElementNS(SVG_NAMESPACE, 'filter');\n  filter.setAttribute('x', '-150%');\n  filter.setAttribute('y', '-150%');\n  filter.setAttribute('width', '400%');\n  filter.setAttribute('height', '400%');\n  filter.setAttribute('color-interpolation-filters', 'sRGB');\n\n  const feTurbulence = document.createElementNS(SVG_NAMESPACE, 'feTurbulence');\n  feTurbulence.setAttribute('type', 'fractalNoise');\n  feTurbulence.setAttribute('baseFrequency', '0.5');\n  feTurbulence.setAttribute('numOctaves', '1');\n  feTurbulence.setAttribute('result', 'dustNoise');\n  feTurbulence.setAttribute('seed', baseSeed.toString());\n  filter.appendChild(feTurbulence);\n\n  const feComponentTransfer = document.createElementNS(SVG_NAMESPACE, 'feComponentTransfer');\n  feComponentTransfer.setAttribute('in', 'dustNoise');\n  feComponentTransfer.setAttribute('result', 'dustNoiseMask');\n  filter.appendChild(feComponentTransfer);\n\n  const feFuncA = document.createElementNS(SVG_NAMESPACE, 'feFuncA');\n  feFuncA.setAttribute('type', 'linear');\n  feFuncA.setAttribute('slope', '5');\n  feFuncA.setAttribute('intercept', '0');\n  feComponentTransfer.appendChild(feFuncA);\n\n  const feFuncAAnimate = document.createElementNS(SVG_NAMESPACE, 'animate');\n  feFuncAAnimate.setAttribute('attributeName', 'slope');\n  feFuncAAnimate.setAttribute('values', '5; 2; 1; 0');\n  feFuncAAnimate.setAttribute('dur', `${DURATION}ms`);\n  feFuncAAnimate.setAttribute('fill', 'freeze');\n  feFuncA.appendChild(feFuncAAnimate);\n\n  const feComposite = document.createElementNS(SVG_NAMESPACE, 'feComposite');\n  feComposite.setAttribute('in', 'SourceGraphic');\n  feComposite.setAttribute('in2', 'dustNoiseMask');\n  feComposite.setAttribute('operator', 'in');\n  feComposite.setAttribute('result', 'dustySource');\n  filter.appendChild(feComposite);\n\n  const feTurbulence2 = document.createElementNS(SVG_NAMESPACE, 'feTurbulence');\n  feTurbulence2.setAttribute('type', 'fractalNoise');\n  feTurbulence2.setAttribute('baseFrequency', '0.015');\n  feTurbulence2.setAttribute('numOctaves', '1');\n  feTurbulence2.setAttribute('result', 'displacementNoice1');\n  feTurbulence2.setAttribute('seed', (baseSeed + 1).toString());\n  filter.appendChild(feTurbulence2);\n\n  const feTurbulence3 = document.createElementNS(SVG_NAMESPACE, 'feTurbulence');\n  feTurbulence3.setAttribute('type', 'fractalNoise');\n  feTurbulence3.setAttribute('baseFrequency', '1');\n  feTurbulence3.setAttribute('numOctaves', '2');\n  feTurbulence3.setAttribute('result', 'displacementNoice2');\n  feTurbulence3.setAttribute('seed', (baseSeed + 2).toString());\n  filter.appendChild(feTurbulence3);\n\n  const feMerge = document.createElementNS(SVG_NAMESPACE, 'feMerge');\n  feMerge.setAttribute('result', 'combinedNoise');\n  filter.appendChild(feMerge);\n\n  const feMergeNode1 = document.createElementNS(SVG_NAMESPACE, 'feMergeNode');\n  feMergeNode1.setAttribute('in', 'displacementNoice1');\n  feMerge.appendChild(feMergeNode1);\n\n  const feMergeNode2 = document.createElementNS(SVG_NAMESPACE, 'feMergeNode');\n  feMergeNode2.setAttribute('in', 'displacementNoice2');\n  feMerge.appendChild(feMergeNode2);\n\n  const feDisplacementMap = document.createElementNS(SVG_NAMESPACE, 'feDisplacementMap');\n  feDisplacementMap.setAttribute('in', 'dustySource');\n  feDisplacementMap.setAttribute('in2', 'combinedNoise');\n  feDisplacementMap.setAttribute('scale', '0');\n\n  feDisplacementMap.setAttribute('xChannelSelector', 'R');\n  feDisplacementMap.setAttribute('yChannelSelector', 'G');\n  filter.appendChild(feDisplacementMap);\n\n  const feDisplacementMapAnimate = document.createElementNS(SVG_NAMESPACE, 'animate');\n  feDisplacementMapAnimate.setAttribute('attributeName', 'scale');\n  feDisplacementMapAnimate.setAttribute('values', `0; ${smallestSide * 3}`);\n  feDisplacementMapAnimate.setAttribute('dur', `${DURATION}ms`);\n  feDisplacementMapAnimate.setAttribute('fill', 'freeze');\n  feDisplacementMap.appendChild(feDisplacementMapAnimate);\n\n  return filter;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { MessageListType } from '../../global/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <i className=\"icon icon-language\" aria-hidden />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <i className=\"icon icon-search\" aria-hidden />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <i className=\"icon icon-phone\" aria-hidden />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <i className=\"icon icon-user\" aria-hidden />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <i className=\"icon icon-more\" aria-hidden />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  getIsHeavyAnimating,\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <i className=\"icon icon-lock-badge placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {lang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <i className=\"icon icon-smile\" />\n          <i className=\"icon icon-keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <i className=\"icon icon-smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import React, { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import {\n  type RefObject,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n} : {\n  ref?: RefObject<RefType | null>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  // eslint-disable-next-line no-null/no-null\n  const localRef = useRef<RefType>(null);\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <i className={buildClassName(styles.expiredIcon, 'icon icon-story-expired')} aria-hidden />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const anchorRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || photo.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, photo]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {fullMediaData && (\n        <img\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <i ref={downloadButtonRef} className=\"icon icon-download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getMessageMediaThumbDataUri,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <i className=\"icon icon-download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div className=\"message-media-duration\">\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type {\n  ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  message: ApiSponsoredMessage;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenu: FC<OwnProps> = ({\n  isOpen,\n  message,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = message.sponsorInfo || !shouldSkipAbout || message.canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {message.sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(message.canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {message.canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredMessageContextMenu from './SponsoredMessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  message,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsoredMessage,\n    hideSponsoredMessages,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({ chatId: message.chatId });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsoredMessages();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsoredMessage({ peerId: message.chatId, randomId: message.randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredMessageContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        message={message}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  clickArg,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const { cancelMediaDownload } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || video.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, video]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const previewRef = useMediaTransition<HTMLImageElement>((hasThumb || previewBlobUrl) && !isPlayerReady);\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <i ref={playButtonRef} className=\"icon icon-large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <i className=\"icon icon-download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <i className=\"icon icon-message-failed playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonText } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n  isEditing?: boolean;\n};\n\nconst WebPage: FC<OwnProps> = ({\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  onMediaClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n  isEditing,\n}) => {\n  const { openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const handleQuickButtonClick = useLastCallback(() => {\n    if (!webPage) return;\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, !hasCustomColor);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n    mediaSize,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonText(type) : undefined;\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    const { width, height } = calculateMediaDimensions({\n      media: webPage.photo,\n      isOwn: message.isOutgoing,\n      isInWebPage: true,\n      asForwarded,\n      noAvatars,\n      isMobile,\n    });\n    isSquarePhoto = (width === height || mediaSize === 'small') && mediaSize !== 'large';\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    !isEditing && inPreview && 'interactive',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonLangKey && 'with-quick-button',\n  );\n\n  function renderQuickButton(langKey: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        onClick={handleQuickButtonClick}\n      >\n        {lang(langKey)}\n      </Button>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName('WebPage--content', isStory && 'is-story')}>\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {photo && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {isArticle && (\n          <div className=\"WebPage-text\">\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {!inPreview && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {!inPreview && video && (\n          <Video\n            video={video}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={handleMediaClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{lang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonLangKey && renderQuickButton(quickButtonLangKey)}\n    </div>\n  );\n};\n\nexport default memo(WebPage);\n","// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonText(type?: string) {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'lng_view_button_request_join';\n    case 'telegram_message':\n      return 'lng_view_button_message';\n    case 'telegram_bot':\n      return 'lng_view_button_bot';\n    case 'telegram_voicechat':\n      return 'lng_view_button_voice_chat';\n    case 'telegram_livestream':\n      return 'lng_view_button_voice_chat_channel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'lng_view_button_group';\n    case 'telegram_channel':\n      return 'lng_view_button_channel';\n    case 'telegram_user':\n      return 'lng_view_button_user';\n    case 'telegram_botapp':\n      return 'lng_view_button_bot_app';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'lng_view_button_story';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'lng_view_button_boost';\n    case 'telegram_stickerset':\n      return 'lng_view_button_stickerset';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n} : {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport cycleRestrict from '../util/cycleRestrict';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\n\nconst RADIUS = 7;\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n  radius = RADIUS,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    offscreenRef.current = canvas.transferControlToOffscreen();\n\n    requestMediaWorker({\n      name: 'offscreen-canvas:blurThumb',\n      args: [offscreenRef.current, thumbData, radius],\n      transferables: [offscreenRef.current],\n    }, workerIndex);\n  }, [thumbData, isDisabled, radius, workerIndex]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean) : CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../global/types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { type RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n} : {\n  anchorRef: RefObject<HTMLDivElement>;\n  overlayRef: RefObject<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji, ApiReactionPaid } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiReactionPaid;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const handleClick = useLastCallback(() => {\n    if (reaction.type === 'paid') {\n      onSendPaidReaction?.();\n      return;\n    }\n\n    onToggleReaction(reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onShowPaidReactionModal?.();\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onShowPaidReactionModal, handleContextMenuHide, isContextMenuOpen]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && reaction.type !== 'paid' && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      ref={ref}\n      style={style}\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {reaction.type === 'paid' ? (\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.StarReaction}\n          size={REACTION_SIZE}\n          noLoop={false}\n        />\n      ) : (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          size={REACTION_SIZE}\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiReaction,\n  ApiReactionCount,\n  ApiReactionCustomEmoji,\n  ApiReactionPaid,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype RenderableReactions = (ApiAvailableReaction | ApiReactionCustomEmoji | ApiReactionPaid)[];\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  isWithPaidReaction?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  isWithPaidReaction,\n  onClose,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions: RenderableReactions = reactions?.map((reaction) => {\n      const isCustomReaction = reaction.type === 'custom';\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n         && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    const sortedReactions = sortReactions(filteredReactions, topReactions);\n    if (isWithPaidReaction) {\n      sortedReactions.unshift({ type: 'paid' });\n    }\n    return sortedReactions;\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions, isWithPaidReaction,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  onSendPaidReaction={onSendPaidReaction}\n                  onShowPaidReactionModal={onShowPaidReactionModal}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <i className=\"icon icon-down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu, undefined, undefined, undefined, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true, shouldAvoidNegativePosition: true }));\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuAnchor && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n  ApiChannelStatistics |\n  ApiGroupStatistics |\n  ApiPostStatistics |\n  ApiBoostStatistics |\n  ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const lang = useOldLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}<span className={styles.decimalPart}>.{decimalTonPart}</span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ ${integerUsdPart}<span className={styles.decimalUsdPart}>.{decimalUsdPart}</span>\n        </span>\n        <h3 className={styles.tableHeading}>{lang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n  const { balances, usdRate } = (statistics as ApiChannelMonetizationStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getSenderTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getSenderTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressieveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideos) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): StateProps => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element!.clientWidth!);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url': {\n            const isShiny = isActive && (mediaArea.type !== 'channelPost');\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","import type { ApiLimitType, GlobalState } from '../types';\n\nimport { DEFAULT_LIMITS } from '../../config';\nimport { selectIsCurrentUserPremium } from './users';\n\nexport function selectCurrentLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) {\n    return DEFAULT_LIMITS[limit][0];\n  }\n\n  const isPremium = selectIsCurrentUserPremium(global);\n  const { limits } = appConfig;\n\n  // When there are new limits when updating a layer, until we get a new configuration, we must use the default values\n  const value = limits[limit]?.[isPremium ? 1 : 0] ?? DEFAULT_LIMITS[limit][isPremium ? 1 : 0];\n  if (limit === 'dialogFilters') return value + 1; // Server does not count \"All\" as folder, but we need to\n  return value;\n}\n\nexport function selectPremiumLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) return DEFAULT_LIMITS[limit][1];\n\n  const { limits } = appConfig;\n\n  return limits[limit][1];\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: '',\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : getSuggestedFolderName(state.includeFilters),\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useInterval(callback: NoneToVoidFunction, delay?: number, noFirst = false) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (delay === undefined) {\n      return undefined;\n    }\n\n    const id = setInterval(() => savedCallback(), delay);\n    if (!noFirst) savedCallback();\n\n    return () => clearInterval(id);\n  }, [delay, noFirst]);\n}\n\nexport default useInterval;\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useOldLang from './useOldLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useOldLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import { useCallback, useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  }, [onStart, threshold]);\n\n  const cancel = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd, onClick]);\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { makeProgressiveLoader } from '../util/progressieveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { ElectronEvent } from '../../types/electron';\n\nimport { IS_IOS } from '../../util/windowEnvironment';\n\ntype ElementType = HTMLElement;\ntype RefType = {\n  current: ElementType | null;\n};\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen(elRef: RefType, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: ElementType) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_AVAILABLE = 'update-available',\n  DEEPLINK = 'deeplink',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_TRAFFIC_LIGHT_POSITION = 'set-traffic-light-position',\n  SET_IS_AUTO_UPDATE_ENABLED = 'set-is-auto-update-enabled',\n  GET_IS_AUTO_UPDATE_ENABLED = 'get-is-auto-update-enabled',\n  SET_IS_TRAY_ICON_ENABLED = 'set-is-tray-icon-enabled',\n  GET_IS_TRAY_ICON_ENABLED = 'get-is-tray-icon-enabled',\n  RESTORE_LOCAL_STORAGE = 'restore-local-storage',\n}\n\nexport type TrafficLightPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setTrafficLightPosition: (position: TrafficLightPosition) => Promise<void>;\n  setIsAutoUpdateEnabled: (value: boolean) => Promise<void>;\n  getIsAutoUpdateEnabled: () => Promise<boolean>;\n  setIsTrayIconEnabled: (value: boolean) => Promise<void>;\n  getIsTrayIconEnabled: () => Promise<boolean>;\n  restoreLocalStorage: () => Promise<void>;\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import EMOJI_REGEX from '../../lib/twemojiRegex';\nimport fixNonStandardEmoji from './fixNonStandardEmoji';\n\nconst DETECT_UP_TO = 100;\nconst MAX_LENGTH = DETECT_UP_TO * 8; // Maximum 8 code points per one emoji.\n\nexport default function parseEmojiOnlyString(text: string): number | false {\n  const standardizedText = fixNonStandardEmoji(text);\n  const lines = standardizedText.split('\\n');\n  const textWithoutNewlines = lines.join('');\n  if (textWithoutNewlines.length > MAX_LENGTH) {\n    return false;\n  }\n\n  const totalCount = countIfEmojiOnly(textWithoutNewlines);\n  if (!totalCount || totalCount > DETECT_UP_TO) {\n    return false;\n  }\n\n  // Calculate max emoji count per column or line. Used in UI to determine the size of the emoji.\n  let max = lines.length;\n  for (const line of lines) {\n    const count = countIfEmojiOnly(line);\n    if (count === false) {\n      return false;\n    }\n    if (count > max) {\n      max = count;\n    }\n  }\n\n  return max;\n}\n\nfunction countIfEmojiOnly(line: string): false | number {\n  const iterator = line.matchAll(EMOJI_REGEX);\n  let count = 0;\n  let currentIndex = 0;\n\n  for (const match of iterator) {\n    if (match.index !== currentIndex) {\n      return false;\n    }\n\n    count++;\n    currentIndex = match.index + match[0].length;\n  }\n\n  if (currentIndex !== line.length) {\n    return false;\n  }\n\n  return count;\n}\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import windowSize from './windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"paid\":\"N3lcrsh8\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\",\"paidCounter\":\"CW4UO1n3\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","_ref","className","onPaneStateChange","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useOldLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","_ref2","filter","useEffect","subscribed","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","isRendering","ref","shouldRender","useHeaderPane","isOpen","onStateChange","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","start","end","style","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMediaDownload","downloadMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","media","mediaSource","isVoice","isSeeking","useRef","isRtl","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMediaHash","coverBlobUrl","useMedia","ApiMediaFormat","BlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","useLastCallback","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","arguments","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","i","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","current","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","originMessage","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","push","contentClassName","renderWithTitle","dir","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","ripple","color","ariaLabel","backgroundImage","nonInteractive","Icon","name","AnimatedIcon","tgsUrl","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","draggable","viewBox","rx","ry","stroke","renderVoice","DEFAULT_LIMIT","limit","badgeText","renderingBadgeText","styles","root","peer","Avatar","avatar","badge","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","add","body","appendChild","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","href","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","activeElement","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","includes","pastedText","getData","substring","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","preventDefault","getFilesFromDataTransferItems","textToPaste","entities","text","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","Set","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","setTimeout","pause","props","AttachmentModal","useModuleLoader","Bundles","Extra","threadId","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","canEditMedia","editingMessage","isAttachMenuOpen","openAttachMenu","closeAttachMenu","useFlag","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","selectCurrentMessageList","selectChatMessage","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","renderKeyboardButtonText","noCompact","j","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","shouldAnimate","selectCanAnimateInterface","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","selectSender","selectForwardedSender","selectPeer","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","currentUserId","onClear","resetDraftReplyInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","oldLang","useLang","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShown","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","querySelector","renderingSender","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","attachmentSettings","selectTheme","webPagePreview","getHtml","isEditing","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","updateAttachmentSettings","formattedTextWithLinkRef","isInvertedMedia","isSmallerMedia","webPageMediaSize","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","entity","url","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","hasMediaSizeOptions","hasLargeMedia","renderingWebPage","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","onContainerClick","MainButtonState","_ref5","storyId","chatBot","isSystemBot","selectBot","isChatWithBot","isChatWithUser","isUserId","chatBotFullInfo","selectUserFullInfo","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","scheduledIds","selectScheduledIds","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","user","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","isContactRequirePremium","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePreviousDeprecated","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","useDraft","resetComposer","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","EDITABLE_INPUT_CSS_SELECTOR","shouldSetNoWebPage","has","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSend","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","webPageUrl","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","_ref4","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","sticker","shouldPreserveInput","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","emoticon","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","isQuiz","shouldBeAnonymous","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","ComposerEmbeddedMessage","WebPagePreview","BotMenuButton","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","AttachMenu","BotKeyboardMenu","CustomEmojiTooltip","key","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","allowDisabledClick","noFastClick","MessageEffect","shouldPlay","onStop","CustomSendMenu","canSchedule","onSendSchedule","onRemoveEffect","withEffects","hasCurrentEffect","isSavedDialog","isPrivateChat","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","getDocumentMediaHash","hasPreview","getDocumentHasPreview","thumbDataUri","getMediaThumbUri","localBlobUrl","previewBlobUrl","previewData","withMediaViewer","innerMediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","checked","label","onCheck","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","src","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","selectTopic","messagesCount","selectThreadMessagesCount","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadMoreProfilePhotos","isTopic","isMin","isRestricted","isPreload","handleAvatarViewerOpen","hasMedia","isAvatarView","mediaIndex","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","DotAnimation","TypingStatus","Transition","shouldRestoreHeight","activeKey","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","isProtected","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isVisible","isGif","Keys","DEFAULT_TEXT","description","isPasswordVisible","hint","submitLabel","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","password","setPassword","canSubmit","setCanSubmit","focusDelayTimeoutMs","select","event","autoComplete","tabIndex","onChange","MIN_PASSWORD_LENGTH","role","forceShowSelf","isSynced","userStatus","selectUserStatus","isSelf","customPeer","noFake","noVerified","adminMember","iconElement","rightElement","loadFullUser","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getPhotoMediaHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","thumbnail","dataUri","blurredThumbCanvasRef","currentTime","specialIcon","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","emojiStatus","emojiStatusSticker","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaHash","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","totalPhotosLength","count","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","_","renderPhotoTabs","personalPhoto","fallbackPhoto","renderPhoto","canCopyTitle","isSystemBotChat","isReadDateRestrictedByMe","membersCount","renderStatus","ProfilePhoto","iconEmojiId","observeIntersectionForPlaying","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","NBSP","EmbeddedMessage","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getSenderTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","blobUrl","isFullVideo","getPictogramDimensions","srcUrl","shouldRenderVideo","renderPictogram","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","noLineBreaks","emojiSize","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isChatGroup","isReplyToQuote","renderSender","freezeWhenClosed","ICON_POSITIONS","inline","block","opacity","EMOJI_SIZE","containerRef","emojiImage","setEmojiImage","dpr","useDevicePixelRatio","customEmoji","useCustomEmoji","previewMediaHash","getStickerMediaHash","previewUrl","customColor","useDynamicColorListener","preloadAfterHeavyAnimation","useThrottleForHeavyAnimation","preloadImage","then","updateCanvas","clearRect","save","translate","drawImage","restore","tintColor","isLottie","globalCompositeOperation","fillRect","updateCanvasAfterHeavyAnimation","updateCanvasSize","parentWidth","parentHeight","handleResize","entry","contentRect","useResizeObserver","container","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","renderMessageText","highlight","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","statefulContent","getMessageStatefulContent","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shift","shiftedRanges","startMinute","endMinute","sort","a","b","last","DAYS","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","forceUpdate","useForceUpdate","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","ListItem","iconClassName","multiline","isStatic","narrow","withColorTransition","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","birthday","isInSettings","openGiftModal","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","buildCollectionByKey","split","digit","effectSticker","randomEffect","random","hash","effectHash","column","valueKey","canGiftPremium","isPremium","handleOpenGiftModal","forUserId","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","index","StickerView","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","runDebounced","debounce","chatOrUserId","countryList","phoneCodes","phoneCodeList","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","userFullInfo","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","hasMainMiniApp","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","requestMainWebView","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","areNotificationsEnabled","setAreNotificationsEnabled","prevPeerId","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","newAreNotificationsEnabled","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","handleOpenApp","extractCurrentThemeParams","shouldMarkBotTrusted","appTermsInfo","terms","withNodes","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","UserBirthday","Switcher","inactive","BusinessHours","usernameList","otherUsernames","usernameLinks","s","particleSize","onEnded","stickerHash","getStickerHashById","previewMediaData","paths","generateRandomDropPath","buildStyle","path","withSharedAnimation","onAnimationEnd","ICON_SIZE","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","activeReactions","genericEffects","effectSize","shouldPause","stopActiveReaction","isCustom","availableReaction","r","centerIconId","centerIcon","assignedEffectId","aroundAnimation","assignedId","available","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","ReactionStaticEmoji","noPlay","noVideoOnMobile","AnimatedSticker","animatedIcon","roundToNearestEven","play","onLoad","CustomEmojiEffect","withIconHeart","staticIconId","staticIcon","shouldApplySizeFix","shouldReplaceWithHeartIcon","blankUrl","ChatFolderModal","MuteChatModal","lastMessageId","selectChatLastMessageId","lastMessage","selectChatLastMessage","senderId","isOutgoing","actualSenderId","fromId","replyToMessageId","getMessageReplyInfo","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","privateChatUserId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","topicsInfo","selectTopicsInfo","lastMessageStory","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","listedTopicIds","topics","topicsById","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","useEnsureMessage","renderSubtitle","useChatListEntry","statefulMediaContent","groupStatetefulContent","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","handleReport","contextActions","useChatContextActions","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","subscriptionUntil","StoryViewerOrigin","ChatList","StarIcon","ChatBadge","shouldShowOnlyMostImportant","forceHidden","ChatCallStatus","LastMessageMeta","DeleteChatModal","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","elements","renderContent","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","isMinimized","handler","actionExpand","actionHide","isHidden","compact","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","fluid","pill","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","isArchiveInList","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","rect","currentTarget","clientY","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","scrollHeight","deltaY","passive","useTopOverscroll","InfiniteScroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onLoadMore","onDragLeave","UnconfirmedSession","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","Loading","EmptyFolder","canManageTopics","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","selectTopics","canDelete","selectCanDeleteTopic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","beginHeavyAnimation","waitForTransitionEnd","transform","onTransitionEnd","GroupChatInfo","HeaderActions","canExpandActions","isForForum","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","shouldTryLoadingStory","useEnsureStory","mediaContent","mediaHasPreview","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","isExpiredMessage","getExpiredMessageDescription","renderActionMessageText","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","ANIMATION_END_DELAY","ChatForumLastMessage","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","scrollX","scrollY","innerWidth","innerHeight","seed","filterId","SNAP_EFFECT_ID","generateUniqueId","svg","createElementNS","SVG_NAMESPACE","ghost","defs","smallestSide","baseSeed","feTurbulence","feComponentTransfer","feFuncA","feFuncAAnimate","feComposite","feTurbulence2","feTurbulence3","feMerge","feMergeNode1","feMergeNode2","feDisplacementMap","feDisplacementMapAnimate","createFilter","g","foreignObject","elementContainer","computedStyle","getComputedStyle","clone","getPropertyValue","snapContainer","once","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","screen","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","isTouchScreen","Text","iconSvg","mediaDataWithReplacedColors","doc","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","AttachBotIcon","shortName","isDisclaimerNeeded","withPortal","CustomSend","isQuick","isGeneric","svgRef","isHovered","markHovered","unmarkHovered","relatedTarget","toTarget","baseVal","useEffectOnce","onDrop","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","containerSelector","onDragOver","handleDragOver","clearTimeout","DropTarget","AbsoluteVideo","constructor","videoUrl","options","_defineProperty","this","load","recalculatePositionAndSize","paused","safePlay","destroy","updatePosition","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","colorFilter","useColorFilter","playersById","Map","clearPlayers","player","delete","synchronizeElements","playerIdsToClear","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","set","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","getIsHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","onKeyDown","isComposing","altKey","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","mimeType","quick","shouldSendAsFile","img","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","replaceWithTeact","STARS_ICON_PLACEHOLDER","MAX_NESTING_PARENTS","commonAncestorContainer","parentNode","iterations","parentElement","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","CLOSE_DURATION","RESIZE_THROTTLE","providedRef","withResizeObserver","setShouldRender","localRef","lastHeightRef","reset","useUnmountCleanup","handleUpdate","applyAnimationState","list","noTransition","cumulativeHeight","state","shiftPx","apply","setExtraStyles","zIndex","String","transition","isPanelOpen","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","isMirrored","anchorRef","canLoad","startPlaying","stopPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","useOverlayPosition","overlayRef","isForMessageEffect","effectClassName","messageText","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","isInWebPage","clickArg","isPaidPreview","mediaType","withBlurredBackground","useBlurredMediaThumbRef","useMediaTransition","showSpoiler","wasLoadDisabled","spinnerRef","useShowTransition","noMountTransition","withShouldRender","downloadButtonRef","shouldRenderDownloadButton","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","componentClassName","MIN_MEDIA_HEIGHT","dimensionsStyle","withAnimation","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","PI","stopPrevious","playerRef","circleRef","getVideoMediaHash","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","strokeDashOffset","capturePlaying","togglePlaying","stopCurrentAudio","handleTimeUpdate","isPriority","onTimeUpdate","cx","cy","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","sponsorInfo","canReport","onItemClick","openAboutAdsModal","reportSponsoredMessage","hideSponsoredMessages","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","additionalInfo","handleReportSponsoredMessage","randomId","SponsoredMessageContextMenu","canAutoPlay","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","hasThumb","isPreviewPreloaded","canLoadPreview","previewRef","isInline","isUnsupported","useUnsupportedMedia","playButtonRef","setPlayProgress","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","handleClickOnSpinner","onAudioPlay","onCancelMediaTransfer","openTelegramLink","stickersRef","handleMediaClick","handleContainerClick","handleQuickButtonClick","hasCustomColor","isWithTextColor","documents","mediaSize","isStory","quickButtonLangKey","getWebpageButtonText","isArticle","isSquarePhoto","isMediaInteractive","BaseStory","Photo","Video","Audio","Document","isEmoji","isRectangular","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","requestMediaWorker","MAX_WORKERS","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isPhoto","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","RADIUS","lastWorkerIndex","thumbData","workerIndex","cycleRestrict","offscreenRef","transferControlToOffscreen","transferables","useOffscreenCanvasBlur","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","OFFSET_X","anchorRect","elementRect","anchorCenterY","anchorBottomY","messagesContainer","REACTION_SIZE","chosen","noAppearAnimation","isLocked","onSendPaidReaction","onShowPaidReactionModal","StarReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","cn","createClassNameBuilder","defaultTagReactions","enabledReactions","currentReactions","reactionsLimit","isForEffects","isWithPaidReaction","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","sortedReactions","sortReactions","unshift","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","hintText","parts","isPrimary","ReactionSelectorReaction","ReactionSelectorCustomReaction","submitText","initialValue","setText","handleTextChange","handleSubmit","isSlim","InputText","teactExperimentControlled","tag","isChosen","chosenClassName","withCount","withContextMenu","onRemove","editSavedReactionTag","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","handleRemoveClick","handleRenameTag","newTitle","shouldAvoidNegativePosition","own","tagText","tail","tailFill","PromptDialog","selectCurrentChat","deleteChatMember","handleDeleteChatMember","textParts","useAsyncRendering","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","statistics","isToncoin","renderBalanceCell","balance","usdRate","integerTonPart","decimalTonPart","toFixed","integerUsdPart","decimalUsdPart","period","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","part","percentage","change","isChangeNegative","renderOverviewItemValue","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","archived","isClosing","hidden","closing","useHorizontalScroll","StoryRibbonButton","byPeerId","isRibbonShown","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","toggleAvatar","selectByPeerId","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","unloadVideo","preloadProgressive","preloadHashes","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideos","getPreloadMediaHashes","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","ownProps","restrictedEmoji","selectRestrictedEmoji","temperatureC","backgroundColor","convertToRGBA","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","withTranslucentThumb","navigator","formatTemperature","STORY_ASPECT_RATIO","prepareStyle","mediaWidth","rotation","coordinates","pixelRadius","pixelWidth","pixelHeight","isStoryPlaying","closeStoryViewer","openUrl","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","channelId","handleMediaAreaClick","MediaAreaSuggestedReaction","MediaAreaWeather","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","phoneCall","adminId","selectCanInviteToActiveGroupCall","appConfig","DEFAULT_LIMITS","limits","selectPremiumLimit","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","noFirst","savedCallback","setInterval","clearInterval","resolver","deps","msOrSchedulerFn","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","DEFAULT_THRESHOLD","threshold","isLongPressActive","isPressed","timerId","canProcessEvent","touches","cancel","onMouseUp","onTouchStart","onTouchEnd","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","noLoad","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeElectronListener","electron","on","ElectronEvent","FULLSCREEN_CHANGE","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","ConnectorClass","channel","throttleWithTickEnd","payloads","pendingPayloads","pendingTransferables","postMessage","_len","_key","postMessageOnTickEnd","request","messageData","requestStates","requestStatesByCallback","restMessageData","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","postMessagesOnTickEnd","createConnector","worker","connector","handleMessage","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","click","DETECT_UP_TO","MAX_LENGTH","lines","fixNonStandardEmoji","textWithoutNewlines","countIfEmojiOnly","line","iterator","matchAll","EMOJI_REGEX","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","messageEl","firstChild","LUMA_THRESHOLD","image","ratio","outputType","Image","onload","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","averageColor","getAverageColor","fillColor","getColorLuma","res","ctx2D","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","isElementInViewport","windowHeight","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","Worker","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","B","Bold","STRONG","I","Italic","EM","INS","Underline","U","S","Strike","STRIKE","DEL","CODE","Code","PRE","Pre","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","Node","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","callApi","fullSize","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange"],"sourceRoot":""}